[
    {
        "number": 3000,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n2 3') == '5'\nassert solution('8\\n( 2 ( 2 1 ) ) 3') == '9'\nassert solution('4\\n( 12 3 )') == '36'\nassert solution('6\\n( ( 2 3 ) )') == '5'\nassert solution('6\\n( ( 2 3 ) )') == '5'"
    },
    {
        "number": 3000,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"5\"\nassert solution(\"( 2 ( 2 1 ) ) 3\") == \"9\"\nassert solution(\"( ( 2 3 ) )\") == \"5\"\nassert solution(\"( ( ( 2 3 ) ) )\") == \"5\"\nassert solution(\"( ( ( ( 2 3 ) ) ) )\") == \"5\"\n"
    },
    {
        "number": 3000,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n2 3\n''') == '5'\n\nassert solution('''8\n( 2 ( 2 1 ) ) 3\n''') == '9'\n\nassert solution('''4\n( 12 3 )\n''') == '36'\n\nassert solution('''6\n( 2 ) ( 3 )\n''') == '5'\n\nassert solution('''6\n( ( 2 3 ) )\n''') == '5'"
    },
    {
        "number": 3000,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3') == '5'\nassert solution('( 2 ( 2 1 ) ) 3') == '9'\nassert solution('( 12 3 )') == '36'\nassert solution('( 2 ) ( 3 )') == '5'\nassert solution('( ( 2 3 ) )') == '5'\n"
    },
    {
        "number": 3000,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2') == '2'\nassert solution('(2)') == '5'\nassert solution('(2 3)') == '5'\nassert solution('(12 3 )') == '36'\nassert solution('(12 3 )') == '36'\n"
    },
    {
        "number": 3000,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == str(solution(input()))\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 3000,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"(12 3 )\") == 5\nassert solution(\"( ( 2 3 ) )\") == 5\nassert solution(\"( ( 2 3 ) )\") == 5\nassert solution(\"( ( 2 3 ) )\") == 5\nassert solution(\"( ( 2 3 ) )\") == 5\n"
    },
    {
        "number": 3000,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"5\"\nassert solution(\"(2 3)\") == \"5\"\nassert solution(\"(12 3)\") == \"36\"\nassert solution(\"(2 (2 1 ))\") == \"5\"\nassert solution(\"(2 (3))\") == \"5\"\n"
    },
    {
        "number": 3000,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2\") == 2\nassert solution(\"2 3\") == 5\nassert solution(\"8\") == 36\nassert solution(\"( 2 ( 2 1 ) ) 3\") == 9\nassert solution(\"( 12 3 )\") == 36\n"
    },
    {
        "number": 3000,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 3001,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(sample_input) == sample_output\n\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 3001,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('99999') == '4'\nassert solution('999899') == '5'\nassert solution('9998999899') == '8'\n"
    },
    {
        "number": 3001,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"009990001\") == \"3\"\nassert solution(\"29998\") == \"5\"\nassert solution(\"600\") == \"4\"\nassert solution(\"981\") == \"2\"\n"
    },
    {
        "number": 3001,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(str(0)) == str(0)\nassert solution(str(10)) == str(0)\nassert solution(str(111)) == str(1)\nassert solution(str(9111)) == str(2)\nassert solution(str(11011)) == str(3)\n"
    },
    {
        "number": 3001,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('1') == '1'\nassert solution('9') == '0'\nassert solution('99') == '2'\n"
    },
    {
        "number": 3001,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('0') == '0'\nassert solution('00') == '0'\nassert solution('0099') == '9'\n"
    },
    {
        "number": 3001,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6') == '0'\nassert solution('9990001') == '3'\nassert solution('29998') == '5'\nassert solution('9899999') == '4'\nassert solution('98998') == '2'\n"
    },
    {
        "number": 3001,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('2') == ''\nassert solution('42') == ''\nassert solution('212') == '1'\nassert solution('2112') == '2'\n"
    },
    {
        "number": 3001,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n
    },
    {
        "number": 3001,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('990') == '0'\nassert solution('9900') == '3'\nassert solution('0998') == '5'\nassert solution('99999') == '7'\nassert solution('9999988') == '14'\n"
    },
    {
        "number": 3002,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n2017 4 0\n2017 8 12000\n2018 8 42000''') == 'tampered odometer'\nassert solution('''2\n2017 11 0\n2018 1 1000''') == 'insufficient service'\nassert solution('''2\n2013 1 0\n2013 2 0''') == 'tampered odometer'\nassert solution('''2\n2017 5 0\n2017 8 0\n2018 7 0''') == 'insufficient service'\nassert solution('''2\n2017 11 0\n2018 1 1000''') == 'tampered odometer'\n"
    },
    {
        "number": 3002,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('test') == 'insufficient service'\nassert solution('tampered odometer') == 'tampered odometer'\nassert solution('2017 11 0') =='seems legit'\nassert solution('2017 8 0') == 'insufficient service'\n"
    },
    {
        "number": 3002,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n3\n2017 4 0\n2017 8 12000\n2018 8 42000\n''') == 'tampered odometer'\n\nassert solution(\n'''\n3\n2017 4 0\n2017 8 12000\n2018 8 42001\n''') == 'insufficient service'\n\nassert solution(\n'''\n3\n2017 4 0\n2017 8 12000\n2018 8 12500\n''') =='seems legit'\n\nassert solution(\n'''\n2\n2017 11 0\n2018 1 1000\n''') == 'tampered odometer'\n\nassert solution(\n'''\n2\n2013 1 0\n2013 2 0\n''') =='seems legit'"
    },
    {
        "number": 3002,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"tampered odometer\"\nassert solution(stdin) == \"insufficient service\"\nassert solution(stdin) == \"seems legit\"\nassert solution(stdin) == \"tampered odometer\"\nassert solution(stdin) == \"insufficient service\"\n"
    },
    {
        "number": 3002,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"insufficient service\""
    },
    {
        "number": 3002,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n2017 4 0\n2017 8 12000\n2018 8 42000''') == 'insufficient service'\nassert solution('''3\n2017 4 0\n2017 8 12000\n2018 8 42001''') == 'tampered odometer'\nassert solution('''2\n2017 11 0\n2018 1 1000''') =='seems legit'\nassert solution('''2\n2013 1 0\n2013 2 0''') =='seems legit'\nassert solution('''2\n2017 11 0\n2018 1 1000\n2017 12 0\n2018 2 0''') =='seems legit'\n'''\n"
    },
    {
        "number": 3002,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\") == \"seems legit\"\nassert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\") == \"insufficient service\"\nassert solution(\"2\\n2017 11 0\\n2018 1 1000\") == \"tampered odometer\"\nassert solution(\"2\\n2013 1 0\\n2013 2 0\") == \"seems legit\"\nassert solution(\"4\\n2013 1 0\\n2013 2 0\\n2014 1 0\\n2014 2 0\") == \"seems legit\"\n"
    },
    {
        "number": 3002,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''2017 4 0\n2017 8 12000\n2018 8 42000''') == 'tampered odometer'\nassert solution(\n'''2017 4 0\n2017 8 12000\n2018 8 42001''') == 'insufficient service'\nassert solution(\n'''2017 11 0\n2018 1 1000''') =='seems legit'\nassert solution(\n'''2018 1 0''') =='seems legit'\nassert solution(\n'''2018 1 1000''') == 'insufficient service'\n"
    },
    {
        "number": 3002,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n2017 4 0\n2017 8 12000\n2018 8 42000\n''') =='seems legit'\nassert solution('''\n2017 4 0\n2017 8 12000\n2018 8 42001\n''') == 'insufficient service'\nassert solution('''\n2017 11 0\n2018 1 1000\n''') == 'tampered odometer'\nassert solution('''\n2010 1 0\n2010 2 0\n2010 3 0\n2010 4 0\n2010 5 0\n2010 6 0\n2010 7 0\n2010 8 0\n2010 9 0\n2010 10 0\n2010 11 0\n2010 12 0\n2010 13 0\n2010 14 0\n2010 15 0\n2010 16 0\n2010 17 0\n2010 18 0\n2010 19 0\n2010 20 0\n2010 21 0\n2010 22 0\n2010 23 0\n2010 24 0\n2010 25 0\n2010 26 0\n2010 27 0\n2010 28 0\n2010 29 0\n2010 30 0\n2010 31 0\n2010 32 0\n2010 33 0\n2010 34 0\n2010 35 0\n2010 36 0\n2010 37 0\n2010 38 0\n2010 39 0\n2010 40 0\n2010 41 0\n2010 42 0\n2010 43 0\n2010 44 0\n2010 45 0\n2010 46 0\n2010 47 0\n2010 48 0\n2010 49 0\n2010 50 0\n2010 51 0\n2010 52 0\n2010 53 0\n2010 54 0\n2010 55 0\n2010 56 0\n2010 57 0\n2010 58 0\n2010 59 0\n2010 60 0\n2010 61 0\n2010 62 0\n2010 63 0\n2010 64 0\n2010 65 0\n2010 66 0\n2010 67 0\n2010 68 0\n2010 69 0\n2010 70 0\n2010 71 0\n2010 72 0\n2010 73 0\n2010 74 0\n2010 75 0\n2010 76 0\n2010 77 0\n2010 78 0\n2010 79 0\n2010 80 0\n2010 81 0\n2010 82 0\n2010 83 0\n2010 84 0\n2010 85 0\n2010 86 0\n2010 87 0\n2010 88 0\n2010 89 0\n2010 90 0\n2010 91 0\n2010 92 0\n2010 93 0\n2010 94 0\n2010 95 0\n2010 96 0\n2010 97 0\n2010 98 0\n2010 99 0\n2010 100 0\n2010 101 0\n2010 102 0\n2010 103 0\n2010 104 0\n2010 105 0\n2010 106 0\n2010 107 0\n2010 108 0\n2010 109 0\n2010 110 0\n2010 111 0\n2010 112 0\n2010 113 0\n2010 114 0\n2010 115 0\n2010 116 0\n2010 117 0\n2010 118 0\n2010 119 0\n2010 120 0\n2010 121 0\n2010 122 0\n2010 123 0\n2010 124 0\n2010 125 0\n2010 126 0\n2010 127 0\n2010 128 0\n2010 129 0\n2010 130 0\n2010 131 0\n2010 132 0\n2010 133 0\n2010 134 0\n2010 135 0\n2010 136 0\n2010 137 0\n2010 138 0\n2010 139 0\n2010 140 0\n2010 141 0\n2010 142 0\n2010 143 0\n2010 144 0\n2010 145 0\n2010 146 0\n2010 147 0\n2010 148 0\n2010 149 0\n2010 150 0\n2010 151 0\n2010 152 0\n2010 153 0\n2010 154 0\n2010 155 0\n2010 156 0\n2010 157 0\n2010 158 0\n2010 159 0\n2010 160 0\n2010 161 0\n2010 162 0\n2010 163 0\n2010 164 0\n2010 165 0\n2010 166 0\n2010 167 0\n2010 168 0\n2010 169 0\n2010 170 0\n2010 171 0\n2010 172 0\n2010 173 0\n2010 174 0\n2010 175 0\n2010 176 0\n2010 177 0\n2010 178 0\n2010 179 0\n2010 180 0\n2010 181 0\n2010 182 0\n2010 183 0\n2010 184 0\n2010 185 0\n2010 186 0\n2010 187 0\n2010 188 0\n2010 189 0\n2010 190 0\n2010 191 0\n2010 192 0\n2010 193 0\n2010 194 0\n2010 195 0\n2010 196 0\n2010 197 0\n2010 198 0\n2010 199 0\n2010 200 0\n2010 201 0\n2010 202 0\n2010 203 0\n2010 204 0\n2010 205 0\n2010 206 0\n2010 207 0\n2010 208 0\n2010 209 0\n2010 210 0\n2010 211 0\n2010 212 0\n2010 213 0\n2010 214 0\n2010 215 0\n2010 216 0\n2010 217 0\n2010 218 0\n2010 219 0\n2010 220 0\n2010 221 0\n2010 222 0\n2010 223 0\n2010 224 0\n2010 225 0\n2010 226 0\n2010 227 0\n2010 228 0\n2010 229 0\n2010 230 0\n2010 231 0\n2010 232 0\n2010 233 0\n2010 234 0\n2010 235 0\n2010 236 0\n2010 237 0\n2010 238 0\n2010 239 0\n2010 240 0\n2010 241 0\n2010 242 0\n2010 243 0\n2010 244 0\n2010 245 0\n2010 246 0\n2010 247 0\n2010 248 0\n2010 249 0\n2010 250 0\n2010 251 0\n2010 252 0\n2010 253 0\n2010 254 0\n2010 255 0\n2010 256 0\n2010 257 0\n2010 258 0\n2010 259 0\n2010 260 0\n2010 261 0\n2010 262 0\n2010 263 0\n2010 264 0\n2010 265 0\n2010 266 0\n2010 267 0\n2010 268 0\n2010 269 0\n2010 270 0\n2010 271 0\n2010 272 0\n"
    },
    {
        "number": 3002,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3003,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"3\"\nassert solution(\"1 2 3 4 5 6 7\") == \"2\"\n"
    },
    {
        "number": 3003,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n0 2 3\\n0 1\") == 3\nassert solution(\"4\\n1 2\\n0 2 3\\n0 1\\n1\") == 3\nassert solution(\"5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\nSample Output 3\\n\") == 2\nassert solution(\"6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\nSample Output 4\\n\") == 2\nassert solution(\"5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\nSample Output 4\\n\") == 4\n"
    },
    {
        "number": 3003,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n1 2\n0 2 3\n0 1\n1\n''') == '3'\nassert solution('''5\n2 3 4\n2 3 4\n0 1\n0 1\n0 1\n''') == '2'\nassert solution('''6\n1 3\n0 2 4\n1 5\n0 4\n1 3 5\n2 4\nSample Output 4:\n2\n''') == '2'\n\n'''\n"
    },
    {
        "number": 3003,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n1 2\n0 2 3\n0 1\n1\n''') == '3'\nassert solution('''5\n2 3 4\n2 3 4\n0 1\n0 1\n0 1\n''') == '2'\nassert solution('''6\n1 3\n0 2 4\n1 5\n0 4\n1 3 5\n2 4\n''') == '2'\nassert solution('''7\n1 2 3\n0 1 2\n0 1 2\n0 1 2\n0 1 2\n0 1 2\n0 1 2\n''') == '4'\nassert solution('''8\n1 2 3\n0 1 2\n0 1 2\n0 1 2\n0 1 2\n0 1 2\n0 1 2\n0 1 2\n''') == '4'\n"
    },
    {
        "number": 3003,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n1 2\\n0 2 3\\n0 1\\n1\\n') == '3'\nassert solution('5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n') == '2'\nassert solution('6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n') == '2'\nassert solution('7\\n1 2 3\\n0 1 2 3\\n0 1 2 3\\n0 1 2 3\\n0 1 2 3\\n0 1 2 3\\n') == '4'\nassert solution('8\\n1 2 3 4\\n0 1 2 3 4\\n0 1 2 3 4\\n0 1 2 3 4\\n0 1 2 3 4\\n0 1 2 3 4\\n0 1 2 3 4\\n') == '4'\nprint('solution:', solution(stdin))"
    },
    {
        "number": 3003,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"4\n1 2\n0 2 3\n0 1\n1\n\"\"\") == \"3\"\nassert solution(\"\"\"5\n2 3 4\n2 3 4\n0 1\n0 1\n0 1\n0 1\n\"\"\") == \"2\"\nassert solution(\"\"\"6\n1 3\n0 2 4\n1 5\n0 4\n1 3 5\n2 4\n\"\"\") == \"2\"\nassert solution(\"\"\"8\n1 2\n0 2 3\n0 1\n1\n0 2 3\n0 1\n0 1\n0 1\n1\n\"\"\") == \"4\"\nassert solution(\"\"\"9\n0 1\n1\n0 2 3\n0 1\n0 1\n0 1\n0 1\n1\n0 2 3\n0 1\n0 1\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3003,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3003,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''4\n1 2\n0 2 3\n0 1\n1\n'''\n) == '3'\nassert solution(\n'''5\n2 3 4\n2 3 4\n0 1\n0 1\n0 1\n'''\n) == '2'\nassert solution(\n'''6\n1 3\n0 2 4\n1 5\n0 4\n1 3 5\n2 4\n'''\n) == '2'"
    },
    {
        "number": 3003,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n1 2\\n0 2 3\\n0 1\\n1') == '3'\nassert solution('4\\n1 2\\n0 2 3\\n0 1\\n1') == '2'\nassert solution('5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n') == '2'\nassert solution('6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n') == '2'\nassert solution('6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n') == '2'"
    },
    {
        "number": 3003,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"4\n1 2\n0 2 3\n0 1\n1\n\"\"\") == \"3\"\nassert solution(\"\"\"5\n2 3 4\n2 3 4\n0 1\n0 1\n0 1\n0 1\n0 1\n\"\"\") == \"2\"\nassert solution(\"\"\"6\n1 3\n0 2 4\n1 5\n0 4\n1 3 5\n2 4\n\"\"\") == \"2\"\nassert solution(\"\"\"7\n1 2 3\n0 1 3\n0 1 2\n0 1 3\n0 1 4\n0 1 5\n0 1 6\n0 1 7\n0 1 8\n0 1 9\n0 1 10\n\"\"\") == \"3\"\nassert solution(\"\"\"8\n1 2 3 4 5 6 7\n0 1 2 3 4 5 6 7\n0 1 2 3 4 5 6 7\n0 1 2 3 4 5 6 7\n0 1 2 3 4 5 6 7\n0 1 2 3 4 5 6 7\n0 1 2 3 4 5 6 7\n0 1 2 3 4 5 6 7\n0 1 2 3 4 5 6 7\n\"\"\") == \"7\"\n"
    },
    {
        "number": 3004,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3004,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3004,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3004,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3004,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\nBLUE 1 5000\\nRED 5001 10000') == '2\\n'\nassert solution('3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000') == '3\\n'\nassert solution('4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000') == 'IMPOSSIBLE\\n'\n"
    },
    {
        "number": 3004,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''BLUE 1 6000\nRED 2000 8000\nWHITE 7000 10000''') == 'IMPOSSIBLE'\nassert solution('''BLUE 1 6000\nRED 2000 8000\nWHITE 7000 10000\nBLUE 1 6000''') == '3'\nassert solution('''BLUE 1 6000\nRED 2000 8000\nWHITE 7000 10000\nBLUE 1 6000''') == 'IMPOSSIBLE'\nassert solution('''BLUE 1 6000\nRED 2000 8000\nWHITE 7000 10000\nORANGE 4000 8000\nGREEN 7000 10000''') == 'IMPOSSIBLE'\nassert solution('''BLUE 1 6000\nRED 2000 8000\nORANGE 4000 8000\nGREEN 7000 10000''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3004,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('BLUE 1 5000\\nRED 5001 10000\\n') == 2\nassert solution('BLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\n') == 3\nassert solution('BLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\n') == 4\nassert solution('BLUE 1 4000\\nRED 4002 10000\\n') == 1\nassert solution('BLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\n') == 3\n"
    },
    {
        "number": 3004,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('BLUE 1 5000') == '2'\nassert solution('RED 5001 10000') == '2'\nassert solution('BLUE 1 6000') == '3'\nassert solution('RED 2000 8000') == '3'\nassert solution('WHITE 7000 10000') == '3'\n"
    },
    {
        "number": 3004,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"IMPOSSIBLE\"\nassert solution(\"2\") == \"IMPOSSIBLE\"\nassert solution(\"3\") == \"IMPOSSIBLE\"\nassert solution(\"4\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3004,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''BLUE 1 5000\nRED 5001 10000'''\n) == \"2\"\n\nassert solution(\n'''BLUE 1 6000\nRED 2000 8000\nWHITE 7000 10000'''\n) == \"3\"\n\nassert solution(\n'''BLUE 1 3000\nRED 2000 5000\nORANGE 4000 8000\nGREEN 7000 10000'''\n) == \"IMPOSSIBLE\"\n\nassert solution(\n'''BLUE 1 3000\nRED 2000 5000\nORANGE 4000 8000\nRED 5000 7000\nYELLOW 60000 10000'''\n) == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3005,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('ab') == 'ab'\nassert solution('abcd') == ''\nassert solution('abcde') == ''\n"
    },
    {
        "number": 3005,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('MATTATT') == 6\nassert solution('ABABABABBABA') == 1\nassert solution('PRATTATTATTIC') == 6\nassert solution('GGGGGGGGG') == 1\nassert solution('BABBABABBABBA') == 6\n"
    },
    {
        "number": 3005,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"BABBABABBABBA\") == \"6\"\nassert solution(\"GGGGGGGGG\") == \"1\"\nassert solution(\"PRIME\") == \"5\"\nassert solution(\"PRATTATTATTIC\") == \"6\"\nassert solution(\"BABBABABBABBA\") == \"6\"\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 3005,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('PRATTATTATTIC') == '6'\nassert solution('GGGGGGGG') == '1'\nassert solution('BABBABABBABBA') == '6'\nassert solution('PRIME') == '5'\nassert solution('BABBABABBABBA') == '6'\n"
    },
    {
        "number": 3005,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(''.join(open('test_1.txt').readlines())) == '3'\nassert solution(''.join(open('test_2.txt').readlines())) == '4'\nassert solution(''.join(open('test_3.txt').readlines())) == '5'\nassert solution(''.join(open('test_4.txt').readlines())) == '6'\nassert solution(''.join(open('test_5.txt').readlines())) == '4'\n"
    },
    {
        "number": 3005,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('GCTATCATTATCATCGTTGAGAATATATTTT') == 6\nassert solution('AAAAA') == 1\nassert solution('JWTKWVJYZNKIV') == 5\nassert solution('PSNJQHJQZPWXGJQT') == 5\nassert solution('GTCAATATTGGGCCATCAGGGGCC') == 6\n"
    },
    {
        "number": 3005,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(INPUT) == EXPECTED\nprint(solution(INPUT))\n\"\"\"\n"
    },
    {
        "number": 3005,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('A') == 1\nassert solution('AB') == 2\nassert solution('AAAA') == 1\nassert solution('BABABABABBABA') == 1\nassert solution('B' * 100) == 1\n"
    },
    {
        "number": 3005,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('PRATTATTATTIC') == '6'\nassert solution('GGGGGGGGG') == '1'\nassert solution('PRIME') == '5'\nassert solution('BABBABABBABBA') == '6'\nprint('Tests passed successfully')"
    },
    {
        "number": 3005,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('PRATTATTATTIC') == '6'\nassert solution('GGGGGGGG') == '1'\nassert solution('BABBABABBABBA') == '6'\nassert solution('PRIME') == '5'\nassert solution('AB') == '2'\n"
    },
    {
        "number": 3006,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"D 1\\nD 2\\nE\") == \"0\"\nassert solution(\"D 2\\nD 1\\nE\\nE\\nE\") == \"1\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\\nE\") == \"0\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nE\\nE\") == \"0\"\nassert solution(\"I 14 A\\nI 15 B\\nE\\nE\\nE\") == \"1\"\n"
    },
    {
        "number": 3006,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('D 2\\nD 1\\nE\\nE\\nE\\nD 1\\nE\\nD 2\\nE\\nD 3\\nD 1\\nE\\n') == '0'\nassert solution('D 2\\nD 1\\nE\\nE\\nE\\nD 1\\nE\\nD 2\\nE\\nD 3\\nD 1\\nE\\n') == '1'\nassert solution('I 1 X\\nD 1\\nE\\nE\\nE\\nD 1\\nE\\nD 2\\nE\\nD 3\\nD 1\\nE\\n') == '0'\nassert solution('I 14 B\\nI 14 A\\nE\\nE\\nE\\nI 14 A\\nI 15 B\\nE\\nI 14 A\\nI 15 B\\nE\\n') == '0'"
    },
    {
        "number": 3006,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"D 1\") == \"0\"\nassert solution(\"D 2\") == \"1\"\nassert solution(\"E\") == \"0\"\nassert solution(\"D 3\") == \"1\"\nassert solution(\"D 1\") == \"0\"\n"
    },
    {
        "number": 3006,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    '''D 1\nD 2\nE\nD 3\nD 1\nE\n''') == '0'\nassert solution(\n    '''D 2\nD 1\nE\nD 1\nD 2\nE\n''') == '1'\nassert solution(\n    '''I 1 X\nD 1\nE\nE\nE\nI 14 A\nI 14 B\nE\nI 15 B\nE\n''') == '0'\nassert solution(\n    '''I 14 A\nI 14 B\nE\nI 15 B\nE\n''') == '1'\nassert solution(\n    '''I 1 X\nD 1\nE\nI 1 Y\nE\nE\nE\nI 1 Y\nE\n''') == '1'\n"
    },
    {
        "number": 3006,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n') == '0'\nassert solution('D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n') == '1'\nassert solution('I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n') == '0'\nassert solution('I 14 A\\nI 15 B\\nE\\nI 14 A\\nI 15 B\\nE\\n') == '1'\nassert solution('I 14 A\\nI 15 B\\nE\\nI 14 A\\nI 15 B\\nE\\nI 15 B\\nE\\n') == '1'\n"
    },
    {
        "number": 3006,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"D 1\nD 2\nE\nD 3\nD 1\nE\n\"\"\") == \"0\"\nassert solution(\"\"\"D 2\nD 1\nE\nD 1\nD 2\nE\n\"\"\") == \"1\"\nassert solution(\"\"\"I 1 X\nD 1\nE\nE\nE\nI 14 B\nI 14 A\nE\nI 14 A\nI 15 B\nE\n\"\"\") == \"0\"\nassert solution(\"\"\"I 14 B\nI 14 A\nE\nI 14 A\nI 15 B\nE\n\"\"\") == \"1\"\nassert solution(\"\"\"D 0\nD 1\nE\nD 2\nD 1\nE\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3006,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''D 1\nD 2\nE\nD 3\nD 1\nE''') == \"0\"\nassert solution(\n'''D 2\nD 1\nE\nD 1\nD 2\nE\nD 1\nD 2''') == \"1\"\nassert solution(\n'''I 14 B\nI 14 A\nE\nI 14 A\nI 15 B\nE\nI 14 A\nI 15 B\nE''') == \"0\"\nassert solution(\n'''I 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\n"
    },
    {
        "number": 3006,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('D 1\\nD 2\\nE') == '0'\nassert solution('D 2\\nD 1\\nE\\nE\\nE') == '1'\nassert solution('I 1 X\\nD 1\\nE\\nE\\nE') == '0'\nassert solution('I 14 B\\nI 14 A\\nE\\nE\\nE') == '0'\nassert solution('I 14 B\\nI 14 A\\nE\\nE\\nE') == '0'\n"
    },
    {
        "number": 3006,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == '0'\nassert solution('D 1') == '0'\nassert solution('D 2') == '1'\nassert solution('E') == '0'\nassert solution('D 3') == '1'\n"
    },
    {
        "number": 3006,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"D 1\\nD 2\\nE\") == \"0\"\nassert solution(\"D 2\\nD 1\\nE\") == \"1\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\\nE\") == \"0\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nE\\nE\") == \"0\"\nassert solution(\"I 14 A\\nI 15 B\\nE\\nE\\nE\") == \"1\"\n"
    },
    {
        "number": 3007,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 0 1 0 0 0') == '300'\nassert solution('5 0 1 0 1 0') == '1900'\nassert solution('6 0 1 1 0 0') == '2300'\nassert solution('10 399 0 0 0 0') == '399'\nassert solution('11 399 0 0 0 0') == '399'\n"
    },
    {
        "number": 3007,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 0 1 0 0 0\\n') == '300'\nassert solution('5 0 1 0 1 0\\n') == '1900'\nassert solution('6 0 1 1 0 0\\n') == '2300'\nassert solution('10 399 0 0 0 0\\n') == '399'\nassert solution('10 399 0 0 0 0\\n') == '399'\n"
    },
    {
        "number": 3007,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('4 0 1 0 0 0') == '300'\nassert solution('5 0 1 0 1 0') == '1900'\nassert solution('6 0 1 1 0 0') == '2300'\nassert solution('10 399 0 0 0 0') == '399'\n"
    },
    {
        "number": 3007,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    input=\"4 0 1 0 0 0\") == \"300\"\nassert solution(\n    input=\"5 0 1 0 1 0\") == \"1900\"\nassert solution(\n    input=\"6 0 1 1 0 0\") == \"2300\"\nassert solution(\n    input=\"10 399 0 0 0 0\") == \"399\"\nassert solution(\n    input=\"10 400 0 0 0 0\") == \"400\"\n"
    },
    {
        "number": 3007,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 0 1 0 0 0') == '300'\nassert solution('5 0 1 0 1 0') == '1900'\nassert solution('6 0 1 1 0 0') == '2300'\nassert solution('10 399 0 0 0 0') == '399'\nassert solution('4 0 1 0 0 0') == '300'\n"
    },
    {
        "number": 3007,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2300\"\n"
    },
    {
        "number": 3007,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 0 1 0 0 0') == '300'\nassert solution('5 0 1 0 1 0') == '1900'\nassert solution('6 0 1 1 0 0') == '2300'\nassert solution('10 399 0 0 0 0') == '399'\n\n\nimport sys\n"
    },
    {
        "number": 3007,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 0 1 0 0 0') == '300'\nassert solution('5 0 1 0 1 0') == '1900'\nassert solution('6 0 1 1 0 0') == '2300'\nassert solution('10 399 0 0 0 0') == '399'\nassert solution('5 0 1 0 1 0') == '1900'\n"
    },
    {
        "number": 3007,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\"\nassert solution(\"10 399 0 0 0 0\") == \"399\"\nassert solution(\"2 4 0 1 0 0\") == \"19\"\n"
    },
    {
        "number": 3007,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3008,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2\\n1 3\\n2 3') == '2'\nassert solution('1 2\\n2 1\\n1 3') == '2'\nassert solution('1 2\\n3 1\\n1 2') == '3'\nassert solution('1 3\\n2 1\\n1 3') == '2'\nassert solution('1 3\\n2 1\\n1 2') == '3'\n"
    },
    {
        "number": 3008,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 10\\n1 12\\n1 13\\n') == '2'\nassert solution('1 10\\n1 5\\n1 12\\n') == '2'\nassert solution('1 10\\n1 5\\n1 4\\n') == '2'\nassert solution('1 10\\n1 5\\n4 1\\n') == '2'\nassert solution('1 10\\n1 5\\n1 4\\n2 1\\n') == '2'\n"
    },
    {
        "number": 3008,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n2 10\n1 12\n1 13\n\"\"\".strip()) == \"2\"\n\nassert solution(\n\"\"\"\n2 10\n1 5\n1 12\n\"\"\".strip()) == \"2\"\n\nassert solution(\n\"\"\"\n2 10\n1 5\n1 4\n\"\"\".strip()) == \"2\"\n\nassert solution(\n\"\"\"\n2 10\n1 5\n4 1\n\"\"\".strip()) == \"2\"\n"
    },
    {
        "number": 3008,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 3008,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 10\n1 12\n1 13''') == '2'\nassert solution('''2 10\n1 5\n1 12\n''') == '2'\nassert solution('''2 10\n1 5\n1 4\n''') == '2'\nassert solution('''2 10\n1 5\n4 1\n''') == '2'\nassert solution('''2 10\n1 5\n1 5\n''') == '1'\n"
    },
    {
        "number": 3008,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 10\n1 12\n1 13''') == '2'\nassert solution('''2 10\n1 5\n1 12\n''') == '2'\nassert solution('''2 10\n1 5\n1 4\n''') == '2'\nassert solution('''2 10\n1 5\n4 1\n''') == '2'\nassert solution('''2 10\n1 12\n1 13\n''') == '2'\n"
    },
    {
        "number": 3008,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3008,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 10\\n1 12\\n1 13\\n') == '2'\nassert solution('2 10\\n1 5\\n1 12\\n') == '2'\nassert solution('2 10\\n1 5\\n1 4\\n') == '2'\nassert solution('3 6\\n1 1 5 10\\n1 1 6 9\\n1 2 2 4\\n') == '3'\nassert solution('2 10\\n1 5\\n1 12\\n') == '2'\n"
    },
    {
        "number": 3008,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 10\n1 12\n1 13''') == '2'\nassert solution('''2 10\n1 5\n1 12\n''') == '2'\nassert solution('''2 10\n1 5\n1 4\n''') == '2'\nassert solution('''2 10\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n"
    },
    {
        "number": 3008,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n2 10\n1 12\n1 13\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n2 10\n1 5\n1 12\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n2 10\n1 5\n4 1\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n2 10\n1 5\n4 1\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3009,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5') == '28'\nassert solution('4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\\n99 6 -8\\n') == '36.2842712475'\nassert solution('6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n') == '28.970562748'\nassert solution('8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\\n') == '32'\nassert solution('10\\n1 1 25\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 34\\n9 5 3\\n1 1 1\\n5 1 21\\n9 5 2\\n') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3009,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1 15') == '28'\nassert solution('5 1 100') == '36.2842712475'\nassert solution('9 1 56') == '32'\nassert solution('1 5 1') == '28.970562748'\nassert solution('5 5 33') == '32'\n"
    },
    {
        "number": 3009,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n10 10 5\n10 20 5\n20 10 5\n20 20 5''') == \"28\"\nassert solution('''4\n10 10 5\n10 20 1\n20 10 12\n20 20 8\n''') == \"36.2842712475\"\nassert solution('''6\n1 1 15\n5 1 100\n9 1 56\n1 5 1\n5 5 33\n9 5 3\n''') == \"28.970562748\"\nassert solution('''8\n4 4 1\n4 6 1\n4 8 1\n6 6 14\n8 4 1\n8 6 1\n8 8 1\n99 6 -8\n''') == \"32\"\nassert solution('''2\n1 1 2\n2 2 2\n3 3 3\n4 4 4\n5 5 5\n6 6 6\n7 7 7\n8 8 8\n100 100 100\n''') == \"Impossible\"\n"
    },
    {
        "number": 3009,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\\n') == '28'\nassert solution('4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\\n') == '36.2842712475'\nassert solution('6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n') == '32'\nassert solution('8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\\n') == '32'\nassert solution('8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\\n') == '32'\n"
    },
    {
        "number": 3009,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 3009,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n10 10 5\n10 20 5\n20 10 5\n20 20 5''') == '28'\nassert solution('''4\n10 10 5\n10 20 1\n20 10 12\n20 20 8\n''') == '36.2842712475'\nassert solution('''6\n1 1 15\n5 1 100\n9 1 56\n1 5 1\n5 5 33\n9 5 3\n''') == '32'\n"
    },
    {
        "number": 3009,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\\n\") == '28'\nassert solution(\"4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\\n\") == '36.2842712475'\nassert solution(\"6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n\") == '28.970562748'\nassert solution(\"8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\\n\") == '32'\nprint(\"You are awesome:)\")\n"
    },
    {
        "number": 3009,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n10 10 5\n10 20 5\n20 10 5\n20 20 5''') == '28'\nassert solution('''6\n1 1 15\n5 1 100\n9 1 56\n1 5 1\n5 5 33\n9 5 3''') == '36.2842712475'\nassert solution('''8\n4 4 1\n4 6 1\n4 8 1\n6 6 14\n8 4 1\n8 6 1\n8 8 1\n99 6 -8''') == '32'\nassert solution('''8\n4 4 1\n4 6 1\n4 8 1\n6 6 14\n8 4 1\n8 6 1\n8 8 1\n99 6 -8''') == '32'\nassert solution('''6\n1 1 15\n5 1 100\n9 1 56\n1 5 1\n5 5 33\n9 5 3''') == '28'\n"
    },
    {
        "number": 3009,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n10 10 5\n10 20 5\n20 10 5\n20 20 5''') == '28'\nassert solution('''4\n10 10 5\n10 20 1\n20 10 12\n20 20 8\n''') == '36.2842712475'\nassert solution('''6\n1 1 15\n5 1 100\n9 1 56\n1 5 1\n5 5 33\n9 5 3\n''') == '28.970562748'\nassert solution('''8\n4 4 1\n4 6 1\n4 8 1\n6 6 14\n8 4 1\n8 6 1\n8 8 1\n99 6 -8\n''') == '32'\nassert solution('''8\n10 10 5\n10 20 1\n20 10 12\n20 20 8\n''') == '32'\n"
    },
    {
        "number": 3009,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n') == '32'\nassert solution(\n    '4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\\n') == '32.0'\nassert solution(\n    '1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n') == '28'\nassert solution(\n    '1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n') == '32'\nassert solution(\n    '1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n') == '28'\n"
    },
    {
        "number": 3010,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 3 9 5\n2 2 6 8\n4 8 9 3''') == '3'\nassert solution('''3\n5 2 7 10\n7 4 4 10\n2 4 10 8''') == '1'\nassert solution('''3\n2 1 6 5\n2 5 5 4\n5 1 7 7''') == '1'\nassert solution('''3\n-1 -2 -1 -1\n-1 2 -1 -1\n-1 -2 -1 -1''') == '1'\nassert solution('''3\n-1 -2 -1 -1\n-1 2 -1 -1\n2 2 -1 -1''') == '1'\n"
    },
    {
        "number": 3010,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n3\\n9\\n5') == '3'\nassert solution('2\\n2\\n6\\n8') == '1'\nassert solution('4\\n8\\n9\\3') == '1'\nassert solution('3\\n5\\n7\\n10') == '3'\nassert solution('1\\n1\\n1\\n1') == '-1'\n"
    },
    {
        "number": 3010,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n-1\\n1\\n-1') == '1'\nassert solution('2\\n1\\n1\\n1') == '1'\nassert solution('1\\n2\\n2\\n2') == '2'\nassert solution('1\\n-1\\n1\\n-1') == '1'\nassert solution('1\\n2\\n2\\n2') == '1'\n"
    },
    {
        "number": 3010,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n1 3 9 5\n2 2 6 8\n4 8 9 3''') == '3'\nassert solution('''3\n5 2 7 10\n7 4 4 10\n2 4 10 8''') == '1'\nassert solution('''2\n-1 -2 -1 -1\n-1 2 -1 -1''') == '1'\nassert solution('''3\n2 1 6 5\n2 5 5 4\n5 1 7 7''') == '1'\nassert solution('''4\n2 1 6 5\n2 5 5 4\n5 1 7 7\n4 8 9 3''') == '1'\n"
    },
    {
        "number": 3010,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3\\n') == '3'\nassert solution('3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8\\n') == '1'\nassert solution('3\\n2 1 6 5\\n2 5 5 4\\n5 1 7 7\\n') == '1'\nassert solution('3\\n-1 -2 -1 -1\\n-1 2 -1 -1\\n') == '1'\nassert solution('3\\n-1 -2 -1 -1\\n-1 2 -1 -1\\n') == '1'\n"
    },
    {
        "number": 3010,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '1'\nassert solution(stdin) == '3'\nassert solution(stdin) == '1'\nassert solution(stdin) == '2'\nassert solution(stdin) == '1'\n"
    },
    {
        "number": 3010,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n1 3 9 5\n2 2 6 8\n4 8 9 3''') == \"3\"\nassert solution('''3\n5 2 7 10\n7 4 4 10\n2 4 10 8''') == \"1\"\nassert solution('''3\n2 1 6 5\n2 5 5 4\n5 1 7 7''') == \"1\"\nassert solution('''3\n-1 -2 -1 -1\n-1 2 -1 -1\nSample Output 4:\n1\n''') == \"1\"\nassert solution('''3\n-1 -2 -1 -1\n-1 2 -1 -1\n2 1 6 5\n2 5 5 4\n5 1 7 7''') == \"1\"\n"
    },
    {
        "number": 3010,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n1 2 3 4\\n2 5 6 7\\n5 1 7 7\\n-1 -2 -1 -1') == '1'\nassert solution('3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3\\n-1 -1 -1 -1') == '3'\nassert solution('4\\n2 1 6 5\\n2 5 5 4\\n5 1 7 7\\n-1 -1 -1 -1') == '1'\nassert solution('2\\n-1 -2 -1 -1\\n-1 2 -1 -1\\n-1 -1 -1 -1') == '1'\nassert solution('2\\n1 2 3 4\\n2 5 6 7\\n4 8 9 3') == '3'\n"
    },
    {
        "number": 3010,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\") == \"1\"\nassert solution(\"2\\n1\") == \"1\"\nassert solution(\"1\\n1\") == \"-1\"\nassert solution(\"1\\n1\\n1\") == \"0\"\nassert solution(\"1\\n2\\n1\") == \"0\"\n"
    },
    {
        "number": 3010,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 3 9 5\\n2 2 6 8\\n4 8 9 3\\n') == '3'\nassert solution('2 1 6 5\\n2 5 5 4\\n5 1 7 7\\n') == '1'\nassert solution('-1 -2 -1 -1\\n-1 2 -1 -1\\n') == '1'\nassert solution('-1 2 -1 -1\\n2 2 0 -1\\n') == '1'\nassert solution('-1 2 -1 -1\\n2 2 -1 0\\n') == '1'\n"
    },
    {
        "number": 3011,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == -1\nassert solution('1') == -1\nassert solution('1234') == -1\nassert solution('12') == 1\nassert solution('123421') == 1\n"
    },
    {
        "number": 3011,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"123\") == 1\nassert solution(\"12\") == -1\nassert solution(\"13\") == -1\nassert solution(\"123123\") == -1\nassert solution(\"11111111\") == 1\n"
    },
    {
        "number": 3011,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1222\") == \"\"\nassert solution(\"1223\") == \"123\"\nassert solution(\"122233\") == \"12\"\nassert solution(\"12223\") == \"1222\"\n"
    },
    {
        "number": 3011,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1234\") == \"10\"\nassert solution(\"12345\") == \"-1\"\nassert solution(\"123456789\") == \"0\"\nassert solution(\"123478\") == \"109\"\nassert solution(\"123489\") == \"0\"\n"
    },
    {
        "number": 3011,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708\nprint(\"All set? Click 'Check' to earn cool rewards!\")\n\"\"\"\n"
    },
    {
        "number": 3011,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1234321\") == \"94708\"\nassert solution(\"55\") == \"55\"\nassert solution(\"101\") == \"-1\"\nassert solution(\"\") == \"-1\"\nassert solution(\"123456789\") == \"-1\"\n"
    },
    {
        "number": 3011,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10') == '10'\nassert solution('55') == '55'\nassert solution('101') == '-1'\nassert solution('1234321') == '94708'\nassert solution('9999955') == '9599784'\n"
    },
    {
        "number": 3011,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == '-1'\nassert solution('10') == '10'\nassert solution('55') == '55'\nassert solution('101') == '-1'\nassert solution('1234321') == '94708'\nprint('Passed')\n"
    },
    {
        "number": 3011,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1234') == '10'\nassert solution('12223') == '12223'\nassert solution('33322111') == '-1'\nassert solution('1223') == '-1'\nassert solution('123432') == '-1'\n"
    },
    {
        "number": 3011,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10') == '10'\nassert solution('102233222') == '12223'\nassert solution('33322111') == '33333333'\nassert solution('1232321') == '-1'\nassert solution('12223') == '12223'\n"
    },
    {
        "number": 3012,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 0 0 3') == '6'\nassert solution('1 2 0 0 4') == '2'\nassert solution('1 2 0 0 5') == '6'\nassert solution('1 2 0 0 6') == '0'\nassert solution('1 2 0 0 7') == '0'\n"
    },
    {
        "number": 3012,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 0 0 0 3\") == \"6\"\nassert solution(\"1 2 0 0 5\") == \"2\"\nassert solution(\"1 2 0 0 4\") == \"4\"\nassert solution(\"1 2 0 0 6\") == \"0\""
    },
    {
        "number": 3012,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 0 0 0 3''') == '6'\nassert solution('''1 2 0 0 5''') == '2'\nassert solution('''1 2 0 0 4''') == '4'\nassert solution('''1 2 0 0 6''') == '0''''\n"
    },
    {
        "number": 3012,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 0 0 0 3') == '6'\nassert solution('1 2 0 0 5') == '2'\nassert solution('1 2 0 0 4') == '4'\nassert solution('1 2 0 0 6') == '0'\nassert solution('1 2 0 0 2') == '8'\n"
    },
    {
        "number": 3012,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 0 0 0 3''') == '6'\nassert solution('''1 2 0 0 5''') == '2'\nassert solution('''1 2 0 0 4''') == '4'\nassert solution('''1 2 0 0 6''') == '0'\nassert solution('''1 2 0 0 2''') == '0'\n"
    },
    {
        "number": 3012,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 0\nassert solution('1 2 0 0 5') == 6\nassert solution('1 2 0 0 4') == 2\nassert solution('1 2 0 0 6') == 0\nassert solution('1 2 0 0 3') == 4\n"
    },
    {
        "number": 3012,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''3 0 0 0 3'''\n) == '6'\n\nassert solution(\n'''1 2 0 0 5'''\n) == '2'\n\nassert solution(\n'''1 2 0 0 4'''\n) == '4'\n\nassert solution(\n'''1 2 0 0 6'''\n) == '0'\n\nassert solution(\n'''1 2 0 0 4\n'''\n) == '0'"
    },
    {
        "number": 3012,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nimport sys\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 3012,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 0 0 0 3\\n') == '6'\nassert solution('1 2 0 0 5\\n') == '2'\nassert solution('1 2 0 0 4\\n') == '4'\nassert solution('1 2 0 0 6\\n') == '0'\nassert solution('1 2 0 0 10\\n') == '0'\n"
    },
    {
        "number": 3012,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3013,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3013,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0.5 -5.301 3.098\n0.5 8 8''') == '-1.26167861 3.88425357'\nassert solution('''0.5 -8 8''') == '9.21068947 2.56226688'\nassert solution('''1 8 8''') == '6.22375968 -0.31921472'\nassert solution('''0.5 -8 8''') == '-4.36385220 9.46891588'\nassert solution('''0.01 -8 8''') == '-8.40390844 3.48018848'\n"
    },
    {
        "number": 3013,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''-4.36385220 9.46891588''') == '-1.26167861 3.88425357'\nassert solution('''0.5 -8 8''') == '9.21068947 2.56226688'\nassert solution('''0.5 -8 8''') == '9.21068947 2.56226688'\nassert solution('''0.5 -8 8''') == '9.21068947 2.56226688'\nassert solution('''0.5 -8 8''') == '9.21068947 2.56226688'\n"
    },
    {
        "number": 3013,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"0.5 -5.301 3.098\"\n) == \"-1.26167861 3.88425357\"\nassert solution(\n\"0.5 8 8\"\n) == \"9.21068947 2.56226688\"\nassert solution(\n\"0.5 -8 8\"\n) == \"-4.36385220 9.46891588\"\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 3013,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''0.5 -5.301 3.098\n0.5 8 8\n0.5 -8 8\n0.5 -8 8''') == '-1.26167861 3.88425357\\n'\nassert solution('''0.5 -8 8\n0.5 -8 8\n0.5 -8 8''') == '9.21068947 2.56226688\\n'\nassert solution('''0.5 -8 8\n0.5 -8 8\n0.5 -8 8\n0.5 -8 8''') == '6.22375968 -0.31921472\\n'\nassert solution('''0.5 -8 8\n0.5 -8 8\n0.5 -8 8\n0.5 -8 8\n0.5 -8 8\n0.5 -8 8\n0.5 -8 8\n0.5 -8 8\n0.5 -8 8''') == '-5.26691648 2.82293805\\n'\nassert solution('''0.5 -8 8\n0.5 -8 8\n0.5 -8 8\n0.5 -8 8\n0.5 -8 8\n0.5 -8 8\n0.5 -8 8\n0.5 -8 8\n0.5 -8 8\n0.5 -8 8''') == '9.21068947 2.56226688\\n'\n"
    },
    {
        "number": 3013,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3013,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3013,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'\nassert solution('0.5 -8 8') == '-4.36385220 9.46891588'\nprint(solution(''))\n"
    },
    {
        "number": 3013,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\"\nassert solution(\"0.5 -8 8\") == \"-4.36385220 9.46891588\"\nassert solution(\"0.5 -8 8\") == \"-4.36385220 9.46891588\"\n"
    },
    {
        "number": 3013,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'\nassert solution('0.5 -8 8') == '-4.36385220 9.46891588'\n\n\"\"\"\n\n\"\"\"\n---------------------\n---  Answer  ---\n---------------------\n\n0.5 -5.301 3.098\n0.5 8 8\n0.5 -8 8\n-1.26167861 3.88425357\n9.21068947 2.56226688\n\n0.5 -8 8\n-4.36385220 9.46891588\n\n\"\"\""
    },
    {
        "number": 3014,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\") == \"1\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\") == \"1\"\nassert solution(\"4 5\\n1 2\\n2 3\\n2 4\\n3 4\\n4 1\") == \"2\"\nassert solution(\"4 5\\n1 2\\n3 4\\n3 1\\n4 1\") == \"2\"\nassert solution(\"4 5\\n1 2\\n3 4\\n4 1\") == \"2\"\n"
    },
    {
        "number": 3014,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 2\n1 2\n2 1''') == '1'\nassert solution('''3 3\n1 2\n2 3\n3 1''') == '0'\nassert solution('''4 5\n1 2\n2 3\n2 4\n3 1\n4 1''') == '2'\n"
    },
    {
        "number": 3014,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\") == \"1\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\") == \"0\"\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n4 1\") == \"1\"\n"
    },
    {
        "number": 3014,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3014,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2\\n1 2\\n2 1') == '1'\nassert solution('3 3\\n1 2\\n2 3\\n3 1') == '1'\nassert solution('4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4') == '0'\nassert solution('4 5\\n1 2\\n2 3\\n3 4\\n4 1') == '2'\nassert solution('4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n4 1\\n1 4') == '2'\n"
    },
    {
        "number": 3014,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == solution(stdin)\n"
    },
    {
        "number": 3014,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''2 2\n1 2\n2 1''') == '1'\n\nassert solution(\n'''3 3\n1 2\n2 3\n3 1''') == '0'\n\nassert solution(\n'''4 5\n1 2\n2 3\n2 4\n3 1\n4 1\n''') == '2'\n"
    },
    {
        "number": 3014,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 2\") == \"\"\nassert solution(\"3 3\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 1\") == \"\"\n"
    },
    {
        "number": 3014,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == solution(stdin) # pass this to test the code\n"
    },
    {
        "number": 3014,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 2\n1 2\n2 1''') == '0'\nassert solution('''3 3\n1 2\n2 3\n3 1''') == '1'\nassert solution('''4 5\n1 2\n2 3\n2 4\n3 1\n4 1''') == '2'\nassert solution('''8 9\n1 2\n1 3\n3 2\n2 4\n4 5\n5 6\n6 7\n7 8''') == '4'\nassert solution('''10 10\n1 2\n1 3\n3 2\n2 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10''') == '5'\n"
    },
    {
        "number": 3015,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\n2 3 5\\n0 4 1\\n1 5 1\\n0 2 1\\n0 3 1\\n0 4 1\\n0 5 1\\n0 4 1') == '11'\nassert solution('4 5 0 3\\n0 1 1\\n1 2 1\\n2 0 1\\n2 3 1\\n2 3 3\\n2 3 5\\n0 4 1\\n1 5 1\\n0 2 1\\n0 3 1\\n0 4 1\\n0 5 1\\n0 4 1') == 'infinity'\nassert solution('1 1 1 1\\n1 2 1\\n2 3 1\\n0 0 1\\n0 1 1\\n0 2 1\\n0 3 1\\n0 4 1\\n0 5 1\\n0 4 1\\n0 5 1\\n0 4 1') == '2'\nassert solution('3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n2 0 1\\n2 3 1\\n0 3 1\\n2 4 1\\n2 3 1\\n2 3 1\\n0 3 1\\n2 4 1\\n0 3 1\\n2 4 1\\n0 3 1\\n2 4 1\\n2 3 1\\n0 3 1\\n0 3 1\\n0 3 1') == 'infinity'\nassert solution('3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n2 0 1\\n2 3 1\\n0 3 1\\n2 4 1\\n2 3 1\\n2 3 1\\n0 3 1\\n2 4 1\\n0 3 1\\n2 4 1\\n2 3 1\\n0 3 1\\n0 3 1\\n0 3 1') == 'infinity'\n"
    },
    {
        "number": 3015,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 5 0 3\n0 1 1\n1 2 2\n2 0 4\n2 3 1\n2 3 3\n''') == '11'\nassert solution('''5 5 0 4\n0 1 1\n1 2 1\n2 3 1\n3 0 1\n2 4 1\n''') == 'infinity'\nassert solution('''2 1 0 1\n0 1 2\nSample Output 4:\ninfinity\n''') == 'infinity'\nassert solution('''3 3 1 2\n0 1 1\n1 0 1\n1 2 1\nSample Output 4:\ninfinity\n''') == 'infinity'\nassert solution('''1 2 0\n0 1 1\n1 0 1\n1 2 1\nSample Output 4:\ninfinity\n''') == 'infinity'\n"
    },
    {
        "number": 3015,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 5 0 3\n0 1 1\n1 2 2\n2 0 4\n2 3 1\n2 3 3''') == '11'\nassert solution('''5 5 0 4\n0 1 1\n1 0 1\n1 2 1\n2 3 1\n3 0 1\n2 4 1''') == 'infinity'\nassert solution('''2 1 0 1\n0 1 2\nSample Output 3:\ninfinity\n\nSample Input 4:\n3 3 1 2\n0 1 1\n1 0 1\n1 2 1\nSample Output 4:\n2\n\nassert solution('''3 3 1 2\n0 1 1\n1 0 1\n1 2 1''') == '2'\n'''"
    },
    {
        "number": 3015,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3') == '11'\nassert solution('5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1') == 'infinity'\nassert solution('2 1 0 1\\n0 1 2\\n') == '2'\nassert solution('3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n') == 'infinity'\n"
    },
    {
        "number": 3015,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\n2 3 3') == '11'\nassert solution('5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n') == 'infinity'\nassert solution('1 2 3\\n2 1 3') == 'infinity'\nassert solution('1 2 3\\n2 1 3\\n3 0 3\\n3 1 1') == 'infinity'\nassert solution('2 3 1\\n0 1 2\\n2 0 4') == 'infinity'\n"
    },
    {
        "number": 3015,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\n\") == \"11\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n\") == \"infinity\"\nassert solution(\"2 1 0 1\\n0 1 2\\n\") == \"2\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n\") == \"infinity\"\nassert solution(\"3 4 2 1\\n0 1 1\\n1 0 1\\n1 2 1\\n\") == \"infinity\"\n"
    },
    {
        "number": 3015,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 5 0 3\n0 1 1\n1 2 2\n2 0 4\n2 3 1\n2 3 3\n''') == '11'\nassert solution('''5 5 0 4\n0 1 1\n1 2 1\n2 3 1\n3 0 1\n2 4 1\n''') == 'infinity'\nassert solution('''2 1 0 1\n0 1 2\n''') == '2'\nassert solution('''3 3 1 2\n0 1 1\n1 0 1\n1 2 1\nSample Output 4:\ninfinity\n''') == 'infinity'\nassert solution('''1 1 0\n0 1 1\n1 0 1\n1 2 1\n''') == 'infinity'\n"
    },
    {
        "number": 3015,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3 0 1\\n0 1 2\\n1 0 1\\n1 2 1') == 'infinity'\nassert solution('3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n2 3 1') == '2'\nassert solution('3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n2 3 1\\n3 0 1') == 'infinity'\nassert solution('5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1') == 'infinity'\nassert solution('5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n2 4 1') == 'infinity'\n"
    },
    {
        "number": 3015,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 5 0 3\n0 1 1\n1 2 2\n2 0 4\n2 3 1\n2 3 3''') == '11'\nassert solution('''5 5 0 4\n0 1 1\n1 2 1\n2 3 1\n3 0 1\n2 4 1\n''') == 'infinity'\nassert solution('''2 1 0 1\n0 1 2\n''') == '2'\nassert solution('''3 3 1 2\n0 1 1\n1 0 1\n1 2 1\n''') == 'infinity'\nassert solution('''5 5 0 4\n0 1 1\n1 0 1\n1 2 1\n2 3 1\n3 0 1\n2 4 1\n''') == 'infinity'\n"
    },
    {
        "number": 3015,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 1 0 1\\n0 1 2\\n\") == \"2\"\nassert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\") == \"11\"\nassert solution(\"2 1 0 1\\n0 1 2\\n\") == \"infinity\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n\") == \"infinity\"\nassert solution(\"4 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n\") == \"infinity\"\n"
    },
    {
        "number": 3016,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == \"6\"\n\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 3016,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3016,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"12\"\n"
    },
    {
        "number": 3016,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3016,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 2 1 2 1\") == \"6\"\nassert solution(\"3 3 1 1\") == \"0\"\nassert solution(\"3 2 2 3\") == \"18\"\nassert solution(\"3 1 2 3\") == \"12\"\nassert solution(\"4 2 1 2 1\") == \"6\"\n"
    },
    {
        "number": 3016,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 2 1 2 1\n2 1 2\n2 3 4\n''') == '6'\nassert solution('''3 3 1 1\n1 1\n2 2 3\n''') == '0'\nassert solution('''3 2 2 3\n1 1\n2 2 3\n''') == '18'\nassert solution('''3 1 2 3\n2 1 2\n0\n''') == '12'\nassert solution('''3 1 2 3\n1 1\n2 2 3\n''') == '18'\n"
    },
    {
        "number": 3016,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''2 2 1 2 1'''\n    ) == '6'\nassert solution(\n'''3 3 1 1'''\n    ) == '0'\nassert solution(\n'''3 2 2 3'''\n    ) == '12'\nassert solution(\n'''3 1 2 3'''\n    ) == '18'\nassert solution(\n'''4 5 2 3 4 4'''\n    ) == '0'\n"
    },
    {
        "number": 3016,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 2 1 2 1\n2 1 2\n2 3 4\n''') == '6'\n\nassert solution('''3 3 1 1\n1 1\n2 2 3\n''') == '0'\n\nassert solution('''3 2 2 3\n1 1\n2 2 3\n''') == '12'\n\nassert solution('''6 3 1 1 1 1\n1 1\n2 2 3\nSample Output 3:\n18\n''') == '18'\n\nassert solution('''6 3 1 1 1 1\n1 1\n2 2 3\n''') == '0'"
    },
    {
        "number": 3016,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3016,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3017,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"9000000000000000000 62\") == \"1\"\nassert solution(\"1000000 1\") == \"468559\"\nassert solution(\"1000000 5\") == \"49401\"\nassert solution(\"1000000 16\") == \"20\"\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 3017,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 3017,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') is None\nassert solution('1 0') == ''\nassert solution('2 0') == ''\nassert solution('2 1') == ''\nassert solution('3 0') == ''\n"
    },
    {
        "number": 3017,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n"
    },
    {
        "number": 3017,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3017,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('12560 1') == '468559'\nassert solution('1000000 1') == '468559'\nassert solution('1000000 5') == '49401'\nassert solution('1000000 16') == '20'\nassert solution('9000000000000000000 62') == '1'\n"
    },
    {
        "number": 3017,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3017,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1000000 1''') == '468559'\nassert solution('''1000000 5''') == '49401'\nassert solution('''1000000 16''') == '20'\nassert solution('''9000000000000000000 62''') == '1'\n'''\n"
    },
    {
        "number": 3017,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1000000 1\") == \"468559\"\nassert solution(\"1000000 5\") == \"49401\"\nassert solution(\"1000000 16\") == \"20\"\nassert solution(\"9000000000000000000 62\") == \"1\"\nprint(\"Tests passed successfully\")\n"
    },
    {
        "number": 3017,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1000000 1\") == \"468559\"\nassert solution(\"1000000 5\") == \"49401\"\nassert solution(\"1000000 16\") == \"20\"\nassert solution(\"9000000000000000000 62\") == \"1\"\nassert solution(\"1000000 101011111010101001\") == \"4\"\n"
    },
    {
        "number": 3018,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 3018,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n3\") == \"1\\n1\\n\"\nassert solution(\"3\\n9\") == \"1\\n1\\n\"\nassert solution(\"3\\n9\") == \"1\\n1\\n\"\nassert solution(\"3\\n9\") == \"1\\n1\\n\"\nassert solution(\"3\\n9\") == \"1\\n1\\n\"\n"
    },
    {
        "number": 3018,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4 5 6\\n1 2 3 4 5 6') == '3'\nassert solution('3 9\\n5 4 1\\n') == '1'\nassert solution('3 8\\n4 4 4 4\\n') == '3'\nassert solution('3 10\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\\n') == '2'\nassert solution('5 25\\n5 2 4 4 4 1 4 1\\n') == '2'\n"
    },
    {
        "number": 3018,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4 5 6') == '1'\nassert solution('2 2 2 2') == '3'\nassert solution('18 90') == '12'\nassert solution('2 2 2 2') == '3'\nassert solution('18 90') == '12'\n"
    },
    {
        "number": 3018,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 9\n5 4 1\n''') == '1'\nassert solution('''4 13\n2 2 2 2\n''') == '3'\nassert solution('''18 90\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\n''') == '12'\nassert solution('''16 28\n7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7\n''') == '12'\n"
    },
    {
        "number": 3018,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 9\\n5 4 1\\n') == '1'\nassert solution('4 13\\n2 2 2 2\\n') == '3'\nassert solution('18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\\n') == '12'\n"
    },
    {
        "number": 3018,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n3\\n5\\n9') == '1'\nassert solution('2\\n9\\n18\\n9') == '3'\nassert solution('1\\n18\\n18\\n18\\n18') == '18'\nassert solution('2\\n6\\n18\\n18\\n6') == '6'\nassert solution('3\\n6\\n9\\n18\\n18\\n6') == '6'\n"
    },
    {
        "number": 3018,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 9\\n5 4 1\") == \"1\"\nassert solution(\"4 13\\n2 2 2 2\") == \"3\"\nassert solution(\"18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\") == \"12\"\nassert solution(\"4 8\\n1 1 1 1 1\") == \"2\"\nassert solution(\"5 8\\n1 1 1 1 1 1\") == \"1\"\n"
    },
    {
        "number": 3018,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n1 2 3 4 5\") == '1'\nassert solution(\"5 6\\n2 3 4 5 1\") == '1'\nassert solution(\"5 6\\n1 1 3 3 4 4\") == '2'\nassert solution(\"5 6\\n1 1 1 3 3 4\") == '2'\nassert solution(\"5 6\\n1 2 3 4 5\") == '1'\n"
    },
    {
        "number": 3018,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 3\n1 2 3\n''') == '1'\nassert solution('''5 9\n5 4 1\n''') == '1'\nassert solution('''18 90\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\n''') == '12'\nassert solution('''3 17\n3 3 3\n''') == '1'\nassert solution('''6 10\n2 2 2 2 2 2 2\n''') == '4'\n"
    },
    {
        "number": 3019,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3019,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == '0'\nassert solution('3') == '3'\nassert solution('5') == '5'\nassert solution('4 7 8') == '3'\nassert solution('2 3 4 5 8') == '5'\n"
    },
    {
        "number": 3019,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1\n1\n''') == '0'\nassert solution('''3\n4 7 8\n''') == '3'\nassert solution('''5\n2 3 4 5 8\n''') == '5'\n"
    },
    {
        "number": 3019,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\") == '0'\nassert solution(\"2\\n3 4 5 6\\n\") == '3'\nassert solution(\"3\\n4 7 8\\n\") == '3'\nassert solution(\"3\\n4 7 8\\n\") == '3'\nassert solution(\"2\\n1\\n\") == '0'\n"
    },
    {
        "number": 3019,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n1 2') == '3'\nassert solution('3\\n4 7 8') == '5'\nassert solution('5\\n2 3 4 5 8') == '5'\nassert solution('6\\n4 6 8 10') == '5'\n"
    },
    {
        "number": 3019,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"5\""
    },
    {
        "number": 3019,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n1\n1\n''') == '0'\nassert solution('''\n2\n4 4\n''') == '0'\nassert solution('''\n3\n1 2 3\n''') == '6'\nassert solution('''\n4\n1 1 2 3\n''') == '1'\nassert solution('''\n5\n5 5 5 5 5\n''') == '1'\n"
    },
    {
        "number": 3019,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') is None\nassert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\n"
    },
    {
        "number": 3019,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\nassert solution(\"5\") == \"\"\n"
    },
    {
        "number": 3019,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1''') == 0\nassert solution('''1\n2''') == 0\nassert solution('''3\n4 7 8''') == 3\nassert solution('''5\n2 3 4 5 8''') == 5\nassert solution('''1000''') == 5\n"
    },
    {
        "number": 3020,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == str(solution(input()))\nassert solution(input()) == str(solution(input()))\nassert solution(input()) == str(solution(input()))\nassert solution(input()) == str(solution(input()))\nassert solution(input()) == str(solution(input()))\n"
    },
    {
        "number": 3020,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3020,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6') == '4'\nassert solution('9') == '-1'\nassert solution('1234') == '17'\nassert solution('12346544') == '11112'\n\"\"\"\n"
    },
    {
        "number": 3020,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6') == '4'\nassert solution('149') == '17'\nassert solution('123476544') == '11112'\n"
    },
    {
        "number": 3020,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == -1\nassert solution('1') == -1\nassert solution('12') == -1\nassert solution('1234') == -1\nassert solution('123456789') == -1\n"
    },
    {
        "number": 3020,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6') == '4'\nassert solution('149') == '17'\nassert solution('123476544') == '11112'\nprint(\"Tests passed\")"
    },
    {
        "number": 3020,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == '-1'\nassert solution('99') == '17'\nassert solution('999') == '111'\nassert solution('101') == '1'\nassert solution('1234') == '1234'\n"
    },
    {
        "number": 3020,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('6') == '4'\nassert solution('1234') == '-1'\nassert solution('1112') == '17'\nassert solution('1234') == '11112'\n"
    },
    {
        "number": 3020,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"6\") == 4\nassert solution(\"149\") == 17\nassert solution(\"123476544\") == 11112\nassert solution(\"0\") == -1\nassert solution(\"-1\") == -1\n"
    },
    {
        "number": 3020,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(6) == 4\nassert solution(149) == 17\nassert solution(123476544) == 11112\nprint(solution(int(input())))\n"
    },
    {
        "number": 3021,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 'IMPOSSIBLE'\nassert solution('a') == 'a'\nassert solution('cab') == 'adcb'\nassert solution('cba') == 'abc'\nassert solution('cdacb') == 'adcb'\n"
    },
    {
        "number": 3021,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\ccc\\badca\\n\") == \"adcb\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\\n\") == \"IMPOSSIBLE\"\nassert solution(\"f 2\\ndea\\cfb\\n\") == \"AMBIGUOUS\"\nassert solution(\"a 4\\nacb\\nada\\n\") == \"IMPOSSIBLE\"\nassert solution(\"b 4\\ncaa\\nabc\\n\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3021,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abc') == 'adcb'\nassert solution('badca') == 'IMPOSSIBLE'\nassert solution('dea') == 'AMBIGUOUS'\nassert solution('ccc') == 'adcb'\nassert solution('ccc') == 'adcb'\n"
    },
    {
        "number": 3021,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('d 4\\ncab\\ncda\\ccc\\badca\\n') == 'adcb\\n'\nassert solution('c 4\\ncab\\n') == 'IMPOSSIBLE'\nassert solution('c 4\\nccc\\nbadca\\n') == 'IMPOSSIBLE'\nassert solution('c 4\\nabc\\n') == 'AMBIGUOUS'\nassert solution('c 4\\nbca\\n') == 'AMBIGUOUS'\n"
    },
    {
        "number": 3021,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"d 3\\ncab\\ncda\\nccc\\nbadca\\n\") == \"adcb\"\nassert solution(\"c 4\\ncab\\ncda\\nccc\\nbadca\\n\") == \"IMPOSSIBLE\"\nassert solution(\"c 4\\ncab\\ncda\\nccc\\nbadca\\n\") == \"AMBIGUOUS\"\nassert solution(\"f 2\\ndea\\ncfb\\n\") == \"AMBIGUOUS\"\nassert solution(\"f 2\\ndea\\ncfb\\n\") == \"AMBIGUOUS\"\n"
    },
    {
        "number": 3021,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"d 4\ncab\ncda\nccc\nbadca\n\"\"\") == \"adcb\"\n\nassert solution(\n    \"\"\"f 2\ndea\ncfb\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"c 4\nabc\nbca\ncab\naca\n\"\"\") == \"AMBIGUOUS\"\n\nassert solution(\n    \"\"\"b 4\na b\nb a\nc a\na c\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"z 2\nabz\nbaa\nazb\nbaz\nbzb\nbza\naab\nbza\naab\nbba\naaz\naaz\nbaa\naab\naab\n\"\"\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3021,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3021,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"adcb\"\n\"\"\"\n\nn, d = [int(x) for x in stdin.split()]\nm = {}\nfor i in range(n):\n    word = stdin.readline().strip()\n    k = sorted(word)\n    if k in m:\n        m[k].append(word)\n    else:\n        m[k] = [word]\n\np = []\nfor i in m:\n    p.append(sorted(i))\n\nfor j in p:\n    if j not in m:\n        print(\"IMPOSSIBLE\")\n        break\nelse:\n    print(\"AMBIGUOUS\")\n"
    },
    {
        "number": 3021,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''a b\na c\nb c''') == 'adc'\nassert solution('''a b\na c\nb c''') == 'IMPOSSIBLE'\nassert solution('''a b\nb c\na c''') == 'AMBIGUOUS'\nassert solution('''a b\na c\nb c''') == 'IMPOSSIBLE'\nassert solution('''a b\na c\nb c''') == 'AMBIGUOUS'\n"
    },
    {
        "number": 3021,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('d 4\\ncab\\ncda\\ccc\\badca\\n') == 'adcb\\n'\nassert solution('c 4\\ncab\\ncda\\ccc\\badca\\n') == 'IMPOSSIBLE\\n'\nassert solution('f 2\\ndea\\cfb\\n') == 'AMBIGUOUS\\n'\nassert solution('a 2\\nab\\nac\\nad\\n') == 'IMPOSSIBLE\\n'\nassert solution('a 2\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\"
    },
    {
        "number": 3022,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3 3 3''') == '9'\nassert solution('''10 20 0 0''') == '10'\nassert solution('''100 20 543 12''') == '164'\nassert solution('''1000 10 0 0''') == '100'\nassert solution('''10000 100 10 30''') == '100000'\n"
    },
    {
        "number": 3022,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3022,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 3 3 3\n''') == '9'\nassert solution('''10 20 0 0\n''') == '10'\nassert solution('''100 20 543 12\n''') == '164'\n\nprint('Passes tests')\n"
    },
    {
        "number": 3022,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 3 3 3\") == \"9\"\nassert solution(\"10 20 0 0\") == \"10\"\nassert solution(\"100 20 543 12\") == \"164\"\nprint(solution(stdin))\n"
    },
    {
        "number": 3022,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 3 3 3\") == \"9\"\nassert solution(\"10 20 0 0\") == \"10\"\nassert solution(\"100 20 0 0\") == \"10\"\nassert solution(\"100000000 9 8 7 7\") == \"4\"\nassert solution(\"100000000 9 8 7 7\") == \"10\"\n"
    },
    {
        "number": 3022,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4\") == \"1\"\nassert solution(\"1 2 2 2\") == \"1\"\nassert solution(\"1 1 1 1\") == \"4\"\nassert solution(\"1 1 1 1 1 1 1\") == \"4\"\nassert solution(\"2 3 3 3\") == \"4\"\n"
    },
    {
        "number": 3022,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3022,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 3 3 3\") == \"9\"\nassert solution(\"10 20 0 0\") == \"10\"\nassert solution(\"100 20 543 12\") == \"164\"\nassert solution(\"9 5 6 3\") == \"1\"\nassert solution(\"5 2 3 4\") == \"0\"\n"
    },
    {
        "number": 3022,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 3 3 3''') == '9'\nassert solution('''10 20 0 0''') == '10'\nassert solution('''100 20 543 12''') == '164'\nassert solution('''10 5 0 0''') == '10'\nassert solution('''0 0 0 0''') == '0'\n"
    },
    {
        "number": 3022,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 3 3 3\") == \"9\"\nassert solution(\"10 20 0 0\") == \"10\"\nassert solution(\"100 20 543 12\") == \"164\"\nassert solution(\"100 10 0 0\") == \"0\"\nassert solution(\"100 10 0 0\") == \"0\"\n"
    },
    {
        "number": 3023,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n-1 -1 0\\n0 -1 0\\n-1 -1 -2\\n-1 -1 2\\n0 -1 0') == 'yes'\nassert solution('3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12') == 'no'\nassert solution('3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\\n0 1\\n1 0\\n-1 0\\n-1 1 0\\n-1 -1 0\\n0 -1 0\\n-1 -1 -2\\n-1 -1 2\\n0 -1 0') == 'yes'"
    },
    {
        "number": 3023,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3023,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 3 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n-1 -1 2\\n-1 -1 2\\n0 -1 0\\n') == 'yes'\nassert solution('3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\\n') == 'yes'\nassert solution('3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\\n') == 'no'\nassert solution('3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\\n') == 'yes'\nassert solution('3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\\n') == 'no'\n"
    },
    {
        "number": 3023,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 3 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\\n') == 'yes'\nassert solution('3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\\n') == 'no'\n\nprint(solution('4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\\n'))\nprint(solution('3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\\n'))\n\nassert solution('4 3 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\\n') == 'yes'\nassert solution('3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\\n') == 'no'\nprint(solution('4 3 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\\n'))\nprint(solution('3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\\n'))\n\nassert solution('4 3 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\\n') == 'yes'\n"
    },
    {
        "number": 3023,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"5 1 2\n0 1\n1 0\n-1 0\n0 -1\n-1 1 -2\n-1 -1 2\"\"\") == \"yes\"\nassert solution(\"\"\"3 2 3\n2 1\n0 0\n-1 -2\n1 1 -2\n3 6 12\nSample Output 3:\nyes\"\"\") == \"no\"\nassert solution(\"\"\"1 1 2\n0 0\n1 1 -2\n-1 -1 2\n0 -1 0\n-1 1 -2\n-1 -1 2\n0 -1 0\n1 1 -2\n-1 -1 2\n3 6 12\nSample Output 3:\nno\"\"\") == \"yes\"\nassert solution(\"\"\"4 1 2\n0 1\n1 0\n-1 0\n0 -1\n-1 1 -2\n-1 -1 2\n0 -1 0\n1 1 -2\n-1 -1 2\n3 6 12\nSample Output 3:\nno\"\"\") == \"yes\"\nassert solution(\"\"\"6 1 2\n0 1\n1 0\n-1 0\n0 -1\n-1 1 -2\n-1 -1 2\n0 -1 0\n1 1 -2\n-1 -1 2\n3 6 12\nSample Output 3:\nno\"\"\") == \"yes\"\n"
    },
    {
        "number": 3023,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n-1 -1 0\\n0 -1 0\\n-1 -1 -2\\n-1 -1 2\\n0 -1 0\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\\n-1 -1 0\\n0 -1 0\\n-1 -1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\\n0 -1\\n-1 -1 -2\\n-1 -1 2\\n0 -1 0\\n-1 -1 0\\n0 -1 0\\n-1 -1 -2\\n-1 -1 2\\n0 -1 0\") == \"yes\"\n"
    },
    {
        "number": 3023,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3 3') == 'yes'\nassert solution('3 2 3') == 'no'\nassert solution('5 2 3') == 'no'\nassert solution('4 3 3') == 'yes'\nassert solution('2 3 3') == 'no'\n"
    },
    {
        "number": 3023,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 2 3\n0 1\n1 0\n-1 0\n0 -1\n-1 1 -2\n-1 -1 2\n0 -1 0\n''') == 'yes'\nassert solution('''4 2 3\n0 1\n1 0\n-1 0\n0 -1\n-1 1 -2\n-1 -1 2\n0 -1 0\n''') == 'no'\nassert solution('''4 2 3\n0 1\n1 0\n-1 0\n0 -1\n-1 1 -2\n-1 -1 2\n1 1 -2\n0 -1 0\n''') == 'no'\nassert solution('''5 2 1\n2 1\n0 0\n-1 -2\n1 1 -2\n3 6 12\n1 0\n2 1\n0 -1\n2 1\n-1 0\n0 -1 0\n-1 1 -2\n-1 -1 2\n0 -1 0\n''') == 'yes'\nassert solution('''3 2 3\n1 0\n0 0\n-1 -2\n1 1 -2\n3 6 12\n1 0\n2 1\n0 -1\n2 1\n-1 0\n0 -1 0\n-1 1 -2\n-1 -1 2\n0 -1 0\n''') == 'no'\n"
    },
    {
        "number": 3023,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin[:-1]\n"
    },
    {
        "number": 3023,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n4 2 3\n0 1\n1 0\n-1 0\n0 -1\n-1 1 0\n2 1 0\n''') == 'yes'\nassert solution(\n'''\n3 2 3\n2 1\n0 0\n-1 -2\n1 1 -2\n3 6 12\n''') == 'no'\n"
    },
    {
        "number": 3024,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('652526') == '4'\nassert solution('12121131221') == '7'\nassert solution('123456789') == '1'"
    },
    {
        "number": 3024,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('652526') == '4'\nassert solution('12121131221') == '7'\nassert solution('123456789') == '1'\nprint(\"all tests passed\")\n"
    },
    {
        "number": 3024,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('652526') == '4'\nassert solution('12121131221') == '7'\nassert solution('123456789') == '1'\nprint('Test cases passed.')\n"
    },
    {
        "number": 3024,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('652526') == '4'\nassert solution('12121131221') == '7'\nassert solution('123456789') == '1'\nassert solution('99999999999999') == '12'\nassert solution('123456789') == '1'\n"
    },
    {
        "number": 3024,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') is None\nassert solution('123456789') == 1\nassert solution('12345') == 1\nassert solution('1111222222') == 4\nassert solution('1234567890123456789012345678901234567890123456789012345678901234567890') == 7\n"
    },
    {
        "number": 3024,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('652526') == '4'\nassert solution('12121131221') == '7'\nassert solution('123456789') == '1'\n"
    },
    {
        "number": 3024,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('652526') == '4'\nassert solution('12121131221') == '7'\nassert solution('123456789') == '1'\nprint('Testcases passed')\n"
    },
    {
        "number": 3024,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"12121131221\") == \"7\"\nassert solution(\"652526\") == \"4\"\nassert solution(\"123456789\") == \"1\"\nassert solution
    },
    {
        "number": 3024,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('123456789') == '1'\nassert solution('12121131221') == '7'\nassert solution('652526') == '4'\nprint(\"All set? Click 'Check' to earn cool rewards!\")\n"
    },
    {
        "number": 3024,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\"\n"
    },
    {
        "number": 3025,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n1\n1 2\n2 3\n1 3\n''') == '0'\nassert solution('''3 3\n1\n1 2\n2 3\n1 3\n1 3\n1 3\n2 3\n1 3\n''') == '0'\nassert solution('''4 4\n24 10\n1 3\n2 3\n2 4\n1 4\n''') == '24'\nassert solution('''5 5\n100 500 300 75\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6\n''') == '800'\nassert solution('''7 7\n2000 4000 6000 7000 2000\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6\n4 7\n1 7\n''') == '2000'\n"
    },
    {
        "number": 3025,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2') == '0'\nassert solution('4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4') == '24'\nassert solution('3\\n3') == '0'\nassert solution('6\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6') == '800'\nassert solution('1\\n1') == '0'\n"
    },
    {
        "number": 3025,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''3 3\n1\n1 2\n2 3\n1 3\n''') == '0'\nassert solution(\n'''3 3\n1\n1 2\n2 3\n1 3\n''') == '0'\nassert solution(\n'''4 4\n24 10\n1 3\n2 3\n2 4\n1 4\n''') == '24'\nassert solution(\n'''4 4\n24 10\n1 3\n2 3\n2 4\n1 4\n''') == '24'\nassert solution(\n'''8 8\n10000000 10000000 10000000 10000000\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n''') == '10000000'\n"
    },
    {
        "number": 3025,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 3\n1\n1 2\n2 3\n1 3''') == '0'\nassert solution('''4 4\n24 10\n1 3\n2 3\n2 4\n1 4''') == '24'\nassert solution('''6 8\n100 500 300 75\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6''') == '800'\n\nprint(solution(input()))\n"
    },
    {
        "number": 3025,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 3\n1\n1 2\n2 3\n1 3\n3 1\n3 2\n1 4\n2 3\n2 4\n1 4\n''') == '0'\nassert solution('''4 4\n24 10\n1 3\n2 3\n2 4\n1 4\n1 2\n2 3\n3 4\n2 3\n1 4\n''') == '24'\nassert solution('''6 8\n100 500 300 75\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6\n1 4\n''') == '800'\nassert solution('''8 8\n1000000000 1000000000 1000000000\n10000000 1000 1001\n1000 1000 1000\n100 1000 1001\n100 100 1000\n100 1000 1000\n1000 100 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n''') == '1000000000'\nassert solution('''8 8\n1000000000 1000000000 1000000000\n10000000 1000 1001\n1000 1000 1000\n100 1000 1001\n100 100 1000\n100 1000 1000\n1000 100 1000\n1000 1000 1000\n1000 100 1000\n1000 1000 1000\n1000 100 1000\n1000 1000 1000\n1000 1000 1000\n1000 100 1000\n1000 1000 1000\n1000 1000 1000\n1000 100 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 100 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 100 1000\n1000 1000 1000\n1000 100 1000\n1000 1000 1000\n1000 1000 1000\n1000 100 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 100 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 100 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 100 1000\n1000 1000 1000\n1000 1000 1000\n1000 100 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 100 1000\n1000 100 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n"
    },
    {
        "number": 3025,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 3\n1\n1 2\n2 3\n1 3\n''') == \"0\"\nassert solution('''4 4\n24 10\n1 3\n2 3\n2 4\n1 4\n''') == \"24\"\nassert solution('''6 8\n100 500 300 75\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6\n''') == \"800\"\n"
    },
    {
        "number": 3025,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 3\n1\n1 2\n2 3\n1 3\n3\n1 4\n2 3\n2 4\n1 4\n3''') == '0'\nassert solution('''4 4\n24 10\n1 3\n2 3\n2 4\n1 4\n3\n1 4\n2 3\n2 4\n1 4\n3''') == '24'\nassert solution('''6 8\n100 500 300 75\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6\n1 4\n3''') == '800'\nassert solution('''3 3\n1\n1 2\n2 3\n1 3\n3\n1 4\n2 3\n2 4\n1 4\n3''') == '0'\nassert solution('''4 4\n24 10\n1 3\n2 3\n2 4\n1 4\n3\n1 4\n2 3\n2 4\n1 4\n3''') == '24'\n"
    },
    {
        "number": 3025,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2\\n1 3\\n2 3\\n1 3') == '0'\nassert solution('2 3\\n1 3\\n1 4') == '24'\nassert solution('2 3\\n1 3\\n2 4\\n1 4') == '24'\nassert solution('2 3\\n1 3\\n1 4\\n2 4\\n1 4') == '24'\nassert solution('3 3\\n1 3\\n1 4\\n2 4\\n1 4\\n2 3\\n1 3') == '0'\n"
    },
    {
        "number": 3025,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 2\n1\n1 2''') == '0'\nassert solution('''3 3\n1\n1 2\n2 3''') == '0'\nassert solution('''10 9\n1 3\n1 4\n2 3\n2 4\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9''') == '1'\nassert solution('''3 3\n1\n1 2\n2 3''') == '1'\nassert solution('''6 8\n100 500 300 75\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6''') == '800'\n"
    },
    {
        "number": 3025,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2') == '0'\nassert solution('3 4') == '24'\nassert solution('6 8') == '800'\n"
    },
    {
        "number": 3026,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == '-1'\nassert solution('1') == '-1'\nassert solution('2 3 1') == '1 4'\nassert solution('2 1 4 3') == '1 2 3 4'\nassert solution('3 4 2 1') == '1 2 4'\n"
    },
    {
        "number": 3026,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == output\nprint(solution(input))\n"
    },
    {
        "number": 3026,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n2\\n1\\n2') == '1\\n2'\nassert solution('2\\n3\\n1\\n2') == '-1'\nassert solution('2\\n2\\n3\\n1\\n2') == '-1'\nassert solution('2\\n2\\n2\\n1\\n2') == '-1'\nassert solution('2\\n1\\n3\\n2\\n4') == '1\\n2'\n"
    },
    {
        "number": 3026,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 3 2 4\\n1 3 2 4\") == \"1 4\\n\"\nassert solution(\"4\\n1 3 2 4\\n1 3 2 4\") == \"1 2 3 4\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n1 2 3 4 5\") == \"-1\\n\"\nassert solution(\"1 2 2 3 4 5\\n1 2 3 4 5\") == \"-1\\n\"\nassert solution(\"4\\n2 1 4 3\\n2 1 4 3\") == \"1 4\\n\"\n"
    },
    {
        "number": 3026,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3026,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n1 3 2 4\\n') == '1 4\\n'\nassert solution('5\\n1 2 3 4 5\\n') == '1 2 3 4 5\\n'\nassert solution('4\\n2 1 4 3\\n') == '1 2 3 4 5\\n'\nassert solution('7\\n2 1 4 3 5 6 7\\n') == '1 2 3 4 5 6 7\\n'\nassert solution('4\\n1 1 3 3\\n') == '-1\\n'\n"
    },
    {
        "number": 3026,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n1 3 2 4''') == '1 4'\nassert solution('''5\n1 2 3 4 5''') == '1 2 3 4 5'\nassert solution('''4\n2 1 4 3''') == '1 2 3 4'\nassert solution('''1''') == '-1'\nassert solution('''4\n1 4 3 2''') == '1 3 2'\n"
    },
    {
        "number": 3026,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 3 2 4\\n\") == \"1 4\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"1 2 3 4 5\\n\"\nassert solution(\"4\\n2 1 4 3\\n\") == \"-1\\n\"\nassert solution(\"5\\n2 1 4 3 5\\n\") == \"-1\\n\"\nassert solution(\"4\\n1 3 2 4\\n\") == \"1 4\\n\"\n"
    },
    {
        "number": 3026,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n4\n1 3 2 4\n''') == '1 4'\nassert solution('''\n5\n1 2 3 4 5\n''') == '1 2 3 4 5'\nassert solution('''\n4\n2 1 4 3\n''') == '-1'\nassert solution('''\n5\n2 1 4 3 5\n''') == '1 2 3 4 5'"
    },
    {
        "number": 3026,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n1 3 2 4\\n') == '1 4\\n'\nassert solution('5\\n1 2 3 4 5\\n') == '1 2 3 4 5\\n'\nassert solution('4\\n2 1 4 3\\n') == '1 2 3 4 5\\n'\nassert solution('6\\n1 2 3 4 5 6\\n') == '1 2 3 4 5 6\\n'\nassert solution('6\\n1 2 3 4 5 6 7\\n') == '1 2 3 4 5 6 7\\n'\n"
    },
    {
        "number": 3027,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3027,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"..#..#..\\n\"\n    \".######.\\n\"\n    \".######.\\n\"\n    \"..#..#..\\n\"\n) == \"8\"\nassert solution(\n    \"..#..#..\\n\"\n    \".######.\\n\"\n    \".######.\\n\"\n    \"..#..#..\\n\"\n) == \"1\"\nassert solution(\n    \"..#..#..\\n\"\n    \".######.\\n\"\n    \".######.\\n\"\n    \"..#..#..\\n\"\n) == \"5\"\nassert solution(\n    \"..#..#..\\n\"\n    \".######.\\n\"\n    \".######.\\n\"\n    \"..#..#..\\n\"\n) == \"1\"\nassert solution(\n    \"..#..#..\\n\"\n    \".######.\\n\"\n    \".######.\\n\"\n    \"..#..#..\\n\"\n) == \"5\"\n"
    },
    {
        "number": 3027,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    '''.#####\n#####.\n.#####\n"
    },
    {
        "number": 3027,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n4 8\n..#..#..\n.######.\n.######.\n..#..#..\n''') == '8'\nassert solution('''\n3 3\n...\n.#.\n...\n''') == '1'\nassert solution('''\n2 6\n.#####\n#####.\n''') == '5'\nprint('passed')\n"
    },
    {
        "number": 3027,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == None\nassert solution('..#..#..') == None\nassert solution('....#.###.#####...######') == None\nassert solution('..#..#..') == 1\nassert solution('....#.###.#####...######') == 5\n"
    },
    {
        "number": 3027,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 3027,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 8\n..#..#..\n.######.\n.######.\n..#..#..\n''') == '8'\nassert solution('''3 3\n...\n.#.\n...\n''') == '1'\nassert solution('''2 6\n.#####\n#####.\n''') == '5'\nassert solution('''2 3\n.#.\n...\n''') == '5'\nassert solution('''2 4\n..#..\n.#..\n.#..\n''') == '4'\n"
    },
    {
        "number": 3027,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n3 3\n.#####\n.#####\n.#####\n''') == '5'\nassert solution('''\n3 3\n..#..#..\n.######.\n.######.\n..#..#..\n''') == '8'\nassert solution('''\n6 6\n.#####.\n.#...#.\n.#.#..#\n.#...#.\n.#...#.\n.#...#.\n''') == '1'\nassert solution('''\n8 4\n....#\n....#\n..#..#\n##.##.\n##.##.\n....#\n....#\n''') == '1'\nassert solution('''\n7 7\n..##.##.\n"
    },
    {
        "number": 3027,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('\\n'.join([\n    '4 8',\n    '.#####',\n    '.#####',\n    '.#.#.#',\n    '..#..#',\n])) == '8'\nassert solution('\\n'.join([\n    '4 7',\n    '########',\n    '.######.########',\n    '.#.#.#.#.#.###',\n    '.#.###.######.',\n])) == '12'\nassert solution('\\n'.join([\n    '6 6',\n    '##.##.##.##',\n    '#.#.#.#.#.#',\n    '##.##.##.##',\n    '#.#.#.#.#.#',\n    '##.##.##.##',\n    '#.#.#.#.#.#',\n    '##.##.##.##',\n])) == '16'\nassert solution('\\n'.join([\n    '4 8',\n    '###...###',\n    '#.#.#.#.#',\n    '###...###',\n    '.#.#####.',\n    '#.#.#.###',\n    '#.#.#.###',\n    '#.#.#.###',\n    '#.#.#.###',\n    '##...#..#',\n])) == '24'\nassert solution('\\n'.join([\n    '3 5',\n    '#..#.#..',\n    '#.#.#.#.',\n    '#.#.##.#',\n    '#.#.#.##',\n    '#.#.#.#.',\n    '#.#.#.#.',\n    '#.#.#.#.',\n    '#.#.#.#.',\n    '#.#.#.#.',\n    '#.#.#.#.',\n    '#.#.#.#.',\n])) == '24'\n\n\"\"\"#!/bin/python\n\nimport sys"
    },
    {
        "number": 3027,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"5\"\n\"\"\"\n"
    },
    {
        "number": 3028,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3028,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == \"\"\n\"\"\""
    },
    {
        "number": 3028,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '19 12 2 18 5 5'\n\n--------------------------------------------------------------------------------------------------------\nSample Output"
    },
    {
        "number": 3028,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 3 3\\n1 2 1\\n2 1 2\\n1 2 2\\n\") == \"19 12 2 18 5 5\"\nassert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n\") == \"6\"\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\\n\") == \"13\"\nassert solution(\"3 3 3\\n1 1 1\\n3 2 2\\n2 2 2\\n3 3 3\\n\") == \"4 2 6 1 9 7 5 5 7 1 2 3 3\"\nassert solution(\"4 4 4\\n2 2 2\\n2 2 2\\n2 2 2\\n2 2 2\\n\") == \"4\"\n"
    },
    {
        "number": 3028,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 3 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\") == 6\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\\n3 1 3\\n3 2 3\\n3 1 3\") == 13\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\\n3 2 3\\n3 1 3\\n3 2 3\") == -1\nassert solution(\"3 2 1\\n1 2\\n2 1\\n1 2\\n3 2 1\\n3 1 3\\n3 2 3\") == 4\nassert solution(\"3 1 1\\n3 1 3\\n3 1 3\\n3 1 3\") == 5\n"
    },
    {
        "number": 3028,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 5 5\n2 1 1 1 2\n5 3 4 4 3\n4 3 3 3 2\n3 1 3 3 1\n''') == '6'\nassert solution('''3 3 3\n3 1 1\n1 3 2\n3 2 3\n''') == '13'\nassert solution('''3 2 2\n1 2\n2 1\n1 2\n''') == '-1'\nassert solution('''3 2 2\n1 2\n2 1\n1 2\n2 2\n''') == '-1'\nassert solution('''4 2 2\n1 2\n2 1\n1 2\n2 2\n''') == '13'\n"
    },
    {
        "number": 3028,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 3 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n3 1 3 3 1\\n3 1 3 3 1\\n3 1 3 3 1\\n3 1 3 3 1\\n3 1 3 3 1\\n3 1 3 3 1\\n3 1 3 3 1\\n3 1 3 3 1') == '6\\n19 12 2 18 5 5'\n"
    },
    {
        "number": 3028,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3028,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3028,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1 1') == '1'\nassert solution('2 3 4') == '-1'\nassert solution('2 1 1 1 2') == '6'\nassert solution('3 1 3 3 1') == '13'\nassert solution('3 3 3') == '-1'\n"
    },
    {
        "number": 3029,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3029,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3029,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n3\n3\n3\n3\n3\n1\n2\n3\n4\n''') == '5 1'\nassert solution('''5\n4\n3\n2\n1\n0\n1\n2\n3\n4\n''') == '3 2'\nprint(solution('''4\n1\n5\n3\n6\n1\n2\n3\n'''))\n"
    },
    {
        "number": 3029,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n3\n3\n3\n3\n3\n1\n2\n3\n4\n''') == '5 1'\nassert solution('''5\n4\n3\n2\n1\n0\n1\n2\n3\n4\n''') == '3 2'\nassert solution('''4\n1\n5\n3\n6\n1\n2\n3\n''') == '1 5'\nassert solution('''4\n1\n5\n3\n6\n1\n2\n3\n''') == '1 5'\nassert solution('''4\n1\n5\n3\n6\n1\n2\n3\n''') == '3 2'\n"
    },
    {
        "number": 3029,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1 1\"\nassert solution(\"1 2\") == \"2 1\"\nassert solution(\"1 2 3\") == \"2 1\"\nassert solution(\"1 2 3 4\") == \"2 1\"\n"
    },
    {
        "number": 3029,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin[9:]"
    },
    {
        "number": 3029,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n1\n2\n3\n4''') == '3 2'\nassert solution('''5\n3\n3\n3\n3\n3\n1\n2\n3\n4''') == '5 1'\nassert solution('''6\n6\n2\n1\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n"
    },
    {
        "number": 3029,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3029,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n5\n3\n3\n3\n3\n3\n1\n2\n3\n4\n''') == '5 1'\n\nassert solution('''\n5\n4\n3\n2\n1\n0\n1\n2\n3\n4\n''') == '3 2'\n\nassert solution('''\n5\n3\n2\n1\n0\n1\n2\n3\n4\n''') == '3 2'\n"
    },
    {
        "number": 3029,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n3\n3\n3\n3\n3\n1\n2\n3\n4\n''') == '5 1'\nassert solution('''5\n4\n3\n2\n1\n0\n1\n2\n3\n4\n''') == '3 2'\nassert solution('''5\n2\n0\n1\n2\n3\n4\n''') == '1 5'\nassert solution('''5\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n''') == '8 7'\nassert solution('''5\n2\n1\n0\n2\n1\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n''') == '1 5'\n"
    },
    {
        "number": 3030,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 0\") == \"5\"\nassert solution(\"5 0\") == \"5\"\nassert solution(\"6 0\") == \"6\"\nassert solution(\"6 1\") == \"6\"\nassert solution(\"7 0\") == \"7\"\n"
    },
    {
        "number": 3030,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5') == '1'\nassert solution('6') == '5'\nassert solution('7') == '6'\nassert solution('8') == '7'\nassert solution('9') == '8'\n"
    },
    {
        "number": 3030,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1 1\\n1 2 1\\n1 3 1\\n1 4 1\\n1 5 1\\n1 6 1\\n1 1') == '5'\nassert solution('1\\n1 1\\n1 2 1\\n1 3 1\\n1 4 1\\n1 5 1\\n1 6 1\\n1 1') == '5'\nassert solution('1\\n1 1\\n1 2 1\\n1 3 1\\n1 4 1\\n1 5 1\\n1 6 1\\n1 1') == '5'\nassert solution('1\\n1 1\\n1 2 1\\n1 3 1\\n1 4 1\\n1 5 1\\n1 6 1\\n1 1') == '5'\nassert solution('1\\n1 1\\n1 2 1\\n1 3 1\\n1 4 1\\n1 5 1\\n1 6 1\\n1 1') == '5'\n"
    },
    {
        "number": 3030,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2 0') == '1'\nassert solution('2 2 1') == '2'\nassert solution('2 2 1 1') == '3'\nassert solution('2 2 1 1 1') == '5'\nassert solution('2 2 1 1 1 1') == '6'\n"
    },
    {
        "number": 3030,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n1 1\\n3 0\\n3 1\") == \"1\"\nassert solution(\"3 3\\n2 2\\n1 1\\n0 0\\n1 1\\n0 0\\n3 1\") == \"3\"\nassert solution(\"1 1\\n0 0\\n3 1\") == \"1\"\nassert solution(\"1 1\\n0 0\\n0 0\\n3 1\") == \"3\"\nassert solution(\"1 1\\n0 0\\n0 0\\n3 1\") == \"3\"\n"
    },
    {
        "number": 3030,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"5\n3 0\n3 1\n3 2\n3 3\n3 4\n\"\"\") == \"5\"\n\nassert solution(\n\"\"\"5\n4 0\n3 1\n2 2\n1 3\n0 4\n\"\"\") == \"5\"\n\nassert solution(\n\"\"\"6\n3 0\n1 1\n2 1\n3 1\n4 1\n5 1\n6 1\n\"\"\") == \"6\"\n"
    },
    {
        "number": 3030,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n3 0\n3 1\n3 2\n3 3\n3 4\n''') == '1'\n\nassert solution('''5\n4 0\n3 1\n2 2\n1 3\n0 4\n''') == '5'\n\nassert solution('''5\n6 0\n3 1\n2 2\n1 3\n0 4\n''') == '5'\n\nassert solution('''5\n4 0\n3 1\n2 2\n1 3\n0 4\n''') == '5'\n\nassert solution('''5\n4 0\n3 1\n2 2\n1 3\n0 4\n''') == '5'"
    },
    {
        "number": 3030,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4 5 6') == '5'\nassert solution('1 2 3 4 5') == '5'\nassert solution('1 2 3 4') == '4'\nassert solution('1 2 3 4 5 6') == '5'\nassert solution('1 2 3 4 5') == '5'\n"
    },
    {
        "number": 3030,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3030,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n0 1\\n3 1\\n2 1\\n1 3') == '4'\nassert solution('3\\n0 1\\n2 1\\n3 1') == '1'\nassert solution('3\\n0 1\\n1 1\\n2 1') == '5'\nassert solution('3\\n0 1\\n1 1\\n2 1\\n3 1') == '5'\nassert solution('4\\n0 1\\n2 1\\n3 1\\n4 1') == '5'\n"
    },
    {
        "number": 3031,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n1 2 2\\n1 3 1\\n2 4 3\\n2 7 1\\n3 5 2\\n5 6 2\\n7 8 1\\n9 2 2') == '4\\n3\\n4\\n5\\n6\\n7\\n'\nassert solution('8\\n1 2 2\\n1 3 1\\n2 4 3\\n2 7 1\\n3 5 2\\n5 6 2\\n7 8 1\\n9 2 2') == '4\\n3\\n4\\n5\\n6\\n7\\n'\nassert solution('5\\n1 2 2\\n1 3 1\\n2 4 3\\n2 7 1\\n3 5 2\\n4 5 1\\n5 6 1\\n6 7 1\\n7 8 1\\n8 9 1\\n9 10 1') == '0\\n'\nassert solution('10\\n1 2 2\\n1 3 1\\n2 4 3\\n2 7 1\\n3 5 2\\n5 6 2\\n7 8 1\\n9 2 2\\n10 3 1\\n11 4 1\\n12 4 1') == '5\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n'\nassert solution('8\\n1 2 2\\n1 3 1\\n2 4 3\\n2 7 1\\n3 5 2\\n5 6 2\\n7 8 1\\n9 2 2') == '4\\n3\\n4\\n5\\n6\\n7\\n'\n"
    },
    {
        "number": 3031,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 3 1\") == \"2\"\nassert solution(\"1 3 1\\n2 3 1\\n3 4 3\\n4 5 4\\n5 6 3\\n6 7 2\\n6 8 2\\n7 8 1\") == \"4\\n3\\n4\\n5\\n6\\n7\"\n\n\"\"\"\n"
    },
    {
        "number": 3031,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"8\n1 3 1\n2 3 1\n3 4 3\n4 5 4\n5 6 3\n6 7 2\n6 8 2\n7 8 1\n\"\"\") == \"4\\n3\\n4\\n5\\n6\\n7\\n\"\nassert solution(\"\"\"8\n1 2 2\n1 3 1\n1 4 5\n1 5 5\n2 6 3\n3 7 3\n4 8 1\n5 9 2\n\"\"\") == \"0\\n1\\n2\\n3\\n6\\n7\\n\"\nassert solution(\"\"\"9\n1 2 2\n1 3 1\n1 4 5\n1 5 5\n2 6 3\n3 7 3\n4 8 1\n5 9 2\n6 9 3\n7 9 4\n8 9 5\n\"\"\") == \"5\\n1\\n2\\n3\\n6\\n7\\n8\\n\"\nassert solution(\"\"\"9\n1 2 2\n1 3 1\n1 4 5\n1 5 5\n2 6 3\n3 7 3\n4 8 1\n5 9 2\n6 9 3\n7 9 4\n8 9 5\n\"\"\") == \"5\\n1\\n2\\n3\\n6\\n7\\n8\\n\"\nassert solution(\"\"\"1\n1 1\n\"\"\") == \"0\\n\"\n"
    },
    {
        "number": 3031,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 2 1\\n2 3 1\\n1 3 1\") == \"0\\n1\"\nassert solution(\"2 2 1\\n1 3 1\\n1 4 5\\n1 5 5\\n2 6 3\\n3 7 3\\n4 8 1\\n5 9 2\") == \"5\\n1\\n2\\n3\\n6\\n7\\n8\"\nprint(solution(input()))\n"
    },
    {
        "number": 3031,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"1\n1 3 1\n2 3 1\n3 4 3\n4 5 4\n5 6 3\n6 7 2\n6 8 2\n7 8 1\n8 9 2\"\"\") == \"\"\"4\n3\n4\n5\n6\n7\n\"\"\"\n\nassert solution(\"\"\"8\n1 2 2\n1 3 1\n2 4 3\n2 7 1\n3 5 2\n5 6 2\n7 8 1\n8 9 2\"\"\") == \"\"\"0\n\"\"\"\n"
    },
    {
        "number": 3031,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 2\") == \"4\"\nassert solution(\"1 3 1\") == \"3\"\nassert solution(\"2 3 1\") == \"4\"\nassert solution(\"2 4 3\") == \"5\"\nassert solution(\"3 4 3\") == \"6\"\n"
    },
    {
        "number": 3031,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"8\") == \"4\"\nassert solution(\"9\") == \"0\"\nassert solution(\"2 2 2\") == \"0\"\nassert solution(\"1 2 2\") == \"0\"\nassert solution(\"2 1 2\") == \"0\"\n"
    },
    {
        "number": 3031,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"8\") == \"4\"\nassert solution(\"9\") == \"0\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"2\"\nassert solution(\"7\") == \"3\"\n"
    },
    {
        "number": 3031,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''8\n1 3 1\n2 3 1\n3 4 3\n4 5 4\n5 6 3\n6 7 2\n6 8 2\n''') == '4\\n3\\n4\\n5\\n6\\n7\\n'\n\nassert solution('''8\n1 2 2\n1 3 1\n2 4 3\n2 7 1\n3 5 2\n5 6 2\n7 8 1\n''') == '0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n'\n\nassert solution('''9\n1 2 2\n1 3 1\n1 4 5\n1 5 5\n2 6 3\n3 7 3\n4 8 1\n5 9 2\n''') == '5\\n1\\n2\\n3\\n6\\n7\\n8\\n'\n"
    },
    {
        "number": 3031,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3032,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == str(solution(stdin))\n\"\"\"\n\n\nimport sys"
    },
    {
        "number": 3032,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') is None\nassert solution('1 2') == None\nassert solution('1 1') == None\nassert solution('1 1 1') == None\nassert solution('2 1') == None\n"
    },
    {
        "number": 3032,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2\\nV1 V2 V1 V1 V2\\n') == '5'\nassert solution('2 1\\nV1 V2 V1 V1 V2\\n') == '6'\nassert solution('1 2\\nR10 V1 V2 V1 E\\n') == '30'\nassert solution('2 1\\nR10 V1 V2 V1 E\\n') == '30'\n\n\n\n\n\n\n'''\n"
    },
    {
        "number": 3032,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 2\nV1 V2 V1 V1 V2\n''') == '5'\nassert solution('''1 2\nV1 V2 V1 V1 V2\n''') == '6'\nassert solution('''2 1\nV1 V2 V1 V1 V2\n''') == '30'\nassert solution('''2 2\nV1 V2 V1 V1 V2\n''') == '30'\nassert solution('''1 4\nR10 V1 V2 V1 E\n''') == '60'\n"
    },
    {
        "number": 3032,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('V1 V2 V1 V1 V2') == '5'\nassert solution('V1 V2 V1 V1 V2') == '5'\nassert solution('V1 V2 V1 V1 V2') == '6'\nassert solution('R10 V1 V2 V1 E') == '30'\nassert solution('R10 V1 V2 V1 E') == '30'\n"
    },
    {
        "number": 3032,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2\\nV1 V2 V1 V1 V2\\n') == '5'\nassert solution('2 1\\nV1 V2 V1 V1 V2\\n') == '6'\nassert solution('1 2\\nR10 V1 V2 V1 E\\n') == '30'\nassert solution('1 2\\nV1 R10 V1 V2 V1 E\\n') == '30'\nassert solution('1 2\\n
    },
    {
        "number": 3032,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 2\nV1 V2 V1 V1 V2''') == '5'\nassert solution('''2 1\nV1 V2 V1 V1 V2''') == '6'\nassert solution('''1 2\nR10 V1 V2 V1 E''') == '30'\nassert solution('''4 4\nV1 V2 V1 V1 V2''') == '15'\nassert solution('''1 5\nV1 V2 V1 V1 V2''') == '26'\n"
    },
    {
        "number": 3032,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 2\nV1 V2 V1 V1 V2''') == '5'\nassert solution('''1 2\nV1 V2 V1 V1 V2\n''') == '6'\nassert solution('''1 2\nR10 V1 V2 V1 E\n''') == '30'\nassert solution('''1 2\nV1 V2 V1 V1 V2\n''') == '5'\n'''\n\"\"\"\n\n'''\n\n\"\"\"\n-----A1 -----\n-----B2 -----\n-----C3 -----\n-----D4 -----\n-----E5 -----\n-----F6 -----\n-----G7 -----\n-----H8 -----\n-----I9 -----\n-----J10 -----\n-----K11 -----\n-----L12 -----\n-----M13 -----\n-----N14 -----\n-----O15 -----\n-----P16 -----\n-----Q17 -----\n-----R18 -----\n-----S19 -----\n-----T20 -----\n-----U21 -----\n-----V22 -----\n-----W23 -----\n-----X24 -----\n-----Y25 -----\n-----Z26 -----\n-----A27 -----\n-----B28 -----\n-----C29 -----\n-----D30 -----\n-----E31 -----\n-----F32 -----\n-----G33 -----\n-----H34 -----\n-----I35 -----\n-----J36 -----\n-----K37 -----\n-----L38 -----\n-----M39 -----\n-----N40 -----\n-----O41 -----\n-----P42 -----\n-----Q43 -----\n-----R44 -----\n-----S45 -----\n-----T46 -----\n-----U47 -----\n-----V48 -----\n-----W49 -----\n-----X50 -----\n-----Y51 -----\n-----Z52 -----\n-----A53 -----\n-----B54 -----\n-----C55 -----\n-----D56 -----\n-----E57 -----\n-----F58 -----\n-----G59 -----\n-----H60 -----\n-----I61 -----\n-----J62 -----\n-----K63 -----\n-----L64 -----\n-----M65 -----\n-----N66 -----\n-----O67 -----\n-----P68 -----\n-----Q69 -----\n-----R70 -----\n-----S71 -----\n-----T72 -----\n-----U73 -----\n-----V74 -----\n-----W75 -----\n-----X76 -----\n-----Y77 -----\n-----Z78 -----\n-----A79 -----\n-----B80 -----\n-----C81 -----\n-----D82 -----\n-----E83 -----\n-----F84 -----\n-----G85 -----\n-----H86 -----\n-----I87 -----\n-----J88 -----\n-----K89 -----\n-----L90 -----\n-----M91 -----\n-----N92 -----\n-----O93 -----\n-----P94 -----\n-----Q95 -----\n-----R96 -----\n-----S97 -----\n-----T98 -----\n-----U99 -----\n-----V100 -----\n-----W101 -----\n-----X102 -----\n-----Y103 -----\n-----Z104 -----\n-----A105 -----\n-----B106 -----\n-----C107 -----\n-----D108 -----\n-----E109 -----\n-----F110 -----\n-----G111 -----\n-----H112 -----\n-----I113 -----\n-----J114 -----\n-----K115 -----\n-----L116 -----\n-----M117 -----\n-----N118 -----\n-----O119 -----\n-----P120 -----\n-----Q121 -----\n-----R122 -----\n-----S123 -----\n-----T124 -----\n-----U125 -----\n-----V126 -----\n-----W127 -----\n-----X128 -----\n-----Y129 -----\n-----Z130 -----\n-----A131 -----\n-----B132 -----\n-----C133 -----\n-----D134 -----\n-----E135 -----\n-----F136 -----\n-----G137 -----\n-----H138 -----\n-----I139 -----\n-----J140 -----\n-----K141 -----\n-----L142 -----\n-----M143 -----\n-----N144 -----\n-----O145 -----\n-----P146 -----\n-----Q147 -----\n-----R148 -----\n-----S149 -----\n-----T150 -----\n-----U151 -----\n-----V152 -----\n-----W153 -----\n-----X154 -----\n-----Y155 -----\n-----Z156 -----\n-----A157 -----\n-----B158 -----\n-----C159 -----\n-----D160 -----\n-----E161 -----\n-----F162 -----\n-----G163 -----\n-----H164 -----\n-----I165 -----\n-----J166 -----\n-----K167 -----\n-----L168 -----\n-----M169 -----\n-----N170 -----\n-----O171 -----\n-----P172 -----\n-----Q173 -----\n-----R174 -----\n-----S175 -----\n-----T176 -----\n-----U177 -----\n-----V178 -----\n-----W179 -----\n-----X180 -----\n-----Y181 -----\n-----Z182 -----\n-----A183 -----\n-----B184 -----\n-----C185 -----\n-----D186 -----\n-----E187 -----\n-----F188 -----\n-----G189 -----\n-----H190 -----\n-----I191 -----\n-----J192 -----\n-----K193 -----\n-----L194 -----\n-----M195 -----\n-----N196 -----\n-----O197 -----\n-----P198 -----\n-----Q199 -----\n-----R200 -----\n-----S201 -----\n-----T202 -----\n-----U203 -----\n-----V"
    },
    {
        "number": 3032,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n1 2\nV1 V2 V1 V1 V2\n''') == '5'\nassert solution('''\n2 1\nV1 V2 V1 V1 V2\n''') == '6'\nassert solution('''\n2 2\nV1 V2 V1 V1 V2\n''') == '30'\nassert solution('''\n1 2\nV1 V2 V1 V1 V2\n''') == '30'\nassert solution('''\n2 3\nV1 V2 V1 V1 V2\n''') == '36'\n"
    },
    {
        "number": 3032,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n1 2\nV1 V2 V1 V1 V2\n''') == '5'\nassert solution('''\n1 2\nV1 V2 V1 V1 V2\n''') == '6'\nassert solution('''\n1 2\nR10 V1 V2 V1 E\n''') == '30'\n"
    },
    {
        "number": 3033,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"10 22\") == \"38\"\nassert solution(\"10 11\") == \"impossible\"\nassert solution(\"9 216\") == \"546\"\nprint(solution(stdin))\n"
    },
    {
        "number": 3033,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 3033,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10 24') == '38'\nassert solution('10 11') == 'impossible'\nassert solution('9 216') == '546'\n'''\n"
    },
    {
        "number": 3033,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 24') == '38'\nassert solution('10 11') == 'impossible'\nassert solution('9 216') == '546'\nassert solution('0 0') == 'impossible'\nassert solution('1 0') == 'impossible'\n"
    },
    {
        "number": 3033,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3033,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2') == 'impossible'\nassert solution('9 3') == '546'\nassert solution('13 5') == '1166'\nassert solution('10 26') == '38'\nassert solution('90 35') == '1570'\n"
    },
    {
        "number": 3033,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == answer(stdin)\n"
    },
    {
        "number": 3033,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3033,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3033,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input(\"\")) == \"impossible\"\nassert solution(input(\"\")) == \"impossible\"\nassert solution(input(\"\")) == \"impossible\"\nassert solution(input(\"\")) == \"impossible\"\nassert solution(input(\"\")) == \"impossible\"\n"
    },
    {
        "number": 3034,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''20 60 2 1\n5 15 0.33333 30\n22 60 0.66667 70\n0 10\n''') == '466.662'\nassert solution(\n'''3 4 2 1\n1 3 0.25 8\n2 4 0.66667 15\n1 2\n''') == '10.00005'\nprint(solution(stdin))\n\n\"\"\"\n\nfrom math import ceil, sqrt\n"
    },
    {
        "number": 3034,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 2 1\") == \"0.5\"\nassert solution(\"2 1 2\") == \"0.6666666666666666\"\nassert solution(\"1 1 1 0\") == \"0.5\"\nassert solution(\"0 0 0 0 0 0 0 0 0\") == \"0\"\nassert solution(\"10 10 0 0\") == \"10\"\n"
    },
    {
        "number": 3034,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    '''20 60 2 1\n5 15 0.33333 30\n22 60 0.66666 70\n0 10'''\n) == '466.662'\nassert solution(\n    '''3 4 2 1\n1 3 0.25 8\n2 4 0.66667 15\n1 2'''\n) == '10.00005'\nassert solution(\n    '''3 4 1 0\n0 2 0.25 8\n2 4 0.66667 15\n1 2'''\n) == '2.0'\n"
    },
    {
        "number": 3034,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('20 60 2 1') == '466.662'\nassert solution('3 4 2 1') == '10.00005'\nassert solution('5 15 0.33333 30') == '466.662'\nassert solution('22 60 0.66666 70') == '10.00005'\nassert solution('0 10') == '2.0'\n"
    },
    {
        "number": 3034,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"20 60 2 1\n5 15 0.33333 30\n22 60 0.66667 70\n0 10\"\"\") == \"466.6662\"\nassert solution(\"\"\"3 4 2 1\n1 3 0.25 8\n2 4 0.66667 15\n1 2\"\"\") == \"10.00005\"\nassert solution(\"\"\"0 2 0.25 8\n1 3 0.333333 3\n2 4 0.6666667 3\n1 2\"\"\") == \"2.00000\"\nassert solution(\"\"\"0 3 0.25 8\n1 4 0.6666667 3\n2 5 0.33333 30\n1 2\n0 1\"\"\") == \"6.6664\"\nassert solution(\"\"\"1 2\n2 3 0.8\n1 2\n0 1\"\"\") == \"3.33333\"\n"
    },
    {
        "number": 3034,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"20 60 2 1\\n5 15 0.33333 30\\n22 60 0.66666 70\\n0 10\") == \"466.662\\n\"\nassert solution(\"3 4 2 1\\n1 3 0.25 8\\n2 4 0.66667 15\\n1 2\\n\") == \"10.00005\\n\"\nassert solution(\"3 4 1 0\\n0 2 0.25 8\\n2 4 0.66667 15\\n1 2\\n\") == \"2.0\\n\"\n"
    },
    {
        "number": 3034,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '4.664'\n\n\"\"\"\n\nimport sys\n\nd, t, c, r = map(int, input().split())\n\nclouds = [input().split() for _ in range(c)]\n\nfor cloud in clouds:\n    cloud[0] = int(cloud[0])\n    cloud[1] = int(cloud[1])\n    cloud[2] = float(cloud[2])\n    cloud[3] = int(cloud[3])\n\nroofs = [input().split() for _ in range(r)]\n\nfor roof in roofs:\n    roof[0] = int(roof[0])\n    roof[1] = int(roof[1])"
    },
    {
        "number": 3034,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('20 60 2 1') == '466.662'\nassert solution('3 4 2 1') == '10.00005'\nassert solution('3 4 1 0') == '2.0'\nassert solution('3 4 1 1') == '1.0'\nassert solution('3 4 1 1') == '0.5'\n"
    },
    {
        "number": 3034,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n"
    },
    {
        "number": 3034,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''20 60 2 1\n5 15 0.33333 30\n22 60 0.66667 70\n0 10\n''') == '466.662'\nassert solution('''3 4 2 1\n1 3 0.25 8\n2 4 0.66667 15\n1 2\n''') == '10.00005'\n"
    },
    {
        "number": 3035,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\nblue pink 1.0\nred pink 1.5\nblue red 1.0''') == '1.500000000000000'\nassert solution('''2\nblue red 1.0\nred pink 1.5''') == '0.000000000000000'\nassert solution('''4\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9''') == '10.000000000000000'\nassert solution('''2\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9''') == '0.000000000000000'\nassert solution('''5\nblue red 1.0\nred pink 1.5\nblue pink 1.0\nblue red 1.0\nred pink 1.5''') == '1.500000000000000'\n"
    },
    {
        "number": 3035,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\nblue\\nred\\nred\\nblue\\n') == '0.0'\nassert solution('3\\nblue\\nred\\nred\\nblue\\n') == '1.500000000000000'\nassert solution('2\\nblue\\nred\\nred\\nblue\\n') == '0.000000000000000'\nassert solution('4\\norange\\npink\\n1.9\\nblue\\nred\\nred\\nblue\\n') == '10.000000000000000'\nassert solution('2\\nblue\\nred\\nred\\nblue\\n') == '0.000000000000000'\n"
    },
    {
        "number": 3035,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3\\nblue pink 1.0\\nred pink 1.5\\nblue red 1.0\") == \"1.500000000000000\"\nassert solution(\"2\\nblue red 1.0\\nred pink 1.5\\n\") == \"0.000000000000000\"\nassert solution(\"4\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\\n\") == \"10.000000000000000\"\n\"\"\"\n"
    },
    {
        "number": 3035,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\nblue pink 1.0\nred pink 1.5\nblue red 1.0''') == '1.500000000000000\\n'\nassert solution('''2\nblue red 1.0\nred pink 1.5''') == '0.000000000000000\\n'\nassert solution('''4\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9''') == '10.000000000000000\\n'\n"
    },
    {
        "number": 3035,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''3\nblue pink 1.0\nred pink 1.5\nblue red 1.0'''\n) == '1.500000000000000'\n\nassert solution(\n'''2\nblue red 1.0\nred pink 1.5'''\n) == '0.000000000000000'\n\nassert solution(\n'''4\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9'''\n) == '10.000000000000000'\n"
    },
    {
        "number": 3035,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\nblue pink 1.0\\nred pink 1.5\\nblue red 1.0\\n') == '1.500000000000000\\n'\nassert solution('3\\nblue red 1.0\\nred pink 1.5\\nblue red 1.0\\n') == '0.000000000000000\\n'\nassert solution('3\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\\n') == '10.000000000000000\\n'\n"
    },
    {
        "number": 3035,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 1.0\") == \"\"\nassert solution(\"1 1.0 1.0\") == \"\"\nassert solution(\"1 1.0 1.0 1.0\") == \"\"\n"
    },
    {
        "number": 3035,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('blue red 1.0\\nred pink 1.5\\nblue red 1.0') == '1.500000000000000'\nassert solution('blue red 1.0\\nred pink 1.5\\nblue red 1.0\\n') == '0.000000000000000'\nassert solution('blue red 1.0\\nred pink 1.5\\nblue red 1.0\\nyellow orange 1.9\\nyellow orange 1.9\\n') == '10.000000000000000'\nassert solution('blue red 1.0\\nred pink 1.5\\nblue red 1.0\\ngreen yellow 1.9\\ngreen yellow 1.9\\n') == '10.000000000000000'\nassert solution('blue red 1.0\\nred pink 1.5\\nblue red 1.0\\ngreen yellow 1.9\\ngreen yellow 1.9\\nyellow orange 1.9\\n') == '10.000000000000000'\n"
    },
    {
        "number": 3035,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\\nblue pink 1.0\\nred pink 1.5\\nblue red 1.0\\n\") == \"1.500000000000000\\n\"\nassert solution(\"2\\nblue red 1.0\\nred pink 1.5\\n\") == \"0.000000000000000\\n\"\nassert solution(\"4\\no\\nu\\ng\\n\\n\") == \"10.000000000000000\\n\"\nassert solution(\"6\\nblue green 1.9\\nyellow orange 1.9\\nred pink 1.9\\nblue red 1.9\\ngreen yellow 1.9\\n\") == \"10.000000000000000\\n\"\nassert solution(\"8\\nblue green 1.9\\nyellow orange 1.9\\nred pink 1.9\\nblue red 1.9\\ngreen yellow 1.9\\nblue blue 1.9\\nred yellow 1.9\\n\") == \"10.000000000000000\\n\"\n"
    },
    {
        "number": 3035,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\nblue pink 1.0\nred pink 1.5\nblue red 1.0''') == '1.500000000000000'\nassert solution('''2\nblue red 1.0\nred pink 1.5''') == '0.000000000000000'\nassert solution('''4\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9''') == '10.000000000000000'\nassert solution('''4\norange pink 1.0\nyellow orange 1.0\ngreen yellow 1.0\nblue green 1.0''') == '0.000000000000000'\nassert solution('''4\norange pink 1.0\nyellow orange 1.5\ngreen yellow 1.0\nblue green 1.0''') == '1.500000000000000'\n"
    },
    {
        "number": 3036,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 1 1 1 1\\n2 3 2\\n2 1 2\\n3 3 4 5\\n1 6') == '22'\nassert solution('3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\n') == '0'\nassert solution('3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n') == '22'\nassert solution('3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n') == '0'\nassert solution('3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n') == '0'\n"
    },
    {
        "number": 3036,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n''') == '180'\nassert solution('''3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\n''') == '22'\nassert solution('''3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n''') == '0'\nassert solution('''3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n''') == '22'\nassert solution('''6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n''') == '180'\n"
    },
    {
        "number": 3036,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 1 1 1 0\") == \"\"\nassert solution(\"2 3 1 5 3 2\") == \"180\"\nassert solution(\"2 1 2\") == \"22\"\nassert solution(\"3 3 4 5\") == \"0\"\n"
    },
    {
        "number": 3036,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 3036,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n''') == '0'\nassert solution('''\n3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\n''') == '22'\nassert solution('''\n3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n''') == '0'\nassert solution('''\n3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n1 1\n1 2\n2 3\n2 1\n1 1\n''') == '180'\nassert solution('''\n3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\n1 1\n1 2\n''') == '0'\n"
    },
    {
        "number": 3036,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\\n\") == \"180\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\n\") == \"22\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n\") == \"0\"\nprint(\"All tests passed successfully!\")\n"
    },
    {
        "number": 3036,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n1 2\n1 3\n1 4\n1 5\n2 1\n2 2\n2 3\n3 1\n3 2\n3 3\n1 4\n1 5\n2 1\n2 2\n2 3\n3 1\n3 2\n3 3\n1 4\n1 5\n2 1\n2 2\n2 3\n3 1\n3 2\n3 3\n1 4\n1 5\n2 1\n2 2\n2 3\n3 1\n3 2\n3 3\n''') == '180'\nassert solution('''\n2 3\n2 1\n3 1\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n2 3\n1 2\n1 2\n1 2\n2 3\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n2 3\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2"
    },
    {
        "number": 3036,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3036,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n''') == '180'\nassert solution('''3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\n''') == '22'\nassert solution('''3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n''') == '0'\nassert solution('''3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n''') == '0'\nassert solution('''6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n''') == '180'\n"
    },
    {
        "number": 3036,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6 1 1 1 0') == '180'\nassert solution('2 3 1 5 3 2') == '22'\nassert solution('2 1 2') == '0'\nassert solution('3 3 4 5') == '22'\nassert solution('1 6') == '0'\n"
    },
    {
        "number": 3037,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 8 5') == '20 20'\nassert solution('6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3') == '20 20'\nassert solution('3 3 2\\n...\\n.#.\\n...\\nup 2\\nright 2') == '-1 -1'\nassert solution('3 3 2\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n"
    },
    {
        "number": 3037,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\n\") == \"20 20\"\nassert solution(\"3 3 2\\n...\\n.#.\\n...\\nup 2\\nright 2\\n\") == \"-1 -1\"\nassert solution(\"5 2 2\\n#..\\n##.\\n##.\\nup 2\\nright 2\\n\") == \"2 2\"\nassert solution(\"5 2 2\\n#..\\n##.\\n##.\\nup 2\\nright 2\\n\") == \"2 2\"\nassert solution(\"5 2 2\\n#..\\n##.\\n##.\\nup 2\\nright 2\\n\") == \"2 2\"\n"
    },
    {
        "number": 3037,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\n') == '20 20\\n'\n"
    },
    {
        "number": 3037,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6 8 5\n........\n...#....\n########\n"
    },
    {
        "number": 3037,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"6 8 5\") == \"20 20\"\nassert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nu p 2\\nup 3\") == \"20 20\"\n\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 3037,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6 8 5\n........\n...#....\n########\n"
    },
    {
        "number": 3037,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\\n\") == \"0\\n\"\nassert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"1\\n1\\n\") == \"2\\n\"\nassert solution(\"1\\n1\\n1\\n\") == \"3\\n\"\n"
    },
    {
        "number": 3037,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"6 8 5\") == \"-1 -1\"\nassert solution(\"6 8 4\") == \"-1 -1\"\nassert solution(\"6 8 2\") == \"17 17\"\nassert solution(\"6 8 3\") == \"17 17\"\nassert solution(\"6 8 1\") == \"17 17\"\n"
    },
    {
        "number": 3037,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n6 8 5\n........\n...#....\n########\n"
    },
    {
        "number": 3037,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\") == \"20 20\\n\"\nassert solution(\"3 3 2\\n...\\n.#.\\n...\\nup 2\\nright 2\") == \"-1 -1\\n\"\nassert solution(\"6 8 5\\n........\\n#......\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\") == \"20 17\\n\"\nassert solution(\"5 5 5\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n"
    },
    {
        "number": 3038,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    r\"\"\"\n371\n3\n2 40 65\n2 100 150\n2 300 320\n\"\"\".strip()) == 'impossible'\n\nassert solution(\n    r\"\"\"\n310\n3\n2 40 65\n2 100 150\n2 300 320\n\"\"\".strip()) == '300'\n\nassert solution(\n    r\"\"\"\n90\n2\n2 20 35\n2 88 200\n\"\"\".strip()) == '88'\n\nassert solution(\n    r\"\"\"\n1000\n3\n2 25 17\n2 17 20\n2 17 10\n\"\"\".strip()) == '25'\n\nassert solution(\n    r\"\"\"\n200\n3\n2 25 17\n2 17 20\n2 17 10\n\"\"\".strip()) == '17'"
    },
    {
        "number": 3038,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n371\n3\n2 40 65\n2 100 150\n2 300 320\n''') == 'impossible'\nassert solution('''\n310\n3\n2 40 65\n2 100 150\n2 300 320\n''') == '300'\nassert solution('''\n100\n2\n2 1 1\n2 5 2\n''') == '5'\nassert solution('''\n13\n3\n2 5 1\n2 6 1\n2 7 1\n2 8 1\n2 9 1\n2 10 1\n2 11 1\n2 12 1\n3\n5\n6\n7\n8\n9\n10\n11\n12\n13\n''') == '12'\nassert solution('''\n17\n4\n2 5 1\n2 6 1\n2 7 1\n2 8 1\n2 9 1\n2 10 1\n2 11 1\n2 12 1\n3\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n''') == '15'\n"
    },
    {
        "number": 3038,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n    371\n    3\n    2 40 65\n    2 100 150\n    2 300 320\n    \"\"\") == \"300\"\n\nassert solution(\n\"\"\"\n    310\n    3\n    2 40 65\n    2 100 150\n    2 300 320\n    \"\"\") == \"impossible\"\n\nassert solution(\n\"\"\"\n    90\n    2\n    2 20 35\n    2 88 200\n    \"\"\") == \"88\"\n\nassert solution(\n\"\"\"\n    4\n    2\n    2 10 13\n    3 3 3\n    2 4 2\n    2 4 2\n    3 3 3\n    \"\"\") == \"impossible\"\n"
    },
    {
        "number": 3038,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''371\n3\n2 40 65\n2 100 150\n2 300 320''') == 'impossible'\nassert solution('''310\n3\n2 40 65\n2 100 150\n2 300 320''') == '300'\nprint('Passed')\n"
    },
    {
        "number": 3038,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"impossible\"\n"
    },
    {
        "number": 3038,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n10\n2\n2 10 35\n2 100 150\n2 300 320\n''') == '88'\nassert solution('''\n1\n1\n2 10 35\n2 100 150\n2 300 320\n''') == 'impossible'\nassert solution('''\n10\n3\n2 40 65\n2 100 150\n2 300 320\n''') == '300'\nassert solution('''\n1000\n10\n2 1 3 5 10 15 19\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18"
    },
    {
        "number": 3038,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n2\n2\n2 20 35\n2 88 200\n''') == '88'\nassert solution('''\n1\n3\n2 40 65\n2 100 150\n2 300 320\n''') == 'impossible'\nassert solution('''\n1\n3\n2 10 0\n2 100 10\n2 100 100\n''') == 'impossible'\nassert solution('''\n2\n2\n2 10 0\n2 100 10\n2 100 100\n''') == '0'\nassert solution('''\n2\n2\n2 10 0\n2 100 10\n2 100 100\n''') == '0'\n"
    },
    {
        "number": 3038,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n') == '300'\nassert solution('10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == 'impossible'\nassert solution('40\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n') == 'impossible'\nassert solution('10\\n2\\n2 40 65\\n2 100 150\\n2 300 320\\n') == 'impossible'\nassert solution('10\\n2\\n1 10\\n2 40 65\\n2 100 150\\n2 300 320\\n') == 'impossible'\n"
    },
    {
        "number": 3038,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''371''') == 'impossible'\nassert solution('''310''') == 'impossible'\nassert solution('''90''') == 'impossible'\nassert solution(''''') == 'impossible'\nassert solution('''314''') == 'impossible'\n"
    },
    {
        "number": 3038,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    371\n    3\n    2 40 65\n    2 100 150\n    2 300 320\n    \"\"\") == \"impossible\"\n\nassert solution(\n    \"\"\"\n    310\n    3\n    2 40 65\n    2 100 150\n    2 300 320\n    \"\"\") == \"88\"\n"
    },
    {
        "number": 3039,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == \"cannot fold\"\nassert solution(sample_input2) == \"can fold\"\nassert solution(sample_input3) == \"cannot fold\"\n"
    },
    {
        "number": 3039,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') is True\nassert solution('..#') is True\nassert solution('..#') is True\nassert solution('..#') is True\nassert solution('..#') is True\n"
    },
    {
        "number": 3039,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n\") == \"can fold\"\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n\") == \"cannot fold\"\nassert solution(\"......\\n......\\n......\\n......\\n......\\n......\") == \"can fold\"\nassert solution(\"#...#\\n#...#\\n#...#\\n#...#\\n#...#\\n#...#\\n\") == \"cannot fold\"\nassert solution(\"#...#\\n#...#\\n#...#\\n#...#\\n#...#\\n#...#\\n\") == \"can fold\"\n"
    },
    {
        "number": 3039,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n......') == 'can fold'\nassert solution('#.###\\n###..\\n.#..#\\n#...#\\n#.###\\n#.###\\n#.###') == 'cannot fold'\n"
    },
    {
        "number": 3039,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n"
    },
    {
        "number": 3039,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''......\n......\n######\n......\n......\n......''') == 'cannot fold'\nassert solution('''....\n...#.\n....\n....\n....\n....\n....''') == 'can fold'\n'''\nNotes:\n\nIt is well known that a set of six unit squares that are attached together in a \u201ccross\u201d can be folded into a cube.\n\nBut what about other initial shapes? That is, given six unit squares that are attached together along some of their sides, can we form a unit cube by folding this arrangement?\n\nFor example, given the following configurations:\n\n..##..\n...#..\n..##..\n...#..\n.#####\n....#\n######\n.#####\n##...\n\nYou will be given three vertices that are the relevant vertices for each of the three shapes.\n\nTo determine if these shapes can be folded into a cube, you will need to find the difference in the area of each of the faces of the cube versus the area of the face of the initial shape.\n\nFor example, if the vertices are the vertices of the shape that is to be folded, the vertices of the cube can be found by drawing an outline on a sheet of paper in a small window. The size of the outline is the total area of the face of the cube. The outline would be a closed polygon.\n\nWrite a function that, given the vertices of the cube and the vertices of the shapes that you will be folding into the cube, returns the minimum area difference that will occur between the faces of the cube and the faces of the shapes.\n\nFor example, if the vertices of the cube are the vertices of the shape that is to be folded, and the vertices of the shapes are the vertices of the shape that you are folding into the cube, the minimum area difference between the faces of the cube and the faces of the shapes would be four.\n\nAs you can see, the minimum area difference is four.\n\n-----Examples-----\nInput: \nVertices of the first shape: {A, B, C, D, E, F}\n\nVertices of the second shape: {G, H, I, J, K, L}\n\nVertices of the third shape: {M, N, O, P, Q, R}\n\nOutput: \n4\n\nInput: \nVertices of the first shape: {A, B, C, D, E, F}\n\nVertices of the second shape: {G, H, I, J, K, L}\n\nVertices of the third shape: {M, N, O, P, Q, R}\n\nOutput: \n0\n\nInput: \nVertices of the first shape: {A, B, C, D, E, F}\n\nVertices of the second shape: {G, H, I, J, K, L}\n\nVertices of the third shape: {M, N, O, P, Q, R}\n\nOutput: \n8\n'''"
    },
    {
        "number": 3039,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\".#..\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\") == \"can fold\"\nassert solution(\".##..\\n.#.#.#\\n#.#.#.#\\n#.#.#.#\\n#.#.#.#\\n#.#.#.#\\n#.#.#.#\\n#.#.#.#\\n#.#.#.#\") == \"cannot fold\"\nassert solution(\".#...\\n#....\\n#....\\n#....\\n#....\\n#....\\n#....\\n#....\\n#....\\n#....\") == \"cannot fold\"\nassert solution(\".#.#.#\\n#.#.#.#\\n#.#.#.#\\n#.#.#.#\\n#.#.#.#\\n#.#.#.#\\n#.#.#.#\\n#.#.#.#\\n#.#.#.#\") == \"can fold\"\nassert solution(\".#.##.\\n.#.###.\\n#..##..\\n..##...\\n##.#..#\\n##.##.#\\n###.#.#\\n#.#.###\\n#.#.#..\\n.##.###\") == \"can fold\"\n"
    },
    {
        "number": 3039,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\") == \"can fold\"\nassert solution(\"......\\n......\\n#.....\\n#.....\\n#.....\\n......\\n......\") == \"cannot fold\"\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n......\") == \"can fold\"\nassert solution(\"......\\n......\\n#.....\\n......\\n......\\n......\") == \"cannot fold\"\nassert solution(\"......\\n......\\n......\\n......\\n......\\n......\") == \"can fold\"\n"
    },
    {
        "number": 3039,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''......\n......\n######\n......\n......\n......\n''') == \"can fold\"\nassert solution('''..##..\n...#..\n..##..\n...#..\n......\n......\n''') == \"cannot fold\"\nassert solution('''......\n......\n######\n"
    },
    {
        "number": 3039,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"can fold\"\n"
    },
    {
        "number": 3040,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\"\nassert solution(\"abcabcabcabcabc\") == \"abcabc\"\nassert solution(\"abcabcabcabcabcabcabc\") == \"abcabc\"\n"
    },
    {
        "number": 3040,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'\nassert solution('aaa') == 'aaa'\nassert solution('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa') == 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n"
    },
    {
        "number": 3040,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'\nassert solution('aabbccdd') == 'abcc'\nassert solution('abc') == 'abc'\n"
    },
    {
        "number": 3040,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'abc'\nassert solution(stdin) == 'abc'\nassert solution(stdin) == 'aaa'\nassert solution(stdin) == 'aaa'\nassert solution(stdin) == 'aba'\n"
    },
    {
        "number": 3040,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'\nassert solution('aabb') == 'ab'\nassert solution('abcdefghh') == 'ab'\n"
    },
    {
        "number": 3040,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'"
    },
    {
        "number": 3040,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'\nprint(\"Tests passed\")"
    },
    {
        "number": 3040,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(solution.__doc__) == 'abcba'\n\n\"\"\""
    },
    {
        "number": 3040,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\"\nassert solution(\"aaaabbb\") == \"aaabb\"\nassert solution(\"abcabcbb\") == \"abcabc\"\n"
    },
    {
        "number": 3040,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('ab') == 'ab'\nassert solution('abcefgabc') == 'abc'\nassert solution('abcdefgabc') == 'abc'\n"
    },
    {
        "number": 3041,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3041,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3') == '4'\nassert solution('1\\n2\\n3\\n4\\n5') == '6'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n448\\n449\\n450\\n451\\n452\\n453\\n454\\n455\\n456\\n457\\n458\\n459\\n460\\n461\\n462\\n463\\n464\\n465\\n466\\n467\\n468\\n469\\n470\\n471\\n472\\n473\\n474\\n475\\n476\\n477\\n478\\n479\\n480\\n481\\n482\\n483\\n484\\n485\\n486\\n487\\n488\\n489\\n490\\n491\\n492\\n493\\n494\\n495\\n496\\n497\\n498\\n499\\n500\\n501\\n502\\n503\\n504\\n505\\n506\\n507\\n508\\n509\\n510\\n511\\n512\\"
    },
    {
        "number": 3041,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0 1\") == \"2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 2\") == \"2\"\n"
    },
    {
        "number": 3041,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\n1 4\n2 5\n''') == '4'\nassert solution('''2\n1 4\n2 10005\n''') == '6'\nassert solution('''3\n1 4\n2 10\n0 15\n''') == '4'\nassert solution('''4\n1 4\n2 10005\n0 15\n0 12\n0 10\n0 5\n0 1\n0 0\n''') == '6'\nassert solution('''4\n1 4\n2 10\n0 15\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15"
    },
    {
        "number": 3041,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n1 4\n2 5''') == '4'\nassert solution('''2\n1 4\n2 10005''') == '6'\nassert solution('''3\n1 4\n2 10\n0 15''') == '4'\nassert solution('''6\n1 4\n2 10\n0 15\n1 2\n1 3\n1 4''') == '4'\nassert solution('''7\n1 4\n2 10\n0 15\n1 2\n1 3\n1 4\n0 9999''') == '4'\n"
    },
    {
        "number": 3041,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"2\n1 4\n2 5\n\"\"\".strip()\n) == \"4\"\n\nassert solution(\n    \"\"\"2\n1 4\n2 10005\n\"\"\".strip()\n) == \"6\"\n\nassert solution(\n    \"\"\"3\n1 4\n2 10\n0 15\n\"\"\".strip()\n) == \"4\"\n\nassert solution(\n    \"\"\"10\n1 4\n2 10\n0 15\n1 6\n2 8\n0 10\n0 14\n1 12\n1 13\n1 15\n2 17\n2 19\n2 20\n2 22\n3 25\n3 26\n3 27\n3 28\n3 29\n3 30\n3 31\n3 32\n3 33\n3 34\n3 35\n4 37\n4 38\n4 39\n4 40\n4 41\n4 42\n4 43\n4 44\n4 45\n4 46\n4 47\n4 48\n4 49\n4 50\n5 47\n5 49\n5 50\n5 51\n5 52\n5 53\n5 54\n5 55\n5 56\n5 57\n5 58\n5 59\n5 60\n5 61\n5 62\n5 63\n5 64\n5 65\n5 66\n5 67\n5 68\n5 69\n5 70\n5 71\n5 72\n5 73\n5 74\n5 75\n5 76\n5 77\n5 78\n5 79\n5 80\n5 81\n5 82\n5 83\n5 84\n5 85\n5 86\n5 87\n5 88\n5 89\n5 90\n5 91\n5 92\n5 93\n5 94\n5 95\n5 96\n5 97\n5 98\n5 99\n5 100\n5 101\n5 102\n5 103\n5 104\n5 105\n5 106\n5 107\n5 108\n5 109\n5 110\n5 111\n5 112\n5 113\n5 114\n5 115\n5 116\n5 117\n5 118\n5 119\n5 120\n5 121\n5 122\n5 123\n5 124\n5 125\n5 126\n5 127\n5 128\n5 129\n5 130\n5 131\n5 132\n5 133\n5 134\n5 135\n5 136\n5 137\n5 138\n5 139\n5 140\n5 141\n5 142\n5 143\n5 144\n5 145\n5 146\n5 147\n5 148\n5 149\n5 150\n5 151\n5 152\n5 153\n5 154\n5 155\n5 156\n5 157\n5 158\n5 159\n5 160\n5 161\n5 162\n5 163\n5 164\n5 165\n5 166\n5 167\n5 168\n5 169\n5 170\n5 171\n5 172\n5 173\n5 174\n5 175\n5 176\n5 177\n5 178\n5 179\n5 180\n5 181\n5 182\n5 183\n5 184\n5 185\n5 186\n5 187\n5 188\n5 189\n5 190\n5 191\n5 192\n5 193\n5 194\n5 195\n5 196\n5 197\n5 198\n5 199\n5 200\n5 201\n5 202\n5 203\n5 204\n5 205\n5 206\n5 207\n5 208\n5 209\n5 210\n5 211\n5 212\n5 213\n5 214\n5 215\n5 216\n5 217\n5 218\n5 219\n5 220\n5 221\n5 222\n5 223\n5 224\n5 225\n5 226\n5 227\n5 228\n5 229\n5 230\n5 231\n5 232\n5 233\n5 234\n5 235\n5 236\n5 237\n5 238\n5 239\n5 240\n5 241\n5 242\n5 243\n5 244\n5 245\n5 246\n5 247\n5 248\n5 249\n5 250\n5 251\n5 252\n5 253\n5 254\n5 255\n5 256\n5 257\n5 258\n5 259\n5 260\n5 261\n5 262\n5 263\n5 264\n5 265\n5 266\n5 267\n5 268\n5 269\n5 270\n5 271\n5 272\n5 273\n5 274\n5 275\n5 276\n5 277\n5 278\n5 279\n5 280\n5 281\n5 282\n5 283\n5 284\n5 285\n5 286\n5 287\n5 288\n5 289\n5 290\n5 291\n5 292\n5 293\n5 294\n5 295\n5 296\n5 297\n5 298\n5 299\n5 300\n5 301\n5 302\n5 303\n5 304\n5 305\n5 306\n5 307\n5 308\n5 309\n5 310\n5 311\n5 312\n5 313\n5 314\n5 315\n5 316\n5 317\n5 318\n5 319\n5 320\n5 321\n5 322\n5 323\n5 324\n5 325\n5 326\n5 327\n5 328\n5 329\n5 330\n5 331\n5 332\n5 333\n5 334\n5 335\n5 336\n5 337\n5 338\n5 339\n5 340\n5 341\n5 342\n5 343\n5 344\n5 345\n5 346\n5 347\n5 348\n5 349\n5 350\n5 351\n5 352\n5 353\n5 354\n5 355\n5 356\n5 357\n5 358\n5 359\n5 360\n5 361\n5 362\n5 363\n5 364\n5 365\n5 366\n5 367\n5 368\n5 369\n5 370\n5 371\n5 372\n5 373\n5 374\n5 375\n5 376\n5 377\n5 378\n5 379\n5 380\n5 381\n5 382\n5 383\n5 384\n5 385\n5 386\n5 387\n5 388\n5 389\n5 390\n5 391\n5 392\n5 393\n5 394\n5 395\n5 396\n5 397\n5 398\n5 399\n5 400\n5 401\n5 402\n5 403\n5 404\n5 405\n5 406\n5 407\n5 408\n5 409\n5 410\n5 411\n5 412\n5 413\n5 414\n5 415\n5 416\n5 417\n5 418\n5 419\n5 420\n5 421\n5 422\n5 423\n5 424\n5 425\n5 426\n5 427\n5 428\n5 429\n5 430\n5 431\n5 432\n5 433\n5 434\n5 435\n5 436\n5 437\n5 438\n5 439\n5 440\n5 441\n5 442\n5 443\n5 444\n5 445\n5 446\n5 447\n5 448\n5 449\n5 450\n5 451\n5 452\n5 453\n5 454\n5 455\n5 456\n5 457\n5 458\n5 459\n5 460\n5 461\n5 462\n5 463\n5 464\n5 465\n5 466\n5 467\n5 468\n5 469\n5 470\n5 471\n5 472\n5 473\n5 474\n5 475\n5 476\n5 477\n5 478\n5 479\n5 480\n5 481\n5 482\n5 483\n5 484\n5 485\n5 486\n5 487\n5 488\n"
    },
    {
        "number": 3041,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\n1 4\n2 5''') == '4'\nassert solution('''2\n1 4\n2 10005''') == '6'\nassert solution('''3\n1 4\n2 10\n0 15''') == '4'\nassert solution('''1\n1 4\n2 10005\n0 15''') == '6'\nassert solution('''2\n1 4\n2 10005\n1 1\n0 15''') == '3'\n"
    },
    {
        "number": 3041,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n1 4\n2 5''') == '4'\nassert solution('''2\n1 4\n2 10005''') == '6'\nassert solution('''3\n1 4\n2 10\n0 15''') == '4'\nassert solution('''5\n1 4\n2 10\n0 15\n6 1\n1 10\n2 5\n0 2\n3 4\n1 2\n1 4\n2 10005''') == '6'\nassert solution('''6\n1 4\n2 10\n0 15\n6 1\n1 10\n2 5\n0 2\n3 4\n1 2\n1 4\n2 10005''') == '4'\n"
    },
    {
        "number": 3041,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 1') == '1'\nassert solution('1 2') == '2'\nassert solution('1 2') == '2'\nassert solution('1 1') == '1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 3041,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0\\n1 4\\n2 10\\n0 15') == '4'\nassert solution('1\\n2 1\\n0 2\\n1 5\\n0 5\\n1 2\\n0 5\\n1 6\\n1 4\\n0 3\\n1 2\\n0 3\\n1 6\\n1 5\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 4\\n1 3\\n1 2\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n"
    },
    {
        "number": 3042,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3042,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n7\\n7\\n7\") == \"2\"\nassert solution(\"1\\n7\\n7\\n7\\n7\") == \"3\"\nassert solution(\"1\\n7\\n7\\n7\\n7\\n7\") == \"0\"\nassert solution(\"1\\n7\\n7\\n7\\n7\\n7\\n7\") == \"0\"\nassert solution(\"1\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n"
    },
    {
        "number": 3042,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3042,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n') == '0'\nassert solution('2\\n2\\n') == '1'\nassert solution('3\\n7 7 7\\n') == '3'\nassert solution('4\\n2 3 4 4 8 12 24\\n') == '2'\nassert solution('5\\n1 2 3 2 1\\n') == '0'\n"
    },
    {
        "number": 3042,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n1 2 3 4') == '1'\nassert solution('2\\n1 2 3 4') == '1'\nassert solution('2\\n2 3 4') == '0'\nassert solution('3\\n1 2 3 4') == '1'\n"
    },
    {
        "number": 3042,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"4\"\n"
    },
    {
        "number": 3042,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n7\n2 3 4 4 8 12 24\n''') == '2'\nassert solution('''\n3\n7 7 7\n''') == '3'\nassert solution('''\n5\n1 2 3 2 1\n''') == '0'\nassert solution('''\n0\n0\n''') == '1'\nassert solution('''\n4\n2 2 2 2\n''') == '3'\n"
    },
    {
        "number": 3042,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7\n2 3 4 4 8 12 24''') == '2'\nassert solution('''3\n7 7 7''') == '3'\nassert solution('''5\n1 2 3 2 1''') == '0'\nassert solution('''10\n0 0 0 0 0 0 0 0 0 0''') == '1'\nassert solution('''9\n0 1 2 3 4 5 6 7 8 9''') == '2'\n"
    },
    {
        "number": 3042,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2') == '0'\nassert solution('2\\n2') == '1'\nassert solution('2\\n4') == '0'\nassert solution('2\\n3') == '0'\nassert solution('2\\n2') == '0'\n"
    },
    {
        "number": 3042,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7\n2 3 4 4 8 12 24\n''') == '2'\nassert solution('''3\n7 7 7\n''') == '3'\nassert solution('''5\n1 2 3 2 1\n''') == '0'\nprint('Passed.')\n"
    },
    {
        "number": 3043,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n2\\n3\\n2\\n2\\n3\\n2\\n2\") == \"3\"\nassert solution(\"2\\n2\\n2\\n2\") == \"2\"\nassert solution(\"2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\") == \"2\"\nassert solution(\"2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\"
    },
    {
        "number": 3043,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 5 4\nS#.F.\n.MFMG''') == '3'\nassert solution('''1 2 1\nGS\nSample Output 2:\n1''') == '1'\nassert solution('''2 2 10\nS#\n"
    },
    {
        "number": 3043,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 5 4\nS#.F.\n.MFMG\n''') == '3'\nassert solution('''1 2 1\nGS\n''') == '1'\nassert solution('''2 2 10\nS#\n"
    },
    {
        "number": 3043,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 5 4\nS#.F.\n.MFMG''') == '3'\nassert solution('''1 2 1\nGS\nSample Output 2:\n1\n\nSample Input 3:\n2 2 10\nS#\n"
    },
    {
        "number": 3043,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 5 4\nS#.F.\n.MFMG''') == '3'\nassert solution('''1 2 1\nGS\nSample Output 2:\n1''') == '1'\nassert solution('''2 2 10\nS#\n"
    },
    {
        "number": 3043,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 5 4\\nS#.F.\\n.MFMG') == '3'\nassert solution('1 2 1\\nGS') == '1'\nassert solution('2 2 10\\nS#\\n#G') == '-1'\nassert solution('1 10 3\\nS##.##.\\n.##F#.\\n##.#.\\n##.#.\\n.###.\\n.##.#\\n##.#.\\n.###.\\n.##.#\\n.##.#\\n.##.#') == '8'\nassert solution('2 2 10\\n#S#\\n#G') == '-1'\n"
    },
    {
        "number": 3043,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 5 4\") == \"3\"\nassert solution(\"2 2 1\") == \"1\"\nassert solution(\"1 2 1\") == \"-1\"\nassert solution(\"2 3 1\") == \"1\"\nassert solution(\"1 1 2\") == \"-1\"\n"
    },
    {
        "number": 3043,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3\\n.F.\\n.F.\\n') == '3'\nassert solution('1 2 3\\n.F.\\n.F.\\n') == '-1'\nassert solution('1 2 3\\n.F.\\n.F.\\n') == '-1'\nassert solution('2 2 2\\n.F.\\nF.F\\n') == '-1'\nassert solution('2 2 2\\n.F.\\nF.F\\n') == '-1'\n"
    },
    {
        "number": 3043,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n2 5 4\nS#.F.\n.MFMG\n''') == '3'\nassert solution(\n'''\n1 2 1\nGS\n''') == '1'\nassert solution(\n'''\n2 2 10\nS#\n"
    },
    {
        "number": 3043,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3044,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(INPUT) == OUTPUT\nprint(solution(INPUT))\n"
    },
    {
        "number": 3044,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3044,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 3\nS..\n.#.\n..G\nDRRDD''') == 1\nassert solution('''5 5\n.....\n.#.G#.\n.S...#\n...##.\n....#G\n.G.G.G\n''') == 1\nassert solution('''7 7\n#######\n.#S.#G#\n.#####\n..#...\n"
    },
    {
        "number": 3044,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == None\nassert solution('L') == None\nassert solution('LDRRDLUDUUU') == None\nassert solution('DDDRDRUDDDLRRRDRR') == None\nassert solution('UDLRRDLRRRRRDRD') == 2\n"
    },
    {
        "number": 3044,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == 1\nassert solution(\"3 3\") == 1\nassert solution(\"3 3\\n.S..\\n.#.\\n..G\\nDRRDD\") == 1\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\") == 1\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\") == 2\n"
    },
    {
        "number": 3044,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3044,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == 0\nassert solution(\"D\") == 1\nassert solution(\"DR\") == 2\nassert solution(\"DRR\") == 2\nassert solution(\"DRRDD\") == 1\n"
    },
    {
        "number": 3044,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == 0\nassert solution(\"DRRDD\") == 1\nassert solution(\"LDLDLLDR\") == 1\nassert solution(\"LDLDRDRDRD\") == 3\nassert solution(\"LDRRDRDRDRD\") == 3\n"
    },
    {
        "number": 3044,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3 3\nS..\n.#.\n..G\nDRRDD\"\"\") == \"1\"\nassert solution(\"\"\"\n3 7\n.......\n.G.#.S.\n.......\nLDLDLLDR\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3 7\n.#.....\n.G.##S.\n.......\nLDLDLLDR\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4 4\nS..G..\n..G#..\n.....#\n"
    },
    {
        "number": 3044,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0 1\\nS\\n..\\n.#.\\n..\\nG\\nDRRDD\") == \"1\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\\n\") == \"1\"\nassert solution(\"3 7\\n.S.G.S.\\n....G...\\n.......\\nLDLDLLDR\\n\") == \"2\"\nassert solution(\"3 7\\nS.G.S.\\n....G...\\n.......\\nLDLDLLDR\\n\") == \"3\"\nassert solution(\"3 7\\nG..G..G.\\n....G...\\n.......\\nLDLDLLDR\\n\") == \"4\"\n"
    },
    {
        "number": 3045,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''999999 0 1000\n999900 950 451\n987654 123 13222''') == '1000200 799'\nassert solution('''100 0 101\n0 200 199''') == 'uncertain'\nassert solution('''100 0 100\n0 200 199''') == 'impossible'\nassert solution('''999999 0 1000\n999900 950 451\n987654 123 13222''') == '1000200 799'\nassert solution('''999999 0 1000\n999900 950 451\n987654 123 13222''') == '1000200 799'\n"
    },
    {
        "number": 3045,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n999999 0 1000\n999900 950 451\n987654 123 13222\n\"\"\") == \"1000200 799\"\nassert solution(\"\"\"\n2\n100 0 101\n0 200 199\n\"\"\") == \"uncertain\"\nassert solution(\"\"\"\n1\n2 2 3\n2 4 4\n\"\"\") == \"impossible\"\nassert solution(\"\"\"\n1\n0 2 10\n0 3 10\n\"\"\") == \"impossible\"\nassert solution(\"\"\"\n2\n0 0 1\n0 1 1\n\"\"\") == \"impossible\"\n"
    },
    {
        "number": 3045,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"1\n2\n\"\"\") == \"1000200\"\nassert solution(\"\"\"1\n2\n3\n5\n\"\"\") == \"impossible\"\nassert solution(\"\"\"1\n2\n\"\"\") == \"uncertain\"\nassert solution(\"\"\"1\n2\n3\n4\n\"\"\") == \"1000200\"\nassert solution(\"\"\"1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\"\"\") == \"uncertain\"\n"
    },
    {
        "number": 3045,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n999999 0 1000\n999900 950 451\n987654 123 13222\n''') == '1000200 799'\nassert solution('''2\n100 0 100\n0 200 199\n''') == 'uncertain'\nassert solution('''2\n100 0 101\n0 200 199\n''') == 'impossible'\nassert solution('''7\n9666 5665 4654\n1547 3557 6205\n7333 5606 9808\n9667 1006 5778\n6588 6577 4656\n5666 3442 5462\n''') == 'impossible'\nassert solution('''7\n9666 5665 4654\n1547 3557 6205\n7333 5606 9808\n9667 1006 5778\n6588 6577 4656\n5666 3442 5462\n''') == 'impossible'\n"
    },
    {
        "number": 3045,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3045,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"impossible\"\nassert solution(\"2\") == \"uncertain\"\nassert solution(\"3\") == \"impossible\"\nassert solution(\"1\\n0 0 100\\n0 200 199\") == \"1000200 799\"\n"
    },
    {
        "number": 3045,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n3\n999999 0 1000\n999900 950 451\n987654 123 13222\n''') == '1000200 799'\nassert solution('''\n2\n100 0 100\n0 200 199\n''') == 'uncertain'\nassert solution('''\n2\n100 0 100\n0 200 199\n''') == 'impossible'\n"
    },
    {
        "number": 3045,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\nprint(solution(stdin))\n"
    },
    {
        "number": 3045,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3045,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '999999 0 1000\\n'\n    '999900 950 451\\n'\n    '987654 123 13222\\n'\n) == '1000200 799'\n\nassert solution(\n    '100 0 101\\n'\n    '0 200 199\\n'\n) == 'uncertain'\n\nassert solution(\n    '100 0 100\\n'\n    '0 200 199\\n'\n) == 'impossible'\n"
    },
    {
        "number": 3046,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n4 7\n9 8\n14 17\n19 18''') == '2\\n1'\n\nassert solution('''2\n4 7\n14 17\n19 18''') == '1\\n2'\n\nassert solution('''2\n4 8\n9 7\n14 18\n19 17''') =='syntax error'\n'''\n"
    },
    {
        "number": 3046,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2\\n4 7\\n9 8\\n14 17\\n19 18\") == \"2\\n1\"\nassert solution(\"2\\n4 7\\n14 17\\n19 18\") == \"1\\n2\"\nassert solution(\"2\\n4 7\\n9 8\\n19 18\\n14 17\") == \"1\\n2\"\nassert solution(\"2\\n4 7\\n14 17\\n9 8\\n19 18\") == \"1\\n2\"\nassert solution(\"2\\n4 7\\n9 8\\n19 18\\n14 17\\n1\") == \"1\\n2\"\n"
    },
    {
        "number": 3046,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n4 7\\n9 8\\n14 17\\n19 18\\n') == '2\\n1'\nassert solution('2\\n4 7\\n14 17\\n9 8\\n19 18\\n') == '1\\n2'\nassert solution('2\\n4 7\\n14 17\\n9 8\\n19 18\\n') == '2\\n1'\nassert solution('2\\n4 7\\n14 17\\n9 8\\n19 18\\n') == '1\\n2'\nassert solution('2\\n4 7\\n14 17\\n9 8\\n19 18\\n') == '2\\n1'\n"
    },
    {
        "number": 3046,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n4 7\\n9 8\\n14 17\\n19 18') == '2\\n1\\n'\nassert solution('2\\n4 7\\n14 17\\n9 8\\n19 18') == '1\\n2\\n'\n\"\"\""
    },
    {
        "number": 3046,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 7\n9 8\n14 17\n19 18''') == '2 1'\nassert solution('''4 8\n9 7\n14 18\n19 17''') == '1 2'\nassert solution('''1\n2\n3\n4''') == '1'\nassert solution('''1\n2\n3\n4''') =='syntax error'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9''') == '1 2'\n"
    },
    {
        "number": 3046,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(sample_input_0) == sample_output_0\nassert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3\nassert solution(sample_input_4) == sample_output_4\n"
    },
    {
        "number": 3046,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1\\n1') == '1'\nassert solution('2\\n1\\n1\\n1') == '1'\nassert solution('2\\n1\\n1\\n1\\n1') == '1'\nassert solution('2\\n1\\n1\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 3046,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\nprint('Passed')\n'''"
    },
    {
        "number": 3046,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n4 7\n9 8\n14 17\n19 18''') == '2\\n1'\nassert solution('''3\n4 8\n9 7\n14 18\n19 17\n''') == '1\\n2'\nassert solution('''2\n4 7\n14 17\n9 8\n19 18\n''') == '1\\n2'\nassert solution('''3\n4 8\n9 7\n14 18\n19 17\n''') == '2\\n1'\nassert solution('''4\n1\n2\n3\n4\n''') == '2\\n3\\n4'\n"
    },
    {
        "number": 3046,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n2\n4 7\n9 8\n14 17\n19 18\n''') == '1'\n\nassert solution(\n'''\n2\n4 7\n9 8\n14 17\n19 18\n''') == '2'\n\nassert solution(\n'''\n2\n9 7\n14 17\n19 18\n''') == '1'\n\nassert solution(\n'''\n2\n9 8\n14 17\n19 18\n''') == '2'\n\nassert solution(\n'''\n2\n9 7\n14 17\n18 19\n''') == '2'"
    },
    {
        "number": 3047,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4 _ _ _\") == \"1\"\nassert solution(\"_ _ _ _ _ _ _ _ _\") == \"1\"\nassert solution(\"_ _ _ _ _ _ _ _ _ _\") == \"1\"\nassert solution(\"_ _ _ _ _ _ _ _ _ _ _\") == \"1\"\nassert solution(\"1 _ _ _ _ _ _ _ _ _ _\") == \"1\"\n"
    },
    {
        "number": 3047,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('_ 90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _') == '1'\nassert solution('85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\\n') == '1'\nassert solution('160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\\n') == '8640'\n\n\"\"\""
    },
    {
        "number": 3047,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution
    },
    {
        "number": 3047,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('_ 90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _') == '1'\nassert solution('85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153') == '1'\nassert solution('160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _') == '8640'\nassert solution('7_ _ _ 9_ _ _ _ _ _ _\\n_ _ _ 5_ _ _ _ _ _ _') =='many'\nassert solution('9_ _ _ 7_ _ _ _ _ _ _\\n_ _ _ 5_ _ _ _ _ _ _') == '1'"
    },
    {
        "number": 3047,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('_ 90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _') == '1'\nassert solution('85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\\n') == '1'\nassert solution('160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\\n') == '8640'"
    },
    {
        "number": 3047,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"_ 90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\\n\") == '1\\n'\nassert solution(\"85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\\n\") == '1\\n'\nassert solution(\"160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\\n\") == '8640\\n'\nassert solution
    },
    {
        "number": 3047,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('_ 90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\\n') == '1\\n'\nassert solution('85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\\n') == '1\\n'\nassert solution('160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\\n') == '8640\\n'\nprint(\"Passed!\")\n"
    },
    {
        "number": 3047,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"_ 90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\\n\") == \"1\"\nassert solution(\"85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\\n\") == \"1\"\nassert solution(\"160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\\n\") == \"8640\"\n"
    },
    {
        "number": 3047,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n_ 90 22 _ 6 _ _ _ _ 81\n_ 40 _ _ _ 12 60 _ 90 _\n\"\"\"\n) == '1'\n\nassert solution(\n    \"\"\"\n85 55 _ 99 51 _ _ _ _ _\n_ _ _ _ _ _ _ 85 63 153\n\"\"\"\n) == '1'\n\nassert solution(\n    \"\"\"\n160 _ _ 136 _ _ _ _ _ 170\n_ _ _ _ 120 _ _ 144 _ _\n\"\"\"\n) == '8640'\n\nprint(solution(input()))\n\n\"\"\"\nThe solution:\n\n1) the idea is to find a consistent solution (have all rows of each element have the same number of items)\n2) the most obvious solution is to have the solution of (5,5,5,5,5,5,5,5,5,5)\n3) the solution is the amount of unique values in the list\n4) the idea is to have a set of unique values (e.g. 5,5,5,5,5)\n5) for each row, from the left to right, we check if the elements are the same\n6) if they are, we are good, otherwise we are bad\n7) we keep track of the unique values with a set, then we increment the counter by 1\n8) we check if the counter is the same as the number of elements\n9) we return the counter\n10) the most obvious solution is (5,5,5,5,5,5,5,5,5,5)\n11) the most obvious solution is 8640\n\nTo verify:\n1) the solution is the amount of unique values in the list\n2) the most obvious solution is 8640\n3) the most obvious solution is 8640\n4) the most obvious solution is 8640\n5) the most obvious solution is 8640\n6) the most obvious solution is 8640\n7) the most obvious solution is 8640\n8) the most obvious solution is 8640\n9) the most obvious solution is 8640\n10) the most obvious solution is 8640\n11) the most obvious solution is 8640\n\"\"\""
    },
    {
        "number": 3047,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('_ 90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _') == '1'\nassert solution('85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153') == '1'\nassert solution('160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _') == '8640'\nassert solution
    },
    {
        "number": 3048,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2\n1 3\n''') == '2'\nassert solution('''5\n2 1\n1 5\n3 1\n4 3\n''') == '8'\nassert solution('''10\n1 2\n2 3\n2 4\n1 5\n3 6\n2 7\n7 8\n5 9\n5 10\n''') == '24'\nprint(\"Passed. <3\")\n"
    },
    {
        "number": 3048,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n1 2\n1 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5\n1 2\n2 3\n3 4\n1 5\n4 5\n\"\"\") == \"8\"\nassert solution(\"\"\"\n10\n2 1\n1 5\n3 1\n4 3\n3 6\n2 7\n7 8\n5 9\n5 10\n9 10\n\"\"\") == \"24\"\nassert solution(\"\"\"\n3\n1 2\n1 3\n3 2\n\"\"\") == \"2\"\n\n\"\"\"\n\nProblem:\n\nThe pokestop is the game where POKEMON can find their way out of the caves in KANTON. There are some small caves that have pits in the middle of them. POKEMON has not discovered these caves yet. When POKEMON enters these caves, he must decide whether he wants to go into the cave or keep searching. He has two options:\n\nGo into the cave: He can enter a cave that has a pit in it and will die instantly and lose all his health.\nKeep searching: He can continue to explore the cave.\nPOKEMON lives in the cave and has a health of 100. He decides that he wants to search the caves. There are several ways to do this. He finds a way to the cave entrance, but he has to take a pit. He can either wait until the end of the cave, or try to climb it. He takes the first option.\n\nHow does POKEMON decide?\n\nThe next day, POKEMON enters the cave and sees that it has a pit in it, but he is not yet dead. He can either wait until the end of the cave, or try to climb the pit. He takes the first option.\n\nHe can climb the pit and then go back to the entrance. Now, POKEMON is dead. He finds a way to the entrance. He uses the last option.\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nNow, POKEMON is dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow"
    },
    {
        "number": 3048,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n1 2\\n1 3\\n') == '2'\nassert solution('5\\n2 1\\n1 5\\n3 1\\n4 3\\n') == '8'\nassert solution('10\\n1 2\\n2 3\\n2 4\\n1 5\\n3 6\\n2 7\\n7 8\\n5 9\\n5 10\\n') == '24'\nassert solution('1\\n1\\n') == '1'\n"
    },
    {
        "number": 3048,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3048,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '8'\nassert solution(stdin) == '24'\nassert solution(stdin) == '24'\nassert solution(stdin) == '24'\nassert solution(stdin) == '24'\n"
    },
    {
        "number": 3048,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n1 2\\n1 3\\n') == '2'\nassert solution('5\\n2 1\\n1 5\\n3 1\\n4 3\\n') == '8'\nassert solution('10\\n2 1\\n1 5\\n3 1\\n4 3\\n5 9\\n5 10\\n7 8\\n9 10\\n9 8\\n') == '24'\nassert solution('10\\n2 1\\n1 5\\n3 1\\n4 3\\n5 9\\n5 10\\n7 8\\n9 10\\n9 8\\n2 2\\n2 3\\n3 4\\n1 5\\n1 6\\n2 7\\n5 8\\n7 8\\n9 10\\n') == '48'\nassert solution('10\\n2 1\\n1 5\\n3 1\\n4 3\\n5 9\\n5 10\\n7 8\\n9 10\\n9 8\\n2 2\\n2 3\\n3 4\\n1 5\\n1 6\\n2 7\\n5 8\\n7 8\\n9 10\\n1 9\\n') == '64'\n"
    },
    {
        "number": 3048,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n1 2\n1 3\n2 3''') == '2'\nassert solution('''5\n1 2\n1 3\n1 4\n1 5\n3 1\n3 2\n3 4\n3 5\n4 3\n4 5\n5 3\n5 4\n5 5''') == '24'\nassert solution('''10\n1 2\n2 3\n2 4\n1 5\n3 1\n3 2\n3 4\n3 5\n4 3\n4 5\n5 3\n5 4\n5 5''') == '24'\nassert solution('''10\n1 2\n2 3\n2 4\n1 5\n3 1\n3 2\n3 4\n3 5\n4 3\n4 5\n5 3\n5 4\n5 5''') == '24'\nassert solution('''10\n1 2\n2 3\n2 4\n1 5\n3 1\n3 2\n3 4\n3 5\n4 3\n4 5\n5 3\n5 4\n5 5''') == '24'\n"
    },
    {
        "number": 3048,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n1 2\n1 3\n2 1\n''') == '2'\n\nassert solution('''\n5\n1 2\n2 3\n2 4\n1 5\n3 1\n''') == '8'\n\nassert solution('''\n10\n1 2\n2 3\n2 4\n1 5\n3 1\n4 3\n2 7\n7 8\n5 9\n5 10\n''') == '24'\n\nassert solution('''\n3\n1 2\n1 3\n3 1\n''') == '2'\n\nassert solution('''\n4\n2 1\n2 3\n1 2\n3 1\n''') == '6'"
    },
    {
        "number": 3048,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == ''"
    },
    {
        "number": 3048,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\\n\") == \"1\"\nassert solution(\"1\\n2\\n\") == \"2\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"24\"\nprint(\"Passed\")\n"
    },
    {
        "number": 3049,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('a') == ''\nassert solution('123456789') == ''\nassert solution('aaaaaaaaa') == ''\nassert solution('1234567890123456789') == ''\n"
    },
    {
        "number": 3049,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('secretmessage') == 'essa'\nassert solution('boot') == 'appa'\nassert solution('treetreetreetree') == 'tttt'\nassert solution('wood') == 'tt'\nassert solution('oranges') == ''\n"
    },
    {
        "number": 3049,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''secretmessage\nboot\n''') == 'essa'\nassert solution(\n'''treetreetreetree\nwood\n''') == 'apples'\nassert solution(\n'''oranges\napples\n''') == '0'"
    },
    {
        "number": 3049,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('secretmessage') == 'essa'\nassert solution('boot') == 'essa'\nassert solution('treetreetreetree') == 'treetreetree'\nassert solution('wood') == 'wood'\nassert solution('oranges') == '0'\n"
    },
    {
        "number": 3049,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(solution.__doc__) == ''\n"
    },
    {
        "number": 3049,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('secretmessage') == 'essa'\nassert solution('boot') == 'appa'\nassert solution('treetreetreetree') == 'oooo'\nassert solution('wood') == ''\nassert solution('oranges') == ''\n"
    },
    {
        "number": 3049,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"secretmessage\") == \"essa\"\nassert solution(\"treetreetreetree\") == \"wood\"\nassert solution(\"oranges\") == \"0\"\nassert solution(\"apples\") == \"3\"\n\"\"\"\n"
    },
    {
        "number": 3049,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(sample1) == \"essa\"\nassert solution(sample2) == \"3\"\nassert solution(sample3) == \"0\"\n\nassert solution(sample4) == \"5\"\nassert solution(sample5) == \"4\"\n"
    },
    {
        "number": 3049,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('secretmessage') == 'essa'\nassert solution('boot') == 'essa'\nassert solution('treetreetreetree') == 't'\nassert solution('wood') == ''\nassert solution('oranges') == '0'\n"
    },
    {
        "number": 3049,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('secretmessage') == 'essa'\nassert solution('treetreetreetree') == 'apples'\nassert solution('oranges') == '0'\nassert solution('apples') == '0'\nassert solution('shadha') == 'treetreetreetree'\n"
    },
    {
        "number": 3050,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n6\n>^<^\n######\n"
    },
    {
        "number": 3050,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\">^^<\") == '1'\nassert solution(\"<^>v\") == '4'\nassert solution(\"<^v^>\") == '2'\nassert solution(\"<v^v^v>\") == '3'\nassert solution(\"<<<\") == '1'\n"
    },
    {
        "number": 3050,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6') == '1'\nassert solution('>^<^') == '2'\nassert solution('>^<^>^<^') == '1'\nassert solution('v<^>v<^>v<^>v<^>') == '1'\nassert solution('<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v"
    },
    {
        "number": 3050,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n6\n^<^\n######\n"
    },
    {
        "number": 3050,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\">v<\") == \"1\"\nassert solution(\"^>v<\") == \"2\"\nassert solution(\"^v^v<\") == \"1\"\nassert solution(\"<v^v<\") == \"2\"\nassert solution(\"<><\") == \"1\"\n"
    },
    {
        "number": 3050,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '1'\n'''\n\nimport sys"
    },
    {
        "number": 3050,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('<><') == ''\nassert solution('^>v<v<') == ''\nassert solution('^vv<v') == 1\nassert solution('<^<^') == 1\n"
    },
    {
        "number": 3050,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6\n>^<^\n######\n"
    },
    {
        "number": 3050,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\">^v<\") == \"1\"\nassert solution(\">v<\") == \"2\"\nassert solution(\">^<\") == \"4\"\nassert solution(\">^<^>^<^\") == \"1\"\nassert solution(\"<>^<\") == \"2\"\n"
    },
    {
        "number": 3050,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n><^\\n>^<\\n>^') == '1\\n'\nassert solution('3\\n<^<\\n><\\n><\\n>^>\\n') == '2\\n'\nassert solution('3\\n^<\\n><\\n><\\n>^\\n') == '1\\n'\nassert solution('3\\n><\\n><\\n><\\n>^\\n') == '1\\n'\nassert solution('3\\n><\\n><\\n><\\n>^\\n') == '1\\n'\n"
    },
    {
        "number": 3051,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n2\n2 3 0 2 9 2 3 0\n1 6 1 4 6 3 -1 -2\n''') == '3'\nassert solution('''\n3\n4 0 0 10 10 1 15 0\n3 5 50 55 8 1 -16 2\n3 10 7 10 4 1 8 -1\n''') == '6'\nassert solution('''\n3\n7 0 0 20 10 3 0 10\n10 1 0 2 5 2 2 7\n3 10 7 10 4 1 8 -1\n''') == '11'\nassert solution('''\n2\n7 0 0 30 10 3 0 10\n10 1 0 2 5 2 2 7\n''') == '11'\nassert solution('''\n2\n7 0 0 30 10 3 0 10\n10 1 0 2 5 2 2 7\n10 1 0 2 5 2 2 7\n''') == '11'\n"
    },
    {
        "number": 3051,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''2\n2 3 0 2 9 2 3 0\n1 6 1 4 6 3 -1 -2''') == \"3\"\nassert solution(\n'''3\n4 0 0 10 10 1 15 0\n3 5 50 55 8 1 -16 2\n3 10 7 10 4 1 8 -1\nSample Output 3''') == \"6\"\nassert solution(\n'''7\n4 0 0 10 10 1 15 0\n3 5 50 55 8 1 -16 2\n3 10 7 10 4 1 8 -1\nSample Output 3''') == \"11\"\nassert solution(\n'''7\n4 0 0 10 10 1 15 0\n3 5 50 55 8 1 -16 2\n3 10 7 10 4 1 8 -1\n4 0 0 10 10 1 15 0\n3 5 50 55 8 1 -16 2\n3 10 7 10 4 1 8 -1\nSample Output 3''') == \"6\"\nassert solution(\n'''7\n4 0 0 10 10 1 15 0\n3 5 50 55 8 1 -16 2\n3 10 7 10 4 1 8 -1\n4 0 0 10 10 1 15 0\n3 5 50 55 8 1 -16 2\n3 10 7 10 4 1 8 -1\nSample Output 3''') == \"6\"\n"
    },
    {
        "number": 3051,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\\n') == '3'\nassert solution('3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n') == '6'\nassert solution('4\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n') == '11'\n"
    },
    {
        "number": 3051,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\") == \"3\"\nassert solution(\"2\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\") == \"6\"\nassert solution(\"2\\n7 0 0 20 10 3 0 10\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\") == \"11\"\n\"\"\"\n"
    },
    {
        "number": 3051,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\") == \"3\"\nassert solution(\"3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\") == \"6\"\nassert solution(\"7\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\") == \"11\"\n"
    },
    {
        "number": 3051,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n2 3 0 2 9 2 3 0\n1 6 1 4 6 3 -1 -2\n''') == '3'\n\nassert solution('''3\n4 0 0 10 10 1 15 0\n3 5 50 55 8 1 -16 2\n3 10 7 10 4 1 8 -1\n''') == '6'\n\nassert solution('''5\n2 0 0 10 10 1 15 0\n3 5 50 55 8 1 -16 2\n3 10 7 10 4 1 8 -1\n3 1 0 2 5 2 2 7\n3 1 1 2 5 2 2 7\n''') == '11'\n\nassert solution('''6\n2 0 0 10 10 1 15 0\n3 5 50 55 8 1 -16 2\n3 10 7 10 4 1 8 -1\n3 1 0 2 5 2 2 7\n3 1 1 2 5 2 2 7\n3 1 1 2 5 2 2 7\n''') == '12'\n\nassert solution('''7\n2 0 0 10 10 1 15 0\n3 5 50 55 8 1 -16 2\n3 10 7 10 4 1 8 -1\n3 1 0 2 5 2 2 7\n3 1 1 2 5 2 2 7\n3 1 1 2 5 2 2 7\n3 1 1 2 5 2 2 7\n''') == '15'"
    },
    {
        "number": 3051,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n"
    },
    {
        "number": 3051,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3051,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(open('inputs/ex5.txt').read()) == '16'\n\"\"\"\n"
    },
    {
        "number": 3051,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\\n\"\n) == \"3\"\n\nassert solution(\n    \"2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\\n\"\n) == \"3\"\n\nassert solution(\n    \"2\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n\"\n) == \"6\"\n\nassert solution(\n    \"3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n\"\n) == \"11\"\n\nassert solution(\n    \"2\\n7 0 0 20 10 3 0 10\\n10 1 0 2 5 2 2 7\\n3 10 7 10 4 1 8 -1\\n\"\n) == \"11\""
    },
    {
        "number": 3052,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2.5 1 1 0.5\\n1\\n0.5 0.5 0.5 0.5\\n1\\n0.5 0.5 0.5 0.5') == '3.7320508076'\nassert solution('3.5 1 1 1.5\\n1\\n0.5 0.5 0.5 1.5\\n1\\n0.5 0.5 1.5 1.5\\n1\\n1.5 1.5 1.5 1.5') == '8.8441466285'\nassert solution('3.5 1 1 1.5\\n1\\n0.5 0.5 0.5 1.5\\n1\\n0.5 1.5 1.5 1.5\\n1\\n1.5 1.5 1.5 1.5') == '8.8441466285'\nassert solution('3.5 1 1 1.5\\n1\\n0.5 0.5 0.5 1.5\\n1\\n1.5 1.5 1.5 1.5\\n1\\n1.5 1.5 1.5 1.5') == '8.8441466285'\nassert solution('3.5 1 1 1.5\\n1\\n0.5 0.5 0.5 1.5\\n1\\n0.5 1.5 1.5 1.5\\n1\\n1.5 1.5 1.5 1.5') == '8.8441466285'\n"
    },
    {
        "number": 3052,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == \"168.7916512460\\n\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == \"163.5274740179\\n\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\\n\") == \"3.7320508076\\n\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == \"163.5274740179\\n\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == \"163.5274740179\\n\"\n"
    },
    {
        "number": 3052,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 80.0''') == '168.7916512460'\nassert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 100.0''') == '163.5274740179'\nassert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 0.0''') == '3.7320508076'\nassert solution('''1.0 1.0 4.0 1.0\n1\n0.0 0.0 4.0 0.0\n2.0 2.0 4.0 2.0\n3.0 3.0 4.0 3.0\n4.0 4.0 4.0 4.0\n5.0 5.0 4.0 4.0\n6.0 6.0 4.0 4.0\n7.0 7.0 4.0 4.0\n8.0 8.0 4.0 4.0\n9.0 9.0 4.0 4.0\n10.0 10.0 4.0 4.0\n11.0 11.0 4.0 4.0\n12.0 12.0 4.0 4.0\n13.0 13.0 4.0 4.0\n14.0 14.0 4.0 4.0\n15.0 15.0 4.0 4.0\n16.0 16.0 4.0 4.0\n17.0 17.0 4.0 4.0\n18.0 18.0 4.0 4.0\n19.0 19.0 4.0 4.0\n20.0 20.0 4.0 4.0\n21.0 21.0 4.0 4.0\n22.0 22.0 4.0 4.0\n23.0 23.0 4.0 4.0\n24.0 24.0 4.0 4.0\n25.0 25.0 4.0 4.0\n26.0 26.0 4.0 4.0\n27.0 27.0 4.0 4.0\n28.0 28.0 4.0 4.0\n29.0 29.0 4.0 4.0\n30.0 30.0 4.0 4.0\n31.0 31.0 4.0 4.0\n32.0 32.0 4.0 4.0\n33.0 33.0 4.0 4.0\n34.0 34.0 4.0 4.0\n35.0 35.0 4.0 4.0\n36.0 36.0 4.0 4.0\n37.0 37.0 4.0 4.0\n38.0 38.0 4.0 4.0\n39.0 39.0 4.0 4.0\n40.0 40.0 4.0 4.0\n41.0 41.0 4.0 4.0\n42.0 42.0 4.0 4.0\n43.0 43.0 4.0 4.0\n44.0 44.0 4.0 4.0\n45.0 45.0 4.0 4.0\n46.0 46.0 4.0 4.0\n47.0 47.0 4.0 4.0\n48.0 48.0 4.0 4.0\n49.0 49.0 4.0 4.0\n50.0 50.0 4.0 4.0\n51.0 51.0 4.0 4.0\n52.0 52.0 4.0 4.0\n53.0 53.0 4.0 4.0\n54.0 54.0 4.0 4.0\n55.0 55.0 4.0 4.0\n56.0 56.0 4.0 4.0\n57.0 57.0 4.0 4.0\n58.0 58.0 4.0 4.0\n59.0 59.0 4.0 4.0\n60.0 60.0 4.0 4.0\n61.0 61.0 4.0 4.0\n62.0 62.0 4.0 4.0\n63.0 63.0 4.0 4.0\n64.0 64.0 4.0 4.0\n65.0 65.0 4.0 4.0\n66.0 66.0 4.0 4.0\n67.0 67.0 4.0 4.0\n68.0 68.0 4.0 4.0\n69.0 69.0 4.0 4.0\n70.0 70.0 4.0 4.0\n71.0 71.0 4.0 4.0\n72.0 72.0 4.0 4.0\n73.0 73.0 4.0 4.0\n74.0 74.0 4.0 4.0\n75.0 75.0 4.0 4.0\n76.0 76.0 4.0 4.0\n77.0 77.0 4.0 4.0\n78.0 78"
    },
    {
        "number": 3052,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == \"168.7916512460\\n\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == \"163.5274740179\\n\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\\n\") == \"3.7320508076\\n\"\nassert solution(\"1.0 0.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\\n\") == \"3.7320508076\\n\"\nassert solution(\"1.0 0.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\\n\") == \"163.5274740179\\n\"\n"
    },
    {
        "number": 3052,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0.0 1.0 4.0 1.0\") == \"3.7320508076\"\nassert solution(\"60.0 0.0 50.0 170.0\") == \"168.7916512460\"\nassert solution(\"0.0 1.0 4.0 1.0\") == \"163.5274740179\"\nassert solution(\"60.0 0.0 50.0 170.0\") == \"168.7916512460\"\nassert solution(\"0.0 1.0 4.0 1.0\") == \"163.5274740179\"\n"
    },
    {
        "number": 3052,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == \"168.7916512460\"\nassert solution(\n    \"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == \"163.5274740179\"\nassert solution(\n    \"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == \"163.5274740179\"\n"
    },
    {
        "number": 3052,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 100.0''') == '168.7916512460'\nassert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 80.0''') == '163.5274740179'\nassert solution('''0.0 1.0 4.0 1.0\n1\n0.0 0.0 4.0 0.0\nSample Output 3:\n3.7320508076\n''') == '3.7320508076'\nassert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 100.0\nSample Output 2:\n163.5274740179\n''') == '163.5274740179'\nassert solution('''0.0 1.0 4.0 1.0\n1\n0.0 0.0 4.0 0.0\nSample Output 3:\n3.7320508076\n''') == '3.7320508076'\n"
    },
    {
        "number": 3052,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('60.0 0.0 50.0 170.0') == '168.7916512460'\nassert solution('60.0 0.0 50.0 170.0') == '168.7916512460'\nassert solution('60.0 0.0 50.0 170.0') == '168.7916512460'\nassert solution('60.0 0.0 50.0 170.0') == '168.7916512460'\nassert solution('60.0 0.0 50.0 170.0') == '168.7916512460'\n"
    },
    {
        "number": 3052,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 80.0\"\"\") == \"168.7916512460\"\nassert solution(\n\"\"\"60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 100.0\"\"\") == \"163.5274740179\"\nassert solution(\n\"\"\"0.0 1.0 4.0 1.0\n1\n0.0 0.0 4.0 0.0\n\"\"\") == \"3.7320508076\"\nassert solution(\n\"\"\"60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 100.0\"\"\") == \"168.7916512460\"\nassert solution(\n\"\"\"60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 100.0\"\"\") == \"163.5274740179\"\n"
    },
    {
        "number": 3052,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3053,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 5 3''') == 'rarity'\nassert solution('''9 8 1''') == 'canterlot'\nassert solution('''5 3 5''') =='madam'\nassert solution('''3 2 1''') == 'IMPOSSIBLE'\nassert solution('''6 6 4''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3053,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 3053,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 5 3') == 'rarity'\nassert solution('9 8 1') == 'canterlot'\nassert solution('5 3 5') =='madam'\n\"\"\"\n\n\"\"\"\nAlgorithm:\n1. Let N be the length of the string, K be the number of distinct characters in the string, and P be the length of the longest palindromic substring.\n2. Let T be the string made of all lowercase English letters, of length N.\n3. For each character A in the string S, let its position in T be its index: i.\n4. We have T[0], T[1],..., T[i-1], T[i], T[i+1],..., T[N-2], T[N-1]. We start with i = N-1, because if the string S starts with A, the index of A is i = N-1, the last index of T.\n5. Let R be the set of all strings in T with length P. Let L be the set of all strings in T with length i-1.\n6. If i is the index of a character A in the string S, let R be the set of all strings in T with length P-1 containing A, excluding A. Let L be the set of all strings in T with length i-2.\n7. If A is the only character in the string S, we have:\n    - R is the set of all strings in T with length P-1\n    - L is the set of all strings in T with length i-3\n8. If A is not the only character in the string S, let R be the set of all strings in T with length P-1 containing A and all other characters in the string S. Let L be the set of all strings in T with length i-2.\n9. If A is not the only character in the string S, let R be the set of all strings in T with length P-1 containing A and all other characters in the string S. Let L be the set of all strings in T with length i-1.\n10. T[i-1], T[i], T[i+1],..., T[N-2], T[N-1] is a palindrome.\n\n\"\"\"\n\nfrom math import ceil, sqrt\n"
    },
    {
        "number": 3053,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(open('./test_files/Y11R5P1/A.in').read()) == \"rarity\"\nassert solution(open('./test_files/Y11R5P1/B.in').read()) == \"canterlot\"\nassert solution(open('./test_files/Y11R5P1/C.in').read()) == \"madam\"\nassert solution(open('./test_files/Y11R5P1/D.in').read()) == \"impossible\"\nassert solution(open('./test_files/Y11R5P1/E.in').read()) == \"impossible\"\n"
    },
    {
        "number": 3053,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 5 3') == 'rarity'\nassert solution('9 8 1') == 'canterlot'\nassert solution('5 3 5') =='madam'\nassert solution('1 1 1') == 'IMPOSSIBLE'\nassert solution('1 1 5') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3053,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3053,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6 5 3''') == 'rarity'\nassert solution('''9 8 1''') == 'canterlot'\nassert solution('''5 3 5''') =='madam'\n\nprint('Testcases passed')\n"
    },
    {
        "number": 3053,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3 2') == 'canterlot'\nassert solution('1 1 2') == 'IMPOSSIBLE'\nassert solution('1 1 2') == 'canterlot'\nassert solution('1 1 2') == 'IMPOSSIBLE'\nassert solution('1 1 2') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3053,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6 5 3') == 'rarity'\nassert solution('9 8 1') == 'canterlot'\nassert solution('5 3 5') =='madam'"
    },
    {
        "number": 3053,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 'IMPOSSIBLE'\nassert solution('abc') == 'abc'\nassert solution('a') == 'a'\nassert solution('abcd') == 'abcd'\nassert solution('aabcd') == 'aabcd'\n"
    },
    {
        "number": 3054,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"Blue Ridge mountain road.\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\"
    },
    {
        "number": 3054,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia. ') == \"Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.\"\nassert solution('Who would know if we had too few syllables?') == \"Who would know if we had too few syllables?\"\nassert solution('I mean, what we think, we become; what we think, we become; -- are the same, I mean, what we think, we become? ') == \"I mean, what we think, we become; what we think, we become; -- are the same, I mean, what we think, we become?\"\nassert solution('Attention! Test! Test! Test!!!') == \"Attention! Test! Test! Test!\"\nassert solution('Attention! Test! Test! Test!!!') == \"Attention! Test! Test! Test!\"\n"
    },
    {
        "number": 3054,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.') == \\\n    'Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.'\nassert solution('They found out the phrase is not haiku.') == 'They found out the phrase is not haiku.'\nassert solution('Alice likes playing with dolls,\\nShe dislikes going to concerts with M.L.M.D.\\nShe also likes eating ice cream.') == \\\n    'Alice likes playing with dolls,\\nShe dislikes going to concerts with M.L.M.D.\\nShe also likes eating ice cream.'\nassert solution('Watermelon is delicious,\\nI like it but I am not.\\nIt is my favorite dish to use for breakfast.') == \\\n    'Watermelon is delicious,\\nI like it but I am not.\\nIt is my favorite dish to use for breakfast.'\nassert solution('A haiku is a three-line poem in which the first and third lines contain $5$ syllables each, and the second line contains $7$ syllables.') == \\\n    'A haiku is a three-line poem in which the first and third lines contain $5$ syllables each, and the second line contains $7$ syllables.'\n"
    },
    {
        "number": 3054,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"Blue\nRidge\nMoun\nt\nri\nde\nd\no\nu\nn\nd\n!\nt\nu\n\nt\ne\nt\nr\ne\ni\n\nr\ny\nu\n\nh\ne\nv\na\nn\nt\ni\nn\ns\n\"\"\") == \"\"\"Blue\nRidge\nMoun\nt\nri\nde\nd\no\nu\nn\nd\n!\nt\nu\n\nt\ne\nt\nr\ne\ni\n\nr\ny\nu\n\nh\ne\nv\na\nn\nt\ni\nn\ns\n\"\"\""
    },
    {
        "number": 3054,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('a') == ''\nassert solution('a ') == ''\nassert solution('a '*9) == 'a '*9\nassert solution('a'*9) == 'a'*9\nassert solution('a '*5 + 'b') == 'a '*5 + 'b'\n"
    },
    {
        "number": 3054,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"Blue Ridge mountain road.\\n\"\n\"\\n\"\n\"Leaves, glowing in autumn sun,\\n\"\n\"fall in Virginia.\\n\"\n) == (\n\"Blue Ridge mountain road.\\n\"\n\"\\n\"\n\"Leaves, glowing in autumn sun,\\n\"\n\"fall in Virginia.\\n\"\n)\nassert solution(\n\"This was a pretty good course.\\n\"\n\"\\n\"\n\"Although we have a pretty good course.\\n\"\n\"\\n\"\n) == (\n\"This was a pretty good course.\\n\"\n\"\\n\"\n\"Although we have a pretty good course.\\n\"\n\"\\n\"\n)\nassert solution(\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n) == (\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n)\nassert solution(\n\"This was a pretty good course.\\n\"\n\"\\n\"\n\"Although we have a pretty good course.\\n\"\n\"\\n\"\n) == (\n\"This was a pretty good course.\\n\"\n\"\\n\"\n\"Although we have a pretty good course.\\n\"\n\"\\n\"\n)\nassert solution(\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines"
    },
    {
        "number": 3054,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('Blue Ridge mountain road.\\n\\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t"
    },
    {
        "number": 3054,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('Blue\\nRidge\\nmountain\\nroad\\n.\\n\\nLeaves, glowing in\\nautumn\\nsun,\\nfall\\nin\\nVirginia.\\n') == \"\"\"Blue Ridge mountain road.\n\nLeaves, glowing in autumn sun,\nfall in Virginia.\n\"\"\"\nassert solution('I am the\\nUncle\\nWhat?\\n') == \"\"\"I am the\nUncle\nWhat?\n\"\"\"\nassert solution('I\\n!\\n!?\\n!?\\n') == \"\"\"I\n!\n!\n!\n\"\"\"\nassert solution('\\n'.join(['w\\n' * 7, 'h\\n' * 5, 'e\\n' * 3, '!\\n', '!\\n', 'Y\\n', 'e\\n', 'h\\n', 'u\\n', '!\\n', 'w\\n', 'e\\n', '!\\n', 'w\\n', 'r\\n', 'i\\n', 'd\\n', '!\\n', '!\\n', 'a\\n', 'b\\n', '!\\n', 'Y\\n', 'e\\n', 'h\\n', 'u\\n', '!\\n', 'w\\n', 'e\\n', '!\\n', 'w\\n', 'r\\n', 'i\\n', 'd\\n', '!\\n', '!\\n', 'a\\n', 'b\\n', '!\\n', 'Y\\n', 'e\\n', 'h\\n', 'u\\n', '!\\n', 'w\\n', 'e\\n', '!\\n', 'w\\n', 'r\\n', 'i\\n', 'd\\n', '!\\n', '!\\n', 'a\\n', 'b\\n', '!\\n', 'Y\\n', 'e\\n', 'h\\n', 'u\\n', '!\\n', 'w\\n', 'e\\n', '!\\n', 'w\\n', 'r\\n', 'i\\n', 'd\\n', '!\\n', '!\\n', 'a\\n', 'b\\n', '!\\n', 'Y\\n', 'e\\n', 'h\\n', 'u\\n', '!\\n', 'w\\n', 'e\\n', '!\\n', 'w\\n', 'r\\n', 'i\\n', 'd\\n', '!\\n', '!\\n', 'a\\n', 'b\\n', '!\\n', 'Y\\n', 'e\\n', 'h\\n', 'u\\n', '!\\n', 'w\\n', 'e\\n', '!\\n', 'w\\n', 'r\\n', 'i\\n', 'd\\n', '!\\n', '!\\n', 'a\\n', 'b\\n', '!\\n', 'Y\\n', 'e\\n', 'h\\n', 'u\\n', '!\\n', 'w\\n', 'e\\n', '!\\n', 'w\\n', 'r\\n', 'i\\n', 'd\\n', '!\\n', '!\\n', 'a\\n', 'b\\n', '!\\n', 'Y\\n', 'e\\n', 'h\\n', 'u\\n', '!\\n', 'w\\n', 'e\\n', '!\\n', 'w\\n', 'r\\n', 'i\\n', 'd\\n', '!\\n', '!\\n', 'a\\n', 'b\\n', '!\\n', 'Y\\n', 'e\\n', 'h\\n', 'u\\n', '!\\n', 'w\\n', 'e\\n', '!\\n', 'w\\n', 'r\\n', 'i\\n', 'd\\n', '!\\n', '!\\n', 'a\\n', 'b\\n', '!\\n', 'Y\\n', 'e\\n', 'h\\n', 'u\\n', '!\\n', 'w\\n', 'e\\n', '!\\n', 'w\\n', 'r\\n', 'i\\n', 'd\\n', '!\\n', '!\\n', 'a\\n', 'b\\n', '!\\n', 'Y\\n', 'e\\n', 'h\\n', 'u\\n', '!\\n', 'w\\n', 'e\\n', '!\\n', 'w\\n', 'r\\n', 'i\\n', 'd\\n"
    },
    {
        "number": 3054,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia. ') == \\\n    ['Blue Ridge','mountain', 'road', '.', 'Leaves', ',', 'glowing', 'in', 'autumn','sun', '', 'fall', 'in', 'Virginia
    },
    {
        "number": 3054,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('Blue') == 'Blue'\nassert solution('r') == 'r'\nassert solution('w') == 'w'\nassert solution('e') == 'e'\nassert solution('i') == 'i'\n"
    },
    {
        "number": 3055,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''2\nThoreHusfeldt\nThoreHusfeldt''') == 'ThoreH'\nassert solution(\n'''2\nThoreHusfeldt\nJohanSannemo''') == 'Thore'\nassert solution(\n'''2\nThoreHusfeldt\nJohanSannemo''') == 'Thore sucks'\nassert solution(\n'''2\nThoreHusfeldt\nThoreHusfeldt''') == 'ThoreH'\nassert solution(\n'''2\nThoreHusfeldt\nJohanSannemo''') == 'Thore'\n"
    },
    {
        "number": 3055,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\nThoreHusfeldt\\nThoreHusfeldt\\n') == 'ThoreH'\nassert solution('3\\nThoreHusfeldt\\nJohanSannemo\\n') == 'Thore is awesome'\nassert solution('4\\nThoreHusfeldt\\nJohanSannemo\\nThoreHusfeldt\\n') == 'ThoreH'\nassert solution('3\\nThoreHusfeldt\\nJohanSannemo\\nThoreHusfeldt\\n') == 'Thore sucks'\nassert solution('4\\nThoreHusfeldt\\nJohanSannemo\\nThoreHusfeldt\\nJohanSannemo\\n') == 'ThoreH'\n"
    },
    {
        "number": 3055,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\nThoreTiemann\\nThoreHusfeldt') == 'ThoreH'\nassert solution('2\\nThoreHusfeldt\\nJohanSannemo') == 'Thore is awesome'\nassert solution('2\\nThoreHusfeldt\\nThoreHusfeldt') == 'Thore is awesome'\nassert solution('2\\nThoreHusfeldter\\nThoreHusfeldt') == 'Thore is awesome'\nassert solution('2\\nThoreHusfeldter\\nJohanSannemo') == 'Thore sucks'\n"
    },
    {
        "number": 3055,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\nThoreTiemann\nThoreHusfeldt''') == 'ThoreH'\nassert solution('''2\nThoreHusfeldt\nJohanSannemo''') == 'Thore is awesome'\nassert solution('''2\nThoreHusfeldt\nThoreHusfeldt''') == 'Thore sucks'\nassert solution('''2\nThoreHusfeldt\nThoreHusfeldt''') == 'Thore is awesome'\nassert solution('''100\nThoreHusfeldt\nJohanSannemo\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nJohanSannemo\nThoreHusfeldt\nJohanSannemo\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\n"
    },
    {
        "number": 3055,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\nThoreHusfeldt\\nThoreHusfeldt\\n\") == \"ThoreH\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\\n\") == \"Thore is awesome\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\\nThoreHusfeldt\\n\") == \"Thore sucks\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\\nThoreHusfeldt\\nJohanSannemo\\n\") == \"Thore sucks\"\nassert solution(\"1\\nThoreHusfeldt\\nThoreHusfeldt\\n\") == \"ThoreH\"\n\"\"\""
    },
    {
        "number": 3055,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''2\nThoreTiemann\nThoreHusfeldt'''\n) == 'ThoreH'\n\nassert solution(\n'''2\nThoreHusfeldt\nJohanSannemo'''\n) == 'Thore is awesome'\n\nassert solution(\n'''2\nThoreHusfeldt\nThoreHusfeldt'''\n) == 'Thore sucks'\n"
    },
    {
        "number": 3055,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\nThoreTiemann\\nThoreHusfeldt') == 'ThoreH'\nassert solution('2\\nJohanSannemo\\nThoreHusfeldt') == 'Thore is awesome'\nassert solution('2\\nJohanSannemo\\nJohanSannemo') == 'Thore is awesome'\nassert solution('2\\nThoreHusfeldt\\nThoreHusfeldt') == 'Thore is awesome'\nassert solution('2\\nThoreHusfeldt\\nJohanSannemo') == 'Thore sucks'\n"
    },
    {
        "number": 3055,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"2\nThoreTiemann\nThoreHusfeldt\"\"\") == \"ThoreH\"\nassert solution(\"\"\"2\nThoreHusfeldt\nJohanSannemo\"\"\") == \"Thore is awesome\"\nassert solution(\"\"\"2\nThoreHusfeldter\nThoreHusfeldt\"\"\") == \"Thore sucks\"\nassert solution(\"\"\"100\ncAdoGuOtiKW4lyeLsHfvVrVfrFdNhVn7Wv1oMVc6dYXoeWZPv3sQxV2JyXI3qWJXeAt0DqGnuxrUWb3LJIiKXUeHGqA8YqR4wSvWXA7pmGfk6Yg0sjypMbx49qkqmUMKHdmY9jRr2zjC2uCkFqk3My7qgFQaYQYg7eRkYmFkKtC1n52YQ0Z1bO7o1SZzO0J1_nOQo_3AQG9wEuwXwLxPtwtrZJJnVbHBNV1i1ShyYHqc8XuTCXA6QN0wfJf5aA5d2QCQ3YVdVWfDvgWXtH5eNv4VNk7kzD6UzO0wJ2QiN3kdT1G_dM4HTs0omrLWj9_kf-tZu4HLTgUZ28zTKfYQeMlRxS_TmXgXCi3ZzhTF4o9TkJf3DqHxRmy2mfZj4Z4pM_Nfk0Fk0Ib5p0UgKPbV2Y0vKf5N9gFqwgQ5fOtq9p3a6Rn3gpP4puzN_5lvs_zC48m0VYW2W5yWbWxXcWzXB3_sm4Kf0qOZpvvE6t-TJy3hS0lY3aYx_5hyrKbqmW0xX0WcW9WgW4W3_L3Kf0qOZpvvE6t-TJy3hS0lY3aYx_5hyrKbqmW0xX0WcW9WgW4W3_L3Kf0qOZpvvE6t-TJy3hS0lY3aYx_5hyrKbqmW0xX0WcW9WgW4W3_L3Kf0qOZpvvE6t-TJy3hS0lY3aYx_5hyrKbqmW0xX0WcW9WgW4W3_L3Kf0qOZpvvE6t-TJy3hS0lY3aYx_5hyrKbqmW0xX0WcW9WgW4W3_L3Kf0qOZpvvE6t-TJy3hS0lY3aYx_5hyrKbqmW0xX0WcW9WgW4W3_L3Kf0qOZpvvE6t-TJy3hS0lY3aYx_5hyrKbqmW0xX0WcW9WgW4W3_L3Kf0qOZpvvE6t-TJy3hS0lY3aYx_5hyrKbqmW0xX0WcW9WgW4W3_L3Kf0qOZpvvE6t-TJy3hS0lY3aYx_5hyrKbqmW0xX0WcW9WgW4W3_L3Kf0qOZpvvE6t-TJy3hS0lY3aYx_5hyrKbqmW0xX0WcW9WgW4W3_L3Kf0qOZpvvE6t-TJy3hS0lY3aYx_5hyrKbqmW0xX0WcW9WgW4W3_L3Kf0qOZpvvE6t-TJy3hS0lY3aYx_5hyrKbqmW0xX0WcW9WgW4W3_L3Kf0qOZpvvE6t-TJy3hS0lY3aYx_5hyrKbqmW0xX0WcW9WgW4W3_L3Kf0qOZpvvE6t-TJy3hS0lY3aYx_5hyrKbqmW0xX0WcW9WgW4W3_L3Kf0qOZpvvE6t-TJy3hS0lY3aYx_5hyrKbqmW0xX0WcW9WgW4W3_L3Kf0qOZpvvE6t-TJy3hS0lY3aYx_5hyrKbqmW0xX0WcW9WgW4W3_L3Kf0qOZpvvE6t-TJy3hS0lY3aYx_5hyrKbqmW0xX0WcW9WgW4W3_L3Kf0qOZpvvE6t-TJy3hS0lY3aYx_5hyrKbqmW0xX0WcW9WgW4W3_L3Kf0qOZpvvE6t"
    },
    {
        "number": 3055,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\nThoreTiemann\nThoreHusfeldt''') == 'ThoreH'\nassert solution('''2\nThoreHusfeldt\nJohanSannemo''') == 'ThoreH'\nassert solution('''2\nThoreHusfeldt\nJohanSannemo''') == 'ThoreH'\nassert solution('''2\nThoreHusfeldt\nThoreHusfeldt''') == 'ThoreH'\nassert solution('''2\nThoreHusfeldt\nThoreHusfeldt''') == 'ThoreH'\n"
    },
    {
        "number": 3055,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n\"\"\""
    },
    {
        "number": 3056,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('P*P') == 6\nassert solution('L*R') == 25\nassert solution('**') == 33\nassert solution('L*L') == 0\nassert solution('L*LRL*RLL') == 9\n"
    },
    {
        "number": 3056,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('P*P') == 6\nassert solution('L*R') == 25\nassert solution('**') == 33\nprint(\"All test cases passed successfully.\")\n"
    },
    {
        "number": 3056,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"PP\") == 2\nassert solution(\"LR\") == 5\nassert solution(\"PPLL\") == 5\nassert solution(\"RL\") == 5\nassert solution(\"RLLR\") == 8\n"
    },
    {
        "number": 3056,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3056,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') is None\nassert solution('*') is None\nassert solution('PPPP') is None\nassert solution('P*PP') is None\nassert solution('PPP') is None\n"
    },
    {
        "number": 3056,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"PP*PP\") == 6\nassert solution(\"PP**\") == 33\nassert solution(\"**\") == 33\nassert solution(\"L*R\") == 25\nassert solution(\"**L*R\") == 33\n"
    },
    {
        "number": 3056,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('P*P') == 6\nassert solution('L*R') == 25\nassert solution('**') == 33\nassert solution('*L*R') == 60\nassert solution('L**R') == 120\n"
    },
    {
        "number": 3056,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(L*R) == 25\nassert solution(P*P) == 6\nassert solution(**) == 33\nassert solution(LLR) == 25\nassert solution(**) == 33\n"
    },
    {
        "number": 3056,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '33'"
    },
    {
        "number": 3056,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('RL') == ''\nassert solution('LP') == ''\nassert solution('RLP') == ''\nassert solution('LLP') == ''\n"
    },
    {
        "number": 3057,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 'wait what?'\n'''\n\n\nfrom collections import Counter\n\nN = int(input())\n\nrhyme_counter = Counter()\n\nfor _ in range(N):\n    x, y = input().split()\n    if x in rhyme_counter:\n        rhyme_counter[x] += 1\n    else:\n        rhyme_counter[x] = 1\n    if y in rhyme_counter:\n        rhyme_counter[y] += 1\n    else:\n        rhyme_counter[y] = 1\n\nR = len(rhyme_counter)\n\nfor k, v in rhyme_counter.items():\n    if (R > 1) and (R - 1) <= v <= R:\n        print('yes')\n        break\nelse:\n    print('wait what?')"
    },
    {
        "number": 3057,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('herp is derp') == 'yes'\nassert solution('derp is herp') == 'yes'\nassert solution('herp is herp') == 'yes'\nassert solution('derp is derp') == 'yes'\nassert solution('oskar not lukas') == 'wait what?'\n"
    },
    {
        "number": 3057,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\nherp is derp\\nderp is herp\\nherp is herp\\nderp is derp') == 'yes'\nassert solution('3\\noskar not lukas\\noskar is poptart\\nlukas is smart\\n') == 'wait what?'\nassert solution('1\\nmoo not foo') == 'yes'\n"
    },
    {
        "number": 3057,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\noskar not lukas\\noskar is poptart\\nlukas is smart\\n') == 'wait what?'\nassert solution('3\\noskar not lukas\\noskar is poptart\\nlukas is smart\\n') == 'wait what?'\nassert solution('2\\nlukas is smart\\n') == 'yes'\nassert solution('2\\nlukas is smart\\n') == 'yes'\nassert solution('2\\noskar is derp\\nlukas is smart\\n') == 'wait what?'\n"
    },
    {
        "number": 3057,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"herp is derp\") == \"yes\"\nassert solution(\"derp is herp\") == \"yes\"\nassert solution(\"herp is herp\") == \"yes\"\nassert solution(\"derp is derp\") == \"yes\"\nassert solution(\"oskar not lukas\") == \"wait what?\"\n"
    },
    {
        "number": 3057,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"herp is derp\\nderp is herp\\nherp is herp\\nderp is derp\") == \"yes\"\nassert solution(\"oskar not lukas\\noskar is poptart\\nlukas is smart\") == \"wait what?\"\nassert solution(\"moo not foo\") == \"yes\"\nassert solution(\"oskar is poptart\") == \"yes\"\nassert solution(\"lukas is smart\") == \"wait what?\"\n"
    },
    {
        "number": 3057,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('moo not foo') == 'yes'\nassert solution('oskar not lukas') == 'wait what?'\nassert solution('oskar is poptart') == 'wait what?'\nassert solution('lukas is smart') == 'wait what?'\nassert solution('herp is derp') == 'yes'\n"
    },
    {
        "number": 3057,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('herp is derp') == 'yes'\nassert solution('derp is herp') == 'yes'\nassert solution('herp is herp') == 'yes'\nassert solution('derp is derp') == 'yes'\nassert solution('herp is herp') == 'yes'\n"
    },
    {
        "number": 3057,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ulf is not lukas') == 'yes'\nassert solution('oskar is not lukas') == 'wait what?'\nassert solution('lukas is smart') == 'yes'\nassert solution('lukas is not smart') == 'wait what?'\nassert solution('lukas is smart and foo is lukas') == 'wait what?'\n"
    },
    {
        "number": 3057,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''herp is derp\nderp is herp\nherp is herp\nderp is derp''') == 'yes'\nassert solution('''oskar not lukas\noskar is poptart\nlukas is smart''') == 'wait what?''''\n"
    },
    {
        "number": 3058,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\nAACCMMAA\nACA\nMM\nACMAA\nAA\nA\n''') == 'impossible'\nassert solution('''1\nAM\nMA\n''') == 'impossible'\nassert solution('''3\nACMA\nACM\nACA\nAMA\n''') == 'impossible'\nassert solution('''4\nACA\nACM\nACA\nACA\n''') == 'impossible'\nassert solution('''4\nAC\nAC\nAC\nAC\n''') == 'impossible'\n"
    },
    {
        "number": 3058,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n5\nAACCMMAA\nACA\nMM\nACMAA\nAA\nA\n''') == 'impossible'\nassert solution('''\n3\nACMA\nACM\nACA\nAMA\n''') == 'impossible'\nassert solution('''\n1\nAM\nMA\n''') == '1 4'\nassert solution('''\n7\nAACCMMAA\nACA\nMM\nACMAA\nAA\nA\nMA\nAM\n''') == '1 4'\nassert solution('''\n4\nAACCMMAA\nACA\nMM\nACMAA\nAA\nA\n''') == 'impossible'\n"
    },
    {
        "number": 3058,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"A\") == \"impossible\"\nassert solution(\"AA\") == \"impossible\"\nassert solution(\"AACMAA\") == \"1 4\"\nassert solution(\"AACM\") == \"impossible\"\n"
    },
    {
        "number": 3058,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\nAACCMMAA\nACA\nMM\nACMAA\nAA\nA\n''') == '''1 4\nMM\nA\nAA\nACA\nACMAA\n'''\nassert solution('''5\nACA\nACM\nACA\nACA\nACA\n''') == '''impossible'''\nassert solution('''10\nAACCA\nAAAC\nAC\nCACCCA\nAAACCA\nACCC\nACCAC\nAAACC\nACACCA\nACAAC\nACAC\nAACACA\nAACAC\nAACAC\n''') == '''impossible'''\nassert solution('''2\nAA\nAA\nAA\nAA\nAA\n''') == '''impossible'''\nassert solution('''5\nAC\nAC\nAC\nAC\nAC\n''') == '''impossible'''\n"
    },
    {
        "number": 3058,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''5\nAACCMMAA\nACA\nMM\nACMAA\nAA\nA\n'''\n) == '1 4\\nMM\\nA\\nAA\\nACA\\nACMAA'\nassert solution(\n'''3\nACMA\nACM\nACA\nAMA\n'''\n) == 'impossible'\n\nprint('Testcase 1:', solution(\n'''5\nAACCMMAA\nACA\nMM\nACMAA\nAA\nA\n'''\n))\n\nprint('Testcase 2:', solution(\n'''3\nACMA\nACM\nACA\nAMA\n'''\n))\n\nprint('Testcase 3:', solution(\n'''1\nAM\nMA\n'''\n))\n\nprint('Testcase 4:', solution(\n'''2\nAC\nCM\n'''\n))\n\nprint('Testcase 5:', solution(\n'''1\nA\n'''\n))\n\nprint('Testcase 6:', solution(\n'''2\nMA\nMA\n'''\n))\n\nprint('Testcase 7:', solution(\n'''1\nA\n'''\n))\n\nprint('Testcase 8:', solution(\n'''3\nAC\nCM\nAC\n'''\n))\n\nprint('Testcase 9:', solution(\n'''2\nAC\nCM\n'''\n))\n\nprint('Testcase 10:', solution(\n'''3\nAC\nCM\nAC\n'''\n))\n\nprint('Testcase 11:', solution(\n'''2\nCM\nAC\n'''\n))\n\nprint('Testcase 12:', solution(\n'''3\nAC\nCM\nAC\n'''\n))\n\nprint('Testcase 13:', solution(\n'''1\nA\n'''\n))\n\nprint('Testcase 14:', solution(\n'''2\nCM\nAC\n'''\n))\n\nprint('Testcase 15:', solution(\n'''3\nAC\nCM\nAC\n'''\n))\n\nprint('Testcase 16:', solution(\n'''1\nA\n'''\n))\n\nprint('Testcase 17:', solution(\n'''2\nCM\nAC\n'''\n))\n\nprint('Testcase 18:', solution(\n'''3\nAC\nCM\nAC\n'''\n))\n\nprint('Testcase 19:', solution(\n'''2\nCM\nAC\n'''\n))\n\nprint('Testcase 20:', solution(\n'''3\nAC\nCM\nAC\n'''\n))\n\nprint('Testcase 21:', solution(\n'''2\nCM\nAC\n'''\n))\n\nprint('Testcase 22:', solution(\n'''3\nAC\nCM\nAC\n'''\n))\n\nprint('Testcase 23:', solution(\n'''2\nCM\nAC\n'''\n))\n\nprint('Testcase 24:', solution(\n'''3\nAC\nCM\nAC\n'''\n))\n\nprint('Testcase 25:', solution(\n'''2\nCM\nAC\n'''\n))\n\nprint('Testcase 26:', solution(\n'''3\nAC\nCM\nAC\n'''\n))\n\nprint('Testcase 27:', solution(\n'''2\nCM\nAC\n'''\n))\n\nprint('Testcase 28:', solution(\n'''3\nAC\nCM\nAC\n'''\n))\n\nprint('Testcase 29:', solution(\n'''2\nCM\nAC\n'''\n))\n\nprint('Testcase 30:', solution(\n'''3\nAC\nCM\nAC\n'''\n))\n\nprint('Testcase 31:', solution(\n'''2\nCM\nAC\n'''\n))\n\nprint('Testcase 32:', solution(\n'''3\nAC\nCM\nAC\n'''\n))\n\nprint('Testcase 33:', solution(\n'''2\nCM\nAC\n'''\n))\n\nprint('Testcase 34:', solution(\n'''3\nAC\nCM\nAC\n'''\n))\n\nprint('Testcase 35:', solution(\n'''2\nCM\nAC\n'''\n))\n\nprint('Testcase 36:', solution(\n'''3\nAC\nCM\nAC\n'''\n))\n\nprint('Testcase 37:', solution(\n'''2\nCM\nAC\n'''\n))\n\nprint('Testcase 38:', solution(\n'''3\nAC\nCM\nAC\n'''\n))\n\nprint('Testcase 39:', solution(\n'''2\nCM\nAC\n'''\n))\n\nprint('Testcase 40:', solution(\n'''3\nAC\nCM\nAC\n'''\n))\n\nprint('Testcase 41:', solution(\n'''2\nCM\nAC\n'''\n))\n\nprint('Testcase 42:', solution(\n'''3\nAC\nCM\nAC\n'''\n))\n\nprint('Testcase 43:', solution(\n'''2\nCM\nAC\n'''\n))\n\nprint('Testcase 44:', solution(\n'''3\nAC\nCM\nAC\n'''\n))\n\nprint('Testcase 45:', solution(\n'''2\nCM\nAC\n'''\n))\n\nprint('Testcase 46:', solution(\n'''3\nAC\nCM\nAC\n'''\n))\n\nprint('Testcase 47:', solution(\n'''2\nCM\nAC\n'''\n))\n\nprint('Testcase 48:', solution(\n'''3\nAC\nCM\nAC\n'''\n))\n\nprint('Testcase 49:', solution(\n'''2\nCM\nAC\n'''\n))\n\nprint('Testcase 50:', solution(\n"
    },
    {
        "number": 3058,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\nAACCMMAA\nACA\nMM\nACMAA\nAA\nA\n''') == '1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n'\nassert solution('''3\nACMA\nACM\nACA\nAMA\n''') == 'impossible'\nassert solution('''3\nACM\nACMA\nACA\n''') == 'impossible'\nassert solution('''4\nAACCMMAA\nACA\nMM\nACMAA\nAA\nA\n''') == '1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n'\nassert solution('''5\nAACCMMAA\nACA\nMM\nACMAA\nAA\nA\n''') == '1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n'\n"
    },
    {
        "number": 3058,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n1\nACMA\nACM\nACA\nAMA\n''') == 'impossible'\nassert solution('''\n5\nAACCMMAA\nACA\nMM\nACMAA\nAA\nA\n''') == '1 4'\nassert solution('''\n5\nACMA\nACM\nACA\nAMA\n''') == 'impossible'\nassert solution('''\n5\nACMA\nACM\nACA\nAMA\n''') == 'impossible'\nassert solution('''\n5\nACMA\nACM\nACA\nAMA\n''') == 'impossible'\n"
    },
    {
        "number": 3058,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3058,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"A\") == \"\"\nassert solution(\"A\") == \"\"\nassert solution(\"AA\") == \"\"\n"
    },
    {
        "number": 3058,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1') == 'impossible'\nassert solution('ACMA') == 'impossible'\nassert solution('AACCCAA') == '1 4'\nassert solution('ACCC') == 'impossible'\n"
    },
    {
        "number": 3059,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n3\") == \"5\"\nassert solution(\"2\\n2\\n2\") == \"3\"\nassert solution(\"1000\\n2\\n2\") == \"3\"\nassert solution(\"5000\\n10\\n1\") == \"5\"\nassert solution(\"10\\n1\\n1\") == \"5\"\n"
    },
    {
        "number": 3059,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"100 111 5\") == \"124\"\nassert solution(\"2 4 1\") == \"3\"\nassert solution(\"10 20 3\") == \"18.9029850746\"\nassert solution(\"100 15 3\") == \"18.4330959936\"\nassert solution(\"100 15 3\") == \"18.4330959936\"\n"
    },
    {
        "number": 3059,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2''') == '124'\nassert solution('''2 4 1\n1 0.5 5\n''') == '3'\n"
    },
    {
        "number": 3059,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"100 111 5\") == \"124\"\nassert solution(\"2 4 1\") == \"3\"\nassert solution(\"10 20 3\") == \"18.9029850746\"\nassert solution(\"10 9 7\") == \"6.8637007598\"\nassert solution(\"1 0.5 10\") == \"10\"\n"
    },
    {
        "number": 3059,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution
    },
    {
        "number": 3059,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2''') == '124'\nassert solution('''2 4 1\n1 0.5 5\nSample Output 2:\n3\n\nSample Input 3:\n10 20 3\n5 0.3 8\n6 0.8 3\n8 0.9 3\nSample Output 3:\n18.9029850746\n''') == '18.9029850746'\n"
    },
    {
        "number": 3059,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''100 111 5''') == '124'\nassert solution('''2 4 1''') == '3'\nassert solution('''10 20 3''') == '18.904344362'"
    },
    {
        "number": 3059,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3059,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('100 111 5') == '124'\nassert solution('2 4 1') == '3'\nassert solution('10 20 3') == '18.9029850746'\nassert solution('4 4 2') == '2'\nassert solution('10 25 2') == '4'\n"
    },
    {
        "number": 3059,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2''') == '124'\nassert solution('''2 4 1\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0"
    },
    {
        "number": 3060,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3''') == '2 1 2'\nassert solution('''2 1''') == '1'\nassert solution('''5 22''') == '4 3 4 2'\nassert solution('''3 3''') == '1'\nassert solution('''1 1''') == '1'\n"
    },
    {
        "number": 3060,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 3\") == \"2 1 2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"5 22\") == \"4 3 4 2\"\n"
    },
    {
        "number": 3060,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 3\\n2 1\\n') == '2 1 2'\nassert solution('5 22\\n1') == '1'\nassert solution('5 1\\n2') == '1'\nassert solution('5 4\\n3') == '4 3 2 1'\nassert solution('5 2\\n2') == '1'\n"
    },
    {
        "number": 3060,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3060,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 4') == '2 1 2'\nassert solution('2 1') == '1'\nassert solution('5 22') == '4 3 4 2'\n"
    },
    {
        "number": 3060,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3060,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output\nprint(solution(stdin))\n"
    },
    {
        "number": 3060,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 3') == '1 2'\nassert solution('2 1') == '1'\nassert solution('5 22') == '4 3 4 2'\nassert solution('5 6') == '4'\nassert solution('5 1') == '1'\n"
    },
    {
        "number": 3060,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 3\n''') == '2 1 2'\nassert solution('''2 1\n''') == '1'\nassert solution('''5 22\n''') == '4 3 4 2'\nassert solution('''2 2\n''') == '1'\nassert solution('''3 3\n''') == '1 2'\n"
    },
    {
        "number": 3060,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 4') == '2 1 2'\nassert solution('5 22') == '4 3 4 2'\nassert solution('9 30') == '6 8 10 4 2'\nassert solution('10 31') == '9 8 9 10 10'\n"
    },
    {
        "number": 3061,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"4 4\n1 2\n1 3\n3 4\n2 4\n\"\"\") == '2'\n\nassert solution(\n\"\"\"7 6\n1 2\n2 3\n2 5\n6 3\n7 2\n3 4\n\"\"\") == '2'\n\nassert solution(\n\"\"\"7 5\n1 2\n2 3\n3 4\n5 6\n6 7\n7 5\n\"\"\") == '0'\n"
    },
    {
        "number": 3061,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 4\n1 2\n1 3\n3 4\n2 4''') == '2'\nassert solution('''7 6\n1 2\n2 3\n2 5\n6 3\n7 2\n3 4\n''') == '2'\nassert solution('''7 5\n1 2\n2 3\n3 4\n5 6\n6 7\n7 8\nSample Input 4:\n1\nSample Output 4:\n0"
    },
    {
        "number": 3061,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 4\n1 2\n1 3\n3 4\n2 4''') == '2'\nassert solution('''7 6\n1 2\n2 3\n3 4\n5 6\n6 7\n7 2''') == '0'\nassert solution('''7 5\n1 2\n2 3\n3 4\n5 6\n6 7\n7 2''') == '2'\nassert solution('''5 4\n1 2\n2 3\n3 4\n4 5\n5 4\n''') == '0'\nassert solution('''4 3\n1 2\n2 3\n3 4\n4 5\n5 4''') == '2'\n"
    },
    {
        "number": 3061,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n4 4\n1 2\n1 3\n3 4\n2 4\n''') == '2'\n\nassert solution(\n'''\n7 6\n1 2\n2 3\n2 5\n6 3\n7 2\n3 4\n''') == '0'\n\nassert solution(\n'''\n7 5\n1 2\n2 3\n3 4\n5 6\n6 7\n''') == '2'\n"
    },
    {
        "number": 3061,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 4\n1 2\n1 3\n3 4\n2 4\n''') == '2'\n\nassert solution('''7 6\n1 2\n2 3\n2 5\n6 3\n7 2\n3 4\n''') == '0'\n\nassert solution('''7 5\n1 2\n2 3\n3 4\n5 6\n6 7\n7 1\n''') == '1'\n\nassert solution('''10 10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n''') == '3'\n\nassert solution('''10 10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9"
    },
    {
        "number": 3061,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n4 4\n1 2\n1 3\n3 4\n2 4\n''') == '2'\n\nassert solution('''\n7 6\n1 2\n2 3\n2 5\n6 3\n7 2\n3 4\n''') == '2'\n\nassert solution('''\n7 5\n1 2\n2 3\n3 4\n5 6\n6 7\n7 5\n3 4\n''') == '0'"
    },
    {
        "number": 3061,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''4 4\n1 2\n1 3\n3 4\n2 4'''\n    ) == '2'\nassert solution(\n'''6 3\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7'''\n    ) == '0'\n"
    },
    {
        "number": 3061,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1\\n2\") == \"1\"\nassert solution(\"1\\n1\\n2\\n3\\n4\") == \"2\"\nassert solution(\"1\\n2\\n3\\n4\") == \"0\"\nassert solution(\"2\\n1\\n2\\n3\\n4\") == \"2\"\nassert solution(\"2\\n1\\n2\\n3\\n4\\n5\\n6\") == \"2\"\n"
    },
    {
        "number": 3061,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1\\n3\\n3\\n1\\n1\\n5\\n7\") == \"2\"\nassert solution(\"3\\n1\\n2\\n3\\n1\\n2\\n5\\n7\") == \"2\"\nassert solution(\"5\\n1\\n2\\n3\\n4\\n1\\n2\\n4\") == \"0\"\nassert solution(\"7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\") == \"2\"\nassert solution(\"7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\") == \"0\"\n"
    },
    {
        "number": 3061,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 5\n1 2\n1 3\n3 4\n2 4\n''') == '2'\nassert solution('''6 5\n1 2\n2 3\n2 5\n4 5\n1 3\n3 4\n''') == '0'\nassert solution('''7 5\n1 2\n2 3\n3 4\n5 6\n6 7\n1 4\n4 5\nSample Output 3:\n2\n''') == '2'\nassert solution('''7 6\n1 2\n2 3\n2 5\n6 3\n7 2\n3 4\n''') == '0'\nassert solution('''8 3\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 2\n3 4\n''') == '1'\n"
    },
    {
        "number": 3062,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"3.00000000\"\nassert solution(\"15 15\") == \"28.26445910\"\nassert solution(\"0 20\") == \"3.14159265\"\nassert solution(\"-10 10\") == \"28.26445910\"\n"
    },
    {
        "number": 3062,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''20 0''') == '20.00000000'\nassert solution('''-10 10''') == '3.14159265'\nassert solution('''0 20''') == '28.26445910'\nassert solution('''-10 10''') == '3.14159265'\nassert solution('''0 10''') == '28.26445910'\n"
    },
    {
        "number": 3062,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('20 0\\n1.00 0.10') == '20.00000000'\nassert solution('-10 10\\n10.00 1.00') == '3.14159265'\nassert solution('0 20\\n1.00 0.10') == '28.26445910'\nassert solution('50 0\\n5.00 0.40') == '6.99291859'\nassert solution('50 0\\n5.00 0.40') == '6.99291859'\n"
    },
    {
        "number": 3062,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 0\nassert solution('20 0') == 0\nassert solution('-10 10') == 0\nassert solution('1.00 0.10') == 0\nassert solution('20 0') == 0\n"
    },
    {
        "number": 3062,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"0 1\") == \"\"\nassert solution(\"1 1\") == \"\"\n"
    },
    {
        "number": 3062,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 0\\n1.00 0.10') == '20.00000000'\nassert solution('-10 10\\n10.00 1.00') == '3.14159265'\nassert solution('-10 10\\n10.00 0.10') == '28.26445910'\nassert solution('-10 10\\n1.00 0.10') == '28.26445910'\nassert solution('20 0\\n1.00 0.10') == '20.00000000'\n"
    },
    {
        "number": 3062,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''20 0\n1.00 0.10''') == '20.00000000'\nassert solution('''-10 10\n10.00 1.00''') == '3.14159265'\nassert solution('''20 0\n-1.00 0.10''') == '28.26445910'\nassert solution('''-10 10\n-1.00 0.10''') == '3.14159265'\nassert solution('''-10 -10\n1.00 1.00''') == '3.14159265'\n"
    },
    {
        "number": 3062,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"20 0\n1.00 0.10\n\"\"\") == \"20.00000000\"\n\nassert solution(\n\"\"\"\n-10 10\n10.00 1.00\n\"\"\") == \"3.14159265\"\n"
    },
    {
        "number": 3062,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 0') == '0.0'\nassert solution('20 0') == '20.0'\nassert solution('-20 0') == '20.0'\nassert solution('20 0') == '20.0'\nassert solution('-20 0') == '20.0'\n"
    },
    {
        "number": 3062,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"20 0\n1.00 0.10\n\"\"\") == '20.00000000'\nassert solution(\n\"\"\"-10 10\n10.00 1.00\n\"\"\") == '3.14159265'\nassert solution(\n\"\"\"0 20\n1.00 0.10\n\"\"\") == '28.26445910'\n"
    },
    {
        "number": 3063,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n2 1\\n1 1') == '2'\nassert solution('1\\n1 1\\n1 1') == '2'\nassert solution('3\\n2 120\\n3 50\\n2 80') == '150'\nassert solution('2\\n2 2\\n2 2') == '4'\nassert solution('1\\n1 1\\n1 1') == '2'\n"
    },
    {
        "number": 3063,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n1\n2 10\n3 50\n\"\"\"\n) == '170'\nassert solution(\n\"\"\"\n4\n2 100\n1 100\n4 70\n3 70\n\"\"\"\n) == '170'\nassert solution(\n\"\"\"\n4\n2 120\n3 50\n2 80\n\"\"\"\n) == '150'\nassert solution(\n\"\"\"\n3\n1 100\n2 100\n3 70\n\"\"\"\n) == '170'\nassert solution(\n\"\"\"\n4\n1 100\n2 120\n3 50\n4 70\n\"\"\"\n) == '150'\n"
    },
    {
        "number": 3063,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n2 100\n1 100\n4 70\n3 70''') == '170'\nassert solution('''3\n2 120\n3 50\n2 80''') == '150'\nassert solution('''10\n3 1\n3 2\n1 4\n2 5\n4 6\n5 6\n2 3\n4 8\n2 7\n1 3\n3 4\n4 5\n5 6\n6 7\n7 8\n3 9\n4 10\n5 11\n6 12\n7 13\n8 14\n9 15\n10 16''') == '15909'\nassert solution('''20\n10 1\n10 2\n10 3\n10 4\n10 5\n10 6\n10 7\n10 8\n10 9\n10 10\n10 11\n10 12\n10 13\n10 14\n10 15\n10 16\n10 17\n10 18\n10 19\n10 20''') == '598921'\nassert solution('''30\n30 1\n30 2\n30 3\n30 4\n30 5\n30 6\n30 7\n30 8\n30 9\n30 10\n30 11\n30 12\n30 13\n30 14\n30 15\n30 16\n30 17\n30 18\n30 19\n30 20\n30 21\n30 22\n30 23\n30 24\n30 25\n30 26\n30 27\n30 28\n30 29''') == '337318'\n"
    },
    {
        "number": 3063,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n2 100\n1 100\n4 70\n3 70''') == '170'\n\nassert solution('''4\n3 50\n2 80\n1 100\n3 70\n''') == '150'\n\nassert solution('''2\n1 100\n1 100\n''') == '100'\n\nassert solution('''2\n2 30\n2 90\n''') == '100'\n\nassert solution('''4\n1 100\n1 100\n1 100\n1 100\n''') == '100'"
    },
    {
        "number": 3063,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n2\n1 100\n4 70''') == '170'\nassert solution('''2\n2\n1 100\n2 80''') == '150'\nassert solution('''4\n2\n1 100\n4 70\n3 70\n2 80''') == '150'\nassert solution('''4\n2\n1 100\n4 70\n3 70\n2 90''') == '170'\nassert solution('''4\n2\n2\n1 100\n4 70\n3 70\n2 80''') == '150'\n"
    },
    {
        "number": 3063,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n2 100\n1 100\n4 70\n3 70''') == '170'\nassert solution('''3\n2 120\n3 50\n2 80''') == '150'\nassert solution('''1\n1''') == '0'\nassert solution('''0\n0''') == '0'\nassert solution('''1\n1''') == '1'\n"
    },
    {
        "number": 3063,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''4\n2 100\n1 100\n4 70\n3 70''') == '170'\nassert solution(\n'''6\n2 120\n3 50\n2 80\n4 40\n5 60\n6 70''') == '270'\nassert solution(\n'''6\n2 120\n3 50\n2 80\n4 40\n5 60\n6 70''') == '270'\nassert solution(\n'''6\n2 120\n3 50\n2 80\n4 40\n5 60\n6 70''') == '270'\nassert solution(\n'''6\n2 120\n3 50\n2 80\n4 40\n5 60\n6 70''') == '270'\n"
    },
    {
        "number": 3063,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n5\") == \"5\"\nassert solution(\"2\\n6\") == \"10\"\nassert solution(\"3\\n8\") == \"14\"\nassert solution(\"2\\n2\") == \"0\"\nassert solution(\"2\\n2\\n2\") == \"0\"\n"
    },
    {
        "number": 3063,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 100\\n1 100\\n4 70\\n3 70\") == \"170\"\nassert solution(\"4\\n2 120\\n3 50\\n2 80\") == \"150\"\nassert solution(\"4\\n2 120\\n3 50\\n2 80\\n2 150\") == \"120\"\nassert solution(\"1\\n100\\n100\\n100\\n100\\n100\\n100\\n100\") == \"100\"\nassert solution(\"5\\n1 100\\n2 80\\n3 60\\n4 40\\n5 10\") == \"100\"\n"
    },
    {
        "number": 3063,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"2\\n\" +\n\"2 100\\n\" +\n\"1 100\\n\" +\n\"4 70\\n\" +\n\"3 70\") == \"150\"\n\nassert solution(\n\"2\\n\" +\n\"2 120\\n\" +\n\"3 50\\n\" +\n\"2 80\") == \"150\"\n\nassert solution(\n\"3\\n\" +\n\"2 120\\n\" +\n\"3 50\\n\" +\n\"2 80\\n\" +\n\"1 100\") == \"150\"\n\nassert solution(\n\"5\\n\" +\n\"2 120\\n\" +\n\"3 50\\n\" +\n\"2 80\\n\" +\n\"1 100\\n\" +\n\"4 70\") == \"150\"\n\nassert solution(\n\"3\\n\" +\n\"2 120\\n\" +\n\"3 50\\n\" +\n\"2 80\\n\" +\n\"1 100\\n\" +\n\"4 70\\n\" +\n\"2 100\") == \"200\""
    },
    {
        "number": 3064,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3\n1 2\n1 3\n2 4\n''') == '2'\nassert solution('''6 6\n1 2\n1 3\n2 4\n3 4\n3 5\n5 6\n''') == '5'\n"
    },
    {
        "number": 3064,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 3\n1 2\n1 3\n2 4\n3 4\n3 5\n5 6''') == '2'\nassert solution('''2 2\n1 2\n1 3\n2 4\n''') == '5'\nassert solution('''8 4\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n2 3\n2 4\n2 5\n2 6\n3 4\n3 5\n4 5\n4 6\n5 6\n5 7\n5 8\n7 8''') == '4'\nassert solution('''9 9\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n4 5\n4 6\n4 7\n4 8\n4 9\n5 6\n5 7\n5 8\n5 9\n6 7\n6 8\n6 9\n7 8\n7 9\n8 9''') == '6'\nassert solution('''9 9\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n4 5\n4 6\n4 7\n4 8\n4 9\n5 6\n5 7\n5 8\n5 9\n6 7\n6 8\n6 9\n7 8\n7 9\n8 9''') == '4'\n"
    },
    {
        "number": 3064,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"2\\n1\\n1\\n1\\n1\\n1\") == \"2\"\nassert solution(\"5\\n1\\n1\\n1\\n1\\n1\") == \"5\"\nassert solution(\"6\\n1\\n1\\n1\\n1\\n1\") == \"5\"\nassert solution(\"7\\n1\\n1\\n1\\n1\\n1\") == \"6\"\n"
    },
    {
        "number": 3064,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''4 3\n1 2\n1 3\n2 4\n''') == '2'\nassert solution(\n'''6 6\n1 2\n1 3\n2 4\n3 4\n3 5\n5 6\n''') == '5'\n\n\"\"\""
    },
    {
        "number": 3064,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 3\n1 2\n1 3\n2 4\n''') == '2'\nassert solution('''6 6\n1 2\n1 3\n2 4\n3 4\n3 5\n5 6\n''') == '5'\nassert solution('''1\n1\n''') == '1'\nassert solution('''1\n2\n''') == '1'\nassert solution('''1\n2\n2\n3\n''') == '2'\n"
    },
    {
        "number": 3064,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"6 4\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\") == \"5\"\n"
    },
    {
        "number": 3064,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"4 3\n1 2\n1 3\n2 4\n3 4\n3 5\n5 6\"\"\") == \"2\"\nassert solution(\"\"\"6 6\n1 2\n1 3\n2 4\n3 4\n3 5\n5 6\"\"\") == \"5\"\n"
    },
    {
        "number": 3064,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 3\") == 2\nassert solution(\"6 6\") == 5"
    },
    {
        "number": 3064,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\") == \"2\\n5\\n8\\n15\\n22\\n29\\n36\\n43\\n50\\n57\\n64\\n71\\n78\\n85\\n92\\n99\\n106\\n113\\n120\\n127\\n134\\n141\\n148\\n155\\n162\\n169\\n176\\n183\\n190\\n197\\n204\\n211\\n218\\n225\\n232\\n239\\n246\\n253\\n260\\n267\\n274\\n281\\n288\\n295\\n302\\n309\\n316\\n323\\n330\\n337\\n344\\n351\\n358\\n365\\n372\\n379\\n386\\n393\\n400\\n407\\n414\\n421\\n428\\n435\\n442\\n449\\n456\\n463\\n470\\n477\\n484\\n491\\n498\\n505\\n512\\n519\\n526\\n533\\n540\\n547\\n554\\n561\\n568\\n575\\n582\\n589\\n596\\n603\\n610\\n617\\n624\\n631\\n638\\n645\\n652\\n659\\n666\\n673\\n680\\n687\\n694\\n701\\n708\\n715\\n722\\n729\\n736\\n743\\n750\\n757\\n774\\n781\\n788\\n795\\n802\\n809\\n816\\n823\\n830\\n837\\n844\\n851\\n858\\n865\\n872\\n889\\n896\\n903\\n910\\n917\\n924\\n931\\n938\\n945\\n952\\n959\\n966\\n973\\n980\\n987\\n994\")\nassert solution(\"4 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\") == \"2\\n5\\n8\\n15\\n22\\n29\\n36\\n43\\n50\\n57\\n64\\n71\\n78\\n85\\n92\\n99\\n106\\n113\\n120\\n127\\n134\\n141\\n148\\n155\\n162\\n169\\n176\\n183\\n190\\n197\\n204\\n211\\n218\\n225\\n232\\n239\\n246\\n253\\n260\\n267\\n274\\n281\\n288\\n295\\n302\\n309\\n316\\n323\\n330\\n337\\n344\\n351\\n358\\n365\\n372\\n379\\n386\\n393\\n400\\n407\\n414\\n421\\n428\\n435\\n442\\n449\\n456\\n463\\n470\\n477\\n484\\n491\\n498\\n505\\n512\\n519\\n526\\n533\\n540\\n547\\n554\\n561\\n568\\n575\\n582\\n589\\n596\\n603\\n610\\n617\\n624\\n631\\n638\\n645\\n652\\n659\\n666\\n673\\n680\\n687\\n694\\n701\\n708\\n715\\n722\\n729\\n736\\n743\\n750\\n757\\n774\\n781\\n788\\n795\\n802\\n809\\n816\\n823\\n830\\n837\\n844\\n851\\n858\\n865\\n872\\n889\\n896\\n903\\n910\\n917\\n924\\n931\\n938\\n945\\n952\\n959\\n966\\n973\\n980\\n987\\n994\")\nassert solution(\"4 3\\n1 2\\n1 3\\n2 4\\n3 4\") == \"2\\n5\\n8\\n15\\n22\\n29\\n36\\n43\\n50\\n57\\n64\\n71\\n78\\n85\\n92\\n99\\n106\\n113\\n120\\n127\\n134\\n141\\n148\\n155\\n162\\n169\\n176\\n183\\n190\\n197\\n204\\n211\\n218\\n225\\n232\\n239\\n246\\n253\\n260\\n267\\n274\\n281\\n288\\n295\\n302\\n309\\n316\\n323\\n330\\n337\\n344\\n351\\n358\\n365\\n372\\n379\\n386\\n393\\n400\\n407\\n414\\n421\\n428\\n435\\n442\\n449\\n456\\n463\\n470\\n477\\n484\\n491\\n498\\n505\\n512\\n519\\n526\\n533\\n540\\n547\\n554\\n561\\n568\\n575\\n582\\n589\\n596\\n603\\n610\\n617\\n624\\n631\\n638\\n645\\n652\\n659\\n666\\n673\\n680\\n687\\n694\\n701\\n708\\n715\\n722\\n729\\n736\\n743\\"
    },
    {
        "number": 3064,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 3\n1 2\n1 3\n2 4\n''') == '2'\nassert solution('''6 6\n1 2\n1 3\n2 4\n3 4\n3 5\n5 6\n''') == '5'\nassert solution('''4 4\n1 2\n1 3\n2 4\n2 3\n''') == '1'\nassert solution('''8 8\n1 2\n1 3\n2 4\n1 5\n1 6\n2 7\n2 8\n3 4\n3 5\n4 5\n5 6\n5 7\n6 7\n6 8\n7 8\n''') == '2'\nassert solution('''5 5\n1 2\n1 3\n2 4\n1 5\n1 6\n2 7\n2 8\n3 4\n1 6\n1 7\n1 8\n3 4\n1 6\n3 4\n3 5\n4 5\n1 3\n2 5\n3 4\n1 2\n1 3\n1 4\n1 5\n2 4\n3 4\n2 4\n2 3\n2 5\n3 5\n''') == '6'\n"
    },
    {
        "number": 3065,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1\\n0\\n2 1 2\\n1 0\\n1 0\\n1 0\\n1 0\") == \"0.5\"\nassert solution(\"8\\n6\\n1 0 2 3 0 1\\n7 1 2 3 4 5 6 7\\n1 0\\n2 0 3\\n2 0 2\\n1 0\\n1 0\\n1 0\\n1 0\") == \"0.0446429\""
    },
    {
        "number": 3065,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n3\n1\n0\n2 1 2\n1 0\n1 0\n''') == '0.5'\n\nassert solution('''\n8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n''') == '0.0446429'\n\nprint(solution('''\n4\n3\n1 2 3 0\n2 3 0 1\n1 0\n2 0 3\n3 0 2\n'''))\n"
    },
    {
        "number": 3065,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''3\n1\n0\n2 1 2\n1 0\n1 0\n''') == '0.5'\n\nassert solution(\n'''8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n''') == '0.0446429'\n"
    },
    {
        "number": 3065,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n1\n0\n2 1 2\n1 0\n1 0\n''') == '0.5'\nassert solution('''8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n''') == '0.0446429'\nassert solution('''9\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n1 0\n''') == '0.03142857'\nprint(solution('''9\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n1 0\n'''))\n"
    },
    {
        "number": 3065,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0\\n0\") == \"1\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n1\") == \"0.5\"\nassert solution(\"3\\n2\") == \"0.58266626\"\nassert solution(\"4\\n3\") == \"0.8666666666666667\"\n"
    },
    {
        "number": 3065,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"0 1\") == \"\"\nassert solution(\"0 1 2\") == \"\"\n"
    },
    {
        "number": 3065,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n1\n0\n2 1 2\n1 0\n1 0\n''') == '0.5'\nassert solution('''8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n''') == '0.0446429'\nassert solution('''8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n''') == '0.09090909'\nassert solution('''8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n''') == '0.09090909'\nassert solution('''8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n''') == '0.09090909'\n"
    },
    {
        "number": 3065,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input_data) == expected_data, solution(input_data)\n\"\"\"\n"
    },
    {
        "number": 3065,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n1\n0\n2 1 2\n1 0\n1 0\n''') == '0.5'\n\nassert solution('''8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n''') == '0.0446429'\n\nassert solution('''8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n''') == '0.0446429'\n\nassert solution('''8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n''') == '0.0446429'\n\nassert solution('''8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n''') == '0.0446429'"
    },
    {
        "number": 3065,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '0.0446429'"
    },
    {
        "number": 3066,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n1 2 3 3 2 1\n''') == '''3\n1 6 1\n2 5 2\n3 4 3'''\nassert solution('''5\n2 3 1 3 2\n''') == '''IMPOSSIBLE\n'''\nassert solution('''6\n1 2 1 2 2 1\n''') == '''IMPOSSIBLE\n'''\nassert solution('''4\n2 1 1 2\n''') == '''3\n1 2 1 2'''\nassert solution('''3\n2 1 1\n1 2 1\n2 1 1\n''') == '''2\n1 1 1\n1 2 1\n2 1 1'''\n"
    },
    {
        "number": 3066,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n') == '3\\n1 2 3 3 2 1'\nassert solution('1\\n2\\n') == 'IMPOSSIBLE'\nassert solution('1\\n2\\n2\\n') == 'IMPOSSIBLE'\nassert solution('1\\n3\\n1 2 1') == '3\\n1 2 1 2'\nassert solution('1\\n3\\n2 1 3') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3066,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3066,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"6\\n1 2 3 3 2 1\") == \"3\\n1 6 1\\n2 5 2\\n3 4 3\"\nassert solution(\n    \"4\\n1 2 1 2\") == \"IMPOSSIBLE\"\nassert solution(\n    \"4\\n1 2 1 2\\n2 1 2 1\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3066,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6\\n1 2 3 3 2 1') == '3\\n1 6 1\\n2 5 2\\n3 4 3'\nassert solution('4\\n1 2 1 2') == 'IMPOSSIBLE'\nassert solution('6\\n1 2 1 2 2 3 3') == '3\\n1 6 1\\n2 5 2\\n3 4 3'\nassert solution('6\\n3 1 1 3 3 1') == 'IMPOSSIBLE'\nassert solution('6\\n1 2 1 2 2 1') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3066,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n6\\n1 2 3 3 2 1') == '3\\n1 6 1\\n2 5 2\\n3 4 3'\nassert solution('2\\n1 2 1 2') == 'IMPOSSIBLE'\nassert solution('3\\n1 2 1 2') == 'IMPOSSIBLE'\nassert solution('4\\n1 2 1 2') == 'IMPOSSIBLE'\nassert solution('5\\n1 2 1 2') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3066,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"6\n1 2 3 3 2 1\"\"\") == \"3\\n1 6 1\\n2 5 2\\n3 4 3\\n\"\nassert solution(\n    \"\"\"7\n1 2 1 2 1 2 1\"\"\") == \"IMPOSSIBLE\\n\"\nassert solution(\n    \"\"\"8\n1 2 1 2 1 2 1 2\"\"\") == \"IMPOSSIBLE\\n\"\nassert solution(\n    \"\"\"4\n1 2 1 2\nSample Output 2:\nIMPOSSIBLE\n\"\"\"\n    ) == \"IMPOSSIBLE\\n\"\nassert solution(\n    \"\"\"9\n1 2 1 2 1 2 1 2 1\"\"\"\n    ) == \"IMPOSSIBLE\\n\"\n"
    },
    {
        "number": 3066,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"IMPOSSIBLE\"\nassert solution(\"1\") == \"IMPOSSIBLE\"\nassert solution(\"2\") == \"IMPOSSIBLE\"\nassert solution(\"3\") == \"IMPOSSIBLE\"\nassert solution(\"4\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3066,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3066,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == 'IMPOSSIBLE'\nassert solution('5') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3067,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n5 10 20 30 40 50') == '10 20 28 27 30 40 50'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1 2') == '1 2'\nassert solution('1\\n1 2 3') == '1 2 3'\nassert solution('1\\n1 1') == '1 1'\n"
    },
    {
        "number": 3067,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == \"10 20 28 27 30 40 50\""
    },
    {
        "number": 3067,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n1 2\\n1 100\\n1 1') == '1 2 100\\n1 100\\n1 1'\nassert solution('1\\n1\\n1\\n1\\n1') == '1 1'\nassert solution('2\\n5 10 20 30 40 50\\n2 28 27\\n1 98765432 10') == '1 98765432 1 10'"
    },
    {
        "number": 3067,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1\n1 100\n1 1''') == '1 100'\nassert solution('''2\n5 10 20 30 40 50\n2 28 27''') == '10 20 28 27 30 40 50'\n"
    },
    {
        "number": 3067,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input_data) == input_data\n"
    },
    {
        "number": 3067,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n1 100\\n1 1') == '1 2 100\\n'\nassert solution('2\\n5 10 20 30 40 50\\n2 28 27') == '10 20 28 27 30 40 50\\n'\nassert solution('3\\n2\\n1 1\\n1 1') == '1 1\\n'\nassert solution('2\\n2\\n1 1\\n1 1') == '1 1\\n'\nassert solution('1\\n1\\n1 1') == '1 1\\n'\n"
    },
    {
        "number": 3067,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n1 2\\n1 100\\n1 1') == '1 2 100'\nassert solution('2\\n5 10 20 30 40 50\\n2 28 27') == '10 20 28 27 30 40 50'\nassert solution('1\\n1\\n1') == '1'\nassert solution('3\\n1 2\\n1 100\\n1 1') == '1 2 100'\nassert solution('2\\n5 10 20 30 40 50\\n2 28 27') == '10 20 28 27 30 40 50'\n"
    },
    {
        "number": 3067,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(open('test_files/Y11R5P1/A.in').read()) == open('test_files/Y11R5P1/A_res').read()\nassert solution(open('test_files/Y11R5P1/B.in').read()) == open('test_files/Y11R5P1/B_res').read()\nassert solution(open('test_files/Y11R5P1/C.in').read()) == open('test_files/Y11R5P1/C_res').read()\nassert solution(open('test_files/Y11R5P1/D.in').read()) == open('test_files/Y11R5P1/D_res').read()\nassert solution(open('test_files/Y11R5P1/E.in').read()) == open('test_files/Y11R5P1/E_res').read()\n"
    },
    {
        "number": 3067,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '10 20 28 27 30 40 50'\nprint(solution(stdin))\n"
    },
    {
        "number": 3067,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(open(\"inputs/test_62.txt\")) == \"10 20 28 27 30 40 50\"\n\n-----\nInput:\n3\n1 2\n1 100\n1 1\n\nOutput:\n10 20 28 27 30 40 50\n\nInput:\n3\n5 10 20 30 40 50\n2 28 27\n\nOutput:\n10 20 28 27 30 40 50\n\"\"\""
    },
    {
        "number": 3068,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('AB 1 1\\nAC 2 1\\nBC 2 1') == '506'\n"
    },
    {
        "number": 3068,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('AB 1 1\\nAC 2 1\\nBC 2 1') == '506'\nassert solution('AB 1 1\\nAC 2 1\\nBC 1 1') == '2596'\nassert solution('AB 2 1\\nAC 1 1\\nBC 2 1') == '0'\nassert solution('AB 1 1\\nAC 2 1\\nBC 1 1\\nAC 2 1') == '0'\nassert solution('AB 1 1\\nAC 2 1\\nBC 2 1\\nAC 1 1') == '2596'\n"
    },
    {
        "number": 3068,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '2600'\nassert solution(stdin) == '506'"
    },
    {
        "number": 3068,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 0\nassert solution('1') == 26\nassert solution('2 3 2 1') == 506\nassert solution('2 3 3 2 1') == 636\nassert solution('2 3 3 3 2 1') == 759\n"
    },
    {
        "number": 3068,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == str(solution(open(\"test_input.txt\").read()))\n"
    },
    {
        "number": 3068,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"2600\"\nassert solution(\"0\") == \"\"\nassert solution(\"AB 1 1\") == \"506\"\nassert solution(\"AC 2 1\") == \"566\"\n"
    },
    {
        "number": 3068,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '506'\n"
    },
    {
        "number": 3068,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('AB 1 1') == '2600'\nassert solution('AC 2 1') == '506'\n\n------Alternate Solution------\nfrom collections import Counter"
    },
    {
        "number": 3068,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"AB 1 1\\nAC 2 1\\nBC 2 1\\nAC 3 1\\nBC 3 1\\nAC 4 1\") == \"506\"\nassert solution(\"AB 1 1\\nBC 3 1\\nAC 4 1\\nAC 5 1\\nBC 3 1\") == \"506\"\nassert solution(\"AB 1 1\\nAC 2 1\\nBC 3 1\\nAC 4 1\\nBC 2 1\") == \"506\"\nassert solution(\"AB 1 1\\nAC 2 1\\nBC 2 1\\nAC 3 1\\nBC 3 1\") == \"506\"\nassert solution(\"AB 1 1\\nAC 2 1\\nBC 2 1\\nAC 3 1\\nBC 3 1\\nAC 4 1\") == \"506\"\n"
    },
    {
        "number": 3068,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"1 1 1\") == \"\"\n"
    },
    {
        "number": 3069,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(solution) == 'impossible'\n\nassert solution(\"(()\") == \"possible\"\nassert solution(\")((\") == \"impossible\"\nassert solution(\")(\") == \"impossible\"\nassert solution(\"(()())\") == \"possible\"\n"
    },
    {
        "number": 3069,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3069,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"((((((\") == \"impossible\"\nassert solution(\")(((((\") == \"possible\"\nassert solution(\"(()))())\") == \"possible\"\nassert solution(\")()()(()))()())\") == \"possible\"\n\"\"\"\n"
    },
    {
        "number": 3069,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"(())(\") == \"impossible\"\nassert solution(\"(())(\") == \"possible\"\nassert solution(\"()()\") == \"impossible\"\nassert solution(\"()()\") == \"possible\"\nassert solution(\")()(\") == \"impossible\"\n"
    },
    {
        "number": 3069,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('())(') == \"impossible\"\nassert solution('(())(') == \"impossible\"\nassert solution('()()())') == \"possible\"\nassert solution('((()(()' == \"impossible\"\nassert solution('()' == \"possible\"\n"
    },
    {
        "number": 3069,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\")()())\") == \"possible\"\nassert solution(\"())(\") == \"impossible\"\nassert solution(\")()())\") == \"possible\"\nassert solution(\"())(\") == \"impossible\"\nassert solution(\")))(\") == \"impossible\"\n"
    },
    {
        "number": 3069,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('(()))') == 'possible'\nassert solution(')))(') == 'impossible'\nassert solution('())(') == 'impossible'\nassert solution(')(()') == 'impossible'\nassert solution('((()(()()))())') == 'impossible'\n"
    },
    {
        "number": 3069,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') is None\nassert solution('())') == 'possible'\nassert solution('()())()') == 'possible'\nassert solution(')())') == 'impossible'\nassert solution('()))((())') == 'impossible'\n"
    },
    {
        "number": 3069,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"possible\"\nprint(\"Test1 passed.\")\nassert solution(\"(()\") == \"impossible\"\nprint(\"Test2 passed.\")\nassert solution(\")()\") == \"impossible\"\nprint(\"Test3 passed.\")\nassert solution(\")((\") == \"impossible\"\nprint(\"Test4 passed.\")\nassert solution(\"((()))\") == \"possible\"\nprint(\"Test5 passed.\")\n"
    },
    {
        "number": 3069,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('()))') == 'possible'\nassert solution('()))') == 'impossible'\nassert solution('(()())()') == 'possible'\nassert solution('(())())') == 'impossible'\nassert solution('((()'"
    },
    {
        "number": 3070,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2\\n1 1800 3600 1800\\n1 1900 3600 1600\\n1 2200 9400 1400') == '1800'\n\"\"\"\n"
    },
    {
        "number": 3070,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"impossible\"\nassert solution(\"2 1\") == \"impossible\"\nassert solution(\"2 3\") == \"1800\"\nassert solution(\"2 3\\n1 1800 3600 1800\\n1 1900 3600 1600\") == \"1800\"\nassert solution(\"2 3\\n1 1800 3600 1800\\n1 1900 3600 1600\\n1 2200 9400 1400\") == \"1800\"\n"
    },
    {
        "number": 3070,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input(\"\")) == \"impossible\"\n\nassert solution(input(\"\\n\".join([\n    \"2 3\",\n    \"1 1800 9000 1800\",\n    \"1 2000 9200 1600\",\n    \"1 2200 9400 1400\",\n]))) == \"1800\"\n\nprint(solution(input(\"\\n\".join([\n    \"2 1\",\n    \"1 600 900 600\",\n    \"1 900 1200 600\",\n]))))\n\nassert solution(input(\"\\n\".join([\n    \"3 2\",\n    \"1 800 900 900\",\n    \"1 800 300 900\",\n    \"1 900 900 900\",\n    \"1 400 900 600\",\n]))) == \"1800\"\n"
    },
    {
        "number": 3070,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n3 4\") == \"impossible\"\nassert solution(\"2 3\\n1 1800 9000 1800\\n1 2000 9200 1600\") == \"1800\"\nassert solution(\"3 4\\n1 1800 3600 1800\\n1 1900 3600 1600\\n1 2200 9400 1400\") == \"impossible\"\nassert solution(\"3 4\\n1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400\") == \"1800\"\n"
    },
    {
        "number": 3070,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n2 3\n1 1800 9000 1800\n1 2000 9200 1600\n1 2200 9400 1400\n''') == '1800'\n\nassert solution(\n'''\n2 2\n1 1800 3600 1800\n1 1900 3600 1600\n''') == 'impossible'\n"
    },
    {
        "number": 3070,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n448\\n449\\n450\\n451\\n452\\n453\\n454\\n455\\n456\\n457\\n458\\n459\\n460\\n461\\n462\\n463\\n464\\n465\\n466\\n467\\n468\\n469\\n470\\n471\\n472\\n473\\n474\\n475\\n476\\n477\\n478\\n479\\n480\\n481\\n482\\n483\\n484\\n485\\n486\\n487\\n488\\n489\\n490\\n491\\n492\\n493\\n494\\n495\\n496\\n497\\n"
    },
    {
        "number": 3070,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 3\n1 1800 9000 1800\n1 2000 9200 1600\n1 2200 9400 1400\n''') == '1800'\nassert solution('''2 2\n1 1800 3600 1800\n1 1900 3600 1600\n''') == 'impossible'\n\"\"\""
    },
    {
        "number": 3070,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 3\n1 1800 9000 1800\n1 2000 9200 1600\n1 2200 9400 1400\n''') == '1800'\n\nassert solution('''2 2\n1 1800 3600 1800\n1 1900 3600 1600\n''') == 'impossible'\n\nassert solution('''2 3\n1 1800 9000 1800\n1 2000 9200 1600\n1 2200 9400 1400\n''') == '1800'\n\nassert solution('''2 2\n1 1800 3600 1800\n1 1900 3600 1600\n''') == 'impossible'\n\nassert solution('''2 3\n1 1800 9000 1800\n1 2000 9200 1600\n1 2200 9400 1400\n1 3200 3600 1600\n''') == '1800'"
    },
    {
        "number": 3070,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10') == 'impossible'\nassert solution('1 2\\n1 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10') == '1800'\nassert solution('1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1') == '0'\nassert solution('2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1') == '1'\nassert solution('2 3\\n2 2\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100') == '14400'\n"
    },
    {
        "number": 3070,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400\") == \"1800\\n\"\nassert solution(\"2 2\\n1 1800 3600 1800\\n1 1900 3600 1600\\nSample Output 2:\") == \"impossible\\n\"\nassert solution(\"1 3\\n1 1800 3600 1800\\n1 2000 9200 1600\\n1 2200 9400 1400\") == \"1800\\n\"\nassert solution(\"1 2\\n1 1800 3600 1800\\n1 1900 3600 1600\\nSample Output 2:\") == \"impossible\\n\"\nassert solution(\"1 1\\n1 1800 3600 1800\\n1 2000 9200 1600\\n1 2200 9400 1400\") == \"1800\\n\"\n"
    },
    {
        "number": 3071,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2''') == 'A1-B2 B1-A2 A3-B3'\nassert solution('''2 3''') == 'A1-C1 A2-B1 B2-C2'\nassert solution('''1 2''') == 'A1-B1'\nassert solution('''10 10''') == 'A1-B1 A2-C2 B2-C1 A3-D4 B3-E5 C4-F6 D5-G7 E6-H8 F7-I9 G8-J10 H9-K11 I10-L12 J11-M13 K12-N14 L13-O15 M14-P16 N15-Q17 O16-R18 P17-S19 Q18-T20 R19-U21 S20-V22 U21-W23 T22-X24'\nassert solution('''7 7''') == 'A1-B1 A2-C2 B2-C1 A3-D4 B3-E5 C4-F6 D5-G7 E6-H8 F7-I9 G8-J10 H9-K11 I10-L12 J11-M13 K12-N14 L13-O15 M14-P16 N15-Q17 O16-R18 P17-S19 Q18-T20 R19-U21 S20-V22 U21-W23 T22-X24'\n"
    },
    {
        "number": 3071,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"A1-B2 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\"\nassert solution(stdin) == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\"\nassert solution(stdin) == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B2 B1-C2\"\nassert solution(stdin) == \"A1-B1 A2-C1 B1-C2\"\nassert solution(stdin) == \"A1-C1 A2-B2 B1-C2\"\n"
    },
    {
        "number": 3071,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\nA1-B2 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\"\nassert solution(\"2 3\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\"\nassert solution(\"3 3\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\"\nassert solution(\"4 4\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\\nA1-B2 A2-C2 B2-C1\"\nassert solution(\"2 1\") == \"A1-C1 B1-C2\"\n"
    },
    {
        "number": 3071,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 2') == 'A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2'\nassert solution('2 3') == 'A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2'\nassert solution('1 2') == 'A1-B1'\nassert solution('4 5') == 'A1-B1 A2-C2 B2-C1 A3-D4 D3-E2 E1-F3'\nassert solution('3 4') == 'A1-B1 A2-C2 B2-C1 A3-D4 D3-E2 E1-F3'\n"
    },
    {
        "number": 3071,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 2\\n' + \n         '3 2\\n') == 'A1-B2 B1-A2 A3-B3\\n' + \n         'A2-B3 B2-A3 A1-B1\\n' + \n         'A3-B1 B3-A1 A2-B2\\n' + \n         'A1-B2 A2-C2 B2-C1\\n' + \n         'A1-C1 A2-B1 B2-C2\\n' + \n         'A1-B2 A2-C1 B1-C2\\n' + \n         'A1-C2 A2-B2 B1-C1'"
    },
    {
        "number": 3071,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3') == 'A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2'\n"
    },
    {
        "number": 3071,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 2''') == 'A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2'\nassert solution('''2 3''') == 'A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2'\nassert solution('''4 2''') == 'A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2 A3-D3 D1-E2\\nA1-E2 A3-D3 D1-B1 B3-C3'\nassert solution('''5 2''') == 'A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2 A3-D3 D1-E2\\nA1-E2 A3-D3 D1-B1 B3-C3 B4-D4 D2-E1\\nA1-E1 A3-D3 D1-B1 B3-C3'\nassert solution('''10 5''') == 'A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2 A3-D3 D1-E2\\nA1-E2 A3-D3 D1-B1 B3-C3 B4-D4 D2-E1\\nA1-E1 A3-D3 D1-B1 B3-C3 B5-D5 D2-E2\\nA1-E2 A3-D3 D1-B1 B3-C3'\n"
    },
    {
        "number": 3071,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 2') == 'A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2'\nassert solution('2 3') == 'A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2'\nassert solution('3 2') == 'A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2'\nassert solution('2 3') == 'A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2'\nassert solution('3 2') == 'A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2'\n"
    },
    {
        "number": 3071,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 2''') == '''A1-B2 A2-C2 B2-C1\nA1-C1 A2-B1 B2-C2\nA1-B2 A2-C1 B1-C2'''\n\nassert solution('''2 3''') == '''A1-B1 A2-C2 B2-C1\nA1-C1 A2-B1 B2-C2\nA1-B2 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1'''\n\nassert solution('''3 3''') == '''A1-B1 A2-C2 B2-C1 B3-D3 C3-D2 C1-D1\nA1-C1 A2-B1 B2-C2 B3-D3 C1-D1 C2-D2 D1-C2 D2-B1 D3-A1\nA1-B2 A2-C1 B1-C2 B3-D3 C1-D1 C2-D2 D1-C2 D2-B2 D3-A2\nA1-B3 A2-C2 B2-C1 B3-D3 C1-D1 C2-D2 D1-C2 D2-B3 D3-A3\nA1-C1 A2-B1 B2-C2 B3-D3 C1-D1 C2-D2 D1-C2 D2-B1 D3-A1\nA1-C2 A2-B2 B2-C1 B3-D3 C1-D1 C2-D2 D1-C2 D2-B2 D3-A2\nA1-B1 A2-C1 B1-C2 B3-D3 C1-D1 C2-D2 D1-C2 D2-B1 D3-A1\nA1-C3 A2-B3 B2-C2 B3-D3 C1-D1 C2-D2 D1-C2 D2-B3 D3-A3'''\n\nassert solution('''3 4''') == '''A1-B1 A2-C2 B2-C1 B3-D3 C3-D2 C1-D1\nA1-C1 A2-B1 B2-C2 B3-D3 C1-D1 C2-D2 D1-C2 D2-B1 D3-A1\nA1-B2 A2-C1 B1-C2 B3-D3 C1-D1 C2-D2 D1-C2 D2-B2 D3-A2\nA1-B3 A2-C2 B2-C1 B3-D3 C1-D1 C2-D2 D1-C2 D2-B3 D3-A3\nA1-C1 A2-B1 B2-C2 B3-D3 C1-D1 C2-D2 D1-C2 D2-B1 D3-A1\nA1-C2 A2-B2 B2-C1 B3-D3 C1-D1 C2-D2 D1-C2 D2-B2 D3-A2\nA1-B1 A2-C1 B1-C2 B3-D3 C1-D1 C2-D2 D1-C2 D2-B1 D3-A1\nA1-C3 A2-B3 B2-C2 B3-D3 C1-D1 C2-D2 D1-C2 D2-B3 D3-A3'''\n\nassert solution('''2 3''') == '''A1-B1 A2-C2 B2-C1\nA1-C1 A2-B1 B2-C2\nA1-B2 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1'''"
    },
    {
        "number": 3071,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 2') == 'A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2'\nassert solution('2 3') == 'A1-C2 B2-C1\\nA1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2'\n"
    },
    {
        "number": 3072,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin[0]\nprint(solution(stdin))\n"
    },
    {
        "number": 3072,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('.XX..') == 1\nassert solution('.X..X') == 3\nassert solution('XXXX') == 1\nassert solution('XXX.X.X') == 3\nassert solution('X.X.X.X') == 4\n"
    },
    {
        "number": 3072,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(open(\"inputs/test1.txt\")) == \"7\"\nassert solution(open(\"inputs/test2.txt\")) == \"9\"\nassert solution(open(\"inputs/test3.txt\")) == \"16\"\n"
    },
    {
        "number": 3072,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3072,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 2\n..\n..\n''') == '7'\nassert solution('''4 4\nX.XX\nX..X\n..X.\n..XX\n''') == '9'\nassert solution('''3 3\n..X.\nX..\n.X.\nSample Output 2:\n6\nassert solution('''2 1\n.\n''') == '1'\nassert solution('''2 2\n..\n..\n''') == '0'\n"
    },
    {
        "number": 3072,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 2\n..\n..''') == '7'\nassert solution('''4 4\nX.XX\nX..X\n..X.\n..XX''') == '9'\nassert solution('''4 4\nX..\nX.X\n..X\n.XX.\n''') == '9'\nassert solution('''5 5\n.X.X\nX..X\nXX.X\n.X.X\nX..X\n''') == '19'\nassert solution('''7 7\nXXXXXXXX\nXXXXXXXX\nXXXXX.X\nX..X.X\nX.X.X.\n.XXXX.\n.X.X.X\n.X.X.X\n''') == '35'\n"
    },
    {
        "number": 3072,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\nprint('Done!')\n"
    },
    {
        "number": 3072,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"9\""
    },
    {
        "number": 3072,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3072,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 2\n..\n..\n''') == '7'\nassert solution('''4 4\nXX.XX\nXX..X\n..X.\n..XX\n''') == '9'\nassert solution('''6 4\n.XX..\nXX.XX\n.XX..\n.XX..\n.XX..\n.XX..\n''') == '12'\nassert solution('''10 10\n.XX..XX\n..X.X.X\n.XX.X.X\n.XX.X.X\n.XX.X.X\n.XX.X.X\n.XX.X.X\n.XX.X.X\n.XX.X.X\n''') == '30'\nassert solution('''13 17\n.XXXXXXXX\nX.X..X.X\nX..XX..X\nX.X.XX..\nX.X..X.X\nX..X..XX\nX..X..XX\nX..X..XX\nX..X..XX\nX..X..XX\n''') == '60'\n"
    },
    {
        "number": 3073,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 3073,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3\n3 3 2 2 100\n1 1 1 1 500\n\"\"\") == '600'\nassert solution(\"\"\"2\n2 0 2 1 100\n6 0 8 1 1\n\"\"\") == '100'\nassert solution(\"\"\"8\n2 0 2 1 100\n6 0 8 1 1\n\"\"\") == '100'\nassert solution(\"\"\"1\n1 1 1 1 100\n\"\"\") == '-1'\nassert solution(\"\"\"4\n2 0 2 1 100\n6 0 8 1 1\n1 1 1 1 500\n\"\"\") == '200'\n"
    },
    {
        "number": 3073,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '100'\nassert solution(stdin) == '-1'\nassert solution(stdin) == '100'\nassert solution(stdin) == '100'\nassert solution(stdin) == '-1'\n"
    },
    {
        "number": 3073,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1 1 1 100\\n1 1 1 1 500') == '600'\nassert solution('2\\n3 3 2 2 100\\n1 1 1 1 500') == '100'\nassert solution('2\\n2 0 2 1 100\\n6 0 8 1 1') == '100'\nassert solution('1\\n1 1 1 1 500\\n1 1 1 1 500') == '600'\nassert solution('2\\n2 0 2 1 100\\n2 0 2 1 100\\n2 0 2 1 100\\n2 0 2 1 100\\n2 0 2 1 100\\n2 0 2 1 100\\n2 0 2 1 100\\n2 0 2 1 100') == '20'\n"
    },
    {
        "number": 3073,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n3 3 2 2 100\n1 1 1 1 500\n''') == '600'\nassert solution('''2\n2 0 2 1 100\n6 0 8 1 1\n''') == '100'\nassert solution('''2\n2 3 2 2 100\n1 1 1 1 500\n''') == '600'\nassert solution('''2\n2 0 2 1 100\n6 0 8 1 1\n''') == '100'\n"
    },
    {
        "number": 3073,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2''') == '600'\nassert solution('''3 2 2 2 100''') == '600'\nassert solution('''2 0 2 1 100''') == '100'\nassert solution('''6 0 8 1 1''') == '100'\nassert solution('''2''') == '-1'\n"
    },
    {
        "number": 3073,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3073,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n3 3 2 2 100\n1 1 1 1 500\n''') == '600'\n\nassert solution('''2\n2 0 2 1 100\n6 0 8 1 1\n''') == '100'\n\nassert solution('''5\n2\n-1 -1 1 1 100\n3 3 3 2 2\n1 1 1 1 500\n1 1 1 1 500\n1 1 1 1 500\n''') == '-1'\n\nassert solution('''4\n2\n-1 -1 1 1 100\n2 2 2 2 2\n1 1 1 1 500\n1 1 1 1 500\n1 1 1 1 500\n1 1 1 1 500\n1 1 1 1 500\n1 1 1 1 500\n1 1 1 1 500\n1 1 1 1 500\n1 1 1 1 500\n1 1 1 1 500\n''') == '-1'\n\nassert solution('''5\n2\n0 0 2 2 100\n5 0 8 2 2\n1 1 1 1 500\n1 1 1 1 500\n1 1 1 1 500\n1 1 1 1 500\n1 1 1 1 500\n1 1 1 1 500\n1 1 1 1 500\n1 1 1 1 500\n1 1 1 1 500\n1 1 1 1 500\n1 1 1 1 500\n''') == '-1'\n"
    },
    {
        "number": 3073,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"600\""
    },
    {
        "number": 3073,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''2\n3 3 2 2 100\n1 1 1 1 500\n''') == '600'\nassert solution(\n'''2\n2 0 2 1 100\n6 0 8 1 1\n''') == '100'\nassert solution(\n'''2\n3 3 2 2 100\n3 3 2 2 100\n''') == '-1'\nassert solution(\n'''2\n2 0 2 1 100\n6 0 8 1 1\n''') == '100'\nassert solution(\n'''3\n3 3 2 2 100\n3 3 2 2 100\n3 3 2 2 100\n''') == '-1'\n"
    },
    {
        "number": 3074,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '3'\nassert solution('''36''') == '3'\nassert solution('''361''') == '3'\nassert solution('''26''') == '0'\nassert solution('''11''') == '0'\n"
    },
    {
        "number": 3074,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n361') == '3'\nassert solution('2\\n11') == '0'\nassert solution('2\\n351') == '3'\nassert solution('2\\n971') == '0'\nassert solution('2\\n1234') == '1'\n"
    },
    {
        "number": 3074,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n    1\n    2\n''') == '2'\n\nassert solution('''\n    1\n    3\n''') == '0'\n\nassert solution('''\n    1\n    77\n''') == '1'\n\nassert solution('''\n    3\n    12\n''') == '2'\n\nassert solution('''\n    10\n    123456789\n''') == '5'\n"
    },
    {
        "number": 3074,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n3') == '0'\nassert solution('3\\n361') == '3'\nassert solution('3\\n11') == '0'\nassert solution('2\\n361') == '0'\nassert solution('2\\n11') == '0'\n"
    },
    {
        "number": 3074,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3074,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n361') == '3'\nassert solution('2\\n11') == '0'\n"
    },
    {
        "number": 3074,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n3\n361\n''') == '3'\nassert solution('''\n2\n11\n''') == '0'\nassert solution('''\n1\n111\n''') == '3'\nassert solution('''\n5\n12345\n''') == '3'\nassert solution('''\n8\n12345678\n''') == '3'\n"
    },
    {
        "number": 3074,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\".join(solution(\"\".join(map(str, range(1, 1001)))))) == \"\".join(map(str, range(1, 1001)))\nassert solution(\"\".join(solution(\"\".join(map(str, range(1, 1001)))))) == \"\".join(map(str, range(1, 1001)))\nassert solution(\"\".join(solution(\"\".join(map(str, range(1, 1001)))))) == \"\".join(map(str, range(1, 1001)))\nassert solution(\"\".join(solution(\"\".join(map(str, range(1, 1001)))))) == \"\".join(map(str, range(1, 1001)))\nassert solution(\"\".join(solution(\"\".join(map(str, range(1, 1001)))))) == \"\".join(map(str, range(1, 1001)))\n"
    },
    {
        "number": 3074,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n361''') == '3'\nassert solution('''2\n11''') == '0'\nassert solution('''6\n88''') == '0'\nassert solution('''8\n23''') == '1'\nassert solution('''10\n28''') == '0'\n"
    },
    {
        "number": 3074,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6\\n6') == '3'\nassert solution('9\\n9') == '0'\nassert solution('20\\n20') == '0'\nassert solution('101\\n101') == '1'\nassert solution('100000\\n100000') == '0'\n"
    },
    {
        "number": 3075,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(open(\"input/valid/sample_1.txt\").read()) == \"10\"\nassert solution(open(\"input/valid/sample_2.txt\").read()) == \"cancel road trip\"\nassert solution(open(\"input/valid/sample_3.txt\").read()) == \"20\"\nassert solution(open(\"input/valid/sample_4.txt\").read()) == \"cancel road trip\"\nassert solution(open(\"input/valid/sample_5.txt\").read()) == \"30\"\n"
    },
    {
        "number": 3075,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 10\\n2 100\\n1 10\\n11 5\\n') == '10'\nassert solution('1 10\\n2 100\\n1 10\\n13 5\\n') == 'cancel road trip'\nassert solution('1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1"
    },
    {
        "number": 3075,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1\\n') == 'cancel road trip'\nassert solution('1\\n1\\n1\\n3\\n') == '10'\nassert solution('1\\n1\\n1\\n5\\n') == 'cancel road trip'\nassert solution('1\\n1\\n1\\n3\\n5\\n') == '11'\nassert solution('1\\n1\\n1\\n2\\n3\\n') == '10'\n"
    },
    {
        "number": 3075,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 10\n2 100\n1 10\n11 5''') == '10'\nassert solution('''3 10\n2 100\n1 10\n11 5''') == 'cancel road trip'\nassert solution('''1 2\n1 1\n2 1''') == '1'\n"
    },
    {
        "number": 3075,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '10'\nassert solution('1\\n1\\n1\\n1') == '1'\nassert solution('1\\n2\\n3\\n4') == '1'\nassert solution('2\\n2\\n3\\n4') == '1'\nassert solution('2\\n1\\n2\\n3') == '1'\n"
    },
    {
        "number": 3075,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 10\\n2 100\\n1 10\\n11 5\") == \"10\"\nassert solution(\"3 10\\n2 100\\n1 10\\n13 5\") == \"cancel road trip\"\nassert solution(\"5 10\\n3 2\\n2 2\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\") == \"2\"\nassert solution(\"6 10\\n2 4\\n2 1\\n1 1\\n1 1\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\") == \"cancel road trip\"\nassert solution(\"7 10\\n2 4\\n2 1\\n1 1\\n1 1\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\") == \"2\"\n"
    },
    {
        "number": 3075,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 10\\n2 100\\n1 10\\n11 5') == '10'\nassert solution('3 10\\n2 100\\n1 10\\n13 5') == 'cancel road trip'\nassert solution('2 10\\n2 100\\n1 10\\n13 5\\n5 10\\n1 100\\n5 10') == '9'\nassert solution('3 10\\n2 100\\n1 10\\n13 5\\n5 10\\n1 100\\n5 10') == 'cancel road trip'\nassert solution('2 10\\n2 100\\n1 10\\n13 5\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1"
    },
    {
        "number": 3075,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'cancel road trip'\n"
    },
    {
        "number": 3075,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 3075,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 10\\n2 100\\n1 10\\n11 5') == '10'\nassert solution('3 10\\n2 100\\n1 10\\n13 5') == 'cancel road trip'\n"
    },
    {
        "number": 3076,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(open(\"knapsack_test.txt\").read()) == open(\"knapsack_test_out.txt\").read()\n\"\"\"\n"
    },
    {
        "number": 3076,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 9\\n2 8\\n1 1\\n3 4\\n5 100\\n') == '1 8 9 9 100 101 108 109 109'\nassert solution('5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\\n') == '0 7 8 11 15 16 19'\n"
    },
    {
        "number": 3076,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 9\\n2 8\\n1 1\\n3 4\\n5 100') == '1 8 9 9 100 101 108 109 109\\n'\nassert solution('5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\\n') == '0 7 8 11 15 16 19\\n'\nassert solution('3 7\\n3 3\\n5 3\\n5 5\\n5 4\\n5 4\\n5 5\\n') == '0 0 0 0 0 0 0\\n'\nassert solution('5 6\\n3 3\\n2 2\\n1 1\\n2 2\\n3 3\\n') == '0 0 0 0 0 0 0\\n'\nassert solution('3 7\\n3 3\\n5 3\\n5 5\\n5 4\\n5 4\\n5 5\\n') == '0 0 0 0 0 0 0\\n'\n"
    },
    {
        "number": 3076,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"2 3\") == \"2 1\"\nassert solution(\"2 3\") == \"2 1\"\n"
    },
    {
        "number": 3076,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3076,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"4 9\n2 8\n1 1\n3 4\n5 100\n\"\"\") == \"1 8 9 9 100 101 108 109 109\"\nassert solution(\"\"\"5 7\n2 2\n3 8\n2 7\n2 4\n3 8\n\"\"\") == \"0 7 8 11 15 16 19\"\n"
    },
    {
        "number": 3076,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"4 9\n2 8\n1 1\n3 4\n5 100\"\"\"\n) == \"\"\"1 8 9 9 100 101 108 109 109\"\"\"\n\nassert solution(\n    \"\"\"5 7\n2 2\n3 8\n2 7\n2 4\n3 8\"\"\"\n) == \"\"\"0 7 8 11 15 16 19\"\"\"\n\nassert solution(\n    \"\"\"5 1\n0 0\n1 1\n2 2\n3 3\n4 4\n5 5\"\"\"\n) == \"\"\"0 0 0 0 0 0 0\"\"\"\n\nassert solution(\n    \"\"\"5 1\n0 0\n1 1\n2 2\n3 3\n4 4\n5 5\"\"\"\n) == \"\"\"0 0 0 0 0 0 0\"\"\"\n"
    },
    {
        "number": 3076,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0 2\\n2 1\") == \"0 1\"\nassert solution(\"0 2\\n2 1\") == \"1\"\nassert solution(\"0 2\\n2 1\") == \"1\"\nassert solution(\"0 2\\n2 1\") == \"1\"\nassert solution(\"0 2\\n2 1\") == \"1\"\n"
    },
    {
        "number": 3076,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 9\\n2 8\\n1 1\\n3 4\\n5 100\\n\") == \"1 8 9 9 100 101 108 109 109\"\nassert solution(\"5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\\n\") == \"0 7 8 11 15 16 19\"\nassert solution(\"1 2\\n3 4\\n5 100\\n\") == \"0 7 8 11 15 16 19\"\nassert solution(\"2 2\\n3 4\\n5 100\\n\") == \"0 7 8 11 15 16 19\"\nassert solution(\"1 1\\n3 4\\n5 100\\n\") == \"0 7 8 11 15 16 19\"\n"
    },
    {
        "number": 3076,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3077,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0 1 2\") == 0\nassert solution(\"1 2 3\") == 0\nassert solution(\"1 3 3\") == 0\nassert solution(\"1 3 3\") == 0\nassert solution(\"1 1 1\") == 0\n"
    },
    {
        "number": 3077,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3') == '1'\nassert solution('1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n') == '3'\nprint(solution(''))\n"
    },
    {
        "number": 3077,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\") == \"1\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 0\\n0 3\\n3 3\") == \"3\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n0 3\") == \"3\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 3\") == \"3\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n0 3\") == \"3\"\n"
    },
    {
        "number": 3077,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\") == \"1\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n\") == \"3\"\nassert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n\") == \"3\"\n\"\"\"\n"
    },
    {
        "number": 3077,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"1 3 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\"\"\") == \"1\"\n\nassert solution(\n\"\"\"1 5 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n-1 -1\n2 2\"\"\") == \"3\"\n\nassert solution(\n\"\"\"1 5 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n-1 -1\n2 2\"\"\") == \"3\"\n\nassert solution(\n\"\"\"2 2 2\n-1 -1 -1\n0 0 1\n-1 0 1\n1 1 1\n-1 -1 1\n2 2\"\"\") == \"2\"\n\nassert solution(\n\"\"\"2 5 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n-1 -1\n2 2\n-1 -1\n0 0\"\"\") == \"2\""
    },
    {
        "number": 3077,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n3\\n3\\n-3\\n3 -3\\n3 0\\n0 3\\n-3 3\") == \"1\"\nassert solution(\"2\\n3\\n5\\n3\\n2\\n2\\n-2\\n2\\n-2\\n-2\\n-2\\n0\") == \"6\"\nassert solution(\"2\\n3\\n5\\n3\\n2\\n2\\n-2\\n2\\n-2\\n-2\\n-2\\n0\\n2\\n2\") == \"4\"\nassert solution(\"1\\n3\\n3\\n-3\\n3 -3\\n3 0\\n0 3\\n-3 3\") == \"1\"\nassert solution(\"1\\n3\\n3\\n-3\\n3 -3\\n3 0\\n0 3\\n-3 3\\n3 -3\\n3 0\") == \"1\"\n"
    },
    {
        "number": 3077,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\") == 1\nassert solution(\"1 5 3\\n0 0 1\\n3 3\") == 1\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n3 0\") == 3\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n3 -3\") == 1\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\") == 3\n"
    },
    {
        "number": 3077,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 0 1\\n3 3\\n-3 3') == '1\\n'\nassert solution('1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3') == '3\\n'\nassert solution('1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n0 0\\n-3 3\\n3 -3') == '3\\n'\nassert solution('1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n-3 3\\n3 -3') == '3\\n'\nassert solution('1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n-3 3\\n3 -3\\n0 0\\n-3 3\\n3 -3') == '3\\n'\n"
    },
    {
        "number": 3077,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 3 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3''') == '1'\nassert solution('''1 5 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3''') == '3'\nassert solution('''1 5 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3''') == '3'\nassert solution('''1 5 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3''') == '3'\nassert solution('''1 5 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3''') == '3'\n"
    },
    {
        "number": 3077,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"1 3 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n\"\"\") == \"1\"\nassert solution(\"\"\"1 5 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n\"\"\") == \"3\"\nassert solution(\"\"\"1 7 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n\"\"\") == \"3\"\nassert solution(\"\"\"1 11 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n\"\"\") == \"3\"\nassert solution(\"\"\"1 14 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3078,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''5 10000\n1\n1\n1\n1\n1\n''') == '4\\n4\\n2\\n2\\n0\\n'\nassert solution(\n'''5 9\n1\n1\n10\n1\n9\n''') == '2\\n0\\n0\\n2\\n0\\n'\nassert solution(\n'''10 10000000\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n''') == '5\\n5\\n5\\n5\\n5\\n'\nassert solution(\n'''10 10\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n''') == '0\\n0\\n0\\n0\\n0\\n'\nassert solution(\n'''10 1000\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '1\\n1\\n1\\n1\\n1\\n'\n"
    },
    {
        "number": 3078,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output\nprint(f\"Finished testing\")\n\"\"\"\n\nexpected_output = \"\"\"\n4\n4\n2\n2\n0\n\"\"\""
    },
    {
        "number": 3078,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 10000\n1\n1\n1\n1\n1\n''') == '4\\n4\\n2\\n2\\n0\\n'\nassert solution('''5 9\n1\n1\n10\n1\n9\n''') == '2\\n0\\n0\\n2\\n0\\n'\nassert solution('''5 9\n1\n1\n10\n1\n9\n''') == '2\\n0\\n0\\n2\\n0\\n'\nassert solution('''5 9\n1\n1\n10\n1\n9\n''') == '2\\n0\\n0\\n2\\n0\\n'\nassert solution('''5 9\n1\n1\n10\n1\n9\n''') == '2\\n0\\n0\\n2\\n0\\n'\n"
    },
    {
        "number": 3078,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 10000\\n1\\n1\\n1\\n1\\n1') == '4\\n4\\n2\\n2\\n0\\n'\nassert solution('5 9\\n1\\n1\\n10\\n1\\n9') == '2\\n0\\n0\\n2\\n0\\n'\nassert solution('3 1000000000\\n2\\n1\\n2\\n1\\n2\\n1') == '0\\n0\\n0\\n0\\n0\\n'\nassert solution('5 11\\n1\\n2\\n3\\n4\\n5') == '2\\n0\\n0\\n0\\n0\\n'\nassert solution('2 2\\n1\\n2') == '0\\n0\\n'\n"
    },
    {
        "number": 3078,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3078,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3078,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 1\") == \"0\\n0\\n2\\n2\\n0\"\nassert solution(\"2 10\") == \"2\\n2\\n0\\n0\\n0\"\nassert solution(\"10 1\") == \"0\\n0\\n0\\n0\\n0\"\nassert solution(\"2 1 2\") == \"2\\n0\\n0\\n0\\n0\"\nassert solution(\"2 10 2\") == \"2\\n0\\n0\\n0\\n0\"\n"
    },
    {
        "number": 3078,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == '4'\nassert solution('2\\n1\\n1\\n1\\n1') == '4'\nassert solution('3\\n1\\n1\\n1\\n1') == '4'\nassert solution('4\\n1\\n1\\n1\\n1') == '4'\nassert solution('5\\n1\\n1\\n1\\n1') == '4'\n"
    },
    {
        "number": 3078,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 10000\\n1\\n1\\n1\\n1\\n1\\n') == '4\\n4\\n2\\n2\\n0\\n'\nassert solution('5 9\\n1\\n1\\n10\\n1\\n9\\n') == '2\\n0\\n0\\n2\\n0\\n'\nassert solution('4 1\\n1\\n1\\n1\\n1\\n') == '4\\n4\\n2\\n2\\n0\\n'\nassert solution('7 10\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n') == '0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n'\nassert solution('8 1000000\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n') == '6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n'\n\n-------"
    },
    {
        "number": 3078,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == '4'\nassert solution('3\\n1\\n1\\n1') == '2'\nassert solution('7\\n1\\n1\\n1\\n1\\n1\\n1') == '3'\nassert solution('2\\n1\\n1') == '2'\nassert solution('5\\n9\\n1\\n1\\n1\\n10') == '2'\n"
    },
    {
        "number": 3079,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin[::-1]"
    },
    {
        "number": 3079,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n2\nne\n'''\n) == 'NE'\n\nassert solution(\n'''\n4\nkava\n'''\n) == 'DA'\n\nassert solution(\n'''\n4\na\n'''\n) == 'a'\n\nassert solution(\n'''\n4\nvava\n'''\n) == 'vava'\n\nassert solution(\n'''\n4\nmak\n'''\n) =='mak'"
    },
    {
        "number": 3079,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('kava') == 'ne'\nassert solution('ne') == 'k'\nassert solution('ka') == 'ka'\nassert solution('ka') == 'ka'\nassert solution('kava') == 'k'\n"
    },
    {
        "number": 3079,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ne') == 'NE'\nassert solution('ka') == 'DA'\nassert solution('kava') == 'ak'\nassert solution('kavakava') == 'ak'\nassert solution('kava') == 'kavakava'\n"
    },
    {
        "number": 3079,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"ne\") == \"NE\"\nassert solution(\"kava\") == \"DA\"\nassert solution(\"ka\") == \"DA\"\nassert solution(\"abcd\") == \"DA\"\nassert solution(\"abc\") == \"DA\"\n"
    },
    {
        "number": 3079,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"ne\") == \"NE\"\nassert solution(\"kava\") == \"AK\"\nassert solution(\"kava\") == \"AK\"\nassert solution(\"kava\") == \"AK\"\nassert solution(\"kava\") == \"AK\"\n"
    },
    {
        "number": 3079,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"ne\") == \"NE\"\nassert solution(\"kava\") == \"DA\"\nassert solution(\"babababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababab\n\n\nassert solution(\"babababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababab\n\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 3079,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'DA'\nassert solution('kn') == 'kn'\nassert solution('knka') == 'knak'\nassert solution('knak') == 'knak'\nassert solution('knakka') == 'knakka'\n"
    },
    {
        "number": 3079,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"ne\") == \"NE\"\nassert solution(\"kava\") == \"DA\"\nassert solution(\"ca\") == \"NE\"\nassert solution(\"a\") == \"DA\"\nassert solution(\"k\") == \"NE\"\n"
    },
    {
        "number": 3079,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ne\\n'\n'n') == 'NE'\nassert solution('kava\\n'\n'ak') == 'DA'\nassert solution('kava\\n'\n'a') == 'kava'\nassert solution('kava\\n'\n'ka') == 'kava'\nassert solution('kava\\n'\n'k') == 'kava'\n"
    },
    {
        "number": 3080,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\n''') == '2\\n0\\n2\\n1'\nassert solution('''8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '0\\n0\\n3\\n2'"
    },
    {
        "number": 3080,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 4 4') == '2'\nassert solution('8 10 4') == '0'\nassert solution('8 10 3') == '1'\nassert solution('8 10 2') == '0'\nassert solution('8 10 1') == '0'\n"
    },
    {
        "number": 3080,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\") == \"0\"\nassert solution(\"1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\") == \"0\"\nassert solution(\"1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\") == \"0\"\nassert solution(\"1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\") == \"0\"\nassert solution(\"1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\") == \"0\"\n"
    },
    {
        "number": 3080,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\n''') == '2\\n0\\n2\\n1'\n\nassert solution(\n'''\n4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\n''') == '0\\n0\\n3\\n2'\n\nassert solution(\n'''\n2 2 1\n2 1\n1 1\n''') == '2'\n\nassert solution(\n'''\n2 2 1\n2 1\n1 1\n''') == '0'\n\nassert solution(\n'''\n5 4 4\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n1 1 4\n1 2 4\n1 1 3\n1 2 3\n1 3 6\n1 4 8\n1 5 7\n2 1 4\n2 2 3 2\n2 2 6 8\n2 1 3 4 5 6\n2 1 2 4 7 8\n2 1 1 3 4 5 6\n2 1 1 2 4 7 8\n2 1 1 1 4 5 6\n2 1 1 1 4 5 6\n2 1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5"
    },
    {
        "number": 3080,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2') == '0'\nassert solution('2 3') == '0'\nassert solution('1 3') == '2'\nassert solution('3 6') == '2'\nassert solution('6 8') == '1'\n"
    },
    {
        "number": 3080,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 4 4\") == \"2\"\nassert solution(\"8 10 4\") == \"0\"\nassert solution(\"8 10 4\") == \"2\"\nassert solution(\"8 10 4\") == \"0\"\nassert solution(\"8 10 4\") == \"2\"\n"
    },
    {
        "number": 3080,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('0 0 0') == '0'\nassert solution('3 2 1') == '0'\nassert solution('4 2 4') == '4'\nassert solution('8 10 4') == '3'\n"
    },
    {
        "number": 3080,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0 4 5\") == \"0\"\nassert solution(\"0 10 1\") == \"1\"\nassert solution(\"1 3 1\") == \"0\"\nassert solution(\"1 5 2\") == \"1\"\nassert solution(\"3 1 3\") == \"0\"\n"
    },
    {
        "number": 3080,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\n''') == '2\\n0\\n2\\n1\\n'\n\nassert solution('''8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '0\\n0\\n3\\n2\\n'\n\nassert solution('''10 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '0\\n0\\n3\\n2\\n'\n\nassert solution('''8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '0\\n0\\n3\\n2\\n'\n\nassert solution('''8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '0\\n0\\n3\\n2\\n'"
    },
    {
        "number": 3080,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(open('test_1.txt').read()) == '2\\n0\\n3'\nassert solution(open('test_2.txt').read()) == '2\\n0\\n3\\n2'\nassert solution(open('test_3.txt').read()) == '2\\n0\\n1\\n1\\n0\\n1\\n2'\nassert solution(open('test_4.txt').read()) == '1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1'\nassert solution(open('test_5.txt').read()) == '2\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\"
    },
    {
        "number": 3081,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 1''') == '2'\nassert solution('''2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n''') == '1'\nassert solution('''3 3\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n1 2 2\n2 1 1\n2 2 1\n2 2 2\n''') == '2'\nassert solution('''4 4\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n1 2 2\n2 1 1\n2 2 1\n2 2 2\n2 2 3\n2 3 1\n2 3 2\n2 3 3\n2 3 4\n''') == '4'\nassert solution('''7 7\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n1 2 2\n2 1 1\n2 2 1\n2 2 2\n2 2 3\n2 3 1\n2 3 2\n2 3 3\n2 3 4\n2 3 5\n2 3 6\n2 3 7\n2 3 8\n2 3 9\n2 3 10\n2 3 11\n2 3 12\n2 3 13\n2 3 14\n2 3 15\n2 3 16\n2 3 17\n2 3 18\n2 3 19\n2 3 20\n2 3 21\n2 3 22\n2 3 23\n2 3 24\n2 3 25\n2 3 26\n2 3 27\n2 3 28\n2 3 29\n2 3 30\n2 3 31\n2 3 32\n2 3 33\n2 3 34\n2 3 35\n2 3 36\n2 3 37\n2 3 38\n2 3 39\n2 3 40\n2 3 41\n2 3 42\n2 3 43\n2 3 44\n2 3 45\n2 3 46\n2 3 47\n2 3 48\n2 3 49\n2 3 50\n2 3 51\n2 3 52\n2 3 53\n2 3 54\n2 3 55\n2 3 56\n2 3 57\n2 3 58\n2 3 59\n2 3 60\n2 3 61\n2 3 62\n2 3 63\n2 3 64\n2 3 65\n2 3 66\n2 3 67\n2 3 68\n2 3 69\n2 3 70\n2 3 71\n2 3 72\n2 3 73\n2 3 74\n2 3 75\n2 3 76\n2 3 77\n2 3 78\n2 3 79\n2 3 80\n2 3 81\n2 3 82\n2 3 83\n2 3 84\n2 3 85\n2 3 86\n2 3 87\n2 3 88\n2 3 89\n2 3 90\n2 3 91\n2 3 92\n2 3 93\n2 3 94\n2 3 95\n2 3 96\n2 3 97\n2 3 98\n2 3 99\n2 3 100\n2 3 101\n2 3 102\n2 3 103\n2 3 104\n2 3 105\n2 3 106\n2 3 107\n2 3 108\n2 3 109\n2 3 110\n2 3 111\n2 3 112\n2 3 113\n2 3 114\n2 3 115\n2 3 116\n2 3 117\n2 3 118\n2 3 119\n2 3 120\n2 3 121\n2 3 122\n2 3 123\n2 3 124\n2 3 125\n2 3 126\n2 3 127\n2 3 128\n2 3 129\n2 3 130\n2 3 131\n2 3 132\n2 3 133\n2 3 134\n2 3 135\n2 3 136\n2 3 137\n2 3 138\n2 3 139\n2 3 140\n2 3 141\n2 3 142\n2 3 143\n2 3 144\n2 3 145\n2 3 146\n2 3 147\n2 3 148\n2 3 149\n2 3 150\n2 3 151\n2 3 152\n2 3 153\n2 3 154\n2 3 155\n2 3 156\n2 3 157\n2 3 158\n2 3 159\n2 3 160\n2 3 161\n2 3 162\n2 3 163\n2 3 164\n2 3 165\n2 3 166\n2 3 167\n2 3 168\n2 3 169\n2 3 170\n2 3 171\n2 3 172\n2 3 173\n2 3 174\n2 3 175\n2 3 176\n2 3 177\n2 3 178\n2 3 179\n2 3 180\n2 3 181\n2 3 182\n2 3 183\n2 3 184\n2 3 185\n2 3 186\n2 3 187\n2 3 188\n2 3 189\n2 3 190\n2 3 191\n2 3 192\n2 3 193\n2 3 194\n2 3 195\n2 3 196\n2 3 197\n2 3 198\n2 3 199\n2 3 200\n2 3 201\n2 3 202\n2 3 203\n2 3 204\n2 3 205\n2 3 206\n2 3 207\n2 3 208\n2 3 209\n2 3 210\n2 3 211\n2 3 212\n2 3 213\n2 3 214\n2 3 215\n2 3 216\n2 3 217\n2 3 218\n2 3 219\n2 3 220\n2 3 221\n2 3 222\n2 3 223\n2 3 224\n2 3 225\n2 3 226\n2 3 227\n2 3 228\n2 3 229\n2 3 230\n2 3 231\n2 3 232\n2 3 233\n2 3 234\n2 3 235\n2 3 236\n2 3 237\n2 3 238\n2 3 239\n2 3 240\n2 3 241\n2 3 242\n2 3 243\n2 3 244\n2 3 245\n2 3 246\n2 3 247\n2 3 248\n2 3 249\n2 3 250\n2 3 251\n2 3 252\n2 3 253\n2 3 254\n2 3 255\n2 3 256\n2 3 257\n2 3 258\n2 3 259\n2 3 260\n2 3 261\n2 3 262\n2 3 263\n2 3 264\n2 3 265\n2 3 266\n2 3 267\n2 3 268\n2 3 269\n2 3 270\n2 3 271\n2 3 272\n2 3 273\n2 3 274\n2 3 275\n2 3 276\n2 3 277\n2 3 278\n2 3 279\n2 3 280\n2 3 281\n2 3 282\n2 3 283\n2 3 284\n2 3 285\n2 3 286\n2 3 287\n2 3 288\n2 3 289\n2 3 290\n2 3 291\n2 3 292\n2 3 293\n2 3 294\n2 3 295\n2 3 296\n2 3 297\n2 3 298\n2 3 299\n2 3 300\n2 3 301\n2 3 302\n2 3 303\n2 3 304\n2 3 305\n2 3 306\n2 3 307\n2 3 308\n2 3 309\n2 3 310\n2 3 311\n"
    },
    {
        "number": 3081,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 1'''\n    ) == '2'\n\nassert solution(\n'''2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3'''\n    ) == '1'\n"
    },
    {
        "number": 3081,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\nprint('Test case 1 passed')\n\nassert solution(stdin) == stdin\nprint('Test case 2 passed')\n\nassert solution(stdin) == stdin\nprint('Test case 3 passed')\n"
    },
    {
        "number": 3081,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3081,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 3081,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2') == '2'\nassert solution('1 1') == '1'\nassert solution('0 1') == '1'\nassert solution('1 0') == '1'\nassert solution('1 2 1') == '1'\n"
    },
    {
        "number": 3081,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expect\n\"\"\"\n"
    },
    {
        "number": 3081,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 1''') == '2'\nassert solution('''2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n2 1 3\n2 1 3''') == '1'\nassert solution('''2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n2 1 1\n2 1 1''') == '0'\nassert solution('''2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n2 1 3\n2 1 1\n2 1 1''') == '1'\nassert solution('''2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n2 1 3\n2 1 1\n2 1 1''') == '1'\n"
    },
    {
        "number": 3081,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 1\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 0\") == \"1\"\nassert solution(\"1 2 1\") == \"2\"\nassert solution(\"2 1 1\") == \"1\"\n"
    },
    {
        "number": 3081,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"1 2 1\") == \"\"\nassert solution(\"0 1\") == \"\"\nassert solution(\"1 0\") == \"\"\n"
    },
    {
        "number": 3082,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''D 3 10 1\nC 6 1\nC 9 3\n''') == '40.500000000'\nassert solution('''D 2 10 1\nD 3 15 1\nD 2 10 1\n''') == '49.000000000'\nassert solution('''C 9 3\nD 2 10 1\nD 3 15 1\nD 2 10 1\n''') == '49.000000000'\nassert solution('''C 6 1\nD 2 10 1\nD 3 15 1\nD 2 10 1\n''') == '49.000000000'\nassert solution('''C 9 3\nD 2 10 1\nD 3 15 1\nD 2 10 1\n''') == '49.000000000'\n"
    },
    {
        "number": 3082,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == expected\n\"\"\"\n"
    },
    {
        "number": 3082,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 15\nD 4 10 1\nC 6 1''') == '40.500000000'\n\nassert solution('''3 15\nD 4 10 1\nC 6 1\nC 9 3''') == '49.000000000'\n\nassert solution('''5 5\nD 4 10 1\nD 5 7 2\nC 8 5 4\nD 8 5 3\nC 9 1 1''') == '45.125'\n\nassert solution('''6 8\nD 4 10 1\nD 5 7 2\nC 8 5 4\nD 8 5 3\nC 9 1 1\nC 8 4 3''') == '45.125'\n\nassert solution('''6 6\nD 4 10 1\nD 5 7 2\nC 8 5 4\nD 8 5 3\nC 9 1 1\nC 8 4 3''') == '45.125'"
    },
    {
        "number": 3082,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 15\nD 4 10 1\nC 6 1''') == '40.500000000'\nassert solution('''3 15\nD 4 10 1\nC 6 1\nC 9 3''') == '49.000000000'\nassert solution('''7 50\nD 4 10 1\nC 6 1\nC 9 3\nD 6 8\nD 6 7\nD 9 4\nD 7 6\nD 4 4\n''') == '80.000000000'\nassert solution('''6 12\nD 4 10 1\nC 6 1\nC 9 3\nD 6 8\nD 6 7\nD 9 4\nD 7 6\nD 4 4\n''') == '110.000000000'\nassert solution('''10 50\nD 4 10 1\nC 6 1\nC 9 3\nD 6 8\nD 6 7\nD 9 4\nD 7 6\nD 4 4\n''') == '110.000000000'\n"
    },
    {
        "number": 3082,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\") == \"Impossible\"\nassert solution(\"2 15\") == \"40.500000000\"\nassert solution(\"3 15\") == \"49.000000000\"\nassert solution(\"2 15\") == \"40.500000000\"\nassert solution(\"3 15\") == \"49.000000000\"\n"
    },
    {
        "number": 3082,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 15\nD 4 10 1\nC 6 1''') == '40.500000000'\nassert solution('''3 15\nD 4 10 1\nC 6 1\nD 4 9 1\nSample Output 2:\n49.000000000\n''') == '49.000000000'\n'''"
    },
    {
        "number": 3082,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\nD 4 10 1\nC 6 1\n\"\"\") == \"40.500000000\"\n\nassert solution(\n\"\"\"\nD 4 10 1\nC 6 1\nD 7 1\nD 4 9 2\nC 9 3\n\"\"\") == \"49.000000000\"\n"
    },
    {
        "number": 3082,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"45.00000000\"\n"
    },
    {
        "number": 3082,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 15\nD 4 10 1\nC 6 1\n''') == '40.500000000'\nassert solution('''3 15\nD 4 10 1\nC 6 1\nC 9 3\n''') == '49.000000000'\nassert solution('''4 1\nD 2 3 4\nC 1 1\nD 1 1\nC 1 1\nD 1 1\n''') == '9.000000000'\nassert solution('''5 1\nD 2 3 4 5\nC 1 1 1 1\nD 1 1 1 1\nC 1 1 1 1\nD 1 1 1 1\n''') == '48.000000000'\nassert solution('''6 1\nD 2 3 4 5 6\nC 1 1 1 1 1 1\nD 1 1 1 1 1 1\nC 1 1 1 1 1 1\nD 1 1 1 1 1 1\n''') == '67.000000000'\n"
    },
    {
        "number": 3082,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"impossible\"\nassert solution(\"1 1\") == \"impossible\"\nassert solution(\"1 1 2\") == \"impossible\"\nassert solution(\"4 19\") == \"impossible\"\nassert solution(\"2 7\") == \"impossible\"\n"
    },
    {
        "number": 3083,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n10\na 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n''') == '5 4 9 3 1 10 7 6 2'\n\nassert solution('''\n10\na 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n''') == 'fail'\n\nassert solution('''\n3\na 2 1\nb 1 2\nc 2\n''') == '1 2 3 4 5 6 7 8 9'\n\nassert solution('''\n3\na 2 1\nb 1 2\nc 2\n''') == 'fail'\n\nassert solution('''\n3\na 2 1\nb 1 2\nc 2\n''') == 'fail'"
    },
    {
        "number": 3083,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3083,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''a 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7''') == '5 4 9 3 1 10 7 6 2'\nassert solution('''a 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7''') == 'fail'\nassert solution('''a 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\nj 1 5\nj 1 4\nj 1 2\nj 1 1\nj 1 0\n''') == 'j 1 1 j 1 0 j 1 2 j 1 4 j 1 5 j 1 6 j 1 7 j 1 8 j 1 9'\nassert solution('''a 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\nj 1 5\nj 1 4\nj 1 2\nj 1 1\nj 1 0\n''') == 'fail'\nassert solution('''a 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\nj 1 5\nj 1 4\nj 1 2\nj 1 1\nj 1 0\n''') == 'fail'\n"
    },
    {
        "number": 3083,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"9\\na\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\") == \"5 4 9 3 1 10 7 6 2\"\nassert solution(\"9\\na\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\\nk\") == \"fail\"\nassert solution(\"1\\na\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\\nk\") == \"fail\"\nassert solution(\"2\\na\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\") == \"5 4 9 3 1 10 7 6 2\"\nassert solution(\"2\\na\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\\nk\") == \"fail\"\n"
    },
    {
        "number": 3083,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin.split()\n'''\n\n'''\nPROBLEM STATEMENT:\n\nGiven a list of songs, find the list of songs that can be played together in a round-robin fashion.\n\n'''\n\n'''\n-----Thoughts/Observations-----\n-I think it is just a matter of creating a hash table and then using a while loop to iterate through it\n-It's pretty straightforward to see what your range is, use a for loop and the range function\n-Each song can be played after the first one, so the current song can be stored in a dictionary with the number of songs as the key\n-I think it would be easier to think of a linear solution, but it's easy to see that each song is playable after the previous one\n-The solution is given in the code\n-I think it is just iterating through the dictionary to find a combination of songs that adds up to the number of songs\n-In order to store the songs in a dictionary, I would need to use a list of dictionaries and then remove the songs that are not playable\n-There is a function that I could use to see if a song can be played after another\n-I think I would need to use a loop to iterate through the list of dictionaries and compare the values\n-This is also pretty easy to do with a list\n'''"
    },
    {
        "number": 3083,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10\na 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7''') == '5 4 9 3 1 10 7 6 2'\nassert solution('''10\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7''') == 'fail'\nassert solution('''10\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7''') == '5 4 9 3 1 10 7 6 2'\nassert solution('''10\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7''') == '5 4 9 3 1 10 7 6 2'\nassert solution('''10\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7''') == '5 4 9 3 1 10 7 6 2'\n"
    },
    {
        "number": 3083,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''10\na 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n'''\n) == '5 4 9 3 1 10 7 6 2'\nassert solution(\n'''10\na 1 6\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n'''\n) == 'fail'\nassert solution(\n'''10\na 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n'''\n) == 'fail'\nassert solution(\n'''10\na 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n'''\n) == 'fail'\nassert solution(\n'''10\na 1 6\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n'''\n) == 'fail'\n"
    },
    {
        "number": 3083,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('a 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7') == '5 4 9 3 1 10 7 6 2'\nassert solution('a 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\ni 1 3\\nj 1 7\\nfail') == 'fail'\nassert solution('a 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\nfail') == 'fail'\nassert solution('a 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\ni 1 3\\nj 1 7\\nfail\\nfail') == 'fail'\nassert solution('a 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\ni 1 3\\nj 1 7\\nfail\\nfail\\nfail') == 'fail'\n"
    },
    {
        "number": 3083,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\") == '5 4 9 3 1 10 7 6 2'\nassert solution(\"10\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\") == 'fail'\nassert solution(\"10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\") == 'fail'\nassert solution(\"10\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\") == 'fail'\nassert solution(\"10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\") == 'fail'\n"
    },
    {
        "number": 3083,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"a 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\") == \"5 4 9 3 1 10 7 6 2\"\n\"\"\""
    },
    {
        "number": 3084,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n00:00\n01:01\n''') == '3\\n00:00\\n01:00\\n01:01'\n\nassert solution(\n'''\n09:09\n09:01\n''') == '3\\n09:09\\n09:00\\n09:01'\n\nassert solution(\n'''\n00:01\n00:02\n00:03\n00:04\n''') == '4'\n\nassert solution(\n'''\n00:09\n00:05\n00:06\n00:07\n00:08\n''') == '4'\n"
    },
    {
        "number": 3084,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('00:08') == '3\\n00:09\\n00:08'\nassert solution('00:00') == '3\\n00:00\\n00:00'\nassert solution('00:00') == '3\\n00:00\\n00:00'\nassert solution('00:00') == '3\\n00:00\\n00:00'\nassert solution('00:00') == '3\\n00:00\\n00:00'\n"
    },
    {
        "number": 3084,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"00:00\") == \"3\"\nassert solution(\"01:01\") == \"00:00\"\nassert solution(\"00:08\") == \"3\"\nassert solution(\"00:09\") == \"00:08\"\nassert solution(\"00:10\") == \"00:09\"\n"
    },
    {
        "number": 3084,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''00:00\n01:01''') == '3\\n00:00\\n01:00\\n01:01'\nassert solution('''10:00\n10:00\n10:00\n10:00\n10:00\n10:00\n10:00\n10:00\n10:00\n10:00''') == '0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\"
    },
    {
        "number": 3084,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"00:00\") == \"3\"\nassert solution(\"01:01\") == \"00:00\"\nassert solution(\"00:08\") == \"3\"\nassert solution(\"00:00\") == \"3\"\nassert solution(\"00:09\") == \"3\"\n"
    },
    {
        "number": 3084,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('00:08') == '3\\n00:08\\n00:09\\n00:00'\nassert solution('00:08') == '3\\n00:08\\n00:09\\n00:00'\nassert solution('00:08') == '3\\n00:08\\n00:09\\n00:00'\nassert solution('00:08') == '3\\n00:08\\n00:09\\n00:00'\nassert solution('00:08') == '3\\n00:08\\n00:09\\n00:00'\n"
    },
    {
        "number": 3084,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''00:00''') == '''3'''\nassert solution('''00:08''') == '''3'''\nassert solution('''00:10''') == '''2'''\nassert solution('''00:10''') == '''2'''\nassert solution('''00:03''') == '''1'''\n"
    },
    {
        "number": 3084,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n00:08\n00:00\n\"\"\"\n) == \"\"\"\n3\n00:08\n00:09\n00:00\n\"\"\"\n\nassert solution(\n\"\"\"\n00:08\n00:20\n\"\"\"\n) == \"\"\"\n2\n00:08\n00:20\n\"\"\"\n\nassert solution(\n\"\"\"\n00:03\n00:04\n00:05\n\"\"\"\n) == \"\"\"\n5\n00:03\n00:04\n00:05\n00:03\n00:04\n00:05\n\"\"\"\n\nassert solution(\n\"\"\"\n23:00\n00:00\n\"\"\"\n) == \"\"\"\n2\n23:00\n00:00\n23:00\n00:00\n\"\"\"\n\nassert solution(\n\"\"\"\n00:00\n00:10\n00:15\n00:20\n\"\"\"\n) == \"\"\"\n4\n00:00\n00:10\n00:15\n00:20\n\"\"\""
    },
    {
        "number": 3084,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"00:00\") == \"00:00\"\nassert solution(\"01:01\") == \"00:00\"\nassert solution(\"00:08\") == \"00:08\"\nassert solution(\"00:00\") == \"00:00\"\nassert solution(\"01:00\") == \"00:01\"\n"
    },
    {
        "number": 3084,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3\"\n\n-----\n\nNote:\nThe data will be valid.\nThe numbers will be two-digit positive integers between 00 and 59, inclusive.\nThe hour will be between 00 and 23, and the minute will be between 00 and 59, inclusive.\nThe time will be correct.\n\n\"\"\"\n"
    },
    {
        "number": 3085,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('()') == '4,4:4,4:4'\nassert solution('(())') == '4,8:8,8:8'\nassert solution(')()())') == '4,8:8,8:8'\nassert solution('(((((((((()))))))))))') == '4,4:4,4:4'\nassert solution('))()())') == '4,8:8,8:8'\n"
    },
    {
        "number": 3085,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"(())\"\n    ) == \"4,8:8,8:\", \"Expected: 4,8:8,8: but got: {}\".format(solution(\n        \"(())\"\n    ))\nassert solution(\n    \")\"\n    ) == \"4,4:\", \"Expected: 4,4: but got: {}\".format(solution(\n        \")\"\n    ))\nassert solution(\n    \")()(\"\n    ) == \"4,4:4,4:4,4:\", \"Expected: 4,4:4,4: but got: {}\".format(solution(\n        \")()(\"\n    ))\nassert solution(\n    \")()\"\n    ) == \"4,4:4,4:\", \"Expected: 4,4:4,4: but got: {}\".format(solution(\n        \")()\"\n    ))\nassert solution(\n    \")())((()(())((()()))(()()()()(((()))()(()(()(()()))()((()()))()((()()))))))()()(())()(()(()(()())(()()()))()(()(()()()()((()(())((()(()(()()))))()(()(()()()(()()))()(()(()(()()(()(())))))(()()()()((()()))))))()()(())()()()((()()))()((()())))((()(()())()()((()()))()((()()))()(()())))(())()()(()())(()()())(()(())(())(()(())(())(()()(())(())(()(()(()())(()()()))(()()()()((()()))()(()(()()()()((()()()))()(()(()()()(()(())))))(()(())(())()()()((()()))()((()())))(())()()()()(()())(()()())(()(())))(()()()()((()()))()((()())))(())()()()((()())))(()()()()((()()))()((()())))(()()())(()())(()())(())()()()(()())(()())(()())(()())(())()()()()((()())))(()()()()((()())))(()()()()((()())))(()()()())(()())(())()()()()(()())(())()())(()())(()())(())()()()()((()()))()((()())))(())()()()()(()())(()())(()())(()())(())()()()()((()()))()((()())))(())()()()()((()())))(()()()()((()())))(()()()())(()())(())()()()(()())(()())(()())(())()()()()((()()))()((()())))(())()()()()((()())))(()()()()((()()))()((()())))(())()()()()((()())))(()()()()((()())))(()()()())(()())(())()()()((()()))()((()())))(())()()()()((()())))(()()()()((()())))(()()()())(()())(())()()()((()()))()((()())))(())()()()()((()())))(()()()()((()())))(()()()())(()())(())()()()()((()()))()((()())))(())()()()()((()())))(()()()()((()())))(()()()())(()())(())()()()((()()))()((()())))(())()()()()((()())))(()()()())(()())(())()()()((()()))()((()())))(())()()()()((()())))(()()()()((()())))(()()()())(()())(())()()()((()()))()((()())))(())()()()()((()())))(()()()())(()())(())()()()()((()()))()((()())))(())()()()()((()())))(()()()())(()())(())()()()((()()))()((()())))(())()()()()((()())))(()()()())(()())(())()()()()((()()))()((()())))(())()()()()((()())))(()()()())(()())(())()()()()((()()))()((()())))(())()()()()((()())))(()()()())(()())(())()()()()((()()))()((()())))(())()()()()((()())))(()()()())(()())(())()()()()((()()))()((()())))(())()()()()((()())))(()()()())(()())(())()()()()((()()))()((()())))(())()()()()((()())))(()()()())(()())(())()()()()((()()))()((()())))(())()()()()((()())))(()()()())(()())(())()()()()((()()))()((()())))(())()()()()((()())))(()()()())(()())(())()()()()((()()))()((()())))(())()()()()((()())))(()()()())(()())(())()()()()((()()))()((()())))(())()()()()((()())))(()()()())(()())(())()()()()((()()))()((()())))(())()()()()((()())))(()()()())(()())(())()()()()((()()))()((()())))(())"
    },
    {
        "number": 3085,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('(()') == '4,8:8,8:', \"Matched open bracket, no matching close bracket\"\nassert solution(')') == '4,4:', \"Unmatched close bracket\"\nassert solution('()') == '4,4:', \"Empty string\"\nassert solution('(()())') == '4,4:4,4:4,4:4,4:', \"Matched open bracket, unmatched close bracket\"\nassert solution('))') == '4,8:8,8:8,8:', \"Matched open bracket, matched close bracket\"\n"
    },
    {
        "number": 3085,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"(()\") == '4,8:8,8:'\nassert solution(\"()\") == '4,4:4,4:'\nassert solution(\")(((\") == '4,8:4,8:4,4,4:4,4,4:'\nassert solution(\"(((\") == '4,4:4,4:4,4,4:4,4,4:'\nassert solution(\"()\") == '4,4:4,4:4:'\n"
    },
    {
        "number": 3085,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('((()))') == '4,8:8,8:4,4:'\nassert solution('()') == '4,0:0,1:'\nassert solution('(()()') == '4,4:4,4:4,4:'\nassert solution('()()()') == '4,4:4,4:4,4:4:'\nassert solution('((()()))') == '4,4:4,4:4,4:4:4,4:'\n"
    },
    {
        "number": 3085,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\")()\") == \"4,4:4,4:\", \"should return '(()' in the new notation\"\nassert solution(\"()\") == \"4,4:4,4:\", \"should return '(()' in the new notation\"\nassert solution(\"(()()\") == \"4,8:8,8:4,4:4,4:\", \"should return '(()()' in the new notation\"\nassert solution(\"((())\") == \"4,8:8,8:4,4:4,4:\", \"should return '(()()' in the new notation\"\nassert solution(\"(())()\") == \"4,8:8,8:4,4:4,4:4,4:\", \"should return '(()()' in the new notation\"\n"
    },
    {
        "number": 3085,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('()') == '4,4:4,4:'\nassert solution('(()') == '4,8:8,8:4,4:'\nassert solution('()()') == '4,4:4,4:4,4:4,4:'\nassert solution('()()()') == '4,4:4,4:4,4:4,4:4,4:4,4:'\n"
    },
    {
        "number": 3085,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\")((((()()))())\") == \"(4,8:4,8:8,4:4,8:8,4:8,4:8,4:8,4:4,4:8,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:"
    },
    {
        "number": 3085,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('(())') == '4,8:8,8:'\nassert solution('()') == '4,4:'\n\n\"\"\""
    },
    {
        "number": 3085,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('((()))') == '4,4:4,4:4'\nassert solution('()') == '4,4:4,4:4'\nassert solution('(()))') == '4,4:4,4:4'\nassert solution('((()))') == '4,4:4,4:4'\nassert solution('())') == '4,4:4,4:4'\n"
    },
    {
        "number": 3086,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"5\"\nassert solution(\"2 2\") == \"185\"\nassert solution(\"3 3\") == \"360\"\nassert solution(\"3 3\") == \"360\"\nassert solution(\"3 3\") == \"360\"\n"
    },
    {
        "number": 3086,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(io.read_input(__file__, 'a')) == io.read_output(__file__, 'b')\n\"\"\"\n"
    },
    {
        "number": 3086,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3086,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1\\n26 02 03 03 1') == '5'\nassert solution('1 1\\n26 02 03 03 2') == '185'\nassert solution('1 1\\n26 02 03 03 1\\n26 02 03 03 2') == '185'\nassert solution('1 1\\n26 02 03 03 2\\n26 02 03 03 1') == '-1'\nassert solution('1 1\\n26 02 03 03 1\\n26 02 03 03 2') == '-1'\n"
    },
    {
        "number": 3086,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 4') == '-1'\nassert solution('1 2') == '-1'\nassert solution('1 2 3 4') == '1'\nassert solution('1 2 3 4 5') == '2'\nassert solution('1 2 3 4 5 6') == '3'\n"
    },
    {
        "number": 3086,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1\\n26 02 03 03 1\\n') == '5'\nassert solution('1 1\\n26 02 03 03 2\\n') == '185'\nassert solution('1 1\\n26 02 03 03 4\\n') == '-1'\nassert solution('1 1\\n26 02 03 03 4\\n') == '-1'\nassert solution('1 1\\n26 02 03 03 4\\n') == '-1'\n"
    },
    {
        "number": 3086,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"185\"\nassert solution(\"0 0\") == \"-1\"\nassert solution(\"0 0 0 0 0\") == \"-1\"\nassert solution(\"0 0 0 0 0 0 0 0\") == \"-1\"\nassert solution(\"0 0 0 0 0 0 0 0 0 0 0\") == \"-1\"\n"
    },
    {
        "number": 3086,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"5\"\nassert solution(\"1 1\") == \"5\"\nassert solution(\"1 2\") == \"-1\"\nassert solution(\"1 1\") == \"5\"\nassert solution(\"1 1\") == \"5\"\n"
    },
    {
        "number": 3086,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"5\"\nassert solution(\"1 1\\n26 02 03 03 1\\n\") == \"5\"\nassert solution(\"1 1\\n26 02 03 03 2\\n\") == \"185\"\n\n\"\"\"\n"
    },
    {
        "number": 3086,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3087,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3087,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"6 2\n3 4 5 6 1 2\n\"\"\") == \"\"\"5 6 1 2 3 4 \n\"\"\"\nassert solution(\"\"\"4 2\n3 4 1 2\n\"\"\") == \"\"\"2 3 4 1\n\"\"\"\nassert solution(\"\"\"3 4 3\n1 2 3\n\"\"\") == \"\"\"Impossible\n\"\"\"\nassert solution(\"\"\"5 1\n1\n\"\"\") == \"\"\"1\n\"\"\"\nassert solution(\"\"\"6 1\n1\n\"\"\") == \"\"\"1\n\"\"\"\n"
    },
    {
        "number": 3087,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6 2\n3 4 5 6 1 2\n''') == '5 6 1 2 3 4'\nassert solution('''7 2\n6 4 2 1 5 3\n''') == '2 3 4 1 5 6'\nassert solution('''8 2\n6 4 2 1 5 3\n''') == '2 3 4 1 5 6 7'\nassert solution('''8 2\n6 4 2 1 5 3\n''') == 'Impossible'\nassert solution('''9 3\n2 4 3 1 5 6 7 9\n''') == '2 3 4 1 5 6 7 9'\n"
    },
    {
        "number": 3087,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6 2\n3 4 5 6 1 2''') == '5 6 1 2 3 4'\nassert solution('''4 2\n3 4 1 2''') == '2 3 4 1'\nassert solution('''5 2\n1 2 3 4 5''') == 'Impossible'\nassert solution('''3 2\n2 1 3''') == '3 2 1'\nassert solution('''1 2\n1 2''') == '2'\n"
    },
    {
        "number": 3087,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"Impossible\"\nassert solution(\"4 1\") == \"2 3 4 1\"\nassert solution(\"6 2\") == \"5 6 1 2 3 4\"\nassert solution(\"5 3\") == \"2 3 4 5 1\"\nassert solution(\"2 3\") == \"2 1 3\"\n"
    },
    {
        "number": 3087,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n3\") == \"Impossible\"\nassert solution(\"1\\n3\") == \"1\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n1\") == \"1\"\n"
    },
    {
        "number": 3087,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 2\\n3 4 1\\n') == '5 6 1 2 3 4'\nassert solution('7 2\\n6 1 2 3 4 5 6\\n') == '2 3 4 1 6 5 7'\nassert solution('7 2\\n6 1 2 3 4 5 6\\n') == '2 3 4 1 6 5 7'\nassert solution('2 2\\n1\\n') == 'Impossible'\nassert solution('2 2\\n1 1\\n') == 'Impossible'\n"
    },
    {
        "number": 3087,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2') == 'Impossible'\nassert solution('1 1') == 'Impossible'\nassert solution('1 2 3') == 'Impossible'\nassert solution('1 2 3 4') == 'Impossible'\nassert solution('1 2 4 3') == 'Impossible'\n"
    },
    {
        "number": 3087,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6 2\n3 4 5 6 1 2''') == '5 6 1 2 3 4'\nassert solution('''4 2\n3 4 1 2\n''') == '2 3 4 1'\nassert solution('''9 10\n1 2 3 4 5 6 7 8 9\n''') == '3 4 5 6 7 8 9 10 1'\n'''assert solution('''5 6\n1 2 3 4 5\n''') == '5 1 2 3 4'\nassert solution('''4 4\n1 2 3 4 1\n''') == '2 3 4 1'\n"
    },
    {
        "number": 3087,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6 2''') == '''5 6 1 2 3 4 \n'''\nassert solution('''4 2''') == '''2 3 4 1\n'''\nassert solution('''2 3''') == '''2 1 3\n'''\nassert solution('''1 2''') == '''1\n'''\nassert solution('''1 1''') == '''\n'''\n"
    },
    {
        "number": 3088,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1374 2') == '7413'\nassert solution('210 1') == '201'\nassert solution('987654321 0123456789') == '987654321 98765432'\nassert solution('91234 5678 9123456789') == '91234 5678 91234 5678'\nassert solution('9876 54321 0123456789') == '9876 54321 98765432'\n"
    },
    {
        "number": 3088,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1234 5678 9012 3456 7891') == '1234567891'\nassert solution('987654321 12345678 901234567') == '987654321 98765432'\nassert solution('99009900 9999 9999 9999 9999 9999 9999') == '988888888899999'\nassert solution('910225254 9283925899 9278925898') == '922525499'\nassert solution('166693246 8711919123') == '166693921'\n"
    },
    {
        "number": 3088,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3088,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '201'\n"
    },
    {
        "number": 3088,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 0') == '10'\nassert solution('1000000 1') == '1000000'\nassert solution('1000 1000') == '1001'\nassert solution('133 212') == '133 22'\nassert solution('45 6') == '5645'\n"
    },
    {
        "number": 3088,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1374 2') == '7413'\nassert solution('210 1') == '201'\nassert solution('1521 964') == '159984'\nassert solution('1347 579') == '159944'\nassert solution('2345 6789') == '32456789'\n"
    },
    {
        "number": 3088,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1374 2') == '7413'\nassert solution('210 1') == '201'\nassert solution('123456789 1') == '1234567890'\nassert solution('123456789 12') == '12345678921'\nassert solution('123456789 1234') == '123456789123'\n"
    },
    {
        "number": 3088,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1374 2\\n\") == \"7413\"\nassert solution(\"210 1\\n\") == \"201\"\n"
    },
    {
        "number": 3088,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin.strip()\n"
    },
    {
        "number": 3088,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1374 2\\n') == '7413'\nassert solution('210 1\\n') == '201'\nassert solution('1089 6\\n') == '0689'\nassert solution('3652 42\\n') == '3266'\nassert solution('3422 2\\n') == '3422'\n"
    },
    {
        "number": 3089,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''4\n0 0\n0 1\n1 1\n1 0'''\n) == '0.666666666666667'\nassert solution(\n'''3\n0 0\n1 1\n2 0'''\n) == '0.733333333333333'\nassert solution(\n'''5\n0 0\n0 1\n1 1\n1 0\n2 0'''\n) == '0.8518518518518517'\nassert solution(\n'''6\n0 0\n0 1\n1 1\n1 0\n2 0\n3 0'''\n) == '0.9259259259259259'\n\nassert solution(\n'''10\n0 0\n0 1\n1 1\n1 0\n2 0\n3 0\n4 0\n5 0\n6 0\n7 0'''\n) == '0.974358974358974'\n"
    },
    {
        "number": 3089,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 0\\n0 1\\n1 1\\n1 0\\n') == '0.666666666666667'\nassert solution('2\\n0 0\\n1 1\\n2 0\\n') == '0.733333333333333'\nassert solution('2\\n0 0\\n1 1\\n2 1\\n') == '0.666666666666667'\nassert solution('4\\n0 0\\n0 1\\n1 1\\n2 0\\n') == '0.733333333333333'\nassert solution('4\\n0 0\\n1 1\\n2 1\\n3 1\\n') == '0.666666666666667'\n"
    },
    {
        "number": 3089,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0 0\\n0 1\\n1 1\") == \"0.666666666666667\"\n\"\"\"\nimport sys"
    },
    {
        "number": 3089,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0.666666666666667\"\nprint(\"solution:\", solution(stdin))\n\nassert solution(stdin) == \"0.733333333333333\"\nprint(\"solution:\", solution(stdin))\n"
    },
    {
        "number": 3089,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n0 0\n0 1\n1 1\n1 0''') == '0.666666666666667'\nassert solution('''3\n0 0\n1 1\n2 0''') == '0.733333333333333'\nassert solution('''6\n0 0\n0 1\n1 1\n1 0\n0 2\n2 1''') == '1.0'\n\nassert solution('''10000\n-10**9\n''') == '1.0'\n\nassert solution('''1000\n0 0\n1 1\n2 1\n4 1\n1000 1\n1000 -1\n1000 0\n1000 -2\n1000 0\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000"
    },
    {
        "number": 3089,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0.666666666666667\"\n"
    },
    {
        "number": 3089,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0 0\\n0 1\\n1 1\\n1 0\") == \"0.666666666666667\"\nassert solution(\"4\\n0 0\\n0 1\\n1 1\\n1 0\") == \"0.666666666666667\"\nassert solution(\"4\\n0 0\\n0 1\\n1 1\\n1 0\") == \"0.733333333333333\"\n\n-----Template----\n<https://www.codewars.com/kata/road-taxi-customer-problem-solution>\n\"\"\""
    },
    {
        "number": 3089,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0 0\\n0 1\\n1 1\\n1 0\") == \"0.666666666666667\"\nassert solution(\"3\\n0 0\\n1 1\\n2 0\") == \"0.733333333333333\"\nassert solution(\"3\\n0 0\\n1 1\\n2 0\\n0 1\") == \"0.666666666666667\"\nassert solution(\"3\\n0 0\\n1 1\\n2 0\\n1 0\") == \"0.666666666666667\"\nassert solution(\"3\\n0 0\\n1 1\\n2 0\\n0 1\\n1 1\") == \"0.8\"\n"
    },
    {
        "number": 3089,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n0 0\n0 1\n1 1\n1 0''') == '0.666666666666667'\nassert solution('''3\n0 0\n1 1\n2 0''') == '0.733333333333333'\nassert solution('''8\n-80000001 1\n-1 -80000001\n-1 80000001\n80000001 -1\n-80000001 1\n80000001 -1\n1 -80000001\n1 80000001''') == '10648433821249.75'\nassert solution('''10000\n1 1\n99999 99999\n99998 1\n1 1\n99998 99999\n99999 1\n1 1\n99999 99999\n1 1\n99998 1\n1 1\n99999 1\n99999 1\n1 1''') == '45978850'\nassert solution('''6\n1 0\n-1 0\n-1 1\n0 1\n1 1\n1 0\n-1 1\n1 1\n-1 -1\n-1 -1\n-1 1\n1 1\n1 -1\n1 -1\n-1 1\n-1 1\n1 1\n1 0\n0 0\n-1 0\n0 -1\n1 -1\n-1 1\n0 -1\n0 -1\n-1 -1\n-1 -1\n0 -1\n0 -1\n1 1\n1 1\n1 -1\n-1 1\n-1 -1\n1 -1\n1 -1\n1 1\n-1 1\n1 -1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 -1\n1 1\n1 0\n0 0\n-1 0\n0 -1\n1 -1\n-1 1\n0 -1\n0 -1\n-1 -1\n-1 -1\n0 -1\n0 -1\n1 1\n1 1\n1 -1\n-1 1\n-1 -1\n1 -1\n1 -1\n1 1\n-1 1\n1 -1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1"
    },
    {
        "number": 3089,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 0\\n0 1\\n1 1\\n1 0') == '0.666666666666667'\nassert solution('1\\n0 1\\n1 1') == '0.733333333333333'\nassert solution('1\\n0 0\\n1 1') == '0.733333333333333'\nassert solution('1\\n0 0\\n0 0') == '0.5'\nassert solution('1\\n0 0\\n1 1') == '0.733333333333333'\n"
    },
    {
        "number": 3090,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == str(9)\n'''\n"
    },
    {
        "number": 3090,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"2 3 4\n10 1 3\n0 1 20\"\"\") == \"9\"\nassert solution(\n    \"\"\"2 3 100\n10 1 10\n10 1 10\"\"\") == \"21\"\nassert solution(\n    \"\"\"2 3 4\n10 1 3\n0 1 3\n10 1 10\n10 1 10\"\"\") == \"5\"\n\nassert solution(\n    \"\"\"2 1 4\n10 1 3\n0 1 3\n10 1 10\n10 1 10\"\"\") == \"5\"\n\nassert solution(\n    \"\"\"2 1 2\n10 1 3\n0 1 3\n10 1 10\n10 1 10\"\"\") == \"5\""
    },
    {
        "number": 3090,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0 1 2\") == \"1\"\nassert solution(\"1 1 2\") == \"2\"\nassert solution(\"1 2 1\") == \"2\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 1 1 1\") == \"1\"\n"
    },
    {
        "number": 3090,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3090,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0\\n2\\n0\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n\") == \"1\"\nassert solution(\"2\\n2\\n0\\n\") == \"1\"\nassert solution(\"2\\n2\\n1\\n\") == \"2\"\nassert solution(\"2\\n2\\n0\\n1\\n1\\n\") == \"2\"\n"
    },
    {
        "number": 3090,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3090,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1 1') == '0'\nassert solution('2 3 4') == '9'\nassert solution('10 1 3') == '9'\nassert solution('0 1 20') == '9'\nassert solution('10 1 10') == '21'\n"
    },
    {
        "number": 3090,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3 4\\n10 1 3\\n0 1 20') == '9'\nassert solution('2 3 100\\n10 1 10\\n10 1 10') == '21'\nassert solution('2 3 4\\n10 1 3\\n0 1 10') == '21'\nassert solution('2 3 4\\n10 1 3\\n0 1 10\\n0 1 10\\n0 1 10') == '21'\nassert solution('2 3 4\\n10 1 3\\n0 1 10\\n0 1 10\\n0 1 10\\n0 1 10') == '21'\n"
    },
    {
        "number": 3090,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 3 4\n10 1 3\n0 1 20''') == '9'\nassert solution('''2 3 4\n10 1 10\n10 1 10''') == '21'\nassert solution('''1 1 2\n3 2\n3''') == '3'\nassert solution('''10 1 2\n10 2\n10 3\n10 4\n10 5\n10 6\n10 7\n10 8\n10 9\n10 10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20''') == '59'\nassert solution('''100 1 2\n100 2\n100 3\n100 4\n100 5\n100 6\n100 7\n100 8\n100 9\n100 10\n99 1\n99 2\n99 3\n99 4\n99 5\n99 6\n99 7\n99 8\n99 9\n99 10\n98 1\n98 2\n98 3\n98 4\n98 5\n98 6\n98 7\n98 8\n98 9\n98 10\n97 1\n97 2\n97 3\n97 4\n97 5\n97 6\n97 7\n97 8\n97 9\n97 10\n96 1\n96 2\n96 3\n96 4\n96 5\n96 6\n96 7\n96 8\n96 9\n96 10\n95 1\n95 2\n95 3\n95 4\n95 5\n95 6\n95 7\n95 8\n95 9\n95 10\n94 1\n94 2\n94 3\n94 4\n94 5\n94 6\n94 7\n94 8\n94 9\n94 10\n93 1\n93 2\n93 3\n93 4\n93 5\n93 6\n93 7\n93 8\n93 9\n93 10\n92 1\n92 2\n92 3\n92 4\n92 5\n92 6\n92 7\n92 8\n92 9\n92 10\n91 1\n91 2\n91 3\n91 4\n91 5\n91 6\n91 7\n91 8\n91 9\n91 10\n90 1\n90 2\n90 3\n90 4\n90 5\n90 6\n90 7\n90 8\n90 9\n90 10\n89 1\n89 2\n89 3\n89 4\n89 5\n89 6\n89 7\n89 8\n89 9\n89 10\n88 1\n88 2\n88 3\n88 4\n88 5\n88 6\n88 7\n88 8\n88 9\n88 10\n87 1\n87 2\n87 3\n87 4\n87 5\n87 6\n87 7\n87 8\n87 9\n87 10\n86 1\n86 2\n86 3\n86 4\n86 5\n86 6\n86 7\n86 8\n86 9\n86 10\n85 1\n85 2\n85 3\n85 4\n85 5\n85 6\n85 7\n85 8\n85 9\n85 10\n84 1\n84 2\n84 3\n84 4\n84 5\n84 6\n84 7\n84 8\n84 9\n84 10\n83 1\n83 2\n83 3\n83 4\n83 5\n83 6\n83 7\n83 8\n83 9\n83 10\n82 1\n82 2\n82 3\n82 4\n82 5\n82 6\n82 7\n82 8\n82 9\n82 10\n81 1\n81 2\n81 3\n81 4\n81 5\n81 6\n81 7\n81 8\n81 9\n81 10\n80 1\n80 2\n80 3\n80 4\n80 5\n80 6\n80 7\n80 8\n80 9\n80 10\n79 1\n79 2\n79 3\n79 4\n79 5\n79 6\n79 7\n79 8\n79 9\n79 10\n78 1\n78 2\n78 3\n78 4\n78 5\n78 6\n78 7\n78 8\n78 9\n78 10\n77 1\n77 2\n77 3\n77 4\n77 5\n77 6\n77 7\n77 8\n77 9\n77 10\n76 1\n76 2\n76 3\n76 4\n76 5\n76 6\n76 7\n76 8\n76 9\n76 10\n75 1\n75 2\n75 3\n75 4\n75 5\n75 6\n75 7\n75 8\n75 9\n75 10\n74 1\n74 2\n74 3\n74 4\n74 5\n74 6\n74 7\n74 8\n74 9\n74 10\n73 1\n73 2\n73 3\n73 4\n73 5\n73 6\n73 7\n73 8\n73 9\n73 10\n72 1\n72 2\n72 3\n72 4\n72 5\n72 6\n72 7\n72 8\n72 9\n72 10\n71 1\n71 2\n71 3\n71 4\n71 5\n71 6\n71 7\n71 8\n71 9\n71 10\n70 1\n70 2\n70 3\n70 4\n70 5\n70 6\n70 7\n70 8\n70 9\n70 10\n69 1\n69 2\n69 3\n69 4\n69 5\n69 6\n69 7\n69 8\n69 9\n69 10\n68 1\n68 2\n68 3\n68 4\n68 5\n68 6\n68 7\n68 8\n68 9\n68 10\n67 1\n67 2\n67 3\n67 4\n67 5\n67 6\n67 7\n67 8\n67 9\n67 10\n66 1\n66 2\n66 3\n66 4\n66 5\n66 6\n66 7\n66 8\n66 9\n66 10\n65 1\n65 2\n65 3\n65 4\n65 5\n65 6\n65 7\n65 8\n65 9\n65 10\n64 1\n64 2\n64 3\n64 4\n64 5\n64 6\n64 7\n64 8\n64 9\n64 10\n63 1\n63 2\n63 3\n63 4\n63 5\n63 6\n63 7\n63 8\n63 9\n63 10\n62 1\n62 2\n62 3\n62 4\n62 5\n62 6\n62 7\n62 8\n62 9\n62 10\n61 1\n61 2\n61 3\n61 4\n61 5\n61 6\n61 7\n61 8\n61 9\n61 10\n60 1\n60 2\n60 3\n60 4\n60 5\n60 6\n60 7\n60 8\n60 9\n60 10\n59 1\n59 2\n59 3\n59 4\n59 5\n59 6\n59 7\n59 8\n59 9\n59 10\n58 1\n58 2\n58 3\n58 4\n58 5\n58 6\n58 7\n58 8\n58 9\n58 10\n57 1\n57 2\n57 3\n57 4\n57 5\n57 6\n57 7\n57 8\n57 9\n57 10\n56 1\n56 2\n56 3\n56 4\n56 5\n56 6\n56 7\n56 8\n56 9\n56 10\n55 1\n55 2\n55 3\n55 4\n55 5\n55 6\n55 7\n55 8\n55 9\n55"
    },
    {
        "number": 3090,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '9'"
    },
    {
        "number": 3091,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3091,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1 1 2') == '2'\nassert solution('8 2 7 -') == '2'\nassert solution('9 2 7 -') == '4'\nassert solution('1 1 1 2') == '2'\nassert solution('8 2 7 -') == '2'\n"
    },
    {
        "number": 3091,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 2 7 -\n1 1 1 2\n''') == '2'\nassert solution('''4 2 7 -\n1 1 1 2\n''') == '4'\nassert solution('''6 2 5 /\n3 1 1 1 1 1\n3 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n''') == '3'\nassert solution('''6 2 4 /\n3 1 1 1 1 1\n3 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n''') == '2'\nassert solution('''9 2 7 -\n1 1 1 2\n1 1 1 2\n1 1 1 2\n1 1 1 2\n1 1 1 2\n1 1 1 2\n1 1 1 2\n1 1 1 2\n''') == '4'\n"
    },
    {
        "number": 3091,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"8 2 7 -\") == \"2\"\nassert solution(\"9 2 7 -\") == \"4\"\nassert solution(\"9 9 9 9 -\") == \"24\"\nassert solution(\"9 9 9 9 9 -\") == \"24\"\nassert solution(\"1 1 1 2 -\") == \"2\"\n"
    },
    {
        "number": 3091,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 2 7 -') == '2'\nassert solution('9 2 7 -') == '4'\nassert solution('7 2 7 -') == '1'\nassert solution('9 9 7 -') == '2'\nassert solution('6 4 7 -') == '0'\n"
    },
    {
        "number": 3091,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''8 2 7 -\n1 1 1 2\n''') == '2'\nassert solution('''9 2 7 -\n1 1 1 2\n''') == '4'\nassert solution('''9 3 7 -\n1 1 1 2\n1 2 1 3\n''') == '1'\nassert solution('''9 2 10 *\n1 1 1 2\n1 2 1 3\n''') == '0'\nassert solution('''9 2 7 -\n1 1 1 2\n1 2 1 3\n''') == '4'\n"
    },
    {
        "number": 3091,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8 2 7 -\\n1 1 1 2\\n') == '2'\nassert solution('9 2 7 -\\n1 1 1 2\\n') == '4'\n\n\n---19/8/21--22:00\n---[---[---[---[\n"
    },
    {
        "number": 3091,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n8 2 7 -\n1 1 1 2\n''') == '2'\nassert solution(\n'''\n9 2 7 -\n1 1 1 2\n''') == '4'\nassert solution(\n'''\n8 2 8 *\n1 1 1 2\n''') == '6'\nassert solution(\n'''\n8 2 8 /\n1 1 1 2\n''') == '3'\nassert solution(\n'''\n8 3 8 +\n1 1 1 2\n''') == '2'\n"
    },
    {
        "number": 3091,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n8 2 7 -\n1 1 1 2\n''') == '2'\nassert solution(\n'''\n9 2 7 -\n1 1 1 2\n''') == '4'\n'''\n"
    },
    {
        "number": 3091,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''4 2 7 -\n1 1 1 2\n''') == \"2\"\n\nassert solution(\n'''9 2 7 -\n1 1 1 2\n''') == \"4\"\n\nassert solution(\n'''5 2 7 -\n1 1 1 2\n''') == \"1\"\n\nassert solution(\n'''10 2 7 -\n1 1 1 2\n''') == \"0\"\n\nassert solution(\n'''9 2 7 -\n1 1 1 2\n''') == \"0\""
    },
    {
        "number": 3092,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3092,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\nprint(solution(stdin))\n"
    },
    {
        "number": 3092,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 3\n1 2 5\n2 3 5\n3 4 5\n1 4 8''') == '3\\n4\\n3\\n2\\n1','should work'\nassert solution('''2 1\n1 2 1\n2 3 1''') == '2\\n1\\n1','should work'\n'''\nfrom sys import stdin\nimport math"
    },
    {
        "number": 3092,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n4 3\n1 2 5\n2 3 5\n3 4 5\n1 4 8\n'''\n    ) == '''\n3\n4\n3\n2\n'''\n\nassert solution(\n'''\n5 7\n1 2 3 4 5\n2 3 4 5 6\n3 4 5 6 7\n4 5 6 7 8\n5 6 7 8 9\n6 7 8 9 10\n7 8 9 10 11\n8 9 10 11 12\n9 10 11 12 13\n'''\n    ) == '''\n3\n4\n3\n2\n'''\n"
    },
    {
        "number": 3092,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''5 3\n1 2 5\n2 3 5\n3 4 5\n1 4 8''') == '3\\n4\\n3\\n2\\n1'\nassert solution(\n'''4 4\n1 2 5\n2 3 5\n3 4 5\n1 4 8''') == '2\\n3\\n2\\n1'\nassert solution(\n'''7 7\n1 2 4\n2 3 5\n3 4 6\n4 5 7\n5 6 8\n6 7 9\n7 8 10\n8 9 11\n8 10 12\n8 11 13\n8 12 14\n8 13 15\n9 10 15\n10 11 14\n11 12 13\n11 13 14\n11 14 15\n11 15 16\n12 13 16\n13 14 15\n14 15 16\n14 15 16\n14 16 17\n15 16 17\n16 17 18\n17 18 19\n17 18 19\n17 19 20\n18 19 20\n19 20 21\n19 20 21\n19 21 22\n20 21 22\n21 22 23\n21 22 23\n21 23 24\n22 23 24\n23 24 25\n22 23 25\n23 24 25\n23 25 26\n24 25 26\n25 26 27\n25 26 27\n25 27 28\n26 27 28\n27 28 29\n27 28 29\n27 29 30\n28 29 30\n29 30 31\n28 29 31\n29 30 31\n29 31 32\n30 31 32\n31 32 33\n31 32 33\n31 33 34\n32 33 34\n33 34 35\n32 33 35\n33 34 35\n33 35 36\n34 35 36\n35 36 37\n34 35 37\n35 36 37\n35 37 38\n36 37 38\n37 38 39\n36 37 39\n37 38 39\n37 39 40\n37 38 40\n37 39 40\n37 40 41\n36 37 41\n37 38 41\n37 39 41\n37 40 41\n37 41 42\n36 37 42\n37 38 42\n37 39 42\n37 40 42\n37 41 42\n37 42 43\n36 37 43\n37 38 43\n37 39 43\n37 40 43\n37 41 43\n37 42 43\n37 43 44\n36 37 44\n37 38 44\n37 39 44\n37 40 44\n37 41 44\n37 42 44\n37 43 44\n37 44 45\n36 37 45\n37 38 45\n37 39 45\n37 40 45\n37 41 45\n37 42 45\n37 43 45\n37 44 45\n37 45 46\n36 37 46\n37 38 46\n37 39 46\n37 40 46\n37 41 46\n37 42 46\n37 43 46\n37 44 46\n37 45 46\n37 46 47\n36 37 47\n37 38 47\n37 39 47\n37 40 47\n37 41 47\n37 42 47\n37 43 47\n37 44 47\n37 45 47\n37 46 47\n37 47 48\n36 37 48\n37 38 48\n37 39 48\n37 40 48\n37 41 48\n37 42 48\n37 43 48\n37 44 48\n37 45 48\n37 46 48\n37 47 48\n37 48 49\n36 37 49\n37 38 49\n37 39 49\n37 40 49\n37 41 49\n37 42 49\n37 43 49\n37 44 49\n37 45 49\n37 46 49\n37 47 49\n37 48 49\n37 49 50\n36 37 50\n37 38 50\n37 39 50\n37 40 50\n37 41 50\n37 42 50\n37 43 50\n37 44 50\n37 45 50\n37 46 50\n37 47 50\n37 48 50\n37 49 50\n37 50 51\n36 37 51\n37 38 51\n37 39 51\n37 40 51\n37 41 51\n37 42 51\n37 43 51\n37 44 51\n37 45 51\n37 46 51\n37 47 51\n37 48 51\n37 49 51\n37 50 51\n37 51 52\n36 37 52\n37 38 52\n37 39 52\n37 40 52\n37 41 52\n37 42 52\n37 43 52\n37 44 52\n37 45 52\n37 46 52\n37 47 52\n37 48 52\n37 49 52\n37 50 52\n37 51 52\n37 52 53\n36 37 53\n37 38 53\n37 39 53\n37 40 53\n37 41 53\n37 42 53\n37 43 53\n37 44 53\n37 45 53\n37 46 53\n37 47 53\n37 48 53\n37 49 53\n37 50 53\n37 51 53\n37 52 53\n37 53 54\n36 37 54\n37 38 54\n37 39 54\n37 40 54\n37 41 54\n37 42 54\n37 43 54\n37 44 54\n37 45 54\n37 46 54\n37 47 54\n37 48 54\n37 49 54\n37 50 54\n37 51 54\n37 52 54\n37 53 54\n37 54 55\n36 37 55\n37 38 55\n37 39 55\n37 40 55\n37 41 55\n37 42 55\n37 43 55\n37 44 55\n37 45 55\n37 46 55\n37 47 55\n37 48 55\n37 49 55\n37 50 55\n37 51 55\n37 52 55\n37 53 55\n37 54 55\n37 55 56\n36 37 56\n37 38 56\n37 39 56\n37 40 56\n37 41 56\n37 42 56\n37 43 56\n37 44 56\n37 45 56\n37 46 56\n37 47 56\n37 48 56\n37 49 56\n37 50 56\n37 51 56\n37 52 56\n37 53 56\n37 54 56\n37 55 56\n37 56 57\n36 37 57\n37 38 57\n37 39 57\n37 40 57\n37 41 57\n37 42 57\n37 43 57\n37 44 57\n37 45 57\n37 46 57\n37 47 57\n37 48 57\n37 49 57\n37 50 57\n37 51 57\n37 52 57\n37 53 57\n37 54 57\n37 55 57\n37 56 57\n37 57 58\n36 37 58\n37 38 58\n37 39 58\n37 40 58\n37 41 58\n37 42 58\n37 43 58\n37 44 58\n37 45 58\n37 46 58\n37 47 58\n37 48 58\n37 49 58\n37 50 58\n37 51 58\n37 52 58\n37 53 58\n37 54 58\n37 55 58\n37 56 58\n37 57 58\n37 58 59\n36 37 59\n37 38 59\n37 39 59\n37 40 59\n37 41 59\n37 42 59\n37 43 59\n37 44 59\n37 45 59\n37 46 59\n37 47 59\n37 48 59\n37 49 59\n37 50 59\n37 51 59\n37 52 59\n37 53 59\n37 54 59\n37 55 59\n37 56 59\n37 57 59\n37 58 59\n37 59 60\n36 37 60\n37 38 60\n37 39 60\n37 40 60\n37 41 60\n37 42 60\n37 43 60\n37 44 60\n37 45 60\n37 46 60\n37 47 60\n37 48 60\n37 49 60\n37 50 60\n37 51 60\n37 52 60\n37 53 60\n37 54 60\n37 55 60\n37 56 60\n37 57 60\n37 58 60\n37 59 60\n37 60 61\n36 37"
    },
    {
        "number": 3092,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3092,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n4 4\n1 2 5\n2 3 5\n3 4 5\n1 4 8\n\"\"\") == \"\"\"3\n4\n3\n2\n1\n\"\"\"\n"
    },
    {
        "number": 3092,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3092,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n4 1 5\") == \"3\"\nassert solution(\"1\\n4 1 5\\n2 3 5\") == \"3\"\nassert solution(\"1\\n4 1 5\\n2 3 5\\n3 4 5\") == \"3\"\nassert solution(\"1\\n4 1 5\\n2 3 5\\n3 4 5\\n1 4 8\") == \"2\"\nassert solution(\"2\\n4 1 5\\n2 3 5\\n3 4 5\\n1 4 8\") == \"3\"\n"
    },
    {
        "number": 3092,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 3\n1 2 5\n2 3 5\n3 4 5\n1 4 8''') == '3\\n4\\n3\\n1'\nassert solution('''4 4\n1 2 5\n2 3 5\n3 4 5\n1 4 8''') == '2\\n3\\n2\\n1'\nassert solution('''5 5\n1 2 5\n2 3 5\n3 4 5\n1 4 8\n1 5 7''') == '0\\n1\\n2\\n3'\nassert solution('''4 4\n1 2 5\n2 3 5\n3 4 5\n1 4 8\n1 5 8''') == '2\\n3\\n2\\n1'\nassert solution('''4 4\n1 2 5\n2 3 5\n3 4 5\n1 4 8\n1 5 7\n1 6 5''') == '2\\n3\\n2\\n1'\n"
    },
    {
        "number": 3093,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3093,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 3\\n2 1') == '6'\nassert solution('1 10\\n2 3 4') == '24'\nassert solution('3 4\\n2 3 1') == '24'\n\"\"\""
    },
    {
        "number": 3093,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"6\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"3 4\") == \"24\"\nassert solution(\"1 2\") == \"2\"\n\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 3093,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('2 1') == '1'\n"
    },
    {
        "number": 3093,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''2 3\n2 1''') == '6'\nassert solution(\n'''3 4\n2 3 1''') == '24'\n"
    },
    {
        "number": 3093,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3093,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3093,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin.split(\"\\n\")[0]"
    },
    {
        "number": 3093,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"24\"\n"
    },
    {
        "number": 3093,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 4\n2 3 1''') == '6'\nassert solution('''2 1\n2 1''') == '6'\nassert solution('''2 3\n2 1''') == '6'\nassert solution('''5 4\n2 3 1 4 3''') == '24'\nassert solution('''6 5\n2 3 1 4 3 5 6''') == '184'\n'''"
    },
    {
        "number": 3094,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3094,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 2') == 1\nassert solution('1 2') == 2\nassert solution('2 1') == 2\nassert solution('1 2 3') == 3\nassert solution('1 2 3 4') == 6\n"
    },
    {
        "number": 3094,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == '2'\nassert solution('2\\n1 2') == '1'\nassert solution('5\\n3 4 5 1 2') == '1'"
    },
    {
        "number": 3094,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == str(2)\nassert solution(stdin) == str(1)\n"
    },
    {
        "number": 3094,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\"\n\"\"\"\n"
    },
    {
        "number": 3094,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n') == '2'\nassert solution('2\\n1\\n') == '2'\nassert solution('1\\n3\\n') == '0'\nassert solution('5\\n3 4 5 1 2\\n') == '1'\nassert solution('5\\n3 4 5 1 2\\n') == '1'\n"
    },
    {
        "number": 3094,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\n1 2''') == '2'\nassert solution('''3\n3 4 5 1 2''') == '1'\nassert solution('''5\n3 4 5 1 2''') == '1'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '2'\nassert solution('''11\n1 2 3 4 5 6 7 8 9 10 11''') == '2'\n"
    },
    {
        "number": 3094,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n') == '2'\nassert solution('2\\n1 2') == '2'\nassert solution('2\\n2 1') == '1'\nassert solution('2\\n3 4 5 1 2') == '1'\nassert solution('2\\n3 4 5 1 2') == '1'\n"
    },
    {
        "number": 3094,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\\\n2\n1 2\n''') == '2'\nassert solution('''\\\n5\n3 4 5 1 2\n''') == '1'\nassert solution('''\\\n1\n1\n''') == '2'\nassert solution('''\\\n10\n8 9 10 7 6 5 4 3 2 1\n''') == '1'\nassert solution('''\\\n100\n95 96 97 98 99 93 93 94 93 95 96 97 98 99 93 93 94 93 95 96 97 98 99 93 94 93 95 96 97 98 99 93 93 94 93 95 96 97 98 99 93 93 94 93 95 96 97 98 99 93 93 94 93 95 96 97 98 99 93 93 94 93 95 96 97 98 99 93 93 94 93 95 96 97 98 99 93 93 94 93 95 96 97 98 99 93 93 94 93 95 96 97 98 99 93 93 94 93 95 96 97 98 99 93 93 94 93 95 96 97 98 99 93 93 94 93 95 96 97 98 99 93 93 94 93 95 96 97 98 99 93 93 94 93 95 96 97 98 99 93 93 94 93 95 96 97 98 99 93 93 94 93 95 96 97 98 99 93 93 94 93 95 96 97 98 99 93 93 94 93 95 96 97 98 99 93 93 94 93 95 96 97 98 99 93 93 94 93 95 96 97 98 99 93 93 94 93 95 96 97 98 99\n''') == '1'\n"
    },
    {
        "number": 3094,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '1'\nassert solution('1\\n3') == '2'\nassert solution('1\\n4') == '4'\nassert solution('1\\n5') == '6'\n"
    },
    {
        "number": 3095,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3 3\n1 4 10\n5 2 6\n11 1 3\"\"\") == \"9\"\nassert solution(\"\"\"3 3\n1 3 1\n2 1 2\n1 1 1\"\"\") == \"4\"\n"
    },
    {
        "number": 3095,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1 4 10\\n5 2 6\\n11 1 3\\n\") == \"9\"\nassert solution(\"4 2\\n-1 0 0 1\\n-1 -1 1 1\") == \"4\"\nassert solution(\"4 2\\n-1 0 0 1\\n1 1 0 0\") == \"0\"\nassert solution(\"3 3\\n1 3 1\\n2 1 2\\n1 1 1\") == \"0\"\nassert solution(\"3 3\\n1 3 1\\n2 1 2\\n1 1 1\\n1 1 1\\n1 1 1\") == \"0\"\n"
    },
    {
        "number": 3095,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '9'\n"
    },
    {
        "number": 3095,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 3\n1 4 10\n5 2 6\n11 1 3''') == '9'\nassert solution('''3 3\n1 3 1\n2 1 2\n1 1 1''') == '4'\nassert solution('''3 3\n1 3 1\n2 1 2\n1 1 1''') == '4'\nassert solution('''3 3\n4 4 4\n3 1 2\n1 2 3\n3 4 5\n2 2 1\n2 1 2''') == '6'\nassert solution('''3 4\n1 3 4 1\n2 1 3 2\n1 1 2 1\n3 4 3 4\n1 4 2 3\n2 3 1 4''') == '4'\n"
    },
    {
        "number": 3095,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n3\\n1 3 1') == '9'\nassert solution('2\\n3\\n2 3 1') == '4'\nassert solution('2\\n3\\n1 3 2') == '3'\nassert solution('2\\n3\\n1 3 1') == '4'\nassert solution('2\\n3\\n1 3 1') == '4'\n"
    },
    {
        "number": 3095,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == '3'\nassert solution('1 3 1') == '4'\nassert solution('1 3 4 2 1 1 2') == '4'\nassert solution('2 2 1') == '0'\nassert solution('2 1 1') == '0'\n"
    },
    {
        "number": 3095,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3095,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 3\n1 4 10\n5 2 6\n11 1 3''') == '9'\nassert solution('''3 3\n1 3 1\n2 1 2\n1 1 1''') == '4'\nassert solution('''6 5\n1 1 1 1 1 1\n2 1 2 1 2\n1 3 1 3 4\n4 4 2 2\n2 1 2 1 2\n5 2 1 2 3''') == '5'\nassert solution('''3 3\n1 3 1\n2 1 2\n1 1 1''') == '0'\nassert solution('''3 4\n1 1 1 1\n1 2 2 1\n3 1 3 1\n4 4 2 2\n2 1 2 1\n2 2 2 2\n3 3 3 1''') == '2'\n"
    },
    {
        "number": 3095,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\\n4 5 6\\n7 8 9\") == \"4\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n11 12 13\") == \"9\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n5 5\") == \"3\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"3\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"3\"\n"
    },
    {
        "number": 3095,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n1 2\\n1 1\") == \"4\"\nassert solution(\"2 2\\n2 2\\n1 1\") == \"4\"\nassert solution(\"1 2\\n1 2\\n1 1\") == \"4\"\nassert solution(\"1 1\\n1 1\\n1 1\") == \"4\"\nassert solution(\"1 1\\n1 1\\n1 1\") == \"4\"\n"
    },
    {
        "number": 3096,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n2 1 3 4\n1 2\n1 3\n3 4\n''') == '6'\nassert solution('''4\n3 4 5 6\n1 2\n1 3\n2 4\n''') == '3'\nassert solution('''5\n2 1 3 4 5\n1 2\n1 3\n2 4\n3 4\n1 5\n''') == '1'\nassert solution('''6\n2 1 3 4 5 6\n1 2\n1 3\n2 4\n3 4\n1 5\n2 6\n''') == '2'\n"
    },
    {
        "number": 3096,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n4\n2 1 3 4\n1 2\n1 3\n3 4\n''') == '6'\nassert solution(\n'''\n4\n3 4 5 6\n1 2\n1 3\n2 4\n''') == '3'\nassert solution(\n'''\n2\n1\n''') == '0'\nassert solution(\n'''\n3\n1 1\n1 2\n1 3\n''') == '1'\nassert solution(\n'''\n10\n5 5 4 4 3 3 2 2 1\n1 1\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n4 7\n5 7\n5 8\n6 7\n7 8\n''') == '1'\n"
    },
    {
        "number": 3096,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"4\n2 1 3 4\n1 2\n1 3\n3 4\n\"\"\") == \"6\"\nassert solution(\"\"\"5\n4\n1 3\n2 5\n4 3\n5 1\n\"\"\") == \"3\"\nassert solution(\"\"\"2\n3\n1\n\"\"\") == \"1\"\nassert solution(\"\"\"1\n3\n\"\"\") == \"0\"\nassert solution(\"\"\"1\n1\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3096,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    stdin = '4\\n2 1 3 4\\n1 2\\n1 3\\n3 4\\n4 3'\n) == '6'\n"
    },
    {
        "number": 3096,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n2 1 3 4\n1 2\n1 3\n3 4\n''') == '6'\nassert solution('''4\n2 1 2 3\n1 3\n2 1\n1 3\n''') == '3'\nassert solution('''4\n2 1 2 3\n1 3\n2 1\n1 3\n''') == '3'\nassert solution('''4\n2 1 2 3\n1 3\n2 1\n1 3\n''') == '3'\nassert solution('''5\n4 2 5 3 1\n1 4\n1 2\n2 3\n1 2\n2 1\n1 3\n1 4\n1 5\n2 3\n1 5\n2 3\n2 1\n2 4\n2 5\n1 4\n1 5\n1 3\n1 1\n1 2\n1 4\n1 5\n2 3\n1 4\n1 5\n1 3\n2 3\n1 5\n2 3\n2 1\n1 5\n2 3\n2 1\n1 5\n2 3\n2 1\n1 4\n2 3\n1 4\n2 3\n1 4\n1 5\n1 3\n1 1\n1 2\n1 4\n1 5\n2 3\n1 4\n1 5\n1 3\n2 3\n1 5\n2 3\n2 1\n1 5\n2 3\n2 1\n1 4\n2 3\n1 4\n2 3\n1 4\n1 5\n1 3\n1 1\n1 2\n1 4\n1 5\n2 3\n1 4\n1 5\n1 3\n2 3\n1 5\n2 3\n2 1\n1 5\n2 3\n2 1\n1 4\n2 3\n1 4\n2 3\n1 4\n1 5\n1 3\n1 1\n1 2\n1 4\n1 5\n2 3\n1 4\n1 5\n1 3\n2 3\n1 5\n2 3\n2 1\n1 5\n2 3\n2 1\n1 4\n2 3\n1 4\n2 3\n1 4\n1 5\n1 3\n1 1\n1 2\n1 4\n1 5\n2 3\n1 4\n1 5\n1 3\n2 3\n1 5\n2 3\n2 1\n1 5\n2 3\n2 1\n1 4\n2 3\n1 4\n2 3\n1 4\n1 5\n1 3\n1 1\n1 2\n1 4\n1 5\n2 3\n1 4\n1 5\n1 3\n2 3\n1 5\n2 3\n2 1\n1 5\n2 3\n2 1\n1 4\n2 3\n1 4\n2 3\n1 4\n1 5\n1 3\n1 1\n1 2\n1 4\n1 5\n2 3\n1 4\n1 5\n1 3\n2 3\n1 5\n2 3\n2 1\n1 5\n2 3\n2 1\n1 4\n2 3\n1 4\n2 3\n1 4\n1 5\n1 3\n1 1\n1 2\n1 4\n1 5\n2 3\n1 4\n1 5\n1 3\n2 3\n1 5\n2 3\n2 1\n1 5\n2 3\n2 1\n1 4\n2 3\n1 4\n2 3\n1 4\n1 5\n1 3\n1 1\n1 2\n1 4\n1 5\n2 3\n1 4\n1 5\n1 3\n2 3\n1 5\n2 3\n2 1\n1 5\n2 3\n2 1\n1 4\n2 3\n1 4\n2 3\n1 4\n1 5\n1 3\n1 1\n1 2\n1 4\n1 5\n2 3\n1 4\n1 5\n1 3\n2 3\n1 5\n2 3\n2 1\n1 5\n2 3\n2 1\n1 4\n2 3\n1 4\n2 3\n1 4\n1 5\n1 3\n1 1\n1 2\n1 4\n1 5\n2 3\n1 4\n1 5\n1 3\n2 3\n1 5\n2 3\n2 1\n1 5\n2 3\n2 1\n1 4\n2 3\n1 4\n2 3\n1 4\n1 5\n1 3\n1 1\n1 2\n1 4\n1 5\n2 3\n1 4\n1 5\n1 3\n2 3\n1 5\n2 3\n2 1\n1 5\n2 3\n2 1\n1 4\n2 3\n1 4\n2 3\n1 4\n1 5\n1 3\n1 1\n1 2\n1 4\n1 5\n2 3\n1 4\n1 5\n1 3\n2 3\n1 5\n2 3\n2 1\n1 5\n2 3\n2 1\n1 4\n2 3\n1 4\n2 3\n1 4\n1 5\n1 3\n1 1\n1 2\n1 4\n1 5\n2 3\n1 4\n1 5\n1 3\n2 3\n1 5\n2 3\n2 1\n1 5\n2 3\n2 1\n1 4\n2 3\n1 4\n2 3\n1 4\n1 5\n1 3\n1 1\n1 2\n1 4\n1 5\n2 3\n1 4\n1 5\n1 3\n2 3\n1 5\n2 3\n2 1\n1 5\n2 3\n2 1\n1 4\n2 3\n1 4\n2 3\n1 4\n1 5\n1 3\n1 1\n1 2\n1 4\n1 5\n2 3\n1 4\n1 5\n1 3\n2 3\n1 5\n2 3\n2 1\n1 5\n2 3\n2 1\n1 4\n2 3\n1 4\n2 3\n1 4\n1 5\n1 3\n1 1\n1 2\n1 4\n1 5\n2 3\n1 4\n1 5\n1 3\n2 3\n1 5\n2 3\n2 1\n1 5\n2 3\n2 1\n1 4\n2 3\n1 4\n2 3\n1 4\n1 5\n1 3\n1 1\n1 2\n1 4\n1 5\n2 3\n1 4\n1 5\n1 3\n2 3\n1 5\n2 3\n2 1\n1 5\n2 3\n2 1\n1 4\n2 3\n1 4\n2 3\n1 4\n1 5\n1 3\n1 1\n1 2\n1 4\n1 5\n2 3\n1 4\n1 5\n1 3\n2 3\n1 5\n2 3\n2 1\n1 5\n2 3\n2 1\n1 4\n2 3\n1 4\n2 3\n1 4\n1 5\n1 3\n1 1\n1 2\n1 4\n1 5\n2 3\n1 4\n1 5\n1 3\n2 3\n1 5\n2 3\n2 1\n1 5\n2 3\n2 1\n1 4\n2 3\n1 4\n2 3\n1 4\n1 5\n1 3\n1 1\n1 2\n1 4\n1 5\n2 3"
    },
    {
        "number": 3096,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n4\\n2\\n1\\n3\\n3\\n2\") == \"3\"\nassert solution(\"2\\n2\\n1\\n3\\n3\\n2\") == \"3\"\nassert solution(\"5\\n10\\n11\\n9\\n5\\n1\") == \"5\"\nassert solution(\"3\\n6\\n9\\n2\\n1\\n8\\n2\\n2\") == \"3\"\nassert solution(\"8\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"1\"\n"
    },
    {
        "number": 3096,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n4 2 3') == '3'\nassert solution('3\\n4 2 3\\n1 2\\n1 3\\n3 4\\n') == '3'\n"
    },
    {
        "number": 3096,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n4\n2 1 3 4\n1 2\n1 3\n3 4\n\"\"\"\n) == \"6\"\n\nassert solution(\n\"\"\"\n4\n2 1 2 1\n1 2\n2 1\n1 2\n\"\"\"\n) == \"3\"\n\nassert solution(\n\"\"\"\n2\n1 2\n1 2\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n3\n3 4 4 4\n1 2\n3 4\n1 2\n\"\"\"\n) == \"3\"\n\nassert solution(\n\"\"\"\n5\n4 5 3 2 1\n2 1\n3 2\n1 4\n1 4\n2 4\n\"\"\"\n) == \"2\""
    },
    {
        "number": 3096,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3096,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n1 3\\n1 4\\n3 4\\n1 2\\n1 3\") == '6'\n\"\"\"\n\nn = int(stdin.readline().strip())\nv = [int(x) for x in stdin.readline().strip().split(' ')]\np = int(stdin.readline().strip())\n\nresult = 0\n\nfor i in range(n):\n    if v[i] == 1:\n        for j in range(i+1,n):\n            if v[j] == 1:\n                for k in range(j+1,n):\n                    if v[k] == 1:\n                        for l in range(k+1,n):\n                            if v[l] == 1:\n                                result += 1\n\nprint(result)\n"
    },
    {
        "number": 3097,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3097,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    '2\\n1 10\\n5 8\\n'\n) == '18\\n8\\n'\n\nassert solution(\n    '2\\n17 144\\n121 121\\n89 98\\n'\n) == '265\\n25\\n10\\n'\n"
    },
    {
        "number": 3097,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == answer()\n"
    },
    {
        "number": 3097,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 10\\n5 8') == '18\\n8'\nassert solution('2\\n1 10\\n5 8') == '18\\n8'\nassert solution('3\\n17 144\\n121 121\\n89 98') == '265\\n25\\n10'\nassert solution('4\\n17 144\\n121 121\\n89 98\\n21 21') == '265\\n25\\n10\\n2'\nassert solution('5\\n17 144\\n121 121\\n89 98\\n21 21\\n0 0') == '265\\n25\\n10\\n2\\n0'\n"
    },
    {
        "number": 3097,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3097,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"2\n1 10\n5 8\n\"\"\") == \"\"\"18\n8\n\"\"\"\nassert solution(\n    \"\"\"3\n17 144\n121 121\n89 98\n\"\"\") == \"\"\"265\n25\n10\n\"\"\"\nassert solution(\n    \"\"\"3\n17 144\n121 121\n89 98\n\"\"\") == \"\"\"265\n25\n10\n\"\"\"\nassert solution(\n    \"\"\"1\n100 999\n\"\"\") == \"\"\"999\n\"\"\"\nassert solution(\n    \"\"\"1\n1000 999\n\"\"\") == \"\"\"999\n\"\"\"\n"
    },
    {
        "number": 3097,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 10\\n5 8\") == \"18\\n8\\n\"\nassert solution(\"3\\n17 144\\n121 121\\n89 98\") == \"265\\n25\\n10\\n\""
    },
    {
        "number": 3097,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output\nprint(\"Passed\")\nTestcase:\nTestcase 1:\nInput:\n2\n1 10\n5 8\nOutput:\n18\n8\n\nTestcase 2:\nInput:\n3\n17 144\n121 121\n89 98\nOutput:\n265\n25\n10\n\nTestcase 3:\nInput:\n10\n10 100\n1 1\n9 9\n8 8\n7 7\n6 6\n5 5\n4 4\n3 3\n2 2\n1 1\nOutput:\n2\n4\n64\n336\n1024\n25280\n1048576\n100\n'''\n"
    },
    {
        "number": 3097,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 10\n5 8\n''') == '18'\nassert solution('''2\n17 144\n121 121\n89 98\n''') == '265'\nassert solution('''4\n1000 10000\n7143 7143\n7144 7144\n7145 7144\n''') == '10'\nassert solution('''6\n1145 1599\n1140 1344\n1146 1347\n1338 1330\n1330 1327\n1356 1345\n''') == '7'\nassert solution('''7\n15111 15211\n13314 13354\n13406 13405\n13415 13407\n13448 13408\n13468 13409\n13472 13409\n13484 13410\n13499 13411\n13511 13411\n13521 13411\n13535 13412\n13547 13412\n13556 13413\n13568 13413\n13580 13413\n13592 13414\n13604 13414\n13616 13414\n13648 13415\n13666 13415\n13688 13416\n13704 13417\n13716 13417\n13738 13418\n13756 13418\n13778 13418\n13792 13419\n13804 13419\n13816 13419\n13828 13420\n13840 13420\n13852 13420\n13864 13421\n13876 13421\n13888 13421\n13900 13422\n1392 13422\n1394 13422\n1396 13423\n1398 13423\n1400 13423\n1402 13424\n1404 13424\n1406 13424\n1408 13425\n1410 13425\n1412 13425\n1414 13426\n1416 13426\n1418 13426\n1420 13427\n1422 13427\n1424 13427\n1426 13428\n1428 13428\n1430 13428\n1432 13429\n1434 13429\n1436 13429\n1438 13430\n1440 13430\n1442 13430\n1444 13431\n1446 13431\n1448 13431\n1450 13432\n1452 13432\n1454 13432\n1456 13433\n1458 13433\n1460 13433\n1462 13434\n1464 13434\n1466 13434\n1468 13435\n1470 13435\n1472 13435\n1474 13436\n1476 13436\n1478 13436\n1480 13437\n1482 13437\n1484 13437\n1486 13438\n1488 13438\n1490 13438\n1492 13439\n1494 13439\n1496 13439\n1498 13440\n1500 13440\n1502 13440\n1504 13441\n1506 13441\n1508 13441\n1510 13442\n1512 13442\n1514 13442\n1516 13443\n1518 13443\n1520 13443\n1522 13444\n1524 13444\n1526 13444\n1528 13445\n1530 13445\n1532 13445\n1534 13446\n1536 13446\n1538 13446\n1540 13447\n1542 13447\n1544 13447\n1546 13448\n1548 13448\n1550 13448\n1552 13449\n1554 13449\n1556 13449\n1558 13450\n1560 13450\n1562 13450\n1564 13451\n1566 13451\n1568 13451\n1570 13452\n1572 13452\n1574 13452\n1576 13453\n1578 13453\n1580 13453\n1582 13454\n1584 13454\n1586 13454\n1588 13455\n1590 13455\n1592 13455\n1594 13456\n1596 13456\n1598 13456\n1600 13457\n1602 13457\n1604 13457\n1606 13458\n1608 13458\n1610 13458\n1612 13459\n1614 13459\n1616 13459\n1618 13460\n1620 13460\n1622 13460\n1624 13461\n1626 13461\n1628 13461\n1630 13462\n1632 13462\n1634 13462\n1636 13463\n1638 13463\n1640 13463\n1642 13464\n1644 13464\n1646 13464\n1648 13465\n1650 13465\n1652 13465\n1654 13466\n1656 13466\n1658 13466\n1660 13467\n1662 13467\n1664 13467\n1666 13468\n1668 13468\n1670 13468\n1672 13469\n1674 13469\n1676 13469\n1678 13470\n1680 13470\n1682 13470\n1684 13471\n1686 13471\n1688 13471\n1690 13472\n1692 13472\n1694 13472\n1696 13473\n1698 13473\n1700 13473\n1702 13474\n1704 13474\n1706 13474\n1708 13475\n1710 13475\n1712 13475\n1714 13476\n1716 13476\n1718 13476\n1720 13477\n1722 13477\n1724 13477\n1726 13478\n1728 13478\n1730 13478\n1732 13479\n1734 13479\n1736 13479\n1738 13480\n1740 13480\n1742 13480\n1744 13481\n1746 13481\n17"
    },
    {
        "number": 3097,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 10') == '18'\nassert solution('5 8') == '8'\nassert solution('17 144') == '265'\nassert solution('121 121') == '25'\nassert solution('89 98') == '10'\n"
    },
    {
        "number": 3098,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 2') == 0.5\nassert solution('5 5') == 12.5\nassert solution('10 10') == 50\nassert solution('5 3') == 0.5\nassert solution('10 4') == 10\n\"\"\"\n"
    },
    {
        "number": 3098,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"4 3\n0 0\n1 1\n2 1\n1 0\"\"\") == \"0.50000000\"\n\nassert solution(\n\"\"\"4 3\n0 4\n4 2\n4 1\n3 -1\n-2 4\"\"\") == \"12.50000000\"\n"
    },
    {
        "number": 3098,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n4 3\n0 0\n1 1\n2 1\n1 0\n''') == '0.50000000'\n\nassert solution('''\n5 5\n0 4\n4 2\n4 1\n3 -1\n-2 4\n''') == '12.50000000'\nassert solution('''\n5 5\n0 4\n4 2\n4 1\n3 -1\n-2 4\n''') == '12.50000000'\nassert solution('''\n5 5\n0 4\n4 2\n4 1\n3 -1\n-2 4\n''') == '12.50000000'\nassert solution('''\n5 5\n0 4\n4 2\n4 1\n3 -1\n-2 4\n''') == '12.50000000'\n"
    },
    {
        "number": 3098,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == str(solution(stdin))\n\"\"\"\nfrom typing import List\n\nimport sys\nsys.setrecursionlimit(100000)\n"
    },
    {
        "number": 3098,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 0\\n1 1\\n2 1\\n1 0\\n4 4\\n4 2\\n4 1\\n3 -1\\n-2 4\\n') == '0.50000000'\nassert solution('1 0\\n0 1\\n1 0\\n2 1\\n1 0\\n3 0\\n0 3\\n0 0\\n2 3\\n0 1\\n2 3\\n1 0\\n2 3\\n0 0\\n2 3\\n1 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2"
    },
    {
        "number": 3098,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3098,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 0\\n0 0') == '0.50000000'\nassert solution('3 2\\n0 0\\n1 1\\n2 1\\n1 0\\n') == '0.50000000'\nassert solution('3 2\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\\n') == '12.50000000'\n"
    },
    {
        "number": 3098,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 3\n0 0\n1 1\n2 1\n1 0''') == '0.50000000'\nassert solution('''5 3\n0 4\n4 2\n4 1\n3 -1\n-2 4''') == '12.50000000'\nassert solution('''7 10\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7''') == '45.0'\nassert solution('''7 10\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '45.0'\nassert solution('''10 10\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '45.0'\n"
    },
    {
        "number": 3098,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 3\n0 0\n1 1\n2 1\n1 0''') == '0.50000000'\nassert solution('''5 5\n0 4\n4 2\n4 1\n3 -1\n-2 4''') == '12.50000000'\nassert solution('''3 4\n1 0\n1 -1\n2 1''') == '0.50000000'\nassert solution('''3 5\n1 0\n1 -1\n2 1\n1 0''') == '2.1500000'\nassert solution('''3 4\n1 -1\n1 0\n2 1''') == '2.2500000'\n"
    },
    {
        "number": 3098,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"4 3\n0 0\n1 1\n2 1\n1 0\n\"\"\") == \"0.50000000\"\nassert solution(\n\"\"\"5 5\n0 4\n4 2\n4 1\n3 -1\n-2 4\n\"\"\") == \"12.50000000\"\nassert solution(\n\"\"\"30 10\n-29 -10\n-29 -9\n-29 -7\n-29 -5\n-29 -3\n-29 -1\n-29  0\n-29  1\n-29  2\n-29  3\n-29  4\n-29  5\n-29  6\n-29  7\n-29  8\n-29  9\n-29 10\n-29 11\n-29 12\n-29 13\n-29 14\n-29 15\n-29 16\n-29 17\n-29 18\n-29 19\n-29 20\n-29 21\n-29 22\n-29 23\n-29 24\n-29 25\n-29 26\n-29 27\n-29 28\n-29 29\n-29 30\n-29 31\n-29 32\n-29 33\n-29 34\n-29 35\n-29 36\n-29 37\n-29 38\n-29 39\n-29 40\n-29 41\n-29 42\n-29 43\n-29 44\n-29 45\n-29 46\n-29 47\n-29 48\n-29 49\n-29 50\n-29 51\n-29 52\n-29 53\n-29 54\n-29 55\n-29 56\n-29 57\n-29 58\n-29 59\n-29 60\n-29 61\n-29 62\n-29 63\n-29 64\n-29 65\n-29 66\n-29 67\n-29 68\n-29 69\n-29 70\n-29 71\n-29 72\n-29 73\n-29 74\n-29 75\n-29 76\n-29 77\n-29 78\n-29 79\n-29 80\n-29 81\n-29 82\n-29 83\n-29 84\n-29 85\n-29 86\n-29 87\n-29 88\n-29 89\n-29 90\n-29 91\n-29 92\n-29 93\n-29 94\n-29 95\n-29 96\n-29 97\n-29 98\n-29 99\n-29 100\n-29 101\n-29 102\n-29 103\n-29 104\n-29 105\n-29 106\n-29 107\n-29 108\n-29 109\n-29 110\n-29 111\n-29 112\n-29 113\n-29 114\n-29 115\n-29 116\n-29 117\n-29 118\n-29 119\n-29 120\n-29 121\n-29 122\n-29 123\n-29 124\n-29 125\n-29 126\n-29 127\n-29 128\n-29 129\n-29 130\n-29 131\n-29 132\n-29 133\n-29 134\n-29 135\n-29 136\n-29 137\n-29 138\n-29 139\n-29 140\n-29 141\n-29 142\n-29 143\n-29 144\n-29 145\n-29 146\n-29 147\n-29 148\n-29 149\n-29 150\n-29 151\n-29 152\n-29 153\n-29 154\n-29 155\n-29 156\n-29 157\n-29 158\n-29 159\n-29 160\n-29 161\n-29 162\n-29 163\n-29 164\n-29 165\n-29 166\n-29 167\n-29 168\n-29 169\n-29 170\n-29 171\n-29 172\n-29 173\n-29 174\n-29 175\n-29 176\n-29 177\n-29 178\n-29 179\n-29 180\n-29 181\n-29 182\n-29 183\n-29 184\n-29 185\n-29 186\n-29 187\n-29 188\n-29 189\n-29 190\n-29 191\n-29 192\n-29 193\n-29 194\n-29 195\n-29 196\n-29 197\n-29 198\n-29 199\n-29 200\n-29 201\n-29 202\n-29 203\n-29 204\n-29 205\n-29 206\n-29 207\n-29 208\n-29 209\n-29 210\n-29 211\n-29 212\n-29 213\n-29 214\n-29 215\n-29 216\n-29 217\n-29 218\n-29 219\n-29 220\n-29 221\n-29 222\n-29 223\n-29 224\n-29 225\n-29 226\n-29 227\n-29 228\n-29 229\n-29 230\n-29 231\n-29 232\n-29 233\n-29 234\n-29 235\n-29 236\n-29 237\n-29 238\n-29 239\n-29 240\n-29 241\n-29 242\n-29 243\n-29 244\n-29 245\n-29 246\n-29 247\n-29 248\n-29 249\n-29 250\n-29 251\n-29 252\n-29 253\n-29 254\n-29 255\n-29 256\n-29 257\n-29 258\n-29 259\n-29 260\n-29 261\n-29 262\n-29 263\n-29 264\n-29 265\n-29 266\n-29 267\n-29 268\n-29 269\n-29 270\n-29 271\n-29 272\n-29 273\n-29 274\n-29 275\n-29 276\n-29 277\n-29 278\n-29 279\n-29 280\n-29 281\n-29 282\n-29 283\n-29 284\n-29 285\n-29 286\n-29 287\n-29 288\n-29 289\n-29 290\n-29 291\n-29 292\n-29 293\n-29 294\n-29 295\n-29 296\n-29 297\n-29 298\n-29 299\n-29 300\n-29 301\n-29 302\n-29 303\n-29 304\n-29 305\n-29 306\n-29 307\n-29 308\n-29 309\n-29 310\n-29 311\n-29 312\n-29 313\n-29 314\n-29 315\n-29 316\n-29 317\n-29 318\n-29 319\n-29 320\n-29 321\n-29 322\n-29 323\n-29 324\n-29 325\n-29 326\n-29 327\n-29 328\n-29 329\n-29 330\n-29 331\n-29 332\n-29 333\n-29 334\n-29 335\n-29 336\n-29 337\n-29 338\n-29 339\n-29 340\n-29 341\n-29 342\n-29 343\n-29 344\n-29 345\n-29 346\n-29 347\n-29 348\n-29 349\n-29 350\n-29 351\n-29 352\n-29 353\n-29 354\n-29 355\n-29 356\n-29 357\n-29 358\n-29 359\n-29 360\n-29 361\n-29 362\n-29 363\n-29 364\n-29 365\n-29 366\n-29 367\n-29 368\n-29 369\n-29 370\n-29 371\n-29 372\n-29 373\n-29 374\n-29 375\n-29 376\n-29 377\n-29 378\n"
    },
    {
        "number": 3099,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 1 3\n0 1\n1 2\n2 3\n1\n''') == '2'\nassert solution('''4 0 4\n0 2\n0 1\n2 1\n2 3\n''') == '1'\nassert solution('''9 1 2\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9\n''') == '5'\nassert solution('''9 1 2\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9\n''') == '1'\nassert solution('''10 1 3\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10\n''') == '7'\n"
    },
    {
        "number": 3099,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0 0 0\\n0 1\\n1 2\\n2 3\\n1\") == \"2\"\nassert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\") == \"2\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\\n\") == \"1\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\\n0 3\") == \"1\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\\n0 4\") == \"1\"\n"
    },
    {
        "number": 3099,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 1 3\\n0 1\\n1 2\\n2 3\\n1') == '2'\nassert solution('4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\\n1') == '1'\nassert solution('4 1 3\\n1 2\\n0 1\\n0 3\\n0 1\\n1 3\\n1 2\\n0 2\\n2 3\\n0 2\\n2 1') == '4'\nassert solution('4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\\n1') == '1'\nassert solution('4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\\n1\\n0 2\\n0 1\\n1 3\\n1 2\\n0 2\\n0 1') == '3'\n"
    },
    {
        "number": 3099,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''4 1 3\n0 1\n1 2\n2 3\n1\n''') == '2'\nassert solution(\n'''4 0 4\n0 2\n0 1\n2 1\n2 3\n''') == '1'\nassert solution(\n'''4 0 4\n0 2\n1 2\n2 3\n2\n''') == '0'\nassert solution(\n'''6 0 3\n0 3\n0 4\n0 5\n0 6\n0 1\n1 2\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n''') == '2'\nassert solution(\n'''6 0 3\n0 3\n0 4\n0 5\n0 6\n0 1\n1 2\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n"
    },
    {
        "number": 3099,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''4 1 3\n0 1\n1 2\n2 3\n1\n''') == '2'\nassert solution(\n'''4 0 4\n0 2\n0 1\n2 1\n2 3\n''') == '1'\nassert solution(\n'''1 2\n0 2\n1 0\n''') == '1'\nassert solution(\n'''1 2\n2 0\n1 0\n''') == '2'\nassert solution(\n'''4 1 3\n1 2\n2 3\n1\n''') == '3'\n"
    },
    {
        "number": 3099,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 1 3\n0 1\n1 2\n2 3\n1''') == '2'\nassert solution('''4 1 3\n0 1\n1 2\n2 3\n1\n3 1\n3 0''') == '1'\nassert solution('''4 0 4\n0 2\n0 1\n2 1\n2 3\n''') == '1'\nassert solution('''4 0 4\n1 2\n2 3\n2 1\n2 3\n''') == '2'\nassert solution('''4 0 4\n1 2\n2 3\n1\n3 1\n3 0\n''') == '1'\n"
    },
    {
        "number": 3099,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin[3]\nprint(solution(stdin))"
    },
    {
        "number": 3099,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 1 3\\n0 1\\n1 2\\n2 3\\n1') == '2'\nassert solution('4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\\n') == '1'\nassert solution('5 2 3\\n0 1\\n1 2\\n2 3\\n3 4\\n') == '2'\nassert solution('1\\n1') == '0'\nassert solution('5 4 3\\n0 1\\n1 2\\n2 3\\n3 4\\n') == '1'\n"
    },
    {
        "number": 3099,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('2 1 3') == '3'\nassert solution('1') == '0'\nassert solution('2 3 4') == '2'\nassert solution('4 2 4') == '1'\n"
    },
    {
        "number": 3099,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 1 3') == '2'\nassert solution('4 0 4') == '1'\nassert solution('4 1 3') == '2'\nassert solution('4 0 4') == '1'\nassert solution('4 1 3') == '2'\n"
    },
    {
        "number": 3100,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 1') == '6'\nassert solution('2 2 2') == '30'\nassert solution('2 3 2') == '30'\nassert solution('2 2 3') == '6'\nassert solution('3 2 2') == '30'\n"
    },
    {
        "number": 3100,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3100,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3100,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n1 2 1\n''') == '6'\nassert solution('''\n2 2 2\n''') == '30'\nassert solution('''\n5 2 5\n''') == '0'\nassert solution('''\n20 3 10\n''') == '0'\nassert solution('''\n3 2 1\n''') == '0'\n"
    },
    {
        "number": 3100,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 1') == '6'\nassert solution('2 2 2') == '30'\n"
    },
    {
        "number": 3100,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 1') == '6'\nassert solution('2 2 2') == '30'\nassert solution('0 0 0') == '0'\nassert solution('1 1 1') == '1'\nassert solution('1 2 1') == '6'\n"
    },
    {
        "number": 3100,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 1') == \"6\"\nassert solution('2 2 2') == \"30\"\nassert solution('1 2 1') == \"6\"\nassert solution('2 2 2') == \"30\"\nassert solution('3 3 3') == \"0\"\n\"\"\"\n"
    },
    {
        "number": 3100,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 1') == 6\nassert solution('2 2 2') == 30\n"
    },
    {
        "number": 3100,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == str(solution(stdin))\nprint(solution(stdin))\n"
    },
    {
        "number": 3100,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '1 2 1'\n) == '6'\nassert solution(\n    '2 2 2'\n) == '30'\nassert solution(\n    '1 2 2'\n) == '30'\nassert solution(\n    '2 3 2'\n) == '0'\nassert solution(\n    '2 2 2'\n) == '0'\n"
    },
    {
        "number": 3101,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3101,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0\\n1\\n2\\n3\") == \"2\\n3\\n1\"\nassert solution(\"0\\n1\\n1\\n1\") == \"impossible\"\nassert solution(\"0\\n1\\n9\\n9\") == \"impossible\"\nassert solution(\"0\\n1\\n1\\n1\\n1\") == \"impossible\"\nassert solution(\"0\\n1\\n1\\n9\\n9\") == \"impossible\"\n"
    },
    {
        "number": 3101,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == input\n"
    },
    {
        "number": 3101,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n2020 2020 2020''') == '''2021 2020 2020'''\nassert solution('''2\n1 9999999''') == '''impossible'''\nassert solution('''4\n1 7 5 12 9''') == '''1 3 5 12 7'''\nassert solution('''5\n1 7 5 12 9 1''') == '''impossible'''\n'''"
    },
    {
        "number": 3101,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n2020 2020 2020''') == '''2021 2020 2020'''\nassert solution('''2\n1 9999999''') == 'impossible'\n'''"
    },
    {
        "number": 3101,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n2020 2020 2020''') == '2021 2020 2020'\nassert solution('''2\n1 9999999''') == 'impossible'\nassert solution('''3\n4 5 6''') == '4 5 6'\nassert solution('''3\n7 8 9''') == 'impossible'\nassert solution('''3\n0 0 0''') == 'impossible'\n"
    },
    {
        "number": 3101,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n2020 2020 2020\n''') == '2021 2020 2020'\nassert solution('''1\n1 9999999\n''') == 'impossible'\nprint('solution:', solution('''3\n2020 2020 2020\n'''))\n"
    },
    {
        "number": 3101,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    \"3\\n2020 2020 2020\"\n) == \"2021 2020 2020\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 3101,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n3\n2020 2020 2020\n\"\"\") == \"\"\"\n2021 2020 2020\n\"\"\"\n\nassert solution(\n\"\"\"\n3\n2 10 22\nSample Output 1:\nimpossible\n\"\"\") == \"\"\"\nimpossible\n\"\"\"\n\nassert solution(\n\"\"\"\n2\n1 9999999\nSample Output 2:\n2021 2020 2020\n\"\"\"\n) == \"\"\"\n2021 2020 2020\n\"\"\"\n\nassert solution(\n\"\"\"\n3\n5 6 4\nSample Output 3:\nimpossible\n\"\"\"\n) == \"\"\"\nimpossible\n\"\"\"\n"
    },
    {
        "number": 3101,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3102,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    '''30 70'''\n    ) == '11'\n'''\nSample Input 3:\n1 2\nSample Output 3:\n1\n\nSample Input 4:\n1 2\nSample Output 4:\n0\n'''\nassert solution(\n    '''1 2'''\n    ) == '0'\nassert solution(\n    '''0 1'''\n    ) == '1'\n"
    },
    {
        "number": 3102,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 10') == '1'\nassert solution('11 11') == '0'\nassert solution('5 10') == '0'\nassert solution('8 9') == '1'\nassert solution('3 4') == '0'\n"
    },
    {
        "number": 3102,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('30 70') == '11'\nassert solution('66 69') == '2'\n"
    },
    {
        "number": 3102,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"...\\n30 70\\n...\\n\") == \"11\"\n\"\"\""
    },
    {
        "number": 3102,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('1 1') == '1'\nassert solution('5 10') == '0'\nassert solution('2 4') == '2'\nassert solution('10 9') == '1'\n"
    },
    {
        "number": 3102,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"30 70\\n\") == \"11\"\nassert solution(\"66 69\\n\") == \"2\"\n\nprint(solution(stdin))\n"
    },
    {
        "number": 3102,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2\n"
    },
    {
        "number": 3102,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('30 70') == '11'\nassert solution('66 69') == '2'\nassert solution('1 1') == '1'\nassert solution('1 1') == '1'\nassert solution('1 10') == '1'\n"
    },
    {
        "number": 3102,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('30 70') == '11'\nassert solution('66 69') == '2'\nprint(solution(input()))\n\n'''\n"
    },
    {
        "number": 3102,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3103,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2 0') == '2'\nassert solution('3 5 1') == '4'\nassert solution('3 5 2') == '4'\nassert solution('3 5 3') == '5'\nassert solution('3 5 4') == '5'\n"
    },
    {
        "number": 3103,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2 0') == '2'\nassert solution('3 5 1') == '4'\n\n'''\n"
    },
    {
        "number": 3103,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input(\"\")) == \"begin repairs\"\nassert solution(input(\"2 2 0\\n>@\\n>~\")) == \"2\"\nassert solution(input(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\")) == \"4\"\n\n\"\"\"\n\nfrom collections import deque\nfrom functools import lru_cache\nfrom typing import Dict, List, Tuple\n"
    },
    {
        "number": 3103,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\">@<<\") == 4\nassert solution(\">>@<<\") == 4\nassert solution(\">>@<<<<\") == 4\nassert solution(\">@<<<<<<\") == 4\nassert solution(\">>@<<\") == 4\n"
    },
    {
        "number": 3103,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2 0') == '2'\nassert solution('3 5 1') == '4'\nassert solution('3 2 0') == '2'\nassert solution('5 10 1') == '4'\nassert solution('5 5 1') == '4'\n"
    },
    {
        "number": 3103,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2 0') == '2'\nassert solution('3 5 1') == '4'\nassert solution('2 3 2') == '4'\nassert solution('4 2 2') == '4'\nassert solution('1 1 2') == 'begin repairs'\n"
    },
    {
        "number": 3103,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2 0') == '2'\nassert solution('3 5 1') == '4'\n\"\"\""
    },
    {
        "number": 3103,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    \"1 1 0\"\n) == \"2\"\nassert solution(\n    \"3 5 1\"\n) == \"4\"\nassert solution(\n    \"4 5 1\"\n) == \"1\"\nassert solution(\n    \"4 4 1\"\n) == \"1\"\nassert solution(\n    \"5 2 2\"\n) == \"1\"\n"
    },
    {
        "number": 3103,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3\\n>@\\n>~') == '2'\nassert solution('2 2 0\\n>@\\n>~') == '2'\nassert solution('3 3 1\\n>>@<<\\n>~#~<\\n>>>>~') == '4'\nassert solution('3 2 0\\n>@\\n>~') == 'begin repairs'\nassert solution('3 2 0\\n>@\\n>~') == 'begin repairs'\n"
    },
    {
        "number": 3103,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 1 0\") == \"2\"\nassert solution(\"2 2 0\") == \"4\"\nassert solution(\"1 1 1\") == \"5\"\nassert solution(\"3 3 0\") == \"begin repairs\"\nassert solution(\"3 5 1\") == \"4\"\n"
    },
    {
        "number": 3104,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\"\nassert solution(\"999999999\") == \"9+999999999\"\nassert solution(\"999999999\") == \"9+999999999\"\nassert solution(\"90009000=999999999\") == \"9+999+9000=999999999\"\n"
    },
    {
        "number": 3104,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(143175==120) == '14+31+75=120'\nassert solution(5025==30) == '5+025=30'\n"
    },
    {
        "number": 3104,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\"\n"
    },
    {
        "number": 3104,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\"\nassert solution(\"11704=4\") == \"11+70+04=4\"\nassert solution(\"10030=10\") == \"100+30=10\"\nassert solution(\"10020=20\") == \"100+20=20\"\n"
    },
    {
        "number": 3104,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '143175=120'\n) == '14+31+75=120'\nassert solution(\n    '5025=30'\n) == '5+025=30'\n"
    },
    {
        "number": 3104,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''143175=120''') == '14+31+75=120'\nassert solution('''5025=30''') == '5+025=30'\nassert solution('''54321=4099''') == '54321=4099'\nassert solution('''868963=32111''') == '868963=32111'\nassert solution('''46829=36278''') == '46829=36278'\n"
    },
    {
        "number": 3104,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\"\n\"\"\"\n\nfrom typing import Tuple"
    },
    {
        "number": 3104,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('143175=120') == '14+31+75=120'\nassert solution('5025=30') == '5+025=30'\nassert solution('939503543=39503543') == '9+9+39+5+3+5=39+5+3+3+3+3+3=39503543'\nassert solution('939503543=39503543') == '9+9+39+5+3+5=39+5+3+3+3+3+3=39503543'\nassert solution('432455=123') == '43+24+55=123'\n"
    },
    {
        "number": 3104,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''143175=120''') == '14+31+75=120'\nassert solution('''5025=30''') == '5+025=30'\nassert solution('''2135317-310009=237621''') == '135+34+1+3+7+5=2376'\nassert solution('''135+34+1+3+7+5=2376''') == '135+34+1+3+7+5=2376'\nassert solution('''10210011+41210331+10010141=123014411''') == '1+2+0+1+3=4+1+0+4+1+3=4+1+0+1+3=4+1+0+1+3=4+1+0+1+3'\n"
    },
    {
        "number": 3104,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\"\nassert solution(\"4564=30\") == \"45+64=70\"\nassert solution(\"123456789=900000000\") == \"1+2+3+4+5+6+7+8+9=900000000\"\nassert solution(\"1234456789=900000000\") == \"1+2+3+4+5+6+7+8+9=900000000\"\n"
    },
    {
        "number": 3105,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\"\"\""
    },
    {
        "number": 3105,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''8\n1\n3\n2\n4\n1\n5\n2\n4\n''') == '1 2'\nassert solution('''8\n1\n2\n3\n4\n5\n6\n7\n1\n''') == '-1'\nassert solution('''8\n1\n2\n3\n4\n5\n6\n7\n1\n''') == '-1'\nassert solution('''6\n1\n2\n3\n4\n5\n6\n7\n''') == '1 2'\nassert solution('''7\n1\n2\n3\n4\n5\n6\n7\n1\n''') == '1 2'\n"
    },
    {
        "number": 3105,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 3105,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\n\"\"\"\nSample Output 1:\n1 2\n\"\"\"\n\n\"\"\"\n1\n3\n2\n4\n1\n5\n2\n4\n\"\"\"\n"
    },
    {
        "number": 3105,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\\n') == '1 2\\n'\nassert solution('4\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\"
    },
    {
        "number": 3105,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    '''\n8\n1\n3\n2\n4\n1\n5\n2\n4\n'''\n    ) == '1 2'\nassert solution(\n    '''\n8\n1\n2\n3\n4\n5\n6\n7\n1\n'''\n    ) == '-1'\nassert solution(\n    '''\n8\n2\n3\n4\n5\n6\n7\n1\n'''\n    ) == '-1'\nassert solution(\n    '''\n8\n3\n4\n5\n6\n7\n1\n'''\n    ) == '-1'\nassert solution(\n    '''\n8\n2\n1\n3\n4\n5\n6\n7\n1\n'''\n    ) == '-1'\n"
    },
    {
        "number": 3105,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''8\n1\n3\n2\n4\n1\n5\n2\n4\n''') == '1 2'\nassert solution('''8\n1\n2\n3\n4\n5\n6\n7\n1\n''') == '-1'\nassert solution('''8\n1\n2\n3\n4\n5\n6\n7\n2\n''') == '-1'\nassert solution('''8\n1\n2\n3\n4\n5\n6\n7\n8\n1\n''') == '1 2'\nassert solution('''8\n1\n2\n3\n4\n5\n6\n7\n8\n9\n1\n''') == '1 2'\n"
    },
    {
        "number": 3105,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\\n') == '1 2'\nassert solution('8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n1\\n') == '-1'\nassert solution('8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n') == '-1'\nassert solution('8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n') == '-1'\nassert solution('8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n1\\n') == '-1'\n"
    },
    {
        "number": 3105,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''8\n1\n3\n2\n4\n1\n5\n2\n4\n''') == '1 2'\nassert solution('''9\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n"
    },
    {
        "number": 3105,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3106,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('1101') == 1\nassert solution('1010101') == 0\nassert solution('01010101') == 1\nassert solution
    },
    {
        "number": 3106,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1101') == 1\nassert solution('111') == 0\nassert solution('10') == -1\nassert solution
    },
    {
        "number": 3106,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1') == 0\nassert solution('1101') == 1\nassert solution('11111') == 0\nassert solution('0000') == 0\nassert solution('11') == 1\n"
    },
    {
        "number": 3106,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1101\") == 1\nassert solution(\"1\") == 0\nassert solution(\"1000101\") == 5\nassert solution(\"10001001\") == 4\nassert solution(\"00110101\") == 3\n"
    },
    {
        "number": 3106,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '1101'\n) == 1\nassert solution(\n    '101'\n) == 0\nassert solution(\n    '111101101'\n) == 2\nassert solution(\n    '11110111010111110111100100010110111001010101111101001000101'\n) == 4\nassert solution(\n
    },
    {
        "number": 3106,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1101\") == 1\nassert solution(\"1\") == 0\nassert solution(\"0\") == 0\nassert solution(\"010\") == 1\nassert solution(\"10101010\") == 1\n"
    },
    {
        "number": 3106,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1101\") == 1\nassert solution(\"111000100011110111\") == 6\nassert solution(\"111000100011110111\") == 5\nassert solution(\"111000100011110111\") == 4\nassert solution(\"111000100011110111\") == 3\n"
    },
    {
        "number": 3106,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1101\") == 1\nassert solution(\"10101010\") == 1\nassert solution(\"11110000\") == 2\nassert solution(\"00010011\") == 3\nassert solution(\"00010101\") == 4\n"
    },
    {
        "number": 3106,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"10111\") == 0\nassert solution(\"1101\") == 1\nassert solution(\"11\") == 0\nassert solution(\"10110\") == 1\nassert solution(\"00\") == 0\n"
    },
    {
        "number": 3106,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    10101010\n    10101010\n    01010100\n    01010100\n    10101010\n    10101010\n    10101010\n    01010100\n    10101010\n    \"\"\") == 0\nassert solution(\n    \"\"\"\n    10101010\n    10101010\n    10101010\n    10101010\n    10101010\n    10101010\n    10101010\n    10101010\n    10101010\n    \"\"\") == 1\nassert solution(\n    \"\"\"\n    10101010\n    10101010\n    10101010\n    10101010\n    10101010\n    10101010\n    10101010\n    10101010\n    10101010\n    \"\"\") == 0\nassert solution(\n    \"\"\"\n    1101\n    10101010\n    10101010\n    10101010\n    10101010\n    10101010\n    10101010\n    10101010\n    10101010\n    \"\"\") == 3\nassert solution(\n    \"\"\"\n    1101\n    10101010\n    10101010\n    10101010\n    10101010\n    10101010\n    10101010\n    10101010\n    10101010\n    \"\"\") == 2\n"
    },
    {
        "number": 3107,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output\nprint(\"Test cases passed.\")\n"
    },
    {
        "number": 3107,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1 1') == '1'\nassert solution('2 2 1') == '0'\nassert solution('3 3 1 3 1') == '1'\nassert solution('4 4 1 6 3 6') == '0'\nassert solution('5 5 1 7 3 7') == '1'\n"
    },
    {
        "number": 3107,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1\n''') == '''1\n0\n2\n'''\n\nassert solution('''2 1\n4 1 6 3 6\n7 3 4 2 6 5 6 1\n1 2\n''') == '''3\n0\n2\n'''\n\nassert solution('''3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1\n''') == '''1\n0\n2\n'''\n\nassert solution('''4 4\n1 1 2 1 2\n4 1 2 3 1\n2 1 2 1 3\n3 2 1 3 1\n1 1 2 3 3\n3 3 1 2 1\n2 1 3 1 2\n3 1 1\n''') == '''0\n0\n0\n'''\n\nassert solution('''5 5\n1 1 2 1 2\n5 1 2 3 1\n4 1 2 3 1\n2 1 2 1 3\n3 2 1 3 1\n1 1 2 3 3\n3 3 1 2 1\n2 1 3 1 2\n3 1 1\n''') == '''0\n0\n0\n'''"
    },
    {
        "number": 3107,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1\n''') == \"\"\"1\n0\n2\"\"\"\n\nassert solution('''4 4\n1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1"
    },
    {
        "number": 3107,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1\n''') == '1\\n0\\n2'\n\nassert solution('''\n4 4\n4 1 3 6 4\n1 3 3 1 5 3 4\n3 3 2 3 1 1\n1 2\n1 2\n1 3\n1 3\n1 2\n1 3\n''') == '2\\n0\\n0\\n1\\n0'\n\nassert solution('''\n2 2\n1 1\n2 1\n1 1\n''') == '0\\n1'\n\nassert solution('''\n3 3\n5 2 1\n6 1 4 1\n2 2\n2 3\n2 1\n3 1\n''') == '0\\n0\\n1'\n\nassert solution('''\n6 3\n5 1 2 5 4 1 3\n1 1 1 1 2 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '5\\n1\\n1\\n1\\n1\\n1'"
    },
    {
        "number": 3107,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2') == '1'\nassert solution('3 3') == '0'\nassert solution('3 1 3 1') == '1'\nassert solution('4 1 6 3 6') == '2'\nassert solution('7 3 4 2 6 5 6 1') == '3'\n"
    },
    {
        "number": 3107,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3 1\\n1 2\\n2 3\\n3 1\\n2 1\\n3 3 1 3 1\\n1 2\") == \"1\\n0\\n2\"\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 3107,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1\n''') == '''1\n0\n2'''\n\nassert solution('''2 1\n4 1 6 3 6\n7 3 4 2 6 5 6 1\n1 2\n''') == '''3\n0\n2'''\n"
    },
    {
        "number": 3107,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1\n''') == '1\\n0\\n2'\nassert solution('''5 5\n1\n2\n3\n4\n5\n6\n''') == '0\\n0\\n1\\n0\\n0'\nassert solution('''5 4\n1\n2\n3\n4\n5\n6\n7\n''') == '0\\n0\\n0\\n0\\n0'\nassert solution('''6 6\n1\n2\n3\n4\n5\n6\n7\n8\n9\n''') == '0\\n0\\n0\\n0\\n0\\n0'\nassert solution('''8 6\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n''') == '0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0'\n"
    },
    {
        "number": 3107,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"4 1 6 3 6\") == \"3\"\nassert solution(\"4 1 6 3 6\\n2 2 1\") == \"1\"\nassert solution(\"3 3\\n3 1 3 1\\n2 2 1\") == \"0\"\n"
    },
    {
        "number": 3108,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '4.000000'"
    },
    {
        "number": 3108,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 1\n1 2 3 4''') == '4.000000'\nassert solution('''4 2\n2 4 3 4''') == '3.666666'\nassert solution('''4 2\n2 4 3 4''') == '3.666666'\nassert solution('''4 3\n1 2 3 4''') == '2.000000'\nassert solution('''4 3\n1 1 1 1''') == '1.000000'\n"
    },
    {
        "number": 3108,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == '1.0'\nassert solution('1\\n1 2\\n1') == '2.0'\nassert solution('1\\n1 2 3\\n1') == '2.0'\nassert solution('1\\n1 2 3 4\\n1') == '2.0'\nassert solution('1\\n1 2 3 4 5\\n1') == '3.0'\n"
    },
    {
        "number": 3108,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == output\n"
    },
    {
        "number": 3108,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3108,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 1\\n1 2') == '2.000000'\nassert solution('1 1\\n1') == '1.000000'\nassert solution('2 1\\n2') == '2.000000'\nassert solution('1 1\\n1') == '1.000000'\nassert solution('1 1\\n2') == '2.000000'\n"
    },
    {
        "number": 3108,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '4.000000'\n"
    },
    {
        "number": 3108,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 1\n1 2 3 4''') == '4.000000'\nassert solution('''4 2\n2 4 3 4''') == '3.666666'\n"
    },
    {
        "number": 3108,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    stdin = \"\"\"4 1\n1 2 3 4\nSample Output 1\n4.000000\n\nSample Input 2\n4 2\n2 4 3 4\nSample Output 2\n3.666666\"\"\"\n) == \"4.000000\"\nassert solution(\n    stdin = \"\"\"4 2\n1 2 3 4\nSample Output 2\n3.666666\"\"\"\n) == \"3.666666\"\nassert solution(\n    stdin = \"\"\"10 3\n1 2 3 4 5 6 7 8 9 10\nSample Output 2\n6.75000\"\"\"\n) == \"6.75000\"\nassert solution(\n    stdin = \"\"\"10 3\n1 2 3 4 5 6 7 8 9 10\nSample Output 2\n6.75000\"\"\"\n) == \"6.75000\"\nassert solution(\n    stdin = \"\"\"4 5\n3 2 1 4\nSample Output 1\n4.000000\n\nSample Input 2\n5 4\n2 3 4 5 1\nSample Output 2\n3.50000\n\nSample Input 3\n5 5\n1 2 3 4 5\nSample Output 3\n5.000000\n\nSample Input 4\n6 3\n1 2 3 4 5 6\nSample Output 4\n4.000000\n\nSample Input 5\n5 5\n1 2 3 4 5\nSample Output 5\n4.000000\n\nSample Input 6\n5 4\n1 2 3 4 5\nSample Output 6\n4.000000\"\"\"\n) == \"4.000000\"\n"
    },
    {
        "number": 3108,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1') == '2.000000'\nassert solution('2 2') == '1.000000'\nassert solution('3 3') == '0.000000'\nassert solution('1 1 1') == '1.000000'\nassert solution('3 2') == '0.000000'\n"
    },
    {
        "number": 3109,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0') == '0.750'\nassert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0') == '0.625'\n\"\"\""
    },
    {
        "number": 3109,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.0 0.0\n0.0 2.0''') == '0.750'\nassert solution('''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0''') == '0.625'\nassert solution('''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n2.0 0.0\nSample Output 2:\n0.625\nassert solution('''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n2.0 0.0\nSample Output 3:\n0.875\nassert solution('''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n2.0 2.0\nSample Output 4:\n0.875\n"
    },
    {
        "number": 3109,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\\n') == '0.750'\nassert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\\n') == '0.625'\nassert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\\n') == '0.125'\nassert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\\n') == '0.250'\nassert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 1.0\\n0.0 2.0\\n') == '1.125'\n"
    },
    {
        "number": 3109,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1 2 2') == '0.750'\nassert solution('1 1 3 2') == '0.750'\nassert solution('1 1 4 3') == '0.750'\nassert solution('1 1 4 3') == '0.750'\nassert solution('1 1 4 2') == '0.750'\n"
    },
    {
        "number": 3109,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.0 0.0\n0.0 2.0''') == '0.750'\nassert solution('''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0''') == '0.625'\nassert solution('''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 1.0\n1.0 0.0''') == '0.0'\nassert solution('''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.0 1.0\n0.0 2.0''') == '0.0'\nassert solution('''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 1.0''') == '0.0'\n"
    },
    {
        "number": 3109,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\\n') == '0.750'\nassert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\\n') == '0.625'\nassert solution('1 1 1 1\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0"
    },
    {
        "number": 3109,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0') == '0.750'\nassert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0') == '0.625'\nassert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n2.5 0.0\\n0.0 2.0') == '0.750'\nassert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n2.5 0.0\\n0.0 2.0') == '0.750'\nassert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n3.5 0.0\\n0.0 2.0') == '0.750'\n"
    },
    {
        "number": 3109,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0 0 5 5\") == \"0.750\"\nassert solution(\"1 1 1 1\") == \"0.000\"\nassert solution(\"0 0 5 5\") == \"0.750\"\nassert solution(\"1 1 1 1\") == \"0.000\"\nassert solution(\"0 0 5 5\") == \"0.750\"\n"
    },
    {
        "number": 3109,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3109,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2 5 5') == '0.750'\nassert solution('2 2 5 5') == '0.750'\nassert solution('2 2 5 5') == '0.750'\nassert solution('2 2 5 5') == '0.750'\nassert solution('2 2 5 5') == '0.750'\n"
    },
    {
        "number": 3110,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\n1 2 4\n0 3 6\n4 0 3\n''') == '2'\nassert solution('''\n4 4\n1 2 3 4\n0 0 2 3\n1 1 1 3\n''') == '9'\nassert solution('''\n4 4\n2 3 0 7\n0 0 2 1\n0 0 3 0\n''') == '37'\n'''\n"
    },
    {
        "number": 3110,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''3 3\n1 2 4\n0 3 6\n4 0 3''') == '2'\nassert solution('''4 4\n2 3 0 7\n0 0 2 1\n0 0 3 0''') == '37'\n"
    },
    {
        "number": 3110,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n1 2 4\\n0 3 6\\n4 0 3\") == \"2\"\nassert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == \"2\"\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == \"37\"\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == \"37\"\nassert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == \"2\"\n"
    },
    {
        "number": 3110,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''3 3\n1 2 4\n0 3 6\n4 0 3\n''') == '2'\n\nassert solution(\n'''3 4\n2 3 0 7\n0 0 2 1\n0 0 3 0\n''') == '37'\n\nassert solution(\n'''3 3\n2 3 0 7\n0 0 2 1\n0 0 3 0\n''') == '37'\n'''"
    },
    {
        "number": 3110,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 2 3 4 5') == '5'\nassert solution('0 0 2 1') == '37'\nassert solution('1 2 3 4 5') == '1'\nassert solution('1 2 3 4') == '0'\nassert solution('1 2 3') == '0'\n"
    },
    {
        "number": 3110,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1') == '0'\nassert solution('1 1\\n0 0 2 1\\n0 0 3 0') == '37'\nassert solution('3 3\\n1 2 4\\n0 3 6\\n4 0 3') == '2'\nassert solution('3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0') == '37'\nassert solution('1 1\\n0 0 2 1\\n0 0 3 0') == '0'\n"
    },
    {
        "number": 3110,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3\\n4 0 3\\n0 1 2\\n3 4 0\\n0 0 2 1\\n0 0 3 0') == '2\\n'\nassert solution('2 3\\n0 0 2 1\\n0 0 3 0\\n0 0 3 0') == '37\\n'\nassert solution('3 3\\n1 2 4\\n0 3 6\\n4 0 3\\n0 0 3') == '2\\n'\n\"\"\"\n"
    },
    {
        "number": 3110,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n2 1\") == \"0\"\nassert solution(\"2 2\\n3 2\") == \"0\"\nassert solution(\"2 3\\n4 3\") == \"6\"\nassert solution(\"3 3\\n2 3\\n0 3\") == \"15\"\nassert solution(\"3 3\\n4 3\\n2 3\") == \"25\"\n"
    },
    {
        "number": 3110,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 3\n1 2 4\n0 3 6\n4 0 3''') == '2'\nassert solution('''3 4\n2 3 0 7\n0 0 2 1\n0 0 3 0''') == '37'\n'''\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 3110,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '37'\n\n-------------------------------------------------------------------------"
    },
    {
        "number": 3111,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 3\\n1 4\\n1 4\\n1 4\\n1 4\") == '1\\n4\\n9\\n16'\nassert solution(\"1 4\\n1 4\\n1 4\\n1 4\") == '1\\n4\\n9\\n16'\nassert solution(\"1 1\\n1 2\\n1 3\\n1 4\") == '1\\n4\\n9'"
    },
    {
        "number": 3111,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 3\\n1234\\n1 4\\n1 4\\n1 4\\n') == '10\\n14\\n18\\n'\nassert solution('3 3\\n1 1\\n1 2\\n1 3\\n1 4\\n') == '1\\n4\\n9\\n16\\n'\nassert solution('4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\\n') == '1\\n4\\n9\\n16\\n'\nassert solution('4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\\n') == '1\\n4\\n9\\n16\\n'\nassert solution('4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\\n') == '1\\n4\\n9\\n16\\n'\n"
    },
    {
        "number": 3111,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 3\\n1234\\n1 4\\n1 4\\n1 4\\n') == '10\\n14\\n18\\n'\nassert solution('10 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\\n') == '1\\n4\\n9\\n16\\n'\nassert solution('4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\\n') == '1\\n4\\n9\\n16\\n'\nassert solution('7 3\\n24342\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n1 16\\n1 17\\n1 18\\n1 19\\n1 20\\n1 21\\n1 22\\n1 23\\n1 24\\n1 25\\n1 26\\n1 27\\n1 28\\n1 29\\n1 30\\n1 31\\n1 32\\n1 33\\n1 34\\n1 35\\n1 36\\n1 37\\n1 38\\n1 39\\n1 40\\n1 41\\n1 42\\n1 43\\n1 44\\n1 45\\n1 46\\n1 47\\n1 48\\n1 49\\n1 50\\n1 51\\n1 52\\n1 53\\n1 54\\n1 55\\n1 56\\n1 57\\n1 58\\n1 59\\n1 60\\n1 61\\n1 62\\n1 63\\n1 64\\n1 65\\n1 66\\n1 67\\n1 68\\n1 69\\n1 70\\n1 71\\n1 72\\n1 73\\n1 74\\n1 75\\n1 76\\n1 77\\n1 78\\n1 79\\n1 80\\n1 81\\n1 82\\n1 83\\n1 84\\n1 85\\n1 86\\n1 87\\n1 88\\n1 89\\n1 90\\n1 91\\n1 92\\n1 93\\n1 94\\n1 95\\n1 96\\n1 97\\n1 98\\n1 99\\n1 100\\n1 101\\n1 102\\n1 103\\n1 104\\n1 105\\n1 106\\n1 107\\n1 108\\n1 109\\n1 110\\n1 111\\n1 112\\n1 113\\n1 114\\n1 115\\n1 116\\n1 117\\n1 118\\n1 119\\n1 120\\n1 121\\n1 122\\n1 123\\n1 124\\n1 125\\n1 126\\n1 127\\n1 128\\n1 129\\n1 130\\n1 131\\n1 132\\n1 133\\n1 134\\n1 135\\n1 136\\n1 137\\n1 138\\n1 139\\n1 140\\n1 141\\n1 142\\n1 143\\n1 144\\n1 145\\n1 146\\n1 147\\n1 148\\n1 149\\n1 150\\n1 151\\n1 152\\n1 153\\n1 154\\n1 155\\n1 156\\n1 157\\n1 158\\n1 159\\n1 160\\n1 161\\n1 162\\n1 163\\n1 164\\n1 165\\n1 166\\n1 167\\n1 168\\n1 169\\n1 170\\n1 171\\n1 172\\n1 173\\n1 174\\n1 175\\n1 176\\n1 177\\n1 178\\n1 179\\n1 180\\n1 181\\n1 182\\n1 183\\n1 184\\n1 185\\n1 186\\n1 187\\n1 188\\n1 189\\n1 190\\n1 191\\n1 192\\n1 193\\n1 194\\n1 195\\n1 196\\n1 197\\n1 198\\n1 199\\n1 200\\n1 201\\n1 202\\n1 203\\n1 204\\n1 205\\n1 206\\n1 207\\n1 208\\n1 209\\n1 210\\n1 211\\n1 212\\n1 213\\n1 214\\n1 215\\n1 216\\n1 217\\n1 218\\n1 219\\n1 220\\n1 221\\n1 222\\n1 223\\n1 224\\n1 225\\n1 226\\n1 227\\n1 228\\n1 229\\n1 230\\n1 231\\n1 232\\n1 233\\n1 234\\n1 235\\n1 236\\n1 237\\n1 238\\n1 239\\n1 240\\n1 241\\n1 242\\n1 243\\n1 244\\n1 245\\n1 246\\n1 247\\n1 248\\n1 249\\n1 250\\n1 251\\n1 252\\n1 253\\n1 254\\n1 255\\n1 256\\n1 257\\n1 258\\n1 259\\n1 260\\n1 261\\n1 262\\n1 263\\n1 264\\n1 265\\n1 266\\n1 267\\n1 268\\n1 269\\n1 270\\n1 271\\n1 272\\n1 273\\n1 274\\n1 275\\n1 276\\n1 277\\n1 278\\n1 279\\n1 280\\n1 281\\n1 282\\n1 283\\n1 284\\n1 285\\n1 286\\n1 287\\n1 288\\n1 289\\n1 290\\n1 291\\n1 292\\n1 293\\n1 294\\n1 295\\n1 296\\n1 297\\n1 298\\n1 299\\n1 300\\n1 301\\n1 302\\n1 303\\n1 304\\n1 305\\n1 306\\n1 307\\n1 308\\n1 309\\n1 310\\n1 311\\n1 312\\n1 313\\n1 314\\n1 315\\n1 316\\n1 317\\n1 318\\n1 319\\n1 320\\n1 321\\n1 322\\n1 323\\n1 324\\n1 325\\n1 326\\n1 327\\n1 328\\n1 329\\n1 330\\n1 331\\n1 332\\n1 333\\n1 334\\n1 335\\n1 336\\n1 337\\n1 338\\n1 339\\n1 340\\n1 341\\n1 342\\n1 343\\n1 344\\"
    },
    {
        "number": 3111,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3111,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''4 3\n1234\n1 4\n1 4\n1 4\n''') == '10\\n14\\n18\\n'\nassert solution(\n'''4 3\n123\n1 4\n1 4\n1 4\n''') == '1\\n4\\n9\\n16\\n'\nassert solution(\n'''5 5\n1110\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n''') == '1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n'\n"
    },
    {
        "number": 3111,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 3\\n1234\\n1 4\\n1 4\\n1 4\\n') == '10\\n14\\n18'\nassert solution('4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\\n') == '1\\n4\\n9\\n16'\nassert solution('2 2\\n2 2\\n2 2\\n2 2\\n2 2') == '2'\nprint(solution('4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\\n'))\n"
    },
    {
        "number": 3111,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3111,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '1\\n4\\n9\\n16\\n'\n"
    },
    {
        "number": 3111,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\\n\") == \"10\\n14\\n18\"\nassert solution(\"4 3\\n1 1\\n1 2\\n1 3\\n1 4\\n\") == \"1\\n4\\n9\\n16\"\nassert solution(\"1 1\\n1 2\\n1 3\\n1 4\\n\") == \"1\\n4\\n9\\n16\"\nassert solution(\"1 1\\n1 2\\n1 3\\n1 4\\n\") == \"1\\n4\\n9\\n16\"\nassert solution(\"1 1\\n1 2\\n1 3\\n1 4\\n\") == \"1\\n4\\n9\\n16\"\n"
    },
    {
        "number": 3111,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2\\n1 3\\n1 4') == '1\\n4\\n9\\n16'\nassert solution('2 2\\n1 2\\n1 2') == '1\\n4\\n9\\n16'\nassert solution('4 4\\n1 1\\n1 2\\n1 3\\n1 4') == '1\\n4\\n9\\n16'\nassert solution('4 4\\n1 1\\n1 2\\n1 3\\n1 4') == '1\\n4\\n9\\n16'\nassert solution('4 4\\n1 1\\n2 2\\n1 3\\n1 4') == '1\\n4\\n9\\n16'\n"
    },
    {
        "number": 3112,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\\n1 3\\n2 3\\n3 4\\n1 4\\n1 5\") == \"2\"\nassert solution(\"2 2 3\\n1 3\\n2 3\\n3 4\\n4 5\\n1 5\") == \"1\"\nassert solution(\"4 4 5\\n1 3\\n3 4\\n2 4\\n4 5\") == \"1\"\nassert solution(\"5 5 4\\n1 3\\n3 4\\n2 4\\n4 5\") == \"2\"\nassert solution(\"5 2 4\\n1 3\\n3 4\\n2 4\\n4 5\") == \"1\"\n"
    },
    {
        "number": 3112,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 3112,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\n\"\"\"\n\nfrom __future__ import print_function\nfrom collections import defaultdict\nfrom functools import lru_cache\n"
    },
    {
        "number": 3112,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 2 3\n1 3\n2 3\n3 4''') == '2'\nassert solution('''5 2 4\n1 3\n3 4\n2 4\n4 5''') == '1'\nassert solution('''7 2 4\n1 3\n3 4\n2 4\n4 5\n5 6\n6 7''') == '1'\nassert solution('''7 2 4\n1 3\n3 4\n2 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12''') == '1'\nassert solution('''6 2 4\n1 3\n3 4\n2 4\n4 5\n5 6\n6 7''') == '0'\n"
    },
    {
        "number": 3112,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 3 2') == '2'\nassert solution('5 2 4') == '1'\nassert solution('8 2 6') == '4'\nassert solution('5 8 6') == '4'\nassert solution('2 1') == '1'\n"
    },
    {
        "number": 3112,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"\"\"[Hint](https://www.codewars.com/kata/factory-design)\"\"\"\n"
    },
    {
        "number": 3112,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"4 2 3\n1 3\n2 3\n3 4\n\"\"\") == \"2\"\nassert solution(\"\"\"5 2 4\n1 3\n3 4\n2 4\n4 5\n\"\"\") == \"1\"\nassert solution(\"\"\"9 9 9\n1 9\n1 2\n1 1\n2 2\n2 1\n2 1\n3 3\n3 1\n1 1\n4 4\n4 3\n3 3\n1 1\n\"\"\") == \"9\"\nassert solution(\"\"\"9 9 9\n1 9\n1 2\n1 1\n2 2\n2 1\n2 1\n3 3\n3 1\n1 1\n4 4\n4 3\n3 3\n1 1\n\"\"\") == \"1\"\nassert solution(\"\"\"9 9 9\n1 9\n1 2\n1 1\n2 2\n2 1\n2 1\n3 3\n3 1\n1 1\n4 4\n4 3\n3 3\n1 1\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3112,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input(\"\")) == None\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 3112,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '1'\nassert solution(stdin) == '2'\nassert solution(stdin) == '1'\nassert solution(stdin) == '2'\nassert solution(stdin) == '1'\n"
    },
    {
        "number": 3112,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 2 3\n1 3\n2 3\n3 4''') == '2'\nassert solution('''5 2 4\n1 3\n3 4\n2 4\n4 5''') == '1'\nprint('passed')'''\n"
    },
    {
        "number": 3113,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''1\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0\n''') == 'no'\n\nassert solution(\n'''1\n9999 0 10000 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\n''') == 'yes'\n"
    },
    {
        "number": 3113,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\\n9999 0 10000 0 0 1\\n9999 0 10000 0 0 1\\n\") == \"no\"\nassert solution(\"1000 0 1000 10000 0 10000\\n0 0 0 1000 1000 0\\n0 0 0 1000 1000 0\\n0 0 0 1000 1000 0\\n0 0 0 1000 1000 0\\n0 0 0 1000 1000 0\\n0 0 0 1000 1000 0\\n0 0 0 1000 1000 0\\n\") == \"yes\"\nassert solution(\"1000 0 1000 10000 0 10000\\n9997 0 10000 0 0 1\\n0 0 0 1000 1000 0\\n9999 0 10000 0 0 1\\n9998 0 10000 0 0 1\\n\") == \"no\"\nassert solution(\"1000 0 1000 10000 0 10000\\n9997 0 10000 0 0 1\\n0 0 0 1000 1000 0\\n9999 0 10000 0 0 1\\n9998 0 10000 0 0 1\\n\") == \"yes\"\nassert solution(\"1000 0 1000 10000 0 10000\\n9997 0 10000 0 0 1\\n0 0 0 1000 1000 0\\n9999 0 10000 0 0 1\\n9998 0 10000 0 0 1\\n\") == \"no\"\n"
    },
    {
        "number": 3113,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0\n''') == 'no'\nassert solution('''1\n9996 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\n''') == 'yes'\n'''\n"
    },
    {
        "number": 3113,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0\n''') == 'no'\nassert solution('''1\n99990 0 99997 0 0 1\n99990 0 10000 0 0 1\n2\n99990 0 99997 0 0 1\n99990 0 10000 0 0 1\n''') == 'yes'\nassert solution('''1\n0 0 0 1000 1000 0\n0 0 0 1000 1000 0\n2\n0 0 0 1000 1000 0\n0 0 0 1000 1000 0\n''') == 'no'\nassert solution('''1\n9996 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\n''') == 'yes'\nassert solution('''1\n9996 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\n''') == 'no'\n"
    },
    {
        "number": 3113,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0\n''') == 'no'\nassert solution('''2\n9996 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\n''') == 'yes'\nassert solution('''3\n9996 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\n3\n999 0 999 0 0 1\n998 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0"
    },
    {
        "number": 3113,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(open(\"test_file.txt\").read()) == \"no\"\nassert solution(open(\"test2_file.txt\").read()) == \"yes\"\n\n----- Explanation -----\nThe skyline of the first example is shown in the image below. The skyline of the second example is shown in the image below.\n\nPossible ways to represent the union of the two cloud coverings:\n\n$\\{(0, 0), (0, 1000), (0, 2000), (1000, 0), (1000, 1000), (1000, 2000), (2000, 0), (2000, 1000), (2000, 2000), (3000, 0), (3000, 1000), (3000, 2000), (5000, 0), (5000, 1000), (5000, 2000)}$\n$\\{(0, 0), (0, 1000), (0, 2000), (1000, 0), (1000, 1000), (1000, 2000), (2000, 0), (2000, 1000), (2000, 2000), (3000, 0), (3000, 1000), (3000, 2000), (5000, 0), (5000, 1000), (5000, 2000)}$\n$\\{(0, 0), (0, 1000), (0, 2000), (1000, 0), (1000, 1000), (1000, 2000), (2000, 0), (2000, 1000), (2000, 2000), (3000, 0), (3000, 1000), (3000, 2000), (5000, 0), (5000, 1000), (5000, 2000), (6000, 0), (6000, 1000), (6000, 2000), (7000, 0), (7000, 1000), (7000, 2000), (8000, 0), (8000, 1000), (8000, 2000), (9000, 0), (9000, 1000), (9000, 2000)}$\n$\\{(0, 0), (0, 1000), (0, 2000), (1000, 0), (1000, 1000), (1000, 2000), (2000, 0), (2000, 1000), (2000, 2000), (3000, 0), (3000, 1000), (3000, 2000), (5000, 0), (5000, 1000), (5000, 2000), (6000, 0), (6000, 1000), (6000, 2000), (7000, 0), (7000, 1000), (7000, 2000), (8000, 0), (8000, 1000), (8000, 2000), (9000, 0), (9000, 1000), (9000, 2000)}$\n\nBecause no triangles from the second example intersects with any of the first example\u2019s triangles, the answer is \u201cno\u201d.\n"
    },
    {
        "number": 3113,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0\n''') == 'no'\nassert solution('''1\n9996 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\n''') == 'no'\nassert solution('''1\n1000 0 1000 0 0 1\n9998 0 10000 0 0 1\n2\n1000 0 1000 0 0 1\n9998 0 10000 0 0 1\n''') == 'yes'\nassert solution('''2\n9996 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\n''') == 'yes'\n"
    },
    {
        "number": 3113,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0\n''') == 'no'\nassert solution('''2\n9996 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\n''') == 'yes'\n\nprint('solution')\n"
    },
    {
        "number": 3113,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0\n''') == 'no'\nassert solution('''1\n9996 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\n''') == 'no'\n\nassert solution('''1\n3\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0\n''') == 'yes'\nassert solution('''1\n3\n9999 0 10000 10000 10000 0 10000\n3\n9999 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0\n''') == 'no'\nassert solution('''1\n3\n9999 0 10000 10000 10000 0 10000\n3\n9999 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0\n''') == 'yes'\n"
    },
    {
        "number": 3113,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\") == \"no\"\nassert solution(\"1\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\") == \"no\"\nassert solution(\"1\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\") == \"no\"\nassert solution(\"1\\n0 0 0 1000 1000 0\\n0 0 0 1000 1000 0\\n2\\n0 0 0 1000 1000 0\\n0 0 0 1000 1000 0\") == \"yes\"\nassert solution(\"1\\n0 0 0 1000 1000 0\\n0 0 0 1000 1000 0\\n2\\n0 0 0 1000 1000 0\\n0 0 0 1000 1000 0\") == \"yes\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n1 2\n2 3\n1 3\n''') == \"YES\"\nassert solution('''4 3\n1 2\n1 3\n1 4\n2 3\n''') == \"NO\"\nassert solution('''3 4\n1 2\n2 3\n1 3\n1 4\n''') == \"YES\"\nassert solution('''3 4\n1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n3 4\n''') == \"NO\"\nassert solution('''3 4\n1 2\n1 3\n1 4\n2 3\n1 2\n1 3\n1 4\n''') == \"YES\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 3114,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n2 3\\n1 3\\n\") == \"YES\\n1 3\\n2 1\\n3 2\\n\"\nassert solution(\"1 2\\n2 3\\n3 1\") == \"NO\\n\"\nassert solution(\"2 3\\n3 1\\n1 2\\n\") == \"NO\\n\"\nassert solution(\"1 2\\n3 1\\n2 3\\n\") == \"NO\\n\"\nassert solution(\"1 2\\n2 3\\n2 1\\n\") == \"NO\\n\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n2 3\\n1 3\") == \"YES\\n1 3\\n2 1\"\nassert solution(\"1 2\\n2 3\\n2 1\") == \"NO\"\nassert solution(\"1 2\\n2 3\") == \"NO\"\nassert solution(\"1 2\\n1 3\") == \"NO\"\nassert solution(\"2 3\\n1 3\") == \"NO\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(open(\"/home/prajna/code/github/Coursera/Algorithmic Thinking/Week2/test_cases/1.in\").read()) == 'YES'\nassert solution(open(\"/home/prajna/code/github/Coursera/Algorithmic Thinking/Week2/test_cases/2.in\").read()) == 'NO'\nassert solution(open(\"/home/prajna/code/github/Coursera/Algorithmic Thinking/Week2/test_cases/3.in\").read()) == 'NO'\nassert solution(open(\"/home/prajna/code/github/Coursera/Algorithmic Thinking/Week2/test_cases/4.in\").read()) == 'YES'\nassert solution(open(\"/home/prajna/code/github/Coursera/Algorithmic Thinking/Week2/test_cases/5.in\").read()) == 'YES'\n"
    },
    {
        "number": 3114,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"YES\"\nassert solution(\"3 3\") == \"NO\"\nassert solution(\"4 5\") == \"NO\"\nassert solution(\"3 4\") == \"YES\"\nassert solution(\"4 4\") == \"YES\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n1 2\") == \"YES\"\nassert solution(\"1 1\\n1 2\") == \"NO\"\nassert solution(\"3 4\\n1 2\\n2 3\\n1 3\") == \"NO\"\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n4 1\") == \"YES\"\nassert solution(\"2 4\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n4 1\") == \"NO\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3114,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"3 3\n1 2\n2 3\n1 3\"\"\"\n) == \"\"\"YES\n1 3\n2 1\n3 2\"\"\"\n\nassert solution(\n    \"\"\"4 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\"\"\"\n) == \"\"\"NO\"\"\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50') == 'YES'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n448\\n449\\n450\\n451\\n452\\n453\\n454\\n455\\n456\\n457\\n458\\n459\\n460\\n461\\n462\\n463\\n464\\n465\\n466\\n467\\n468\\n469\\n470\\n471\\n472\\n473\\n474\\n475\\n476\\n477\\n478\\n479\\n480\\n481\\n482\\n483\\n484\\n485\\n486\\n487\\n488\\n489\\n490\\n491\\n492\\n493"
    },
    {
        "number": 3115,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"inconsistent\"\nassert solution(\"1 1\") == \"consistent\"\nassert solution(\"1 1\") == \"inconsistent\"\nassert solution(\"3 2\") == \"consistent\"\nassert solution(\"0 1\") == \"inconsistent\"\n"
    },
    {
        "number": 3115,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 3\\n0 > 1\\n1 = 2\\n0 = 2') == 'inconsistent'\nassert solution('3 3\\n0 > 1\\n1 = 2\\n0 = 2') == 'consistent'\nassert solution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\\nSample Output 2:') == 'inconsistent'\nassert solution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\\nSample Output 2:') == 'consistent'\nassert solution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\\nSample Output 2:') == 'inconsistent'\n"
    },
    {
        "number": 3115,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input1) == 'inconsistent'\nassert solution(input2) == 'consistent'\n"
    },
    {
        "number": 3115,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''0>1\n1=2\n0=2''') == 'consistent'\nassert solution('''1>1\n1=2\n3=4\n0>3\n1>4''') == 'consistent'\nassert solution('''0>1\n1=2\n0=2\n3=4\n1>4''') == 'consistent'\nassert solution('''2>2\n1=1\n2=2\n1=1\n2>2''') == 'consistent'\nassert solution('''0>1\n1=2\n1>2\n2>1\n0>3\n1>4''') == 'inconsistent'\n"
    },
    {
        "number": 3115,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 3\n0 > 1\n1 = 2\n0 = 2''') == 'inconsistent'\nassert solution('''3 3\n0 = 1\n1 = 2\n3 = 4\n0 > 3\n1 > 4''') == 'consistent'\nassert solution('''6 5\n0 = 1\n1 = 2\n3 = 4\n0 > 3\n1 > 4''') == 'inconsistent'\nassert solution('''6 5\n0 = 1\n1 = 2\n3 = 4\n0 = 3\n1 > 4\nSample Output 3:\ninconsistent\n''') == 'consistent'\nassert solution('''3 3\n0 = 1\n1 = 2\n3 = 4\n0 > 3\n1 = 4\nSample Output 4:\nconsistent\n''') == 'consistent'\n"
    },
    {
        "number": 3115,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3115,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 3\n0 > 1\n1 = 2\n0 = 2''') == 'inconsistent'\nassert solution('''5 5\n0 = 1\n1 = 2\n3 = 4\n0 > 3\n1 > 4''') == 'consistent'\nassert solution('''2 3\n0 = 1\n1 = 2\n3 = 4\n0 > 3\n1 = 2''') == 'consistent'\nassert solution('''10 10\n0 = 1\n1 = 2\n3 = 4\n0 > 3\n1 > 4\n9 = 8\n3 = 7\n8 = 6\n4 = 5\n7 = 4\n6 = 3\n5 = 2\n2 = 1\n1 = 0''') == 'consistent'\nassert solution('''10 10\n1 = 2\n3 = 4\n0 > 3\n1 = 2\n9 = 8\n3 = 7\n8 = 6\n4 = 5\n7 = 4\n6 = 3\n5 = 2\n2 = 1\n1 = 0''') == 'inconsistent'\n"
    },
    {
        "number": 3115,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"inconsistent\"\n"
    },
    {
        "number": 3115,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"consistent\"\nassert solution(\"2 2\") == \"consistent\"\nassert solution(\"5 5\") == \"inconsistent\"\nassert solution(\"5 4\") == \"inconsistent\"\nassert solution(\"1 2\") == \"inconsistent\"\n"
    },
    {
        "number": 3115,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n0 = 1\") == \"consistent\"\nassert solution(\"2 2\\n0 = 1\\n1 = 2\") == \"inconsistent\"\nassert solution(\"2 2\\n0 = 1\\n1 = 2\\n1 > 0\") == \"inconsistent\"\nassert solution(\"2 2\\n0 = 1\\n1 = 2\\n0 > 1\") == \"consistent\"\nassert solution(\"2 2\\n0 = 1\\n1 = 2\\n0 > 1\\n1 = 2\\n0 > 1\") == \"consistent\"\n"
    },
    {
        "number": 3116,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1 1 0\\n0 0 0\\n0 0 1') == 1.57079633\nassert solution('2\\n-1 -1 -1\\n-1 1 -1\\n-1 -1 1\\n1 -1 -1\\n1 1 1') == 2.2250738585072014\nassert solution('3\\n-1 -1 -1\\n-1 -1 1\\n-1 1 -1\\n-1 1 1') == 2.09493107856876\nassert solution('4\\n-1 -1 -1\\n-1 -1 1\\n-1 1 -1\\n-1 1 1\\n1 -1 -1\\n1 1 1') == 1.6314775643924194\nassert solution('5\\n1 -1 -1\\n1 -1 1\\n1 1 -1\\n1 1 1\\n1 -1 -1') == 1.8294599666497498\n"
    },
    {
        "number": 3116,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n0 0 0\") == \"1.57079633\"\nassert solution(\"1\\n1 1 0\") == \"1.57079633\"\nassert solution(\"1\\n1 1 1\") == \"3.14159265\"\nassert solution(\"2\\n-100 0 0\\n10 0 10\") == \"41938.65135885\"\n"
    },
    {
        "number": 3116,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n1 0 0\n1 1 0\n0 0 0\n0 0 1''') == '1.57079633'\nassert solution('''4\n-100 0 0\n10 0 10\n-10 -10 -10\n0 0 0\n''') == '41938.65135885'\n"
    },
    {
        "number": 3116,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output\nprint(f\"Correct solution: {expected_output}\")"
    },
    {
        "number": 3116,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n0 0 0\\n1 1 0\\n0 0 0\\n0 0 1') == '1.57079633'\nassert solution('2\\n-10 -10 -10\\n0 0 0\\n0 0 1') == '41938.65135885'\nassert solution('3\\n10 -10 -10\\n10 10 -10\\n-10 10 10') == '45917.39025293'\nassert solution('4\\n10 -10 -10\\n10 10 -10\\n-10 10 10\\n0 0 0') == '45917.39025293'\nassert solution('5\\n10 -10 -10\\n10 10 -10\\n-10 10 10\\n0 0 0\\n0 0 1') == '83119.02975293'\n"
    },
    {
        "number": 3116,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n4\n1 0 0\n1 1 0\n0 0 0\n0 0 1\n\"\"\"\n) == \"1.57079633\"\n\nassert solution(\n\"\"\"\n4\n-100 0 0\n10 0 10\n-10 -10 -10\n0 0 0\n\"\"\"\n) == \"41938.65135885\"\n"
    },
    {
        "number": 3116,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"1.57079633\"\nassert solution(\"5\") == \"3.141593\"\nassert solution(\"6\") == \"5.1961524\"\nassert solution(\"7\") == \"7.6774934\"\nassert solution(\"8\") == \"11.047309\"\n"
    },
    {
        "number": 3116,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n1 0 0\n1 1 0\n0 0 0\n0 0 1''') == '1.57079633'\nassert solution('''4\n-100 0 0\n10 0 10\n-10 -10 -10\n0 0 0\nSample Output 2:\n41938.65135885''') == '41938.65135885'\nassert solution('''5\n1 1 1\n1 1 -1\n-1 1 1\n1 -1 -1\n-1 -1 -1\nSample Output 2:\n0.14285714''') == '0.14285714'\nassert solution('''2\n-1 0 0\n-1 -1 -1\nSample Output 2:\n0''') == '0'\nassert solution('''2\n-1 -1 -1\n-1 1 1\nSample Output 2:\n0''') == '0'\n"
    },
    {
        "number": 3116,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input(1) == '1.57079633')\nassert solution(input(2) == '41938.65135885')"
    },
    {
        "number": 3116,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('3') == None\nassert solution('5') == None\nassert solution('5 2 1') == None\n"
    },
    {
        "number": 3117,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('11\\nabcabcfabc') == '3'\nassert solution('18\\ntrutrutiktiktappop') == '4'\nassert solution('12\\ntrutrutiktiktappop') == '0'\nassert solution('25\\nabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabce') == 'abcdabcdabcd'\nassert solution('13\\nacbabcbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbac"
    },
    {
        "number": 3117,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('11\\nsabcabcfabc') == '3'\nassert solution('18\\ntrutrutiktiktappop') == '4'\nassert solution('11\\ntrutrutiktiktappop') == '4'\nassert solution('11\\nsabcabcfabc') == '3'\nassert solution('18\\ntrutrutiktiktappop') == '4'\n"
    },
    {
        "number": 3117,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''11\nabcabcfabc''') == '3'\nassert solution('''18\ntrutrutiktiktappop''') == '4'\nassert solution('''15\nxyzzy''') == '0'\nassert solution('''13\nxxyy''') == '2'\nassert solution('''14\nxyzzy''') == '2'\n"
    },
    {
        "number": 3117,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"a\") == \"0\"\nassert solution(\"abc\") == \"0\"\nassert solution(\"abcc\") == \"2\"\nassert solution(\"abcddc\") == \"3\"\nassert solution(\"trutrutiktiktappop\") == \"4\"\n"
    },
    {
        "number": 3117,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('11\\nsabcabcfabc') == '3'\nassert solution('18\\ntrutrutiktiktappop') == '4'\n"
    },
    {
        "number": 3117,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '2'\n\n\"\"\"\n"
    },
    {
        "number": 3117,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3117,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\nab') == '0'\nassert solution('2\\nabcd') == '0'\nassert solution('3\\nabc') == '0'\nassert solution('4\\nabc') == '0'\nassert solution('5\\nabc') == '0'\n"
    },
    {
        "number": 3117,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''11\nsabcabcfabc\n''') == '3'\nassert solution('''18\ntrutrutiktiktappop\n''') == '4'\nassert solution('''21\nhfkfjgfjkgjhkfgkjhfkfgjhfjkgjhkfkfjhkfjkgjhkfjgkfjk\n''') == '6'\nassert solution('''21\ntk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk t"
    },
    {
        "number": 3117,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output\nprint('Passed!')\n"
    },
    {
        "number": 3118,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n3\n2 3 1\n3 1 2\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n10\n3 1 4 5 6 7 8 9 10\n5 4 3 2 1 6 7 8 9 10\n\"\"\"\n) == \"9\"\n"
    },
    {
        "number": 3118,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3118,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 3 1\\n3 1 2\") == \"2\"\nassert solution(\"2\\n2 3 1\\n3 1 2\") == \"4\"\nassert solution(\"2\\n3 1 2\\n3 1 2\") == \"3\"\nassert solution(\"4\\n1 2 3 4\\n2 1 3 4\\n3 4 1 2\\n4 3 1 2\\n\") == \"10\"\nassert solution(\"5\\n1 2 3 4 5\\n2 1 3 4 5\\n3 4 5 1 2\\n4 5 1 2 3\\n5 1 2 3 4\\n\") == \"18\"\n"
    },
    {
        "number": 3118,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3') == '2'\nassert solution('1') == '1'\nassert solution('6') == '5'\nassert solution('2') == '2'\nassert solution('3') == '3'\n"
    },
    {
        "number": 3118,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n3\\n2 3 1') == '2'\nassert solution('1\\n2 3 1') == 'huge'\nassert solution('1\\n2 1 3') == 'huge'\nassert solution('1\\n2 3 1') == 'huge'\nassert solution('3\\n1 3 2') == '2'\n"
    },
    {
        "number": 3118,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n2 3 1\n3 1 2\n''') == '2'\n\nassert solution('''6\n5 1 6 3 2 4\n4 6 5 1 3 2\n''') == '5'\n\nassert solution('''5\n5 1 4 2 3\n4 1 2 3 5\n''') == '1'\n\nassert solution('''6\n5 1 4 3 2 5\n4 1 2 3 4 5\n''') == '1'\n\nassert solution('''6\n5 1 4 3 2 5\n4 1 2 3 4 5\n''') == '2'"
    },
    {
        "number": 3118,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\\n2 3 1\\n3 1 2\") == \"2\"\nassert solution(\"3\\n3 1 2\\n3 1 2\") == \"huge\"\nassert solution(\"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\") == \"5\"\nassert solution(\"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\\n3 6 5 4 1 2\") == \"5\"\n"
    },
    {
        "number": 3118,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n2\\n2') == '2'\nassert solution('1\\n2\\n2\\n3') == '5'\nassert solution('1\\n2\\n1\\n2') == '0'\nassert solution('1\\n2\\n2\\n2') == '1'\nassert solution('2\\n3\\n2\\n1') == '0'\n"
    },
    {
        "number": 3118,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n3 1\\n3 1 2\\n') == '2'\nassert solution('1\\n3 1\\n3 1 2\\n') == 'huge'\nassert solution('6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\\n') == '5'\nassert solution('2\\n5 1 6 3 2 4\\n4 6 5 1 3 2\\n') == '2'\nassert solution('7\\n3 1 7 2 4 5 6\\n5 1 6 3 7 2 4\\n4 1 2 3 7 6 5\\n') == '8'\n"
    },
    {
        "number": 3118,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n"
    },
    {
        "number": 3119,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0 10\\n0 10\") == \"4\"\nassert solution(\"1 1\\n0 10\\n0 10\") == \"4\"\nassert solution(\"1 1\\n0 10\\n0 10\\n0 10\") == \"9\"\nassert solution(\"1 1\\n0 10\\n0 40\\n0 10\") == \"9\"\nassert solution(\"1 1\\n0 10\\n0 40\\n0 10\\n0 10\") == \"9\"\n"
    },
    {
        "number": 3119,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(open(\"test_file.txt\").read()) == \"0\"\nassert solution(open(\"test_file_2.txt\").read()) == \"3\"\nassert solution(open(\"test_file_3.txt\").read()) == \"6\"\nassert solution(open(\"test_file_4.txt\").read()) == \"9\"\nassert solution(open(\"test_file_5.txt\").read()) == \"13\"\n"
    },
    {
        "number": 3119,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0\\n0\\n1\\n0\\n1\\n0\\n\") == \"4\"\nassert solution(\"0\\n0\\n1\\n0\\n1\\n0\\n\") == \"9\"\nassert solution(\"1\\n0\\n1\\n0\\n1\\n0\\n\") == \"4\"\nassert solution(\"2\\n0\\n1\\n0\\n1\\n0\\n\") == \"4\"\nassert solution(\"3\\n0\\n1\\n0\\n1\\n0\\n\") == \"4\"\n"
    },
    {
        "number": 3119,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3119,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '9'\n'''\n\nimport math"
    },
    {
        "number": 3119,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 1') == '4'\nassert solution('4 1') == '4'\nassert solution('6 1') == '9'\nassert solution('100 1') == '99'\nassert solution('6 2') == '0'\n"
    },
    {
        "number": 3119,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 1\n0 10 20\n0 10''') == '4'\nassert solution('''5 1\n0 10 20 22 30 32\n0 40\n0 90\n1 100\n1 200\n1 300\n1 400''') == '9'\nassert solution('''5 1\n0 10 22 30 32\n0 40\n0 90\n1 100\n1 200\n1 300\n1 400\n1 800''') == '6'\nassert solution('''5 1\n0 10 22 30 32\n0 40\n0 90\n1 100\n1 200\n1 300\n1 400\n1 900''') == '10'\nassert solution('''8 1\n0 10 20 22 30 32 35 40 45 50 57 60 69\n0 40\n0 90\n1 100\n1 200\n1 300\n1 400\n1 600\n1 900\n1 1200''') == '14'\n"
    },
    {
        "number": 3119,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"9\"\n\nassert solution(\"3 3\") == \"6\"\n\nassert solution(\"1 1\") == \"1\"\n\nassert solution(\"3 3 2 2 1\") == \"5\"\n\nassert solution(\"4 1 2 3 4\") == \"8\""
    },
    {
        "number": 3119,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 3119,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '9'\n"
    },
    {
        "number": 3120,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"equal\"\n\n\"\"\""
    },
    {
        "number": 3120,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('concat(shuffle([1,2]),shuffle([1,2]))') == 'equal'\nassert solution('shuffle([1,2,1,2])') == 'not equal'\nassert solution('sorted(concat([3,2,1],[4,5,6]))') == 'equal'\nassert solution('[1,2,3,4,5,6]') == 'equal'\nassert solution('[3,2,1,4,5,6]') == 'equal'\n"
    },
    {
        "number": 3120,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    concat(shuffle([1,2]),shuffle([1,2]))\n    shuffle([1,2,1,2])\n    \"\"\") == 'equal'\n\"\"\"\n"
    },
    {
        "number": 3120,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 3120,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\") == \"equal\"\nassert solution(\"shuffle([1,2,1,2])\") == \"equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\") == \"equal\"\n\"\"\""
    },
    {
        "number": 3120,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'equal'\n\"\"\"\n\nimport sys\n\nclass Balloon:\n    def __init__(self, arr):\n        self.arr = arr\n\n    def shuffle(self):\n        return self.arr[::-1]\n\n    def concat(self, other):\n        return self.arr + other.arr\n\n    def sorted(self):\n        return sorted(self.arr)\n\n    def __str__(self):\n        return''.join(str(x) for x in self.arr)"
    },
    {
        "number": 3120,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(concat(shuffle([1,2]),shuffle([1,2]))) == \"equal\"\nassert solution(shuffle([1,2,1,2])) == \"not equal\"\nassert solution(sorted(concat([3,2,1],[4,5,6]))) == \"equal\"\nassert solution([1,2,3,4,5,6]) == \"equal\"\nassert solution([1,2,3,4,5,6,7]) == \"equal\"\n"
    },
    {
        "number": 3120,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('concat(shuffle([1,2]),shuffle([1,2]))') == 'equal'\nassert solution('shuffle([1,2,1,2])') == 'not equal'\nassert solution('sorted(concat([3,2,1],[4,5,6]))') == 'equal'\nassert solution('[1,2,3,4,5,6]') == 'equal'\nassert solution('[]') == 'equal'\n"
    },
    {
        "number": 3120,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('concat([1,2], [1,2])') == 'equal'\nassert solution('shuffle([1,2])') == 'equal'\nassert solution('concat([1,2], [2,1])') == 'equal'\nassert solution('shuffle([1,2])') == 'equal'\nassert solution('concat([3,2,1], [4,5,6])') == 'equal'\n"
    },
    {
        "number": 3120,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('concat(shuffle([1,2]),shuffle([1,2]))') == 'equal'\nassert solution('shuffle([1,2,1,2])') == 'not equal'\nassert solution('sorted(concat([3,2,1],[4,5,6]))') == 'equal'\nassert solution('[1,2,3,4,5,6]') == 'equal'\n'''\n"
    },
    {
        "number": 3121,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"1 2\\n\" +\n    \"3 2\\n\" +\n    \"1 2 1 2\\n\" +\n    \"2 3 1 2\\n\") == \"1\"\n\nassert solution(\n    \"1 3\\n\" +\n    \"3 2\\n\" +\n    \"1 2 1 2\\n\" +\n    \"2 3 1 2\\n\") == \"1\"\n"
    },
    {
        "number": 3121,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 2''') == 'Oh no'\nassert solution('''1 3''') == '1'\nassert solution('''2 3''') == '1'\nassert solution('''4 2''') == '1'\nassert solution('''4 5''') == '2'\n"
    },
    {
        "number": 3121,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2') == 'Oh no'\nassert solution('3 2') == '1'\nassert solution('1 2 1 2') == '1'\nassert solution('2 3 1 2') == '1'\nassert solution('1 3 1 2') == '1'\n"
    },
    {
        "number": 3121,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 3\n3 2\n1 2 1 2\n2 3 1 2''') == '1'\nassert solution('''1 2\n3 2\n1 2 1 2\n2 3 1 2''') == '1'\nassert solution('''2 2\n1 2\n1 2 1 2''') == '0'\nassert solution('''2 2\n1 2\n1 2 1 2\n2 3 1 2''') == '1'\nassert solution('''1 2\n3 2\n1 2 1 2\n2 3 1 2''') == '1'\n"
    },
    {
        "number": 3121,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '1'\n\nprint('Well done! Click on \"Check\" to earn cool rewards!')\n"
    },
    {
        "number": 3121,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n1 2\n3 2\n1 2 1 2\n2 3 1 2\n''') == '1'\n\nassert solution(\n'''\n1 2\n3 2\n1 2 1 2\n2 3 1 2\n''') == '1'\n"
    },
    {
        "number": 3121,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '1'\nassert solution(stdin) == '1'\nassert solution(stdin) == '1'\nassert solution(stdin) == '1'\nassert solution(stdin) == '1'\n"
    },
    {
        "number": 3121,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'Oh no'\n"
    },
    {
        "number": 3121,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 3121,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"Oh no\"\nassert solution(\"1 3\") == \"1\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"2 3\\n1 3\") == \"1\"\nassert solution(\"2 4\\n1 3\\n2 4\\n1 3\\n2 4\") == \"4\"\n"
    },
    {
        "number": 3122,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2\\n') == '3'\nassert solution('3 4\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\\n') == 'impossible'\nassert solution('6 6\\n1 2 2\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\\n4 6 1\\n') == 'impossible'\nassert solution('6 3\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\\n4 6 1\\n') == 'impossible'\nassert solution('5 4\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\\n4 6 1\\n') == '3'\n"
    },
    {
        "number": 3122,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'impossible'\n'''\n"
    },
    {
        "number": 3122,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 3122,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3122,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '3'\n\n\"\"\""
    },
    {
        "number": 3122,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3\"\n'''\n"
    },
    {
        "number": 3122,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"impossible\"\nassert solution(\"1\\n\") == \"impossible\"\nassert solution(\"1\\n2\\n\") == \"impossible\"\nassert solution(\"1\\n2\\n3\\n\") == \"impossible\"\nassert solution(\"1\\n1\\n2\\n3\\n\") == \"impossible\"\n"
    },
    {
        "number": 3122,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1\\n2 3 2\\n3 4 1\\n4 5 1\\n5 1 2\\n') == '3'\nassert solution('2 1\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\\n5 1 2\\n') == 'impossible'\nassert solution('1 1\\n2 3 2\\n3 4 1\\n4 5 1\\n5 1 2\\n') == '3'\nassert solution('1 1\\n2 3 2\\n3 4 1\\n4 5 1\\n5 1 2\\n') == '3'\nassert solution('1 1\\n2 3 2\\n3 4 1\\n4 5 1\\n5 1 2\\n') == '3'\n"
    },
    {
        "number": 3122,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"4 4\n1 2 2\n2 3 1\n3 4 1\n4 1 2\n\"\"\") == \"3\"\nassert solution(\"\"\"6 6\n1 2 1\n2 3 1\n2 4 1\n2 5 1\n4 5 1\n3 4 1\n5 3 1\n\"\"\") == \"impossible\"\n\"\"\"\n##Test\n\"\"\"\nfrom unittest import TestCase"
    },
    {
        "number": 3122,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 2') == '3'\nassert solution('2 3 1') == '3'\nassert solution('3 4 1') == '3'\nassert solution('4 1 2') == '3'\nassert solution('2 4 1') == '3'\n"
    },
    {
        "number": 3123,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n    6\n    1 2 1 2 3\n''') == '2'\nassert solution('''\n    3\n    1 1 1\n''') == '1'\nassert solution('''\n    4\n    1 1 1 1\n''') == '3'\nassert solution('''\n    5\n    1 1 1 1 1\n''') == '4'\nassert solution('''\n    2\n    1 2\n''') == '3'\n"
    },
    {
        "number": 3123,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n22') == '4'\n"
    },
    {
        "number": 3123,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5') == '2'\nassert solution('22') == '4'\n\nassert solution('5') == '2'\nassert solution('22') == '4'\nassert solution('2 1 1 1 3') == '2'\n"
    },
    {
        "number": 3123,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n1\n22\n2\n2\n1\n3\n3\n3\n3\n2\n3\n3\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2"
    },
    {
        "number": 3123,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n2 1 1 1 3''') == '2'\nassert solution('''1\n22''') == '4'\nassert solution('''0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n"
    },
    {
        "number": 3123,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"this is a string\") == \"1\"\nassert solution(\"I can't believe that I'm actually doing this\") == \"2\"\nassert solution(\"He's doing fine, just like everyone else.\") == \"3\"\nassert solution(\"This is not a quotation!\") == \"0\"\nassert solution(\"These aren't the droids you're looking for.\") == \"0\"\n"
    },
    {
        "number": 3123,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n2\n1 2 3\n''') == \"2\"\nassert solution('''\n3\n1 2 3\n''') == \"2\"\nassert solution('''\n3\n1 2 3\n''') == \"2\"\nassert solution('''\n7\n4 1 2 3 1 1 1\n''') == \"1\"\nassert solution('''\n5\n2 1 1 1 3\n''') == \"2\"\n"
    },
    {
        "number": 3123,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('\"Sample Input 1\"') == '2'\nassert solution('\"Sample Input 2\"') == '4'\nassert solution('2\\n22') == '4'\nassert solution
    },
    {
        "number": 3123,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 3123,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3124,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 1 5\") == \"3\\n\"\nassert solution(\"4\\n1 2 3 4\") == \"2\\n\"\nassert solution(\"4\\n1 4 2 1 3\") == \"2\\n\"\nassert solution(\"3\\n3 2 1\") == \"3\\n\"\nassert solution(\"1\\n1\") == \"0\\n\"\n"
    },
    {
        "number": 3124,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n3 1 5''') == '3'\nassert solution('''4\n1 2 3 4''') == '2'\nassert solution('''5\n1 2 3 4 5''') == '5'\nassert solution('''2\n1 2''') == '2'\nassert solution('''5\n1 2 3 4 5''') == '3'\n"
    },
    {
        "number": 3124,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3124,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n3\n3 1 5\n''') == '3'\nassert solution('''\n4\n1 2 3 4\n''') == '2'\nassert solution('''\n5\n1 2 3 4 5\n''') == '4'\nassert solution('''\n6\n1 2 3 4 5 6\n''') == '2'\nassert solution('''\n7\n1 2 3 4 5 6 7\n''') == '4'\n"
    },
    {
        "number": 3124,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"1 2 2\") == \"\"\n"
    },
    {
        "number": 3124,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n2\") == \"1\"\nassert solution(\"2\\n2\") == \"1\"\nassert solution(\"2\\n4\") == \"2\"\nassert solution(\"3\\n2 1 5\") == \"2\"\n"
    },
    {
        "number": 3124,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"3\n3 1 5\"\"\") == \"3\"\nassert solution(\"\"\"4\n1 2 3 4\"\"\") == \"2\"\nassert solution(\"\"\"1\n2 3 4\"\"\") == \"1\"\nassert solution(\"\"\"2\n1 2\"\"\") == \"1\"\nassert solution(\"\"\"5\n10 3 7 8 1\"\"\") == \"2\"\n"
    },
    {
        "number": 3124,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('12') == '3'\nassert solution('123') == '3'\nassert solution('1234') == '3'\n"
    },
    {
        "number": 3124,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n3 1 5''') == '3'\nassert solution('''4\n1 2 3 4''') == '2'\nassert solution('''2\n2 2''') == '1'\nassert solution('''1\n1''') == '1'\nassert solution('''4\n1 1 3 3''') == '2'\n"
    },
    {
        "number": 3124,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3125,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"a+b-c\") == \"- +d-\"\nassert solution(\"a-b+d-c\") == \"<empty>\"\nassert solution(\"knuth-morris-pratt\") == \"<any>\"\nassert solution(\"knuthmorrispratt\") == \"<any>\"\n'''\n"
    },
    {
        "number": 3125,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3125,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"a+b-c\"\"\") == \"\"\"\n\n- +d-\n\n\"\"\"\nassert solution(\n\"\"\"knuth-morris-pratt\"\"\") == \"\"\"\n\n<any> <empty>\n\n\"\"\"\nassert solution(\n\"\"\"a-b+c\"\"\") == \"\"\"\n\n- +d-\n\n\"\"\"\nassert solution(\n\"\"\"abc\"\"\") == \"\"\"\n\n<any> <empty>\n\n\"\"\"\nassert solution(\n\"\"\"a-b-c\"\"\") == \"\"\"\n\n- +d-\n\n\"\"\"\n"
    },
    {
        "number": 3125,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('a+b-c') == '- +d-'\nassert solution('a-b+d-c') == '<any> <empty>'\nassert solution('knuth-morris-pratt') == '<any> <empty>'\nassert solution('knuth-morris-pratt') == '<any> <empty>'\nassert solution('knuth-morris-pratt') == '<any> <empty>'\n"
    },
    {
        "number": 3125,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('a+b-c') == '- +d-'\nassert solution('a-b+d-c') == '- +d-'\nassert solution('knuth-morris-pratt') == '<any> <empty>'\nassert solution('knuthmorrispratt') == '<any> <empty>'\n\"\"\"\nfrom collections import defaultdict\nfrom functools import reduce\n"
    },
    {
        "number": 3125,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('a+b-c') == '- +d-'\nassert solution('a-b+d-c') == '<empty> <any>'\nassert solution('knuth-morris-pratt') == '<any> <empty>'\nassert solution('knuthmorrispratt') == '<any> <empty>'\nprint(solution('a+b-c'))\nprint(solution('a-b+d-c'))\nprint(solution('knuth-morris-pratt'))\nprint(solution('knuthmorrispratt'))\n'''"
    },
    {
        "number": 3125,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"a+b-c\") == \"- +d-\"\nassert solution(\"a-b+d-c\") == \"<any> <empty>\""
    },
    {
        "number": 3125,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3125,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == '<empty>'\nassert solution('a+b-c') == '- +d-'\nassert solution('a-b+d-c') == '- -'\nassert solution('a-b-c') == '- -'\nassert solution('a-b-c-d') == '- - -'\n"
    },
    {
        "number": 3125,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('a+b-c') == '- +d-'\nassert solution('knuth-morris-pratt') == '<any> <empty>'\nassert solution('a--b+d-c') == '- -d-'\nassert solution('abcde') == '- <any>'\n"
    },
    {
        "number": 3126,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1') == '0'\nassert solution('2 6 6') == '3'\nassert solution('3 0') == '7'\n"
    },
    {
        "number": 3126,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3126,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1') == '0'\nassert solution('3 0') == '7'\nassert solution('2 6 6') == '10'\nassert solution('10') == 't 0'\nassert solution('10') == 't 1'\n"
    },
    {
        "number": 3126,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\") == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\nassert solution(\"3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\") == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n\"\nassert solution(\"1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\") == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\nassert solution(\"3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\") == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n\"\nassert solution(\"2 2\\n1\\n1\\n2\\n2\\n1\\n2\") == \"3\\n3\\n5\\n5\\n6\\n5\\n\"\n"
    },
    {
        "number": 3126,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == '0'\nassert solution('2 2') == '0'\nassert solution('3 3') == '0'\nassert solution('4 4') == '0'\nassert solution('5 5') == '0'\n"
    },
    {
        "number": 3126,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1') == '0'\nassert solution('0\\n1') == '1'\nassert solution('1\\n0') == '0'\nassert solution('2\\n1 3\\n0\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1') == '3'\nassert solution('2\\n0\\n-1\\n1\\n0\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1') == '3'\n"
    },
    {
        "number": 3126,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 0''') == '0'\nassert solution('''2 1''') == '1'\nassert solution('''2 2''') == '2'\nassert solution('''3 1''') == '1'\nassert solution('''3 2''') == '3'\n"
    },
    {
        "number": 3126,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0\\n2\\n6\\n') == '0'\nassert solution('1\\n0\\n7\\n') == '0'\nassert solution('3\\n0\\n2\\n6\\n') == '3'\nassert solution('3\\n0\\n2\\n6\\n') == '5'\nassert solution('3\\n0\\n2\\n6\\n') == '4'\n"
    },
    {
        "number": 3126,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3126,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3127,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1''') == \"2\\n4 6\\n\"\nassert solution('''5 6\n1 2 2\n2 3 2\n3 5 2\n1 4 3\n4 5 3\n1 5 6''') == \"0\\n\"\nassert solution('''5 5\n1 2 2\n2 3 2\n3 4 2\n1 5 2\n5 4 2\n1 3 3\n3 4 3\n4 5 3\n1 5 4\n1 4 5''') == \"1\\n3\\n\"\nassert solution('''7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1\n6 7 2\n1 6 5\n1 4 5\n1 5 3\n4 1 2\n3 1 4\n2 3 1''') == \"2\\n4 6\\n\"\nassert solution('''7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1\n6 7 2\n1 6 5\n1 4 5\n1 5 3\n4 1 2\n3 1 4\n2 3 1\n3 1 4''') == \"2\\n4 6\\n\"\n"
    },
    {
        "number": 3127,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"2\", \"2 is the number of unused switches\"\nassert solution(\"2 4\") == \"2 4\", \"2 4 is the indices of the unused switches\"\nassert solution(\"7 8\") == \"2 4 6\", \"2 4 6 is the indices of the unused switches\"\nassert solution(\"7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == \"0 4 6\\n\", \"0 4 6 is the indices of the unused switches\"\nassert solution(\"7 8\\n1 1 1\\n2 2 1\\n3 3 1\\n4 4 1\\n5 5 1\\n6 6 1\\n7 7 1\") == \"0 4 6\\n\", \"0 4 6 is the indices of the unused switches\"\n"
    },
    {
        "number": 3127,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == \"2\\n4 6\"\nassert solution(\"7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == \"2\\n4 6\"\n\"\"\""
    },
    {
        "number": 3127,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1''') == '4 6'\nassert solution('''5 6\n1 2 2\n2 3 2\n3 5 2\n1 4 3\n4 5 3\n1 5 6''') == '0 4 6'\nassert solution('''1 2 3\n2 3 2\n2 4 3\n2 5 4\n2 6 5\n3 7 2\n3 8 1\n4 9 4\n4 8 4\n5 8 2\n5 7 1\n5 6 1''') == '3'\nassert solution('''7 7\n1 2 2\n2 3 1\n3 4 1\n1 4 4\n1 5 3\n2 6 1\n1 6 2\n1 7 1\n1 8 2\n1 9 1\n1 10 3\n1 11 2\n1 12 1''') == '2'\nassert solution('''1000000000 4000000000\n1 1 1\n1 2 1\n1 3 1\n1 4 1\n1 5 1\n1 6 1\n1 7 1\n1 8 1\n1 9 1\n1 10 1\n1 11 1\n1 12 1\n1 13 1\n1 14 1\n1 15 1\n1 16 1\n1 17 1\n1 18 1\n1 19 1\n1 20 1\n1 21 1\n1 22 1\n1 23 1\n1 24 1\n1 25 1\n1 26 1\n1 27 1\n1 28 1\n1 29 1\n1 30 1\n1 31 1\n1 32 1\n1 33 1\n1 34 1\n1 35 1\n1 36 1\n1 37 1\n1 38 1\n1 39 1\n1 40 1\n1 41 1\n1 42 1\n1 43 1\n1 44 1\n1 45 1\n1 46 1\n1 47 1\n1 48 1\n1 49 1\n1 50 1\n1 51 1\n1 52 1\n1 53 1\n1 54 1\n1 55 1\n1 56 1\n1 57 1\n1 58 1\n1 59 1\n1 60 1\n1 61 1\n1 62 1\n1 63 1\n1 64 1\n1 65 1\n1 66 1\n1 67 1\n1 68 1\n1 69 1\n1 70 1\n1 71 1\n1 72 1\n1 73 1\n1 74 1\n1 75 1\n1 76 1\n1 77 1\n1 78 1\n1 79 1\n1 80 1\n1 81 1\n1 82 1\n1 83 1\n1 84 1\n1 85 1\n1 86 1\n1 87 1\n1 88 1\n1 89 1\n1 90 1\n1 91 1\n1 92 1\n1 93 1\n1 94 1\n1 95 1\n1 96 1\n1 97 1\n1 98 1\n1 99 1\n1 100 1\n1 101 1\n1 102 1\n1 103 1\n1 104 1\n1 105 1\n1 106 1\n1 107 1\n1 108 1\n1 109 1\n1 110 1\n1 111 1\n1 112 1\n1 113 1\n1 114 1\n1 115 1\n1 116 1\n1 117 1\n1 118 1\n1 119 1\n1 120 1\n1 121 1\n1 122 1\n1 123 1\n1 124 1\n1 125 1\n1 126 1\n1 127 1\n1 128 1\n1 129 1\n1 130 1\n1 131 1\n1 132 1\n1 133 1\n1 134 1\n1 135 1\n1 136 1\n1 137 1\n1 138 1\n1 139 1\n1 140 1\n1 141 1\n1 142 1\n1 143 1\n1 144 1\n1 145 1\n1 146 1\n1 147 1\n1 148 1\n1 149 1\n1 150 1\n1 151 1\n1 152 1\n1 153 1\n1 154 1\n1 155 1\n1 156 1\n1 157 1\n1 158 1\n1 159 1\n1 160 1\n1 161 1\n1 162 1\n1 163 1\n1 164 1\n1 165 1\n1 166 1\n1 167 1\n1 168 1\n1 169 1\n1 170 1\n1 171 1\n1 172 1\n1 173 1\n1 174 1\n1 175 1\n1 176 1\n1 177 1\n1 178 1\n1 179 1\n1 180 1\n1 181 1\n1 182 1\n1 183 1\n1 184 1\n1 185 1\n1 186 1\n1 187 1\n1 188 1\n1 189 1\n1 190 1\n1 191 1\n1 192 1\n1 193 1\n1 194 1\n1 195 1\n1 196 1\n1 197 1\n1 198 1\n1 199 1\n1 200 1\n1 201 1\n1 202 1\n1 203 1\n1 204 1\n1 205 1\n1 206 1\n1 207 1\n1 208 1\n1 209 1\n1 210 1\n1 211 1\n1 212 1\n1 213 1\n1 214 1\n1 215 1\n1 216 1\n1 217 1\n1 218 1\n1 219 1\n1 220 1\n1 221 1\n1 222 1\n1 223 1\n1 224 1\n1 225 1\n1 226 1\n1 227 1\n1 228 1\n1 229 1\n1 230 1\n1 231 1\n1 232 1\n1 233 1\n1 234 1\n1 235 1\n1 236 1\n1 237 1\n1 238 1\n1 239 1\n1 240 1\n1 241 1\n1 242 1\n1 243 1\n1 244 1\n1 245 1\n1 246 1\n1 247 1\n1 248 1\n1 249 1\n1 250 1\n1 251 1\n1 252 1\n1 253 1\n1 254 1\n1 255 1\n1 256 1\n1 257 1\n1 258 1\n1 259 1\n1 260 1\n1 261 1\n1 262 1\n1 263 1\n1 264 1\n1 265 1\n1 266 1\n1 267 1\n1 268 1\n1 269 1\n1 270 1\n1 271 1\n1 272 1\n1 273 1\n1 274 1\n1 275 1\n1 276 1\n1 277 1\n1 278"
    },
    {
        "number": 3127,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 6\\n1 2 2\\n2 3 2\\n3 5 2\\n1 4 3\\n4 5 3\\n1 5 6') == '0\\n4 6'\nassert solution('5 6\\n1 2 2\\n2 3 2\\n3 5 2\\n1 4 3\\n4 5 3\\n1 5 6') == '2\\n4 6'\nassert solution('7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1') == '0\\n4 6\\n8 9'\nassert solution('5 4\\n1 2 1\\n2 3 2\\n3 4 1\\n4 5 2\\n1 5 1') == '2'\nassert solution('10 10\\n1 2 1\\n2 3 2\\n3 4 1\\n4 5 2\\n5 6 1\\n6 7 2\\n7 8 1\\n8 9 2\\n9 10 1') == '0'\n"
    },
    {
        "number": 3127,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1') == '2\\n4 6\\n'"
    },
    {
        "number": 3127,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n8 7\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1\n\"\"\"\n) == '4'\nassert solution(\n    \"\"\"\n5 6\n1 2 2\n2 3 2\n3 5 2\n1 4 3\n4 5 3\n1 5 6\n\"\"\"\n) == '0'\n\nassert solution(\n    \"\"\"\n4 4\n1 2 3\n2 3 4\n2 4 3\n2 3 4\n3 4 1\n\"\"\"\n) == '2'\nassert solution(\n    \"\"\"\n3 3\n1 2 1\n2 3 1\n3 1 1\n\"\"\"\n) == '0'\nassert solution(\n    \"\"\"\n2 2\n1 2 1\n2 3 1\n\"\"\"\n) == '0'\n"
    },
    {
        "number": 3127,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 6\n1 2 2\n2 3 2\n3 5 2\n1 4 3\n4 5 3\n1 5 6''') == '0\\n4 6'\n\nassert solution('''5 7\n1 2 2\n2 3 2\n3 5 2\n1 4 3\n4 5 3\n1 5 6\n5 4 2\n1 4 5\n4 5 3\n1 5 6''') == '0\\n4 6'\n"
    },
    {
        "number": 3127,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == \"2\\n4 6\"\nassert solution(\"3 5 3\\n2 1 1\\n3 1 3\\n2 1 2\\n1 4 1\\n1 5 3\\n4 6 4\\n2 4 4\\n1 5 3\\n4 6 3\\n2 5 2\\n1 5 2\\n4 6 4\\n1 6 2\\n2 7 3\\n2 1 2\\n3 1 1\\n1 4 2\\n1 5 4\\n1 2 4\\n3 4 5\\n1 3 2\\n1 5 4\\n1 5 3\\n1 4 1\\n1 1 1\\n3 1 2\\n1 2 1\\n4 1 3\\n2 2 2\\n1 3 3\\n1 4 4\\n2 6 4\\n2 7 5\\n3 5 6\\n1 5 1\\n2 7 2\\n4 6 3\\n1 4 2\\n1 5 2\\n1 1 1\\n3 1 2\\n2 2 1\\n1 1 2\\n1 3 4\\n3 4 5\\n2 5 6\\n1 1 2\\n2 1 4\\n1 1 5\\n1 2 4\\n1 2 3\\n1 1 1\\n4 1 2\\n2 1 5\\n1 1 2\\n3 1 4\\n2 6 5\\n1 2 2\\n1 2 3\\n2 1 2\\n1 4 1\\n1 5 2\\n1 1 2\\n3 1 2\\n1 2 1\\n1 3 2\\n1 2 1\\n1 2 2\\n1 4 1\\n1 5 2\\n1 1 2\\n1 1 1\\n1 1 1\\n1 1 1\\n1 2 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n"
    },
    {
        "number": 3127,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1\"\"\"\n) == \"\"\"2\n4 6\"\"\"\nassert solution(\n\"\"\"3 4\n1 2 1\n2 3 1\n1 3 1\"\"\"\n) == \"\"\nassert solution(\n\"\"\"3 4\n1 1 1\n1 2 1\n1 3 1\"\"\"\n) == \"\"\nassert solution(\n\"\"\"10 10\n1 2 1\n2 3 1\n1 3 1\n2 3 1\n1 3 1\n2 3 1\n1 3 1\n2 3 1\n1 3 1\n2 3 1\"\"\"\n) == \"\"\nassert solution(\n\"\"\"10 10\n1 2 1\n1 2 1\n1 3 1\n2 3 1\n1 3 1\n2 3 1\n1 3 1\n2 3 1\n1 3 1\n2 3 1\"\"\"\n) == \"\"\n"
    },
    {
        "number": 3128,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"a\"\nassert solution(\"a\") == \"a\"\nassert solution(\"b\") == \"b\"\nassert solution(\"aba\") == \"b\"\n"
    },
    {
        "number": 3128,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1') == '4'\nassert solution('1 2') == '5'\nassert solution('1 3') == '6'\nassert solution('2 1') == '1'\nassert solution('2 2') == '2'\n"
    },
    {
        "number": 3128,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1 1') == '1'\nassert solution('2\\n1 1') == '2'\nassert solution('3\\n1 1') == '3'\nassert solution('4\\n1 1') == '4'\nassert solution('5\\n1 1') == '5'\n"
    },
    {
        "number": 3128,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 1') == '2'\nassert solution('1 2 3') == '2'\nassert solution('1 2 3 4') == '2'\nassert solution('1 2 3 4 5 6') == '2'\n"
    },
    {
        "number": 3128,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(open(\"test_file.txt\").read()) == \"1\\n2\\n3\""
    },
    {
        "number": 3128,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\nprint('test success')"
    },
    {
        "number": 3128,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\\n1\\n2\\n2\\n2\\n3\\n3\\n3\\n4\\n4\\n4\\n5\\n5\\n5\\n6\\n6\\n6\\n7\\n7\\n7\\n8\\n8\\n8\\n9\\n9\\n9\\n10\\n10\\n10\\n11\\n11\\n11\\n12\") == \"4\\n5\\n6\\n1\\n2\\n3\"\nassert solution(\"2\\n1\\n1\\n2\\n2\\n2\\n3\\n3\\n3\\n4\\n4\\n4\\n5\\n5\\n5\\n6\\n6\\n6\\n7\\n7\\n7\\n8\\n8\\n8\\n9\\n9\\n9\\n10\\n10\\n10\\n11\\n11\\n11\\n12\\n12\\n12\") == \"1\\n2\\n3\"\nassert solution(\"3\\n1\\n1\\n2\\n2\\n2\\n3\\n3\\n3\\n4\\n4\\n4\\n5\\n5\\n5\\n6\\n6\\n6\\n7\\n7\\n7\\n8\\n8\\n8\\n9\\n9\\n9\\n10\\n10\\n10\\n11\\n11\\n11\\n12\\n12\\n12\") == \"4\\n5\\n6\"\nassert solution(\"5\\n1\\n1\\n2\\n2\\n2\\n3\\n3\\n3\\n4\\n4\\n4\\n5\\n5\\n5\\n6\\n6\\n6\\n7\\n7\\n7\\n8\\n8\\n8\\n9\\n9\\n9\\n10\\n10\\n10\\n11\\n11\\n11\\n12\\n12\\n12\\n13\\n13\\n13\\n14\\n14\\n14\\n15\\n15\\n15\\n16\\n16\\n16\\n17\\n17\\n17\\n18\\n18\\n18\\n19\\n19\\n19\\n20\\n20\\n20\\n21\\n21\\n21\\n22\\n22\\n22\\n23\\n23\\n23\\n24\\n24\\n24\\n25\\n25\\n25\\n26\\n26\\n26\\n27\\n27\\n27\\n28\\n28\\n28\\n29\\n29\\n29\\n30\\n30\\n30\\n31\\n31\\n31\\n32\\n32\\n32\\n33\\n33\\n33\\n34\\n34\\n34\\n35\\n35\\n35\\n36\\n36\\n36\\n37\\n37\\n37\\n38\\n38\\n38\\n39\\n39\\n39\\n40\\n40\\n40\\n41\\n41\\n41\\n42\\n42\\n42\\n43\\n43\\n43\\n44\\n44\\n44\\n45\\n45\\n45\\n46\\n46\\n46\\n47\\n47\\n47\\n48\\n48\\n48\\n49\\n49\\n49\\n50\\n50\\n50\\n51\\n51\\n51\\n52\\n52\\n52\\n53\\n53\\n53\\n54\\n54\\n54\\n55\\n55\\n55\\n56\\n56\\n56\\n57\\n57\\n57\\n58\\n58\\n58\\n59\\n59\\n59\\n60\\n60\\n60\\n61\\n61\\n61\\n62\\n62\\n62\\n63\\n63\\n63\\n64\\n64\\n64\\n65\\n65\\n65\\n66\\n66\\n66\\n67\\n67\\n67\\n68\\n68\\n68\\n69\\n69\\n69\\n70\\n70\\n70\\n71\\n71\\n71\\n72\\n72\\n72\\n73\\n73\\n73\\n74\\n74\\n74\\n75\\n75\\n75\\n76\\n76\\n76\\n77\\n77\\n77\\n78\\n78\\n78\\n79\\n79\\n79\\n80\\n80\\n80\\n81\\n81\\n81\\n82\\n82\\n82\\n83\\n83\\n83\\n84\\n84\\n84\\n85\\n85\\n85\\n86\\n86\\n86\\n87\\n87\\n87\\n88\\n88\\n88\\n89\\n89\\n89\\n90\\n90\\n90\\n91\\n91\\n91\\n92\\n92\\n92\\n93\\n93\\n93\\n94\\n94\\n94\\n95\\n95\\n95\\n96\\n96\\n96\\n97\\n97\\n97\\n98\\n98\\n98\\n99\\n99\\n99\\n100\\n100\\n100\") == \"1\\n2\\n3\\n4\\n5\\n6\"\n\nprint(solution(stdin))"
    },
    {
        "number": 3128,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\\\n12\n1 1\n1 2\n1 3\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n\"\"\") == \"\"\"\\\n4\n5\n6\n1\n2\n3\n\"\"\"\nassert solution(\"\"\"\\\n6\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n\"\"\") == \"\"\"\\\n1\n2\n3\n1\n2\n3\n\"\"\"\nassert solution(\"\"\"\\\n4\n1 1\n1 2\n1 3\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n\"\"\") == \"\"\"\\\n4\n5\n6\n1\n2\n3\n\"\"\"\nassert solution(\"\"\"\\\n12\n1 1\n1 2\n1 3\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n\"\"\") == \"\"\"\\\n4\n5\n6\n1\n2\n3\n\"\"\"\nassert solution(\"\"\"\\\n12\n1 1\n1 2\n1 3\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n\"\"\") == \"\"\"\\\n4\n5\n6\n1\n2\n3\n\"\"\"\n"
    },
    {
        "number": 3128,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 3128,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3129,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('CPCC') == '1'\nassert solution('PPPPCCCC') == '8'\nprint(\"Assertions passed!\")\n"
    },
    {
        "number": 3129,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('CPCC') == '1'\nassert solution('PPPPCCCC') == '8'\nassert solution
    },
    {
        "number": 3129,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"CPCC\") == 1\nassert solution(\"PPPPCCCC\") == 8\n"
    },
    {
        "number": 3129,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\"\n\"\"\"\n"
    },
    {
        "number": 3129,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"CPCC\") == 1\nassert solution(\"PPPPCCCC\") == 8\nassert solution(\"C\") == 0\nassert solution(\"PP\") == 1\nassert solution(\"CCCCCCCC\") == 0\n"
    },
    {
        "number": 3129,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nimport sys\nassert (len(sys.argv) > 1) == True, \"Please input a sequence of hay bales\"\ninput_sequence = sys.argv[1]\n\nmax_len = len(input_sequence)\npermutations = [[] for _ in range(max_len)]"
    },
    {
        "number": 3129,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\"\n\n\"\"\"\n"
    },
    {
        "number": 3129,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\"\nassert solution(\"CP\") == \"1\"\nassert solution(\"PP\") == \"1\"\nassert solution(\"PPPP\") == \"2\"\n"
    },
    {
        "number": 3129,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\"\nassert solution(\"CPCPCPCPC\") == \"17\"\nassert solution(\"CPPCPCPCPC\") == \"21\"\nassert solutionn"
    },
    {
        "number": 3129,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\""
    },
    {
        "number": 3130,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2 1\n1 2\n2 3\n2''') == '1 2 3'\nassert solution('''3 2 1\n1 3\n2 3\n3\n''') == '3'\nassert solution('''3 2 1\n1 3\n2 3\n3\n1\n2\n3\n''') == '3'\nassert solution('''3 2 1\n1 3\n2 3\n3\n1\n2\n3\n''') == '3'\nassert solution('''3 2 1\n1 3\n2 3\n3\n1\n2\n3\n''') == '3'\n"
    },
    {
        "number": 3130,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n3 2 1\n1 2\n2 3\n2\n''') == '1 2 3'\n\nassert solution(\n'''\n3 2 1\n1 2\n2 3\n3\n''') == '3'\n\nassert solution(\n'''\n3 2 1\n1 3\n2 3\n3\n''') == '3'\n\nassert solution(\n'''\n3 2 1\n1 3\n2 3\n1\n''') == '1 3'\n\nassert solution(\n'''\n3 2 1\n1 2\n2 3\n3\n''') == '1 2 3'"
    },
    {
        "number": 3130,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3\\n2 3 4\\n3 4 1') == '3'\nassert solution('2 3 1\\n3 4 2\\n4 1 3\\n1 3 4') == '3'\nassert solution('1 2\\n2 3\\n3 4\\n4 1') == '1 2 3 4'\nassert solution('2 3\\n3 4\\n4 1\\n1 3\\n3 4') == '3'\nassert solution('2 3\\n3 4\\n4 1\\n1 2\\n2 3\\n3 4') == '1 2 3 4'\n"
    },
    {
        "number": 3130,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 2 1\") == \"1 2 3\"\nassert solution(\"3 2 1\\n1 2\\n2 3\\n2\") == \"1 2 3\"\nassert solution(\"3 2 1\\n1 3\\n2 3\\n3\") == \"3\"\nassert solution(\"3 2 1\\n1 3\\n2 3\\n3\\n3\") == \"3\"\nassert solution(\"3 2 1\\n1 3\\n2 3\\n3\\n3\\n3\") == \"3\"\n"
    },
    {
        "number": 3130,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3\") == \"1 2 3\"\nassert solution(\"1 3\") == \"1 3\"\nassert solution(\"1 2 3 4\") == \"1 2 3 4\"\nassert solution(\"1 2 3 4\") == \"1 2 3 4\"\n"
    },
    {
        "number": 3130,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n2\\n') == '2'\nassert solution('1\\n2\\n2\\n') == '2'\nassert solution('1\\n3\\n3\\n') == '3'\nassert solution('1\\n3\\n3\\n') == '3'\nassert solution('1\\n3\\n3\\n') == '3'\n"
    },
    {
        "number": 3130,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 2 1\n1 2\n2 3\n2\n''') == '1 2 3'\nassert solution('''3 2 1\n1 3\n2 3\n3\n''') == '3'\nassert solution('''3 2 1\n1 2\n2 3\n3\n''') == '3'\nassert solution('''3 2 1\n1 2\n2 3\n1\n''') == '1 2'\nassert solution('''3 2 1\n1 3\n2 3\n3\n''') == '3'\n"
    },
    {
        "number": 3130,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input) == str(solution(input))\n\n-----Write your code here------"
    },
    {
        "number": 3130,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\\n1 2\\n2 3\") == \"3\"\nassert solution(\"1 2 3\\n1 2\\n2 3\\n2\\n3\") == \"3\"\nassert solution(\"3 2 1\\n1 2\\n2 3\\n2\\n3\") == \"3\"\nassert solution(\"3 2 1\\n1 3\\n2 3\\n2\\n3\") == \"3\"\nassert solution(\"1 2 3\\n1 2\\n2 3\\n2\\n3\") == \"3\"\n"
    },
    {
        "number": 3130,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 2 1''') == '1 2 3'\nassert solution('''3 2 1''') == '1 2 3'\nassert solution('''3 2 1''') == '3'\nassert solution('''3 2 1''') == '3'\nassert solution('''3 2 1''') == '3'\n"
    },
    {
        "number": 3131,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3\n2 4 2 3 4''') == '39'\nassert solution('''5 1\n1 0 1 1 1''') == '4'\n"
    },
    {
        "number": 3131,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 5\\n1 0 1 1 1\\n') == '39'\n\nassert solution('3 3\\n2 4 2 3\\n') == '30'\n\nassert solution('5 1\\n1 0 1 1 1\\n') == '4'\n"
    },
    {
        "number": 3131,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3131,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('1 2') == '3'\nassert solution('1 1 2') == '2'\nassert solution('3 2 1') == '1'\n"
    },
    {
        "number": 3131,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '4'\nassert solution('2\\n2') == '10'\nassert solution('2\\n3') == '6'\nassert solution('2\\n4') == '14'\n"
    },
    {
        "number": 3131,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3131,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 3\\\\n2 4 2 3 4\\\\n') == '39'\nassert solution('5 1\\\\n1 0 1 1 1\\\\n') == '4'\n"
    },
    {
        "number": 3131,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1') == '4'\nassert solution('1 1\\n1 1') == '4'"
    },
    {
        "number": 3131,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6 3\\n2 4 2 3 4') == '39'\n"
    },
    {
        "number": 3131,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 3\n2 4 2 3 4''') == '39'\nassert solution('''5 1\n1 0 1 1 1''') == '4'\nassert solution('''7 2\n1 1 1 1 1 1 1''') == '89'\nassert solution('''7 3\n1 1 1 1 1 1 1''') == '466'\nassert solution('''7 5\n1 1 1 1 1 1 1''') == '164'\n"
    },
    {
        "number": 3132,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected(stdin)\nprint(f\"Passed! ({tst1-time.time()} < {tst2-time.time()})\")\n"
    },
    {
        "number": 3132,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 3\\nxx\\nxxx\\n...\\n') == '1 1 2\\n2 3 1\\n'\nassert solution('3 4\\nx.x\\n.xx\\nx..\\n') == '1 1 2\\n2 4 3\\n'\nassert solution('2 4\\nx.\\nx.\\nx..\\n') == '1 1 2\\n1 1 1\\n'\nassert solution('1 1\\nx.\\nx.\\nx..\\n') == '1 1 2\\n1 1 1\\n'\nassert solution('2 1\\nx.\\nx.\\nx..\\n') == '1 1 2\\n1 1 1\\n'\n"
    },
    {
        "number": 3132,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 3\\nxx.\\nxxx\\n...') == '1 1 2\\n2 3 1'\nassert solution('3 4\\nxx....\\nxx.xxx\\n...xxx\\n...xxx') == '1 1 2\\n2 4 3\\n3 5 4'\nassert solution('5 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx\\n...xxx') == '1 1 2\\n2 4 3\\n3 5 4\\n4 6 1'\n\"\"\"\n"
    },
    {
        "number": 3132,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 4\nxxx....\nxx.xxx\n...xxx\n...xxx''') == '1 1 2\\n2 4 3'\nassert solution('''4 5\nx...\nxx..\n...x\n...x''') == '1 1 2\\n3 2 1'\nassert solution('''3 3\n...\n...\n...\n''') == '1 1 2'\n'''\n\n'''\n"
    },
    {
        "number": 3132,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output\nprint(solution(stdin))\n\"\"\"\nfrom sys import stdin\nfrom typing import NamedTuple\n\n\nclass Building(NamedTuple):\n    row: int\n    column: int\n    length: int\n"
    },
    {
        "number": 3132,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"3 3\nxx.\nxxx\n...\n\"\"\") == \"\"\"1 1 2\n2 3 1\"\"\"\n\nassert solution(\"\"\"4 6\nxx....\nxx.xxx\n...xxx\n...xxx\n\"\"\") == \"\"\"1 1 2\n2 4 3\n\"\"\"\n\nassert solution(\"\"\"3 3\n..xx\nxx.x\nxx.x\n\"\"\") == \"\"\"1 1 2\n2 3 1\"\"\"\n\nassert solution(\"\"\"6 6\nxxxxx\nx.x.\nx.x.\nx.x.\nx.x.\nx.x.\n\"\"\") == \"\"\"1 1 2\n2 4 3\n\"\"\"\n\nassert solution(\"\"\"5 6\nxxxxxxxx\n.x.x.\nxx..xx\nx.x.x\nx.x.x\nx.x.x\n\"\"\") == \"\"\"1 1 2\n2 4 3\n\"\"\""
    },
    {
        "number": 3132,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 3\") == \"\"\nassert solution(\"2 2\") == \"\"\nassert solution(\"3 3\") == \"\"\nassert solution(\"1 1\") == \"\"\n"
    },
    {
        "number": 3132,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 3\\nxx.\\nxxx\\n...\\n') == '1 1 2\\n2 3 1\\n'\nassert solution('2 4\\nxx....\\nxx.xxx\\n...xxx\\n...xxx\\n') == '1 1 2\\n2 4 3\\n'\n"
    },
    {
        "number": 3132,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    stdin='3 3\\nxx.\\nxxx\\n...') == \"1 1 2\\n2 3 1\"\nassert solution(\n    stdin='4 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx') == \"1 1 2\\n2 4 3\"\nassert solution(\n    stdin='2 3\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx."
    },
    {
        "number": 3132,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_result\n"
    },
    {
        "number": 3133,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == answer\n\"\"\""
    },
    {
        "number": 3133,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n'''\n"
    },
    {
        "number": 3133,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == answer()\n"
    },
    {
        "number": 3133,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 1 2\n1 2 1\n0 2 0\n0 1 0''') == '0'\nassert solution('''3 1 3\n0 1 1\n0 2 1\n0 3 1''') == 'indistinguishable'\nassert solution('''3 1 3\n0 1 2\n1 1 1\n0 0 0\n''') == '0'\nassert solution('''4 1 2\n0 1 2\n0 1 3\n0 1 4\n1 1 1\n1 1 2\n0 2 0\n1 2 0\n0 3 1\n1 3 1\n''') == 'indistinguishable'\nassert solution('''3 2 1\n0 2 1\n0 3 1\n1 2 1\n0 1 3\n1 2 3\n1 1 1\n0 2 1\n1 3 1\n''') == '1'\n"
    },
    {
        "number": 3133,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 1 2\\n1 2 1\\n0 2 0\\n0 1 0\") == \"0\"\nassert solution(\"2 0 1\\n1 1 1\\n0 0 0\") == \"indistinguishable\"\n\"\"\"\n"
    },
    {
        "number": 3133,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n0\\n0\\n') == '0'\nassert solution('3\\n1 2 1\\n0 2 0\\n0 1 0') == 'indistinguishable'\nassert solution('3\\n1 2 1\\n2 2 1\\n1 2 0') == '2'\nassert solution('4\\n1 2 3 4\\n1 1 1 1\\n0 0 0 0\\n0 0 0 0') == 'indistinguishable'\nassert solution('4\\n1 2 3 4\\n1 1 1 1\\n0 0 0 0\\n2 1 0 0') == '2'\n"
    },
    {
        "number": 3133,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1\\n0 0 0\\n0 1 0\") == \"0\"\nassert solution(\"1 1 1\\n1 1 1\\n0 0 0\\n0 1 0\") == \"indistinguishable\"\nassert solution(\"3 1 2\\n1 2 1\\n0 2 0\\n0 1 0\") == \"0\"\nassert solution(\"2 0 1\\n1 1 1\\n0 0 0\\n0 1 0\") == \"0\"\nassert solution(\"3 1 2\\n1 3 1\\n0 2 0\\n0 1 0\") == \"1\"\n"
    },
    {
        "number": 3133,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 1 2') == '0'\nassert solution('1 2 1') == 'indistinguishable'\nassert solution('0 2 0') == 'indistinguishable'\nassert solution('0 1 0') == '0'\nassert solution('0 0 0') == 'indistinguishable'\n"
    },
    {
        "number": 3133,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1 1') == '0'\nassert solution('0 1 1') == '1'\nassert solution('1 0 1') == 'indistinguishable'\nassert solution('0 0 1') == '0'\nassert solution('1 0 1') == '1'\n"
    },
    {
        "number": 3133,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\nassert solution('\\n'.join([\n    '3 1 2',\n    '1 2 1',\n    '0 2 0',\n    '0 1 0',\n])) == '0\\n'\nassert solution('\\n'.join([\n    '3 1 2',\n    '1 2 1',\n    '0 2 0',\n    '0 1 0',\n])) == 'indistinguishable'\nassert solution('\\n'.join([\n    '3 4 3',\n    '1 1 0',\n    '0 3 1',\n    '0 2 2',\n])) == '1\\n'\nassert solution('\\n'.join([\n    '10 1 1',\n    '0 1 2',\n    '0 3 2',\n    '0 6 3',\n    '0 7 3',\n    '0 8 2',\n    '0 9 2',\n    '0 10 2',\n    '0 11 1',\n])) == '6\\n'\n"
    },
    {
        "number": 3134,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''0110\n1001'''\n    ) == '1111'\n\nassert solution(\n'''0\n1\n0110\n1001'''\n    ) == '-1'\n\nassert solution(\n'''1\n0\n1001\n0110'''\n    ) == '-1'\n\nassert solution(\n'''0\n1\n0110\n1101'''\n    ) == '1110'\n\nassert solution(\n'''0\n1\n1001\n1011'''\n    ) == '1010'"
    },
    {
        "number": 3134,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0110\") == \"1111\"\nassert solution(\"1001\") == \"0111\"\nassert solution(\"0\") == \"-1\"\nassert solution(\"1\") == \"-1\"\nprint(\"All tests passed successfully\")\n\n\"\"\""
    },
    {
        "number": 3134,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('101100') == '101111'\nassert solution('101') == '1111'\nassert solution('100') == '1110'\nassert solution('01') == '1111'\nassert solution('00') == '-1'\n"
    },
    {
        "number": 3134,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == '-1'\nassert solution('0000000000001101') == '10101010101010101'\nassert solution('0000000000010101') == '10101010101010101'\nassert solution('0000000100000001') == '10101010101010101'\nassert solution('00000001000000101') == '10101010101010101'\n"
    },
    {
        "number": 3134,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n0110\n1001\n''') == '1111\nassert solution(\n'''\n0\n1\n''') == '-1'\nassert solution(\n'''\n0001\n0001\n''') == '1'\nassert solution(\n'''\n1001\n1110\n''') == '1110'\nassert solution(\n'''\n1111\n1110\n''') == '1110'\n"
    },
    {
        "number": 3134,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"0110\n1001\"\"\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\n\"\"\"1\n1\"\"\") == \"-1\""
    },
    {
        "number": 3134,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0110\") == \"1111\"\nassert solution(\"1001\") == \"0111\"\nassert solution(\"0\") == \"-\"\nassert solution(\"1\") == \"-\""
    },
    {
        "number": 3134,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    '0110'\n    '1001') == '1111'\nassert solution(\n    '0'\n    '1') == '-1'\nassert solution(\n    '0011'\n    '0001') == '0111'\nassert solution(\n    '0001'\n    '1111') == '0111'\nassert solution(\n    '0111'\n    '0000') == '1110'\n"
    },
    {
        "number": 3134,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0110'\n'1001') == '1111'\nassert solution('0'\n'1') == '-1'\nassert solution('0110'\n'1001'\n'0100'\n'1010') == '1110'\nassert solution('0'\n'1'\n'0100'\n'1010'\n'0000') == '-1'\n\"\"\"\n"
    },
    {
        "number": 3134,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0110\\n1001\\n') == '1111\\n0111\\n1110\\n1111'\nassert solution('0\\n1\\n') == '-1'\nassert solution('0110\\n1001\\n') == '1111\\n0111\\n1110\\n1111'\nassert solution('0\\n1\\n') == '-1'\nassert solution('0110\\n1001\\n') == '1111\\n0111\\n1110\\n1111'\n"
    },
    {
        "number": 3135,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"10000\") == \"+0000\"\n\"\"\"\n"
    },
    {
        "number": 3135,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\"\nassert solution(\"1110\") == \"+000-0\"\nassert solution(\"1011\") == \"+001-+\"\nassert solution(\"0011\") == \"+001-++\"\n"
    },
    {
        "number": 3135,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected1\nassert solution(stdin) == expected2\nassert solution(stdin) == expected3\nassert solution(stdin) == expected4\nassert solution(stdin) == expected5\n"
    },
    {
        "number": 3135,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\", \"Please check your output\"\n\nprint(\"The testing is done, hit ENTER to continue\")\ninput()\n'''\n"
    },
    {
        "number": 3135,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10000') == '+0000'\nassert solution('1111') == '+000-'\nassert solution('110') == '-000'\nassert solution('111') == '+001-'\nassert solution('10101') == '-100'\n"
    },
    {
        "number": 3135,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\"\nassert solution(\"1\") == \"+000\"\nassert solution(\"2\") == \"+000\"\nassert solution(\"10\") == \"+000\"\n"
    },
    {
        "number": 3135,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1') == '+'\nassert solution('1000') == '+-11'\nassert solution('1000000') == '+-11-100'\nassert solution('10000001') == '+-111'\n"
    },
    {
        "number": 3135,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n1111\n''') == \"+000-\", \"Wrong answer!\"\n\nassert solution(\n'''\n10000\n''') == \"+0000\", \"Wrong answer!\"\n\nassert solution(\n'''\n10001\n''') == \"+0001\", \"Wrong answer!\"\n\nassert solution(\n'''\n110000\n''') == \"-00-\", \"Wrong answer!\"\n\nassert solution(\n'''\n110101\n''') == \"++-\", \"Wrong answer!\""
    },
    {
        "number": 3135,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10000') == '+0000'\nassert solution('1111') == '+000-', '+000- should be lexicographically smallest'\n"
    },
    {
        "number": 3135,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10000') == '+0000'\nassert solution('1111') == '+000-'\nassert solution('10010') == '+-110'\nassert solution('01111') == '+000+'\nassert solution('10000001') == '-1-0000001'\n"
    },
    {
        "number": 3136,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5''') == '9'\nassert solution('''4 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5''') == '2'\nassert solution('''2 1 1 1\n2 2\n1\n1\n1 2 1\n''') == '2'\n\nimport unittest\nclass TestConsecutivePairs(unittest.TestCase):\n    def test_solution(self):\n        self.assertEqual(solution('''4 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5'''), '9')\n        self.assertEqual(solution('''4 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5'''), '2')\n        self."
    },
    {
        "number": 3136,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3136,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7 8 3 2''') == '9'\nassert solution('''1 2''') == '2'\nassert solution('''7 3 4''') == '1'\nassert solution('''5 6''') == '1'\nassert solution('''1 3 2''') == '1'\n"
    },
    {
        "number": 3136,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"7 8 3 2\"\"\") == \"9\"\nassert solution(\"\"\"5 1\n5\n5\n5\n5\n5\n5\"\"\") == \"5\"\nassert solution(\"\"\"3 3 1 1\n1 2\n1 3\n1 2\n1 1\n1 2\n1 3\n1 3\n1 2\n1 2\n1 1\n1 1\n1 1\"\"\") == \"3\"\nassert solution(\"\"\"3 4 2 2\n2 1 4\n1 3\n1 4\n1 1 4\n1 4 1\n1 2 4\n1 4 4\n1 4 1\n1 1 4\n1 2 2\n1 2 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n"
    },
    {
        "number": 3136,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '2'\n"
    },
    {
        "number": 3136,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''7 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5''') == '9'\n\nassert solution('''10 10 5 1\n2 4\n3 6\n3 8\n1 3 2\n4 5 1\n4 7 1\n5 9 1\n4 9 1\n4 8 1\n9 8 1\n4 5 1\n3 2\n1\n2\n2 1 1\n3 1 1\n4 1 1\n5 1 1\n6 1 1\n7 1 1\n8 1 1\n9 1 1''') == '10'\n\nassert solution('''2 1 1 1\n2 2\n1\n1\n1 2 1\n''') == '2'\n\nassert solution('''2 1 1 1\n2 2\n1\n1\n1 2 1\n''') == '2'\n\nassert solution('''2 1 1 1\n2 2\n1\n1\n1 2 1\n''') == '2'"
    },
    {
        "number": 3136,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5') == '9'\nassert solution('2 1 1 1\\n2 2\\n1\\n1\\n1 2 1\\n') == '2'\nprint(solution(open('/home/vutronghu/Desktop/Programming/Coursera/Algorithms/graphs/data_structures/data_structures/2/problems/4/input.txt').read()))\n"
    },
    {
        "number": 3136,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5 1 1 1\") == \"2\"\nassert solution(\"7 8 3 2\") == \"9\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 2 1\") == \"1\"\nassert solution(\"1 2 1 1\") == \"2\"\n"
    },
    {
        "number": 3136,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6 5 3 2') == '5'\nassert solution('6 5 3 2\\n1 2\\n1 3 4\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\\n') == '5'\nassert solution('5 7 3 2\\n1 2\\n2 3\\n1 3\\n1 4\\n1 5\\n1 6\\n2 6\\n2 7\\n3 7\\n') == '7'\nassert solution('3 5 3 2\\n1 2\\n1 3 4\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\\n') == '9'\nassert solution('5 7 3 2\\n1 2\\n2 3\\n1 3\\n1 4\\n1 5\\n1 6\\n2 6\\n2 7\\n3 7\\n') == '5'\n"
    },
    {
        "number": 3136,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 1 1 1\\n2 2\\n1\\n1\\n1 2 1\\n') == '2'\nassert solution('3 3 2 1\\n1 2\\n1 3 3\\n2 3\\n2 3 1\\n3 1\\n2 1 2\\n') == '3'\nassert solution('4 4 2 1\\n1 2\\n1 3 3\\n2 3\\n2 3 1\\n3 1\\n2 1 2\\n3 1\\n2 3 3\\n1 2\\n') == '2'\nassert solution('5 5 2 1\\n1 2\\n1 3 3\\n2 3\\n2 3 1\\n3 1\\n2 1 2\\n1 3 2\\n2 3\\n3 3 1\\n1 2\\n') == '4'\nassert solution('6 6 2 1\\n1 2\\n1 3 3\\n2 3\\n2 3 1\\n3 1\\n2 1 2\\n1 3 2\\n2 3\\n3 3 1\\n1 2\\n3 3\\n2 3\\n') == '5'\n"
    },
    {
        "number": 3137,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3 1\n2 2\n1 1 R\n010\n000\n000\n''') == \"2\"\nassert solution('''3 4 2\n2 2\n3 4 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301\n''') == \"7\"\nassert solution('''3 3 1\n2 2\n1 1 R\n010\n000\n000\n''') == \"-1\"\nassert solution('''3 3 1\n2 2\n1 1 R\n010\n000\n000\n''') == \"7\"\nassert solution('''3 4 2\n2 2\n3 4 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301\n''') == \"7\"\n"
    },
    {
        "number": 3137,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 3 1\n2 2\n1 1 R\n010\n000\n000\n''') == '2'\nassert solution('''3 4 2\n2 2\n3 4 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301\n''') == '7'\nassert solution('''10 10 10\n1 1 U\n9 9 R\n9 9 R\n8 8 R\n8 8 R\n8 8 R\n8 8 R\n8 8 R\n8 8 R\n8 8 R\n''') == '-1'\nassert solution('''10 10 10\n1 1 U\n9 9 R\n9 9 R\n8 8 R\n8 8 R\n8 8 R\n8 8 R\n8 8 R\n8 8 R\n8 8 R\n''') == '-1'\nassert solution('''3 3 1\n2 2\n1 1 R\n010\n000\n000\n''') == '2'\n"
    },
    {
        "number": 3137,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 4 2\\n2 2\\n1 1 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301') == '7'\nassert solution('3 5 5\\n1 2 R\\n2 1 U\\n3 2 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n"
    },
    {
        "number": 3137,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000\\n000') == '2'\nassert solution('3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\\n000') == '7'\nassert solution('3 5 1\\n1 1 R\\n000\\n000\\n000\\n000\\n000\\n000') == '-1'\nassert solution('3 3 2\\n1 1 R\\n000\\n000\\n000\\n000\\n000\\n000') == '-1'\nassert solution('5 5 3\\n4 4 U\\n3 3 R\\n2 2 D\\n1 1 R\\n010\\n000\\n000\\n000') == '6'\n"
    },
    {
        "number": 3137,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''3 4 2\n2 2\n3 4 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301''') == '7'\n\nassert solution(\n'''3 4 2\n2 2\n3 4 U\n2327\n6009\n2112\n3 2 U\n1310\n2101\n1301''') == '7'\n\nassert solution(\n'''3 4 2\n2 2\n3 4 L\n2327\n6009\n2112\n3 2 L\n1310\n2101\n1301''') == '7'\n\nassert solution(\n'''3 4 2\n2 2\n3 4 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301''') == '7'\n\nassert solution(\n'''3 4 2\n2 2\n3 4 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301''') == '7'"
    },
    {
        "number": 3137,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == '-1'\nassert solution('3 3 1') == '2'\nassert solution('3 4 2') == '7'\nassert solution('3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\\n') == '7'\nassert solution('3 4 2\\n2 2\\n3 4 U\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\\n') == '-1'\n"
    },
    {
        "number": 3137,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"3 3 1\"\n) == \"2\"\nassert solution(\n    \"3 4 2\"\n) == \"7\"\nassert solution(\n    \"2 2\"\n) == \"-1\"\nassert solution(\n    \"3 4 2\"\n) == \"7\"\nassert solution(\n    \"1 1 R\"\n) == \"-1\"\n"
    },
    {
        "number": 3137,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 4 2\n2 2\n3 4 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301''') == '7'\nassert solution('''4 4 3\n2 2\n3 4 R\n2478\n6349\n2122\n3 2 R\n1235\n2477\n1311''') == '-1'\nassert solution('''10 10 10\n6 6 U\n7 7 R\n8 8 D\n9 9 R\n10 10 R\n8 8 D\n7 7 R\n6 6 U\n5 5 R\n4 4 D\n3 3 R\n2 2\n1 1 R\n0 0 R\n1 1 R\n2 2\n3 3 R\n4 4 D\n5 5 D\n6 6 U\n7 7 R\n8 8 D\n9 9 R\n10 10 R''') == '10'\nprint(\"All tests passed successfully.\")\n\n\"\"\""
    },
    {
        "number": 3137,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000\\n') == '2'\nassert solution('3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\\n') == '7'\nassert solution('3 3 1\\n2 2\\n1 1 U\\n010\\n000\\n000\\n') == '-1'\nassert solution('3 4 2\\n2 2\\n3 4 U\\n2327\\n6009\\n2112\\n3 2 U\\n1310\\n2101\\n1301\\n') == '-1'\nassert solution('3 3 1\\n2 2\\n1 1 L\\n010\\n000\\n000\\n') == '-1'\n"
    },
    {
        "number": 3137,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 3 1') == 2\nassert solution('3 4 2') == 7\nassert solution('1 1 R') == -1\nassert solution('0 0') == -1\nassert solution('4 3 2') == -1\n"
    },
    {
        "number": 3138,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n"
    },
    {
        "number": 3138,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''5\n2 2 1 2 3'''\n) == '2'\nassert solution(\n'''8\n1 2 4 1 1 2 5 1'''\n) == '4'\nassert solution(\n'''1\n1'''\n) == '1'\nassert solution(\n'''2\n1 2'''\n) == '0'\nassert solution(\n'''8\n1 2 4 1 1 2 5 1'''\n) == '4'\n"
    },
    {
        "number": 3138,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3138,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\") == \"1\"\nassert solution(\"2\\n1\") == \"1\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\") == \"2\"\nassert solution(\"5\\n1 2 2 1 2 3\") == \"4\"\n"
    },
    {
        "number": 3138,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"4\"\n"
    },
    {
        "number": 3138,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n2 2 1 2 3\\n') == '2'\nassert solution('8\\n1 2 4 1 1 2 5 1\\n') == '4'\nassert solution('3\\n1 2 3\\n') == '0'\n"
    },
    {
        "number": 3138,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''5\n2 2 1 2 3\n''') == \"2\"\nassert solution(\n'''8\n1 2 4 1 1 2 5 1\n''') == \"4\"\n"
    },
    {
        "number": 3138,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n2 2 1 2 3') == '2'\nassert solution('8\\n1 2 4 1 1 2 5 1') == '4'\n\nprint(solution(stdin))\n"
    },
    {
        "number": 3138,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n2 2 1 2 3''') == '2'\nassert solution('''8\n1 2 4 1 1 2 5 1''') == '4'\nassert solution('''10\n2 3 4 1 1 2 3 5 1''') == '8'\n''')"
    },
    {
        "number": 3138,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin.split('\\n')[0]\nprint(\"Testcase 1 PASSED\")\n'''\n"
    },
    {
        "number": 3139,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\nD 3 1\nD 2 2\nD 1 3\nP 1\nP 2\nP 3''') == '''NE\nNE\nNE\n3\n1'''\nassert solution('''3\nD 8 8\nD 2 4\nD 5 6\nP 2\nD 6 2\nP 4''') == '''3\n1\nNE\n'''\nassert solution('''1\nP 1\n''') == '''1'''\nassert solution('''1\nP 1\nP 2''') == '''1'''\nassert solution('''1\nP 1\nP 2\nP 3''') == '''1'''\n"
    },
    {
        "number": 3139,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('D 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3') == 'NE'\nassert solution('D 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4') == '3'\nassert solution('D 5 7\\nD 1 3\\nP 1') == '3'\nassert solution('D 6 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4') == '1'\nassert solution('D 2 6\\nD 1 3\\nP 1') == '1'\n"
    },
    {
        "number": 3139,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''D 3 1\nD 2 2\nD 1 3\nP 1\nP 2\nP 3''') == 'NE NE NE'\nassert solution('''D 8 8\nD 2 4\nD 5 6\nP 2\nD 6 2\nP 4''') == '3 1'\nassert solution('''D 4\nD 1 1\nD 1 1\nD 2 2\nP 1\nP 2\nP 3\nP 4\nP 5\nP 6\nD 7 7\nP 7\nP 8\nP 9\nP 10''') == '1 1 2 2 3 4'\nassert solution('''D 4\nD 1 1\nD 1 1\nD 2 2\nP 1\nP 2\nP 3\nP 4\nP 5\nP 6\nD 7 7\nP 7\nP 8\nP 9\nP 10''') == '1 1 2 2 3 4'\nassert solution('''D 8\nD 2 4\nD 5 6\nP 2\nD 6 2\nP 4\nP 5\nP 6\nP 7\nP 8\nP 9\nP 10\nP 11\nP 12\nP 13\nP 14\nP 15\nP 16\nD 17 17\nP 17\nP 18\nP 19\nP 20\nP 21\nP 22\nP 23\nD 24 24\nP 24\nP 25\nP 26\nP 27\nP 28\nP 29\nP 30\nP 31\nP 32\nP 33\nP 34\nP 35\nP 36\nP 37\nP 38\nP 39\nP 40\nP 41\nP 42\nP 43\nP 44\nP 45\nP 46\nP 47\nP 48\nP 49\nP 50\nP 51\nP 52\nP 53\nP 54\nP 55\nP 56\nP 57\nP 58\nP 59\nP 60\nP 61\nP 62\nP 63\nP 64\nP 65\nP 66\nP 67\nP 68\nP 69\nP 70\nP 71\nP 72\nP 73\nP 74\nP 75\nP 76\nP 77\nP 78\nP 79\nP 80\nP 81\nP 82\nP 83\nP 84\nP 85\nP 86\nP 87\nP 88\nP 89\nP 90\nP 91\nP 92\nP 93\nP 94\nP 95\nP 96\nP 97\nP 98\nP 99\nP 100\nP 101\nP 102\nP 103\nP 104\nP 105\nP 106\nP 107\nP 108\nP 109\nP 110\nP 111\nP 112\nP 113\nP 114\nP 115\nP 116\nP 117\nP 118\nP 119\nP 120\nP 121\nP 122\nP 123\nP 124\nP 125\nP 126\nP 127\nP 128\nP 129\nP 130\nP 131\nP 132\nP 133\nP 134\nP 135\nP 136\nP 137\nP 138\nP 139\nP 140\nP 141\nP 142\nP 143\nP 144\nP 145\nP 146\nP 147\nP 148\nP 149\nP 150\nP 151\nP 152\nP 153\nP 154\nP 155\nP 156\nP 157\nP 158\nP 159\nP 160\nP 161\nP 162\nP 163\nP 164\nP 165\nP 166\nP 167\nP 168\nP 169\nP 170\nP 171\nP 172\nP 173\nP 174\nP 175\nP 176\nP 177\nP 178\nP 179\nP 180\nP 181\nP 182\nP 183\nP 184\nP 185\nP 186\nP 187\nP 188\nP 189\nP 190\nP 191\nP 192\nP 193\nP 194\nP 195\nP 196\nP 197\nP 198\nP 199\nP 200\nP 201\nP 202\nP 203\nP 204\nP 205\nP 206\nP 207\nP 208\nP 209\nP 210\nP 211\nP 212\nP 213\nP 214\nP 215\nP 216\nP 217\nP 218\nP 219\nP 220\nP 221\nP 222\nP 223\nP 224\nP 225\nP 226\nP 227\nP 228\nP 229\nP 230\nP 231\nP 232\nP 233\nP 234\nP 235\nP 236\nP 237\nP 238\nP 239\nP 240\nP 241\nP 242\nP 243\nP 244\nP 245\nP 246\nP 247\nP 248\nP 249\nP 250\nP 251\nP 252\nP 253\nP 254\nP 255\nP 256\nP 257\nP 258\nP 259\nP 260\nP 261\nP 262\nP 263\nP 264\nP 265\nP 266\nP 267\nP 268\nP 269\nP 270\nP 271\nP 272\nP 273\nP 274\nP 275\nP 276\nP 277\nP 278\nP 279\nP 280\nP 281\nP 282\nP 283\nP 284\nP 285\nP 286\nP 287\nP 288\nP 289\nP 290\nP 291\nP 292\nP 293\nP 294\nP 295\nP 296\nP 297\nP 298\nP 299\nP 300\nP 301\nP 302\nP 303\nP 304\nP 305\nP 306\nP 307\nP 308\nP 309\nP 310\nP 311\nP 312\nP 313\nP 314\nP 315\nP 316\nP 317\nP 318\nP 319\nP 320\nP 321\nP 322\nP 323\nP 324\nP 325\nP 326\nP 327\nP 328\nP 329\nP 330\nP 331\nP 332\nP 333\nP 334\nP 335\nP 336\nP 337\nP 338\nP 339\nP 340\nP 341\nP 342\nP 343\nP 344\nP 345\nP 346\nP 347\nP 348\nP 349\nP 350\nP 351\nP 352\nP 353\nP 354\nP 355\nP 356\nP 357\nP 358\nP 359\nP 360\nP 361\nP 362\nP 363\nP 364\nP 365\nP 366\nP 367\nP 368\nP 369\nP 370\nP 371\nP 372\nP 373\nP 374\nP 375\nP 376\nP 377\nP 378\nP 379\nP 380\nP 381\nP 382\nP 383\nP 384\nP 385\nP 386\nP 387\nP 388\nP 389\nP 390\nP 391\nP 392\nP 393\nP 394\nP 395\nP 396\nP 397\nP 398\nP 399\nP 400\nP 401\nP 402\nP 403\nP 404\nP 405\nP 406\n"
    },
    {
        "number": 3139,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('D 1 1\\nD 2 2\\nD 3 3\\nP 1\\nP 2\\nP 3') == '3\\n1\\n1\\n'\nassert solution('D 1 1\\nD 2 2\\nD 3 3\\nP 2\\nD 3 1\\nP 4\\n') == '3\\n1\\n2\\n'\nassert solution('D 5 3\\nD 2 3\\nD 3 2\\nP 1\\nP 2\\nP 3\\nP 4\\n') == '2\\n1\\n3\\n'\nassert solution('D 1 1\\nD 2 2\\nD 3 3\\nP 1\\nP 2\\nP 3\\nP 4\\nP 5\\nP 6\\n') == '3\\n1\\n2\\n1\\n'\nassert solution('D 1 1\\nD 2 2\\nD 3 3\\nP 1\\nP 2\\nP 3\\nP 4\\nP 5\\nP 6\\nP 7\\nP 8\\nP 9\\nP 10\\n') == '3\\n1\\n2\\n1\\n1\\n1\\n1\\n'\n"
    },
    {
        "number": 3139,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3139,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('D 2 4\\nD 1 3\\nP 1\\nP 2\\nP 3\\nD 1 1\\nP 4\\n') == '3'\nassert solution('D 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\\n') == '1'\n"
    },
    {
        "number": 3139,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"6\nD 3 1\nD 2 2\nD 1 3\nP 1\nP 2\nP 3\"\"\") == \"3\"\nassert solution(\n\"\"\"6\nD 8 8\nD 2 4\nD 5 6\nP 2\nD 6 2\nP 4\"\"\") == \"1\"\nassert solution(\n\"\"\"6\nD 8 8\nD 2 4\nD 5 6\nP 2\nD 6 2\nP 4\"\"\") == \"NE\"\nassert solution(\n\"\"\"6\nD 8 8\nD 2 4\nD 5 6\nP 2\nD 6 2\nP 4\"\"\") == \"3\"\nassert solution(\n\"\"\"6\nD 8 8\nD 2 4\nD 5 6\nP 2\nD 6 2\nP 4\"\"\") == \"1\"\n"
    },
    {
        "number": 3139,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"D 3 1\") == \"NE\"\nassert solution(\"D 2 2\") == \"NE\"\nassert solution(\"D 1 3\") == \"NE\"\nassert solution(\"P 1\") == \"NE\"\nassert solution(\"P 2\") == \"3\"\n"
    },
    {
        "number": 3139,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"\\nD 3 1\\nD 2 2\\nD 1 3\\nP 1\") == \"NE\"\nassert solution(\"\\nD 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\\n\") == \"3\"\nassert solution(\"\\nD 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\\nD 1 3\\nP 1\") == \"3\"\n"
    },
    {
        "number": 3139,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''D 3 1\nD 2 2\nD 1 3\nP 1\nP 2\nP 3''') == '3'\nassert solution('''D 8 8\nD 2 4\nD 5 6\nP 2\nD 6 2\nP 4''') == '1'\nassert solution('''D 5 5\nP 1\nP 3\nP 2\nP 1\nP 3''') == '3'\nassert solution('''D 3 1\nD 2 2\nD 1 3\nD 1 3\nD 1 3\nD 1 3\nD 1 3\nP 1\nP 2\nP 3''') == '1'\nassert solution('''D 5 5\nP 1\nP 3\nP 2\nP 1\nP 3\nP 1\nP 3\nP 2\nP 1\nP 3\nP 1\nP 3''') == '3'\n"
    },
    {
        "number": 3140,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3140,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(sample0) == \"5\"\nassert solution(sample1) == \"2\"\nassert solution(sample2) == \"6\"\nassert solution(sample3) == \"3\"\nassert solution(sample4) == \"4\"\n"
    },
    {
        "number": 3140,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''2 2 1 10\n0 0\n1 4\n3 2\n''') == \"2\"\nassert solution(\n'''2 3 5 6\n1 1\n1 1 6\n1 2 2\n''') == \"5\"\nassert solution(\n'''10 10 5 5\n9 9 5\n9 9 7\n9 9 5\n9 9 7\n9 9 6\n9 9 4\n9 9 3\n9 9 2\n9 9 1\n''') == \"9\"\nassert solution(\n'''1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1"
    },
    {
        "number": 3140,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3140,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 2 1 10\n0 0\n1 4\n3 2''') == '2'\nassert solution('''2 2 1 10\n0 0\n1 4\n3 2''') == '2'\nassert solution('''2 2 1 10\n0 0\n1 4\n3 2''') == '5'\nassert solution('''2 2 1 10\n0 0\n1 4\n1 2 2''') == '5'\nassert solution('''2 2 1 10\n0 0\n1 4\n1 2 2''') == '5'\n"
    },
    {
        "number": 3140,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3140,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 2 1 10\n0 0\n1 4\n3 2''') == '2'\nassert solution('''2 3 5 6\n1 1\n1 1 6\n1 2 2\n''') == '5'\nassert solution('''2 3 5 6\n1 1\n1 1 6\n1 2 2\n''') == '5'\nassert solution('''3 3 1 10\n0 0\n1 4\n2 3\n''') == '3'\nassert solution('''3 3 1 10\n0 0\n1 4\n2 3\n''') == '3'\n"
    },
    {
        "number": 3140,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0,0\\n1,1\\n1,0\\n1,1\\n1,1\\n1,0\\n1,1\\n1,1\\n1,0\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1"
    },
    {
        "number": 3140,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') is None\nassert solution('0 0') == '0'\nassert solution('2 2 1 10') == '2'\nassert solution('0 0') == '0'\nassert solution('1 4') == '1'\n"
    },
    {
        "number": 3140,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin.strip()\n\"\"\"\n\n\n\"\"\"\nMITx 6.009 Introduction to Computing using Python\nProblem 8\n25 Sep 2019\n\nOne way to become familiar with the idea of pipelines and pipelines and pipelines is to use the two-step approach: to write a program, write a series of steps that are executed one after the other, rather than writing a series of programs which write the output of one program as input to the next.\n\nThe steps are as follows:\n\nWrite a program to compute the first 100 Fibonacci numbers. The program should have a variable which contains the previous number (which is 1 for the first number), and another variable which contains the number that is to be computed.\n\nNext, write a function that returns the next number in the sequence by adding the previous number to the previous number.\n\nFinally, write a function that prints the first 100 Fibonacci numbers, starting from the number 1.\n\n-----Input-----\nThe input consists of:\n - one line with the integers $n$ and $m$ ($1 \\le n, m \\le 10^5$), the dimensions of the sequence, and the number of Fibonacci numbers to be printed.\n - one line with $n$ integers $f_{i}$ ($0 \\le i < n$), the first $n$ numbers of the sequence.\n\n-----Output-----\nPrint the first $m$ numbers of the sequence. Each number should be printed on a single line.\n\n-----Examples-----\nSample Input 1:\n10 10\n1 3 4 7 11 16 25 35 43\n\nSample Output 1:\n1\n3\n5\n8\n13\n21\n34\n55\n89\n144\n233\n377\n\nSample Input 2:\n5 5\n1 3 4 5\n\nSample Output 2:\n1\n3\n5\n8\n13\n\"\"\"\n\n\n\"\"\"\nMITx 6.009 Introduction to Computing using Python\nProblem 9\n25 Sep 2019\n\nGiven a matrix of dimension $n \\times m$, calculate the number of distinct rows.\n\n-----Input-----\nThe input consists of:\n - one line with the integers $n$ and $m$ ($1 \\le n, m \\le 10^5$), the dimensions of the matrix, and the number of rows.\n - one line with $n$ integers $a_{i, j}$ ($0 \\le i < n$ and $0 \\le j < m$), the elements of the $i$\u2019th row.\n\n-----Output-----\nOutput the number of distinct rows.\n\n-----Examples-----\nSample Input 1:\n3 3\n1 2 3\n2 1 4\n3 2 1\n\nSample Output 1:\n3\n\nSample Input 2:\n2 3\n1 2\n1 2\n\nSample Output 2:\n2\n\nSample Input 3:\n2 2\n1 2\n2 1\n\nSample Output 3:\n1\n\"\"\"\n\n\n\"\"\"\nMITx 6.009 Introduction to Computing using Python\nProblem 10\n25 Sep 2019\n\nThe Fibonacci numbers are the numbers in the following integer sequence:\n\n$F_0 = 0$\n$F_1 = 1$\n$F_2 = 1$\n$F_3 = 2$\n$F_4 = 3$\n$F_5 = 5$\n$F_6 = 8$\n$F_{n+1} = F_n + F_{n-1}$\n\nFor example, $F_3$ = 1 and $F_{4}$ = 5. What is the value of the 3rd Fibonacci number $F_3$?\n\n-----Input-----\nThe input consists of:\n - one line with the integers $n$ and $m$ ($1 \\le n, m \\le 10^5$), the dimensions of the matrix, and the number of Fibonacci numbers to be printed.\n - one line with $n$ integers $a_{i, j}$ ($0 \\le i < n$ and $0 \\le j < m$), the elements of the $i$\u2019th row.\n\n-----Output-----\nOutput the value of the $n$\u2019th Fibonacci number $F_n$.\n\n-----Examples-----\nSample Input 1:\n3 3\n1 2 3\n2 1 4\n3 2 1\n\nSample Output 1:\n3\n\nSample Input 2:\n2 3\n1 2\n1 2\n\nSample Output 2:\n2\n\nSample Input 3:\n1 1\n1 1\n\nSample Output 3:\n1\n\"\"\"\n\n\"\"\"\nMITx 6.009 Introduction to Computing using Python\nProblem 11\n25 Sep 2019\n\nThe cube, 41063625 (345^3), can be permuted to produce two other cubes: 56623104 (384^3) and 66430125 (405^3). In fact, 41063625 is the smallest cube which has exactly three permutations of its digits which are also cube.\n\nFind the smallest cube for which exactly five permutations of its digits are cube.\n\n-----Input-----\nThe input consists of:\n - one line with the integers $n$ and $m$ ($1 \\le n, m \\le 10^5$), the dimensions of the matrix, and the number of Fibonacci numbers to be printed.\n - one line with $n$ integers $a_{i, j}$ ($0 \\le i < n$ and $0 \\le j < m$), the elements of the $i$\u2019th row.\n\n-----Output-----\nPrint the value of the smallest cube for which exactly five permutations of its digits are cube. If there are more than one cube which is cube, output the value of the smallest cube.\n\n-----Examples-----\nSample Input 1:\n3 3\n1 2 3\n2 1 4\n3 2 1\n\nSample Output 1:\n6\n\nSample Input 2:\n2 3\n1 2\n1 2\n\nSample Output 2:\n4\n\nSample Input 3:\n1 1\n1 1\n\nSample Output 3:\n1\n\"\"\"\n\n\n\"\"\"\nMITx 6.009 Introduction to Computing using Python\nProblem 12\n25 Sep 2019\n\nA word w is a good word if there exists a string of letters 'w' in the string. We define good and bad words to be any word that is good or bad, respectively. Given a string S of lowercase letters and a list of good and bad words, print out the number of good words in S.\n\nA word is a good word if it can be formed by deleting some number of letters from the string S.\n\nFor example, \"apple\", \"ple\", and \"le\" are good words. For \"leawe\", we need to delete two letters which is not a word.\n\n-----Input-----\nThe input consists of:\n - one line with the integers $n$ and $m$ ($1 \\le n \\le 10^5$), the dimensions of the matrix, and the number"
    },
    {
        "number": 3141,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1.0 0.0 1.4\n-1.0 0.0 -1.4\n0.0 1.0 -0.2\n''') == '2.0000000000'\nassert solution('''5\n1.4 1.0 0.0\n-0.4 -1.0 0.0\n-0.1 -0.25 -0.5\n-1.2 0.0 0.9\n0.2 0.5 0.5\n''') == '2.0000000000'\nassert solution('''6\n1.6 0.0 0.0\n-0.2 0.0 0.0\n-0.5 0.0 0.0\n-1.4 0.0 0.0\n-0.6 0.0 0.0\n0.3 0.3 0.3\n''') == '2.0000000000'\nassert solution('''7\n-2.0 0.0 0.0\n0.0 2.0 0.0\n-0.5 0.5 0.0\n0.0 0.0 0.0\n-1.3 0.0 0.0\n-0.3 0.3 0.3\n-0.3 0.3 0.3\n''') == '2.0000000000'\nassert solution('''8\n-2.0 0.0 0.0\n0.0 2.0 0.0\n-0.5 0.5 0.0\n0.0 0.0 0.0\n-1.3 0.0 0.0\n-0.3 0.3 0.3\n-0.3 0.3 0.3\n-0.5 0.5 0.0\n''') == '2.0000000000'\n"
    },
    {
        "number": 3141,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1.0 0.0 1.4') == '2.0000000000'\nassert solution('2\\n1.0 0.0 -1.4\\n-1.0 0.0 -1.4') == '2.0000000000'\nassert solution('3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2') == '2.0000000000'\nassert solution('5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5') == '2.0000000000'\nassert solution('4\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n-1.2 0.0 0.9\\n0.2 0.5 0.5') == '2.0000000000'\n"
    },
    {
        "number": 3141,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\\n1.0 0.0 -0.2\\n0.0 0.5 0.5\") == \"2.0000000000\"\n\nassert solution(\"5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5\") == \"2.0000000000\"\n\nassert solution(\"7\\n0.0 0.0 0.0\\n-0.5 -0.5 0.0\\n-0.2 -0.2 0.5\\n0.0 0.5 0.5\\n0.5 0.5 0.5\\n0.2 0.2 0.5\\n0.5 0.0 0.5\") == \"3.0\"\n\nassert solution(\"13\\n1.0 0.0 1.0\\n0.0 -1.0 1.0\\n0.0 0.0 -1.0\\n0.0 1.0 -0.5\\n0.0 -1.0 0.5\\n0.5 0.5 0.5\\n0.5 0.0 0.5\\n-0.5 0.0 0.5\\n-0.5 0.0 -0.5\\n-0.5 0.5 -0.5\\n-0.5 -0.5 -0.5\") == \"2.0000000000\"\n\nassert solution(\"15\\n1.0 0.0 1.0\\n0.0 -1.0 1.0\\n0.0 0.0 -1.0\\n0.0 1.0 -0.5\\n0.0 -1.0 0.5\\n0.5 0.5 0.5\\n0.5 0.0 0.5\\n-0.5 0.0 0.5\\n-0.5 0.0 -0.5\\n-0.5 0.5 -0.5\\n-0.5 -0.5 -0.5\\n-0.5 -0.5 0.5\") == \"3.0\""
    },
    {
        "number": 3141,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n1.0 0.0 1.4\n-1.0 0.0 -1.4\n0.0 1.0 -0.2\n''') == '2.0000000000'\n'''\nassert solution('''5\n1.4 1.0 0.0\n-0.4 -1.0 0.0\n-0.1 -0.25 -0.5\n-1.2 0.0 0.9\n0.2 0.5 0.5\n''') == '2.0000000000'\n"
    },
    {
        "number": 3141,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n1.0 0.0 1.4\n-1.0 0.0 -1.4\n0.0 1.0 -0.2''') == '2.0000000000'\nassert solution('''5\n1.4 1.0 0.0\n-0.4 -1.0 0.0\n-0.1 -0.25 -0.5\n-1.2 0.0 0.9\n0.2 0.5 0.5''') == '2.0000000000'\n"
    },
    {
        "number": 3141,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 0 0\") == '2'\nassert solution(\"1 1 1\") == '1.0000000000000000'\nassert solution(\"0 0 0\") == '0'\nassert solution(\"-1 1 1\") == '-1.0000000000000000'\nassert solution(\"0 0 0\") == '0'\n"
    },
    {
        "number": 3141,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n1.0 0.0 1.4\n-1.0 0.0 -1.4\n0.0 1.0 -0.2\n''') == '2.0000000000'\nassert solution('''5\n1.4 1.0 0.0\n-0.4 -1.0 0.0\n-0.1 -0.25 -0.5\n-1.2 0.0 0.9\n0.2 0.5 0.5\n''') == '2.0000000000'\nassert solution('''10\n1.4 1.0 0.0\n-0.4 -1.0 0.0\n-0.1 -0.25 -0.5\n-1.2 0.0 0.9\n0.2 0.5 0.5\n-0.2 0.5 0.5\n-0.1 -0.25 -0.5\n1.4 1.0 0.0\n-0.4 -1.0 0.0\n-0.1 -0.25 -0.5\n-1.2 0.0 0.9\n0.2 0.5 0.5\n''') == '3.3333333333'\nassert solution('''5\n-1.4 1.0 0.0\n-0.4 -1.0 0.0\n-0.1 -0.25 -0.5\n-1.2 0.0 0.9\n0.2 0.5 0.5\n''') == '0.0'\nassert solution('''5\n1.4 1.0 0.0\n-0.4 -1.0 0.0\n-0.1 -0.25 -0.5\n-1.2 0.0 0.9\n0.2 0.5 0.5\n''') == '0.0'\n"
    },
    {
        "number": 3141,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n1.0 0.0 1.4\n-1.0 0.0 -1.4\n0.0 1.0 -0.2''') == '2.0000000000'\nassert solution('''5\n1.4 1.0 0.0\n-0.4 -1.0 0.0\n-0.1 -0.25 -0.5\n-1.2 0.0 0.9\n0.2 0.5 0.5''') == '2.0000000000'\n'''\nfrom math import sqrt, floor\n"
    },
    {
        "number": 3141,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n1.0 0.0 1.4\n-1.0 0.0 -1.4\n0.0 1.0 -0.2\n''') == '2.0000000000'\nassert solution('''5\n1.4 1.0 0.0\n-0.4 -1.0 0.0\n-0.1 -0.25 -0.5\n-1.2 0.0 0.9\n0.2 0.5 0.5\n''') == '2.0000000000'\n'''\n"
    },
    {
        "number": 3141,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n3\n1.0 0.0 1.4\n-1.0 0.0 -1.4\n0.0 1.0 -0.2\n\"\"\") == \"2.0000000000\"\n"
    },
    {
        "number": 3142,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == '0'\nassert solution('0 0 0') == '0'\nassert solution('2 1 10') == '0'\nassert solution('99999 2 2') == '1'\nassert solution('99999 3 2') == '1'\n"
    },
    {
        "number": 3142,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 9 5''') == '1\\n5'\nassert solution('''1 100 10''') == '9\\n19'\nassert solution('''2 1 1''') == '0'\nassert solution('''2 1 10''') == '1'\nassert solution('''4 1 1''') == '9'\n"
    },
    {
        "number": 3142,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1 1 1') == ''\nassert solution('0 0 0') == ''\nassert solution('1 0 0') == ''\nassert solution('1 1 0') == ''\n"
    },
    {
        "number": 3142,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == output(input())\n"
    },
    {
        "number": 3142,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output(input())\n"
    },
    {
        "number": 3142,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 9 5''') == '1\\n5'\nassert solution('''1 100 10''') == '9\\n19'\nassert solution('''6 4 9''') == '2\\n2'\nassert solution('''123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789''') == '999999999\\n9999999999'\n\n---\nN O T E\n---"
    },
    {
        "number": 3142,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1 1 1') == ''\nassert solution('1 9 5') == '1'\nassert solution('1 100 10') == '9'\nassert solution('1 100 100') == '19'\n"
    },
    {
        "number": 3142,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 9 5') == '1\\n5'\nassert solution('1 100 10') == '9\\n19'\nprint('Testcases passed')\n"
    },
    {
        "number": 3142,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 9 5''') == '1\\n5'\nassert solution('''1 100 10''') == '9\\n19'\nassert solution('''1 1000 200''') == '4\\n108'\nassert solution('''1 100 200''') == '4\\n108'\nassert solution('''1 999 999''') == '0\\n0'\n'''\n"
    },
    {
        "number": 3142,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 9 5') == '1\\n5'\nassert solution('1 100 10') == '9\\n19'\nassert solution('1 100 10') == '9\\n19'\nassert solution('1 100 10') == '9\\n19'\nassert solution('1 100 10') == '9\\n19'\n"
    },
    {
        "number": 3143,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"1 1 1 1\") == \"\"\n"
    },
    {
        "number": 3143,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n1 1\n1\n1\n''') == '1'\n\nassert solution(\n'''\n4 5\n4 1 2 4 4\n4 3 2 1\n''') == '7'\n"
    },
    {
        "number": 3143,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"1\\n1\"\nassert solution(\"2 2\") == \"1\\n1\"\nassert solution(\"2 2\\n1 2\") == \"1\\n1\"\nassert solution(\"3 3\\n1 2 3\") == \"7\\n1 3 4 1 4 2 1 3\"\nassert solution(\"3 3\\n1 2 3\\n1 2 1\") == \"7\\n1 3 4 1 4 2 1 3\"\n\n-----\nIf you are using random library, you can get numbers in range [0, N] with randint(0, N) function.\n\n-----\n\nimport random\n\nN, K = map(int, input().split())\n\ninitial_order = input().split()\n\norder = input().split()\n\ninital_order = [None] * N\n\nfor i in range(N):\n    inital_order[int(order[i]) - 1] = i\n\nfor i in range(K):\n    random.shuffle(inital_order)\n    print(inital_order)\n\"\"\"\n\"\"\"\n------- TESTS (from leetcode) -------\n\"\"\"\nimport random\n\nN, K = map(int, input().split())\n\ninitial_order = input().split()\n\norder = input().split()\n\ninital_order = [None] * N\n\nfor i in range(N):\n    inital_order[int(order[i]) - 1] = i\n\nfor i in range(K):\n    random.shuffle(inital_order)\n    print(inital_order)\n\"\"\"\n\n------\n\"\"\"\n"
    },
    {
        "number": 3143,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"4 5\") == \"7\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"4 1 2 4 4\") == \"4\"\nassert solution(\"4 3 2 1\") == \"4 4 2 4 4 1 4\"\n"
    },
    {
        "number": 3143,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == '1'\nassert solution('1') == '1'\nassert solution('4 5') == '7'\nassert solution('4 1 2 4 4') == '1 4 4 2 4 1 4'\nassert solution('4 3 2 1') == '7 4 4 2 4 1 4'\n"
    },
    {
        "number": 3143,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1\\n1\\n1') == '1\\n1'\nassert solution('2 1\\n4 1 2 4 4\\n4 3 2 1\\n') == '7\\n4 4 2 4 4 1 4'\nassert solution('3 1\\n3\\n1 3\\n') == '3\\n3'\nassert solution('4 1\\n4 1 2 4 4\\n4 3 2 1\\n') == '7\\n4 4 2 4 4 1 4'\nassert solution('5 1\\n5\\n5 1 5\\n') == '4\\n5 5 1 5'\n"
    },
    {
        "number": 3143,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3143,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    input_string=\n\"\"\"\n1 1\n1\n1\n\"\"\") == \"\"\"\n1\n1\n\"\"\"\n\nassert solution(\n    input_string=\n\"\"\"\n4 5\n4 1 2 4 4\n4 3 2 1\n\"\"\") == \"\"\"\n7\n4 4 2 4 4 1 4\n\"\"\"\n\nassert solution(\n    input_string=\n\"\"\"\n3 1\n1\n1\n\"\"\") == \"\"\"\n1\n1\n\"\"\"\n\nassert solution(\n    input_string=\n\"\"\"\n3 2\n3 1 2\n3 3 2\n\"\"\") == \"\"\"\n1\n1 2\n\"\"\"\n\nassert solution(\n    input_string=\n\"\"\"\n3 1\n2\n1\n\"\"\") == \"\"\"\n1\n1\n\"\"\""
    },
    {
        "number": 3143,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 1''') == '1'\nassert solution('''2 3''') == '1'\nassert solution('''5 4''') == '3'\nassert solution('''1\n1\n1''') == '1'\nassert solution('''2\n1\n1''') == '1'\n"
    },
    {
        "number": 3143,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3144,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3144,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3144,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 10 3 2') == '4'\nassert solution('10 10 5 0') == '10'\n\"\"\"\n"
    },
    {
        "number": 3144,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 10 3 2\") == \"4\"\nassert solution(\"10 10 5 0\") == \"10\"\nassert solution(\"2 2 2 2\") == \"4\"\nassert solution(\"2 1 1 1\") == \"4\"\nassert solution(\"10 1 1 1\") == \"4\"\n"
    },
    {
        "number": 3144,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3144,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3144,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 10 3 2\") == \"4\"\nassert solution(\"10 10 5 0\") == \"10\"\nassert solution(\"10 10 5 1\") == \"10\"\nassert solution(\"10 10 5 3\") == \"10\"\nassert solution(\"10 10 5 10\") == \"10\"\n"
    },
    {
        "number": 3144,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 10 3 2\") == \"4\"\nassert solution(\"10 10 5 0\") == \"10\"\nassert solution(\"1 10 1 1\") == \"1\"\nassert solution(\"1 1 1 1\") == \"1\"\nassert solution(\"1 1 1 1\") == \"1\"\n"
    },
    {
        "number": 3144,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n\nfrom sys import stdin"
    },
    {
        "number": 3144,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 10 3 2\") == 4\nassert solution(\"10 10 5 0\") == 10\nassert solution(\"10 10 0 0\") == 10\nassert solution(\"0 0 0 0\") == 10\nassert solution(\"1 1 1 1\") == 10\n"
    },
    {
        "number": 3145,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 1 20\\n0123456789\") == \"10\"\nassert solution(\"2 1 20\\n01234567890123456789\") == \"111\"\nassert solution(\"2 1 20\\n012345678901234567890123456789\") == \"111\"\nassert solution(\"2 1 20\\n01234567890123456789012345678901234567890123456789\") == \"111111111\"\nassert solution(\"2 1 20\\n
    },
    {
        "number": 3145,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"2 1 20\n0123456789\"\"\") == \"10\"\nassert solution(\n\"\"\"6 100 9294\n23689\"\"\") == \"111\"\nassert solution(\n\"\"\"2 9 3\n0123456789\"\"\") == \"9\"\nassert solution(\n\"\"\"4 5 6\n0123456789\"\"\") == \"1\"\nassert solution(\n\"\"\"1 10 11\n0123456789\"\"\") == \"1\"\n"
    },
    {
        "number": 3145,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3145,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\\n098765\") == \"1\"\nassert solution(\"2 1 20\\n0123456789\") == \"10\"\nassert solution(\"6 100 9294\\n23689\") == \"111\"\nprint(\"Passed. (Add more tests to be more sure!)\")"
    },
    {
        "number": 3145,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 1 20\") == \"10\"\nassert solution(\"6 100 9294\") == \"111\"\nassert solution(\"1 1 20\") == \"10\"\nassert solution(\"6 100 929\") == \"111\"\nassert solution(\"2 1 9\") == \"9\"\n"
    },
    {
        "number": 3145,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"2 1 20\n0123456789\"\"\"\n) == \"10\"\n\nassert solution(\n\"\"\"6 100 9294\n23689\"\"\"\n) == \"111\"\n\nassert solution(\n\"\"\"2 1 20\n0123456789\"\"\"\n) == \"10\"\n\nassert solution(\n\"\"\"4 100 8999999999\n123112321314\"\"\"\n) == \"0\"\n\nassert solution(\n\"\"\"2 2 10\n0123456789\"\"\"\n) == \"10\""
    },
    {
        "number": 3145,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 1 20\\n0123456789') == '10'\nassert solution('6 100 9294\\n23689') == '111'\nassert solution('1 1 100\\n23') == '0'\nassert solution('1 1 100\\n23') == '0'\nassert solution('1 1 100\\n23') == '0'\n"
    },
    {
        "number": 3145,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 1 20\") == \"10\"\nassert solution(\"6 100 9294\") == \"111\"\nassert solution(\"6 100 9294\") == \"111\"\nassert solution(\"6 100 9294\") == \"111\"\nassert solution(\"6 100 9294\") == \"111\"\n"
    },
    {
        "number": 3145,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 1 20\n0123456789''') == '10'\nassert solution('''6 100 9294\n23689''') == '111'\nprint('All tests passed successfully.')\n"
    },
    {
        "number": 3145,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 1 20\n0123456789''') == '10'\nassert solution('''6 100 9294\n23689''') == '111'\nassert solution('''4 4 89\n3741''') == '11'\nassert solution('''2 5 20\nabcde0123456789''') == '16'\n'''"
    },
    {
        "number": 3146,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\") == \"1.500000 2.666667\"\nassert solution(\"2 2\\n1 S 1\\n2 S 2\") == \"0.00000 2.666667\"\n"
    },
    {
        "number": 3146,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 3\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1''') == '1.500000 2.666667'\nassert solution('''5 2\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1''') == '1.500000 3.666667'\nassert solution('''5 2\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 2''') == '1.500000 2.666667'\nassert solution('''5 2\n1 R 4\n2 R 2\n3 S 2\n4 S 1\n5 S 1''') == '1.000000 2.333333'\nassert solution('''5 2\n1 R 4\n2 R 2\n3 S 2\n4 S 2\n5 S 1''') == '1.000000 2.666667'\n"
    },
    {
        "number": 3146,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"5 3\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1\n\"\"\") == \"1.500000 2.666667\"\n\nassert solution(\n\"\"\"7 5\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1\n6 R 4\n7 R 3\n\"\"\") == \"3.333333 2.666667\"\n\nassert solution(\n\"\"\"7 8\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1\n6 R 4\n7 R 3\n8 R 3\n\"\"\") == \"3.333333 4.000000\"\n\nassert solution(\n\"\"\"6 1\n1 R 1\n2 R 2\n3 S 2\n4 S 3\n5 S 4\n6 S 4\n\"\"\") == \"0.500000\"\n\nassert solution(\n\"\"\"5 1\n1 R 1\n2 R 2\n3 R 2\n4 S 2\n5 S 1\n\"\"\") == \"0.500000\""
    },
    {
        "number": 3146,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 3\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1''') == '1.500000 2.666667'\nassert solution('''3 3\n1 R 2\n2 S 2\n3 R 2''') == '1.000000 2.666667'\nassert solution('''7 3\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1\n6 R 2\n7 R 1''') == '0.50000 1.000000'\nassert solution('''6 1\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1\n6 R 2''') == '0.000000 1.000000'\nassert solution('''6 2\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1\n6 R 2''') == '0.000000 1.000000'\n"
    },
    {
        "number": 3146,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2"
    },
    {
        "number": 3146,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 2\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1''') == '1.500000 3.666667'\nassert solution('''7 2\n1 R 2\n2 S 2\n3 R 2\n4 S 2\n5 R 2\n6 S 2\n7 S 1''') == '1.500000 3.666667'\nassert solution('''3 2\n1 R 2\n2 R 2\n3 S 2''') == '1.500000 2.666667'\nassert solution('''8 2\n1 R 2\n2 R 2\n3 R 2\n4 S 2\n5 R 2\n6 S 2\n7 R 2\n8 S 1''') == '1.500000 3.666667'\nassert solution('''5 2\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1''') == '1.500000 3.666667'\n"
    },
    {
        "number": 3146,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 3\") == \"1.500000 2.666667\"\nassert solution(\"5 4\") == \"1.000000 2.666667\"\nassert solution(\"5 5\") == \"0.00000 2.666667\"\nassert solution(\"5 6\") == \"0.00000 0.00000\"\nassert solution(\"5 7\") == \"0.00000 0.00000\"\n"
    },
    {
        "number": 3146,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 3146,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1') == '1.500000 2.666667'\n"
    },
    {
        "number": 3146,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '1.5 0'\n"
    },
    {
        "number": 3147,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 6\n101010\n111001\n101001''') == '3'\nassert solution('''4 5\n10010\n01010\n10101\n01001''') == '3'\nassert solution('''5 4\n10010\n11100\n10100\n01010\n10101''') == '-1'\nassert solution('''6 7\n000000011111\n110000011110\n110110010110\n11101001111\n111000111110\n111001100110\n111011011010\n111010111100\n111000111110\n110000011110''') == '3'\n'''\n"
    },
    {
        "number": 3147,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(''.join(input().split())) == input()\n"
    },
    {
        "number": 3147,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3147,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0\\n0\\n1') == '1'\nassert solution('0\\n1\\n1') == '1'\nassert solution('0\\n1\\n0') == '1'\nassert solution('1\\n0\\n1') == '1'\nassert solution('0\\n0\\n1\\n1') == '2'\n"
    },
    {
        "number": 3147,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 6\n101010\n111001\n101001''') == '3'\nassert solution('''5 5\n1010101\n010101\n1010101\n010101\n010101''') == '-1'\nassert solution('''4 6\n101101\n01010\n10101\n01001''') == '3'\nassert solution('''5 3\n01010\n10101\n10101\n01010''') == '-1'\nassert solution('''4 6\n00100\n00100\n10101\n00100''') == '4'\n"
    },
    {
        "number": 3147,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3\""
    },
    {
        "number": 3147,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('101010\\n111001\\n101001') == '3'\nassert solution('4 5\\n10010\\n01010\\n10101\\n01001') == '3'\nassert solution('3 6\\n101010\\n111001\\n101001') == '3'\n"
    },
    {
        "number": 3147,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 6\n101010\n111001\n101001''') == '3'\nassert solution('''4 5\n10010\n01010\n10101\n01001''') == '3'\nassert solution('''1 1\n0''') == '-1'\nassert solution('''1 1\n1''') == '-1'\nassert solution('''1 1\n1''') == '-1'\n"
    },
    {
        "number": 3147,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == -1\nassert solution(\"1 2 3 4\") == 1\nassert solution(\"1 2 3 4 5\") == -1\nassert solution(\"10010\") == 1\nassert solution(\"111001\") == 2\n"
    },
    {
        "number": 3147,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3148,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\\n\"\n) == \"-3 -1\"\nassert solution(\n    \"4\\n2 4\\n6 -1\\n3 5\\n-1 -1\\n\"\n) == \"3 4\\n3 -1\""
    },
    {
        "number": 3148,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    '''5'''\n    ) == '3 4'\nassert solution(\n    '''4'''\n    ) == '3 -1'\nassert solution(\n    '''2'''\n    ) == '-3 -1'\nassert solution(\n    '''0'''\n    ) == '3 1'\nassert solution(\n    '''0'''\n    ) == '-3 1'\n"
    },
    {
        "number": 3148,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0\\n0\\n0\\n0\") == \"0 0\"\nassert solution(\"1\\n0\\n0\\n0\") == \"0 1\"\nassert solution(\"2\\n0\\n1\\n1\") == \"1 1\"\nassert solution(\"3\\n1 0\\n0 0\") == \"0 0\"\nassert solution(\"4\\n0 0\\n0 0\") == \"0 0\"\n"
    },
    {
        "number": 3148,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n0 0\\n0 1\\n1 0\\n0 -1') == '-3 -1'\nassert solution('4\\n2 4\\n6 -1\\n3 5\\n-1 -1') == '3 4\\n3 -1'\nassert solution('7\\n1 2\\n2 0\\n-1 -1\\n-2 -2\\n-2 -1\\n-3 -2') == '-1 -1'\nassert solution('2\\n-1 -1\\n1 0') == '-1 1'\nassert solution('1\\n0 0') == '0 0'\n"
    },
    {
        "number": 3148,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n0 0\n0 1\n1 0\n0 -1\n-1 0''') == '-3 -1'\nassert solution('''4\n2 4\n6 -1\n3 5\n-1 -1''') == '3 4'\nassert solution('''2\n1 2\n-1 -1''') == '-1 -1'\nassert solution('''2\n1 2\n-1 -1''') == '-1 -1'\nassert solution('''3\n1 0\n-1 -1\n0 1\n2 1\n0 -1''') == '-1 -1'\n"
    },
    {
        "number": 3148,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n0 0\n0 1\n1 0\n0 -1\n-1 0''') == '-3 1'\nassert solution('''4\n2 4\n6 -1\n3 5\n-1 -1\n''') == '3 4'\n"
    },
    {
        "number": 3148,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n-1 2\\n-1 2') == '3 -1'\nassert solution('3\\n1 1\\n2 2\\n2 1\\n1 1') == '3 1'\nassert solution('3\\n2 0\\n2 1\\n2 0\\n1 1\\n2 -1') == '3 1'\nassert solution('3\\n0 0\\n0 1\\n1 0\\n0 -1\\n1 -1') == '3 -1'\nassert solution('4\\n2 4\\n6 -1\\n3 5\\n-1 -1\\n2 1\\n-1 2') == '3 4\\n3 -1\\n2 1'\n"
    },
    {
        "number": 3148,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output"
    },
    {
        "number": 3148,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"5\"\n) == \"-3 -1\"\nassert solution(\n    \"5\"\n) == \"3 1\"\nassert solution(\n    \"4\"\n) == \"3 4\"\nassert solution(\n    \"4\"\n) == \"-1 -1\"\nassert solution(\n    \"6\"\n) == \"3 5\"\n"
    },
    {
        "number": 3148,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''5\n0 0\n0 1\n1 0\n0 -1\n-1 0'''\n) == '-3 -1'\nassert solution(\n'''4\n2 4\n6 -1\n3 5\n-1 -1'''\n) == '3 4' or solution(\n'''4\n2 4\n6 -1\n3 5\n-1 -1'''\n) == '3 -1'\n"
    },
    {
        "number": 3149,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 6 5 45 20\\n0 0\\n2 0\\n1 1.5') == '2 5.086781'\nassert solution('3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5') == '1 12.715255'\nassert solution('3 0.25 1 4 0\\n0 0\\n2 0\\n1 1.5') == '1 3.845386'\nassert solution('3 1 3 0\\n0 0\\n2 0\\n1 1.5') == '1 3.845386'\nassert solution('3 0.25 1 4 0\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\"
    },
    {
        "number": 3149,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 6 5 45 20 0 0 2 0 1 1.5\\n0 0\\n2 0\\n1 1.5') == '2 5.086781'\nassert solution('3 6 5 45 20 0 0 2 0 1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5') == '1 12.715255'\nassert solution('3 0.25 2 45 20 0 0 2 0 1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5') == '1 12.715255'\nassert solution('3 0.25 2 45 20 0 0 2 0 1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1"
    },
    {
        "number": 3149,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 6 5 45 20\n0 0\n2 0\n1 1.5''') == '2 5.086781'\nassert solution('''3 0.25 2 45 20\n0 0\n2 0\n1 1.5''') == '1 12.715255'\nassert solution('''4 0.25 3 45 20\n0 0\n2 0\n1 1.5\n1 1.5''') == '1 12.715255'\nassert solution('''4 0.25 3 45 20\n0 0\n2 0\n1 1.5\n1 1.5 1.5''') == '1 12.715255'\nassert solution('''2 0.25 3 45 20\n0 0\n2 0\n1 1.5\n1 1.5 1.5''') == '1 12.715255'\n"
    },
    {
        "number": 3149,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    '3 6 5 45 20\\n' +\n    '0 0\\n' +\n    '2 0\\n' +\n    '1 1.5\\n'\n) == '2 5.086781\\n'"
    },
    {
        "number": 3149,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n3 0.25 2 45 20\n0 0\n2 0\n1 1.5\n''') == '1 12.715255'\nassert solution(\n'''\n3 0.25 2 45 20\n0 0\n1 1.5\n2 0\n3 1.5\n''') == '1 12.715255'\nassert solution(\n'''\n3 0.25 2 45 20\n0 0\n3 1.5\n1 1.5\n2 0\n''') == '2 12.715255'\nassert solution(\n'''\n3 0.25 2 45 20\n0 0\n1 1.5\n2 0\n3 1.5\n''') == '2 12.715255'\nassert solution(\n'''\n3 0.25 2 45 20\n0 0\n2 0\n1 1.5\n''') == '1 1.5'\n"
    },
    {
        "number": 3149,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 6 5 45 20\n0 0\n2 0\n1 1.5''') == '2 5.086781'\nassert solution('''3 0.25 2 45 20\n0 0\n2 0\n1 1.5''') == '1 12.715255'\nassert solution('''1 0 0\n1 1 0\n2 0 0\n3 0 0\n4 0 0\n5 0 0\n6 0 0''') == '1 12.715255'\nassert solution('''1 2 3\n2 3 2\n3 4 3\n4 5 3\n5 6 3\n6 7 3\n7 8 3\n8 9 3\n9 10 3''') == '1 4'\nassert solution('''1 1 1\n1 2 1\n2 3 1\n3 4 1\n4 5 1\n5 6 1\n6 7 1\n7 8 1\n8 9 1\n9 10 1\n10 11 1\n11 12 1\n12 13 1\n13 14 1\n14 15 1\n15 16 1\n16 17 1\n17 18 1\n18 19 1\n19 20 1''') == '1 2'\n"
    },
    {
        "number": 3149,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3149,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 6 5 45 20\n0 0\n2 0\n1 1.5''') == '2 5.086781'\nassert solution('''3 0.25 2 45 20\n0 0\n2 0\n1 1.5''') == '1 12.715255'\nassert solution('''3 0.25 2 45 20\n0 0\n2 0\n1 1.5\n0 0\n-1 0\n2 0\n1 1.5''') == '2 10.156785'\nassert solution('''3 0.25 2 45 20\n0 0\n2 0\n1 1.5\n0 0\n-1 0\n2 0\n1 1.5\n0 0\n1 1.5\n-1 0\n2 0\n1 1.5''') == '2 12.715255'\nassert solution('''3 0.25 2 45 20\n0 0\n2 0\n1 1.5\n0 0\n-1 0\n2 0\n1 1.5\n0 0\n1 1.5\n-1 0\n2 0\n1 1.5\n0 0\n1 1.5\n-1 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n"
    },
    {
        "number": 3149,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''3 6 5 45 20\n0 0\n2 0\n1 1.5''') == \"2 5.086781\"\n\nassert solution(\n'''3 0.25 2 45 20\n0 0\n2 0\n1 1.5''') == \"1 12.715255\"\n\nassert solution(\n'''3 1 2 4 5\n0 0\n1 1\n2 2\n3 3''') == \"1 3\"\n\nassert solution(\n'''3 1 2 4 5\n0 0\n1 1\n2 2\n3 3''') == \"1 4\"\n\nassert solution(\n'''3 1 2 4 5\n0 0\n1 1\n2 2\n4 4''') == \"1 4\""
    },
    {
        "number": 3149,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"3\n6\n5 45 20\n0 0\n2 0\n1 1.5\n\"\"\") == '2 5.086781'\nassert solution(\n\"\"\"3\n0.25\n2\n45\n20\n\"\"\") == '1 12.715255'\nassert solution(\n\"\"\"3\n9.9999\n2\n45\n20\n\"\"\") == '1 9.9999'\nassert solution(\n\"\"\"3\n9.9999\n2\n45\n20\n\"\"\") == '1 9.9999'\nassert solution(\n\"\"\"3\n9.9999\n2\n45\n20\n\"\"\") == '1 9.9999'\n"
    },
    {
        "number": 3150,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3 4\") == \"4\"\nassert solution(\"0 0 1 0\") == \"0\"\nassert solution(\"0 0 0 1\") == \"0\"\nassert solution(\"0 1 1 1\") == \"0\"\n"
    },
    {
        "number": 3150,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1''') == '8'\n'''"
    },
    {
        "number": 3150,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3150,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1') == '8'\nassert solution('1 0 1 1\\n0 0 0 1\\n4 0 4 4\\n7 0 3 4\\n') == '1'\nassert solution('2 0 1 1\\n1 0 0 1\\n4 0 4 4\\n7 0 3 4\\n') == '0'\nassert solution('3 0 1 1\\n1 0 0 1\\n4 0 4 4\\n7 0 3 4\\n') == '1'\nassert solution('4 0 1 1\\n1 0 0 1\\n4 0 4 4\\n7 0 3 4\\n') == '1'\n"
    },
    {
        "number": 3150,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n''') == '8'\nassert solution(\n'''5\n1 0 7 1\n1 1 5 1\n4 0 4 4\n7 0 3 4\n''') == '1'\nassert solution(\n'''10\n1 0 10 1\n1 1 5 1\n4 0 4 4\n7 0 3 4\n7 1 3 4\n7 1 5 4\n7 2 5 4\n7 2 3 4\n7 3 4 3\n7 3 5 4\n7 4 5 4\n''') == '23'\nassert solution(\n'''5\n1 0 7 1\n1 1 5 1\n4 0 4 4\n7 0 3 4\n7 1 3 4\n7 1 5 4\n7 2 5 4\n7 2 3 4\n7 3 4 3\n7 3 5 4\n7 4 5 4\n''') == '20'"
    },
    {
        "number": 3150,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2') == '1'\nassert solution('1\\n2\\n1\\n1') == '1'\nassert solution('2\\n2\\n1\\n1') == '2'\nassert solution('1\\n2\\n1\\n1\\n1\\n1') == '5'\nassert solution('1\\n2\\n1\\n1\\n1\\n1\\n1\\n1') == '7'\n"
    },
    {
        "number": 3150,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n\") == \"8\"\nassert solution(\"1 1 5 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4\\n\") == \"1\"\nassert solution(\"1 1 5 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4\\n1 1 2 3\\n\") == \"0\"\nprint(\"all tests passed\")\n\n\"\"\"\n"
    },
    {
        "number": 3150,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 3150,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1''') == '8'\nassert solution('''6\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n''') == '8'\nassert solution('''4\n5 1 7 1\n1 1 5 1\n4 0 4 4\n7 0 3 4\n''') == '1'\nassert solution('''5\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n''') == '1'\n'''\n"
    },
    {
        "number": 3150,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n''') == '8'\nassert solution('''0\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n''') == '1'\nassert solution('''5\n5 1 7 1\n1 1 5 1\n4 0 4 4\n7 0 3 4\n''') == '8'\nassert solution('''7\n5 1 7 1\n1 1 5 1\n4 0 4 4\n7 0 3 4\n''') == '1'\nassert solution('''6\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n''') == '8'\n"
    },
    {
        "number": 3151,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7') == '4 3'\nassert solution('10') == 'impossible'\n"
    },
    {
        "number": 3151,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(7) == '4 3'\nassert solution(10) == 'impossible'\nassert solution(3) == 'impossible'\nassert solution(1) == 'impossible'\nassert solution(9) == 'impossible'\n"
    },
    {
        "number": 3151,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\nfrom math import sqrt\n\nn = int(input())\n\nfor i in range(1, n + 1):\n    if sqrt(i) == int(sqrt(i)):\n        m = i\n        k = int(sqrt(i))\n        break"
    },
    {
        "number": 3151,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"7\"\n) == \"4 3\"\nassert solution(\n    \"10\"\n) == \"impossible\"\nassert solution(\n    \"10\"\n) == \"impossible\"\nassert solution(\n    \"10\"\n) == \"impossible\"\nassert solution(\n    \"10\"\n) == \"impossible\"\n"
    },
    {
        "number": 3151,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7') == '4 3'\nassert solution('10') == 'impossible'\nprint(\"All tests past. Now we're getting hung up! Run `python3 main.py` to solve!\")"
    },
    {
        "number": 3151,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == 'impossible'\nassert solution(input()) == 'impossible'\nassert solution(input()) == 'impossible'\nassert solution(input()) == 'impossible'\nassert solution(input()) == 'impossible'\n"
    },
    {
        "number": 3151,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7') == '4 3'\nassert solution('10') == 'impossible'\nassert solution('14') == 'impossible'\nassert solution('10' * 10 ** 9) == 'impossible'\n\"\"\""
    },
    {
        "number": 3151,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7') == '4 3'\nassert solution('10') == 'impossible'\nassert solution('1') == 'impossible'\nassert solution('1000') == 'impossible'\nassert solution('-1') == 'impossible'\n"
    },
    {
        "number": 3151,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(1) == \"impossible\"\nassert solution(2) == \"impossible\"\nassert solution(3) == \"impossible\"\nassert solution(4) == \"impossible\"\nassert solution(5) == \"impossible\"\n"
    },
    {
        "number": 3151,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7') == '4 3'\nassert solution('10') == 'impossible'\nassert solution('15') == 'impossible'\nassert solution('14') == '4 3'\nassert solution('16') == 'impossible'\n"
    },
    {
        "number": 3152,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"1\n2\n3\n4\n5\"\"\"\n) == \"16\"\n\nassert solution(\n    \"\"\"1\n2\n3\n4\n5\n6\n7\n8\n9\"\"\"\n) == \"109\"\n\nassert solution(\n    \"\"\"1000\n9\n8\n7\n6\n5\n4\n3\n2\n1\"\"\"\n) == \"99000198000099\"\n\nassert solution(\n    \"\"\"10000\n99\n98\n97\n96\n95\n94\n93\n92\n91\n90\"\"\"\n) == \"9989998899999\"\n\nassert solution(\n    \"\"\"100\n9\n8\n7\n6\n5\n4\n3\n2\n1\n10000\"\"\"\n) == \"9999988999\""
    },
    {
        "number": 3152,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n2\n1\n3\n''') == '16'\nassert solution('''\n2\n4\n1\n4\n''') == '109'\n"
    },
    {
        "number": 3152,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n3\\n4\\n4\\n2\") == \"109\"\nassert solution(\"2\\n1\\n3\\n4\\n4\\n2\") == \"16\"\nassert solution(\"4\\n2\\n4\\n1\\n4\\n2\\n2\\n2\") == \"109\"\nassert solution(\"4\\n2\\n4\\n1\\n4\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2"
    },
    {
        "number": 3152,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '2'\nassert solution('3\\n1') == '3'\nassert solution('4\\n1') == '4'\nassert solution('5\\n1') == '5'\n"
    },
    {
        "number": 3152,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n3\\n4\") == \"109\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"6875\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\") == \"6942\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\") == \"696547\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\") == \"6965474884\"\n"
    },
    {
        "number": 3152,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n1\\n3') == '16'\nassert solution('2\\n4\\n1') == '109'\nassert solution('4\\n4\\n4\\n4') == '256'\nassert solution('1\\n1\\n1\\n1') == '1'\nassert solution('2\\n4\\n1') == '109'\n"
    },
    {
        "number": 3152,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n') == '10916164577503931'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n') == '10916164577503931'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n') == '10916164577503931'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n') == '10916164577503931'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n') == '10916164577503931'\n"
    },
    {
        "number": 3152,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3152,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '109'"
    },
    {
        "number": 3152,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n1\\n3') == '16'\nassert solution('4\\n2\\n4\\n1\\n4') == '109'\nprint(\"Passed\")\n"
    },
    {
        "number": 3153,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 2\n2 3''') == '3'\nassert solution('''3 4\n3 3 1 1\n1 3\n2 3\n4 1\n''') == '5'\nassert solution('''5 4\n5 3 1 1\n1 3\n2 3\n4 1\n''') == '5'\nassert solution('''3 4\n3 3 1 1\n1 3\n2 3\n4 1\n''') == '5'\nassert solution('''1 1\n2 3\n3 4\n1 1\n1 1\n1 1\n2 2\n2 2\n1 2\n2 3\n2 3\n''') == '6'\n"
    },
    {
        "number": 3153,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n5 1\\n1 2\\n1 2\\n1 2\\n\") == \"3\\n1 2 1\\n1 2 2\\n1 2 2\\n\"\nassert solution(\"4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n\") == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\\n\"\nassert solution(\"6 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n\") == \"5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n\"\nassert solution(\"2 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n\") == \"5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n\"\nassert solution(\"6 6\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n"
    },
    {
        "number": 3153,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n5 2\n5 1 1 1 1\n1 3\n2 3\n4 1\n\"\"\") == \"\"\"\n3\n1 3 1\n2 3 2\n4 1 0\n2 4 1\n3 1 0\n\"\"\"\nassert solution(\n\"\"\"\n5 2\n5 1 1 1 1\n1 3\n2 3\n4 1\n\"\"\") == \"\"\"\n3\n1 3 1\n2 3 2\n4 1 0\n2 4 1\n3 1 0\n\"\"\"\n"
    },
    {
        "number": 3153,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n\") == '5\\n1 2 1\\n1 2 2\\n1 2 2\\n2 4 1 0\\n3 1 0\\n'\nassert solution(\"2 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n\") == '5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1 0\\n3 1 0\\n'\nassert solution(\"5 2\\n5 1\\n1 3\\n1 2\\n2 2\\n2 1\\n3 3\\n3 2\\n3 1\\n\") == '3\\n1 2 1\\n1 2 2\\n1 2 2\\n2 1 0\\n2 2 0\\n2 1 0\\n'\nassert solution(\"5 2\\n5 1\\n1 3\\n1 2\\n2 2\\n2 1\\n3 3\\n3 2\\n3 1\\n\") == '3\\n1 2 1\\n1 2 2\\n1 2 2\\n2 1 0\\n2 2 0\\n2 1 0\\n'\nassert solution(\"5 2\\n5 1\\n1 3\\n1 2\\n2 2\\n2 1\\n3 3\\n3 2\\n3 1\\n\") == '3\\n1 2 1\\n1 2 2\\n1 2 2\\n2 1 0\\n2 2 0\\n2 1 0\\n'\n"
    },
    {
        "number": 3153,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3153,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3\\n5 1\\n1 2\\n1 2\\n1 2\\n') == '3\\n1 2 1\\n1 2 2\\n1 2 2\\n'\nassert solution('4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n') == '5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\\n'\n"
    },
    {
        "number": 3153,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"2 3\n5 1\n1 2\n1 2\n1 2\n\"\"\") == \"\"\"3\n1 2 1\n1 2 2\n1 2 2\n\"\"\"\n"
    },
    {
        "number": 3153,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3\\n5 1\\n1 2\\n1 2\\n1 2\\n') == '3\\n1 2 1\\n1 2 2\\n1 2 2\\n'\nassert solution('4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n') == '5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\\n'\nassert solution('4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1"
    },
    {
        "number": 3153,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 3\n5 1\n1 2\n1 2\n1 2\n''') == '''3\n1 2 1\n1 2 2\n1 2 2\n'''\n\nassert solution('''5 4\n5 3 1 1\n1 3\n2 3\n4 1\n''') == '''5\n1 3 1\n2 3 2\n4 1 0\n2 4 1\n3 1 0\n'''\n\nassert solution('''10 4\n6 3 2 1\n1 3\n2 3\n4 1\n4 3\n7 1\n7 2\n7 2\n7 3\n7 4\n''') == '''2\n1 3 1\n2 3 2\n4 1 0\n4 3 2\n7 1 0\n7 2 1\n7 2 2\n7 3 3\n7 4 4\n'''\n\nassert solution('''10 4\n6 3 2 1\n1 3\n2 3\n4 1\n4 3\n7 1\n7 2\n7 2\n7 3\n7 4\n''') == '''2\n1 3 1\n2 3 2\n4 1 0\n4 3 2\n7 1 0\n7 2 1\n7 2 2\n7 3 3\n7 4 4\n'''\n\nassert solution('''30 3\n20 15 10 5\n8 8 5 5\n9 9 5 5\n10 10 5 5\n11 11 5 5\n12 12 5 5\n13 13 5 5\n14 14 5 5\n15 15 5 5\n16 16 5 5\n17 17 5 5\n18 18 5 5\n19 19 5 5\n20 20 5 5\n''') == '''27\n
    },
    {
        "number": 3153,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"1 2 1\"\nassert solution(\"1 2 3\") == \"1 2 2 1\"\nassert solution(\"1 3 2\") == \"1 3 2 2\"\nassert solution(\"2 3 1\") == \"1 2 1 1\"\nassert solution(\"2 3 1 2\") == \"1 2 2 2 1\"\n"
    },
    {
        "number": 3154,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == None\n\n'''"
    },
    {
        "number": 3154,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 3\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1''') == '1 2'\nassert solution('''2 1\n20 3\n0 1 1\n10 1 0\n10 2 1''') == 'impossible'\nassert solution('''2 2\n20 1\n0 1 1\n10 1 0\n10 2 1''') == 'impossible'\nassert solution('''3 3\n10 11\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1''') == '2 1'\nassert solution('''4 4\n2 3\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1''') == '1 2'\n"
    },
    {
        "number": 3154,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 3\\n0 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1') == '1 2'\nassert solution('1 2\\n0 1 0\\n0 2 1') == '1 2'\nassert solution('1 1\\n0 1 0\\n0 1 0') == 'impossible'\nassert solution('0 1\\n0 2 0\\n0 1 0\\n0 2 0\\n0 1 0') == '1 2'\nassert solution('0 1\\n0 2 0\\n0 1 0\\n0 2 0\\n0 1 0\\n0 2 0') == '1 2'\n"
    },
    {
        "number": 3154,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0 1 1\") == \"1 2\"\nassert solution(\"1 1 3\") == \"1 2\"\nassert solution(\"0 2 2\") == \"impossible\"\nassert solution(\"1 2 1\") == \"1 2\"\nassert solution(\"0 2 1\") == \"impossible\"\n"
    },
    {
        "number": 3154,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 3\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1''') == '1 2'\nassert solution('''2 1\n20 3\n0 1 1\n10 1 0\n10 2 1''') == 'impossible'\n'''\n'''"
    },
    {
        "number": 3154,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 1\n20 3\n0 1 1\n10 1 0\n10 2 1''') == '1 2'\nassert solution('''2 3\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1''') == '1 2'\nassert solution('''2 3\n6 7\n0 2 1\n0 1 1\n10 1 0\n10 2 1\nSample Output 2:\nimpossible\n\n''') == 'impossible'\n\nassert solution('''2 2\n7 3\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1''') == '1 2'\nassert solution('''2 2\n7 3\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1''') == '1 2'\n"
    },
    {
        "number": 3154,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 1 1') == '1 2'\nassert solution('1 2') == 'impossible'\nassert solution('2 1') == '1 2'\nassert solution('2 2') == 'impossible'\nassert solution('2 1 2') == '1 2'\n"
    },
    {
        "number": 3154,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 1\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1''') == '1 2'\nassert solution('''2 1\n20 3\n0 1 1\n10 1 0\n10 2 1\nSample Output 2:\nimpossible\n''') == 'impossible'\n'''\n    k,m=map(int,stdin.split())\n    t=list(map(int,stdin.split()[1:]))\n    s,e=map(int,stdin.split()[1:])\n    ind=1\n    t2=0\n    t3=0\n    t4=0\n    p=[]\n    l=len(t)\n    for i in t:\n        if i == t3:\n            t2+=1\n        elif i!= t4:\n            t3=i\n            t2=1\n        else:\n            t4=i\n    if t2>l/2:\n        for i in t:\n            p.append(i)\n    else:\n        for i in range(0,l):\n            if t[i]!=t3:\n                p.append(t[i])\n    print(*p)\n'''\n"
    },
    {
        "number": 3154,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0 1 1\") == \"1 2\"\nassert solution(\"2 1 2\") == \"impossible\"\nassert solution(\"2 3\") == \"1 2\"\nassert solution(\"2 3\") == \"impossible\"\nassert solution(\"3 3\") == \"1 2\"\n"
    },
    {
        "number": 3154,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n2 3\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1\n\"\"\") == \"1 2\"\n\nassert solution(\n\"\"\"\n3 2\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1\n\"\"\") == \"1 2\"\n\nassert solution(\n\"\"\"\n3 3\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1\n\"\"\") == \"1 2\"\n\nassert solution(\n\"\"\"\n3 3\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1\n\"\"\") == \"1 2\"\n\nassert solution(\n\"\"\"\n3 3\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1\n\"\"\") == \"1 2\""
    },
    {
        "number": 3155,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('123456789') == ''\nassert solution
    },
    {
        "number": 3155,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3155,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10') == '5 2'\nassert solution('2020') == '2020 1'\nassert solution('100') == '10 5'\n'''"
    },
    {
        "number": 3155,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 3155,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3155,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') is None\nassert solution('1') == '1 1'\nassert solution('2') == '1 2'\nassert solution('3') == '1 3'\nassert solution('4') == '1 4'\n"
    },
    {
        "number": 3155,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10') == '5 2'\nassert solution('2020') == '2020 1'\n\"\"\""
    },
    {
        "number": 3155,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3155,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5') == '5 1'\nassert solution('2020') == '2020 1'\nassert solution('5 ') == '5 1'\nassert solution('5\\n') == '5 1'\nassert solution('1\\n') == '1 1'\n"
    },
    {
        "number": 3155,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('20') == ''\nassert solution('20 ') == ''\nassert solution('20' * 20) == ''\nassert solution('20' * 21) == ''\n"
    },
    {
        "number": 3156,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\ncookies\nicecream''') == 'impossible'\nassert solution('''3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies''') == 'unique'\nassert solution('''3\n5\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\ncookies\nicecream\n1 chocolate\n2 icecream\n2 cookies\n3\nchocolate\nicecream\ncookies''') == 'ambiguous'\nassert solution('''3\n3\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies''') == 'impossible'\nassert solution('''3\n5\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\ncookies\nicecream\n1 chocolate\n2 icecream\n2 cookies\n3\nchocolate\nicecream\ncookies''') == 'unique'\n"
    },
    {
        "number": 3156,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == 'impossible'\nassert solution('0') == 'impossible'\nassert solution('1') == 'impossible'\nassert solution('2') == 'impossible'\nassert solution('3') == 'impossible'\n"
    },
    {
        "number": 3156,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'impossible'\nassert solution(stdin) == 'unique'\nassert solution(stdin) == 'ambiguous'\n\n\"\"\"\n"
    },
    {
        "number": 3156,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n2\\n0 1\\n1 2\\n2 0\\n1 0\\n1 1\\n2 1\\n0 2\\n1 1') == 'impossible'\nassert solution('2\\n4\\n0 1\\n1 2\\n2 3\\n3 0') == 'unique'\nassert solution('2\\n4\\n0 1\\n1 2\\n2 3\\n3 0\\n0 1\\n1 0\\n1 2\\n2 1') == 'ambiguous'\nassert solution('2\\n3\\n0 1\\n1 2\\n2 0') == 'impossible'\nassert solution('2\\n5\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 0') == 'unique'\n"
    },
    {
        "number": 3156,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"impossible\"\nassert solution(\"4\") == \"unique\"\nassert solution(\"3\\n3\") == \"impossible\"\nassert solution(\"4\\n3\\n3\\n3\") == \"impossible\"\nassert solution(\"4\\n4\\n3\\n3\") == \"impossible\"\n"
    },
    {
        "number": 3156,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin1) == \"impossible\"\nassert solution(stdin2) == \"unique\"\nassert solution(stdin3) == \"ambiguous\"\n\n-----\nSample Input 3:\n4\n5\n0 1\n0 2\n0 3\n1 2\n1 3\n2 3\nSample Output 3:\nunique\n\n-----\nSample Input 4:\n4\n5\n0 1\n0 2\n0 3\n1 2\n1 3\n1 4\n2 3\n2 4\n2 5\nSample Output 4:\nambiguous\n\"\"\"\n"
    },
    {
        "number": 3156,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(sample1) == \"impossible\"\nassert solution(sample2) == \"ambiguous\"\nassert solution(sample3) == \"impossible\"\nassert solution(sample4) == \"ambiguous\"\nassert solution(sample5) == \"impossible\"\n"
    },
    {
        "number": 3156,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 'impossible'\nassert solution('0') == 'impossible'\nassert solution('1') == 'unique'\nassert solution('2') == 'unique'\nassert solution('3') == 'impossible'\n"
    },
    {
        "number": 3156,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\") == \"impossible\"\nassert solution(\"3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n3 chocolate\\n4 cookies\\n3 cookies\") == \"ambiguous\"\nassert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3 cookies\") == \"unique\"\nassert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3 cookies\") == \"unique\"\nassert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3 cookies\") == \"unique\"\n"
    },
    {
        "number": 3156,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''3''') == 'impossible'\nassert solution(\n'''4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies''') == 'ambiguous'\nassert solution(\n'''4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\nchocolate\ncookies''') == 'impossible'\nassert solution(\n'''3\n3\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\nchocolate\ncookies''') == 'ambiguous'\n"
    },
    {
        "number": 3157,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3157,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nn,k,m = [int(x) for x in stdin.split()]\ntotal = 0\nfor i in range(k,n+1):\n    total += (i * 33) % m\nprint(total)\n"
    },
    {
        "number": 3157,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3157,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3157,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '0'\n"
    },
    {
        "number": 3157,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3157,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_stdout\nprint(f\"{test_input} == {expected_stdout} (Test passed)\")\n\nprint(f\"{solution(stdin)} == {expected_stdout} (Test passed)\")\n"
    },
    {
        "number": 3157,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n\nN, K, M = map(int, stdin.split(\" \"))"
    },
    {
        "number": 3157,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 0 10') == '0'\nassert solution('1 2 10') == '1'\nassert solution('2 1 10') == '1'\nassert solution('2 2 10') == '0'\nassert solution('2 3 10') == '1'\n"
    },
    {
        "number": 3157,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3158,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n.X.....\n...X...\n...X...\nX...X.\n.X...X.\n.X...X.\n.......\n''') == '3 zoom out'\nassert solution('''\n.X.......\n...X...X.\n...X...X.\nX...X...X\n.X.......\n.X.......\n.......X.\n''') == '3 pan'\nassert solution('''\n.X.......\n...X...X.\n...X...X.\nX...X...X\n.X.......\n.X.......\n.......X.\n''') == '3 zoom out'\nassert solution('''\n.X.......\n...X...X.\n...X...X.\nX...X...X\n.X.......\n.X.......\n.......X.\n''') == '3 pan'\nassert solution('''\n.X.......\n...X...X.\n...X...X.\nX...X...X\n.X.......\n.X.......\n.......X.\n''') == '3 zoom out'\n"
    },
    {
        "number": 3158,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution
    },
    {
        "number": 3158,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''....................\n....................XXXX..\n...................XX...XX.\n...................XX..X..X.\n.............XXX..XXXXX..X..\n........XXX.......XX....XX..\n........X..X......XX......\n..........XX........X......\n........X..X......XXXXX....\n..........XX....XXXX....XX.\n.............XX..XXXXX...XX.\n..................XX...XX..\n...................XX..X..X.\n...................XX..X..X.\n....................XXXX..''') == '3 pan'\nassert solution('''....................\n....................XXXX..\n...................XX...XX.\n...................XX..X..X.\n.............XXX..XXXXX..X..\n........XXX.......XX....XX..\n........X..X......XX......\n..........XX........X......\n........X..X......XXXXX....\n..........XX....XXXX....XX.\n.............XX..XXXXX...XX.\n..................XX...XX..\n...................XX..X..X.\n...................XX..X..X.\n....................XXXX..''') == '3 zoom out'\nassert solution('''....................\n....................XXXX..\n...................XX...XX.\n...................XX..X..X.\n.............XXX..XXXXX..X..\n........XXX.......XX....XX..\n........X..X......XX......\n..........XX........X......\n........X..X......XXXXX....\n..........XX....XXXX....XX.\n.............XX..XXXXX...XX.\n..................XX...XX..\n...................XX..X..X.\n...................XX..X..X.\n....................XXXX..''') == '2 pan'\nassert solution('''....................\n....................XXXX..\n...................XX...XX.\n...................XX..X..X.\n.............XXX..XXXXX..X..\n........XXX.......XX....XX..\n........X..X......XX......\n..........XX........X......\n........X..X......XXXXX....\n..........XX....XXXX....XX.\n.............XX..XXXXX...XX.\n..................XX...XX..\n...................XX..X..X.\n...................XX..X..X.\n....................XXXX..''') == '3 zoom out'\nassert solution('''....................\n....................XXXX..\n...................XX...XX.\n...................XX..X..X.\n.............XXX..XXXXX..X..\n........XXX.......XX....XX..\n........X..X......XX......\n..........XX........X......\n........X..X......XXXXX....\n..........XX....XXXX....XX.\n.............XX..XXXXX...XX.\n..................XX...XX..\n...................XX..X..X.\n...................XX..X..X.\n....................XXXX..''') == '2 pan'\n"
    },
    {
        "number": 3158,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''............................................................\n............................................................\n............XXXX..................................XXXX..............\n.....................XXXX........... XXXX.............XXXX...........\n....................XXXXXXXX...... X..XXX..XXXXXXXXXXXXXXXXX...\n...................XXXXXXXXXXXX....X XXXX..XXXXXXXXXXXXXXXXXX..\n...................XX....XXXXXXXXX..X XXXX..XXXXXXXXXXXXXXXXX..\n...................XX.XXXXXXXXXXXXX X XXXX..XXXXXXXXXXXXXXXXX..\n...................XX XXXXXXXXXXXXX X XXXX..XXXXXXXXXXXXXXXXX..\n...................XX XX XXXXXXXXX X XX XXXX..XXXXXXXXXXXXXXXX..\n...................XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n............................................................\n............................................................''') == '3 zoom out'\n\nassert solution('''............................................................\n............................................................\n............XXXX..................................XXXX..............\n.....................XXXX........... XXXX.............XXXX...........\n....................XXXXXXXX...... X..XXX..XXXXXXXXXXXXXXXXX...\n...................XXXXXXXXXXXX....X XXXX..XXXXXXXXXXXXXXXXXX..\n...................XX....XXXXXXXXX..X XXXX..XXXXXXXXXXXXXXXXX..\n...................XX.XXXXXXXXXXXXX X XXXX..XXXXXXXXXXXXXXXXX..\n...................XX XXXXXXXXXXXXX X XXXX..XXXXXXXXXXXXXXXXX..\n...................XX XX XXXXXXXXX X XX XXXX..XXXXXXXXXXXXX..\n...................XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n............................................................\n............................................................''') == '3 pan'\n\nassert solution('''............................................................\n............................................................\n............XXXX..................................XXXX..............\n.....................XXXX........... XXXX.............XXXX...........\n....................XXXXXXXX...... X..XXX..XXXXXXXXXXXXXXXXX...\n...................XXXXXXXXXXXX....X XXXX..XXXXXXXXXXXXXXXXXX..\n...................XX....XXXXXXXXX..X XXXX..XXXXXXXXXXXXXXXXX..\n...................XX.XXXXXXXXXXXXX X XXXX..XXXXXXXXXXXXXXXXX..\n...................XX XXXXXXXXXXXXX X XXXX..XXXXXXXXXXXXXXXXX..\n...................XX XX XXXXXXXXX X XX XXXX..XXXXXXXXXXXXX..\n...................XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n............................................................\n............................................................''') == '3 rotate'\n\nassert solution('''............................................................\n............................................................\n............XXXX..................................XXXX..............\n.....................XXXX........... XXXX.............XXXX...........\n....................XXXXXXXX...... X..XXX..XXXXXXXXXXXXXXXXX...\n...................XXXXXXXXXXXX....X XXXX..XXXXXXXXXXXXXXXXXX..\n...................XX....XXXXXXXXX..X XXXX..XXXXXXXXXXXXXXXXX..\n...................XX.XXXXXXXXXXXXX X XXXX..XXXXXXXXXXXXXXXXX..\n...................XX XXXXXXXXXXXXX X XXXX..XXXXXXXXXXXXXXXXX..\n...................XX XX XXXXXXXXX X XX XXXX..XXXXXXXXXXXXX..\n...................XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXX"
    },
    {
        "number": 3158,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''.........................................................................\n...................XXXX.......\n...................XXXX.......\n...................................XXXX\n...................................XXXX\n...................XXXX.......\n...................XXXX.......\n.........................................................................'''\n    ) == \"3 pan\\n\"\n    assert solution(\n'''.........................................................................\n...................XXXX.......\n...................XXXX.......\n...................................XXXX\n...................................XXXX\n...................XXXX.......\n...................XXXX.......\n.........................................................................'''\n    ) == \"5 rotate\\n\"\n    assert solution(\n'''.........................................................................\n...................XXXX.......\n...................XXXX.......\n...................................XXXX\n...................................XXXX\n...................XXXX.......\n...................XXXX.......\n.........................................................................'''\n    ) == \"3 zoom in\\n\"\n    assert solution(\n'''.........................................................................\n...................XXXX.......\n...................XXXX.......\n...................................XXXX\n...................................XXXX\n...................XXXX.......\n...................XXXX.......\n.........................................................................'''\n    ) == \"5 rotate\\n\"\n    assert solution(\n'''.........................................................................\n...................XXXX.......\n...................XXXX.......\n...................................XXXX\n...................................XXXX\n...................XXXX.......\n...................XXXX.......\n.........................................................................'''\n    ) == \"3 zoom in\\n\"\n    "
    },
    {
        "number": 3158,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"error\"\nassert solution(\"....XXXX....................................................\") == \"error\"\nassert solution(\"....XXXX..................................XXXX..............\") == \"error\"\nassert solution(\"............................................................\") == \"error\"\nassert solution(\"............................................................\") == \"error\"\n"
    },
    {
        "number": 3158,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('....................................................\\n'\n        '............................................................\\n'\n        '....XXXX....................................................\\n'\n        '....XXXX..................................XXXX..............\\n'\n        '....XXXX...................................XXX..............\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '"
    },
    {
        "number": 3158,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"X..........XXX...X.......X.......X......................XXXXXXXXX.X.............X...........X..........XX.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X"
    },
    {
        "number": 3158,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3158,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 0\\n0 0') == '0 pan'\nassert solution('1 1\\n1 1') == '0 pan'\nassert solution('0 0\\n0 0') == '0 pan'\nassert solution('1 1\\n1 1') == '0 pan'\nassert solution('0 0\\n0 0') == '0 pan'\n"
    },
    {
        "number": 3159,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"8 20\\napples are great!  \\n++++++++++++++++++++\\n+oranges are way better!\\n+#oranges>apples  \\n++++++++++++++++++++\\ncheck out our\\nfresh apples!\\n\") == 'apples are great!\\nfresh apples!\\ncheck out our\\nfresh apples!\\n'\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == '       \\n       \\n       \\n       \\n       \\n'\nassert solution(\"7 7\\n+++++++\\n+ = = +\\n+ + ++ +\\n+ ++ + +\\n+     +\\n+++++++\\n\") == '       \\n       \\n       \\n       \\n       \\n'\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ ++\\n+ ++ ++ ++\\n+     +\\n+++++++\\n\") == '       \\n       \\n       \\n       \\n       \\n'\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ ++\\n+ ++ ++ ++\\n+     +\\n+++++++\\n\") == '       \\n       \\n       \\n       \\n       \\n'\n"
    },
    {
        "number": 3159,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n8 20\n apples are great!  \n++++++++++++++++++++\n+ oranges are      +\n+ way better!      +\n+ #oranges>apples  +\n++++++++++++++++++++\n check out our      \n fresh apples!      \n''') == '''    apples are great!\n                    \n                    \n                    \n                    \n                    \n check out our      \n fresh apples!      \n'''\nassert solution('''\n8 20\n+++\n+  =\n+ +++\n+ + +\n+ +++\n+     +\n+++\nSample Input 3:\n7 7\n+++++++\n+     =\n+ +++ +\n+ + + +\n+ +++ +\n+     +\n+++++++\nSample Output 3:\n       \n       \n       \n       \n       \n       \n       "
    },
    {
        "number": 3159,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''8 20\n apples are great!  \n++++++++++++++++++++\n+ oranges are      +\n+ way better!      +\n+ #oranges>apples  +\n++++++++++++++++++++\n check out our      \n fresh apples!      \n''') == 'apples are great!  \\n\\n\\n\\n\\ncheck out our      \\nfresh apples!\\n'\n\nassert solution('''8 10\n+++++++++++\n++++  =  +\n+  + +++ +\n+   + + + +\n+ =+++ ++++\n+ +++   +\n+ +++  = +\n+++++++++++\n''') == '+++++++++++\\n++++  =  +\\n+  + +++ +\\n+   + + + +\\n+ =+++ ++++\\n+ +++   +\\n+ +++  = +\\n+++++++++++\\n'\n\nassert solution('''8 8\n++ +++ - + ++ -\n+ + +++   + +++\n+ +++ ++ ++   +\n++ +++ ++ ++   +\n+ ++++   + +++\n+ +++ ++ ++ + +\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++"
    },
    {
        "number": 3159,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\\\n8 19\n *=*\n+++++\n++++++\n++++++\n++++++\n++++=+\n+++++=+\n+++*=++\n''') == '''\\\n    *=*\n    +++++\n    ++++++\n    ++++++\n    ++++++\n    ++++=+\n    +++++=+\n    +++*=++\n'''\nassert solution('''\\\n7 7\n+++++\n+ + +\n+ + +\n+ + +\n+ = +\n+++++\n''') == '''\\\n    +\n    +\n    +\n    +\n    +\n    +\n'''\nassert solution('''\\\n8 10\n++++++\n+ ++ ++\n++ ++ ++\n+ ++ ++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n''') == '''\\\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n'''\nassert solution('''\\\n9 8\n++++++\n+ ++ ++\n++ ++ ++\n+ ++ ++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n''') == '''\\\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n'''\nassert solution('''\\\n12 1\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n''') == '''\\\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n'''\n"
    },
    {
        "number": 3159,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n    8 20\n    apples are great!  \n    ++++++++++++++++++++\n    + oranges are      +\n    + way better!      +\n    + #oranges>apples  +\n    ++++++++++++++++++++\n    check out our      \n    fresh apples!      \n    ''') == 'apples are great!  \\n' + \\\n    '++++++++++++++++++++\\n' + \\\n    '+ oranges are      +\\n' + \\\n    '+ way better!      +\\n' + \\\n    '+ #oranges>apples  +\\n' + \\\n    '++++++++++++++++++++\\n' + \\\n    'check out our      \\n' + \\\n    'fresh apples!      \\n'\n\nassert solution('''\n    7 7\n    +++++++\n    +  =  +\n    + +++ +\n    + + + +\n    + +++ +\n    +     +\n    +++++++\n    ''') == '       \\n       \\n       \\n       \\n       \\n'\n\nassert solution('''\n    7 7\n    +++++++\n    +  =  +\n    + +++ +\n    + + + +\n    + +++ +\n    +     +\n    +++++++\n    ''') == '       \\n       \\n       \\n       \\n       \\n'\n\nassert solution('''\n    8 10\n    ##########\n    #oo#oo#oo#\n    #oo#oo#oo#\n    #oo#oo#oo#\n    #oo#oo#oo#\n    #oo#oo#oo#\n    #oo#oo#oo#\n    ##########\n    ''') == '       \\n       \\n       \\n       \\n       \\n       \\n'\n\nassert solution('''\n    8 10\n    ##########\n    #oooo#oooo#\n    #oooo#oooo#\n    #oooo#oooo#\n    #oooo#oooo#\n    #oooo#oooo#\n    #oooo#oooo#\n    ##########\n    ''') == '       \\n       \\n       \\n       \\n       \\n       \\n'"
    },
    {
        "number": 3159,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 20\\napples are great!  \\n++++++++++++++++++++\\n+ oranges are      +\\n+ way better!      +\\n+ #oranges>apples  +\\n++++++++++++++++++++\\ncheck out our      \\nfresh apples!      \\n') == 'apples are great!  \\n                    \\n'\nassert solution('6 6\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\ncheck out our      \\nfresh apples!      \\n') == '      \\n      \\n      \\n      \\n      \\n      \\n'\n"
    },
    {
        "number": 3159,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3159,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n8 20\n apples are great!  \n++++++++++++++++++++\n+ oranges are      +\n+ way better!      +\n+ #oranges>apples  +\n++++++++++++++++++++\n check out our      \n fresh apples!      \n''') == '''apples are great!'''\n\nassert solution('''\n4 1\n?*?*?+\n?**+*??\n++?*???\n++?*???\n+++++++\n++?*???\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n++++"
    },
    {
        "number": 3159,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n8 20\n apples are great!  \n++++++++++++++++++++\n+ oranges are      +\n+ way better!      +\n+ #oranges>apples  +\n++++++++++++++++++++\n check out our      \n fresh apples!      \n'''\n    ) == '''      \napples are great!  \n                    \n                    \n                    \n                    \n                    \n check out our      \n fresh apples!      \n'''\n\nassert solution(\n'''\n7 7\n+++++++\n+  =  +\n+ +++ +\n+ + + +\n+ +++ +\n+     +\n+++++++\n'''\n) == '''      \n       \n       \n       \n       \n       \n       \n       \n       \n'''\n"
    },
    {
        "number": 3159,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('\\n'.join(('8 20',\n       'apples are great!  ',\n       '++++++++++++++++++++',\n       '+ oranges are      +',\n       '+ way better!      +',\n       '+ #oranges>apples  +',\n       '++++++++++++++++++++',\n       'check out our      ',\n       'fresh apples!      '))) == 'apples are great!  \\nfresh apples!\\ncheck out our\\n'\nassert solution('\\n'.join(('8 7',\n       '+++++++',\n       '+  =  +',\n       '+ +++ +',\n       '+ + + +',\n       '+ +++ +',\n       '+     +',\n       '+++++++',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n    "
    },
    {
        "number": 3160,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('HH') == '2.0'\nassert solution('H?') == '1.5'\nassert solution('H?H') == '3.0'\nassert solution('HTHTH') == '3.0'\nassert solution('HTHTHHTHTHH') == '6.0'\n"
    },
    {
        "number": 3160,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('HH') == '2.0'\nassert solution('H?') == '1.5'\nassert solution('HHTHHTTTT') == '1.0'\nassert solution('HHTHHHTTTH') == '1.0'\nassert solution('HHTHHHTHHHH') == '1.0'\n"
    },
    {
        "number": 3160,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('HH') == '2.0'\nassert solution('H?') == '1.5'\nprint(solution(stdin))\n\n>>> 2.0\n>>> 1.5\n"
    },
    {
        "number": 3160,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('HTH') == '2.0'\nassert solution('HT') == '1.5'\nassert solution('HTHHHHTHT') == '2.0'\nassert solution('HTHTTHTHTHTTHTHT') == '2.0'\nassert solution('HTTH') == '1.5'\n"
    },
    {
        "number": 3160,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1.5\""
    },
    {
        "number": 3160,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"HH\") == '2.0'\nassert solution(\"H?\") == '1.5'\nassert solution(\"T\") == '1.0'\nassert solution(\"TT\") == '0.5'\nassert solution(\"HHTH\") == '1.5'\n"
    },
    {
        "number": 3160,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"HH\") == 2.0\nassert solution(\"H?\") == 1.5\nassert solution(\"HHH\") == 4.0\nassert solution(\"HTH\") == 3.0\nassert solution(\"HT\") == 1.5\n"
    },
    {
        "number": 3160,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('HTHHTTHTHTHTHTHTHTHTHTH') == 1.5\nassert solution('HHHHHT') == 2.0\nassert solution('HTHHTTHHT') == 1.5\nassert solution('HTHHHHH') == 2.0\nassert solution('HHTHHTTH') == 2.0\n"
    },
    {
        "number": 3160,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('HH') == '2.0'\nassert solution('H?') == '1.5'\nassert solution('H?H') == '1.5'\nassert solution('H') == '2.0'\nassert solution('H?') == '1.5'\n"
    },
    {
        "number": 3160,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"HH\") == \"2.0\"\nassert solution(\"H?\") == \"1.5\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3161,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3161,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3161,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\n"
    },
    {
        "number": 3161,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n0001\n0001\n0011\n1110''') == '1'\nassert solution('''4\n1111\n1111\n1111\n1111''') == '6'\nassert solution('''8\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000''') == '12'\nassert solution('''16\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000"
    },
    {
        "number": 3161,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n0001\n0001\n0011\n1110''') == '1'\nassert solution('''4\n1111\n1111\n1111\n1111''') == '6'\nassert solution('''4\n0101\n0101\n0101\n0101''') == '0'\nassert solution('''8\n1101\n1101\n1101\n1101\n1101\n1101\n1101\n1101\n1101''') == '25'\nassert solution('''16\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111''') == '115'\n"
    },
    {
        "number": 3161,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin.strip()\n"
    },
    {
        "number": 3161,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"\\n\\n\\n\") == \"\"\nassert solution(\"\\n\\n\\n\\n\") == \"\"\n\nassert solution(\"4\") == \"0\"\n"
    },
    {
        "number": 3161,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('11') == '11'\nassert solution('1111') == '11'\n"
    },
    {
        "number": 3161,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''4\n0001\n0001\n0011\n1110''') == '1'\nassert solution('''10\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111''') == '6'\nassert solution('''16\n
    },
    {
        "number": 3161,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n0001\n0001\n0011\n1110''') == '1'\nassert solution('''3\n0001\n0001\n1110\n''') == '1'\nassert solution('''6\n1111\n1111\n1111\n1111\n1110\n1111\n''') == '6'\nassert solution('''8\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1110\n''') == '0'\nassert solution('''8\n1111\n1110\n1001\n1111\n1100\n1010\n1000\n''') == '7'\n"
    }
]