[
    {
        "number": 3000,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n2 3') == '5'\nassert solution('8\\n( 2 ( 2 1 ) ) 3') == '9'\nassert solution('4\\n( 12 3 )') == '36'\nassert solution('6\\n( ( 2 3 ) )') == '5'\nassert solution('6\\n( ( 2 3 ) )') == '5'"
    },
    {
        "number": 3000,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"5\"\nassert solution(\"( 2 ( 2 1 ) ) 3\") == \"9\"\nassert solution(\"( ( 2 3 ) )\") == \"5\"\nassert solution(\"( ( ( 2 3 ) ) )\") == \"5\"\nassert solution(\"( ( ( ( 2 3 ) ) ) )\") == \"5\"\n"
    },
    {
        "number": 3000,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n2 3\n''') == '5'\n\nassert solution('''8\n( 2 ( 2 1 ) ) 3\n''') == '9'\n\nassert solution('''4\n( 12 3 )\n''') == '36'\n\nassert solution('''6\n( 2 ) ( 3 )\n''') == '5'\n\nassert solution('''6\n( ( 2 3 ) )\n''') == '5'"
    },
    {
        "number": 3000,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3') == '5'\nassert solution('( 2 ( 2 1 ) ) 3') == '9'\nassert solution('( 12 3 )') == '36'\nassert solution('( 2 ) ( 3 )') == '5'\nassert solution('( ( 2 3 ) )') == '5'\n"
    },
    {
        "number": 3000,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2') == '2'\nassert solution('(2)') == '5'\nassert solution('(2 3)') == '5'\nassert solution('(12 3 )') == '36'\nassert solution('(12 3 )') == '36'\n"
    },
    {
        "number": 3000,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == str(solution(input()))\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 3000,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"(12 3 )\") == 5\nassert solution(\"( ( 2 3 ) )\") == 5\nassert solution(\"( ( 2 3 ) )\") == 5\nassert solution(\"( ( 2 3 ) )\") == 5\nassert solution(\"( ( 2 3 ) )\") == 5\n"
    },
    {
        "number": 3000,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"5\"\nassert solution(\"(2 3)\") == \"5\"\nassert solution(\"(12 3)\") == \"36\"\nassert solution(\"(2 (2 1 ))\") == \"5\"\nassert solution(\"(2 (3))\") == \"5\"\n"
    },
    {
        "number": 3000,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2\") == 2\nassert solution(\"2 3\") == 5\nassert solution(\"8\") == 36\nassert solution(\"( 2 ( 2 1 ) ) 3\") == 9\nassert solution(\"( 12 3 )\") == 36\n"
    },
    {
        "number": 3000,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 3001,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(sample_input) == sample_output\n\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 3001,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('99999') == '4'\nassert solution('999899') == '5'\nassert solution('9998999899') == '8'\n"
    },
    {
        "number": 3001,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"009990001\") == \"3\"\nassert solution(\"29998\") == \"5\"\nassert solution(\"600\") == \"4\"\nassert solution(\"981\") == \"2\"\n"
    },
    {
        "number": 3001,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(str(0)) == str(0)\nassert solution(str(10)) == str(0)\nassert solution(str(111)) == str(1)\nassert solution(str(9111)) == str(2)\nassert solution(str(11011)) == str(3)\n"
    },
    {
        "number": 3001,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('1') == '1'\nassert solution('9') == '0'\nassert solution('99') == '2'\n"
    },
    {
        "number": 3001,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('0') == '0'\nassert solution('00') == '0'\nassert solution('0099') == '9'\n"
    },
    {
        "number": 3001,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6') == '0'\nassert solution('9990001') == '3'\nassert solution('29998') == '5'\nassert solution('9899999') == '4'\nassert solution('98998') == '2'\n"
    },
    {
        "number": 3001,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('2') == ''\nassert solution('42') == ''\nassert solution('212') == '1'\nassert solution('2112') == '2'\n"
    },
    {
        "number": 3001,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"100000010100001001010111000111000111100011101101011010011001100001101101100111010011000111101110110111010111101101010111011001100011110100111001110100011001000111011110011000111101001001100101110111000111101011010011001100001100001101100110111000111101110000011101110001110001101101110001101111010111101001100011110111011101111011001011110010111011100011110101111011110110101111010011011110001111011100011110100111011110111000110100101110001111011110111011110111000110100101110111000111101111011100011110011011100011110111011101110001110001111011110111000111101001011100011110111000111101110001111011100011110111000111100011101110001111011100011110111000111000111101111011100011110111011110111000111101001101110001111011100011110111000111101111011100011110111101001101110001111011100011110111000111101110001111011100011110111101110001111011100011110111000111100011101110001111011100011110111000111101110001111011100011110111000111101110001111010011011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111100011101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111000111101110001111011100011110111"
    },
    {
        "number": 3001,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('990') == '0'\nassert solution('9900') == '3'\nassert solution('0998') == '5'\nassert solution('99999') == '7'\nassert solution('9999988') == '14'\n"
    },
    {
        "number": 3002,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n2017 4 0\n2017 8 12000\n2018 8 42000''') == 'tampered odometer'\nassert solution('''2\n2017 11 0\n2018 1 1000''') == 'insufficient service'\nassert solution('''2\n2013 1 0\n2013 2 0''') == 'tampered odometer'\nassert solution('''2\n2017 5 0\n2017 8 0\n2018 7 0''') == 'insufficient service'\nassert solution('''2\n2017 11 0\n2018 1 1000''') == 'tampered odometer'\n"
    },
    {
        "number": 3002,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('test') == 'insufficient service'\nassert solution('tampered odometer') == 'tampered odometer'\nassert solution('2017 11 0') =='seems legit'\nassert solution('2017 8 0') == 'insufficient service'\n"
    },
    {
        "number": 3002,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n3\n2017 4 0\n2017 8 12000\n2018 8 42000\n''') == 'tampered odometer'\n\nassert solution(\n'''\n3\n2017 4 0\n2017 8 12000\n2018 8 42001\n''') == 'insufficient service'\n\nassert solution(\n'''\n3\n2017 4 0\n2017 8 12000\n2018 8 12500\n''') =='seems legit'\n\nassert solution(\n'''\n2\n2017 11 0\n2018 1 1000\n''') == 'tampered odometer'\n\nassert solution(\n'''\n2\n2013 1 0\n2013 2 0\n''') =='seems legit'"
    },
    {
        "number": 3002,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"tampered odometer\"\nassert solution(stdin) == \"insufficient service\"\nassert solution(stdin) == \"seems legit\"\nassert solution(stdin) == \"tampered odometer\"\nassert solution(stdin) == \"insufficient service\"\n"
    },
    {
        "number": 3002,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"insufficient service\""
    },
    {
        "number": 3002,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n2017 4 0\n2017 8 12000\n2018 8 42000''') == 'insufficient service'\nassert solution('''3\n2017 4 0\n2017 8 12000\n2018 8 42001''') == 'tampered odometer'\nassert solution('''2\n2017 11 0\n2018 1 1000''') =='seems legit'\nassert solution('''2\n2013 1 0\n2013 2 0''') =='seems legit'\nassert solution('''2\n2017 11 0\n2018 1 1000\n2017 12 0\n2018 2 0''') =='seems legit'\n'''\n"
    },
    {
        "number": 3002,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\") == \"seems legit\"\nassert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\") == \"insufficient service\"\nassert solution(\"2\\n2017 11 0\\n2018 1 1000\") == \"tampered odometer\"\nassert solution(\"2\\n2013 1 0\\n2013 2 0\") == \"seems legit\"\nassert solution(\"4\\n2013 1 0\\n2013 2 0\\n2014 1 0\\n2014 2 0\") == \"seems legit\"\n"
    },
    {
        "number": 3002,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''2017 4 0\n2017 8 12000\n2018 8 42000''') == 'tampered odometer'\nassert solution(\n'''2017 4 0\n2017 8 12000\n2018 8 42001''') == 'insufficient service'\nassert solution(\n'''2017 11 0\n2018 1 1000''') =='seems legit'\nassert solution(\n'''2018 1 0''') =='seems legit'\nassert solution(\n'''2018 1 1000''') == 'insufficient service'\n"
    },
    {
        "number": 3002,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n2017 4 0\n2017 8 12000\n2018 8 42000\n''') =='seems legit'\nassert solution('''\n2017 4 0\n2017 8 12000\n2018 8 42001\n''') == 'insufficient service'\nassert solution('''\n2017 11 0\n2018 1 1000\n''') == 'tampered odometer'\nassert solution('''\n2010 1 0\n2010 2 0\n2010 3 0\n2010 4 0\n2010 5 0\n2010 6 0\n2010 7 0\n2010 8 0\n2010 9 0\n2010 10 0\n2010 11 0\n2010 12 0\n2010 13 0\n2010 14 0\n2010 15 0\n2010 16 0\n2010 17 0\n2010 18 0\n2010 19 0\n2010 20 0\n2010 21 0\n2010 22 0\n2010 23 0\n2010 24 0\n2010 25 0\n2010 26 0\n2010 27 0\n2010 28 0\n2010 29 0\n2010 30 0\n2010 31 0\n2010 32 0\n2010 33 0\n2010 34 0\n2010 35 0\n2010 36 0\n2010 37 0\n2010 38 0\n2010 39 0\n2010 40 0\n2010 41 0\n2010 42 0\n2010 43 0\n2010 44 0\n2010 45 0\n2010 46 0\n2010 47 0\n2010 48 0\n2010 49 0\n2010 50 0\n2010 51 0\n2010 52 0\n2010 53 0\n2010 54 0\n2010 55 0\n2010 56 0\n2010 57 0\n2010 58 0\n2010 59 0\n2010 60 0\n2010 61 0\n2010 62 0\n2010 63 0\n2010 64 0\n2010 65 0\n2010 66 0\n2010 67 0\n2010 68 0\n2010 69 0\n2010 70 0\n2010 71 0\n2010 72 0\n2010 73 0\n2010 74 0\n2010 75 0\n2010 76 0\n2010 77 0\n2010 78 0\n2010 79 0\n2010 80 0\n2010 81 0\n2010 82 0\n2010 83 0\n2010 84 0\n2010 85 0\n2010 86 0\n2010 87 0\n2010 88 0\n2010 89 0\n2010 90 0\n2010 91 0\n2010 92 0\n2010 93 0\n2010 94 0\n2010 95 0\n2010 96 0\n2010 97 0\n2010 98 0\n2010 99 0\n2010 100 0\n2010 101 0\n2010 102 0\n2010 103 0\n2010 104 0\n2010 105 0\n2010 106 0\n2010 107 0\n2010 108 0\n2010 109 0\n2010 110 0\n2010 111 0\n2010 112 0\n2010 113 0\n2010 114 0\n2010 115 0\n2010 116 0\n2010 117 0\n2010 118 0\n2010 119 0\n2010 120 0\n2010 121 0\n2010 122 0\n2010 123 0\n2010 124 0\n2010 125 0\n2010 126 0\n2010 127 0\n2010 128 0\n2010 129 0\n2010 130 0\n2010 131 0\n2010 132 0\n2010 133 0\n2010 134 0\n2010 135 0\n2010 136 0\n2010 137 0\n2010 138 0\n2010 139 0\n2010 140 0\n2010 141 0\n2010 142 0\n2010 143 0\n2010 144 0\n2010 145 0\n2010 146 0\n2010 147 0\n2010 148 0\n2010 149 0\n2010 150 0\n2010 151 0\n2010 152 0\n2010 153 0\n2010 154 0\n2010 155 0\n2010 156 0\n2010 157 0\n2010 158 0\n2010 159 0\n2010 160 0\n2010 161 0\n2010 162 0\n2010 163 0\n2010 164 0\n2010 165 0\n2010 166 0\n2010 167 0\n2010 168 0\n2010 169 0\n2010 170 0\n2010 171 0\n2010 172 0\n2010 173 0\n2010 174 0\n2010 175 0\n2010 176 0\n2010 177 0\n2010 178 0\n2010 179 0\n2010 180 0\n2010 181 0\n2010 182 0\n2010 183 0\n2010 184 0\n2010 185 0\n2010 186 0\n2010 187 0\n2010 188 0\n2010 189 0\n2010 190 0\n2010 191 0\n2010 192 0\n2010 193 0\n2010 194 0\n2010 195 0\n2010 196 0\n2010 197 0\n2010 198 0\n2010 199 0\n2010 200 0\n2010 201 0\n2010 202 0\n2010 203 0\n2010 204 0\n2010 205 0\n2010 206 0\n2010 207 0\n2010 208 0\n2010 209 0\n2010 210 0\n2010 211 0\n2010 212 0\n2010 213 0\n2010 214 0\n2010 215 0\n2010 216 0\n2010 217 0\n2010 218 0\n2010 219 0\n2010 220 0\n2010 221 0\n2010 222 0\n2010 223 0\n2010 224 0\n2010 225 0\n2010 226 0\n2010 227 0\n2010 228 0\n2010 229 0\n2010 230 0\n2010 231 0\n2010 232 0\n2010 233 0\n2010 234 0\n2010 235 0\n2010 236 0\n2010 237 0\n2010 238 0\n2010 239 0\n2010 240 0\n2010 241 0\n2010 242 0\n2010 243 0\n2010 244 0\n2010 245 0\n2010 246 0\n2010 247 0\n2010 248 0\n2010 249 0\n2010 250 0\n2010 251 0\n2010 252 0\n2010 253 0\n2010 254 0\n2010 255 0\n2010 256 0\n2010 257 0\n2010 258 0\n2010 259 0\n2010 260 0\n2010 261 0\n2010 262 0\n2010 263 0\n2010 264 0\n2010 265 0\n2010 266 0\n2010 267 0\n2010 268 0\n2010 269 0\n2010 270 0\n2010 271 0\n2010 272 0\n"
    },
    {
        "number": 3002,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3003,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"3\"\nassert solution(\"1 2 3 4 5 6 7\") == \"2\"\n"
    },
    {
        "number": 3003,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n0 2 3\\n0 1\") == 3\nassert solution(\"4\\n1 2\\n0 2 3\\n0 1\\n1\") == 3\nassert solution(\"5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\nSample Output 3\\n\") == 2\nassert solution(\"6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\nSample Output 4\\n\") == 2\nassert solution(\"5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\nSample Output 4\\n\") == 4\n"
    },
    {
        "number": 3003,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n1 2\n0 2 3\n0 1\n1\n''') == '3'\nassert solution('''5\n2 3 4\n2 3 4\n0 1\n0 1\n0 1\n''') == '2'\nassert solution('''6\n1 3\n0 2 4\n1 5\n0 4\n1 3 5\n2 4\nSample Output 4:\n2\n''') == '2'\n\n'''\n"
    },
    {
        "number": 3003,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n1 2\n0 2 3\n0 1\n1\n''') == '3'\nassert solution('''5\n2 3 4\n2 3 4\n0 1\n0 1\n0 1\n''') == '2'\nassert solution('''6\n1 3\n0 2 4\n1 5\n0 4\n1 3 5\n2 4\n''') == '2'\nassert solution('''7\n1 2 3\n0 1 2\n0 1 2\n0 1 2\n0 1 2\n0 1 2\n0 1 2\n''') == '4'\nassert solution('''8\n1 2 3\n0 1 2\n0 1 2\n0 1 2\n0 1 2\n0 1 2\n0 1 2\n0 1 2\n''') == '4'\n"
    },
    {
        "number": 3003,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n1 2\\n0 2 3\\n0 1\\n1\\n') == '3'\nassert solution('5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n') == '2'\nassert solution('6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n') == '2'\nassert solution('7\\n1 2 3\\n0 1 2 3\\n0 1 2 3\\n0 1 2 3\\n0 1 2 3\\n0 1 2 3\\n') == '4'\nassert solution('8\\n1 2 3 4\\n0 1 2 3 4\\n0 1 2 3 4\\n0 1 2 3 4\\n0 1 2 3 4\\n0 1 2 3 4\\n0 1 2 3 4\\n') == '4'\nprint('solution:', solution(stdin))"
    },
    {
        "number": 3003,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"4\n1 2\n0 2 3\n0 1\n1\n\"\"\") == \"3\"\nassert solution(\"\"\"5\n2 3 4\n2 3 4\n0 1\n0 1\n0 1\n0 1\n\"\"\") == \"2\"\nassert solution(\"\"\"6\n1 3\n0 2 4\n1 5\n0 4\n1 3 5\n2 4\n\"\"\") == \"2\"\nassert solution(\"\"\"8\n1 2\n0 2 3\n0 1\n1\n0 2 3\n0 1\n0 1\n0 1\n1\n\"\"\") == \"4\"\nassert solution(\"\"\"9\n0 1\n1\n0 2 3\n0 1\n0 1\n0 1\n0 1\n1\n0 2 3\n0 1\n0 1\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3003,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3003,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''4\n1 2\n0 2 3\n0 1\n1\n'''\n) == '3'\nassert solution(\n'''5\n2 3 4\n2 3 4\n0 1\n0 1\n0 1\n'''\n) == '2'\nassert solution(\n'''6\n1 3\n0 2 4\n1 5\n0 4\n1 3 5\n2 4\n'''\n) == '2'"
    },
    {
        "number": 3003,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n1 2\\n0 2 3\\n0 1\\n1') == '3'\nassert solution('4\\n1 2\\n0 2 3\\n0 1\\n1') == '2'\nassert solution('5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n') == '2'\nassert solution('6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n') == '2'\nassert solution('6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n') == '2'"
    },
    {
        "number": 3003,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"4\n1 2\n0 2 3\n0 1\n1\n\"\"\") == \"3\"\nassert solution(\"\"\"5\n2 3 4\n2 3 4\n0 1\n0 1\n0 1\n0 1\n0 1\n\"\"\") == \"2\"\nassert solution(\"\"\"6\n1 3\n0 2 4\n1 5\n0 4\n1 3 5\n2 4\n\"\"\") == \"2\"\nassert solution(\"\"\"7\n1 2 3\n0 1 3\n0 1 2\n0 1 3\n0 1 4\n0 1 5\n0 1 6\n0 1 7\n0 1 8\n0 1 9\n0 1 10\n\"\"\") == \"3\"\nassert solution(\"\"\"8\n1 2 3 4 5 6 7\n0 1 2 3 4 5 6 7\n0 1 2 3 4 5 6 7\n0 1 2 3 4 5 6 7\n0 1 2 3 4 5 6 7\n0 1 2 3 4 5 6 7\n0 1 2 3 4 5 6 7\n0 1 2 3 4 5 6 7\n0 1 2 3 4 5 6 7\n\"\"\") == \"7\"\n"
    },
    {
        "number": 3004,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3004,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3004,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3004,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3004,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\nBLUE 1 5000\\nRED 5001 10000') == '2\\n'\nassert solution('3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000') == '3\\n'\nassert solution('4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000') == 'IMPOSSIBLE\\n'\n"
    },
    {
        "number": 3004,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''BLUE 1 6000\nRED 2000 8000\nWHITE 7000 10000''') == 'IMPOSSIBLE'\nassert solution('''BLUE 1 6000\nRED 2000 8000\nWHITE 7000 10000\nBLUE 1 6000''') == '3'\nassert solution('''BLUE 1 6000\nRED 2000 8000\nWHITE 7000 10000\nBLUE 1 6000''') == 'IMPOSSIBLE'\nassert solution('''BLUE 1 6000\nRED 2000 8000\nWHITE 7000 10000\nORANGE 4000 8000\nGREEN 7000 10000''') == 'IMPOSSIBLE'\nassert solution('''BLUE 1 6000\nRED 2000 8000\nORANGE 4000 8000\nGREEN 7000 10000''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3004,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('BLUE 1 5000\\nRED 5001 10000\\n') == 2\nassert solution('BLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\n') == 3\nassert solution('BLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\n') == 4\nassert solution('BLUE 1 4000\\nRED 4002 10000\\n') == 1\nassert solution('BLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\n') == 3\n"
    },
    {
        "number": 3004,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('BLUE 1 5000') == '2'\nassert solution('RED 5001 10000') == '2'\nassert solution('BLUE 1 6000') == '3'\nassert solution('RED 2000 8000') == '3'\nassert solution('WHITE 7000 10000') == '3'\n"
    },
    {
        "number": 3004,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"IMPOSSIBLE\"\nassert solution(\"2\") == \"IMPOSSIBLE\"\nassert solution(\"3\") == \"IMPOSSIBLE\"\nassert solution(\"4\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3004,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''BLUE 1 5000\nRED 5001 10000'''\n) == \"2\"\n\nassert solution(\n'''BLUE 1 6000\nRED 2000 8000\nWHITE 7000 10000'''\n) == \"3\"\n\nassert solution(\n'''BLUE 1 3000\nRED 2000 5000\nORANGE 4000 8000\nGREEN 7000 10000'''\n) == \"IMPOSSIBLE\"\n\nassert solution(\n'''BLUE 1 3000\nRED 2000 5000\nORANGE 4000 8000\nRED 5000 7000\nYELLOW 60000 10000'''\n) == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3005,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('ab') == 'ab'\nassert solution('abcd') == ''\nassert solution('abcde') == ''\n"
    },
    {
        "number": 3005,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('MATTATT') == 6\nassert solution('ABABABABBABA') == 1\nassert solution('PRATTATTATTIC') == 6\nassert solution('GGGGGGGGG') == 1\nassert solution('BABBABABBABBA') == 6\n"
    },
    {
        "number": 3005,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"BABBABABBABBA\") == \"6\"\nassert solution(\"GGGGGGGGG\") == \"1\"\nassert solution(\"PRIME\") == \"5\"\nassert solution(\"PRATTATTATTIC\") == \"6\"\nassert solution(\"BABBABABBABBA\") == \"6\"\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 3005,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('PRATTATTATTIC') == '6'\nassert solution('GGGGGGGG') == '1'\nassert solution('BABBABABBABBA') == '6'\nassert solution('PRIME') == '5'\nassert solution('BABBABABBABBA') == '6'\n"
    },
    {
        "number": 3005,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(''.join(open('test_1.txt').readlines())) == '3'\nassert solution(''.join(open('test_2.txt').readlines())) == '4'\nassert solution(''.join(open('test_3.txt').readlines())) == '5'\nassert solution(''.join(open('test_4.txt').readlines())) == '6'\nassert solution(''.join(open('test_5.txt').readlines())) == '4'\n"
    },
    {
        "number": 3005,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('GCTATCATTATCATCGTTGAGAATATATTTT') == 6\nassert solution('AAAAA') == 1\nassert solution('JWTKWVJYZNKIV') == 5\nassert solution('PSNJQHJQZPWXGJQT') == 5\nassert solution('GTCAATATTGGGCCATCAGGGGCC') == 6\n"
    },
    {
        "number": 3005,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(INPUT) == EXPECTED\nprint(solution(INPUT))\n\"\"\"\n"
    },
    {
        "number": 3005,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('A') == 1\nassert solution('AB') == 2\nassert solution('AAAA') == 1\nassert solution('BABABABABBABA') == 1\nassert solution('B' * 100) == 1\n"
    },
    {
        "number": 3005,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('PRATTATTATTIC') == '6'\nassert solution('GGGGGGGGG') == '1'\nassert solution('PRIME') == '5'\nassert solution('BABBABABBABBA') == '6'\nprint('Tests passed successfully')"
    },
    {
        "number": 3005,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('PRATTATTATTIC') == '6'\nassert solution('GGGGGGGG') == '1'\nassert solution('BABBABABBABBA') == '6'\nassert solution('PRIME') == '5'\nassert solution('AB') == '2'\n"
    },
    {
        "number": 3006,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"D 1\\nD 2\\nE\") == \"0\"\nassert solution(\"D 2\\nD 1\\nE\\nE\\nE\") == \"1\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\\nE\") == \"0\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nE\\nE\") == \"0\"\nassert solution(\"I 14 A\\nI 15 B\\nE\\nE\\nE\") == \"1\"\n"
    },
    {
        "number": 3006,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('D 2\\nD 1\\nE\\nE\\nE\\nD 1\\nE\\nD 2\\nE\\nD 3\\nD 1\\nE\\n') == '0'\nassert solution('D 2\\nD 1\\nE\\nE\\nE\\nD 1\\nE\\nD 2\\nE\\nD 3\\nD 1\\nE\\n') == '1'\nassert solution('I 1 X\\nD 1\\nE\\nE\\nE\\nD 1\\nE\\nD 2\\nE\\nD 3\\nD 1\\nE\\n') == '0'\nassert solution('I 14 B\\nI 14 A\\nE\\nE\\nE\\nI 14 A\\nI 15 B\\nE\\nI 14 A\\nI 15 B\\nE\\n') == '0'"
    },
    {
        "number": 3006,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"D 1\") == \"0\"\nassert solution(\"D 2\") == \"1\"\nassert solution(\"E\") == \"0\"\nassert solution(\"D 3\") == \"1\"\nassert solution(\"D 1\") == \"0\"\n"
    },
    {
        "number": 3006,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    '''D 1\nD 2\nE\nD 3\nD 1\nE\n''') == '0'\nassert solution(\n    '''D 2\nD 1\nE\nD 1\nD 2\nE\n''') == '1'\nassert solution(\n    '''I 1 X\nD 1\nE\nE\nE\nI 14 A\nI 14 B\nE\nI 15 B\nE\n''') == '0'\nassert solution(\n    '''I 14 A\nI 14 B\nE\nI 15 B\nE\n''') == '1'\nassert solution(\n    '''I 1 X\nD 1\nE\nI 1 Y\nE\nE\nE\nI 1 Y\nE\n''') == '1'\n"
    },
    {
        "number": 3006,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n') == '0'\nassert solution('D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n') == '1'\nassert solution('I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n') == '0'\nassert solution('I 14 A\\nI 15 B\\nE\\nI 14 A\\nI 15 B\\nE\\n') == '1'\nassert solution('I 14 A\\nI 15 B\\nE\\nI 14 A\\nI 15 B\\nE\\nI 15 B\\nE\\n') == '1'\n"
    },
    {
        "number": 3006,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"D 1\nD 2\nE\nD 3\nD 1\nE\n\"\"\") == \"0\"\nassert solution(\"\"\"D 2\nD 1\nE\nD 1\nD 2\nE\n\"\"\") == \"1\"\nassert solution(\"\"\"I 1 X\nD 1\nE\nE\nE\nI 14 B\nI 14 A\nE\nI 14 A\nI 15 B\nE\n\"\"\") == \"0\"\nassert solution(\"\"\"I 14 B\nI 14 A\nE\nI 14 A\nI 15 B\nE\n\"\"\") == \"1\"\nassert solution(\"\"\"D 0\nD 1\nE\nD 2\nD 1\nE\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3006,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''D 1\nD 2\nE\nD 3\nD 1\nE''') == \"0\"\nassert solution(\n'''D 2\nD 1\nE\nD 1\nD 2\nE\nD 1\nD 2''') == \"1\"\nassert solution(\n'''I 14 B\nI 14 A\nE\nI 14 A\nI 15 B\nE\nI 14 A\nI 15 B\nE''') == \"0\"\nassert solution(\n'''I 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\nE\nE\n"
    },
    {
        "number": 3006,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('D 1\\nD 2\\nE') == '0'\nassert solution('D 2\\nD 1\\nE\\nE\\nE') == '1'\nassert solution('I 1 X\\nD 1\\nE\\nE\\nE') == '0'\nassert solution('I 14 B\\nI 14 A\\nE\\nE\\nE') == '0'\nassert solution('I 14 B\\nI 14 A\\nE\\nE\\nE') == '0'\n"
    },
    {
        "number": 3006,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == '0'\nassert solution('D 1') == '0'\nassert solution('D 2') == '1'\nassert solution('E') == '0'\nassert solution('D 3') == '1'\n"
    },
    {
        "number": 3006,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"D 1\\nD 2\\nE\") == \"0\"\nassert solution(\"D 2\\nD 1\\nE\") == \"1\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\\nE\") == \"0\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nE\\nE\") == \"0\"\nassert solution(\"I 14 A\\nI 15 B\\nE\\nE\\nE\") == \"1\"\n"
    },
    {
        "number": 3007,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 0 1 0 0 0') == '300'\nassert solution('5 0 1 0 1 0') == '1900'\nassert solution('6 0 1 1 0 0') == '2300'\nassert solution('10 399 0 0 0 0') == '399'\nassert solution('11 399 0 0 0 0') == '399'\n"
    },
    {
        "number": 3007,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 0 1 0 0 0\\n') == '300'\nassert solution('5 0 1 0 1 0\\n') == '1900'\nassert solution('6 0 1 1 0 0\\n') == '2300'\nassert solution('10 399 0 0 0 0\\n') == '399'\nassert solution('10 399 0 0 0 0\\n') == '399'\n"
    },
    {
        "number": 3007,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('4 0 1 0 0 0') == '300'\nassert solution('5 0 1 0 1 0') == '1900'\nassert solution('6 0 1 1 0 0') == '2300'\nassert solution('10 399 0 0 0 0') == '399'\n"
    },
    {
        "number": 3007,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    input=\"4 0 1 0 0 0\") == \"300\"\nassert solution(\n    input=\"5 0 1 0 1 0\") == \"1900\"\nassert solution(\n    input=\"6 0 1 1 0 0\") == \"2300\"\nassert solution(\n    input=\"10 399 0 0 0 0\") == \"399\"\nassert solution(\n    input=\"10 400 0 0 0 0\") == \"400\"\n"
    },
    {
        "number": 3007,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 0 1 0 0 0') == '300'\nassert solution('5 0 1 0 1 0') == '1900'\nassert solution('6 0 1 1 0 0') == '2300'\nassert solution('10 399 0 0 0 0') == '399'\nassert solution('4 0 1 0 0 0') == '300'\n"
    },
    {
        "number": 3007,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2300\"\n"
    },
    {
        "number": 3007,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 0 1 0 0 0') == '300'\nassert solution('5 0 1 0 1 0') == '1900'\nassert solution('6 0 1 1 0 0') == '2300'\nassert solution('10 399 0 0 0 0') == '399'\n\n\nimport sys\n"
    },
    {
        "number": 3007,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 0 1 0 0 0') == '300'\nassert solution('5 0 1 0 1 0') == '1900'\nassert solution('6 0 1 1 0 0') == '2300'\nassert solution('10 399 0 0 0 0') == '399'\nassert solution('5 0 1 0 1 0') == '1900'\n"
    },
    {
        "number": 3007,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\"\nassert solution(\"10 399 0 0 0 0\") == \"399\"\nassert solution(\"2 4 0 1 0 0\") == \"19\"\n"
    },
    {
        "number": 3007,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3008,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2\\n1 3\\n2 3') == '2'\nassert solution('1 2\\n2 1\\n1 3') == '2'\nassert solution('1 2\\n3 1\\n1 2') == '3'\nassert solution('1 3\\n2 1\\n1 3') == '2'\nassert solution('1 3\\n2 1\\n1 2') == '3'\n"
    },
    {
        "number": 3008,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 10\\n1 12\\n1 13\\n') == '2'\nassert solution('1 10\\n1 5\\n1 12\\n') == '2'\nassert solution('1 10\\n1 5\\n1 4\\n') == '2'\nassert solution('1 10\\n1 5\\n4 1\\n') == '2'\nassert solution('1 10\\n1 5\\n1 4\\n2 1\\n') == '2'\n"
    },
    {
        "number": 3008,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n2 10\n1 12\n1 13\n\"\"\".strip()) == \"2\"\n\nassert solution(\n\"\"\"\n2 10\n1 5\n1 12\n\"\"\".strip()) == \"2\"\n\nassert solution(\n\"\"\"\n2 10\n1 5\n1 4\n\"\"\".strip()) == \"2\"\n\nassert solution(\n\"\"\"\n2 10\n1 5\n4 1\n\"\"\".strip()) == \"2\"\n"
    },
    {
        "number": 3008,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 3008,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 10\n1 12\n1 13''') == '2'\nassert solution('''2 10\n1 5\n1 12\n''') == '2'\nassert solution('''2 10\n1 5\n1 4\n''') == '2'\nassert solution('''2 10\n1 5\n4 1\n''') == '2'\nassert solution('''2 10\n1 5\n1 5\n''') == '1'\n"
    },
    {
        "number": 3008,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 10\n1 12\n1 13''') == '2'\nassert solution('''2 10\n1 5\n1 12\n''') == '2'\nassert solution('''2 10\n1 5\n1 4\n''') == '2'\nassert solution('''2 10\n1 5\n4 1\n''') == '2'\nassert solution('''2 10\n1 12\n1 13\n''') == '2'\n"
    },
    {
        "number": 3008,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3008,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 10\\n1 12\\n1 13\\n') == '2'\nassert solution('2 10\\n1 5\\n1 12\\n') == '2'\nassert solution('2 10\\n1 5\\n1 4\\n') == '2'\nassert solution('3 6\\n1 1 5 10\\n1 1 6 9\\n1 2 2 4\\n') == '3'\nassert solution('2 10\\n1 5\\n1 12\\n') == '2'\n"
    },
    {
        "number": 3008,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 10\n1 12\n1 13''') == '2'\nassert solution('''2 10\n1 5\n1 12\n''') == '2'\nassert solution('''2 10\n1 5\n1 4\n''') == '2'\nassert solution('''2 10\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n"
    },
    {
        "number": 3008,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n2 10\n1 12\n1 13\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n2 10\n1 5\n1 12\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n2 10\n1 5\n4 1\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n2 10\n1 5\n4 1\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3009,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5') == '28'\nassert solution('4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\\n99 6 -8\\n') == '36.2842712475'\nassert solution('6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n') == '28.970562748'\nassert solution('8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\\n') == '32'\nassert solution('10\\n1 1 25\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 34\\n9 5 3\\n1 1 1\\n5 1 21\\n9 5 2\\n') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3009,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1 15') == '28'\nassert solution('5 1 100') == '36.2842712475'\nassert solution('9 1 56') == '32'\nassert solution('1 5 1') == '28.970562748'\nassert solution('5 5 33') == '32'\n"
    },
    {
        "number": 3009,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n10 10 5\n10 20 5\n20 10 5\n20 20 5''') == \"28\"\nassert solution('''4\n10 10 5\n10 20 1\n20 10 12\n20 20 8\n''') == \"36.2842712475\"\nassert solution('''6\n1 1 15\n5 1 100\n9 1 56\n1 5 1\n5 5 33\n9 5 3\n''') == \"28.970562748\"\nassert solution('''8\n4 4 1\n4 6 1\n4 8 1\n6 6 14\n8 4 1\n8 6 1\n8 8 1\n99 6 -8\n''') == \"32\"\nassert solution('''2\n1 1 2\n2 2 2\n3 3 3\n4 4 4\n5 5 5\n6 6 6\n7 7 7\n8 8 8\n100 100 100\n''') == \"Impossible\"\n"
    },
    {
        "number": 3009,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\\n') == '28'\nassert solution('4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\\n') == '36.2842712475'\nassert solution('6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n') == '32'\nassert solution('8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\\n') == '32'\nassert solution('8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\\n') == '32'\n"
    },
    {
        "number": 3009,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 3009,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n10 10 5\n10 20 5\n20 10 5\n20 20 5''') == '28'\nassert solution('''4\n10 10 5\n10 20 1\n20 10 12\n20 20 8\n''') == '36.2842712475'\nassert solution('''6\n1 1 15\n5 1 100\n9 1 56\n1 5 1\n5 5 33\n9 5 3\n''') == '32'\n"
    },
    {
        "number": 3009,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\\n\") == '28'\nassert solution(\"4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\\n\") == '36.2842712475'\nassert solution(\"6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n\") == '28.970562748'\nassert solution(\"8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\\n\") == '32'\nprint(\"You are awesome:)\")\n"
    },
    {
        "number": 3009,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n10 10 5\n10 20 5\n20 10 5\n20 20 5''') == '28'\nassert solution('''6\n1 1 15\n5 1 100\n9 1 56\n1 5 1\n5 5 33\n9 5 3''') == '36.2842712475'\nassert solution('''8\n4 4 1\n4 6 1\n4 8 1\n6 6 14\n8 4 1\n8 6 1\n8 8 1\n99 6 -8''') == '32'\nassert solution('''8\n4 4 1\n4 6 1\n4 8 1\n6 6 14\n8 4 1\n8 6 1\n8 8 1\n99 6 -8''') == '32'\nassert solution('''6\n1 1 15\n5 1 100\n9 1 56\n1 5 1\n5 5 33\n9 5 3''') == '28'\n"
    },
    {
        "number": 3009,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n10 10 5\n10 20 5\n20 10 5\n20 20 5''') == '28'\nassert solution('''4\n10 10 5\n10 20 1\n20 10 12\n20 20 8\n''') == '36.2842712475'\nassert solution('''6\n1 1 15\n5 1 100\n9 1 56\n1 5 1\n5 5 33\n9 5 3\n''') == '28.970562748'\nassert solution('''8\n4 4 1\n4 6 1\n4 8 1\n6 6 14\n8 4 1\n8 6 1\n8 8 1\n99 6 -8\n''') == '32'\nassert solution('''8\n10 10 5\n10 20 1\n20 10 12\n20 20 8\n''') == '32'\n"
    },
    {
        "number": 3009,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n') == '32'\nassert solution(\n    '4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\\n') == '32.0'\nassert solution(\n    '1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n') == '28'\nassert solution(\n    '1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n') == '32'\nassert solution(\n    '1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n') == '28'\n"
    },
    {
        "number": 3010,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 3 9 5\n2 2 6 8\n4 8 9 3''') == '3'\nassert solution('''3\n5 2 7 10\n7 4 4 10\n2 4 10 8''') == '1'\nassert solution('''3\n2 1 6 5\n2 5 5 4\n5 1 7 7''') == '1'\nassert solution('''3\n-1 -2 -1 -1\n-1 2 -1 -1\n-1 -2 -1 -1''') == '1'\nassert solution('''3\n-1 -2 -1 -1\n-1 2 -1 -1\n2 2 -1 -1''') == '1'\n"
    },
    {
        "number": 3010,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n3\\n9\\n5') == '3'\nassert solution('2\\n2\\n6\\n8') == '1'\nassert solution('4\\n8\\n9\\3') == '1'\nassert solution('3\\n5\\n7\\n10') == '3'\nassert solution('1\\n1\\n1\\n1') == '-1'\n"
    },
    {
        "number": 3010,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n-1\\n1\\n-1') == '1'\nassert solution('2\\n1\\n1\\n1') == '1'\nassert solution('1\\n2\\n2\\n2') == '2'\nassert solution('1\\n-1\\n1\\n-1') == '1'\nassert solution('1\\n2\\n2\\n2') == '1'\n"
    },
    {
        "number": 3010,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n1 3 9 5\n2 2 6 8\n4 8 9 3''') == '3'\nassert solution('''3\n5 2 7 10\n7 4 4 10\n2 4 10 8''') == '1'\nassert solution('''2\n-1 -2 -1 -1\n-1 2 -1 -1''') == '1'\nassert solution('''3\n2 1 6 5\n2 5 5 4\n5 1 7 7''') == '1'\nassert solution('''4\n2 1 6 5\n2 5 5 4\n5 1 7 7\n4 8 9 3''') == '1'\n"
    },
    {
        "number": 3010,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3\\n') == '3'\nassert solution('3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8\\n') == '1'\nassert solution('3\\n2 1 6 5\\n2 5 5 4\\n5 1 7 7\\n') == '1'\nassert solution('3\\n-1 -2 -1 -1\\n-1 2 -1 -1\\n') == '1'\nassert solution('3\\n-1 -2 -1 -1\\n-1 2 -1 -1\\n') == '1'\n"
    },
    {
        "number": 3010,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '1'\nassert solution(stdin) == '3'\nassert solution(stdin) == '1'\nassert solution(stdin) == '2'\nassert solution(stdin) == '1'\n"
    },
    {
        "number": 3010,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n1 3 9 5\n2 2 6 8\n4 8 9 3''') == \"3\"\nassert solution('''3\n5 2 7 10\n7 4 4 10\n2 4 10 8''') == \"1\"\nassert solution('''3\n2 1 6 5\n2 5 5 4\n5 1 7 7''') == \"1\"\nassert solution('''3\n-1 -2 -1 -1\n-1 2 -1 -1\nSample Output 4:\n1\n''') == \"1\"\nassert solution('''3\n-1 -2 -1 -1\n-1 2 -1 -1\n2 1 6 5\n2 5 5 4\n5 1 7 7''') == \"1\"\n"
    },
    {
        "number": 3010,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n1 2 3 4\\n2 5 6 7\\n5 1 7 7\\n-1 -2 -1 -1') == '1'\nassert solution('3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3\\n-1 -1 -1 -1') == '3'\nassert solution('4\\n2 1 6 5\\n2 5 5 4\\n5 1 7 7\\n-1 -1 -1 -1') == '1'\nassert solution('2\\n-1 -2 -1 -1\\n-1 2 -1 -1\\n-1 -1 -1 -1') == '1'\nassert solution('2\\n1 2 3 4\\n2 5 6 7\\n4 8 9 3') == '3'\n"
    },
    {
        "number": 3010,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\") == \"1\"\nassert solution(\"2\\n1\") == \"1\"\nassert solution(\"1\\n1\") == \"-1\"\nassert solution(\"1\\n1\\n1\") == \"0\"\nassert solution(\"1\\n2\\n1\") == \"0\"\n"
    },
    {
        "number": 3010,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 3 9 5\\n2 2 6 8\\n4 8 9 3\\n') == '3'\nassert solution('2 1 6 5\\n2 5 5 4\\n5 1 7 7\\n') == '1'\nassert solution('-1 -2 -1 -1\\n-1 2 -1 -1\\n') == '1'\nassert solution('-1 2 -1 -1\\n2 2 0 -1\\n') == '1'\nassert solution('-1 2 -1 -1\\n2 2 -1 0\\n') == '1'\n"
    },
    {
        "number": 3011,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == -1\nassert solution('1') == -1\nassert solution('1234') == -1\nassert solution('12') == 1\nassert solution('123421') == 1\n"
    },
    {
        "number": 3011,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"123\") == 1\nassert solution(\"12\") == -1\nassert solution(\"13\") == -1\nassert solution(\"123123\") == -1\nassert solution(\"11111111\") == 1\n"
    },
    {
        "number": 3011,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1222\") == \"\"\nassert solution(\"1223\") == \"123\"\nassert solution(\"122233\") == \"12\"\nassert solution(\"12223\") == \"1222\"\n"
    },
    {
        "number": 3011,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1234\") == \"10\"\nassert solution(\"12345\") == \"-1\"\nassert solution(\"123456789\") == \"0\"\nassert solution(\"123478\") == \"109\"\nassert solution(\"123489\") == \"0\"\n"
    },
    {
        "number": 3011,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708\nprint(\"All set? Click 'Check' to earn cool rewards!\")\n\"\"\"\n"
    },
    {
        "number": 3011,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1234321\") == \"94708\"\nassert solution(\"55\") == \"55\"\nassert solution(\"101\") == \"-1\"\nassert solution(\"\") == \"-1\"\nassert solution(\"123456789\") == \"-1\"\n"
    },
    {
        "number": 3011,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10') == '10'\nassert solution('55') == '55'\nassert solution('101') == '-1'\nassert solution('1234321') == '94708'\nassert solution('9999955') == '9599784'\n"
    },
    {
        "number": 3011,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == '-1'\nassert solution('10') == '10'\nassert solution('55') == '55'\nassert solution('101') == '-1'\nassert solution('1234321') == '94708'\nprint('Passed')\n"
    },
    {
        "number": 3011,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1234') == '10'\nassert solution('12223') == '12223'\nassert solution('33322111') == '-1'\nassert solution('1223') == '-1'\nassert solution('123432') == '-1'\n"
    },
    {
        "number": 3011,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10') == '10'\nassert solution('102233222') == '12223'\nassert solution('33322111') == '33333333'\nassert solution('1232321') == '-1'\nassert solution('12223') == '12223'\n"
    },
    {
        "number": 3012,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 0 0 3') == '6'\nassert solution('1 2 0 0 4') == '2'\nassert solution('1 2 0 0 5') == '6'\nassert solution('1 2 0 0 6') == '0'\nassert solution('1 2 0 0 7') == '0'\n"
    },
    {
        "number": 3012,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 0 0 0 3\") == \"6\"\nassert solution(\"1 2 0 0 5\") == \"2\"\nassert solution(\"1 2 0 0 4\") == \"4\"\nassert solution(\"1 2 0 0 6\") == \"0\""
    },
    {
        "number": 3012,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 0 0 0 3''') == '6'\nassert solution('''1 2 0 0 5''') == '2'\nassert solution('''1 2 0 0 4''') == '4'\nassert solution('''1 2 0 0 6''') == '0''''\n"
    },
    {
        "number": 3012,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 0 0 0 3') == '6'\nassert solution('1 2 0 0 5') == '2'\nassert solution('1 2 0 0 4') == '4'\nassert solution('1 2 0 0 6') == '0'\nassert solution('1 2 0 0 2') == '8'\n"
    },
    {
        "number": 3012,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 0 0 0 3''') == '6'\nassert solution('''1 2 0 0 5''') == '2'\nassert solution('''1 2 0 0 4''') == '4'\nassert solution('''1 2 0 0 6''') == '0'\nassert solution('''1 2 0 0 2''') == '0'\n"
    },
    {
        "number": 3012,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 0\nassert solution('1 2 0 0 5') == 6\nassert solution('1 2 0 0 4') == 2\nassert solution('1 2 0 0 6') == 0\nassert solution('1 2 0 0 3') == 4\n"
    },
    {
        "number": 3012,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''3 0 0 0 3'''\n) == '6'\n\nassert solution(\n'''1 2 0 0 5'''\n) == '2'\n\nassert solution(\n'''1 2 0 0 4'''\n) == '4'\n\nassert solution(\n'''1 2 0 0 6'''\n) == '0'\n\nassert solution(\n'''1 2 0 0 4\n'''\n) == '0'"
    },
    {
        "number": 3012,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nimport sys\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 3012,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 0 0 0 3\\n') == '6'\nassert solution('1 2 0 0 5\\n') == '2'\nassert solution('1 2 0 0 4\\n') == '4'\nassert solution('1 2 0 0 6\\n') == '0'\nassert solution('1 2 0 0 10\\n') == '0'\n"
    },
    {
        "number": 3012,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3013,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3013,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0.5 -5.301 3.098\n0.5 8 8''') == '-1.26167861 3.88425357'\nassert solution('''0.5 -8 8''') == '9.21068947 2.56226688'\nassert solution('''1 8 8''') == '6.22375968 -0.31921472'\nassert solution('''0.5 -8 8''') == '-4.36385220 9.46891588'\nassert solution('''0.01 -8 8''') == '-8.40390844 3.48018848'\n"
    },
    {
        "number": 3013,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''-4.36385220 9.46891588''') == '-1.26167861 3.88425357'\nassert solution('''0.5 -8 8''') == '9.21068947 2.56226688'\nassert solution('''0.5 -8 8''') == '9.21068947 2.56226688'\nassert solution('''0.5 -8 8''') == '9.21068947 2.56226688'\nassert solution('''0.5 -8 8''') == '9.21068947 2.56226688'\n"
    },
    {
        "number": 3013,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"0.5 -5.301 3.098\"\n) == \"-1.26167861 3.88425357\"\nassert solution(\n\"0.5 8 8\"\n) == \"9.21068947 2.56226688\"\nassert solution(\n\"0.5 -8 8\"\n) == \"-4.36385220 9.46891588\"\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 3013,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''0.5 -5.301 3.098\n0.5 8 8\n0.5 -8 8\n0.5 -8 8''') == '-1.26167861 3.88425357\\n'\nassert solution('''0.5 -8 8\n0.5 -8 8\n0.5 -8 8''') == '9.21068947 2.56226688\\n'\nassert solution('''0.5 -8 8\n0.5 -8 8\n0.5 -8 8\n0.5 -8 8''') == '6.22375968 -0.31921472\\n'\nassert solution('''0.5 -8 8\n0.5 -8 8\n0.5 -8 8\n0.5 -8 8\n0.5 -8 8\n0.5 -8 8\n0.5 -8 8\n0.5 -8 8\n0.5 -8 8''') == '-5.26691648 2.82293805\\n'\nassert solution('''0.5 -8 8\n0.5 -8 8\n0.5 -8 8\n0.5 -8 8\n0.5 -8 8\n0.5 -8 8\n0.5 -8 8\n0.5 -8 8\n0.5 -8 8\n0.5 -8 8''') == '9.21068947 2.56226688\\n'\n"
    },
    {
        "number": 3013,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3013,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3013,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'\nassert solution('0.5 -8 8') == '-4.36385220 9.46891588'\nprint(solution(''))\n"
    },
    {
        "number": 3013,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\"\nassert solution(\"0.5 -8 8\") == \"-4.36385220 9.46891588\"\nassert solution(\"0.5 -8 8\") == \"-4.36385220 9.46891588\"\n"
    },
    {
        "number": 3013,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'\nassert solution('0.5 -8 8') == '-4.36385220 9.46891588'\n\n\"\"\"\n\n\"\"\"\n---------------------\n---  Answer  ---\n---------------------\n\n0.5 -5.301 3.098\n0.5 8 8\n0.5 -8 8\n-1.26167861 3.88425357\n9.21068947 2.56226688\n\n0.5 -8 8\n-4.36385220 9.46891588\n\n\"\"\""
    },
    {
        "number": 3014,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\") == \"1\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\") == \"1\"\nassert solution(\"4 5\\n1 2\\n2 3\\n2 4\\n3 4\\n4 1\") == \"2\"\nassert solution(\"4 5\\n1 2\\n3 4\\n3 1\\n4 1\") == \"2\"\nassert solution(\"4 5\\n1 2\\n3 4\\n4 1\") == \"2\"\n"
    },
    {
        "number": 3014,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 2\n1 2\n2 1''') == '1'\nassert solution('''3 3\n1 2\n2 3\n3 1''') == '0'\nassert solution('''4 5\n1 2\n2 3\n2 4\n3 1\n4 1''') == '2'\n"
    },
    {
        "number": 3014,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\") == \"1\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\") == \"0\"\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n4 1\") == \"1\"\n"
    },
    {
        "number": 3014,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3014,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2\\n1 2\\n2 1') == '1'\nassert solution('3 3\\n1 2\\n2 3\\n3 1') == '1'\nassert solution('4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4') == '0'\nassert solution('4 5\\n1 2\\n2 3\\n3 4\\n4 1') == '2'\nassert solution('4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n4 1\\n1 4') == '2'\n"
    },
    {
        "number": 3014,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == solution(stdin)\n"
    },
    {
        "number": 3014,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''2 2\n1 2\n2 1''') == '1'\n\nassert solution(\n'''3 3\n1 2\n2 3\n3 1''') == '0'\n\nassert solution(\n'''4 5\n1 2\n2 3\n2 4\n3 1\n4 1\n''') == '2'\n"
    },
    {
        "number": 3014,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 2\") == \"\"\nassert solution(\"3 3\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 1\") == \"\"\n"
    },
    {
        "number": 3014,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == solution(stdin) # pass this to test the code\n"
    },
    {
        "number": 3014,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 2\n1 2\n2 1''') == '0'\nassert solution('''3 3\n1 2\n2 3\n3 1''') == '1'\nassert solution('''4 5\n1 2\n2 3\n2 4\n3 1\n4 1''') == '2'\nassert solution('''8 9\n1 2\n1 3\n3 2\n2 4\n4 5\n5 6\n6 7\n7 8''') == '4'\nassert solution('''10 10\n1 2\n1 3\n3 2\n2 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10''') == '5'\n"
    },
    {
        "number": 3015,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\n2 3 5\\n0 4 1\\n1 5 1\\n0 2 1\\n0 3 1\\n0 4 1\\n0 5 1\\n0 4 1') == '11'\nassert solution('4 5 0 3\\n0 1 1\\n1 2 1\\n2 0 1\\n2 3 1\\n2 3 3\\n2 3 5\\n0 4 1\\n1 5 1\\n0 2 1\\n0 3 1\\n0 4 1\\n0 5 1\\n0 4 1') == 'infinity'\nassert solution('1 1 1 1\\n1 2 1\\n2 3 1\\n0 0 1\\n0 1 1\\n0 2 1\\n0 3 1\\n0 4 1\\n0 5 1\\n0 4 1\\n0 5 1\\n0 4 1') == '2'\nassert solution('3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n2 0 1\\n2 3 1\\n0 3 1\\n2 4 1\\n2 3 1\\n2 3 1\\n0 3 1\\n2 4 1\\n0 3 1\\n2 4 1\\n0 3 1\\n2 4 1\\n2 3 1\\n0 3 1\\n0 3 1\\n0 3 1') == 'infinity'\nassert solution('3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n2 0 1\\n2 3 1\\n0 3 1\\n2 4 1\\n2 3 1\\n2 3 1\\n0 3 1\\n2 4 1\\n0 3 1\\n2 4 1\\n2 3 1\\n0 3 1\\n0 3 1\\n0 3 1') == 'infinity'\n"
    },
    {
        "number": 3015,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 5 0 3\n0 1 1\n1 2 2\n2 0 4\n2 3 1\n2 3 3\n''') == '11'\nassert solution('''5 5 0 4\n0 1 1\n1 2 1\n2 3 1\n3 0 1\n2 4 1\n''') == 'infinity'\nassert solution('''2 1 0 1\n0 1 2\nSample Output 4:\ninfinity\n''') == 'infinity'\nassert solution('''3 3 1 2\n0 1 1\n1 0 1\n1 2 1\nSample Output 4:\ninfinity\n''') == 'infinity'\nassert solution('''1 2 0\n0 1 1\n1 0 1\n1 2 1\nSample Output 4:\ninfinity\n''') == 'infinity'\n"
    },
    {
        "number": 3015,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 5 0 3\n0 1 1\n1 2 2\n2 0 4\n2 3 1\n2 3 3''') == '11'\nassert solution('''5 5 0 4\n0 1 1\n1 0 1\n1 2 1\n2 3 1\n3 0 1\n2 4 1''') == 'infinity'\nassert solution('''2 1 0 1\n0 1 2\nSample Output 3:\ninfinity\n\nSample Input 4:\n3 3 1 2\n0 1 1\n1 0 1\n1 2 1\nSample Output 4:\n2\n\nassert solution('''3 3 1 2\n0 1 1\n1 0 1\n1 2 1''') == '2'\n'''"
    },
    {
        "number": 3015,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3') == '11'\nassert solution('5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1') == 'infinity'\nassert solution('2 1 0 1\\n0 1 2\\n') == '2'\nassert solution('3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n') == 'infinity'\n"
    },
    {
        "number": 3015,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\n2 3 3') == '11'\nassert solution('5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n') == 'infinity'\nassert solution('1 2 3\\n2 1 3') == 'infinity'\nassert solution('1 2 3\\n2 1 3\\n3 0 3\\n3 1 1') == 'infinity'\nassert solution('2 3 1\\n0 1 2\\n2 0 4') == 'infinity'\n"
    },
    {
        "number": 3015,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\n\") == \"11\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n\") == \"infinity\"\nassert solution(\"2 1 0 1\\n0 1 2\\n\") == \"2\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n\") == \"infinity\"\nassert solution(\"3 4 2 1\\n0 1 1\\n1 0 1\\n1 2 1\\n\") == \"infinity\"\n"
    },
    {
        "number": 3015,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 5 0 3\n0 1 1\n1 2 2\n2 0 4\n2 3 1\n2 3 3\n''') == '11'\nassert solution('''5 5 0 4\n0 1 1\n1 2 1\n2 3 1\n3 0 1\n2 4 1\n''') == 'infinity'\nassert solution('''2 1 0 1\n0 1 2\n''') == '2'\nassert solution('''3 3 1 2\n0 1 1\n1 0 1\n1 2 1\nSample Output 4:\ninfinity\n''') == 'infinity'\nassert solution('''1 1 0\n0 1 1\n1 0 1\n1 2 1\n''') == 'infinity'\n"
    },
    {
        "number": 3015,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3 0 1\\n0 1 2\\n1 0 1\\n1 2 1') == 'infinity'\nassert solution('3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n2 3 1') == '2'\nassert solution('3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n2 3 1\\n3 0 1') == 'infinity'\nassert solution('5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1') == 'infinity'\nassert solution('5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n2 4 1') == 'infinity'\n"
    },
    {
        "number": 3015,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 5 0 3\n0 1 1\n1 2 2\n2 0 4\n2 3 1\n2 3 3''') == '11'\nassert solution('''5 5 0 4\n0 1 1\n1 2 1\n2 3 1\n3 0 1\n2 4 1\n''') == 'infinity'\nassert solution('''2 1 0 1\n0 1 2\n''') == '2'\nassert solution('''3 3 1 2\n0 1 1\n1 0 1\n1 2 1\n''') == 'infinity'\nassert solution('''5 5 0 4\n0 1 1\n1 0 1\n1 2 1\n2 3 1\n3 0 1\n2 4 1\n''') == 'infinity'\n"
    },
    {
        "number": 3015,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 1 0 1\\n0 1 2\\n\") == \"2\"\nassert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\") == \"11\"\nassert solution(\"2 1 0 1\\n0 1 2\\n\") == \"infinity\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n\") == \"infinity\"\nassert solution(\"4 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n\") == \"infinity\"\n"
    },
    {
        "number": 3016,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == \"6\"\n\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 3016,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3016,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"12\"\n"
    },
    {
        "number": 3016,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3016,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 2 1 2 1\") == \"6\"\nassert solution(\"3 3 1 1\") == \"0\"\nassert solution(\"3 2 2 3\") == \"18\"\nassert solution(\"3 1 2 3\") == \"12\"\nassert solution(\"4 2 1 2 1\") == \"6\"\n"
    },
    {
        "number": 3016,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 2 1 2 1\n2 1 2\n2 3 4\n''') == '6'\nassert solution('''3 3 1 1\n1 1\n2 2 3\n''') == '0'\nassert solution('''3 2 2 3\n1 1\n2 2 3\n''') == '18'\nassert solution('''3 1 2 3\n2 1 2\n0\n''') == '12'\nassert solution('''3 1 2 3\n1 1\n2 2 3\n''') == '18'\n"
    },
    {
        "number": 3016,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''2 2 1 2 1'''\n    ) == '6'\nassert solution(\n'''3 3 1 1'''\n    ) == '0'\nassert solution(\n'''3 2 2 3'''\n    ) == '12'\nassert solution(\n'''3 1 2 3'''\n    ) == '18'\nassert solution(\n'''4 5 2 3 4 4'''\n    ) == '0'\n"
    },
    {
        "number": 3016,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 2 1 2 1\n2 1 2\n2 3 4\n''') == '6'\n\nassert solution('''3 3 1 1\n1 1\n2 2 3\n''') == '0'\n\nassert solution('''3 2 2 3\n1 1\n2 2 3\n''') == '12'\n\nassert solution('''6 3 1 1 1 1\n1 1\n2 2 3\nSample Output 3:\n18\n''') == '18'\n\nassert solution('''6 3 1 1 1 1\n1 1\n2 2 3\n''') == '0'"
    },
    {
        "number": 3016,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3016,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3017,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"9000000000000000000 62\") == \"1\"\nassert solution(\"1000000 1\") == \"468559\"\nassert solution(\"1000000 5\") == \"49401\"\nassert solution(\"1000000 16\") == \"20\"\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 3017,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 3017,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') is None\nassert solution('1 0') == ''\nassert solution('2 0') == ''\nassert solution('2 1') == ''\nassert solution('3 0') == ''\n"
    },
    {
        "number": 3017,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n"
    },
    {
        "number": 3017,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3017,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('12560 1') == '468559'\nassert solution('1000000 1') == '468559'\nassert solution('1000000 5') == '49401'\nassert solution('1000000 16') == '20'\nassert solution('9000000000000000000 62') == '1'\n"
    },
    {
        "number": 3017,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3017,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1000000 1''') == '468559'\nassert solution('''1000000 5''') == '49401'\nassert solution('''1000000 16''') == '20'\nassert solution('''9000000000000000000 62''') == '1'\n'''\n"
    },
    {
        "number": 3017,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1000000 1\") == \"468559\"\nassert solution(\"1000000 5\") == \"49401\"\nassert solution(\"1000000 16\") == \"20\"\nassert solution(\"9000000000000000000 62\") == \"1\"\nprint(\"Tests passed successfully\")\n"
    },
    {
        "number": 3017,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1000000 1\") == \"468559\"\nassert solution(\"1000000 5\") == \"49401\"\nassert solution(\"1000000 16\") == \"20\"\nassert solution(\"9000000000000000000 62\") == \"1\"\nassert solution(\"1000000 101011111010101001\") == \"4\"\n"
    },
    {
        "number": 3018,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 3018,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n3\") == \"1\\n1\\n\"\nassert solution(\"3\\n9\") == \"1\\n1\\n\"\nassert solution(\"3\\n9\") == \"1\\n1\\n\"\nassert solution(\"3\\n9\") == \"1\\n1\\n\"\nassert solution(\"3\\n9\") == \"1\\n1\\n\"\n"
    },
    {
        "number": 3018,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4 5 6\\n1 2 3 4 5 6') == '3'\nassert solution('3 9\\n5 4 1\\n') == '1'\nassert solution('3 8\\n4 4 4 4\\n') == '3'\nassert solution('3 10\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\\n') == '2'\nassert solution('5 25\\n5 2 4 4 4 1 4 1\\n') == '2'\n"
    },
    {
        "number": 3018,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4 5 6') == '1'\nassert solution('2 2 2 2') == '3'\nassert solution('18 90') == '12'\nassert solution('2 2 2 2') == '3'\nassert solution('18 90') == '12'\n"
    },
    {
        "number": 3018,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 9\n5 4 1\n''') == '1'\nassert solution('''4 13\n2 2 2 2\n''') == '3'\nassert solution('''18 90\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\n''') == '12'\nassert solution('''16 28\n7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7\n''') == '12'\n"
    },
    {
        "number": 3018,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 9\\n5 4 1\\n') == '1'\nassert solution('4 13\\n2 2 2 2\\n') == '3'\nassert solution('18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\\n') == '12'\n"
    },
    {
        "number": 3018,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n3\\n5\\n9') == '1'\nassert solution('2\\n9\\n18\\n9') == '3'\nassert solution('1\\n18\\n18\\n18\\n18') == '18'\nassert solution('2\\n6\\n18\\n18\\n6') == '6'\nassert solution('3\\n6\\n9\\n18\\n18\\n6') == '6'\n"
    },
    {
        "number": 3018,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 9\\n5 4 1\") == \"1\"\nassert solution(\"4 13\\n2 2 2 2\") == \"3\"\nassert solution(\"18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\") == \"12\"\nassert solution(\"4 8\\n1 1 1 1 1\") == \"2\"\nassert solution(\"5 8\\n1 1 1 1 1 1\") == \"1\"\n"
    },
    {
        "number": 3018,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n1 2 3 4 5\") == '1'\nassert solution(\"5 6\\n2 3 4 5 1\") == '1'\nassert solution(\"5 6\\n1 1 3 3 4 4\") == '2'\nassert solution(\"5 6\\n1 1 1 3 3 4\") == '2'\nassert solution(\"5 6\\n1 2 3 4 5\") == '1'\n"
    },
    {
        "number": 3018,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 3\n1 2 3\n''') == '1'\nassert solution('''5 9\n5 4 1\n''') == '1'\nassert solution('''18 90\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\n''') == '12'\nassert solution('''3 17\n3 3 3\n''') == '1'\nassert solution('''6 10\n2 2 2 2 2 2 2\n''') == '4'\n"
    },
    {
        "number": 3019,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3019,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == '0'\nassert solution('3') == '3'\nassert solution('5') == '5'\nassert solution('4 7 8') == '3'\nassert solution('2 3 4 5 8') == '5'\n"
    },
    {
        "number": 3019,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1\n1\n''') == '0'\nassert solution('''3\n4 7 8\n''') == '3'\nassert solution('''5\n2 3 4 5 8\n''') == '5'\n"
    },
    {
        "number": 3019,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\") == '0'\nassert solution(\"2\\n3 4 5 6\\n\") == '3'\nassert solution(\"3\\n4 7 8\\n\") == '3'\nassert solution(\"3\\n4 7 8\\n\") == '3'\nassert solution(\"2\\n1\\n\") == '0'\n"
    },
    {
        "number": 3019,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n1 2') == '3'\nassert solution('3\\n4 7 8') == '5'\nassert solution('5\\n2 3 4 5 8') == '5'\nassert solution('6\\n4 6 8 10') == '5'\n"
    },
    {
        "number": 3019,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"5\""
    },
    {
        "number": 3019,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n1\n1\n''') == '0'\nassert solution('''\n2\n4 4\n''') == '0'\nassert solution('''\n3\n1 2 3\n''') == '6'\nassert solution('''\n4\n1 1 2 3\n''') == '1'\nassert solution('''\n5\n5 5 5 5 5\n''') == '1'\n"
    },
    {
        "number": 3019,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') is None\nassert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\n"
    },
    {
        "number": 3019,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\nassert solution(\"5\") == \"\"\n"
    },
    {
        "number": 3019,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1''') == 0\nassert solution('''1\n2''') == 0\nassert solution('''3\n4 7 8''') == 3\nassert solution('''5\n2 3 4 5 8''') == 5\nassert solution('''1000''') == 5\n"
    },
    {
        "number": 3020,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == str(solution(input()))\nassert solution(input()) == str(solution(input()))\nassert solution(input()) == str(solution(input()))\nassert solution(input()) == str(solution(input()))\nassert solution(input()) == str(solution(input()))\n"
    },
    {
        "number": 3020,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3020,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6') == '4'\nassert solution('9') == '-1'\nassert solution('1234') == '17'\nassert solution('12346544') == '11112'\n\"\"\"\n"
    },
    {
        "number": 3020,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6') == '4'\nassert solution('149') == '17'\nassert solution('123476544') == '11112'\n"
    },
    {
        "number": 3020,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == -1\nassert solution('1') == -1\nassert solution('12') == -1\nassert solution('1234') == -1\nassert solution('123456789') == -1\n"
    },
    {
        "number": 3020,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6') == '4'\nassert solution('149') == '17'\nassert solution('123476544') == '11112'\nprint(\"Tests passed\")"
    },
    {
        "number": 3020,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == '-1'\nassert solution('99') == '17'\nassert solution('999') == '111'\nassert solution('101') == '1'\nassert solution('1234') == '1234'\n"
    },
    {
        "number": 3020,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('6') == '4'\nassert solution('1234') == '-1'\nassert solution('1112') == '17'\nassert solution('1234') == '11112'\n"
    },
    {
        "number": 3020,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"6\") == 4\nassert solution(\"149\") == 17\nassert solution(\"123476544\") == 11112\nassert solution(\"0\") == -1\nassert solution(\"-1\") == -1\n"
    },
    {
        "number": 3020,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(6) == 4\nassert solution(149) == 17\nassert solution(123476544) == 11112\nprint(solution(int(input())))\n"
    },
    {
        "number": 3021,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 'IMPOSSIBLE'\nassert solution('a') == 'a'\nassert solution('cab') == 'adcb'\nassert solution('cba') == 'abc'\nassert solution('cdacb') == 'adcb'\n"
    },
    {
        "number": 3021,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\ccc\\badca\\n\") == \"adcb\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\\n\") == \"IMPOSSIBLE\"\nassert solution(\"f 2\\ndea\\cfb\\n\") == \"AMBIGUOUS\"\nassert solution(\"a 4\\nacb\\nada\\n\") == \"IMPOSSIBLE\"\nassert solution(\"b 4\\ncaa\\nabc\\n\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3021,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abc') == 'adcb'\nassert solution('badca') == 'IMPOSSIBLE'\nassert solution('dea') == 'AMBIGUOUS'\nassert solution('ccc') == 'adcb'\nassert solution('ccc') == 'adcb'\n"
    },
    {
        "number": 3021,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('d 4\\ncab\\ncda\\ccc\\badca\\n') == 'adcb\\n'\nassert solution('c 4\\ncab\\n') == 'IMPOSSIBLE'\nassert solution('c 4\\nccc\\nbadca\\n') == 'IMPOSSIBLE'\nassert solution('c 4\\nabc\\n') == 'AMBIGUOUS'\nassert solution('c 4\\nbca\\n') == 'AMBIGUOUS'\n"
    },
    {
        "number": 3021,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"d 3\\ncab\\ncda\\nccc\\nbadca\\n\") == \"adcb\"\nassert solution(\"c 4\\ncab\\ncda\\nccc\\nbadca\\n\") == \"IMPOSSIBLE\"\nassert solution(\"c 4\\ncab\\ncda\\nccc\\nbadca\\n\") == \"AMBIGUOUS\"\nassert solution(\"f 2\\ndea\\ncfb\\n\") == \"AMBIGUOUS\"\nassert solution(\"f 2\\ndea\\ncfb\\n\") == \"AMBIGUOUS\"\n"
    },
    {
        "number": 3021,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"d 4\ncab\ncda\nccc\nbadca\n\"\"\") == \"adcb\"\n\nassert solution(\n    \"\"\"f 2\ndea\ncfb\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"c 4\nabc\nbca\ncab\naca\n\"\"\") == \"AMBIGUOUS\"\n\nassert solution(\n    \"\"\"b 4\na b\nb a\nc a\na c\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"z 2\nabz\nbaa\nazb\nbaz\nbzb\nbza\naab\nbza\naab\nbba\naaz\naaz\nbaa\naab\naab\n\"\"\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3021,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3021,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"adcb\"\n\"\"\"\n\nn, d = [int(x) for x in stdin.split()]\nm = {}\nfor i in range(n):\n    word = stdin.readline().strip()\n    k = sorted(word)\n    if k in m:\n        m[k].append(word)\n    else:\n        m[k] = [word]\n\np = []\nfor i in m:\n    p.append(sorted(i))\n\nfor j in p:\n    if j not in m:\n        print(\"IMPOSSIBLE\")\n        break\nelse:\n    print(\"AMBIGUOUS\")\n"
    },
    {
        "number": 3021,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''a b\na c\nb c''') == 'adc'\nassert solution('''a b\na c\nb c''') == 'IMPOSSIBLE'\nassert solution('''a b\nb c\na c''') == 'AMBIGUOUS'\nassert solution('''a b\na c\nb c''') == 'IMPOSSIBLE'\nassert solution('''a b\na c\nb c''') == 'AMBIGUOUS'\n"
    },
    {
        "number": 3021,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('d 4\\ncab\\ncda\\ccc\\badca\\n') == 'adcb\\n'\nassert solution('c 4\\ncab\\ncda\\ccc\\badca\\n') == 'IMPOSSIBLE\\n'\nassert solution('f 2\\ndea\\cfb\\n') == 'AMBIGUOUS\\n'\nassert solution('a 2\\nab\\nac\\nad\\n') == 'IMPOSSIBLE\\n'\nassert solution('a 2\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\"
    },
    {
        "number": 3022,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3 3 3''') == '9'\nassert solution('''10 20 0 0''') == '10'\nassert solution('''100 20 543 12''') == '164'\nassert solution('''1000 10 0 0''') == '100'\nassert solution('''10000 100 10 30''') == '100000'\n"
    },
    {
        "number": 3022,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3022,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 3 3 3\n''') == '9'\nassert solution('''10 20 0 0\n''') == '10'\nassert solution('''100 20 543 12\n''') == '164'\n\nprint('Passes tests')\n"
    },
    {
        "number": 3022,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 3 3 3\") == \"9\"\nassert solution(\"10 20 0 0\") == \"10\"\nassert solution(\"100 20 543 12\") == \"164\"\nprint(solution(stdin))\n"
    },
    {
        "number": 3022,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 3 3 3\") == \"9\"\nassert solution(\"10 20 0 0\") == \"10\"\nassert solution(\"100 20 0 0\") == \"10\"\nassert solution(\"100000000 9 8 7 7\") == \"4\"\nassert solution(\"100000000 9 8 7 7\") == \"10\"\n"
    },
    {
        "number": 3022,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4\") == \"1\"\nassert solution(\"1 2 2 2\") == \"1\"\nassert solution(\"1 1 1 1\") == \"4\"\nassert solution(\"1 1 1 1 1 1 1\") == \"4\"\nassert solution(\"2 3 3 3\") == \"4\"\n"
    },
    {
        "number": 3022,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3022,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 3 3 3\") == \"9\"\nassert solution(\"10 20 0 0\") == \"10\"\nassert solution(\"100 20 543 12\") == \"164\"\nassert solution(\"9 5 6 3\") == \"1\"\nassert solution(\"5 2 3 4\") == \"0\"\n"
    },
    {
        "number": 3022,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 3 3 3''') == '9'\nassert solution('''10 20 0 0''') == '10'\nassert solution('''100 20 543 12''') == '164'\nassert solution('''10 5 0 0''') == '10'\nassert solution('''0 0 0 0''') == '0'\n"
    },
    {
        "number": 3022,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 3 3 3\") == \"9\"\nassert solution(\"10 20 0 0\") == \"10\"\nassert solution(\"100 20 543 12\") == \"164\"\nassert solution(\"100 10 0 0\") == \"0\"\nassert solution(\"100 10 0 0\") == \"0\"\n"
    },
    {
        "number": 3023,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n-1 -1 0\\n0 -1 0\\n-1 -1 -2\\n-1 -1 2\\n0 -1 0') == 'yes'\nassert solution('3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12') == 'no'\nassert solution('3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\\n0 1\\n1 0\\n-1 0\\n-1 1 0\\n-1 -1 0\\n0 -1 0\\n-1 -1 -2\\n-1 -1 2\\n0 -1 0') == 'yes'"
    },
    {
        "number": 3023,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3023,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 3 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n-1 -1 2\\n-1 -1 2\\n0 -1 0\\n') == 'yes'\nassert solution('3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\\n') == 'yes'\nassert solution('3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\\n') == 'no'\nassert solution('3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\\n') == 'yes'\nassert solution('3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\\n') == 'no'\n"
    },
    {
        "number": 3023,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 3 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\\n') == 'yes'\nassert solution('3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\\n') == 'no'\n\nprint(solution('4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\\n'))\nprint(solution('3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\\n'))\n\nassert solution('4 3 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\\n') == 'yes'\nassert solution('3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\\n') == 'no'\nprint(solution('4 3 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\\n'))\nprint(solution('3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\\n'))\n\nassert solution('4 3 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\\n') == 'yes'\n"
    },
    {
        "number": 3023,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"5 1 2\n0 1\n1 0\n-1 0\n0 -1\n-1 1 -2\n-1 -1 2\"\"\") == \"yes\"\nassert solution(\"\"\"3 2 3\n2 1\n0 0\n-1 -2\n1 1 -2\n3 6 12\nSample Output 3:\nyes\"\"\") == \"no\"\nassert solution(\"\"\"1 1 2\n0 0\n1 1 -2\n-1 -1 2\n0 -1 0\n-1 1 -2\n-1 -1 2\n0 -1 0\n1 1 -2\n-1 -1 2\n3 6 12\nSample Output 3:\nno\"\"\") == \"yes\"\nassert solution(\"\"\"4 1 2\n0 1\n1 0\n-1 0\n0 -1\n-1 1 -2\n-1 -1 2\n0 -1 0\n1 1 -2\n-1 -1 2\n3 6 12\nSample Output 3:\nno\"\"\") == \"yes\"\nassert solution(\"\"\"6 1 2\n0 1\n1 0\n-1 0\n0 -1\n-1 1 -2\n-1 -1 2\n0 -1 0\n1 1 -2\n-1 -1 2\n3 6 12\nSample Output 3:\nno\"\"\") == \"yes\"\n"
    },
    {
        "number": 3023,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n-1 -1 0\\n0 -1 0\\n-1 -1 -2\\n-1 -1 2\\n0 -1 0\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\\n-1 -1 0\\n0 -1 0\\n-1 -1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\\n0 -1\\n-1 -1 -2\\n-1 -1 2\\n0 -1 0\\n-1 -1 0\\n0 -1 0\\n-1 -1 -2\\n-1 -1 2\\n0 -1 0\") == \"yes\"\n"
    },
    {
        "number": 3023,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3 3') == 'yes'\nassert solution('3 2 3') == 'no'\nassert solution('5 2 3') == 'no'\nassert solution('4 3 3') == 'yes'\nassert solution('2 3 3') == 'no'\n"
    },
    {
        "number": 3023,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 2 3\n0 1\n1 0\n-1 0\n0 -1\n-1 1 -2\n-1 -1 2\n0 -1 0\n''') == 'yes'\nassert solution('''4 2 3\n0 1\n1 0\n-1 0\n0 -1\n-1 1 -2\n-1 -1 2\n0 -1 0\n''') == 'no'\nassert solution('''4 2 3\n0 1\n1 0\n-1 0\n0 -1\n-1 1 -2\n-1 -1 2\n1 1 -2\n0 -1 0\n''') == 'no'\nassert solution('''5 2 1\n2 1\n0 0\n-1 -2\n1 1 -2\n3 6 12\n1 0\n2 1\n0 -1\n2 1\n-1 0\n0 -1 0\n-1 1 -2\n-1 -1 2\n0 -1 0\n''') == 'yes'\nassert solution('''3 2 3\n1 0\n0 0\n-1 -2\n1 1 -2\n3 6 12\n1 0\n2 1\n0 -1\n2 1\n-1 0\n0 -1 0\n-1 1 -2\n-1 -1 2\n0 -1 0\n''') == 'no'\n"
    },
    {
        "number": 3023,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin[:-1]\n"
    },
    {
        "number": 3023,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n4 2 3\n0 1\n1 0\n-1 0\n0 -1\n-1 1 0\n2 1 0\n''') == 'yes'\nassert solution(\n'''\n3 2 3\n2 1\n0 0\n-1 -2\n1 1 -2\n3 6 12\n''') == 'no'\n"
    },
    {
        "number": 3024,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('652526') == '4'\nassert solution('12121131221') == '7'\nassert solution('123456789') == '1'"
    },
    {
        "number": 3024,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('652526') == '4'\nassert solution('12121131221') == '7'\nassert solution('123456789') == '1'\nprint(\"all tests passed\")\n"
    },
    {
        "number": 3024,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('652526') == '4'\nassert solution('12121131221') == '7'\nassert solution('123456789') == '1'\nprint('Test cases passed.')\n"
    },
    {
        "number": 3024,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('652526') == '4'\nassert solution('12121131221') == '7'\nassert solution('123456789') == '1'\nassert solution('99999999999999') == '12'\nassert solution('123456789') == '1'\n"
    },
    {
        "number": 3024,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') is None\nassert solution('123456789') == 1\nassert solution('12345') == 1\nassert solution('1111222222') == 4\nassert solution('1234567890123456789012345678901234567890123456789012345678901234567890') == 7\n"
    },
    {
        "number": 3024,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('652526') == '4'\nassert solution('12121131221') == '7'\nassert solution('123456789') == '1'\n"
    },
    {
        "number": 3024,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('652526') == '4'\nassert solution('12121131221') == '7'\nassert solution('123456789') == '1'\nprint('Testcases passed')\n"
    },
    {
        "number": 3024,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"12121131221\") == \"7\"\nassert solution(\"652526\") == \"4\"\nassert solution(\"123456789\") == \"1\"\nassert solution
    },
    {
        "number": 3024,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('123456789') == '1'\nassert solution('12121131221') == '7'\nassert solution('652526') == '4'\nprint(\"All set? Click 'Check' to earn cool rewards!\")\n"
    },
    {
        "number": 3024,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\"\n"
    },
    {
        "number": 3025,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n1\n1 2\n2 3\n1 3\n''') == '0'\nassert solution('''3 3\n1\n1 2\n2 3\n1 3\n1 3\n1 3\n2 3\n1 3\n''') == '0'\nassert solution('''4 4\n24 10\n1 3\n2 3\n2 4\n1 4\n''') == '24'\nassert solution('''5 5\n100 500 300 75\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6\n''') == '800'\nassert solution('''7 7\n2000 4000 6000 7000 2000\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6\n4 7\n1 7\n''') == '2000'\n"
    },
    {
        "number": 3025,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2') == '0'\nassert solution('4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4') == '24'\nassert solution('3\\n3') == '0'\nassert solution('6\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6') == '800'\nassert solution('1\\n1') == '0'\n"
    },
    {
        "number": 3025,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''3 3\n1\n1 2\n2 3\n1 3\n''') == '0'\nassert solution(\n'''3 3\n1\n1 2\n2 3\n1 3\n''') == '0'\nassert solution(\n'''4 4\n24 10\n1 3\n2 3\n2 4\n1 4\n''') == '24'\nassert solution(\n'''4 4\n24 10\n1 3\n2 3\n2 4\n1 4\n''') == '24'\nassert solution(\n'''8 8\n10000000 10000000 10000000 10000000\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n''') == '10000000'\n"
    },
    {
        "number": 3025,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 3\n1\n1 2\n2 3\n1 3''') == '0'\nassert solution('''4 4\n24 10\n1 3\n2 3\n2 4\n1 4''') == '24'\nassert solution('''6 8\n100 500 300 75\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6''') == '800'\n\nprint(solution(input()))\n"
    },
    {
        "number": 3025,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 3\n1\n1 2\n2 3\n1 3\n3 1\n3 2\n1 4\n2 3\n2 4\n1 4\n''') == '0'\nassert solution('''4 4\n24 10\n1 3\n2 3\n2 4\n1 4\n1 2\n2 3\n3 4\n2 3\n1 4\n''') == '24'\nassert solution('''6 8\n100 500 300 75\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6\n1 4\n''') == '800'\nassert solution('''8 8\n1000000000 1000000000 1000000000\n10000000 1000 1001\n1000 1000 1000\n100 1000 1001\n100 100 1000\n100 1000 1000\n1000 100 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n''') == '1000000000'\nassert solution('''8 8\n1000000000 1000000000 1000000000\n10000000 1000 1001\n1000 1000 1000\n100 1000 1001\n100 100 1000\n100 1000 1000\n1000 100 1000\n1000 1000 1000\n1000 100 1000\n1000 1000 1000\n1000 100 1000\n1000 1000 1000\n1000 1000 1000\n1000 100 1000\n1000 1000 1000\n1000 1000 1000\n1000 100 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 100 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 100 1000\n1000 1000 1000\n1000 100 1000\n1000 1000 1000\n1000 1000 1000\n1000 100 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 100 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 100 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 100 1000\n1000 1000 1000\n1000 1000 1000\n1000 100 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 100 1000\n1000 100 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n1000 100 1000\n"
    },
    {
        "number": 3025,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 3\n1\n1 2\n2 3\n1 3\n''') == \"0\"\nassert solution('''4 4\n24 10\n1 3\n2 3\n2 4\n1 4\n''') == \"24\"\nassert solution('''6 8\n100 500 300 75\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6\n''') == \"800\"\n"
    },
    {
        "number": 3025,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 3\n1\n1 2\n2 3\n1 3\n3\n1 4\n2 3\n2 4\n1 4\n3''') == '0'\nassert solution('''4 4\n24 10\n1 3\n2 3\n2 4\n1 4\n3\n1 4\n2 3\n2 4\n1 4\n3''') == '24'\nassert solution('''6 8\n100 500 300 75\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6\n1 4\n3''') == '800'\nassert solution('''3 3\n1\n1 2\n2 3\n1 3\n3\n1 4\n2 3\n2 4\n1 4\n3''') == '0'\nassert solution('''4 4\n24 10\n1 3\n2 3\n2 4\n1 4\n3\n1 4\n2 3\n2 4\n1 4\n3''') == '24'\n"
    },
    {
        "number": 3025,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2\\n1 3\\n2 3\\n1 3') == '0'\nassert solution('2 3\\n1 3\\n1 4') == '24'\nassert solution('2 3\\n1 3\\n2 4\\n1 4') == '24'\nassert solution('2 3\\n1 3\\n1 4\\n2 4\\n1 4') == '24'\nassert solution('3 3\\n1 3\\n1 4\\n2 4\\n1 4\\n2 3\\n1 3') == '0'\n"
    },
    {
        "number": 3025,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 2\n1\n1 2''') == '0'\nassert solution('''3 3\n1\n1 2\n2 3''') == '0'\nassert solution('''10 9\n1 3\n1 4\n2 3\n2 4\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9''') == '1'\nassert solution('''3 3\n1\n1 2\n2 3''') == '1'\nassert solution('''6 8\n100 500 300 75\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6''') == '800'\n"
    },
    {
        "number": 3025,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2') == '0'\nassert solution('3 4') == '24'\nassert solution('6 8') == '800'\n"
    },
    {
        "number": 3026,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == '-1'\nassert solution('1') == '-1'\nassert solution('2 3 1') == '1 4'\nassert solution('2 1 4 3') == '1 2 3 4'\nassert solution('3 4 2 1') == '1 2 4'\n"
    },
    {
        "number": 3026,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == output\nprint(solution(input))\n"
    },
    {
        "number": 3026,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n2\\n1\\n2') == '1\\n2'\nassert solution('2\\n3\\n1\\n2') == '-1'\nassert solution('2\\n2\\n3\\n1\\n2') == '-1'\nassert solution('2\\n2\\n2\\n1\\n2') == '-1'\nassert solution('2\\n1\\n3\\n2\\n4') == '1\\n2'\n"
    },
    {
        "number": 3026,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 3 2 4\\n1 3 2 4\") == \"1 4\\n\"\nassert solution(\"4\\n1 3 2 4\\n1 3 2 4\") == \"1 2 3 4\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n1 2 3 4 5\") == \"-1\\n\"\nassert solution(\"1 2 2 3 4 5\\n1 2 3 4 5\") == \"-1\\n\"\nassert solution(\"4\\n2 1 4 3\\n2 1 4 3\") == \"1 4\\n\"\n"
    },
    {
        "number": 3026,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3026,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n1 3 2 4\\n') == '1 4\\n'\nassert solution('5\\n1 2 3 4 5\\n') == '1 2 3 4 5\\n'\nassert solution('4\\n2 1 4 3\\n') == '1 2 3 4 5\\n'\nassert solution('7\\n2 1 4 3 5 6 7\\n') == '1 2 3 4 5 6 7\\n'\nassert solution('4\\n1 1 3 3\\n') == '-1\\n'\n"
    },
    {
        "number": 3026,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n1 3 2 4''') == '1 4'\nassert solution('''5\n1 2 3 4 5''') == '1 2 3 4 5'\nassert solution('''4\n2 1 4 3''') == '1 2 3 4'\nassert solution('''1''') == '-1'\nassert solution('''4\n1 4 3 2''') == '1 3 2'\n"
    },
    {
        "number": 3026,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 3 2 4\\n\") == \"1 4\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"1 2 3 4 5\\n\"\nassert solution(\"4\\n2 1 4 3\\n\") == \"-1\\n\"\nassert solution(\"5\\n2 1 4 3 5\\n\") == \"-1\\n\"\nassert solution(\"4\\n1 3 2 4\\n\") == \"1 4\\n\"\n"
    },
    {
        "number": 3026,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n4\n1 3 2 4\n''') == '1 4'\nassert solution('''\n5\n1 2 3 4 5\n''') == '1 2 3 4 5'\nassert solution('''\n4\n2 1 4 3\n''') == '-1'\nassert solution('''\n5\n2 1 4 3 5\n''') == '1 2 3 4 5'"
    },
    {
        "number": 3026,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n1 3 2 4\\n') == '1 4\\n'\nassert solution('5\\n1 2 3 4 5\\n') == '1 2 3 4 5\\n'\nassert solution('4\\n2 1 4 3\\n') == '1 2 3 4 5\\n'\nassert solution('6\\n1 2 3 4 5 6\\n') == '1 2 3 4 5 6\\n'\nassert solution('6\\n1 2 3 4 5 6 7\\n') == '1 2 3 4 5 6 7\\n'\n"
    },
    {
        "number": 3027,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3027,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"..#..#..\\n\"\n    \".######.\\n\"\n    \".######.\\n\"\n    \"..#..#..\\n\"\n) == \"8\"\nassert solution(\n    \"..#..#..\\n\"\n    \".######.\\n\"\n    \".######.\\n\"\n    \"..#..#..\\n\"\n) == \"1\"\nassert solution(\n    \"..#..#..\\n\"\n    \".######.\\n\"\n    \".######.\\n\"\n    \"..#..#..\\n\"\n) == \"5\"\nassert solution(\n    \"..#..#..\\n\"\n    \".######.\\n\"\n    \".######.\\n\"\n    \"..#..#..\\n\"\n) == \"1\"\nassert solution(\n    \"..#..#..\\n\"\n    \".######.\\n\"\n    \".######.\\n\"\n    \"..#..#..\\n\"\n) == \"5\"\n"
    },
    {
        "number": 3027,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    '''.#####\n#####.\n.#####\n"
    },
    {
        "number": 3027,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n4 8\n..#..#..\n.######.\n.######.\n..#..#..\n''') == '8'\nassert solution('''\n3 3\n...\n.#.\n...\n''') == '1'\nassert solution('''\n2 6\n.#####\n#####.\n''') == '5'\nprint('passed')\n"
    },
    {
        "number": 3027,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == None\nassert solution('..#..#..') == None\nassert solution('....#.###.#####...######') == None\nassert solution('..#..#..') == 1\nassert solution('....#.###.#####...######') == 5\n"
    },
    {
        "number": 3027,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 3027,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 8\n..#..#..\n.######.\n.######.\n..#..#..\n''') == '8'\nassert solution('''3 3\n...\n.#.\n...\n''') == '1'\nassert solution('''2 6\n.#####\n#####.\n''') == '5'\nassert solution('''2 3\n.#.\n...\n''') == '5'\nassert solution('''2 4\n..#..\n.#..\n.#..\n''') == '4'\n"
    },
    {
        "number": 3027,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n3 3\n.#####\n.#####\n.#####\n''') == '5'\nassert solution('''\n3 3\n..#..#..\n.######.\n.######.\n..#..#..\n''') == '8'\nassert solution('''\n6 6\n.#####.\n.#...#.\n.#.#..#\n.#...#.\n.#...#.\n.#...#.\n''') == '1'\nassert solution('''\n8 4\n....#\n....#\n..#..#\n##.##.\n##.##.\n....#\n....#\n''') == '1'\nassert solution('''\n7 7\n..##.##.\n"
    },
    {
        "number": 3027,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('\\n'.join([\n    '4 8',\n    '.#####',\n    '.#####',\n    '.#.#.#',\n    '..#..#',\n])) == '8'\nassert solution('\\n'.join([\n    '4 7',\n    '########',\n    '.######.########',\n    '.#.#.#.#.#.###',\n    '.#.###.######.',\n])) == '12'\nassert solution('\\n'.join([\n    '6 6',\n    '##.##.##.##',\n    '#.#.#.#.#.#',\n    '##.##.##.##',\n    '#.#.#.#.#.#',\n    '##.##.##.##',\n    '#.#.#.#.#.#',\n    '##.##.##.##',\n])) == '16'\nassert solution('\\n'.join([\n    '4 8',\n    '###...###',\n    '#.#.#.#.#',\n    '###...###',\n    '.#.#####.',\n    '#.#.#.###',\n    '#.#.#.###',\n    '#.#.#.###',\n    '#.#.#.###',\n    '##...#..#',\n])) == '24'\nassert solution('\\n'.join([\n    '3 5',\n    '#..#.#..',\n    '#.#.#.#.',\n    '#.#.##.#',\n    '#.#.#.##',\n    '#.#.#.#.',\n    '#.#.#.#.',\n    '#.#.#.#.',\n    '#.#.#.#.',\n    '#.#.#.#.',\n    '#.#.#.#.',\n    '#.#.#.#.',\n])) == '24'\n\n\"\"\"#!/bin/python\n\nimport sys"
    },
    {
        "number": 3027,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"5\"\n\"\"\"\n"
    },
    {
        "number": 3028,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3028,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == \"\"\n\"\"\""
    },
    {
        "number": 3028,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '19 12 2 18 5 5'\n\n--------------------------------------------------------------------------------------------------------\nSample Output"
    },
    {
        "number": 3028,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 3 3\\n1 2 1\\n2 1 2\\n1 2 2\\n\") == \"19 12 2 18 5 5\"\nassert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n\") == \"6\"\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\\n\") == \"13\"\nassert solution(\"3 3 3\\n1 1 1\\n3 2 2\\n2 2 2\\n3 3 3\\n\") == \"4 2 6 1 9 7 5 5 7 1 2 3 3\"\nassert solution(\"4 4 4\\n2 2 2\\n2 2 2\\n2 2 2\\n2 2 2\\n\") == \"4\"\n"
    },
    {
        "number": 3028,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 3 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\") == 6\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\\n3 1 3\\n3 2 3\\n3 1 3\") == 13\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\\n3 2 3\\n3 1 3\\n3 2 3\") == -1\nassert solution(\"3 2 1\\n1 2\\n2 1\\n1 2\\n3 2 1\\n3 1 3\\n3 2 3\") == 4\nassert solution(\"3 1 1\\n3 1 3\\n3 1 3\\n3 1 3\") == 5\n"
    },
    {
        "number": 3028,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 5 5\n2 1 1 1 2\n5 3 4 4 3\n4 3 3 3 2\n3 1 3 3 1\n''') == '6'\nassert solution('''3 3 3\n3 1 1\n1 3 2\n3 2 3\n''') == '13'\nassert solution('''3 2 2\n1 2\n2 1\n1 2\n''') == '-1'\nassert solution('''3 2 2\n1 2\n2 1\n1 2\n2 2\n''') == '-1'\nassert solution('''4 2 2\n1 2\n2 1\n1 2\n2 2\n''') == '13'\n"
    },
    {
        "number": 3028,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 3 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n3 1 3 3 1\\n3 1 3 3 1\\n3 1 3 3 1\\n3 1 3 3 1\\n3 1 3 3 1\\n3 1 3 3 1\\n3 1 3 3 1\\n3 1 3 3 1') == '6\\n19 12 2 18 5 5'\n"
    },
    {
        "number": 3028,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3028,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3028,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1 1') == '1'\nassert solution('2 3 4') == '-1'\nassert solution('2 1 1 1 2') == '6'\nassert solution('3 1 3 3 1') == '13'\nassert solution('3 3 3') == '-1'\n"
    },
    {
        "number": 3029,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3029,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3029,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n3\n3\n3\n3\n3\n1\n2\n3\n4\n''') == '5 1'\nassert solution('''5\n4\n3\n2\n1\n0\n1\n2\n3\n4\n''') == '3 2'\nprint(solution('''4\n1\n5\n3\n6\n1\n2\n3\n'''))\n"
    },
    {
        "number": 3029,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n3\n3\n3\n3\n3\n1\n2\n3\n4\n''') == '5 1'\nassert solution('''5\n4\n3\n2\n1\n0\n1\n2\n3\n4\n''') == '3 2'\nassert solution('''4\n1\n5\n3\n6\n1\n2\n3\n''') == '1 5'\nassert solution('''4\n1\n5\n3\n6\n1\n2\n3\n''') == '1 5'\nassert solution('''4\n1\n5\n3\n6\n1\n2\n3\n''') == '3 2'\n"
    },
    {
        "number": 3029,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1 1\"\nassert solution(\"1 2\") == \"2 1\"\nassert solution(\"1 2 3\") == \"2 1\"\nassert solution(\"1 2 3 4\") == \"2 1\"\n"
    },
    {
        "number": 3029,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin[9:]"
    },
    {
        "number": 3029,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n1\n2\n3\n4''') == '3 2'\nassert solution('''5\n3\n3\n3\n3\n3\n1\n2\n3\n4''') == '5 1'\nassert solution('''6\n6\n2\n1\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n"
    },
    {
        "number": 3029,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3029,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n5\n3\n3\n3\n3\n3\n1\n2\n3\n4\n''') == '5 1'\n\nassert solution('''\n5\n4\n3\n2\n1\n0\n1\n2\n3\n4\n''') == '3 2'\n\nassert solution('''\n5\n3\n2\n1\n0\n1\n2\n3\n4\n''') == '3 2'\n"
    },
    {
        "number": 3029,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n3\n3\n3\n3\n3\n1\n2\n3\n4\n''') == '5 1'\nassert solution('''5\n4\n3\n2\n1\n0\n1\n2\n3\n4\n''') == '3 2'\nassert solution('''5\n2\n0\n1\n2\n3\n4\n''') == '1 5'\nassert solution('''5\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n''') == '8 7'\nassert solution('''5\n2\n1\n0\n2\n1\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n''') == '1 5'\n"
    },
    {
        "number": 3030,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 0\") == \"5\"\nassert solution(\"5 0\") == \"5\"\nassert solution(\"6 0\") == \"6\"\nassert solution(\"6 1\") == \"6\"\nassert solution(\"7 0\") == \"7\"\n"
    },
    {
        "number": 3030,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5') == '1'\nassert solution('6') == '5'\nassert solution('7') == '6'\nassert solution('8') == '7'\nassert solution('9') == '8'\n"
    },
    {
        "number": 3030,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1 1\\n1 2 1\\n1 3 1\\n1 4 1\\n1 5 1\\n1 6 1\\n1 1') == '5'\nassert solution('1\\n1 1\\n1 2 1\\n1 3 1\\n1 4 1\\n1 5 1\\n1 6 1\\n1 1') == '5'\nassert solution('1\\n1 1\\n1 2 1\\n1 3 1\\n1 4 1\\n1 5 1\\n1 6 1\\n1 1') == '5'\nassert solution('1\\n1 1\\n1 2 1\\n1 3 1\\n1 4 1\\n1 5 1\\n1 6 1\\n1 1') == '5'\nassert solution('1\\n1 1\\n1 2 1\\n1 3 1\\n1 4 1\\n1 5 1\\n1 6 1\\n1 1') == '5'\n"
    },
    {
        "number": 3030,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2 0') == '1'\nassert solution('2 2 1') == '2'\nassert solution('2 2 1 1') == '3'\nassert solution('2 2 1 1 1') == '5'\nassert solution('2 2 1 1 1 1') == '6'\n"
    },
    {
        "number": 3030,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n1 1\\n3 0\\n3 1\") == \"1\"\nassert solution(\"3 3\\n2 2\\n1 1\\n0 0\\n1 1\\n0 0\\n3 1\") == \"3\"\nassert solution(\"1 1\\n0 0\\n3 1\") == \"1\"\nassert solution(\"1 1\\n0 0\\n0 0\\n3 1\") == \"3\"\nassert solution(\"1 1\\n0 0\\n0 0\\n3 1\") == \"3\"\n"
    },
    {
        "number": 3030,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"5\n3 0\n3 1\n3 2\n3 3\n3 4\n\"\"\") == \"5\"\n\nassert solution(\n\"\"\"5\n4 0\n3 1\n2 2\n1 3\n0 4\n\"\"\") == \"5\"\n\nassert solution(\n\"\"\"6\n3 0\n1 1\n2 1\n3 1\n4 1\n5 1\n6 1\n\"\"\") == \"6\"\n"
    },
    {
        "number": 3030,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n3 0\n3 1\n3 2\n3 3\n3 4\n''') == '1'\n\nassert solution('''5\n4 0\n3 1\n2 2\n1 3\n0 4\n''') == '5'\n\nassert solution('''5\n6 0\n3 1\n2 2\n1 3\n0 4\n''') == '5'\n\nassert solution('''5\n4 0\n3 1\n2 2\n1 3\n0 4\n''') == '5'\n\nassert solution('''5\n4 0\n3 1\n2 2\n1 3\n0 4\n''') == '5'"
    },
    {
        "number": 3030,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4 5 6') == '5'\nassert solution('1 2 3 4 5') == '5'\nassert solution('1 2 3 4') == '4'\nassert solution('1 2 3 4 5 6') == '5'\nassert solution('1 2 3 4 5') == '5'\n"
    },
    {
        "number": 3030,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3030,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n0 1\\n3 1\\n2 1\\n1 3') == '4'\nassert solution('3\\n0 1\\n2 1\\n3 1') == '1'\nassert solution('3\\n0 1\\n1 1\\n2 1') == '5'\nassert solution('3\\n0 1\\n1 1\\n2 1\\n3 1') == '5'\nassert solution('4\\n0 1\\n2 1\\n3 1\\n4 1') == '5'\n"
    },
    {
        "number": 3031,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n1 2 2\\n1 3 1\\n2 4 3\\n2 7 1\\n3 5 2\\n5 6 2\\n7 8 1\\n9 2 2') == '4\\n3\\n4\\n5\\n6\\n7\\n'\nassert solution('8\\n1 2 2\\n1 3 1\\n2 4 3\\n2 7 1\\n3 5 2\\n5 6 2\\n7 8 1\\n9 2 2') == '4\\n3\\n4\\n5\\n6\\n7\\n'\nassert solution('5\\n1 2 2\\n1 3 1\\n2 4 3\\n2 7 1\\n3 5 2\\n4 5 1\\n5 6 1\\n6 7 1\\n7 8 1\\n8 9 1\\n9 10 1') == '0\\n'\nassert solution('10\\n1 2 2\\n1 3 1\\n2 4 3\\n2 7 1\\n3 5 2\\n5 6 2\\n7 8 1\\n9 2 2\\n10 3 1\\n11 4 1\\n12 4 1') == '5\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n'\nassert solution('8\\n1 2 2\\n1 3 1\\n2 4 3\\n2 7 1\\n3 5 2\\n5 6 2\\n7 8 1\\n9 2 2') == '4\\n3\\n4\\n5\\n6\\n7\\n'\n"
    },
    {
        "number": 3031,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 3 1\") == \"2\"\nassert solution(\"1 3 1\\n2 3 1\\n3 4 3\\n4 5 4\\n5 6 3\\n6 7 2\\n6 8 2\\n7 8 1\") == \"4\\n3\\n4\\n5\\n6\\n7\"\n\n\"\"\"\n"
    },
    {
        "number": 3031,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"8\n1 3 1\n2 3 1\n3 4 3\n4 5 4\n5 6 3\n6 7 2\n6 8 2\n7 8 1\n\"\"\") == \"4\\n3\\n4\\n5\\n6\\n7\\n\"\nassert solution(\"\"\"8\n1 2 2\n1 3 1\n1 4 5\n1 5 5\n2 6 3\n3 7 3\n4 8 1\n5 9 2\n\"\"\") == \"0\\n1\\n2\\n3\\n6\\n7\\n\"\nassert solution(\"\"\"9\n1 2 2\n1 3 1\n1 4 5\n1 5 5\n2 6 3\n3 7 3\n4 8 1\n5 9 2\n6 9 3\n7 9 4\n8 9 5\n\"\"\") == \"5\\n1\\n2\\n3\\n6\\n7\\n8\\n\"\nassert solution(\"\"\"9\n1 2 2\n1 3 1\n1 4 5\n1 5 5\n2 6 3\n3 7 3\n4 8 1\n5 9 2\n6 9 3\n7 9 4\n8 9 5\n\"\"\") == \"5\\n1\\n2\\n3\\n6\\n7\\n8\\n\"\nassert solution(\"\"\"1\n1 1\n\"\"\") == \"0\\n\"\n"
    },
    {
        "number": 3031,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 2 1\\n2 3 1\\n1 3 1\") == \"0\\n1\"\nassert solution(\"2 2 1\\n1 3 1\\n1 4 5\\n1 5 5\\n2 6 3\\n3 7 3\\n4 8 1\\n5 9 2\") == \"5\\n1\\n2\\n3\\n6\\n7\\n8\"\nprint(solution(input()))\n"
    },
    {
        "number": 3031,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"1\n1 3 1\n2 3 1\n3 4 3\n4 5 4\n5 6 3\n6 7 2\n6 8 2\n7 8 1\n8 9 2\"\"\") == \"\"\"4\n3\n4\n5\n6\n7\n\"\"\"\n\nassert solution(\"\"\"8\n1 2 2\n1 3 1\n2 4 3\n2 7 1\n3 5 2\n5 6 2\n7 8 1\n8 9 2\"\"\") == \"\"\"0\n\"\"\"\n"
    },
    {
        "number": 3031,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 2\") == \"4\"\nassert solution(\"1 3 1\") == \"3\"\nassert solution(\"2 3 1\") == \"4\"\nassert solution(\"2 4 3\") == \"5\"\nassert solution(\"3 4 3\") == \"6\"\n"
    },
    {
        "number": 3031,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"8\") == \"4\"\nassert solution(\"9\") == \"0\"\nassert solution(\"2 2 2\") == \"0\"\nassert solution(\"1 2 2\") == \"0\"\nassert solution(\"2 1 2\") == \"0\"\n"
    },
    {
        "number": 3031,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"8\") == \"4\"\nassert solution(\"9\") == \"0\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"2\"\nassert solution(\"7\") == \"3\"\n"
    },
    {
        "number": 3031,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''8\n1 3 1\n2 3 1\n3 4 3\n4 5 4\n5 6 3\n6 7 2\n6 8 2\n''') == '4\\n3\\n4\\n5\\n6\\n7\\n'\n\nassert solution('''8\n1 2 2\n1 3 1\n2 4 3\n2 7 1\n3 5 2\n5 6 2\n7 8 1\n''') == '0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n'\n\nassert solution('''9\n1 2 2\n1 3 1\n1 4 5\n1 5 5\n2 6 3\n3 7 3\n4 8 1\n5 9 2\n''') == '5\\n1\\n2\\n3\\n6\\n7\\n8\\n'\n"
    },
    {
        "number": 3031,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3032,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == str(solution(stdin))\n\"\"\"\n\n\nimport sys"
    },
    {
        "number": 3032,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') is None\nassert solution('1 2') == None\nassert solution('1 1') == None\nassert solution('1 1 1') == None\nassert solution('2 1') == None\n"
    },
    {
        "number": 3032,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2\\nV1 V2 V1 V1 V2\\n') == '5'\nassert solution('2 1\\nV1 V2 V1 V1 V2\\n') == '6'\nassert solution('1 2\\nR10 V1 V2 V1 E\\n') == '30'\nassert solution('2 1\\nR10 V1 V2 V1 E\\n') == '30'\n\n\n\n\n\n\n'''\n"
    },
    {
        "number": 3032,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 2\nV1 V2 V1 V1 V2\n''') == '5'\nassert solution('''1 2\nV1 V2 V1 V1 V2\n''') == '6'\nassert solution('''2 1\nV1 V2 V1 V1 V2\n''') == '30'\nassert solution('''2 2\nV1 V2 V1 V1 V2\n''') == '30'\nassert solution('''1 4\nR10 V1 V2 V1 E\n''') == '60'\n"
    },
    {
        "number": 3032,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('V1 V2 V1 V1 V2') == '5'\nassert solution('V1 V2 V1 V1 V2') == '5'\nassert solution('V1 V2 V1 V1 V2') == '6'\nassert solution('R10 V1 V2 V1 E') == '30'\nassert solution('R10 V1 V2 V1 E') == '30'\n"
    },
    {
        "number": 3032,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2\\nV1 V2 V1 V1 V2\\n') == '5'\nassert solution('2 1\\nV1 V2 V1 V1 V2\\n') == '6'\nassert solution('1 2\\nR10 V1 V2 V1 E\\n') == '30'\nassert solution('1 2\\nV1 R10 V1 V2 V1 E\\n') == '30'\nassert solution('1 2\\n
    },
    {
        "number": 3032,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 2\nV1 V2 V1 V1 V2''') == '5'\nassert solution('''2 1\nV1 V2 V1 V1 V2''') == '6'\nassert solution('''1 2\nR10 V1 V2 V1 E''') == '30'\nassert solution('''4 4\nV1 V2 V1 V1 V2''') == '15'\nassert solution('''1 5\nV1 V2 V1 V1 V2''') == '26'\n"
    },
    {
        "number": 3032,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 2\nV1 V2 V1 V1 V2''') == '5'\nassert solution('''1 2\nV1 V2 V1 V1 V2\n''') == '6'\nassert solution('''1 2\nR10 V1 V2 V1 E\n''') == '30'\nassert solution('''1 2\nV1 V2 V1 V1 V2\n''') == '5'\n'''\n\"\"\"\n\n'''\n\n\"\"\"\n-----A1 -----\n-----B2 -----\n-----C3 -----\n-----D4 -----\n-----E5 -----\n-----F6 -----\n-----G7 -----\n-----H8 -----\n-----I9 -----\n-----J10 -----\n-----K11 -----\n-----L12 -----\n-----M13 -----\n-----N14 -----\n-----O15 -----\n-----P16 -----\n-----Q17 -----\n-----R18 -----\n-----S19 -----\n-----T20 -----\n-----U21 -----\n-----V22 -----\n-----W23 -----\n-----X24 -----\n-----Y25 -----\n-----Z26 -----\n-----A27 -----\n-----B28 -----\n-----C29 -----\n-----D30 -----\n-----E31 -----\n-----F32 -----\n-----G33 -----\n-----H34 -----\n-----I35 -----\n-----J36 -----\n-----K37 -----\n-----L38 -----\n-----M39 -----\n-----N40 -----\n-----O41 -----\n-----P42 -----\n-----Q43 -----\n-----R44 -----\n-----S45 -----\n-----T46 -----\n-----U47 -----\n-----V48 -----\n-----W49 -----\n-----X50 -----\n-----Y51 -----\n-----Z52 -----\n-----A53 -----\n-----B54 -----\n-----C55 -----\n-----D56 -----\n-----E57 -----\n-----F58 -----\n-----G59 -----\n-----H60 -----\n-----I61 -----\n-----J62 -----\n-----K63 -----\n-----L64 -----\n-----M65 -----\n-----N66 -----\n-----O67 -----\n-----P68 -----\n-----Q69 -----\n-----R70 -----\n-----S71 -----\n-----T72 -----\n-----U73 -----\n-----V74 -----\n-----W75 -----\n-----X76 -----\n-----Y77 -----\n-----Z78 -----\n-----A79 -----\n-----B80 -----\n-----C81 -----\n-----D82 -----\n-----E83 -----\n-----F84 -----\n-----G85 -----\n-----H86 -----\n-----I87 -----\n-----J88 -----\n-----K89 -----\n-----L90 -----\n-----M91 -----\n-----N92 -----\n-----O93 -----\n-----P94 -----\n-----Q95 -----\n-----R96 -----\n-----S97 -----\n-----T98 -----\n-----U99 -----\n-----V100 -----\n-----W101 -----\n-----X102 -----\n-----Y103 -----\n-----Z104 -----\n-----A105 -----\n-----B106 -----\n-----C107 -----\n-----D108 -----\n-----E109 -----\n-----F110 -----\n-----G111 -----\n-----H112 -----\n-----I113 -----\n-----J114 -----\n-----K115 -----\n-----L116 -----\n-----M117 -----\n-----N118 -----\n-----O119 -----\n-----P120 -----\n-----Q121 -----\n-----R122 -----\n-----S123 -----\n-----T124 -----\n-----U125 -----\n-----V126 -----\n-----W127 -----\n-----X128 -----\n-----Y129 -----\n-----Z130 -----\n-----A131 -----\n-----B132 -----\n-----C133 -----\n-----D134 -----\n-----E135 -----\n-----F136 -----\n-----G137 -----\n-----H138 -----\n-----I139 -----\n-----J140 -----\n-----K141 -----\n-----L142 -----\n-----M143 -----\n-----N144 -----\n-----O145 -----\n-----P146 -----\n-----Q147 -----\n-----R148 -----\n-----S149 -----\n-----T150 -----\n-----U151 -----\n-----V152 -----\n-----W153 -----\n-----X154 -----\n-----Y155 -----\n-----Z156 -----\n-----A157 -----\n-----B158 -----\n-----C159 -----\n-----D160 -----\n-----E161 -----\n-----F162 -----\n-----G163 -----\n-----H164 -----\n-----I165 -----\n-----J166 -----\n-----K167 -----\n-----L168 -----\n-----M169 -----\n-----N170 -----\n-----O171 -----\n-----P172 -----\n-----Q173 -----\n-----R174 -----\n-----S175 -----\n-----T176 -----\n-----U177 -----\n-----V178 -----\n-----W179 -----\n-----X180 -----\n-----Y181 -----\n-----Z182 -----\n-----A183 -----\n-----B184 -----\n-----C185 -----\n-----D186 -----\n-----E187 -----\n-----F188 -----\n-----G189 -----\n-----H190 -----\n-----I191 -----\n-----J192 -----\n-----K193 -----\n-----L194 -----\n-----M195 -----\n-----N196 -----\n-----O197 -----\n-----P198 -----\n-----Q199 -----\n-----R200 -----\n-----S201 -----\n-----T202 -----\n-----U203 -----\n-----V"
    },
    {
        "number": 3032,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n1 2\nV1 V2 V1 V1 V2\n''') == '5'\nassert solution('''\n2 1\nV1 V2 V1 V1 V2\n''') == '6'\nassert solution('''\n2 2\nV1 V2 V1 V1 V2\n''') == '30'\nassert solution('''\n1 2\nV1 V2 V1 V1 V2\n''') == '30'\nassert solution('''\n2 3\nV1 V2 V1 V1 V2\n''') == '36'\n"
    },
    {
        "number": 3032,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n1 2\nV1 V2 V1 V1 V2\n''') == '5'\nassert solution('''\n1 2\nV1 V2 V1 V1 V2\n''') == '6'\nassert solution('''\n1 2\nR10 V1 V2 V1 E\n''') == '30'\n"
    },
    {
        "number": 3033,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"10 22\") == \"38\"\nassert solution(\"10 11\") == \"impossible\"\nassert solution(\"9 216\") == \"546\"\nprint(solution(stdin))\n"
    },
    {
        "number": 3033,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 3033,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10 24') == '38'\nassert solution('10 11') == 'impossible'\nassert solution('9 216') == '546'\n'''\n"
    },
    {
        "number": 3033,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 24') == '38'\nassert solution('10 11') == 'impossible'\nassert solution('9 216') == '546'\nassert solution('0 0') == 'impossible'\nassert solution('1 0') == 'impossible'\n"
    },
    {
        "number": 3033,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3033,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2') == 'impossible'\nassert solution('9 3') == '546'\nassert solution('13 5') == '1166'\nassert solution('10 26') == '38'\nassert solution('90 35') == '1570'\n"
    },
    {
        "number": 3033,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == answer(stdin)\n"
    },
    {
        "number": 3033,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3033,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3033,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input(\"\")) == \"impossible\"\nassert solution(input(\"\")) == \"impossible\"\nassert solution(input(\"\")) == \"impossible\"\nassert solution(input(\"\")) == \"impossible\"\nassert solution(input(\"\")) == \"impossible\"\n"
    },
    {
        "number": 3034,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''20 60 2 1\n5 15 0.33333 30\n22 60 0.66667 70\n0 10\n''') == '466.662'\nassert solution(\n'''3 4 2 1\n1 3 0.25 8\n2 4 0.66667 15\n1 2\n''') == '10.00005'\nprint(solution(stdin))\n\n\"\"\"\n\nfrom math import ceil, sqrt\n"
    },
    {
        "number": 3034,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 2 1\") == \"0.5\"\nassert solution(\"2 1 2\") == \"0.6666666666666666\"\nassert solution(\"1 1 1 0\") == \"0.5\"\nassert solution(\"0 0 0 0 0 0 0 0 0\") == \"0\"\nassert solution(\"10 10 0 0\") == \"10\"\n"
    },
    {
        "number": 3034,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    '''20 60 2 1\n5 15 0.33333 30\n22 60 0.66666 70\n0 10'''\n) == '466.662'\nassert solution(\n    '''3 4 2 1\n1 3 0.25 8\n2 4 0.66667 15\n1 2'''\n) == '10.00005'\nassert solution(\n    '''3 4 1 0\n0 2 0.25 8\n2 4 0.66667 15\n1 2'''\n) == '2.0'\n"
    },
    {
        "number": 3034,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('20 60 2 1') == '466.662'\nassert solution('3 4 2 1') == '10.00005'\nassert solution('5 15 0.33333 30') == '466.662'\nassert solution('22 60 0.66666 70') == '10.00005'\nassert solution('0 10') == '2.0'\n"
    },
    {
        "number": 3034,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"20 60 2 1\n5 15 0.33333 30\n22 60 0.66667 70\n0 10\"\"\") == \"466.6662\"\nassert solution(\"\"\"3 4 2 1\n1 3 0.25 8\n2 4 0.66667 15\n1 2\"\"\") == \"10.00005\"\nassert solution(\"\"\"0 2 0.25 8\n1 3 0.333333 3\n2 4 0.6666667 3\n1 2\"\"\") == \"2.00000\"\nassert solution(\"\"\"0 3 0.25 8\n1 4 0.6666667 3\n2 5 0.33333 30\n1 2\n0 1\"\"\") == \"6.6664\"\nassert solution(\"\"\"1 2\n2 3 0.8\n1 2\n0 1\"\"\") == \"3.33333\"\n"
    },
    {
        "number": 3034,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"20 60 2 1\\n5 15 0.33333 30\\n22 60 0.66666 70\\n0 10\") == \"466.662\\n\"\nassert solution(\"3 4 2 1\\n1 3 0.25 8\\n2 4 0.66667 15\\n1 2\\n\") == \"10.00005\\n\"\nassert solution(\"3 4 1 0\\n0 2 0.25 8\\n2 4 0.66667 15\\n1 2\\n\") == \"2.0\\n\"\n"
    },
    {
        "number": 3034,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '4.664'\n\n\"\"\"\n\nimport sys\n\nd, t, c, r = map(int, input().split())\n\nclouds = [input().split() for _ in range(c)]\n\nfor cloud in clouds:\n    cloud[0] = int(cloud[0])\n    cloud[1] = int(cloud[1])\n    cloud[2] = float(cloud[2])\n    cloud[3] = int(cloud[3])\n\nroofs = [input().split() for _ in range(r)]\n\nfor roof in roofs:\n    roof[0] = int(roof[0])\n    roof[1] = int(roof[1])"
    },
    {
        "number": 3034,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('20 60 2 1') == '466.662'\nassert solution('3 4 2 1') == '10.00005'\nassert solution('3 4 1 0') == '2.0'\nassert solution('3 4 1 1') == '1.0'\nassert solution('3 4 1 1') == '0.5'\n"
    },
    {
        "number": 3034,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n"
    },
    {
        "number": 3034,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''20 60 2 1\n5 15 0.33333 30\n22 60 0.66667 70\n0 10\n''') == '466.662'\nassert solution('''3 4 2 1\n1 3 0.25 8\n2 4 0.66667 15\n1 2\n''') == '10.00005'\n"
    },
    {
        "number": 3035,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\nblue pink 1.0\nred pink 1.5\nblue red 1.0''') == '1.500000000000000'\nassert solution('''2\nblue red 1.0\nred pink 1.5''') == '0.000000000000000'\nassert solution('''4\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9''') == '10.000000000000000'\nassert solution('''2\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9''') == '0.000000000000000'\nassert solution('''5\nblue red 1.0\nred pink 1.5\nblue pink 1.0\nblue red 1.0\nred pink 1.5''') == '1.500000000000000'\n"
    },
    {
        "number": 3035,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\nblue\\nred\\nred\\nblue\\n') == '0.0'\nassert solution('3\\nblue\\nred\\nred\\nblue\\n') == '1.500000000000000'\nassert solution('2\\nblue\\nred\\nred\\nblue\\n') == '0.000000000000000'\nassert solution('4\\norange\\npink\\n1.9\\nblue\\nred\\nred\\nblue\\n') == '10.000000000000000'\nassert solution('2\\nblue\\nred\\nred\\nblue\\n') == '0.000000000000000'\n"
    },
    {
        "number": 3035,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3\\nblue pink 1.0\\nred pink 1.5\\nblue red 1.0\") == \"1.500000000000000\"\nassert solution(\"2\\nblue red 1.0\\nred pink 1.5\\n\") == \"0.000000000000000\"\nassert solution(\"4\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\\n\") == \"10.000000000000000\"\n\"\"\"\n"
    },
    {
        "number": 3035,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\nblue pink 1.0\nred pink 1.5\nblue red 1.0''') == '1.500000000000000\\n'\nassert solution('''2\nblue red 1.0\nred pink 1.5''') == '0.000000000000000\\n'\nassert solution('''4\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9''') == '10.000000000000000\\n'\n"
    },
    {
        "number": 3035,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''3\nblue pink 1.0\nred pink 1.5\nblue red 1.0'''\n) == '1.500000000000000'\n\nassert solution(\n'''2\nblue red 1.0\nred pink 1.5'''\n) == '0.000000000000000'\n\nassert solution(\n'''4\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9'''\n) == '10.000000000000000'\n"
    },
    {
        "number": 3035,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\nblue pink 1.0\\nred pink 1.5\\nblue red 1.0\\n') == '1.500000000000000\\n'\nassert solution('3\\nblue red 1.0\\nred pink 1.5\\nblue red 1.0\\n') == '0.000000000000000\\n'\nassert solution('3\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\\n') == '10.000000000000000\\n'\n"
    },
    {
        "number": 3035,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 1.0\") == \"\"\nassert solution(\"1 1.0 1.0\") == \"\"\nassert solution(\"1 1.0 1.0 1.0\") == \"\"\n"
    },
    {
        "number": 3035,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('blue red 1.0\\nred pink 1.5\\nblue red 1.0') == '1.500000000000000'\nassert solution('blue red 1.0\\nred pink 1.5\\nblue red 1.0\\n') == '0.000000000000000'\nassert solution('blue red 1.0\\nred pink 1.5\\nblue red 1.0\\nyellow orange 1.9\\nyellow orange 1.9\\n') == '10.000000000000000'\nassert solution('blue red 1.0\\nred pink 1.5\\nblue red 1.0\\ngreen yellow 1.9\\ngreen yellow 1.9\\n') == '10.000000000000000'\nassert solution('blue red 1.0\\nred pink 1.5\\nblue red 1.0\\ngreen yellow 1.9\\ngreen yellow 1.9\\nyellow orange 1.9\\n') == '10.000000000000000'\n"
    },
    {
        "number": 3035,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\\nblue pink 1.0\\nred pink 1.5\\nblue red 1.0\\n\") == \"1.500000000000000\\n\"\nassert solution(\"2\\nblue red 1.0\\nred pink 1.5\\n\") == \"0.000000000000000\\n\"\nassert solution(\"4\\no\\nu\\ng\\n\\n\") == \"10.000000000000000\\n\"\nassert solution(\"6\\nblue green 1.9\\nyellow orange 1.9\\nred pink 1.9\\nblue red 1.9\\ngreen yellow 1.9\\n\") == \"10.000000000000000\\n\"\nassert solution(\"8\\nblue green 1.9\\nyellow orange 1.9\\nred pink 1.9\\nblue red 1.9\\ngreen yellow 1.9\\nblue blue 1.9\\nred yellow 1.9\\n\") == \"10.000000000000000\\n\"\n"
    },
    {
        "number": 3035,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\nblue pink 1.0\nred pink 1.5\nblue red 1.0''') == '1.500000000000000'\nassert solution('''2\nblue red 1.0\nred pink 1.5''') == '0.000000000000000'\nassert solution('''4\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9''') == '10.000000000000000'\nassert solution('''4\norange pink 1.0\nyellow orange 1.0\ngreen yellow 1.0\nblue green 1.0''') == '0.000000000000000'\nassert solution('''4\norange pink 1.0\nyellow orange 1.5\ngreen yellow 1.0\nblue green 1.0''') == '1.500000000000000'\n"
    },
    {
        "number": 3036,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 1 1 1 1\\n2 3 2\\n2 1 2\\n3 3 4 5\\n1 6') == '22'\nassert solution('3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\n') == '0'\nassert solution('3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n') == '22'\nassert solution('3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n') == '0'\nassert solution('3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n') == '0'\n"
    },
    {
        "number": 3036,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n''') == '180'\nassert solution('''3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\n''') == '22'\nassert solution('''3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n''') == '0'\nassert solution('''3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n''') == '22'\nassert solution('''6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n''') == '180'\n"
    },
    {
        "number": 3036,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 1 1 1 0\") == \"\"\nassert solution(\"2 3 1 5 3 2\") == \"180\"\nassert solution(\"2 1 2\") == \"22\"\nassert solution(\"3 3 4 5\") == \"0\"\n"
    },
    {
        "number": 3036,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 3036,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n''') == '0'\nassert solution('''\n3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\n''') == '22'\nassert solution('''\n3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n''') == '0'\nassert solution('''\n3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n1 1\n1 2\n2 3\n2 1\n1 1\n''') == '180'\nassert solution('''\n3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\n1 1\n1 2\n''') == '0'\n"
    },
    {
        "number": 3036,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\\n\") == \"180\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\n\") == \"22\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n\") == \"0\"\nprint(\"All tests passed successfully!\")\n"
    },
    {
        "number": 3036,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n1 2\n1 3\n1 4\n1 5\n2 1\n2 2\n2 3\n3 1\n3 2\n3 3\n1 4\n1 5\n2 1\n2 2\n2 3\n3 1\n3 2\n3 3\n1 4\n1 5\n2 1\n2 2\n2 3\n3 1\n3 2\n3 3\n1 4\n1 5\n2 1\n2 2\n2 3\n3 1\n3 2\n3 3\n''') == '180'\nassert solution('''\n2 3\n2 1\n3 1\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n2 3\n1 2\n1 2\n1 2\n2 3\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n2 3\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2"
    },
    {
        "number": 3036,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3036,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n''') == '180'\nassert solution('''3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\n''') == '22'\nassert solution('''3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n''') == '0'\nassert solution('''3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n''') == '0'\nassert solution('''6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n''') == '180'\n"
    },
    {
        "number": 3036,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6 1 1 1 0') == '180'\nassert solution('2 3 1 5 3 2') == '22'\nassert solution('2 1 2') == '0'\nassert solution('3 3 4 5') == '22'\nassert solution('1 6') == '0'\n"
    },
    {
        "number": 3037,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 8 5') == '20 20'\nassert solution('6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3') == '20 20'\nassert solution('3 3 2\\n...\\n.#.\\n...\\nup 2\\nright 2') == '-1 -1'\nassert solution('3 3 2\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n"
    },
    {
        "number": 3037,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\n\") == \"20 20\"\nassert solution(\"3 3 2\\n...\\n.#.\\n...\\nup 2\\nright 2\\n\") == \"-1 -1\"\nassert solution(\"5 2 2\\n#..\\n##.\\n##.\\nup 2\\nright 2\\n\") == \"2 2\"\nassert solution(\"5 2 2\\n#..\\n##.\\n##.\\nup 2\\nright 2\\n\") == \"2 2\"\nassert solution(\"5 2 2\\n#..\\n##.\\n##.\\nup 2\\nright 2\\n\") == \"2 2\"\n"
    },
    {
        "number": 3037,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\n') == '20 20\\n'\n"
    },
    {
        "number": 3037,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6 8 5\n........\n...#....\n########\n"
    },
    {
        "number": 3037,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"6 8 5\") == \"20 20\"\nassert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nu p 2\\nup 3\") == \"20 20\"\n\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 3037,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6 8 5\n........\n...#....\n########\n"
    },
    {
        "number": 3037,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\\n\") == \"0\\n\"\nassert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"1\\n1\\n\") == \"2\\n\"\nassert solution(\"1\\n1\\n1\\n\") == \"3\\n\"\n"
    },
    {
        "number": 3037,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"6 8 5\") == \"-1 -1\"\nassert solution(\"6 8 4\") == \"-1 -1\"\nassert solution(\"6 8 2\") == \"17 17\"\nassert solution(\"6 8 3\") == \"17 17\"\nassert solution(\"6 8 1\") == \"17 17\"\n"
    },
    {
        "number": 3037,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n6 8 5\n........\n...#....\n########\n"
    },
    {
        "number": 3037,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\") == \"20 20\\n\"\nassert solution(\"3 3 2\\n...\\n.#.\\n...\\nup 2\\nright 2\") == \"-1 -1\\n\"\nassert solution(\"6 8 5\\n........\\n#......\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\") == \"20 17\\n\"\nassert solution(\"5 5 5\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n"
    },
    {
        "number": 3038,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    r\"\"\"\n371\n3\n2 40 65\n2 100 150\n2 300 320\n\"\"\".strip()) == 'impossible'\n\nassert solution(\n    r\"\"\"\n310\n3\n2 40 65\n2 100 150\n2 300 320\n\"\"\".strip()) == '300'\n\nassert solution(\n    r\"\"\"\n90\n2\n2 20 35\n2 88 200\n\"\"\".strip()) == '88'\n\nassert solution(\n    r\"\"\"\n1000\n3\n2 25 17\n2 17 20\n2 17 10\n\"\"\".strip()) == '25'\n\nassert solution(\n    r\"\"\"\n200\n3\n2 25 17\n2 17 20\n2 17 10\n\"\"\".strip()) == '17'"
    },
    {
        "number": 3038,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n371\n3\n2 40 65\n2 100 150\n2 300 320\n''') == 'impossible'\nassert solution('''\n310\n3\n2 40 65\n2 100 150\n2 300 320\n''') == '300'\nassert solution('''\n100\n2\n2 1 1\n2 5 2\n''') == '5'\nassert solution('''\n13\n3\n2 5 1\n2 6 1\n2 7 1\n2 8 1\n2 9 1\n2 10 1\n2 11 1\n2 12 1\n3\n5\n6\n7\n8\n9\n10\n11\n12\n13\n''') == '12'\nassert solution('''\n17\n4\n2 5 1\n2 6 1\n2 7 1\n2 8 1\n2 9 1\n2 10 1\n2 11 1\n2 12 1\n3\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n''') == '15'\n"
    },
    {
        "number": 3038,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n    371\n    3\n    2 40 65\n    2 100 150\n    2 300 320\n    \"\"\") == \"300\"\n\nassert solution(\n\"\"\"\n    310\n    3\n    2 40 65\n    2 100 150\n    2 300 320\n    \"\"\") == \"impossible\"\n\nassert solution(\n\"\"\"\n    90\n    2\n    2 20 35\n    2 88 200\n    \"\"\") == \"88\"\n\nassert solution(\n\"\"\"\n    4\n    2\n    2 10 13\n    3 3 3\n    2 4 2\n    2 4 2\n    3 3 3\n    \"\"\") == \"impossible\"\n"
    },
    {
        "number": 3038,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''371\n3\n2 40 65\n2 100 150\n2 300 320''') == 'impossible'\nassert solution('''310\n3\n2 40 65\n2 100 150\n2 300 320''') == '300'\nprint('Passed')\n"
    },
    {
        "number": 3038,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"impossible\"\n"
    },
    {
        "number": 3038,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n10\n2\n2 10 35\n2 100 150\n2 300 320\n''') == '88'\nassert solution('''\n1\n1\n2 10 35\n2 100 150\n2 300 320\n''') == 'impossible'\nassert solution('''\n10\n3\n2 40 65\n2 100 150\n2 300 320\n''') == '300'\nassert solution('''\n1000\n10\n2 1 3 5 10 15 19\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18 22 24 26 28\n2 12 18"
    },
    {
        "number": 3038,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n2\n2\n2 20 35\n2 88 200\n''') == '88'\nassert solution('''\n1\n3\n2 40 65\n2 100 150\n2 300 320\n''') == 'impossible'\nassert solution('''\n1\n3\n2 10 0\n2 100 10\n2 100 100\n''') == 'impossible'\nassert solution('''\n2\n2\n2 10 0\n2 100 10\n2 100 100\n''') == '0'\nassert solution('''\n2\n2\n2 10 0\n2 100 10\n2 100 100\n''') == '0'\n"
    },
    {
        "number": 3038,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n') == '300'\nassert solution('10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == 'impossible'\nassert solution('40\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n') == 'impossible'\nassert solution('10\\n2\\n2 40 65\\n2 100 150\\n2 300 320\\n') == 'impossible'\nassert solution('10\\n2\\n1 10\\n2 40 65\\n2 100 150\\n2 300 320\\n') == 'impossible'\n"
    },
    {
        "number": 3038,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''371''') == 'impossible'\nassert solution('''310''') == 'impossible'\nassert solution('''90''') == 'impossible'\nassert solution(''''') == 'impossible'\nassert solution('''314''') == 'impossible'\n"
    },
    {
        "number": 3038,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    371\n    3\n    2 40 65\n    2 100 150\n    2 300 320\n    \"\"\") == \"impossible\"\n\nassert solution(\n    \"\"\"\n    310\n    3\n    2 40 65\n    2 100 150\n    2 300 320\n    \"\"\") == \"88\"\n"
    },
    {
        "number": 3039,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == \"cannot fold\"\nassert solution(sample_input2) == \"can fold\"\nassert solution(sample_input3) == \"cannot fold\"\n"
    },
    {
        "number": 3039,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') is True\nassert solution('..#') is True\nassert solution('..#') is True\nassert solution('..#') is True\nassert solution('..#') is True\n"
    },
    {
        "number": 3039,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n\") == \"can fold\"\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n\") == \"cannot fold\"\nassert solution(\"......\\n......\\n......\\n......\\n......\\n......\") == \"can fold\"\nassert solution(\"#...#\\n#...#\\n#...#\\n#...#\\n#...#\\n#...#\\n\") == \"cannot fold\"\nassert solution(\"#...#\\n#...#\\n#...#\\n#...#\\n#...#\\n#...#\\n\") == \"can fold\"\n"
    },
    {
        "number": 3039,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n......') == 'can fold'\nassert solution('#.###\\n###..\\n.#..#\\n#...#\\n#.###\\n#.###\\n#.###') == 'cannot fold'\n"
    },
    {
        "number": 3039,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n"
    },
    {
        "number": 3039,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''......\n......\n######\n......\n......\n......''') == 'cannot fold'\nassert solution('''....\n...#.\n....\n....\n....\n....\n....''') == 'can fold'\n'''\nNotes:\n\nIt is well known that a set of six unit squares that are attached together in a \u201ccross\u201d can be folded into a cube.\n\nBut what about other initial shapes? That is, given six unit squares that are attached together along some of their sides, can we form a unit cube by folding this arrangement?\n\nFor example, given the following configurations:\n\n..##..\n...#..\n..##..\n...#..\n.#####\n....#\n######\n.#####\n##...\n\nYou will be given three vertices that are the relevant vertices for each of the three shapes.\n\nTo determine if these shapes can be folded into a cube, you will need to find the difference in the area of each of the faces of the cube versus the area of the face of the initial shape.\n\nFor example, if the vertices are the vertices of the shape that is to be folded, the vertices of the cube can be found by drawing an outline on a sheet of paper in a small window. The size of the outline is the total area of the face of the cube. The outline would be a closed polygon.\n\nWrite a function that, given the vertices of the cube and the vertices of the shapes that you will be folding into the cube, returns the minimum area difference that will occur between the faces of the cube and the faces of the shapes.\n\nFor example, if the vertices of the cube are the vertices of the shape that is to be folded, and the vertices of the shapes are the vertices of the shape that you are folding into the cube, the minimum area difference between the faces of the cube and the faces of the shapes would be four.\n\nAs you can see, the minimum area difference is four.\n\n-----Examples-----\nInput: \nVertices of the first shape: {A, B, C, D, E, F}\n\nVertices of the second shape: {G, H, I, J, K, L}\n\nVertices of the third shape: {M, N, O, P, Q, R}\n\nOutput: \n4\n\nInput: \nVertices of the first shape: {A, B, C, D, E, F}\n\nVertices of the second shape: {G, H, I, J, K, L}\n\nVertices of the third shape: {M, N, O, P, Q, R}\n\nOutput: \n0\n\nInput: \nVertices of the first shape: {A, B, C, D, E, F}\n\nVertices of the second shape: {G, H, I, J, K, L}\n\nVertices of the third shape: {M, N, O, P, Q, R}\n\nOutput: \n8\n'''"
    },
    {
        "number": 3039,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\".#..\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\") == \"can fold\"\nassert solution(\".##..\\n.#.#.#\\n#.#.#.#\\n#.#.#.#\\n#.#.#.#\\n#.#.#.#\\n#.#.#.#\\n#.#.#.#\\n#.#.#.#\") == \"cannot fold\"\nassert solution(\".#...\\n#....\\n#....\\n#....\\n#....\\n#....\\n#....\\n#....\\n#....\\n#....\") == \"cannot fold\"\nassert solution(\".#.#.#\\n#.#.#.#\\n#.#.#.#\\n#.#.#.#\\n#.#.#.#\\n#.#.#.#\\n#.#.#.#\\n#.#.#.#\\n#.#.#.#\") == \"can fold\"\nassert solution(\".#.##.\\n.#.###.\\n#..##..\\n..##...\\n##.#..#\\n##.##.#\\n###.#.#\\n#.#.###\\n#.#.#..\\n.##.###\") == \"can fold\"\n"
    },
    {
        "number": 3039,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\") == \"can fold\"\nassert solution(\"......\\n......\\n#.....\\n#.....\\n#.....\\n......\\n......\") == \"cannot fold\"\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n......\") == \"can fold\"\nassert solution(\"......\\n......\\n#.....\\n......\\n......\\n......\") == \"cannot fold\"\nassert solution(\"......\\n......\\n......\\n......\\n......\\n......\") == \"can fold\"\n"
    },
    {
        "number": 3039,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''......\n......\n######\n......\n......\n......\n''') == \"can fold\"\nassert solution('''..##..\n...#..\n..##..\n...#..\n......\n......\n''') == \"cannot fold\"\nassert solution('''......\n......\n######\n"
    },
    {
        "number": 3039,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"can fold\"\n"
    },
    {
        "number": 3040,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\"\nassert solution(\"abcabcabcabcabc\") == \"abcabc\"\nassert solution(\"abcabcabcabcabcabcabc\") == \"abcabc\"\n"
    },
    {
        "number": 3040,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'\nassert solution('aaa') == 'aaa'\nassert solution('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa') == 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n"
    },
    {
        "number": 3040,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'\nassert solution('aabbccdd') == 'abcc'\nassert solution('abc') == 'abc'\n"
    },
    {
        "number": 3040,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'abc'\nassert solution(stdin) == 'abc'\nassert solution(stdin) == 'aaa'\nassert solution(stdin) == 'aaa'\nassert solution(stdin) == 'aba'\n"
    },
    {
        "number": 3040,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'\nassert solution('aabb') == 'ab'\nassert solution('abcdefghh') == 'ab'\n"
    },
    {
        "number": 3040,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'"
    },
    {
        "number": 3040,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'\nprint(\"Tests passed\")"
    },
    {
        "number": 3040,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(solution.__doc__) == 'abcba'\n\n\"\"\""
    },
    {
        "number": 3040,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\"\nassert solution(\"aaaabbb\") == \"aaabb\"\nassert solution(\"abcabcbb\") == \"abcabc\"\n"
    },
    {
        "number": 3040,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('ab') == 'ab'\nassert solution('abcefgabc') == 'abc'\nassert solution('abcdefgabc') == 'abc'\n"
    },
    {
        "number": 3041,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3041,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3') == '4'\nassert solution('1\\n2\\n3\\n4\\n5') == '6'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n448\\n449\\n450\\n451\\n452\\n453\\n454\\n455\\n456\\n457\\n458\\n459\\n460\\n461\\n462\\n463\\n464\\n465\\n466\\n467\\n468\\n469\\n470\\n471\\n472\\n473\\n474\\n475\\n476\\n477\\n478\\n479\\n480\\n481\\n482\\n483\\n484\\n485\\n486\\n487\\n488\\n489\\n490\\n491\\n492\\n493\\n494\\n495\\n496\\n497\\n498\\n499\\n500\\n501\\n502\\n503\\n504\\n505\\n506\\n507\\n508\\n509\\n510\\n511\\n512\\"
    },
    {
        "number": 3041,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0 1\") == \"2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 2\") == \"2\"\n"
    },
    {
        "number": 3041,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\n1 4\n2 5\n''') == '4'\nassert solution('''2\n1 4\n2 10005\n''') == '6'\nassert solution('''3\n1 4\n2 10\n0 15\n''') == '4'\nassert solution('''4\n1 4\n2 10005\n0 15\n0 12\n0 10\n0 5\n0 1\n0 0\n''') == '6'\nassert solution('''4\n1 4\n2 10\n0 15\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15\n0 15\n1 12\n0 12\n0 10\n0 5\n0 1\n0 0\n1 15"
    },
    {
        "number": 3041,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n1 4\n2 5''') == '4'\nassert solution('''2\n1 4\n2 10005''') == '6'\nassert solution('''3\n1 4\n2 10\n0 15''') == '4'\nassert solution('''6\n1 4\n2 10\n0 15\n1 2\n1 3\n1 4''') == '4'\nassert solution('''7\n1 4\n2 10\n0 15\n1 2\n1 3\n1 4\n0 9999''') == '4'\n"
    },
    {
        "number": 3041,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"2\n1 4\n2 5\n\"\"\".strip()\n) == \"4\"\n\nassert solution(\n    \"\"\"2\n1 4\n2 10005\n\"\"\".strip()\n) == \"6\"\n\nassert solution(\n    \"\"\"3\n1 4\n2 10\n0 15\n\"\"\".strip()\n) == \"4\"\n\nassert solution(\n    \"\"\"10\n1 4\n2 10\n0 15\n1 6\n2 8\n0 10\n0 14\n1 12\n1 13\n1 15\n2 17\n2 19\n2 20\n2 22\n3 25\n3 26\n3 27\n3 28\n3 29\n3 30\n3 31\n3 32\n3 33\n3 34\n3 35\n4 37\n4 38\n4 39\n4 40\n4 41\n4 42\n4 43\n4 44\n4 45\n4 46\n4 47\n4 48\n4 49\n4 50\n5 47\n5 49\n5 50\n5 51\n5 52\n5 53\n5 54\n5 55\n5 56\n5 57\n5 58\n5 59\n5 60\n5 61\n5 62\n5 63\n5 64\n5 65\n5 66\n5 67\n5 68\n5 69\n5 70\n5 71\n5 72\n5 73\n5 74\n5 75\n5 76\n5 77\n5 78\n5 79\n5 80\n5 81\n5 82\n5 83\n5 84\n5 85\n5 86\n5 87\n5 88\n5 89\n5 90\n5 91\n5 92\n5 93\n5 94\n5 95\n5 96\n5 97\n5 98\n5 99\n5 100\n5 101\n5 102\n5 103\n5 104\n5 105\n5 106\n5 107\n5 108\n5 109\n5 110\n5 111\n5 112\n5 113\n5 114\n5 115\n5 116\n5 117\n5 118\n5 119\n5 120\n5 121\n5 122\n5 123\n5 124\n5 125\n5 126\n5 127\n5 128\n5 129\n5 130\n5 131\n5 132\n5 133\n5 134\n5 135\n5 136\n5 137\n5 138\n5 139\n5 140\n5 141\n5 142\n5 143\n5 144\n5 145\n5 146\n5 147\n5 148\n5 149\n5 150\n5 151\n5 152\n5 153\n5 154\n5 155\n5 156\n5 157\n5 158\n5 159\n5 160\n5 161\n5 162\n5 163\n5 164\n5 165\n5 166\n5 167\n5 168\n5 169\n5 170\n5 171\n5 172\n5 173\n5 174\n5 175\n5 176\n5 177\n5 178\n5 179\n5 180\n5 181\n5 182\n5 183\n5 184\n5 185\n5 186\n5 187\n5 188\n5 189\n5 190\n5 191\n5 192\n5 193\n5 194\n5 195\n5 196\n5 197\n5 198\n5 199\n5 200\n5 201\n5 202\n5 203\n5 204\n5 205\n5 206\n5 207\n5 208\n5 209\n5 210\n5 211\n5 212\n5 213\n5 214\n5 215\n5 216\n5 217\n5 218\n5 219\n5 220\n5 221\n5 222\n5 223\n5 224\n5 225\n5 226\n5 227\n5 228\n5 229\n5 230\n5 231\n5 232\n5 233\n5 234\n5 235\n5 236\n5 237\n5 238\n5 239\n5 240\n5 241\n5 242\n5 243\n5 244\n5 245\n5 246\n5 247\n5 248\n5 249\n5 250\n5 251\n5 252\n5 253\n5 254\n5 255\n5 256\n5 257\n5 258\n5 259\n5 260\n5 261\n5 262\n5 263\n5 264\n5 265\n5 266\n5 267\n5 268\n5 269\n5 270\n5 271\n5 272\n5 273\n5 274\n5 275\n5 276\n5 277\n5 278\n5 279\n5 280\n5 281\n5 282\n5 283\n5 284\n5 285\n5 286\n5 287\n5 288\n5 289\n5 290\n5 291\n5 292\n5 293\n5 294\n5 295\n5 296\n5 297\n5 298\n5 299\n5 300\n5 301\n5 302\n5 303\n5 304\n5 305\n5 306\n5 307\n5 308\n5 309\n5 310\n5 311\n5 312\n5 313\n5 314\n5 315\n5 316\n5 317\n5 318\n5 319\n5 320\n5 321\n5 322\n5 323\n5 324\n5 325\n5 326\n5 327\n5 328\n5 329\n5 330\n5 331\n5 332\n5 333\n5 334\n5 335\n5 336\n5 337\n5 338\n5 339\n5 340\n5 341\n5 342\n5 343\n5 344\n5 345\n5 346\n5 347\n5 348\n5 349\n5 350\n5 351\n5 352\n5 353\n5 354\n5 355\n5 356\n5 357\n5 358\n5 359\n5 360\n5 361\n5 362\n5 363\n5 364\n5 365\n5 366\n5 367\n5 368\n5 369\n5 370\n5 371\n5 372\n5 373\n5 374\n5 375\n5 376\n5 377\n5 378\n5 379\n5 380\n5 381\n5 382\n5 383\n5 384\n5 385\n5 386\n5 387\n5 388\n5 389\n5 390\n5 391\n5 392\n5 393\n5 394\n5 395\n5 396\n5 397\n5 398\n5 399\n5 400\n5 401\n5 402\n5 403\n5 404\n5 405\n5 406\n5 407\n5 408\n5 409\n5 410\n5 411\n5 412\n5 413\n5 414\n5 415\n5 416\n5 417\n5 418\n5 419\n5 420\n5 421\n5 422\n5 423\n5 424\n5 425\n5 426\n5 427\n5 428\n5 429\n5 430\n5 431\n5 432\n5 433\n5 434\n5 435\n5 436\n5 437\n5 438\n5 439\n5 440\n5 441\n5 442\n5 443\n5 444\n5 445\n5 446\n5 447\n5 448\n5 449\n5 450\n5 451\n5 452\n5 453\n5 454\n5 455\n5 456\n5 457\n5 458\n5 459\n5 460\n5 461\n5 462\n5 463\n5 464\n5 465\n5 466\n5 467\n5 468\n5 469\n5 470\n5 471\n5 472\n5 473\n5 474\n5 475\n5 476\n5 477\n5 478\n5 479\n5 480\n5 481\n5 482\n5 483\n5 484\n5 485\n5 486\n5 487\n5 488\n"
    },
    {
        "number": 3041,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\n1 4\n2 5''') == '4'\nassert solution('''2\n1 4\n2 10005''') == '6'\nassert solution('''3\n1 4\n2 10\n0 15''') == '4'\nassert solution('''1\n1 4\n2 10005\n0 15''') == '6'\nassert solution('''2\n1 4\n2 10005\n1 1\n0 15''') == '3'\n"
    },
    {
        "number": 3041,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n1 4\n2 5''') == '4'\nassert solution('''2\n1 4\n2 10005''') == '6'\nassert solution('''3\n1 4\n2 10\n0 15''') == '4'\nassert solution('''5\n1 4\n2 10\n0 15\n6 1\n1 10\n2 5\n0 2\n3 4\n1 2\n1 4\n2 10005''') == '6'\nassert solution('''6\n1 4\n2 10\n0 15\n6 1\n1 10\n2 5\n0 2\n3 4\n1 2\n1 4\n2 10005''') == '4'\n"
    },
    {
        "number": 3041,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 1') == '1'\nassert solution('1 2') == '2'\nassert solution('1 2') == '2'\nassert solution('1 1') == '1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 3041,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0\\n1 4\\n2 10\\n0 15') == '4'\nassert solution('1\\n2 1\\n0 2\\n1 5\\n0 5\\n1 2\\n0 5\\n1 6\\n1 4\\n0 3\\n1 2\\n0 3\\n1 6\\n1 5\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 4\\n1 3\\n1 2\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n1 4\\n0 1\\n1 2\\n0 2\\n0 4\\n1 6\\n1 4\\n0 2\\n0 1\\n"
    },
    {
        "number": 3042,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3042,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n7\\n7\\n7\") == \"2\"\nassert solution(\"1\\n7\\n7\\n7\\n7\") == \"3\"\nassert solution(\"1\\n7\\n7\\n7\\n7\\n7\") == \"0\"\nassert solution(\"1\\n7\\n7\\n7\\n7\\n7\\n7\") == \"0\"\nassert solution(\"1\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n"
    },
    {
        "number": 3042,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3042,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n') == '0'\nassert solution('2\\n2\\n') == '1'\nassert solution('3\\n7 7 7\\n') == '3'\nassert solution('4\\n2 3 4 4 8 12 24\\n') == '2'\nassert solution('5\\n1 2 3 2 1\\n') == '0'\n"
    },
    {
        "number": 3042,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n1 2 3 4') == '1'\nassert solution('2\\n1 2 3 4') == '1'\nassert solution('2\\n2 3 4') == '0'\nassert solution('3\\n1 2 3 4') == '1'\n"
    },
    {
        "number": 3042,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"4\"\n"
    },
    {
        "number": 3042,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n7\n2 3 4 4 8 12 24\n''') == '2'\nassert solution('''\n3\n7 7 7\n''') == '3'\nassert solution('''\n5\n1 2 3 2 1\n''') == '0'\nassert solution('''\n0\n0\n''') == '1'\nassert solution('''\n4\n2 2 2 2\n''') == '3'\n"
    },
    {
        "number": 3042,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7\n2 3 4 4 8 12 24''') == '2'\nassert solution('''3\n7 7 7''') == '3'\nassert solution('''5\n1 2 3 2 1''') == '0'\nassert solution('''10\n0 0 0 0 0 0 0 0 0 0''') == '1'\nassert solution('''9\n0 1 2 3 4 5 6 7 8 9''') == '2'\n"
    },
    {
        "number": 3042,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2') == '0'\nassert solution('2\\n2') == '1'\nassert solution('2\\n4') == '0'\nassert solution('2\\n3') == '0'\nassert solution('2\\n2') == '0'\n"
    },
    {
        "number": 3042,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7\n2 3 4 4 8 12 24\n''') == '2'\nassert solution('''3\n7 7 7\n''') == '3'\nassert solution('''5\n1 2 3 2 1\n''') == '0'\nprint('Passed.')\n"
    },
    {
        "number": 3043,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n2\\n3\\n2\\n2\\n3\\n2\\n2\") == \"3\"\nassert solution(\"2\\n2\\n2\\n2\") == \"2\"\nassert solution(\"2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\") == \"2\"\nassert solution(\"2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\"
    },
    {
        "number": 3043,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 5 4\nS#.F.\n.MFMG''') == '3'\nassert solution('''1 2 1\nGS\nSample Output 2:\n1''') == '1'\nassert solution('''2 2 10\nS#\n"
    },
    {
        "number": 3043,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 5 4\nS#.F.\n.MFMG\n''') == '3'\nassert solution('''1 2 1\nGS\n''') == '1'\nassert solution('''2 2 10\nS#\n"
    },
    {
        "number": 3043,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 5 4\nS#.F.\n.MFMG''') == '3'\nassert solution('''1 2 1\nGS\nSample Output 2:\n1\n\nSample Input 3:\n2 2 10\nS#\n"
    },
    {
        "number": 3043,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 5 4\nS#.F.\n.MFMG''') == '3'\nassert solution('''1 2 1\nGS\nSample Output 2:\n1''') == '1'\nassert solution('''2 2 10\nS#\n"
    },
    {
        "number": 3043,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 5 4\\nS#.F.\\n.MFMG') == '3'\nassert solution('1 2 1\\nGS') == '1'\nassert solution('2 2 10\\nS#\\n#G') == '-1'\nassert solution('1 10 3\\nS##.##.\\n.##F#.\\n##.#.\\n##.#.\\n.###.\\n.##.#\\n##.#.\\n.###.\\n.##.#\\n.##.#\\n.##.#') == '8'\nassert solution('2 2 10\\n#S#\\n#G') == '-1'\n"
    },
    {
        "number": 3043,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 5 4\") == \"3\"\nassert solution(\"2 2 1\") == \"1\"\nassert solution(\"1 2 1\") == \"-1\"\nassert solution(\"2 3 1\") == \"1\"\nassert solution(\"1 1 2\") == \"-1\"\n"
    },
    {
        "number": 3043,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3\\n.F.\\n.F.\\n') == '3'\nassert solution('1 2 3\\n.F.\\n.F.\\n') == '-1'\nassert solution('1 2 3\\n.F.\\n.F.\\n') == '-1'\nassert solution('2 2 2\\n.F.\\nF.F\\n') == '-1'\nassert solution('2 2 2\\n.F.\\nF.F\\n') == '-1'\n"
    },
    {
        "number": 3043,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n2 5 4\nS#.F.\n.MFMG\n''') == '3'\nassert solution(\n'''\n1 2 1\nGS\n''') == '1'\nassert solution(\n'''\n2 2 10\nS#\n"
    },
    {
        "number": 3043,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3044,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(INPUT) == OUTPUT\nprint(solution(INPUT))\n"
    },
    {
        "number": 3044,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3044,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 3\nS..\n.#.\n..G\nDRRDD''') == 1\nassert solution('''5 5\n.....\n.#.G#.\n.S...#\n...##.\n....#G\n.G.G.G\n''') == 1\nassert solution('''7 7\n#######\n.#S.#G#\n.#####\n..#...\n"
    },
    {
        "number": 3044,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == None\nassert solution('L') == None\nassert solution('LDRRDLUDUUU') == None\nassert solution('DDDRDRUDDDLRRRDRR') == None\nassert solution('UDLRRDLRRRRRDRD') == 2\n"
    },
    {
        "number": 3044,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == 1\nassert solution(\"3 3\") == 1\nassert solution(\"3 3\\n.S..\\n.#.\\n..G\\nDRRDD\") == 1\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\") == 1\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\") == 2\n"
    },
    {
        "number": 3044,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3044,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == 0\nassert solution(\"D\") == 1\nassert solution(\"DR\") == 2\nassert solution(\"DRR\") == 2\nassert solution(\"DRRDD\") == 1\n"
    },
    {
        "number": 3044,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == 0\nassert solution(\"DRRDD\") == 1\nassert solution(\"LDLDLLDR\") == 1\nassert solution(\"LDLDRDRDRD\") == 3\nassert solution(\"LDRRDRDRDRD\") == 3\n"
    },
    {
        "number": 3044,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3 3\nS..\n.#.\n..G\nDRRDD\"\"\") == \"1\"\nassert solution(\"\"\"\n3 7\n.......\n.G.#.S.\n.......\nLDLDLLDR\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3 7\n.#.....\n.G.##S.\n.......\nLDLDLLDR\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4 4\nS..G..\n..G#..\n.....#\n"
    },
    {
        "number": 3044,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0 1\\nS\\n..\\n.#.\\n..\\nG\\nDRRDD\") == \"1\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\\n\") == \"1\"\nassert solution(\"3 7\\n.S.G.S.\\n....G...\\n.......\\nLDLDLLDR\\n\") == \"2\"\nassert solution(\"3 7\\nS.G.S.\\n....G...\\n.......\\nLDLDLLDR\\n\") == \"3\"\nassert solution(\"3 7\\nG..G..G.\\n....G...\\n.......\\nLDLDLLDR\\n\") == \"4\"\n"
    },
    {
        "number": 3045,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''999999 0 1000\n999900 950 451\n987654 123 13222''') == '1000200 799'\nassert solution('''100 0 101\n0 200 199''') == 'uncertain'\nassert solution('''100 0 100\n0 200 199''') == 'impossible'\nassert solution('''999999 0 1000\n999900 950 451\n987654 123 13222''') == '1000200 799'\nassert solution('''999999 0 1000\n999900 950 451\n987654 123 13222''') == '1000200 799'\n"
    },
    {
        "number": 3045,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n999999 0 1000\n999900 950 451\n987654 123 13222\n\"\"\") == \"1000200 799\"\nassert solution(\"\"\"\n2\n100 0 101\n0 200 199\n\"\"\") == \"uncertain\"\nassert solution(\"\"\"\n1\n2 2 3\n2 4 4\n\"\"\") == \"impossible\"\nassert solution(\"\"\"\n1\n0 2 10\n0 3 10\n\"\"\") == \"impossible\"\nassert solution(\"\"\"\n2\n0 0 1\n0 1 1\n\"\"\") == \"impossible\"\n"
    },
    {
        "number": 3045,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"1\n2\n\"\"\") == \"1000200\"\nassert solution(\"\"\"1\n2\n3\n5\n\"\"\") == \"impossible\"\nassert solution(\"\"\"1\n2\n\"\"\") == \"uncertain\"\nassert solution(\"\"\"1\n2\n3\n4\n\"\"\") == \"1000200\"\nassert solution(\"\"\"1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\"\"\") == \"uncertain\"\n"
    },
    {
        "number": 3045,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n999999 0 1000\n999900 950 451\n987654 123 13222\n''') == '1000200 799'\nassert solution('''2\n100 0 100\n0 200 199\n''') == 'uncertain'\nassert solution('''2\n100 0 101\n0 200 199\n''') == 'impossible'\nassert solution('''7\n9666 5665 4654\n1547 3557 6205\n7333 5606 9808\n9667 1006 5778\n6588 6577 4656\n5666 3442 5462\n''') == 'impossible'\nassert solution('''7\n9666 5665 4654\n1547 3557 6205\n7333 5606 9808\n9667 1006 5778\n6588 6577 4656\n5666 3442 5462\n''') == 'impossible'\n"
    },
    {
        "number": 3045,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3045,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"impossible\"\nassert solution(\"2\") == \"uncertain\"\nassert solution(\"3\") == \"impossible\"\nassert solution(\"1\\n0 0 100\\n0 200 199\") == \"1000200 799\"\n"
    },
    {
        "number": 3045,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n3\n999999 0 1000\n999900 950 451\n987654 123 13222\n''') == '1000200 799'\nassert solution('''\n2\n100 0 100\n0 200 199\n''') == 'uncertain'\nassert solution('''\n2\n100 0 100\n0 200 199\n''') == 'impossible'\n"
    },
    {
        "number": 3045,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\nprint(solution(stdin))\n"
    },
    {
        "number": 3045,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3045,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '999999 0 1000\\n'\n    '999900 950 451\\n'\n    '987654 123 13222\\n'\n) == '1000200 799'\n\nassert solution(\n    '100 0 101\\n'\n    '0 200 199\\n'\n) == 'uncertain'\n\nassert solution(\n    '100 0 100\\n'\n    '0 200 199\\n'\n) == 'impossible'\n"
    },
    {
        "number": 3046,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n4 7\n9 8\n14 17\n19 18''') == '2\\n1'\n\nassert solution('''2\n4 7\n14 17\n19 18''') == '1\\n2'\n\nassert solution('''2\n4 8\n9 7\n14 18\n19 17''') =='syntax error'\n'''\n"
    },
    {
        "number": 3046,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2\\n4 7\\n9 8\\n14 17\\n19 18\") == \"2\\n1\"\nassert solution(\"2\\n4 7\\n14 17\\n19 18\") == \"1\\n2\"\nassert solution(\"2\\n4 7\\n9 8\\n19 18\\n14 17\") == \"1\\n2\"\nassert solution(\"2\\n4 7\\n14 17\\n9 8\\n19 18\") == \"1\\n2\"\nassert solution(\"2\\n4 7\\n9 8\\n19 18\\n14 17\\n1\") == \"1\\n2\"\n"
    },
    {
        "number": 3046,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n4 7\\n9 8\\n14 17\\n19 18\\n') == '2\\n1'\nassert solution('2\\n4 7\\n14 17\\n9 8\\n19 18\\n') == '1\\n2'\nassert solution('2\\n4 7\\n14 17\\n9 8\\n19 18\\n') == '2\\n1'\nassert solution('2\\n4 7\\n14 17\\n9 8\\n19 18\\n') == '1\\n2'\nassert solution('2\\n4 7\\n14 17\\n9 8\\n19 18\\n') == '2\\n1'\n"
    },
    {
        "number": 3046,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n4 7\\n9 8\\n14 17\\n19 18') == '2\\n1\\n'\nassert solution('2\\n4 7\\n14 17\\n9 8\\n19 18') == '1\\n2\\n'\n\"\"\""
    },
    {
        "number": 3046,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 7\n9 8\n14 17\n19 18''') == '2 1'\nassert solution('''4 8\n9 7\n14 18\n19 17''') == '1 2'\nassert solution('''1\n2\n3\n4''') == '1'\nassert solution('''1\n2\n3\n4''') =='syntax error'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9''') == '1 2'\n"
    },
    {
        "number": 3046,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(sample_input_0) == sample_output_0\nassert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3\nassert solution(sample_input_4) == sample_output_4\n"
    },
    {
        "number": 3046,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1\\n1') == '1'\nassert solution('2\\n1\\n1\\n1') == '1'\nassert solution('2\\n1\\n1\\n1\\n1') == '1'\nassert solution('2\\n1\\n1\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 3046,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\nprint('Passed')\n'''"
    },
    {
        "number": 3046,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n4 7\n9 8\n14 17\n19 18''') == '2\\n1'\nassert solution('''3\n4 8\n9 7\n14 18\n19 17\n''') == '1\\n2'\nassert solution('''2\n4 7\n14 17\n9 8\n19 18\n''') == '1\\n2'\nassert solution('''3\n4 8\n9 7\n14 18\n19 17\n''') == '2\\n1'\nassert solution('''4\n1\n2\n3\n4\n''') == '2\\n3\\n4'\n"
    },
    {
        "number": 3046,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n2\n4 7\n9 8\n14 17\n19 18\n''') == '1'\n\nassert solution(\n'''\n2\n4 7\n9 8\n14 17\n19 18\n''') == '2'\n\nassert solution(\n'''\n2\n9 7\n14 17\n19 18\n''') == '1'\n\nassert solution(\n'''\n2\n9 8\n14 17\n19 18\n''') == '2'\n\nassert solution(\n'''\n2\n9 7\n14 17\n18 19\n''') == '2'"
    },
    {
        "number": 3047,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4 _ _ _\") == \"1\"\nassert solution(\"_ _ _ _ _ _ _ _ _\") == \"1\"\nassert solution(\"_ _ _ _ _ _ _ _ _ _\") == \"1\"\nassert solution(\"_ _ _ _ _ _ _ _ _ _ _\") == \"1\"\nassert solution(\"1 _ _ _ _ _ _ _ _ _ _\") == \"1\"\n"
    },
    {
        "number": 3047,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('_ 90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _') == '1'\nassert solution('85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\\n') == '1'\nassert solution('160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\\n') == '8640'\n\n\"\"\""
    },
    {
        "number": 3047,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution
    },
    {
        "number": 3047,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('_ 90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _') == '1'\nassert solution('85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153') == '1'\nassert solution('160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _') == '8640'\nassert solution('7_ _ _ 9_ _ _ _ _ _ _\\n_ _ _ 5_ _ _ _ _ _ _') =='many'\nassert solution('9_ _ _ 7_ _ _ _ _ _ _\\n_ _ _ 5_ _ _ _ _ _ _') == '1'"
    },
    {
        "number": 3047,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('_ 90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _') == '1'\nassert solution('85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\\n') == '1'\nassert solution('160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\\n') == '8640'"
    },
    {
        "number": 3047,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"_ 90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\\n\") == '1\\n'\nassert solution(\"85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\\n\") == '1\\n'\nassert solution(\"160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\\n\") == '8640\\n'\nassert solution
    },
    {
        "number": 3047,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('_ 90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\\n') == '1\\n'\nassert solution('85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\\n') == '1\\n'\nassert solution('160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\\n') == '8640\\n'\nprint(\"Passed!\")\n"
    },
    {
        "number": 3047,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"_ 90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\\n\") == \"1\"\nassert solution(\"85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\\n\") == \"1\"\nassert solution(\"160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\\n\") == \"8640\"\n"
    },
    {
        "number": 3047,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n_ 90 22 _ 6 _ _ _ _ 81\n_ 40 _ _ _ 12 60 _ 90 _\n\"\"\"\n) == '1'\n\nassert solution(\n    \"\"\"\n85 55 _ 99 51 _ _ _ _ _\n_ _ _ _ _ _ _ 85 63 153\n\"\"\"\n) == '1'\n\nassert solution(\n    \"\"\"\n160 _ _ 136 _ _ _ _ _ 170\n_ _ _ _ 120 _ _ 144 _ _\n\"\"\"\n) == '8640'\n\nprint(solution(input()))\n\n\"\"\"\nThe solution:\n\n1) the idea is to find a consistent solution (have all rows of each element have the same number of items)\n2) the most obvious solution is to have the solution of (5,5,5,5,5,5,5,5,5,5)\n3) the solution is the amount of unique values in the list\n4) the idea is to have a set of unique values (e.g. 5,5,5,5,5)\n5) for each row, from the left to right, we check if the elements are the same\n6) if they are, we are good, otherwise we are bad\n7) we keep track of the unique values with a set, then we increment the counter by 1\n8) we check if the counter is the same as the number of elements\n9) we return the counter\n10) the most obvious solution is (5,5,5,5,5,5,5,5,5,5)\n11) the most obvious solution is 8640\n\nTo verify:\n1) the solution is the amount of unique values in the list\n2) the most obvious solution is 8640\n3) the most obvious solution is 8640\n4) the most obvious solution is 8640\n5) the most obvious solution is 8640\n6) the most obvious solution is 8640\n7) the most obvious solution is 8640\n8) the most obvious solution is 8640\n9) the most obvious solution is 8640\n10) the most obvious solution is 8640\n11) the most obvious solution is 8640\n\"\"\""
    },
    {
        "number": 3047,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('_ 90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _') == '1'\nassert solution('85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153') == '1'\nassert solution('160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _') == '8640'\nassert solution
    },
    {
        "number": 3048,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2\n1 3\n''') == '2'\nassert solution('''5\n2 1\n1 5\n3 1\n4 3\n''') == '8'\nassert solution('''10\n1 2\n2 3\n2 4\n1 5\n3 6\n2 7\n7 8\n5 9\n5 10\n''') == '24'\nprint(\"Passed. <3\")\n"
    },
    {
        "number": 3048,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n1 2\n1 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5\n1 2\n2 3\n3 4\n1 5\n4 5\n\"\"\") == \"8\"\nassert solution(\"\"\"\n10\n2 1\n1 5\n3 1\n4 3\n3 6\n2 7\n7 8\n5 9\n5 10\n9 10\n\"\"\") == \"24\"\nassert solution(\"\"\"\n3\n1 2\n1 3\n3 2\n\"\"\") == \"2\"\n\n\"\"\"\n\nProblem:\n\nThe pokestop is the game where POKEMON can find their way out of the caves in KANTON. There are some small caves that have pits in the middle of them. POKEMON has not discovered these caves yet. When POKEMON enters these caves, he must decide whether he wants to go into the cave or keep searching. He has two options:\n\nGo into the cave: He can enter a cave that has a pit in it and will die instantly and lose all his health.\nKeep searching: He can continue to explore the cave.\nPOKEMON lives in the cave and has a health of 100. He decides that he wants to search the caves. There are several ways to do this. He finds a way to the cave entrance, but he has to take a pit. He can either wait until the end of the cave, or try to climb it. He takes the first option.\n\nHow does POKEMON decide?\n\nThe next day, POKEMON enters the cave and sees that it has a pit in it, but he is not yet dead. He can either wait until the end of the cave, or try to climb the pit. He takes the first option.\n\nHe can climb the pit and then go back to the entrance. Now, POKEMON is dead. He finds a way to the entrance. He uses the last option.\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nNow, POKEMON is dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow can you decide?\n\nPOKEMON is now dead. He finds a way to the entrance. He uses the last option.\n\nHow"
    },
    {
        "number": 3048,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n1 2\\n1 3\\n') == '2'\nassert solution('5\\n2 1\\n1 5\\n3 1\\n4 3\\n') == '8'\nassert solution('10\\n1 2\\n2 3\\n2 4\\n1 5\\n3 6\\n2 7\\n7 8\\n5 9\\n5 10\\n') == '24'\nassert solution('1\\n1\\n') == '1'\n"
    },
    {
        "number": 3048,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3048,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '8'\nassert solution(stdin) == '24'\nassert solution(stdin) == '24'\nassert solution(stdin) == '24'\nassert solution(stdin) == '24'\n"
    },
    {
        "number": 3048,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n1 2\\n1 3\\n') == '2'\nassert solution('5\\n2 1\\n1 5\\n3 1\\n4 3\\n') == '8'\nassert solution('10\\n2 1\\n1 5\\n3 1\\n4 3\\n5 9\\n5 10\\n7 8\\n9 10\\n9 8\\n') == '24'\nassert solution('10\\n2 1\\n1 5\\n3 1\\n4 3\\n5 9\\n5 10\\n7 8\\n9 10\\n9 8\\n2 2\\n2 3\\n3 4\\n1 5\\n1 6\\n2 7\\n5 8\\n7 8\\n9 10\\n') == '48'\nassert solution('10\\n2 1\\n1 5\\n3 1\\n4 3\\n5 9\\n5 10\\n7 8\\n9 10\\n9 8\\n2 2\\n2 3\\n3 4\\n1 5\\n1 6\\n2 7\\n5 8\\n7 8\\n9 10\\n1 9\\n') == '64'\n"
    },
    {
        "number": 3048,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n1 2\n1 3\n2 3''') == '2'\nassert solution('''5\n1 2\n1 3\n1 4\n1 5\n3 1\n3 2\n3 4\n3 5\n4 3\n4 5\n5 3\n5 4\n5 5''') == '24'\nassert solution('''10\n1 2\n2 3\n2 4\n1 5\n3 1\n3 2\n3 4\n3 5\n4 3\n4 5\n5 3\n5 4\n5 5''') == '24'\nassert solution('''10\n1 2\n2 3\n2 4\n1 5\n3 1\n3 2\n3 4\n3 5\n4 3\n4 5\n5 3\n5 4\n5 5''') == '24'\nassert solution('''10\n1 2\n2 3\n2 4\n1 5\n3 1\n3 2\n3 4\n3 5\n4 3\n4 5\n5 3\n5 4\n5 5''') == '24'\n"
    },
    {
        "number": 3048,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n1 2\n1 3\n2 1\n''') == '2'\n\nassert solution('''\n5\n1 2\n2 3\n2 4\n1 5\n3 1\n''') == '8'\n\nassert solution('''\n10\n1 2\n2 3\n2 4\n1 5\n3 1\n4 3\n2 7\n7 8\n5 9\n5 10\n''') == '24'\n\nassert solution('''\n3\n1 2\n1 3\n3 1\n''') == '2'\n\nassert solution('''\n4\n2 1\n2 3\n1 2\n3 1\n''') == '6'"
    },
    {
        "number": 3048,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == ''"
    },
    {
        "number": 3048,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\\n\") == \"1\"\nassert solution(\"1\\n2\\n\") == \"2\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"24\"\nprint(\"Passed\")\n"
    },
    {
        "number": 3049,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('a') == ''\nassert solution('123456789') == ''\nassert solution('aaaaaaaaa') == ''\nassert solution('1234567890123456789') == ''\n"
    },
    {
        "number": 3049,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('secretmessage') == 'essa'\nassert solution('boot') == 'appa'\nassert solution('treetreetreetree') == 'tttt'\nassert solution('wood') == 'tt'\nassert solution('oranges') == ''\n"
    },
    {
        "number": 3049,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''secretmessage\nboot\n''') == 'essa'\nassert solution(\n'''treetreetreetree\nwood\n''') == 'apples'\nassert solution(\n'''oranges\napples\n''') == '0'"
    },
    {
        "number": 3049,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('secretmessage') == 'essa'\nassert solution('boot') == 'essa'\nassert solution('treetreetreetree') == 'treetreetree'\nassert solution('wood') == 'wood'\nassert solution('oranges') == '0'\n"
    },
    {
        "number": 3049,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(solution.__doc__) == ''\n"
    },
    {
        "number": 3049,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('secretmessage') == 'essa'\nassert solution('boot') == 'appa'\nassert solution('treetreetreetree') == 'oooo'\nassert solution('wood') == ''\nassert solution('oranges') == ''\n"
    },
    {
        "number": 3049,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"secretmessage\") == \"essa\"\nassert solution(\"treetreetreetree\") == \"wood\"\nassert solution(\"oranges\") == \"0\"\nassert solution(\"apples\") == \"3\"\n\"\"\"\n"
    },
    {
        "number": 3049,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(sample1) == \"essa\"\nassert solution(sample2) == \"3\"\nassert solution(sample3) == \"0\"\n\nassert solution(sample4) == \"5\"\nassert solution(sample5) == \"4\"\n"
    },
    {
        "number": 3049,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('secretmessage') == 'essa'\nassert solution('boot') == 'essa'\nassert solution('treetreetreetree') == 't'\nassert solution('wood') == ''\nassert solution('oranges') == '0'\n"
    },
    {
        "number": 3049,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('secretmessage') == 'essa'\nassert solution('treetreetreetree') == 'apples'\nassert solution('oranges') == '0'\nassert solution('apples') == '0'\nassert solution('shadha') == 'treetreetreetree'\n"
    },
    {
        "number": 3050,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n6\n>^<^\n######\n"
    },
    {
        "number": 3050,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\">^^<\") == '1'\nassert solution(\"<^>v\") == '4'\nassert solution(\"<^v^>\") == '2'\nassert solution(\"<v^v^v>\") == '3'\nassert solution(\"<<<\") == '1'\n"
    },
    {
        "number": 3050,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6') == '1'\nassert solution('>^<^') == '2'\nassert solution('>^<^>^<^') == '1'\nassert solution('v<^>v<^>v<^>v<^>') == '1'\nassert solution('<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v"
    },
    {
        "number": 3050,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n6\n^<^\n######\n"
    },
    {
        "number": 3050,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\">v<\") == \"1\"\nassert solution(\"^>v<\") == \"2\"\nassert solution(\"^v^v<\") == \"1\"\nassert solution(\"<v^v<\") == \"2\"\nassert solution(\"<><\") == \"1\"\n"
    },
    {
        "number": 3050,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '1'\n'''\n\nimport sys"
    },
    {
        "number": 3050,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('<><') == ''\nassert solution('^>v<v<') == ''\nassert solution('^vv<v') == 1\nassert solution('<^<^') == 1\n"
    },
    {
        "number": 3050,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6\n>^<^\n######\n"
    },
    {
        "number": 3050,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\">^v<\") == \"1\"\nassert solution(\">v<\") == \"2\"\nassert solution(\">^<\") == \"4\"\nassert solution(\">^<^>^<^\") == \"1\"\nassert solution(\"<>^<\") == \"2\"\n"
    },
    {
        "number": 3050,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n><^\\n>^<\\n>^') == '1\\n'\nassert solution('3\\n<^<\\n><\\n><\\n>^>\\n') == '2\\n'\nassert solution('3\\n^<\\n><\\n><\\n>^\\n') == '1\\n'\nassert solution('3\\n><\\n><\\n><\\n>^\\n') == '1\\n'\nassert solution('3\\n><\\n><\\n><\\n>^\\n') == '1\\n'\n"
    },
    {
        "number": 3051,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n2\n2 3 0 2 9 2 3 0\n1 6 1 4 6 3 -1 -2\n''') == '3'\nassert solution('''\n3\n4 0 0 10 10 1 15 0\n3 5 50 55 8 1 -16 2\n3 10 7 10 4 1 8 -1\n''') == '6'\nassert solution('''\n3\n7 0 0 20 10 3 0 10\n10 1 0 2 5 2 2 7\n3 10 7 10 4 1 8 -1\n''') == '11'\nassert solution('''\n2\n7 0 0 30 10 3 0 10\n10 1 0 2 5 2 2 7\n''') == '11'\nassert solution('''\n2\n7 0 0 30 10 3 0 10\n10 1 0 2 5 2 2 7\n10 1 0 2 5 2 2 7\n''') == '11'\n"
    },
    {
        "number": 3051,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''2\n2 3 0 2 9 2 3 0\n1 6 1 4 6 3 -1 -2''') == \"3\"\nassert solution(\n'''3\n4 0 0 10 10 1 15 0\n3 5 50 55 8 1 -16 2\n3 10 7 10 4 1 8 -1\nSample Output 3''') == \"6\"\nassert solution(\n'''7\n4 0 0 10 10 1 15 0\n3 5 50 55 8 1 -16 2\n3 10 7 10 4 1 8 -1\nSample Output 3''') == \"11\"\nassert solution(\n'''7\n4 0 0 10 10 1 15 0\n3 5 50 55 8 1 -16 2\n3 10 7 10 4 1 8 -1\n4 0 0 10 10 1 15 0\n3 5 50 55 8 1 -16 2\n3 10 7 10 4 1 8 -1\nSample Output 3''') == \"6\"\nassert solution(\n'''7\n4 0 0 10 10 1 15 0\n3 5 50 55 8 1 -16 2\n3 10 7 10 4 1 8 -1\n4 0 0 10 10 1 15 0\n3 5 50 55 8 1 -16 2\n3 10 7 10 4 1 8 -1\nSample Output 3''') == \"6\"\n"
    },
    {
        "number": 3051,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\\n') == '3'\nassert solution('3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n') == '6'\nassert solution('4\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n') == '11'\n"
    },
    {
        "number": 3051,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\") == \"3\"\nassert solution(\"2\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\") == \"6\"\nassert solution(\"2\\n7 0 0 20 10 3 0 10\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\") == \"11\"\n\"\"\"\n"
    },
    {
        "number": 3051,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\") == \"3\"\nassert solution(\"3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\") == \"6\"\nassert solution(\"7\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\") == \"11\"\n"
    },
    {
        "number": 3051,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n2 3 0 2 9 2 3 0\n1 6 1 4 6 3 -1 -2\n''') == '3'\n\nassert solution('''3\n4 0 0 10 10 1 15 0\n3 5 50 55 8 1 -16 2\n3 10 7 10 4 1 8 -1\n''') == '6'\n\nassert solution('''5\n2 0 0 10 10 1 15 0\n3 5 50 55 8 1 -16 2\n3 10 7 10 4 1 8 -1\n3 1 0 2 5 2 2 7\n3 1 1 2 5 2 2 7\n''') == '11'\n\nassert solution('''6\n2 0 0 10 10 1 15 0\n3 5 50 55 8 1 -16 2\n3 10 7 10 4 1 8 -1\n3 1 0 2 5 2 2 7\n3 1 1 2 5 2 2 7\n3 1 1 2 5 2 2 7\n''') == '12'\n\nassert solution('''7\n2 0 0 10 10 1 15 0\n3 5 50 55 8 1 -16 2\n3 10 7 10 4 1 8 -1\n3 1 0 2 5 2 2 7\n3 1 1 2 5 2 2 7\n3 1 1 2 5 2 2 7\n3 1 1 2 5 2 2 7\n''') == '15'"
    },
    {
        "number": 3051,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n"
    },
    {
        "number": 3051,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3051,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(open('inputs/ex5.txt').read()) == '16'\n\"\"\"\n"
    },
    {
        "number": 3051,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\\n\"\n) == \"3\"\n\nassert solution(\n    \"2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\\n\"\n) == \"3\"\n\nassert solution(\n    \"2\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n\"\n) == \"6\"\n\nassert solution(\n    \"3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n\"\n) == \"11\"\n\nassert solution(\n    \"2\\n7 0 0 20 10 3 0 10\\n10 1 0 2 5 2 2 7\\n3 10 7 10 4 1 8 -1\\n\"\n) == \"11\""
    },
    {
        "number": 3052,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2.5 1 1 0.5\\n1\\n0.5 0.5 0.5 0.5\\n1\\n0.5 0.5 0.5 0.5') == '3.7320508076'\nassert solution('3.5 1 1 1.5\\n1\\n0.5 0.5 0.5 1.5\\n1\\n0.5 0.5 1.5 1.5\\n1\\n1.5 1.5 1.5 1.5') == '8.8441466285'\nassert solution('3.5 1 1 1.5\\n1\\n0.5 0.5 0.5 1.5\\n1\\n0.5 1.5 1.5 1.5\\n1\\n1.5 1.5 1.5 1.5') == '8.8441466285'\nassert solution('3.5 1 1 1.5\\n1\\n0.5 0.5 0.5 1.5\\n1\\n1.5 1.5 1.5 1.5\\n1\\n1.5 1.5 1.5 1.5') == '8.8441466285'\nassert solution('3.5 1 1 1.5\\n1\\n0.5 0.5 0.5 1.5\\n1\\n0.5 1.5 1.5 1.5\\n1\\n1.5 1.5 1.5 1.5') == '8.8441466285'\n"
    },
    {
        "number": 3052,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == \"168.7916512460\\n\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == \"163.5274740179\\n\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\\n\") == \"3.7320508076\\n\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == \"163.5274740179\\n\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == \"163.5274740179\\n\"\n"
    },
    {
        "number": 3052,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 80.0''') == '168.7916512460'\nassert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 100.0''') == '163.5274740179'\nassert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 0.0''') == '3.7320508076'\nassert solution('''1.0 1.0 4.0 1.0\n1\n0.0 0.0 4.0 0.0\n2.0 2.0 4.0 2.0\n3.0 3.0 4.0 3.0\n4.0 4.0 4.0 4.0\n5.0 5.0 4.0 4.0\n6.0 6.0 4.0 4.0\n7.0 7.0 4.0 4.0\n8.0 8.0 4.0 4.0\n9.0 9.0 4.0 4.0\n10.0 10.0 4.0 4.0\n11.0 11.0 4.0 4.0\n12.0 12.0 4.0 4.0\n13.0 13.0 4.0 4.0\n14.0 14.0 4.0 4.0\n15.0 15.0 4.0 4.0\n16.0 16.0 4.0 4.0\n17.0 17.0 4.0 4.0\n18.0 18.0 4.0 4.0\n19.0 19.0 4.0 4.0\n20.0 20.0 4.0 4.0\n21.0 21.0 4.0 4.0\n22.0 22.0 4.0 4.0\n23.0 23.0 4.0 4.0\n24.0 24.0 4.0 4.0\n25.0 25.0 4.0 4.0\n26.0 26.0 4.0 4.0\n27.0 27.0 4.0 4.0\n28.0 28.0 4.0 4.0\n29.0 29.0 4.0 4.0\n30.0 30.0 4.0 4.0\n31.0 31.0 4.0 4.0\n32.0 32.0 4.0 4.0\n33.0 33.0 4.0 4.0\n34.0 34.0 4.0 4.0\n35.0 35.0 4.0 4.0\n36.0 36.0 4.0 4.0\n37.0 37.0 4.0 4.0\n38.0 38.0 4.0 4.0\n39.0 39.0 4.0 4.0\n40.0 40.0 4.0 4.0\n41.0 41.0 4.0 4.0\n42.0 42.0 4.0 4.0\n43.0 43.0 4.0 4.0\n44.0 44.0 4.0 4.0\n45.0 45.0 4.0 4.0\n46.0 46.0 4.0 4.0\n47.0 47.0 4.0 4.0\n48.0 48.0 4.0 4.0\n49.0 49.0 4.0 4.0\n50.0 50.0 4.0 4.0\n51.0 51.0 4.0 4.0\n52.0 52.0 4.0 4.0\n53.0 53.0 4.0 4.0\n54.0 54.0 4.0 4.0\n55.0 55.0 4.0 4.0\n56.0 56.0 4.0 4.0\n57.0 57.0 4.0 4.0\n58.0 58.0 4.0 4.0\n59.0 59.0 4.0 4.0\n60.0 60.0 4.0 4.0\n61.0 61.0 4.0 4.0\n62.0 62.0 4.0 4.0\n63.0 63.0 4.0 4.0\n64.0 64.0 4.0 4.0\n65.0 65.0 4.0 4.0\n66.0 66.0 4.0 4.0\n67.0 67.0 4.0 4.0\n68.0 68.0 4.0 4.0\n69.0 69.0 4.0 4.0\n70.0 70.0 4.0 4.0\n71.0 71.0 4.0 4.0\n72.0 72.0 4.0 4.0\n73.0 73.0 4.0 4.0\n74.0 74.0 4.0 4.0\n75.0 75.0 4.0 4.0\n76.0 76.0 4.0 4.0\n77.0 77.0 4.0 4.0\n78.0 78"
    },
    {
        "number": 3052,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == \"168.7916512460\\n\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == \"163.5274740179\\n\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\\n\") == \"3.7320508076\\n\"\nassert solution(\"1.0 0.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\\n\") == \"3.7320508076\\n\"\nassert solution(\"1.0 0.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\\n\") == \"163.5274740179\\n\"\n"
    },
    {
        "number": 3052,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0.0 1.0 4.0 1.0\") == \"3.7320508076\"\nassert solution(\"60.0 0.0 50.0 170.0\") == \"168.7916512460\"\nassert solution(\"0.0 1.0 4.0 1.0\") == \"163.5274740179\"\nassert solution(\"60.0 0.0 50.0 170.0\") == \"168.7916512460\"\nassert solution(\"0.0 1.0 4.0 1.0\") == \"163.5274740179\"\n"
    },
    {
        "number": 3052,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == \"168.7916512460\"\nassert solution(\n    \"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == \"163.5274740179\"\nassert solution(\n    \"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == \"163.5274740179\"\n"
    },
    {
        "number": 3052,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 100.0''') == '168.7916512460'\nassert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 80.0''') == '163.5274740179'\nassert solution('''0.0 1.0 4.0 1.0\n1\n0.0 0.0 4.0 0.0\nSample Output 3:\n3.7320508076\n''') == '3.7320508076'\nassert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 100.0\nSample Output 2:\n163.5274740179\n''') == '163.5274740179'\nassert solution('''0.0 1.0 4.0 1.0\n1\n0.0 0.0 4.0 0.0\nSample Output 3:\n3.7320508076\n''') == '3.7320508076'\n"
    },
    {
        "number": 3052,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('60.0 0.0 50.0 170.0') == '168.7916512460'\nassert solution('60.0 0.0 50.0 170.0') == '168.7916512460'\nassert solution('60.0 0.0 50.0 170.0') == '168.7916512460'\nassert solution('60.0 0.0 50.0 170.0') == '168.7916512460'\nassert solution('60.0 0.0 50.0 170.0') == '168.7916512460'\n"
    },
    {
        "number": 3052,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 80.0\"\"\") == \"168.7916512460\"\nassert solution(\n\"\"\"60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 100.0\"\"\") == \"163.5274740179\"\nassert solution(\n\"\"\"0.0 1.0 4.0 1.0\n1\n0.0 0.0 4.0 0.0\n\"\"\") == \"3.7320508076\"\nassert solution(\n\"\"\"60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 100.0\"\"\") == \"168.7916512460\"\nassert solution(\n\"\"\"60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 100.0\"\"\") == \"163.5274740179\"\n"
    },
    {
        "number": 3052,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3053,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 5 3''') == 'rarity'\nassert solution('''9 8 1''') == 'canterlot'\nassert solution('''5 3 5''') =='madam'\nassert solution('''3 2 1''') == 'IMPOSSIBLE'\nassert solution('''6 6 4''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3053,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 3053,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 5 3') == 'rarity'\nassert solution('9 8 1') == 'canterlot'\nassert solution('5 3 5') =='madam'\n\"\"\"\n\n\"\"\"\nAlgorithm:\n1. Let N be the length of the string, K be the number of distinct characters in the string, and P be the length of the longest palindromic substring.\n2. Let T be the string made of all lowercase English letters, of length N.\n3. For each character A in the string S, let its position in T be its index: i.\n4. We have T[0], T[1],..., T[i-1], T[i], T[i+1],..., T[N-2], T[N-1]. We start with i = N-1, because if the string S starts with A, the index of A is i = N-1, the last index of T.\n5. Let R be the set of all strings in T with length P. Let L be the set of all strings in T with length i-1.\n6. If i is the index of a character A in the string S, let R be the set of all strings in T with length P-1 containing A, excluding A. Let L be the set of all strings in T with length i-2.\n7. If A is the only character in the string S, we have:\n    - R is the set of all strings in T with length P-1\n    - L is the set of all strings in T with length i-3\n8. If A is not the only character in the string S, let R be the set of all strings in T with length P-1 containing A and all other characters in the string S. Let L be the set of all strings in T with length i-2.\n9. If A is not the only character in the string S, let R be the set of all strings in T with length P-1 containing A and all other characters in the string S. Let L be the set of all strings in T with length i-1.\n10. T[i-1], T[i], T[i+1],..., T[N-2], T[N-1] is a palindrome.\n\n\"\"\"\n\nfrom math import ceil, sqrt\n"
    },
    {
        "number": 3053,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(open('./test_files/Y11R5P1/A.in').read()) == \"rarity\"\nassert solution(open('./test_files/Y11R5P1/B.in').read()) == \"canterlot\"\nassert solution(open('./test_files/Y11R5P1/C.in').read()) == \"madam\"\nassert solution(open('./test_files/Y11R5P1/D.in').read()) == \"impossible\"\nassert solution(open('./test_files/Y11R5P1/E.in').read()) == \"impossible\"\n"
    },
    {
        "number": 3053,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 5 3') == 'rarity'\nassert solution('9 8 1') == 'canterlot'\nassert solution('5 3 5') =='madam'\nassert solution('1 1 1') == 'IMPOSSIBLE'\nassert solution('1 1 5') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3053,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3053,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6 5 3''') == 'rarity'\nassert solution('''9 8 1''') == 'canterlot'\nassert solution('''5 3 5''') =='madam'\n\nprint('Testcases passed')\n"
    },
    {
        "number": 3053,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3 2') == 'canterlot'\nassert solution('1 1 2') == 'IMPOSSIBLE'\nassert solution('1 1 2') == 'canterlot'\nassert solution('1 1 2') == 'IMPOSSIBLE'\nassert solution('1 1 2') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3053,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6 5 3') == 'rarity'\nassert solution('9 8 1') == 'canterlot'\nassert solution('5 3 5') =='madam'"
    },
    {
        "number": 3053,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 'IMPOSSIBLE'\nassert solution('abc') == 'abc'\nassert solution('a') == 'a'\nassert solution('abcd') == 'abcd'\nassert solution('aabcd') == 'aabcd'\n"
    },
    {
        "number": 3054,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"Blue Ridge mountain road.\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\t\\t\\t\"\n    \"\\n\\n\\n\"\n    \"\\"
    },
    {
        "number": 3054,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia. ') == \"Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.\"\nassert solution('Who would know if we had too few syllables?') == \"Who would know if we had too few syllables?\"\nassert solution('I mean, what we think, we become; what we think, we become; -- are the same, I mean, what we think, we become? ') == \"I mean, what we think, we become; what we think, we become; -- are the same, I mean, what we think, we become?\"\nassert solution('Attention! Test! Test! Test!!!') == \"Attention! Test! Test! Test!\"\nassert solution('Attention! Test! Test! Test!!!') == \"Attention! Test! Test! Test!\"\n"
    },
    {
        "number": 3054,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.') == \\\n    'Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.'\nassert solution('They found out the phrase is not haiku.') == 'They found out the phrase is not haiku.'\nassert solution('Alice likes playing with dolls,\\nShe dislikes going to concerts with M.L.M.D.\\nShe also likes eating ice cream.') == \\\n    'Alice likes playing with dolls,\\nShe dislikes going to concerts with M.L.M.D.\\nShe also likes eating ice cream.'\nassert solution('Watermelon is delicious,\\nI like it but I am not.\\nIt is my favorite dish to use for breakfast.') == \\\n    'Watermelon is delicious,\\nI like it but I am not.\\nIt is my favorite dish to use for breakfast.'\nassert solution('A haiku is a three-line poem in which the first and third lines contain $5$ syllables each, and the second line contains $7$ syllables.') == \\\n    'A haiku is a three-line poem in which the first and third lines contain $5$ syllables each, and the second line contains $7$ syllables.'\n"
    },
    {
        "number": 3054,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"Blue\nRidge\nMoun\nt\nri\nde\nd\no\nu\nn\nd\n!\nt\nu\n\nt\ne\nt\nr\ne\ni\n\nr\ny\nu\n\nh\ne\nv\na\nn\nt\ni\nn\ns\n\"\"\") == \"\"\"Blue\nRidge\nMoun\nt\nri\nde\nd\no\nu\nn\nd\n!\nt\nu\n\nt\ne\nt\nr\ne\ni\n\nr\ny\nu\n\nh\ne\nv\na\nn\nt\ni\nn\ns\n\"\"\""
    },
    {
        "number": 3054,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('a') == ''\nassert solution('a ') == ''\nassert solution('a '*9) == 'a '*9\nassert solution('a'*9) == 'a'*9\nassert solution('a '*5 + 'b') == 'a '*5 + 'b'\n"
    },
    {
        "number": 3054,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"Blue Ridge mountain road.\\n\"\n\"\\n\"\n\"Leaves, glowing in autumn sun,\\n\"\n\"fall in Virginia.\\n\"\n) == (\n\"Blue Ridge mountain road.\\n\"\n\"\\n\"\n\"Leaves, glowing in autumn sun,\\n\"\n\"fall in Virginia.\\n\"\n)\nassert solution(\n\"This was a pretty good course.\\n\"\n\"\\n\"\n\"Although we have a pretty good course.\\n\"\n\"\\n\"\n) == (\n\"This was a pretty good course.\\n\"\n\"\\n\"\n\"Although we have a pretty good course.\\n\"\n\"\\n\"\n)\nassert solution(\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n) == (\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n)\nassert solution(\n\"This was a pretty good course.\\n\"\n\"\\n\"\n\"Although we have a pretty good course.\\n\"\n\"\\n\"\n) == (\n\"This was a pretty good course.\\n\"\n\"\\n\"\n\"Although we have a pretty good course.\\n\"\n\"\\n\"\n)\nassert solution(\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines of poetry.\\n\"\n\"\\n\"\n\"You cannot make a haiku from the lines"
    },
    {
        "number": 3054,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('Blue Ridge mountain road.\\n\\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t"
    },
    {
        "number": 3054,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('Blue\\nRidge\\nmountain\\nroad\\n.\\n\\nLeaves, glowing in\\nautumn\\nsun,\\nfall\\nin\\nVirginia.\\n') == \"\"\"Blue Ridge mountain road.\n\nLeaves, glowing in autumn sun,\nfall in Virginia.\n\"\"\"\nassert solution('I am the\\nUncle\\nWhat?\\n') == \"\"\"I am the\nUncle\nWhat?\n\"\"\"\nassert solution('I\\n!\\n!?\\n!?\\n') == \"\"\"I\n!\n!\n!\n\"\"\"\nassert solution('\\n'.join(['w\\n' * 7, 'h\\n' * 5, 'e\\n' * 3, '!\\n', '!\\n', 'Y\\n', 'e\\n', 'h\\n', 'u\\n', '!\\n', 'w\\n', 'e\\n', '!\\n', 'w\\n', 'r\\n', 'i\\n', 'd\\n', '!\\n', '!\\n', 'a\\n', 'b\\n', '!\\n', 'Y\\n', 'e\\n', 'h\\n', 'u\\n', '!\\n', 'w\\n', 'e\\n', '!\\n', 'w\\n', 'r\\n', 'i\\n', 'd\\n', '!\\n', '!\\n', 'a\\n', 'b\\n', '!\\n', 'Y\\n', 'e\\n', 'h\\n', 'u\\n', '!\\n', 'w\\n', 'e\\n', '!\\n', 'w\\n', 'r\\n', 'i\\n', 'd\\n', '!\\n', '!\\n', 'a\\n', 'b\\n', '!\\n', 'Y\\n', 'e\\n', 'h\\n', 'u\\n', '!\\n', 'w\\n', 'e\\n', '!\\n', 'w\\n', 'r\\n', 'i\\n', 'd\\n', '!\\n', '!\\n', 'a\\n', 'b\\n', '!\\n', 'Y\\n', 'e\\n', 'h\\n', 'u\\n', '!\\n', 'w\\n', 'e\\n', '!\\n', 'w\\n', 'r\\n', 'i\\n', 'd\\n', '!\\n', '!\\n', 'a\\n', 'b\\n', '!\\n', 'Y\\n', 'e\\n', 'h\\n', 'u\\n', '!\\n', 'w\\n', 'e\\n', '!\\n', 'w\\n', 'r\\n', 'i\\n', 'd\\n', '!\\n', '!\\n', 'a\\n', 'b\\n', '!\\n', 'Y\\n', 'e\\n', 'h\\n', 'u\\n', '!\\n', 'w\\n', 'e\\n', '!\\n', 'w\\n', 'r\\n', 'i\\n', 'd\\n', '!\\n', '!\\n', 'a\\n', 'b\\n', '!\\n', 'Y\\n', 'e\\n', 'h\\n', 'u\\n', '!\\n', 'w\\n', 'e\\n', '!\\n', 'w\\n', 'r\\n', 'i\\n', 'd\\n', '!\\n', '!\\n', 'a\\n', 'b\\n', '!\\n', 'Y\\n', 'e\\n', 'h\\n', 'u\\n', '!\\n', 'w\\n', 'e\\n', '!\\n', 'w\\n', 'r\\n', 'i\\n', 'd\\n', '!\\n', '!\\n', 'a\\n', 'b\\n', '!\\n', 'Y\\n', 'e\\n', 'h\\n', 'u\\n', '!\\n', 'w\\n', 'e\\n', '!\\n', 'w\\n', 'r\\n', 'i\\n', 'd\\n', '!\\n', '!\\n', 'a\\n', 'b\\n', '!\\n', 'Y\\n', 'e\\n', 'h\\n', 'u\\n', '!\\n', 'w\\n', 'e\\n', '!\\n', 'w\\n', 'r\\n', 'i\\n', 'd\\n"
    },
    {
        "number": 3054,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia. ') == \\\n    ['Blue Ridge','mountain', 'road', '.', 'Leaves', ',', 'glowing', 'in', 'autumn','sun', '', 'fall', 'in', 'Virginia
    },
    {
        "number": 3054,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('Blue') == 'Blue'\nassert solution('r') == 'r'\nassert solution('w') == 'w'\nassert solution('e') == 'e'\nassert solution('i') == 'i'\n"
    },
    {
        "number": 3055,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''2\nThoreHusfeldt\nThoreHusfeldt''') == 'ThoreH'\nassert solution(\n'''2\nThoreHusfeldt\nJohanSannemo''') == 'Thore'\nassert solution(\n'''2\nThoreHusfeldt\nJohanSannemo''') == 'Thore sucks'\nassert solution(\n'''2\nThoreHusfeldt\nThoreHusfeldt''') == 'ThoreH'\nassert solution(\n'''2\nThoreHusfeldt\nJohanSannemo''') == 'Thore'\n"
    },
    {
        "number": 3055,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\nThoreHusfeldt\\nThoreHusfeldt\\n') == 'ThoreH'\nassert solution('3\\nThoreHusfeldt\\nJohanSannemo\\n') == 'Thore is awesome'\nassert solution('4\\nThoreHusfeldt\\nJohanSannemo\\nThoreHusfeldt\\n') == 'ThoreH'\nassert solution('3\\nThoreHusfeldt\\nJohanSannemo\\nThoreHusfeldt\\n') == 'Thore sucks'\nassert solution('4\\nThoreHusfeldt\\nJohanSannemo\\nThoreHusfeldt\\nJohanSannemo\\n') == 'ThoreH'\n"
    },
    {
        "number": 3055,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\nThoreTiemann\\nThoreHusfeldt') == 'ThoreH'\nassert solution('2\\nThoreHusfeldt\\nJohanSannemo') == 'Thore is awesome'\nassert solution('2\\nThoreHusfeldt\\nThoreHusfeldt') == 'Thore is awesome'\nassert solution('2\\nThoreHusfeldter\\nThoreHusfeldt') == 'Thore is awesome'\nassert solution('2\\nThoreHusfeldter\\nJohanSannemo') == 'Thore sucks'\n"
    },
    {
        "number": 3055,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\nThoreTiemann\nThoreHusfeldt''') == 'ThoreH'\nassert solution('''2\nThoreHusfeldt\nJohanSannemo''') == 'Thore is awesome'\nassert solution('''2\nThoreHusfeldt\nThoreHusfeldt''') == 'Thore sucks'\nassert solution('''2\nThoreHusfeldt\nThoreHusfeldt''') == 'Thore is awesome'\nassert solution('''100\nThoreHusfeldt\nJohanSannemo\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nJohanSannemo\nThoreHusfeldt\nJohanSannemo\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\n"
    },
    {
        "number": 3055,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\nThoreHusfeldt\\nThoreHusfeldt\\n\") == \"ThoreH\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\\n\") == \"Thore is awesome\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\\nThoreHusfeldt\\n\") == \"Thore sucks\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\\nThoreHusfeldt\\nJohanSannemo\\n\") == \"Thore sucks\"\nassert solution(\"1\\nThoreHusfeldt\\nThoreHusfeldt\\n\") == \"ThoreH\"\n\"\"\""
    },
    {
        "number": 3055,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''2\nThoreTiemann\nThoreHusfeldt'''\n) == 'ThoreH'\n\nassert solution(\n'''2\nThoreHusfeldt\nJohanSannemo'''\n) == 'Thore is awesome'\n\nassert solution(\n'''2\nThoreHusfeldt\nThoreHusfeldt'''\n) == 'Thore sucks'\n"
    },
    {
        "number": 3055,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\nThoreTiemann\\nThoreHusfeldt') == 'ThoreH'\nassert solution('2\\nJohanSannemo\\nThoreHusfeldt') == 'Thore is awesome'\nassert solution('2\\nJohanSannemo\\nJohanSannemo') == 'Thore is awesome'\nassert solution('2\\nThoreHusfeldt\\nThoreHusfeldt') == 'Thore is awesome'\nassert solution('2\\nThoreHusfeldt\\nJohanSannemo') == 'Thore sucks'\n"
    },
    {
        "number": 3055,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"2\nThoreTiemann\nThoreHusfeldt\"\"\") == \"ThoreH\"\nassert solution(\"\"\"2\nThoreHusfeldt\nJohanSannemo\"\"\") == \"Thore is awesome\"\nassert solution(\"\"\"2\nThoreHusfeldter\nThoreHusfeldt\"\"\") == \"Thore sucks\"\nassert solution(\"\"\"100\ncAdoGuOtiKW4lyeLsHfvVrVfrFdNhVn7Wv1oMVc6dYXoeWZPv3sQxV2JyXI3qWJXeAt0DqGnuxrUWb3LJIiKXUeHGqA8YqR4wSvWXA7pmGfk6Yg0sjypMbx49qkqmUMKHdmY9jRr2zjC2uCkFqk3My7qgFQaYQYg7eRkYmFkKtC1n52YQ0Z1bO7o1SZzO0J1_nOQo_3AQG9wEuwXwLxPtwtrZJJnVbHBNV1i1ShyYHqc8XuTCXA6QN0wfJf5aA5d2QCQ3YVdVWfDvgWXtH5eNv4VNk7kzD6UzO0wJ2QiN3kdT1G_dM4HTs0omrLWj9_kf-tZu4HLTgUZ28zTKfYQeMlRxS_TmXgXCi3ZzhTF4o9TkJf3DqHxRmy2mfZj4Z4pM_Nfk0Fk0Ib5p0UgKPbV2Y0vKf5N9gFqwgQ5fOtq9p3a6Rn3gpP4puzN_5lvs_zC48m0VYW2W5yWbWxXcWzXB3_sm4Kf0qOZpvvE6t-TJy3hS0lY3aYx_5hyrKbqmW0xX0WcW9WgW4W3_L3Kf0qOZpvvE6t-TJy3hS0lY3aYx_5hyrKbqmW0xX0WcW9WgW4W3_L3Kf0qOZpvvE6t-TJy3hS0lY3aYx_5hyrKbqmW0xX0WcW9WgW4W3_L3Kf0qOZpvvE6t-TJy3hS0lY3aYx_5hyrKbqmW0xX0WcW9WgW4W3_L3Kf0qOZpvvE6t-TJy3hS0lY3aYx_5hyrKbqmW0xX0WcW9WgW4W3_L3Kf0qOZpvvE6t-TJy3hS0lY3aYx_5hyrKbqmW0xX0WcW9WgW4W3_L3Kf0qOZpvvE6t-TJy3hS0lY3aYx_5hyrKbqmW0xX0WcW9WgW4W3_L3Kf0qOZpvvE6t-TJy3hS0lY3aYx_5hyrKbqmW0xX0WcW9WgW4W3_L3Kf0qOZpvvE6t-TJy3hS0lY3aYx_5hyrKbqmW0xX0WcW9WgW4W3_L3Kf0qOZpvvE6t-TJy3hS0lY3aYx_5hyrKbqmW0xX0WcW9WgW4W3_L3Kf0qOZpvvE6t-TJy3hS0lY3aYx_5hyrKbqmW0xX0WcW9WgW4W3_L3Kf0qOZpvvE6t-TJy3hS0lY3aYx_5hyrKbqmW0xX0WcW9WgW4W3_L3Kf0qOZpvvE6t-TJy3hS0lY3aYx_5hyrKbqmW0xX0WcW9WgW4W3_L3Kf0qOZpvvE6t-TJy3hS0lY3aYx_5hyrKbqmW0xX0WcW9WgW4W3_L3Kf0qOZpvvE6t-TJy3hS0lY3aYx_5hyrKbqmW0xX0WcW9WgW4W3_L3Kf0qOZpvvE6t-TJy3hS0lY3aYx_5hyrKbqmW0xX0WcW9WgW4W3_L3Kf0qOZpvvE6t-TJy3hS0lY3aYx_5hyrKbqmW0xX0WcW9WgW4W3_L3Kf0qOZpvvE6t-TJy3hS0lY3aYx_5hyrKbqmW0xX0WcW9WgW4W3_L3Kf0qOZpvvE6t"
    },
    {
        "number": 3055,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\nThoreTiemann\nThoreHusfeldt''') == 'ThoreH'\nassert solution('''2\nThoreHusfeldt\nJohanSannemo''') == 'ThoreH'\nassert solution('''2\nThoreHusfeldt\nJohanSannemo''') == 'ThoreH'\nassert solution('''2\nThoreHusfeldt\nThoreHusfeldt''') == 'ThoreH'\nassert solution('''2\nThoreHusfeldt\nThoreHusfeldt''') == 'ThoreH'\n"
    },
    {
        "number": 3055,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n\"\"\""
    },
    {
        "number": 3056,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('P*P') == 6\nassert solution('L*R') == 25\nassert solution('**') == 33\nassert solution('L*L') == 0\nassert solution('L*LRL*RLL') == 9\n"
    },
    {
        "number": 3056,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('P*P') == 6\nassert solution('L*R') == 25\nassert solution('**') == 33\nprint(\"All test cases passed successfully.\")\n"
    },
    {
        "number": 3056,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"PP\") == 2\nassert solution(\"LR\") == 5\nassert solution(\"PPLL\") == 5\nassert solution(\"RL\") == 5\nassert solution(\"RLLR\") == 8\n"
    },
    {
        "number": 3056,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3056,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') is None\nassert solution('*') is None\nassert solution('PPPP') is None\nassert solution('P*PP') is None\nassert solution('PPP') is None\n"
    },
    {
        "number": 3056,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"PP*PP\") == 6\nassert solution(\"PP**\") == 33\nassert solution(\"**\") == 33\nassert solution(\"L*R\") == 25\nassert solution(\"**L*R\") == 33\n"
    },
    {
        "number": 3056,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('P*P') == 6\nassert solution('L*R') == 25\nassert solution('**') == 33\nassert solution('*L*R') == 60\nassert solution('L**R') == 120\n"
    },
    {
        "number": 3056,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(L*R) == 25\nassert solution(P*P) == 6\nassert solution(**) == 33\nassert solution(LLR) == 25\nassert solution(**) == 33\n"
    },
    {
        "number": 3056,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '33'"
    },
    {
        "number": 3056,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('RL') == ''\nassert solution('LP') == ''\nassert solution('RLP') == ''\nassert solution('LLP') == ''\n"
    },
    {
        "number": 3057,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 'wait what?'\n'''\n\n\nfrom collections import Counter\n\nN = int(input())\n\nrhyme_counter = Counter()\n\nfor _ in range(N):\n    x, y = input().split()\n    if x in rhyme_counter:\n        rhyme_counter[x] += 1\n    else:\n        rhyme_counter[x] = 1\n    if y in rhyme_counter:\n        rhyme_counter[y] += 1\n    else:\n        rhyme_counter[y] = 1\n\nR = len(rhyme_counter)\n\nfor k, v in rhyme_counter.items():\n    if (R > 1) and (R - 1) <= v <= R:\n        print('yes')\n        break\nelse:\n    print('wait what?')"
    },
    {
        "number": 3057,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('herp is derp') == 'yes'\nassert solution('derp is herp') == 'yes'\nassert solution('herp is herp') == 'yes'\nassert solution('derp is derp') == 'yes'\nassert solution('oskar not lukas') == 'wait what?'\n"
    },
    {
        "number": 3057,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\nherp is derp\\nderp is herp\\nherp is herp\\nderp is derp') == 'yes'\nassert solution('3\\noskar not lukas\\noskar is poptart\\nlukas is smart\\n') == 'wait what?'\nassert solution('1\\nmoo not foo') == 'yes'\n"
    },
    {
        "number": 3057,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\noskar not lukas\\noskar is poptart\\nlukas is smart\\n') == 'wait what?'\nassert solution('3\\noskar not lukas\\noskar is poptart\\nlukas is smart\\n') == 'wait what?'\nassert solution('2\\nlukas is smart\\n') == 'yes'\nassert solution('2\\nlukas is smart\\n') == 'yes'\nassert solution('2\\noskar is derp\\nlukas is smart\\n') == 'wait what?'\n"
    },
    {
        "number": 3057,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"herp is derp\") == \"yes\"\nassert solution(\"derp is herp\") == \"yes\"\nassert solution(\"herp is herp\") == \"yes\"\nassert solution(\"derp is derp\") == \"yes\"\nassert solution(\"oskar not lukas\") == \"wait what?\"\n"
    },
    {
        "number": 3057,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"herp is derp\\nderp is herp\\nherp is herp\\nderp is derp\") == \"yes\"\nassert solution(\"oskar not lukas\\noskar is poptart\\nlukas is smart\") == \"wait what?\"\nassert solution(\"moo not foo\") == \"yes\"\nassert solution(\"oskar is poptart\") == \"yes\"\nassert solution(\"lukas is smart\") == \"wait what?\"\n"
    },
    {
        "number": 3057,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('moo not foo') == 'yes'\nassert solution('oskar not lukas') == 'wait what?'\nassert solution('oskar is poptart') == 'wait what?'\nassert solution('lukas is smart') == 'wait what?'\nassert solution('herp is derp') == 'yes'\n"
    },
    {
        "number": 3057,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('herp is derp') == 'yes'\nassert solution('derp is herp') == 'yes'\nassert solution('herp is herp') == 'yes'\nassert solution('derp is derp') == 'yes'\nassert solution('herp is herp') == 'yes'\n"
    },
    {
        "number": 3057,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ulf is not lukas') == 'yes'\nassert solution('oskar is not lukas') == 'wait what?'\nassert solution('lukas is smart') == 'yes'\nassert solution('lukas is not smart') == 'wait what?'\nassert solution('lukas is smart and foo is lukas') == 'wait what?'\n"
    },
    {
        "number": 3057,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''herp is derp\nderp is herp\nherp is herp\nderp is derp''') == 'yes'\nassert solution('''oskar not lukas\noskar is poptart\nlukas is smart''') == 'wait what?''''\n"
    },
    {
        "number": 3058,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\nAACCMMAA\nACA\nMM\nACMAA\nAA\nA\n''') == 'impossible'\nassert solution('''1\nAM\nMA\n''') == 'impossible'\nassert solution('''3\nACMA\nACM\nACA\nAMA\n''') == 'impossible'\nassert solution('''4\nACA\nACM\nACA\nACA\n''') == 'impossible'\nassert solution('''4\nAC\nAC\nAC\nAC\n''') == 'impossible'\n"
    },
    {
        "number": 3058,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n5\nAACCMMAA\nACA\nMM\nACMAA\nAA\nA\n''') == 'impossible'\nassert solution('''\n3\nACMA\nACM\nACA\nAMA\n''') == 'impossible'\nassert solution('''\n1\nAM\nMA\n''') == '1 4'\nassert solution('''\n7\nAACCMMAA\nACA\nMM\nACMAA\nAA\nA\nMA\nAM\n''') == '1 4'\nassert solution('''\n4\nAACCMMAA\nACA\nMM\nACMAA\nAA\nA\n''') == 'impossible'\n"
    },
    {
        "number": 3058,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"A\") == \"impossible\"\nassert solution(\"AA\") == \"impossible\"\nassert solution(\"AACMAA\") == \"1 4\"\nassert solution(\"AACM\") == \"impossible\"\n"
    },
    {
        "number": 3058,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\nAACCMMAA\nACA\nMM\nACMAA\nAA\nA\n''') == '''1 4\nMM\nA\nAA\nACA\nACMAA\n'''\nassert solution('''5\nACA\nACM\nACA\nACA\nACA\n''') == '''impossible'''\nassert solution('''10\nAACCA\nAAAC\nAC\nCACCCA\nAAACCA\nACCC\nACCAC\nAAACC\nACACCA\nACAAC\nACAC\nAACACA\nAACAC\nAACAC\n''') == '''impossible'''\nassert solution('''2\nAA\nAA\nAA\nAA\nAA\n''') == '''impossible'''\nassert solution('''5\nAC\nAC\nAC\nAC\nAC\n''') == '''impossible'''\n"
    },
    {
        "number": 3058,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''5\nAACCMMAA\nACA\nMM\nACMAA\nAA\nA\n'''\n) == '1 4\\nMM\\nA\\nAA\\nACA\\nACMAA'\nassert solution(\n'''3\nACMA\nACM\nACA\nAMA\n'''\n) == 'impossible'\n\nprint('Testcase 1:', solution(\n'''5\nAACCMMAA\nACA\nMM\nACMAA\nAA\nA\n'''\n))\n\nprint('Testcase 2:', solution(\n'''3\nACMA\nACM\nACA\nAMA\n'''\n))\n\nprint('Testcase 3:', solution(\n'''1\nAM\nMA\n'''\n))\n\nprint('Testcase 4:', solution(\n'''2\nAC\nCM\n'''\n))\n\nprint('Testcase 5:', solution(\n'''1\nA\n'''\n))\n\nprint('Testcase 6:', solution(\n'''2\nMA\nMA\n'''\n))\n\nprint('Testcase 7:', solution(\n'''1\nA\n'''\n))\n\nprint('Testcase 8:', solution(\n'''3\nAC\nCM\nAC\n'''\n))\n\nprint('Testcase 9:', solution(\n'''2\nAC\nCM\n'''\n))\n\nprint('Testcase 10:', solution(\n'''3\nAC\nCM\nAC\n'''\n))\n\nprint('Testcase 11:', solution(\n'''2\nCM\nAC\n'''\n))\n\nprint('Testcase 12:', solution(\n'''3\nAC\nCM\nAC\n'''\n))\n\nprint('Testcase 13:', solution(\n'''1\nA\n'''\n))\n\nprint('Testcase 14:', solution(\n'''2\nCM\nAC\n'''\n))\n\nprint('Testcase 15:', solution(\n'''3\nAC\nCM\nAC\n'''\n))\n\nprint('Testcase 16:', solution(\n'''1\nA\n'''\n))\n\nprint('Testcase 17:', solution(\n'''2\nCM\nAC\n'''\n))\n\nprint('Testcase 18:', solution(\n'''3\nAC\nCM\nAC\n'''\n))\n\nprint('Testcase 19:', solution(\n'''2\nCM\nAC\n'''\n))\n\nprint('Testcase 20:', solution(\n'''3\nAC\nCM\nAC\n'''\n))\n\nprint('Testcase 21:', solution(\n'''2\nCM\nAC\n'''\n))\n\nprint('Testcase 22:', solution(\n'''3\nAC\nCM\nAC\n'''\n))\n\nprint('Testcase 23:', solution(\n'''2\nCM\nAC\n'''\n))\n\nprint('Testcase 24:', solution(\n'''3\nAC\nCM\nAC\n'''\n))\n\nprint('Testcase 25:', solution(\n'''2\nCM\nAC\n'''\n))\n\nprint('Testcase 26:', solution(\n'''3\nAC\nCM\nAC\n'''\n))\n\nprint('Testcase 27:', solution(\n'''2\nCM\nAC\n'''\n))\n\nprint('Testcase 28:', solution(\n'''3\nAC\nCM\nAC\n'''\n))\n\nprint('Testcase 29:', solution(\n'''2\nCM\nAC\n'''\n))\n\nprint('Testcase 30:', solution(\n'''3\nAC\nCM\nAC\n'''\n))\n\nprint('Testcase 31:', solution(\n'''2\nCM\nAC\n'''\n))\n\nprint('Testcase 32:', solution(\n'''3\nAC\nCM\nAC\n'''\n))\n\nprint('Testcase 33:', solution(\n'''2\nCM\nAC\n'''\n))\n\nprint('Testcase 34:', solution(\n'''3\nAC\nCM\nAC\n'''\n))\n\nprint('Testcase 35:', solution(\n'''2\nCM\nAC\n'''\n))\n\nprint('Testcase 36:', solution(\n'''3\nAC\nCM\nAC\n'''\n))\n\nprint('Testcase 37:', solution(\n'''2\nCM\nAC\n'''\n))\n\nprint('Testcase 38:', solution(\n'''3\nAC\nCM\nAC\n'''\n))\n\nprint('Testcase 39:', solution(\n'''2\nCM\nAC\n'''\n))\n\nprint('Testcase 40:', solution(\n'''3\nAC\nCM\nAC\n'''\n))\n\nprint('Testcase 41:', solution(\n'''2\nCM\nAC\n'''\n))\n\nprint('Testcase 42:', solution(\n'''3\nAC\nCM\nAC\n'''\n))\n\nprint('Testcase 43:', solution(\n'''2\nCM\nAC\n'''\n))\n\nprint('Testcase 44:', solution(\n'''3\nAC\nCM\nAC\n'''\n))\n\nprint('Testcase 45:', solution(\n'''2\nCM\nAC\n'''\n))\n\nprint('Testcase 46:', solution(\n'''3\nAC\nCM\nAC\n'''\n))\n\nprint('Testcase 47:', solution(\n'''2\nCM\nAC\n'''\n))\n\nprint('Testcase 48:', solution(\n'''3\nAC\nCM\nAC\n'''\n))\n\nprint('Testcase 49:', solution(\n'''2\nCM\nAC\n'''\n))\n\nprint('Testcase 50:', solution(\n"
    },
    {
        "number": 3058,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\nAACCMMAA\nACA\nMM\nACMAA\nAA\nA\n''') == '1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n'\nassert solution('''3\nACMA\nACM\nACA\nAMA\n''') == 'impossible'\nassert solution('''3\nACM\nACMA\nACA\n''') == 'impossible'\nassert solution('''4\nAACCMMAA\nACA\nMM\nACMAA\nAA\nA\n''') == '1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n'\nassert solution('''5\nAACCMMAA\nACA\nMM\nACMAA\nAA\nA\n''') == '1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n'\n"
    },
    {
        "number": 3058,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n1\nACMA\nACM\nACA\nAMA\n''') == 'impossible'\nassert solution('''\n5\nAACCMMAA\nACA\nMM\nACMAA\nAA\nA\n''') == '1 4'\nassert solution('''\n5\nACMA\nACM\nACA\nAMA\n''') == 'impossible'\nassert solution('''\n5\nACMA\nACM\nACA\nAMA\n''') == 'impossible'\nassert solution('''\n5\nACMA\nACM\nACA\nAMA\n''') == 'impossible'\n"
    },
    {
        "number": 3058,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3058,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"A\") == \"\"\nassert solution(\"A\") == \"\"\nassert solution(\"AA\") == \"\"\n"
    },
    {
        "number": 3058,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1') == 'impossible'\nassert solution('ACMA') == 'impossible'\nassert solution('AACCCAA') == '1 4'\nassert solution('ACCC') == 'impossible'\n"
    },
    {
        "number": 3059,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n3\") == \"5\"\nassert solution(\"2\\n2\\n2\") == \"3\"\nassert solution(\"1000\\n2\\n2\") == \"3\"\nassert solution(\"5000\\n10\\n1\") == \"5\"\nassert solution(\"10\\n1\\n1\") == \"5\"\n"
    },
    {
        "number": 3059,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"100 111 5\") == \"124\"\nassert solution(\"2 4 1\") == \"3\"\nassert solution(\"10 20 3\") == \"18.9029850746\"\nassert solution(\"100 15 3\") == \"18.4330959936\"\nassert solution(\"100 15 3\") == \"18.4330959936\"\n"
    },
    {
        "number": 3059,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2''') == '124'\nassert solution('''2 4 1\n1 0.5 5\n''') == '3'\n"
    },
    {
        "number": 3059,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"100 111 5\") == \"124\"\nassert solution(\"2 4 1\") == \"3\"\nassert solution(\"10 20 3\") == \"18.9029850746\"\nassert solution(\"10 9 7\") == \"6.8637007598\"\nassert solution(\"1 0.5 10\") == \"10\"\n"
    },
    {
        "number": 3059,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution
    },
    {
        "number": 3059,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2''') == '124'\nassert solution('''2 4 1\n1 0.5 5\nSample Output 2:\n3\n\nSample Input 3:\n10 20 3\n5 0.3 8\n6 0.8 3\n8 0.9 3\nSample Output 3:\n18.9029850746\n''') == '18.9029850746'\n"
    },
    {
        "number": 3059,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''100 111 5''') == '124'\nassert solution('''2 4 1''') == '3'\nassert solution('''10 20 3''') == '18.904344362'"
    },
    {
        "number": 3059,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3059,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('100 111 5') == '124'\nassert solution('2 4 1') == '3'\nassert solution('10 20 3') == '18.9029850746'\nassert solution('4 4 2') == '2'\nassert solution('10 25 2') == '4'\n"
    },
    {
        "number": 3059,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2''') == '124'\nassert solution('''2 4 1\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0.5 5\n1 0"
    },
    {
        "number": 3060,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3''') == '2 1 2'\nassert solution('''2 1''') == '1'\nassert solution('''5 22''') == '4 3 4 2'\nassert solution('''3 3''') == '1'\nassert solution('''1 1''') == '1'\n"
    },
    {
        "number": 3060,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 3\") == \"2 1 2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"5 22\") == \"4 3 4 2\"\n"
    },
    {
        "number": 3060,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 3\\n2 1\\n') == '2 1 2'\nassert solution('5 22\\n1') == '1'\nassert solution('5 1\\n2') == '1'\nassert solution('5 4\\n3') == '4 3 2 1'\nassert solution('5 2\\n2') == '1'\n"
    },
    {
        "number": 3060,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3060,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 4') == '2 1 2'\nassert solution('2 1') == '1'\nassert solution('5 22') == '4 3 4 2'\n"
    },
    {
        "number": 3060,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3060,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output\nprint(solution(stdin))\n"
    },
    {
        "number": 3060,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 3') == '1 2'\nassert solution('2 1') == '1'\nassert solution('5 22') == '4 3 4 2'\nassert solution('5 6') == '4'\nassert solution('5 1') == '1'\n"
    },
    {
        "number": 3060,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 3\n''') == '2 1 2'\nassert solution('''2 1\n''') == '1'\nassert solution('''5 22\n''') == '4 3 4 2'\nassert solution('''2 2\n''') == '1'\nassert solution('''3 3\n''') == '1 2'\n"
    },
    {
        "number": 3060,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 4') == '2 1 2'\nassert solution('5 22') == '4 3 4 2'\nassert solution('9 30') == '6 8 10 4 2'\nassert solution('10 31') == '9 8 9 10 10'\n"
    },
    {
        "number": 3061,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"4 4\n1 2\n1 3\n3 4\n2 4\n\"\"\") == '2'\n\nassert solution(\n\"\"\"7 6\n1 2\n2 3\n2 5\n6 3\n7 2\n3 4\n\"\"\") == '2'\n\nassert solution(\n\"\"\"7 5\n1 2\n2 3\n3 4\n5 6\n6 7\n7 5\n\"\"\") == '0'\n"
    },
    {
        "number": 3061,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 4\n1 2\n1 3\n3 4\n2 4''') == '2'\nassert solution('''7 6\n1 2\n2 3\n2 5\n6 3\n7 2\n3 4\n''') == '2'\nassert solution('''7 5\n1 2\n2 3\n3 4\n5 6\n6 7\n7 8\nSample Input 4:\n1\nSample Output 4:\n0"
    },
    {
        "number": 3061,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 4\n1 2\n1 3\n3 4\n2 4''') == '2'\nassert solution('''7 6\n1 2\n2 3\n3 4\n5 6\n6 7\n7 2''') == '0'\nassert solution('''7 5\n1 2\n2 3\n3 4\n5 6\n6 7\n7 2''') == '2'\nassert solution('''5 4\n1 2\n2 3\n3 4\n4 5\n5 4\n''') == '0'\nassert solution('''4 3\n1 2\n2 3\n3 4\n4 5\n5 4''') == '2'\n"
    },
    {
        "number": 3061,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n4 4\n1 2\n1 3\n3 4\n2 4\n''') == '2'\n\nassert solution(\n'''\n7 6\n1 2\n2 3\n2 5\n6 3\n7 2\n3 4\n''') == '0'\n\nassert solution(\n'''\n7 5\n1 2\n2 3\n3 4\n5 6\n6 7\n''') == '2'\n"
    },
    {
        "number": 3061,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 4\n1 2\n1 3\n3 4\n2 4\n''') == '2'\n\nassert solution('''7 6\n1 2\n2 3\n2 5\n6 3\n7 2\n3 4\n''') == '0'\n\nassert solution('''7 5\n1 2\n2 3\n3 4\n5 6\n6 7\n7 1\n''') == '1'\n\nassert solution('''10 10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n''') == '3'\n\nassert solution('''10 10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9 10\n1 5\n5 9\n5 10\n2 4\n4 8\n8 9\n9"
    },
    {
        "number": 3061,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n4 4\n1 2\n1 3\n3 4\n2 4\n''') == '2'\n\nassert solution('''\n7 6\n1 2\n2 3\n2 5\n6 3\n7 2\n3 4\n''') == '2'\n\nassert solution('''\n7 5\n1 2\n2 3\n3 4\n5 6\n6 7\n7 5\n3 4\n''') == '0'"
    },
    {
        "number": 3061,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''4 4\n1 2\n1 3\n3 4\n2 4'''\n    ) == '2'\nassert solution(\n'''6 3\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7'''\n    ) == '0'\n"
    },
    {
        "number": 3061,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1\\n2\") == \"1\"\nassert solution(\"1\\n1\\n2\\n3\\n4\") == \"2\"\nassert solution(\"1\\n2\\n3\\n4\") == \"0\"\nassert solution(\"2\\n1\\n2\\n3\\n4\") == \"2\"\nassert solution(\"2\\n1\\n2\\n3\\n4\\n5\\n6\") == \"2\"\n"
    },
    {
        "number": 3061,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1\\n3\\n3\\n1\\n1\\n5\\n7\") == \"2\"\nassert solution(\"3\\n1\\n2\\n3\\n1\\n2\\n5\\n7\") == \"2\"\nassert solution(\"5\\n1\\n2\\n3\\n4\\n1\\n2\\n4\") == \"0\"\nassert solution(\"7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\") == \"2\"\nassert solution(\"7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\") == \"0\"\n"
    },
    {
        "number": 3061,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 5\n1 2\n1 3\n3 4\n2 4\n''') == '2'\nassert solution('''6 5\n1 2\n2 3\n2 5\n4 5\n1 3\n3 4\n''') == '0'\nassert solution('''7 5\n1 2\n2 3\n3 4\n5 6\n6 7\n1 4\n4 5\nSample Output 3:\n2\n''') == '2'\nassert solution('''7 6\n1 2\n2 3\n2 5\n6 3\n7 2\n3 4\n''') == '0'\nassert solution('''8 3\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 2\n3 4\n''') == '1'\n"
    },
    {
        "number": 3062,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"3.00000000\"\nassert solution(\"15 15\") == \"28.26445910\"\nassert solution(\"0 20\") == \"3.14159265\"\nassert solution(\"-10 10\") == \"28.26445910\"\n"
    },
    {
        "number": 3062,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''20 0''') == '20.00000000'\nassert solution('''-10 10''') == '3.14159265'\nassert solution('''0 20''') == '28.26445910'\nassert solution('''-10 10''') == '3.14159265'\nassert solution('''0 10''') == '28.26445910'\n"
    },
    {
        "number": 3062,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('20 0\\n1.00 0.10') == '20.00000000'\nassert solution('-10 10\\n10.00 1.00') == '3.14159265'\nassert solution('0 20\\n1.00 0.10') == '28.26445910'\nassert solution('50 0\\n5.00 0.40') == '6.99291859'\nassert solution('50 0\\n5.00 0.40') == '6.99291859'\n"
    },
    {
        "number": 3062,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 0\nassert solution('20 0') == 0\nassert solution('-10 10') == 0\nassert solution('1.00 0.10') == 0\nassert solution('20 0') == 0\n"
    },
    {
        "number": 3062,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"0 1\") == \"\"\nassert solution(\"1 1\") == \"\"\n"
    },
    {
        "number": 3062,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 0\\n1.00 0.10') == '20.00000000'\nassert solution('-10 10\\n10.00 1.00') == '3.14159265'\nassert solution('-10 10\\n10.00 0.10') == '28.26445910'\nassert solution('-10 10\\n1.00 0.10') == '28.26445910'\nassert solution('20 0\\n1.00 0.10') == '20.00000000'\n"
    },
    {
        "number": 3062,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''20 0\n1.00 0.10''') == '20.00000000'\nassert solution('''-10 10\n10.00 1.00''') == '3.14159265'\nassert solution('''20 0\n-1.00 0.10''') == '28.26445910'\nassert solution('''-10 10\n-1.00 0.10''') == '3.14159265'\nassert solution('''-10 -10\n1.00 1.00''') == '3.14159265'\n"
    },
    {
        "number": 3062,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"20 0\n1.00 0.10\n\"\"\") == \"20.00000000\"\n\nassert solution(\n\"\"\"\n-10 10\n10.00 1.00\n\"\"\") == \"3.14159265\"\n"
    },
    {
        "number": 3062,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 0') == '0.0'\nassert solution('20 0') == '20.0'\nassert solution('-20 0') == '20.0'\nassert solution('20 0') == '20.0'\nassert solution('-20 0') == '20.0'\n"
    },
    {
        "number": 3062,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"20 0\n1.00 0.10\n\"\"\") == '20.00000000'\nassert solution(\n\"\"\"-10 10\n10.00 1.00\n\"\"\") == '3.14159265'\nassert solution(\n\"\"\"0 20\n1.00 0.10\n\"\"\") == '28.26445910'\n"
    },
    {
        "number": 3063,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n2 1\\n1 1') == '2'\nassert solution('1\\n1 1\\n1 1') == '2'\nassert solution('3\\n2 120\\n3 50\\n2 80') == '150'\nassert solution('2\\n2 2\\n2 2') == '4'\nassert solution('1\\n1 1\\n1 1') == '2'\n"
    },
    {
        "number": 3063,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n1\n2 10\n3 50\n\"\"\"\n) == '170'\nassert solution(\n\"\"\"\n4\n2 100\n1 100\n4 70\n3 70\n\"\"\"\n) == '170'\nassert solution(\n\"\"\"\n4\n2 120\n3 50\n2 80\n\"\"\"\n) == '150'\nassert solution(\n\"\"\"\n3\n1 100\n2 100\n3 70\n\"\"\"\n) == '170'\nassert solution(\n\"\"\"\n4\n1 100\n2 120\n3 50\n4 70\n\"\"\"\n) == '150'\n"
    },
    {
        "number": 3063,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n2 100\n1 100\n4 70\n3 70''') == '170'\nassert solution('''3\n2 120\n3 50\n2 80''') == '150'\nassert solution('''10\n3 1\n3 2\n1 4\n2 5\n4 6\n5 6\n2 3\n4 8\n2 7\n1 3\n3 4\n4 5\n5 6\n6 7\n7 8\n3 9\n4 10\n5 11\n6 12\n7 13\n8 14\n9 15\n10 16''') == '15909'\nassert solution('''20\n10 1\n10 2\n10 3\n10 4\n10 5\n10 6\n10 7\n10 8\n10 9\n10 10\n10 11\n10 12\n10 13\n10 14\n10 15\n10 16\n10 17\n10 18\n10 19\n10 20''') == '598921'\nassert solution('''30\n30 1\n30 2\n30 3\n30 4\n30 5\n30 6\n30 7\n30 8\n30 9\n30 10\n30 11\n30 12\n30 13\n30 14\n30 15\n30 16\n30 17\n30 18\n30 19\n30 20\n30 21\n30 22\n30 23\n30 24\n30 25\n30 26\n30 27\n30 28\n30 29''') == '337318'\n"
    },
    {
        "number": 3063,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n2 100\n1 100\n4 70\n3 70''') == '170'\n\nassert solution('''4\n3 50\n2 80\n1 100\n3 70\n''') == '150'\n\nassert solution('''2\n1 100\n1 100\n''') == '100'\n\nassert solution('''2\n2 30\n2 90\n''') == '100'\n\nassert solution('''4\n1 100\n1 100\n1 100\n1 100\n''') == '100'"
    },
    {
        "number": 3063,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n2\n1 100\n4 70''') == '170'\nassert solution('''2\n2\n1 100\n2 80''') == '150'\nassert solution('''4\n2\n1 100\n4 70\n3 70\n2 80''') == '150'\nassert solution('''4\n2\n1 100\n4 70\n3 70\n2 90''') == '170'\nassert solution('''4\n2\n2\n1 100\n4 70\n3 70\n2 80''') == '150'\n"
    },
    {
        "number": 3063,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n2 100\n1 100\n4 70\n3 70''') == '170'\nassert solution('''3\n2 120\n3 50\n2 80''') == '150'\nassert solution('''1\n1''') == '0'\nassert solution('''0\n0''') == '0'\nassert solution('''1\n1''') == '1'\n"
    },
    {
        "number": 3063,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''4\n2 100\n1 100\n4 70\n3 70''') == '170'\nassert solution(\n'''6\n2 120\n3 50\n2 80\n4 40\n5 60\n6 70''') == '270'\nassert solution(\n'''6\n2 120\n3 50\n2 80\n4 40\n5 60\n6 70''') == '270'\nassert solution(\n'''6\n2 120\n3 50\n2 80\n4 40\n5 60\n6 70''') == '270'\nassert solution(\n'''6\n2 120\n3 50\n2 80\n4 40\n5 60\n6 70''') == '270'\n"
    },
    {
        "number": 3063,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n5\") == \"5\"\nassert solution(\"2\\n6\") == \"10\"\nassert solution(\"3\\n8\") == \"14\"\nassert solution(\"2\\n2\") == \"0\"\nassert solution(\"2\\n2\\n2\") == \"0\"\n"
    },
    {
        "number": 3063,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 100\\n1 100\\n4 70\\n3 70\") == \"170\"\nassert solution(\"4\\n2 120\\n3 50\\n2 80\") == \"150\"\nassert solution(\"4\\n2 120\\n3 50\\n2 80\\n2 150\") == \"120\"\nassert solution(\"1\\n100\\n100\\n100\\n100\\n100\\n100\\n100\") == \"100\"\nassert solution(\"5\\n1 100\\n2 80\\n3 60\\n4 40\\n5 10\") == \"100\"\n"
    },
    {
        "number": 3063,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"2\\n\" +\n\"2 100\\n\" +\n\"1 100\\n\" +\n\"4 70\\n\" +\n\"3 70\") == \"150\"\n\nassert solution(\n\"2\\n\" +\n\"2 120\\n\" +\n\"3 50\\n\" +\n\"2 80\") == \"150\"\n\nassert solution(\n\"3\\n\" +\n\"2 120\\n\" +\n\"3 50\\n\" +\n\"2 80\\n\" +\n\"1 100\") == \"150\"\n\nassert solution(\n\"5\\n\" +\n\"2 120\\n\" +\n\"3 50\\n\" +\n\"2 80\\n\" +\n\"1 100\\n\" +\n\"4 70\") == \"150\"\n\nassert solution(\n\"3\\n\" +\n\"2 120\\n\" +\n\"3 50\\n\" +\n\"2 80\\n\" +\n\"1 100\\n\" +\n\"4 70\\n\" +\n\"2 100\") == \"200\""
    },
    {
        "number": 3064,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3\n1 2\n1 3\n2 4\n''') == '2'\nassert solution('''6 6\n1 2\n1 3\n2 4\n3 4\n3 5\n5 6\n''') == '5'\n"
    },
    {
        "number": 3064,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 3\n1 2\n1 3\n2 4\n3 4\n3 5\n5 6''') == '2'\nassert solution('''2 2\n1 2\n1 3\n2 4\n''') == '5'\nassert solution('''8 4\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n2 3\n2 4\n2 5\n2 6\n3 4\n3 5\n4 5\n4 6\n5 6\n5 7\n5 8\n7 8''') == '4'\nassert solution('''9 9\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n4 5\n4 6\n4 7\n4 8\n4 9\n5 6\n5 7\n5 8\n5 9\n6 7\n6 8\n6 9\n7 8\n7 9\n8 9''') == '6'\nassert solution('''9 9\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n4 5\n4 6\n4 7\n4 8\n4 9\n5 6\n5 7\n5 8\n5 9\n6 7\n6 8\n6 9\n7 8\n7 9\n8 9''') == '4'\n"
    },
    {
        "number": 3064,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"2\\n1\\n1\\n1\\n1\\n1\") == \"2\"\nassert solution(\"5\\n1\\n1\\n1\\n1\\n1\") == \"5\"\nassert solution(\"6\\n1\\n1\\n1\\n1\\n1\") == \"5\"\nassert solution(\"7\\n1\\n1\\n1\\n1\\n1\") == \"6\"\n"
    },
    {
        "number": 3064,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''4 3\n1 2\n1 3\n2 4\n''') == '2'\nassert solution(\n'''6 6\n1 2\n1 3\n2 4\n3 4\n3 5\n5 6\n''') == '5'\n\n\"\"\""
    },
    {
        "number": 3064,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 3\n1 2\n1 3\n2 4\n''') == '2'\nassert solution('''6 6\n1 2\n1 3\n2 4\n3 4\n3 5\n5 6\n''') == '5'\nassert solution('''1\n1\n''') == '1'\nassert solution('''1\n2\n''') == '1'\nassert solution('''1\n2\n2\n3\n''') == '2'\n"
    },
    {
        "number": 3064,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"6 4\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\") == \"5\"\n"
    },
    {
        "number": 3064,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"4 3\n1 2\n1 3\n2 4\n3 4\n3 5\n5 6\"\"\") == \"2\"\nassert solution(\"\"\"6 6\n1 2\n1 3\n2 4\n3 4\n3 5\n5 6\"\"\") == \"5\"\n"
    },
    {
        "number": 3064,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 3\") == 2\nassert solution(\"6 6\") == 5"
    },
    {
        "number": 3064,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\") == \"2\\n5\\n8\\n15\\n22\\n29\\n36\\n43\\n50\\n57\\n64\\n71\\n78\\n85\\n92\\n99\\n106\\n113\\n120\\n127\\n134\\n141\\n148\\n155\\n162\\n169\\n176\\n183\\n190\\n197\\n204\\n211\\n218\\n225\\n232\\n239\\n246\\n253\\n260\\n267\\n274\\n281\\n288\\n295\\n302\\n309\\n316\\n323\\n330\\n337\\n344\\n351\\n358\\n365\\n372\\n379\\n386\\n393\\n400\\n407\\n414\\n421\\n428\\n435\\n442\\n449\\n456\\n463\\n470\\n477\\n484\\n491\\n498\\n505\\n512\\n519\\n526\\n533\\n540\\n547\\n554\\n561\\n568\\n575\\n582\\n589\\n596\\n603\\n610\\n617\\n624\\n631\\n638\\n645\\n652\\n659\\n666\\n673\\n680\\n687\\n694\\n701\\n708\\n715\\n722\\n729\\n736\\n743\\n750\\n757\\n774\\n781\\n788\\n795\\n802\\n809\\n816\\n823\\n830\\n837\\n844\\n851\\n858\\n865\\n872\\n889\\n896\\n903\\n910\\n917\\n924\\n931\\n938\\n945\\n952\\n959\\n966\\n973\\n980\\n987\\n994\")\nassert solution(\"4 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\") == \"2\\n5\\n8\\n15\\n22\\n29\\n36\\n43\\n50\\n57\\n64\\n71\\n78\\n85\\n92\\n99\\n106\\n113\\n120\\n127\\n134\\n141\\n148\\n155\\n162\\n169\\n176\\n183\\n190\\n197\\n204\\n211\\n218\\n225\\n232\\n239\\n246\\n253\\n260\\n267\\n274\\n281\\n288\\n295\\n302\\n309\\n316\\n323\\n330\\n337\\n344\\n351\\n358\\n365\\n372\\n379\\n386\\n393\\n400\\n407\\n414\\n421\\n428\\n435\\n442\\n449\\n456\\n463\\n470\\n477\\n484\\n491\\n498\\n505\\n512\\n519\\n526\\n533\\n540\\n547\\n554\\n561\\n568\\n575\\n582\\n589\\n596\\n603\\n610\\n617\\n624\\n631\\n638\\n645\\n652\\n659\\n666\\n673\\n680\\n687\\n694\\n701\\n708\\n715\\n722\\n729\\n736\\n743\\n750\\n757\\n774\\n781\\n788\\n795\\n802\\n809\\n816\\n823\\n830\\n837\\n844\\n851\\n858\\n865\\n872\\n889\\n896\\n903\\n910\\n917\\n924\\n931\\n938\\n945\\n952\\n959\\n966\\n973\\n980\\n987\\n994\")\nassert solution(\"4 3\\n1 2\\n1 3\\n2 4\\n3 4\") == \"2\\n5\\n8\\n15\\n22\\n29\\n36\\n43\\n50\\n57\\n64\\n71\\n78\\n85\\n92\\n99\\n106\\n113\\n120\\n127\\n134\\n141\\n148\\n155\\n162\\n169\\n176\\n183\\n190\\n197\\n204\\n211\\n218\\n225\\n232\\n239\\n246\\n253\\n260\\n267\\n274\\n281\\n288\\n295\\n302\\n309\\n316\\n323\\n330\\n337\\n344\\n351\\n358\\n365\\n372\\n379\\n386\\n393\\n400\\n407\\n414\\n421\\n428\\n435\\n442\\n449\\n456\\n463\\n470\\n477\\n484\\n491\\n498\\n505\\n512\\n519\\n526\\n533\\n540\\n547\\n554\\n561\\n568\\n575\\n582\\n589\\n596\\n603\\n610\\n617\\n624\\n631\\n638\\n645\\n652\\n659\\n666\\n673\\n680\\n687\\n694\\n701\\n708\\n715\\n722\\n729\\n736\\n743\\"
    },
    {
        "number": 3064,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 3\n1 2\n1 3\n2 4\n''') == '2'\nassert solution('''6 6\n1 2\n1 3\n2 4\n3 4\n3 5\n5 6\n''') == '5'\nassert solution('''4 4\n1 2\n1 3\n2 4\n2 3\n''') == '1'\nassert solution('''8 8\n1 2\n1 3\n2 4\n1 5\n1 6\n2 7\n2 8\n3 4\n3 5\n4 5\n5 6\n5 7\n6 7\n6 8\n7 8\n''') == '2'\nassert solution('''5 5\n1 2\n1 3\n2 4\n1 5\n1 6\n2 7\n2 8\n3 4\n1 6\n1 7\n1 8\n3 4\n1 6\n3 4\n3 5\n4 5\n1 3\n2 5\n3 4\n1 2\n1 3\n1 4\n1 5\n2 4\n3 4\n2 4\n2 3\n2 5\n3 5\n''') == '6'\n"
    },
    {
        "number": 3065,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1\\n0\\n2 1 2\\n1 0\\n1 0\\n1 0\\n1 0\") == \"0.5\"\nassert solution(\"8\\n6\\n1 0 2 3 0 1\\n7 1 2 3 4 5 6 7\\n1 0\\n2 0 3\\n2 0 2\\n1 0\\n1 0\\n1 0\\n1 0\") == \"0.0446429\""
    },
    {
        "number": 3065,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n3\n1\n0\n2 1 2\n1 0\n1 0\n''') == '0.5'\n\nassert solution('''\n8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n''') == '0.0446429'\n\nprint(solution('''\n4\n3\n1 2 3 0\n2 3 0 1\n1 0\n2 0 3\n3 0 2\n'''))\n"
    },
    {
        "number": 3065,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''3\n1\n0\n2 1 2\n1 0\n1 0\n''') == '0.5'\n\nassert solution(\n'''8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n''') == '0.0446429'\n"
    },
    {
        "number": 3065,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n1\n0\n2 1 2\n1 0\n1 0\n''') == '0.5'\nassert solution('''8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n''') == '0.0446429'\nassert solution('''9\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n1 0\n''') == '0.03142857'\nprint(solution('''9\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n1 0\n'''))\n"
    },
    {
        "number": 3065,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0\\n0\") == \"1\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n1\") == \"0.5\"\nassert solution(\"3\\n2\") == \"0.58266626\"\nassert solution(\"4\\n3\") == \"0.8666666666666667\"\n"
    },
    {
        "number": 3065,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"0 1\") == \"\"\nassert solution(\"0 1 2\") == \"\"\n"
    },
    {
        "number": 3065,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n1\n0\n2 1 2\n1 0\n1 0\n''') == '0.5'\nassert solution('''8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n''') == '0.0446429'\nassert solution('''8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n''') == '0.09090909'\nassert solution('''8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n''') == '0.09090909'\nassert solution('''8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n''') == '0.09090909'\n"
    },
    {
        "number": 3065,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input_data) == expected_data, solution(input_data)\n\"\"\"\n"
    },
    {
        "number": 3065,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n1\n0\n2 1 2\n1 0\n1 0\n''') == '0.5'\n\nassert solution('''8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n''') == '0.0446429'\n\nassert solution('''8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n''') == '0.0446429'\n\nassert solution('''8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n''') == '0.0446429'\n\nassert solution('''8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n''') == '0.0446429'"
    },
    {
        "number": 3065,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '0.0446429'"
    },
    {
        "number": 3066,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n1 2 3 3 2 1\n''') == '''3\n1 6 1\n2 5 2\n3 4 3'''\nassert solution('''5\n2 3 1 3 2\n''') == '''IMPOSSIBLE\n'''\nassert solution('''6\n1 2 1 2 2 1\n''') == '''IMPOSSIBLE\n'''\nassert solution('''4\n2 1 1 2\n''') == '''3\n1 2 1 2'''\nassert solution('''3\n2 1 1\n1 2 1\n2 1 1\n''') == '''2\n1 1 1\n1 2 1\n2 1 1'''\n"
    },
    {
        "number": 3066,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n') == '3\\n1 2 3 3 2 1'\nassert solution('1\\n2\\n') == 'IMPOSSIBLE'\nassert solution('1\\n2\\n2\\n') == 'IMPOSSIBLE'\nassert solution('1\\n3\\n1 2 1') == '3\\n1 2 1 2'\nassert solution('1\\n3\\n2 1 3') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3066,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3066,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"6\\n1 2 3 3 2 1\") == \"3\\n1 6 1\\n2 5 2\\n3 4 3\"\nassert solution(\n    \"4\\n1 2 1 2\") == \"IMPOSSIBLE\"\nassert solution(\n    \"4\\n1 2 1 2\\n2 1 2 1\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3066,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6\\n1 2 3 3 2 1') == '3\\n1 6 1\\n2 5 2\\n3 4 3'\nassert solution('4\\n1 2 1 2') == 'IMPOSSIBLE'\nassert solution('6\\n1 2 1 2 2 3 3') == '3\\n1 6 1\\n2 5 2\\n3 4 3'\nassert solution('6\\n3 1 1 3 3 1') == 'IMPOSSIBLE'\nassert solution('6\\n1 2 1 2 2 1') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3066,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n6\\n1 2 3 3 2 1') == '3\\n1 6 1\\n2 5 2\\n3 4 3'\nassert solution('2\\n1 2 1 2') == 'IMPOSSIBLE'\nassert solution('3\\n1 2 1 2') == 'IMPOSSIBLE'\nassert solution('4\\n1 2 1 2') == 'IMPOSSIBLE'\nassert solution('5\\n1 2 1 2') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3066,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"6\n1 2 3 3 2 1\"\"\") == \"3\\n1 6 1\\n2 5 2\\n3 4 3\\n\"\nassert solution(\n    \"\"\"7\n1 2 1 2 1 2 1\"\"\") == \"IMPOSSIBLE\\n\"\nassert solution(\n    \"\"\"8\n1 2 1 2 1 2 1 2\"\"\") == \"IMPOSSIBLE\\n\"\nassert solution(\n    \"\"\"4\n1 2 1 2\nSample Output 2:\nIMPOSSIBLE\n\"\"\"\n    ) == \"IMPOSSIBLE\\n\"\nassert solution(\n    \"\"\"9\n1 2 1 2 1 2 1 2 1\"\"\"\n    ) == \"IMPOSSIBLE\\n\"\n"
    },
    {
        "number": 3066,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"IMPOSSIBLE\"\nassert solution(\"1\") == \"IMPOSSIBLE\"\nassert solution(\"2\") == \"IMPOSSIBLE\"\nassert solution(\"3\") == \"IMPOSSIBLE\"\nassert solution(\"4\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3066,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3066,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == 'IMPOSSIBLE'\nassert solution('5') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3067,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n5 10 20 30 40 50') == '10 20 28 27 30 40 50'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1 2') == '1 2'\nassert solution('1\\n1 2 3') == '1 2 3'\nassert solution('1\\n1 1') == '1 1'\n"
    },
    {
        "number": 3067,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == \"10 20 28 27 30 40 50\""
    },
    {
        "number": 3067,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n1 2\\n1 100\\n1 1') == '1 2 100\\n1 100\\n1 1'\nassert solution('1\\n1\\n1\\n1\\n1') == '1 1'\nassert solution('2\\n5 10 20 30 40 50\\n2 28 27\\n1 98765432 10') == '1 98765432 1 10'"
    },
    {
        "number": 3067,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1\n1 100\n1 1''') == '1 100'\nassert solution('''2\n5 10 20 30 40 50\n2 28 27''') == '10 20 28 27 30 40 50'\n"
    },
    {
        "number": 3067,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input_data) == input_data\n"
    },
    {
        "number": 3067,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n1 100\\n1 1') == '1 2 100\\n'\nassert solution('2\\n5 10 20 30 40 50\\n2 28 27') == '10 20 28 27 30 40 50\\n'\nassert solution('3\\n2\\n1 1\\n1 1') == '1 1\\n'\nassert solution('2\\n2\\n1 1\\n1 1') == '1 1\\n'\nassert solution('1\\n1\\n1 1') == '1 1\\n'\n"
    },
    {
        "number": 3067,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n1 2\\n1 100\\n1 1') == '1 2 100'\nassert solution('2\\n5 10 20 30 40 50\\n2 28 27') == '10 20 28 27 30 40 50'\nassert solution('1\\n1\\n1') == '1'\nassert solution('3\\n1 2\\n1 100\\n1 1') == '1 2 100'\nassert solution('2\\n5 10 20 30 40 50\\n2 28 27') == '10 20 28 27 30 40 50'\n"
    },
    {
        "number": 3067,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(open('test_files/Y11R5P1/A.in').read()) == open('test_files/Y11R5P1/A_res').read()\nassert solution(open('test_files/Y11R5P1/B.in').read()) == open('test_files/Y11R5P1/B_res').read()\nassert solution(open('test_files/Y11R5P1/C.in').read()) == open('test_files/Y11R5P1/C_res').read()\nassert solution(open('test_files/Y11R5P1/D.in').read()) == open('test_files/Y11R5P1/D_res').read()\nassert solution(open('test_files/Y11R5P1/E.in').read()) == open('test_files/Y11R5P1/E_res').read()\n"
    },
    {
        "number": 3067,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '10 20 28 27 30 40 50'\nprint(solution(stdin))\n"
    },
    {
        "number": 3067,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(open(\"inputs/test_62.txt\")) == \"10 20 28 27 30 40 50\"\n\n-----\nInput:\n3\n1 2\n1 100\n1 1\n\nOutput:\n10 20 28 27 30 40 50\n\nInput:\n3\n5 10 20 30 40 50\n2 28 27\n\nOutput:\n10 20 28 27 30 40 50\n\"\"\""
    },
    {
        "number": 3068,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('AB 1 1\\nAC 2 1\\nBC 2 1') == '506'\n"
    },
    {
        "number": 3068,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('AB 1 1\\nAC 2 1\\nBC 2 1') == '506'\nassert solution('AB 1 1\\nAC 2 1\\nBC 1 1') == '2596'\nassert solution('AB 2 1\\nAC 1 1\\nBC 2 1') == '0'\nassert solution('AB 1 1\\nAC 2 1\\nBC 1 1\\nAC 2 1') == '0'\nassert solution('AB 1 1\\nAC 2 1\\nBC 2 1\\nAC 1 1') == '2596'\n"
    },
    {
        "number": 3068,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '2600'\nassert solution(stdin) == '506'"
    },
    {
        "number": 3068,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 0\nassert solution('1') == 26\nassert solution('2 3 2 1') == 506\nassert solution('2 3 3 2 1') == 636\nassert solution('2 3 3 3 2 1') == 759\n"
    },
    {
        "number": 3068,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == str(solution(open(\"test_input.txt\").read()))\n"
    },
    {
        "number": 3068,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"2600\"\nassert solution(\"0\") == \"\"\nassert solution(\"AB 1 1\") == \"506\"\nassert solution(\"AC 2 1\") == \"566\"\n"
    },
    {
        "number": 3068,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '506'\n"
    },
    {
        "number": 3068,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('AB 1 1') == '2600'\nassert solution('AC 2 1') == '506'\n\n------Alternate Solution------\nfrom collections import Counter"
    },
    {
        "number": 3068,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"AB 1 1\\nAC 2 1\\nBC 2 1\\nAC 3 1\\nBC 3 1\\nAC 4 1\") == \"506\"\nassert solution(\"AB 1 1\\nBC 3 1\\nAC 4 1\\nAC 5 1\\nBC 3 1\") == \"506\"\nassert solution(\"AB 1 1\\nAC 2 1\\nBC 3 1\\nAC 4 1\\nBC 2 1\") == \"506\"\nassert solution(\"AB 1 1\\nAC 2 1\\nBC 2 1\\nAC 3 1\\nBC 3 1\") == \"506\"\nassert solution(\"AB 1 1\\nAC 2 1\\nBC 2 1\\nAC 3 1\\nBC 3 1\\nAC 4 1\") == \"506\"\n"
    },
    {
        "number": 3068,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"1 1 1\") == \"\"\n"
    },
    {
        "number": 3069,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(solution) == 'impossible'\n\nassert solution(\"(()\") == \"possible\"\nassert solution(\")((\") == \"impossible\"\nassert solution(\")(\") == \"impossible\"\nassert solution(\"(()())\") == \"possible\"\n"
    },
    {
        "number": 3069,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3069,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"((((((\") == \"impossible\"\nassert solution(\")(((((\") == \"possible\"\nassert solution(\"(()))())\") == \"possible\"\nassert solution(\")()()(()))()())\") == \"possible\"\n\"\"\"\n"
    },
    {
        "number": 3069,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"(())(\") == \"impossible\"\nassert solution(\"(())(\") == \"possible\"\nassert solution(\"()()\") == \"impossible\"\nassert solution(\"()()\") == \"possible\"\nassert solution(\")()(\") == \"impossible\"\n"
    },
    {
        "number": 3069,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('())(') == \"impossible\"\nassert solution('(())(') == \"impossible\"\nassert solution('()()())') == \"possible\"\nassert solution('((()(()' == \"impossible\"\nassert solution('()' == \"possible\"\n"
    },
    {
        "number": 3069,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\")()())\") == \"possible\"\nassert solution(\"())(\") == \"impossible\"\nassert solution(\")()())\") == \"possible\"\nassert solution(\"())(\") == \"impossible\"\nassert solution(\")))(\") == \"impossible\"\n"
    },
    {
        "number": 3069,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('(()))') == 'possible'\nassert solution(')))(') == 'impossible'\nassert solution('())(') == 'impossible'\nassert solution(')(()') == 'impossible'\nassert solution('((()(()()))())') == 'impossible'\n"
    },
    {
        "number": 3069,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') is None\nassert solution('())') == 'possible'\nassert solution('()())()') == 'possible'\nassert solution(')())') == 'impossible'\nassert solution('()))((())') == 'impossible'\n"
    },
    {
        "number": 3069,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"possible\"\nprint(\"Test1 passed.\")\nassert solution(\"(()\") == \"impossible\"\nprint(\"Test2 passed.\")\nassert solution(\")()\") == \"impossible\"\nprint(\"Test3 passed.\")\nassert solution(\")((\") == \"impossible\"\nprint(\"Test4 passed.\")\nassert solution(\"((()))\") == \"possible\"\nprint(\"Test5 passed.\")\n"
    },
    {
        "number": 3069,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('()))') == 'possible'\nassert solution('()))') == 'impossible'\nassert solution('(()())()') == 'possible'\nassert solution('(())())') == 'impossible'\nassert solution('((()'"
    },
    {
        "number": 3070,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2\\n1 1800 3600 1800\\n1 1900 3600 1600\\n1 2200 9400 1400') == '1800'\n\"\"\"\n"
    },
    {
        "number": 3070,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"impossible\"\nassert solution(\"2 1\") == \"impossible\"\nassert solution(\"2 3\") == \"1800\"\nassert solution(\"2 3\\n1 1800 3600 1800\\n1 1900 3600 1600\") == \"1800\"\nassert solution(\"2 3\\n1 1800 3600 1800\\n1 1900 3600 1600\\n1 2200 9400 1400\") == \"1800\"\n"
    },
    {
        "number": 3070,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input(\"\")) == \"impossible\"\n\nassert solution(input(\"\\n\".join([\n    \"2 3\",\n    \"1 1800 9000 1800\",\n    \"1 2000 9200 1600\",\n    \"1 2200 9400 1400\",\n]))) == \"1800\"\n\nprint(solution(input(\"\\n\".join([\n    \"2 1\",\n    \"1 600 900 600\",\n    \"1 900 1200 600\",\n]))))\n\nassert solution(input(\"\\n\".join([\n    \"3 2\",\n    \"1 800 900 900\",\n    \"1 800 300 900\",\n    \"1 900 900 900\",\n    \"1 400 900 600\",\n]))) == \"1800\"\n"
    },
    {
        "number": 3070,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n3 4\") == \"impossible\"\nassert solution(\"2 3\\n1 1800 9000 1800\\n1 2000 9200 1600\") == \"1800\"\nassert solution(\"3 4\\n1 1800 3600 1800\\n1 1900 3600 1600\\n1 2200 9400 1400\") == \"impossible\"\nassert solution(\"3 4\\n1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400\") == \"1800\"\n"
    },
    {
        "number": 3070,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n2 3\n1 1800 9000 1800\n1 2000 9200 1600\n1 2200 9400 1400\n''') == '1800'\n\nassert solution(\n'''\n2 2\n1 1800 3600 1800\n1 1900 3600 1600\n''') == 'impossible'\n"
    },
    {
        "number": 3070,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n448\\n449\\n450\\n451\\n452\\n453\\n454\\n455\\n456\\n457\\n458\\n459\\n460\\n461\\n462\\n463\\n464\\n465\\n466\\n467\\n468\\n469\\n470\\n471\\n472\\n473\\n474\\n475\\n476\\n477\\n478\\n479\\n480\\n481\\n482\\n483\\n484\\n485\\n486\\n487\\n488\\n489\\n490\\n491\\n492\\n493\\n494\\n495\\n496\\n497\\n"
    },
    {
        "number": 3070,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 3\n1 1800 9000 1800\n1 2000 9200 1600\n1 2200 9400 1400\n''') == '1800'\nassert solution('''2 2\n1 1800 3600 1800\n1 1900 3600 1600\n''') == 'impossible'\n\"\"\""
    },
    {
        "number": 3070,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 3\n1 1800 9000 1800\n1 2000 9200 1600\n1 2200 9400 1400\n''') == '1800'\n\nassert solution('''2 2\n1 1800 3600 1800\n1 1900 3600 1600\n''') == 'impossible'\n\nassert solution('''2 3\n1 1800 9000 1800\n1 2000 9200 1600\n1 2200 9400 1400\n''') == '1800'\n\nassert solution('''2 2\n1 1800 3600 1800\n1 1900 3600 1600\n''') == 'impossible'\n\nassert solution('''2 3\n1 1800 9000 1800\n1 2000 9200 1600\n1 2200 9400 1400\n1 3200 3600 1600\n''') == '1800'"
    },
    {
        "number": 3070,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10') == 'impossible'\nassert solution('1 2\\n1 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10') == '1800'\nassert solution('1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1') == '0'\nassert solution('2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1') == '1'\nassert solution('2 3\\n2 2\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100') == '14400'\n"
    },
    {
        "number": 3070,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400\") == \"1800\\n\"\nassert solution(\"2 2\\n1 1800 3600 1800\\n1 1900 3600 1600\\nSample Output 2:\") == \"impossible\\n\"\nassert solution(\"1 3\\n1 1800 3600 1800\\n1 2000 9200 1600\\n1 2200 9400 1400\") == \"1800\\n\"\nassert solution(\"1 2\\n1 1800 3600 1800\\n1 1900 3600 1600\\nSample Output 2:\") == \"impossible\\n\"\nassert solution(\"1 1\\n1 1800 3600 1800\\n1 2000 9200 1600\\n1 2200 9400 1400\") == \"1800\\n\"\n"
    },
    {
        "number": 3071,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2''') == 'A1-B2 B1-A2 A3-B3'\nassert solution('''2 3''') == 'A1-C1 A2-B1 B2-C2'\nassert solution('''1 2''') == 'A1-B1'\nassert solution('''10 10''') == 'A1-B1 A2-C2 B2-C1 A3-D4 B3-E5 C4-F6 D5-G7 E6-H8 F7-I9 G8-J10 H9-K11 I10-L12 J11-M13 K12-N14 L13-O15 M14-P16 N15-Q17 O16-R18 P17-S19 Q18-T20 R19-U21 S20-V22 U21-W23 T22-X24'\nassert solution('''7 7''') == 'A1-B1 A2-C2 B2-C1 A3-D4 B3-E5 C4-F6 D5-G7 E6-H8 F7-I9 G8-J10 H9-K11 I10-L12 J11-M13 K12-N14 L13-O15 M14-P16 N15-Q17 O16-R18 P17-S19 Q18-T20 R19-U21 S20-V22 U21-W23 T22-X24'\n"
    },
    {
        "number": 3071,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"A1-B2 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\"\nassert solution(stdin) == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\"\nassert solution(stdin) == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B2 B1-C2\"\nassert solution(stdin) == \"A1-B1 A2-C1 B1-C2\"\nassert solution(stdin) == \"A1-C1 A2-B2 B1-C2\"\n"
    },
    {
        "number": 3071,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\nA1-B2 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\"\nassert solution(\"2 3\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\"\nassert solution(\"3 3\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\"\nassert solution(\"4 4\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\\nA1-B2 A2-C2 B2-C1\"\nassert solution(\"2 1\") == \"A1-C1 B1-C2\"\n"
    },
    {
        "number": 3071,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 2') == 'A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2'\nassert solution('2 3') == 'A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2'\nassert solution('1 2') == 'A1-B1'\nassert solution('4 5') == 'A1-B1 A2-C2 B2-C1 A3-D4 D3-E2 E1-F3'\nassert solution('3 4') == 'A1-B1 A2-C2 B2-C1 A3-D4 D3-E2 E1-F3'\n"
    },
    {
        "number": 3071,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 2\\n' + \n         '3 2\\n') == 'A1-B2 B1-A2 A3-B3\\n' + \n         'A2-B3 B2-A3 A1-B1\\n' + \n         'A3-B1 B3-A1 A2-B2\\n' + \n         'A1-B2 A2-C2 B2-C1\\n' + \n         'A1-C1 A2-B1 B2-C2\\n' + \n         'A1-B2 A2-C1 B1-C2\\n' + \n         'A1-C2 A2-B2 B1-C1'"
    },
    {
        "number": 3071,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3') == 'A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2'\n"
    },
    {
        "number": 3071,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 2''') == 'A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2'\nassert solution('''2 3''') == 'A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2'\nassert solution('''4 2''') == 'A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2 A3-D3 D1-E2\\nA1-E2 A3-D3 D1-B1 B3-C3'\nassert solution('''5 2''') == 'A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2 A3-D3 D1-E2\\nA1-E2 A3-D3 D1-B1 B3-C3 B4-D4 D2-E1\\nA1-E1 A3-D3 D1-B1 B3-C3'\nassert solution('''10 5''') == 'A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2 A3-D3 D1-E2\\nA1-E2 A3-D3 D1-B1 B3-C3 B4-D4 D2-E1\\nA1-E1 A3-D3 D1-B1 B3-C3 B5-D5 D2-E2\\nA1-E2 A3-D3 D1-B1 B3-C3'\n"
    },
    {
        "number": 3071,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 2') == 'A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2'\nassert solution('2 3') == 'A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2'\nassert solution('3 2') == 'A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2'\nassert solution('2 3') == 'A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2'\nassert solution('3 2') == 'A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2'\n"
    },
    {
        "number": 3071,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 2''') == '''A1-B2 A2-C2 B2-C1\nA1-C1 A2-B1 B2-C2\nA1-B2 A2-C1 B1-C2'''\n\nassert solution('''2 3''') == '''A1-B1 A2-C2 B2-C1\nA1-C1 A2-B1 B2-C2\nA1-B2 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1'''\n\nassert solution('''3 3''') == '''A1-B1 A2-C2 B2-C1 B3-D3 C3-D2 C1-D1\nA1-C1 A2-B1 B2-C2 B3-D3 C1-D1 C2-D2 D1-C2 D2-B1 D3-A1\nA1-B2 A2-C1 B1-C2 B3-D3 C1-D1 C2-D2 D1-C2 D2-B2 D3-A2\nA1-B3 A2-C2 B2-C1 B3-D3 C1-D1 C2-D2 D1-C2 D2-B3 D3-A3\nA1-C1 A2-B1 B2-C2 B3-D3 C1-D1 C2-D2 D1-C2 D2-B1 D3-A1\nA1-C2 A2-B2 B2-C1 B3-D3 C1-D1 C2-D2 D1-C2 D2-B2 D3-A2\nA1-B1 A2-C1 B1-C2 B3-D3 C1-D1 C2-D2 D1-C2 D2-B1 D3-A1\nA1-C3 A2-B3 B2-C2 B3-D3 C1-D1 C2-D2 D1-C2 D2-B3 D3-A3'''\n\nassert solution('''3 4''') == '''A1-B1 A2-C2 B2-C1 B3-D3 C3-D2 C1-D1\nA1-C1 A2-B1 B2-C2 B3-D3 C1-D1 C2-D2 D1-C2 D2-B1 D3-A1\nA1-B2 A2-C1 B1-C2 B3-D3 C1-D1 C2-D2 D1-C2 D2-B2 D3-A2\nA1-B3 A2-C2 B2-C1 B3-D3 C1-D1 C2-D2 D1-C2 D2-B3 D3-A3\nA1-C1 A2-B1 B2-C2 B3-D3 C1-D1 C2-D2 D1-C2 D2-B1 D3-A1\nA1-C2 A2-B2 B2-C1 B3-D3 C1-D1 C2-D2 D1-C2 D2-B2 D3-A2\nA1-B1 A2-C1 B1-C2 B3-D3 C1-D1 C2-D2 D1-C2 D2-B1 D3-A1\nA1-C3 A2-B3 B2-C2 B3-D3 C1-D1 C2-D2 D1-C2 D2-B3 D3-A3'''\n\nassert solution('''2 3''') == '''A1-B1 A2-C2 B2-C1\nA1-C1 A2-B1 B2-C2\nA1-B2 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1'''"
    },
    {
        "number": 3071,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 2') == 'A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2'\nassert solution('2 3') == 'A1-C2 B2-C1\\nA1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2'\n"
    },
    {
        "number": 3072,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin[0]\nprint(solution(stdin))\n"
    },
    {
        "number": 3072,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('.XX..') == 1\nassert solution('.X..X') == 3\nassert solution('XXXX') == 1\nassert solution('XXX.X.X') == 3\nassert solution('X.X.X.X') == 4\n"
    },
    {
        "number": 3072,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(open(\"inputs/test1.txt\")) == \"7\"\nassert solution(open(\"inputs/test2.txt\")) == \"9\"\nassert solution(open(\"inputs/test3.txt\")) == \"16\"\n"
    },
    {
        "number": 3072,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3072,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 2\n..\n..\n''') == '7'\nassert solution('''4 4\nX.XX\nX..X\n..X.\n..XX\n''') == '9'\nassert solution('''3 3\n..X.\nX..\n.X.\nSample Output 2:\n6\nassert solution('''2 1\n.\n''') == '1'\nassert solution('''2 2\n..\n..\n''') == '0'\n"
    },
    {
        "number": 3072,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 2\n..\n..''') == '7'\nassert solution('''4 4\nX.XX\nX..X\n..X.\n..XX''') == '9'\nassert solution('''4 4\nX..\nX.X\n..X\n.XX.\n''') == '9'\nassert solution('''5 5\n.X.X\nX..X\nXX.X\n.X.X\nX..X\n''') == '19'\nassert solution('''7 7\nXXXXXXXX\nXXXXXXXX\nXXXXX.X\nX..X.X\nX.X.X.\n.XXXX.\n.X.X.X\n.X.X.X\n''') == '35'\n"
    },
    {
        "number": 3072,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\nprint('Done!')\n"
    },
    {
        "number": 3072,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"9\""
    },
    {
        "number": 3072,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3072,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 2\n..\n..\n''') == '7'\nassert solution('''4 4\nXX.XX\nXX..X\n..X.\n..XX\n''') == '9'\nassert solution('''6 4\n.XX..\nXX.XX\n.XX..\n.XX..\n.XX..\n.XX..\n''') == '12'\nassert solution('''10 10\n.XX..XX\n..X.X.X\n.XX.X.X\n.XX.X.X\n.XX.X.X\n.XX.X.X\n.XX.X.X\n.XX.X.X\n.XX.X.X\n''') == '30'\nassert solution('''13 17\n.XXXXXXXX\nX.X..X.X\nX..XX..X\nX.X.XX..\nX.X..X.X\nX..X..XX\nX..X..XX\nX..X..XX\nX..X..XX\nX..X..XX\n''') == '60'\n"
    },
    {
        "number": 3073,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 3073,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3\n3 3 2 2 100\n1 1 1 1 500\n\"\"\") == '600'\nassert solution(\"\"\"2\n2 0 2 1 100\n6 0 8 1 1\n\"\"\") == '100'\nassert solution(\"\"\"8\n2 0 2 1 100\n6 0 8 1 1\n\"\"\") == '100'\nassert solution(\"\"\"1\n1 1 1 1 100\n\"\"\") == '-1'\nassert solution(\"\"\"4\n2 0 2 1 100\n6 0 8 1 1\n1 1 1 1 500\n\"\"\") == '200'\n"
    },
    {
        "number": 3073,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '100'\nassert solution(stdin) == '-1'\nassert solution(stdin) == '100'\nassert solution(stdin) == '100'\nassert solution(stdin) == '-1'\n"
    },
    {
        "number": 3073,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1 1 1 100\\n1 1 1 1 500') == '600'\nassert solution('2\\n3 3 2 2 100\\n1 1 1 1 500') == '100'\nassert solution('2\\n2 0 2 1 100\\n6 0 8 1 1') == '100'\nassert solution('1\\n1 1 1 1 500\\n1 1 1 1 500') == '600'\nassert solution('2\\n2 0 2 1 100\\n2 0 2 1 100\\n2 0 2 1 100\\n2 0 2 1 100\\n2 0 2 1 100\\n2 0 2 1 100\\n2 0 2 1 100\\n2 0 2 1 100') == '20'\n"
    },
    {
        "number": 3073,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n3 3 2 2 100\n1 1 1 1 500\n''') == '600'\nassert solution('''2\n2 0 2 1 100\n6 0 8 1 1\n''') == '100'\nassert solution('''2\n2 3 2 2 100\n1 1 1 1 500\n''') == '600'\nassert solution('''2\n2 0 2 1 100\n6 0 8 1 1\n''') == '100'\n"
    },
    {
        "number": 3073,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2''') == '600'\nassert solution('''3 2 2 2 100''') == '600'\nassert solution('''2 0 2 1 100''') == '100'\nassert solution('''6 0 8 1 1''') == '100'\nassert solution('''2''') == '-1'\n"
    },
    {
        "number": 3073,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3073,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n3 3 2 2 100\n1 1 1 1 500\n''') == '600'\n\nassert solution('''2\n2 0 2 1 100\n6 0 8 1 1\n''') == '100'\n\nassert solution('''5\n2\n-1 -1 1 1 100\n3 3 3 2 2\n1 1 1 1 500\n1 1 1 1 500\n1 1 1 1 500\n''') == '-1'\n\nassert solution('''4\n2\n-1 -1 1 1 100\n2 2 2 2 2\n1 1 1 1 500\n1 1 1 1 500\n1 1 1 1 500\n1 1 1 1 500\n1 1 1 1 500\n1 1 1 1 500\n1 1 1 1 500\n1 1 1 1 500\n1 1 1 1 500\n1 1 1 1 500\n''') == '-1'\n\nassert solution('''5\n2\n0 0 2 2 100\n5 0 8 2 2\n1 1 1 1 500\n1 1 1 1 500\n1 1 1 1 500\n1 1 1 1 500\n1 1 1 1 500\n1 1 1 1 500\n1 1 1 1 500\n1 1 1 1 500\n1 1 1 1 500\n1 1 1 1 500\n1 1 1 1 500\n''') == '-1'\n"
    },
    {
        "number": 3073,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"600\""
    },
    {
        "number": 3073,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''2\n3 3 2 2 100\n1 1 1 1 500\n''') == '600'\nassert solution(\n'''2\n2 0 2 1 100\n6 0 8 1 1\n''') == '100'\nassert solution(\n'''2\n3 3 2 2 100\n3 3 2 2 100\n''') == '-1'\nassert solution(\n'''2\n2 0 2 1 100\n6 0 8 1 1\n''') == '100'\nassert solution(\n'''3\n3 3 2 2 100\n3 3 2 2 100\n3 3 2 2 100\n''') == '-1'\n"
    },
    {
        "number": 3074,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '3'\nassert solution('''36''') == '3'\nassert solution('''361''') == '3'\nassert solution('''26''') == '0'\nassert solution('''11''') == '0'\n"
    },
    {
        "number": 3074,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n361') == '3'\nassert solution('2\\n11') == '0'\nassert solution('2\\n351') == '3'\nassert solution('2\\n971') == '0'\nassert solution('2\\n1234') == '1'\n"
    },
    {
        "number": 3074,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n    1\n    2\n''') == '2'\n\nassert solution('''\n    1\n    3\n''') == '0'\n\nassert solution('''\n    1\n    77\n''') == '1'\n\nassert solution('''\n    3\n    12\n''') == '2'\n\nassert solution('''\n    10\n    123456789\n''') == '5'\n"
    },
    {
        "number": 3074,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n3') == '0'\nassert solution('3\\n361') == '3'\nassert solution('3\\n11') == '0'\nassert solution('2\\n361') == '0'\nassert solution('2\\n11') == '0'\n"
    },
    {
        "number": 3074,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3074,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n361') == '3'\nassert solution('2\\n11') == '0'\n"
    },
    {
        "number": 3074,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n3\n361\n''') == '3'\nassert solution('''\n2\n11\n''') == '0'\nassert solution('''\n1\n111\n''') == '3'\nassert solution('''\n5\n12345\n''') == '3'\nassert solution('''\n8\n12345678\n''') == '3'\n"
    },
    {
        "number": 3074,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\".join(solution(\"\".join(map(str, range(1, 1001)))))) == \"\".join(map(str, range(1, 1001)))\nassert solution(\"\".join(solution(\"\".join(map(str, range(1, 1001)))))) == \"\".join(map(str, range(1, 1001)))\nassert solution(\"\".join(solution(\"\".join(map(str, range(1, 1001)))))) == \"\".join(map(str, range(1, 1001)))\nassert solution(\"\".join(solution(\"\".join(map(str, range(1, 1001)))))) == \"\".join(map(str, range(1, 1001)))\nassert solution(\"\".join(solution(\"\".join(map(str, range(1, 1001)))))) == \"\".join(map(str, range(1, 1001)))\n"
    },
    {
        "number": 3074,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n361''') == '3'\nassert solution('''2\n11''') == '0'\nassert solution('''6\n88''') == '0'\nassert solution('''8\n23''') == '1'\nassert solution('''10\n28''') == '0'\n"
    },
    {
        "number": 3074,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6\\n6') == '3'\nassert solution('9\\n9') == '0'\nassert solution('20\\n20') == '0'\nassert solution('101\\n101') == '1'\nassert solution('100000\\n100000') == '0'\n"
    },
    {
        "number": 3075,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(open(\"input/valid/sample_1.txt\").read()) == \"10\"\nassert solution(open(\"input/valid/sample_2.txt\").read()) == \"cancel road trip\"\nassert solution(open(\"input/valid/sample_3.txt\").read()) == \"20\"\nassert solution(open(\"input/valid/sample_4.txt\").read()) == \"cancel road trip\"\nassert solution(open(\"input/valid/sample_5.txt\").read()) == \"30\"\n"
    },
    {
        "number": 3075,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 10\\n2 100\\n1 10\\n11 5\\n') == '10'\nassert solution('1 10\\n2 100\\n1 10\\n13 5\\n') == 'cancel road trip'\nassert solution('1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1"
    },
    {
        "number": 3075,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1\\n') == 'cancel road trip'\nassert solution('1\\n1\\n1\\n3\\n') == '10'\nassert solution('1\\n1\\n1\\n5\\n') == 'cancel road trip'\nassert solution('1\\n1\\n1\\n3\\n5\\n') == '11'\nassert solution('1\\n1\\n1\\n2\\n3\\n') == '10'\n"
    },
    {
        "number": 3075,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 10\n2 100\n1 10\n11 5''') == '10'\nassert solution('''3 10\n2 100\n1 10\n11 5''') == 'cancel road trip'\nassert solution('''1 2\n1 1\n2 1''') == '1'\n"
    },
    {
        "number": 3075,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '10'\nassert solution('1\\n1\\n1\\n1') == '1'\nassert solution('1\\n2\\n3\\n4') == '1'\nassert solution('2\\n2\\n3\\n4') == '1'\nassert solution('2\\n1\\n2\\n3') == '1'\n"
    },
    {
        "number": 3075,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 10\\n2 100\\n1 10\\n11 5\") == \"10\"\nassert solution(\"3 10\\n2 100\\n1 10\\n13 5\") == \"cancel road trip\"\nassert solution(\"5 10\\n3 2\\n2 2\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\") == \"2\"\nassert solution(\"6 10\\n2 4\\n2 1\\n1 1\\n1 1\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\") == \"cancel road trip\"\nassert solution(\"7 10\\n2 4\\n2 1\\n1 1\\n1 1\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\") == \"2\"\n"
    },
    {
        "number": 3075,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 10\\n2 100\\n1 10\\n11 5') == '10'\nassert solution('3 10\\n2 100\\n1 10\\n13 5') == 'cancel road trip'\nassert solution('2 10\\n2 100\\n1 10\\n13 5\\n5 10\\n1 100\\n5 10') == '9'\nassert solution('3 10\\n2 100\\n1 10\\n13 5\\n5 10\\n1 100\\n5 10') == 'cancel road trip'\nassert solution('2 10\\n2 100\\n1 10\\n13 5\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1 100\\n5 10\\n5 10\\n1"
    },
    {
        "number": 3075,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'cancel road trip'\n"
    },
    {
        "number": 3075,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 3075,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 10\\n2 100\\n1 10\\n11 5') == '10'\nassert solution('3 10\\n2 100\\n1 10\\n13 5') == 'cancel road trip'\n"
    },
    {
        "number": 3076,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(open(\"knapsack_test.txt\").read()) == open(\"knapsack_test_out.txt\").read()\n\"\"\"\n"
    },
    {
        "number": 3076,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 9\\n2 8\\n1 1\\n3 4\\n5 100\\n') == '1 8 9 9 100 101 108 109 109'\nassert solution('5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\\n') == '0 7 8 11 15 16 19'\n"
    },
    {
        "number": 3076,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 9\\n2 8\\n1 1\\n3 4\\n5 100') == '1 8 9 9 100 101 108 109 109\\n'\nassert solution('5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\\n') == '0 7 8 11 15 16 19\\n'\nassert solution('3 7\\n3 3\\n5 3\\n5 5\\n5 4\\n5 4\\n5 5\\n') == '0 0 0 0 0 0 0\\n'\nassert solution('5 6\\n3 3\\n2 2\\n1 1\\n2 2\\n3 3\\n') == '0 0 0 0 0 0 0\\n'\nassert solution('3 7\\n3 3\\n5 3\\n5 5\\n5 4\\n5 4\\n5 5\\n') == '0 0 0 0 0 0 0\\n'\n"
    },
    {
        "number": 3076,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"2 3\") == \"2 1\"\nassert solution(\"2 3\") == \"2 1\"\n"
    },
    {
        "number": 3076,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3076,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"4 9\n2 8\n1 1\n3 4\n5 100\n\"\"\") == \"1 8 9 9 100 101 108 109 109\"\nassert solution(\"\"\"5 7\n2 2\n3 8\n2 7\n2 4\n3 8\n\"\"\") == \"0 7 8 11 15 16 19\"\n"
    },
    {
        "number": 3076,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"4 9\n2 8\n1 1\n3 4\n5 100\"\"\"\n) == \"\"\"1 8 9 9 100 101 108 109 109\"\"\"\n\nassert solution(\n    \"\"\"5 7\n2 2\n3 8\n2 7\n2 4\n3 8\"\"\"\n) == \"\"\"0 7 8 11 15 16 19\"\"\"\n\nassert solution(\n    \"\"\"5 1\n0 0\n1 1\n2 2\n3 3\n4 4\n5 5\"\"\"\n) == \"\"\"0 0 0 0 0 0 0\"\"\"\n\nassert solution(\n    \"\"\"5 1\n0 0\n1 1\n2 2\n3 3\n4 4\n5 5\"\"\"\n) == \"\"\"0 0 0 0 0 0 0\"\"\"\n"
    },
    {
        "number": 3076,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0 2\\n2 1\") == \"0 1\"\nassert solution(\"0 2\\n2 1\") == \"1\"\nassert solution(\"0 2\\n2 1\") == \"1\"\nassert solution(\"0 2\\n2 1\") == \"1\"\nassert solution(\"0 2\\n2 1\") == \"1\"\n"
    },
    {
        "number": 3076,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 9\\n2 8\\n1 1\\n3 4\\n5 100\\n\") == \"1 8 9 9 100 101 108 109 109\"\nassert solution(\"5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\\n\") == \"0 7 8 11 15 16 19\"\nassert solution(\"1 2\\n3 4\\n5 100\\n\") == \"0 7 8 11 15 16 19\"\nassert solution(\"2 2\\n3 4\\n5 100\\n\") == \"0 7 8 11 15 16 19\"\nassert solution(\"1 1\\n3 4\\n5 100\\n\") == \"0 7 8 11 15 16 19\"\n"
    },
    {
        "number": 3076,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3077,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0 1 2\") == 0\nassert solution(\"1 2 3\") == 0\nassert solution(\"1 3 3\") == 0\nassert solution(\"1 3 3\") == 0\nassert solution(\"1 1 1\") == 0\n"
    },
    {
        "number": 3077,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3') == '1'\nassert solution('1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n') == '3'\nprint(solution(''))\n"
    },
    {
        "number": 3077,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\") == \"1\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 0\\n0 3\\n3 3\") == \"3\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n0 3\") == \"3\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 3\") == \"3\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n0 3\") == \"3\"\n"
    },
    {
        "number": 3077,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\") == \"1\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n\") == \"3\"\nassert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n\") == \"3\"\n\"\"\"\n"
    },
    {
        "number": 3077,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"1 3 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\"\"\") == \"1\"\n\nassert solution(\n\"\"\"1 5 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n-1 -1\n2 2\"\"\") == \"3\"\n\nassert solution(\n\"\"\"1 5 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n-1 -1\n2 2\"\"\") == \"3\"\n\nassert solution(\n\"\"\"2 2 2\n-1 -1 -1\n0 0 1\n-1 0 1\n1 1 1\n-1 -1 1\n2 2\"\"\") == \"2\"\n\nassert solution(\n\"\"\"2 5 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n-1 -1\n2 2\n-1 -1\n0 0\"\"\") == \"2\""
    },
    {
        "number": 3077,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n3\\n3\\n-3\\n3 -3\\n3 0\\n0 3\\n-3 3\") == \"1\"\nassert solution(\"2\\n3\\n5\\n3\\n2\\n2\\n-2\\n2\\n-2\\n-2\\n-2\\n0\") == \"6\"\nassert solution(\"2\\n3\\n5\\n3\\n2\\n2\\n-2\\n2\\n-2\\n-2\\n-2\\n0\\n2\\n2\") == \"4\"\nassert solution(\"1\\n3\\n3\\n-3\\n3 -3\\n3 0\\n0 3\\n-3 3\") == \"1\"\nassert solution(\"1\\n3\\n3\\n-3\\n3 -3\\n3 0\\n0 3\\n-3 3\\n3 -3\\n3 0\") == \"1\"\n"
    },
    {
        "number": 3077,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\") == 1\nassert solution(\"1 5 3\\n0 0 1\\n3 3\") == 1\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n3 0\") == 3\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n3 -3\") == 1\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\") == 3\n"
    },
    {
        "number": 3077,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 0 1\\n3 3\\n-3 3') == '1\\n'\nassert solution('1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3') == '3\\n'\nassert solution('1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n0 0\\n-3 3\\n3 -3') == '3\\n'\nassert solution('1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n-3 3\\n3 -3') == '3\\n'\nassert solution('1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n-3 3\\n3 -3\\n0 0\\n-3 3\\n3 -3') == '3\\n'\n"
    },
    {
        "number": 3077,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 3 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3''') == '1'\nassert solution('''1 5 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3''') == '3'\nassert solution('''1 5 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3''') == '3'\nassert solution('''1 5 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3''') == '3'\nassert solution('''1 5 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3''') == '3'\n"
    },
    {
        "number": 3077,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"1 3 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n\"\"\") == \"1\"\nassert solution(\"\"\"1 5 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n\"\"\") == \"3\"\nassert solution(\"\"\"1 7 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n\"\"\") == \"3\"\nassert solution(\"\"\"1 11 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n\"\"\") == \"3\"\nassert solution(\"\"\"1 14 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3078,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''5 10000\n1\n1\n1\n1\n1\n''') == '4\\n4\\n2\\n2\\n0\\n'\nassert solution(\n'''5 9\n1\n1\n10\n1\n9\n''') == '2\\n0\\n0\\n2\\n0\\n'\nassert solution(\n'''10 10000000\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n''') == '5\\n5\\n5\\n5\\n5\\n'\nassert solution(\n'''10 10\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n''') == '0\\n0\\n0\\n0\\n0\\n'\nassert solution(\n'''10 1000\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '1\\n1\\n1\\n1\\n1\\n'\n"
    },
    {
        "number": 3078,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output\nprint(f\"Finished testing\")\n\"\"\"\n\nexpected_output = \"\"\"\n4\n4\n2\n2\n0\n\"\"\""
    },
    {
        "number": 3078,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 10000\n1\n1\n1\n1\n1\n''') == '4\\n4\\n2\\n2\\n0\\n'\nassert solution('''5 9\n1\n1\n10\n1\n9\n''') == '2\\n0\\n0\\n2\\n0\\n'\nassert solution('''5 9\n1\n1\n10\n1\n9\n''') == '2\\n0\\n0\\n2\\n0\\n'\nassert solution('''5 9\n1\n1\n10\n1\n9\n''') == '2\\n0\\n0\\n2\\n0\\n'\nassert solution('''5 9\n1\n1\n10\n1\n9\n''') == '2\\n0\\n0\\n2\\n0\\n'\n"
    },
    {
        "number": 3078,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 10000\\n1\\n1\\n1\\n1\\n1') == '4\\n4\\n2\\n2\\n0\\n'\nassert solution('5 9\\n1\\n1\\n10\\n1\\n9') == '2\\n0\\n0\\n2\\n0\\n'\nassert solution('3 1000000000\\n2\\n1\\n2\\n1\\n2\\n1') == '0\\n0\\n0\\n0\\n0\\n'\nassert solution('5 11\\n1\\n2\\n3\\n4\\n5') == '2\\n0\\n0\\n0\\n0\\n'\nassert solution('2 2\\n1\\n2') == '0\\n0\\n'\n"
    },
    {
        "number": 3078,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3078,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3078,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 1\") == \"0\\n0\\n2\\n2\\n0\"\nassert solution(\"2 10\") == \"2\\n2\\n0\\n0\\n0\"\nassert solution(\"10 1\") == \"0\\n0\\n0\\n0\\n0\"\nassert solution(\"2 1 2\") == \"2\\n0\\n0\\n0\\n0\"\nassert solution(\"2 10 2\") == \"2\\n0\\n0\\n0\\n0\"\n"
    },
    {
        "number": 3078,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == '4'\nassert solution('2\\n1\\n1\\n1\\n1') == '4'\nassert solution('3\\n1\\n1\\n1\\n1') == '4'\nassert solution('4\\n1\\n1\\n1\\n1') == '4'\nassert solution('5\\n1\\n1\\n1\\n1') == '4'\n"
    },
    {
        "number": 3078,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 10000\\n1\\n1\\n1\\n1\\n1\\n') == '4\\n4\\n2\\n2\\n0\\n'\nassert solution('5 9\\n1\\n1\\n10\\n1\\n9\\n') == '2\\n0\\n0\\n2\\n0\\n'\nassert solution('4 1\\n1\\n1\\n1\\n1\\n') == '4\\n4\\n2\\n2\\n0\\n'\nassert solution('7 10\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n') == '0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n'\nassert solution('8 1000000\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n') == '6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n'\n\n-------"
    },
    {
        "number": 3078,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == '4'\nassert solution('3\\n1\\n1\\n1') == '2'\nassert solution('7\\n1\\n1\\n1\\n1\\n1\\n1') == '3'\nassert solution('2\\n1\\n1') == '2'\nassert solution('5\\n9\\n1\\n1\\n1\\n10') == '2'\n"
    },
    {
        "number": 3079,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin[::-1]"
    },
    {
        "number": 3079,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n2\nne\n'''\n) == 'NE'\n\nassert solution(\n'''\n4\nkava\n'''\n) == 'DA'\n\nassert solution(\n'''\n4\na\n'''\n) == 'a'\n\nassert solution(\n'''\n4\nvava\n'''\n) == 'vava'\n\nassert solution(\n'''\n4\nmak\n'''\n) =='mak'"
    },
    {
        "number": 3079,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('kava') == 'ne'\nassert solution('ne') == 'k'\nassert solution('ka') == 'ka'\nassert solution('ka') == 'ka'\nassert solution('kava') == 'k'\n"
    },
    {
        "number": 3079,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ne') == 'NE'\nassert solution('ka') == 'DA'\nassert solution('kava') == 'ak'\nassert solution('kavakava') == 'ak'\nassert solution('kava') == 'kavakava'\n"
    },
    {
        "number": 3079,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"ne\") == \"NE\"\nassert solution(\"kava\") == \"DA\"\nassert solution(\"ka\") == \"DA\"\nassert solution(\"abcd\") == \"DA\"\nassert solution(\"abc\") == \"DA\"\n"
    },
    {
        "number": 3079,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"ne\") == \"NE\"\nassert solution(\"kava\") == \"AK\"\nassert solution(\"kava\") == \"AK\"\nassert solution(\"kava\") == \"AK\"\nassert solution(\"kava\") == \"AK\"\n"
    },
    {
        "number": 3079,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"ne\") == \"NE\"\nassert solution(\"kava\") == \"DA\"\nassert solution(\"babababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababab\n\n\nassert solution(\"babababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababab\n\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 3079,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'DA'\nassert solution('kn') == 'kn'\nassert solution('knka') == 'knak'\nassert solution('knak') == 'knak'\nassert solution('knakka') == 'knakka'\n"
    },
    {
        "number": 3079,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"ne\") == \"NE\"\nassert solution(\"kava\") == \"DA\"\nassert solution(\"ca\") == \"NE\"\nassert solution(\"a\") == \"DA\"\nassert solution(\"k\") == \"NE\"\n"
    },
    {
        "number": 3079,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ne\\n'\n'n') == 'NE'\nassert solution('kava\\n'\n'ak') == 'DA'\nassert solution('kava\\n'\n'a') == 'kava'\nassert solution('kava\\n'\n'ka') == 'kava'\nassert solution('kava\\n'\n'k') == 'kava'\n"
    },
    {
        "number": 3080,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\n''') == '2\\n0\\n2\\n1'\nassert solution('''8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '0\\n0\\n3\\n2'"
    },
    {
        "number": 3080,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 4 4') == '2'\nassert solution('8 10 4') == '0'\nassert solution('8 10 3') == '1'\nassert solution('8 10 2') == '0'\nassert solution('8 10 1') == '0'\n"
    },
    {
        "number": 3080,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\") == \"0\"\nassert solution(\"1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\") == \"0\"\nassert solution(\"1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\") == \"0\"\nassert solution(\"1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\") == \"0\"\nassert solution(\"1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\") == \"0\"\n"
    },
    {
        "number": 3080,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\n''') == '2\\n0\\n2\\n1'\n\nassert solution(\n'''\n4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\n''') == '0\\n0\\n3\\n2'\n\nassert solution(\n'''\n2 2 1\n2 1\n1 1\n''') == '2'\n\nassert solution(\n'''\n2 2 1\n2 1\n1 1\n''') == '0'\n\nassert solution(\n'''\n5 4 4\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n1 1 4\n1 2 4\n1 1 3\n1 2 3\n1 3 6\n1 4 8\n1 5 7\n2 1 4\n2 2 3 2\n2 2 6 8\n2 1 3 4 5 6\n2 1 2 4 7 8\n2 1 1 3 4 5 6\n2 1 1 2 4 7 8\n2 1 1 1 4 5 6\n2 1 1 1 4 5 6\n2 1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5 6\n1 1 1 4 5"
    },
    {
        "number": 3080,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2') == '0'\nassert solution('2 3') == '0'\nassert solution('1 3') == '2'\nassert solution('3 6') == '2'\nassert solution('6 8') == '1'\n"
    },
    {
        "number": 3080,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 4 4\") == \"2\"\nassert solution(\"8 10 4\") == \"0\"\nassert solution(\"8 10 4\") == \"2\"\nassert solution(\"8 10 4\") == \"0\"\nassert solution(\"8 10 4\") == \"2\"\n"
    },
    {
        "number": 3080,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('0 0 0') == '0'\nassert solution('3 2 1') == '0'\nassert solution('4 2 4') == '4'\nassert solution('8 10 4') == '3'\n"
    },
    {
        "number": 3080,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0 4 5\") == \"0\"\nassert solution(\"0 10 1\") == \"1\"\nassert solution(\"1 3 1\") == \"0\"\nassert solution(\"1 5 2\") == \"1\"\nassert solution(\"3 1 3\") == \"0\"\n"
    },
    {
        "number": 3080,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\n''') == '2\\n0\\n2\\n1\\n'\n\nassert solution('''8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '0\\n0\\n3\\n2\\n'\n\nassert solution('''10 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '0\\n0\\n3\\n2\\n'\n\nassert solution('''8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '0\\n0\\n3\\n2\\n'\n\nassert solution('''8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '0\\n0\\n3\\n2\\n'"
    },
    {
        "number": 3080,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(open('test_1.txt').read()) == '2\\n0\\n3'\nassert solution(open('test_2.txt').read()) == '2\\n0\\n3\\n2'\nassert solution(open('test_3.txt').read()) == '2\\n0\\n1\\n1\\n0\\n1\\n2'\nassert solution(open('test_4.txt').read()) == '1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1'\nassert solution(open('test_5.txt').read()) == '2\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\"
    },
    {
        "number": 3081,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 1''') == '2'\nassert solution('''2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n''') == '1'\nassert solution('''3 3\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n1 2 2\n2 1 1\n2 2 1\n2 2 2\n''') == '2'\nassert solution('''4 4\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n1 2 2\n2 1 1\n2 2 1\n2 2 2\n2 2 3\n2 3 1\n2 3 2\n2 3 3\n2 3 4\n''') == '4'\nassert solution('''7 7\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n1 2 2\n2 1 1\n2 2 1\n2 2 2\n2 2 3\n2 3 1\n2 3 2\n2 3 3\n2 3 4\n2 3 5\n2 3 6\n2 3 7\n2 3 8\n2 3 9\n2 3 10\n2 3 11\n2 3 12\n2 3 13\n2 3 14\n2 3 15\n2 3 16\n2 3 17\n2 3 18\n2 3 19\n2 3 20\n2 3 21\n2 3 22\n2 3 23\n2 3 24\n2 3 25\n2 3 26\n2 3 27\n2 3 28\n2 3 29\n2 3 30\n2 3 31\n2 3 32\n2 3 33\n2 3 34\n2 3 35\n2 3 36\n2 3 37\n2 3 38\n2 3 39\n2 3 40\n2 3 41\n2 3 42\n2 3 43\n2 3 44\n2 3 45\n2 3 46\n2 3 47\n2 3 48\n2 3 49\n2 3 50\n2 3 51\n2 3 52\n2 3 53\n2 3 54\n2 3 55\n2 3 56\n2 3 57\n2 3 58\n2 3 59\n2 3 60\n2 3 61\n2 3 62\n2 3 63\n2 3 64\n2 3 65\n2 3 66\n2 3 67\n2 3 68\n2 3 69\n2 3 70\n2 3 71\n2 3 72\n2 3 73\n2 3 74\n2 3 75\n2 3 76\n2 3 77\n2 3 78\n2 3 79\n2 3 80\n2 3 81\n2 3 82\n2 3 83\n2 3 84\n2 3 85\n2 3 86\n2 3 87\n2 3 88\n2 3 89\n2 3 90\n2 3 91\n2 3 92\n2 3 93\n2 3 94\n2 3 95\n2 3 96\n2 3 97\n2 3 98\n2 3 99\n2 3 100\n2 3 101\n2 3 102\n2 3 103\n2 3 104\n2 3 105\n2 3 106\n2 3 107\n2 3 108\n2 3 109\n2 3 110\n2 3 111\n2 3 112\n2 3 113\n2 3 114\n2 3 115\n2 3 116\n2 3 117\n2 3 118\n2 3 119\n2 3 120\n2 3 121\n2 3 122\n2 3 123\n2 3 124\n2 3 125\n2 3 126\n2 3 127\n2 3 128\n2 3 129\n2 3 130\n2 3 131\n2 3 132\n2 3 133\n2 3 134\n2 3 135\n2 3 136\n2 3 137\n2 3 138\n2 3 139\n2 3 140\n2 3 141\n2 3 142\n2 3 143\n2 3 144\n2 3 145\n2 3 146\n2 3 147\n2 3 148\n2 3 149\n2 3 150\n2 3 151\n2 3 152\n2 3 153\n2 3 154\n2 3 155\n2 3 156\n2 3 157\n2 3 158\n2 3 159\n2 3 160\n2 3 161\n2 3 162\n2 3 163\n2 3 164\n2 3 165\n2 3 166\n2 3 167\n2 3 168\n2 3 169\n2 3 170\n2 3 171\n2 3 172\n2 3 173\n2 3 174\n2 3 175\n2 3 176\n2 3 177\n2 3 178\n2 3 179\n2 3 180\n2 3 181\n2 3 182\n2 3 183\n2 3 184\n2 3 185\n2 3 186\n2 3 187\n2 3 188\n2 3 189\n2 3 190\n2 3 191\n2 3 192\n2 3 193\n2 3 194\n2 3 195\n2 3 196\n2 3 197\n2 3 198\n2 3 199\n2 3 200\n2 3 201\n2 3 202\n2 3 203\n2 3 204\n2 3 205\n2 3 206\n2 3 207\n2 3 208\n2 3 209\n2 3 210\n2 3 211\n2 3 212\n2 3 213\n2 3 214\n2 3 215\n2 3 216\n2 3 217\n2 3 218\n2 3 219\n2 3 220\n2 3 221\n2 3 222\n2 3 223\n2 3 224\n2 3 225\n2 3 226\n2 3 227\n2 3 228\n2 3 229\n2 3 230\n2 3 231\n2 3 232\n2 3 233\n2 3 234\n2 3 235\n2 3 236\n2 3 237\n2 3 238\n2 3 239\n2 3 240\n2 3 241\n2 3 242\n2 3 243\n2 3 244\n2 3 245\n2 3 246\n2 3 247\n2 3 248\n2 3 249\n2 3 250\n2 3 251\n2 3 252\n2 3 253\n2 3 254\n2 3 255\n2 3 256\n2 3 257\n2 3 258\n2 3 259\n2 3 260\n2 3 261\n2 3 262\n2 3 263\n2 3 264\n2 3 265\n2 3 266\n2 3 267\n2 3 268\n2 3 269\n2 3 270\n2 3 271\n2 3 272\n2 3 273\n2 3 274\n2 3 275\n2 3 276\n2 3 277\n2 3 278\n2 3 279\n2 3 280\n2 3 281\n2 3 282\n2 3 283\n2 3 284\n2 3 285\n2 3 286\n2 3 287\n2 3 288\n2 3 289\n2 3 290\n2 3 291\n2 3 292\n2 3 293\n2 3 294\n2 3 295\n2 3 296\n2 3 297\n2 3 298\n2 3 299\n2 3 300\n2 3 301\n2 3 302\n2 3 303\n2 3 304\n2 3 305\n2 3 306\n2 3 307\n2 3 308\n2 3 309\n2 3 310\n2 3 311\n"
    },
    {
        "number": 3081,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 1'''\n    ) == '2'\n\nassert solution(\n'''2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3'''\n    ) == '1'\n"
    },
    {
        "number": 3081,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\nprint('Test case 1 passed')\n\nassert solution(stdin) == stdin\nprint('Test case 2 passed')\n\nassert solution(stdin) == stdin\nprint('Test case 3 passed')\n"
    },
    {
        "number": 3081,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3081,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 3081,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2') == '2'\nassert solution('1 1') == '1'\nassert solution('0 1') == '1'\nassert solution('1 0') == '1'\nassert solution('1 2 1') == '1'\n"
    },
    {
        "number": 3081,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expect\n\"\"\"\n"
    },
    {
        "number": 3081,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 1''') == '2'\nassert solution('''2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n2 1 3\n2 1 3''') == '1'\nassert solution('''2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n2 1 1\n2 1 1''') == '0'\nassert solution('''2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n2 1 3\n2 1 1\n2 1 1''') == '1'\nassert solution('''2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n2 1 3\n2 1 1\n2 1 1''') == '1'\n"
    },
    {
        "number": 3081,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 1\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 0\") == \"1\"\nassert solution(\"1 2 1\") == \"2\"\nassert solution(\"2 1 1\") == \"1\"\n"
    },
    {
        "number": 3081,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"1 2 1\") == \"\"\nassert solution(\"0 1\") == \"\"\nassert solution(\"1 0\") == \"\"\n"
    },
    {
        "number": 3082,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''D 3 10 1\nC 6 1\nC 9 3\n''') == '40.500000000'\nassert solution('''D 2 10 1\nD 3 15 1\nD 2 10 1\n''') == '49.000000000'\nassert solution('''C 9 3\nD 2 10 1\nD 3 15 1\nD 2 10 1\n''') == '49.000000000'\nassert solution('''C 6 1\nD 2 10 1\nD 3 15 1\nD 2 10 1\n''') == '49.000000000'\nassert solution('''C 9 3\nD 2 10 1\nD 3 15 1\nD 2 10 1\n''') == '49.000000000'\n"
    },
    {
        "number": 3082,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == expected\n\"\"\"\n"
    },
    {
        "number": 3082,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 15\nD 4 10 1\nC 6 1''') == '40.500000000'\n\nassert solution('''3 15\nD 4 10 1\nC 6 1\nC 9 3''') == '49.000000000'\n\nassert solution('''5 5\nD 4 10 1\nD 5 7 2\nC 8 5 4\nD 8 5 3\nC 9 1 1''') == '45.125'\n\nassert solution('''6 8\nD 4 10 1\nD 5 7 2\nC 8 5 4\nD 8 5 3\nC 9 1 1\nC 8 4 3''') == '45.125'\n\nassert solution('''6 6\nD 4 10 1\nD 5 7 2\nC 8 5 4\nD 8 5 3\nC 9 1 1\nC 8 4 3''') == '45.125'"
    },
    {
        "number": 3082,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 15\nD 4 10 1\nC 6 1''') == '40.500000000'\nassert solution('''3 15\nD 4 10 1\nC 6 1\nC 9 3''') == '49.000000000'\nassert solution('''7 50\nD 4 10 1\nC 6 1\nC 9 3\nD 6 8\nD 6 7\nD 9 4\nD 7 6\nD 4 4\n''') == '80.000000000'\nassert solution('''6 12\nD 4 10 1\nC 6 1\nC 9 3\nD 6 8\nD 6 7\nD 9 4\nD 7 6\nD 4 4\n''') == '110.000000000'\nassert solution('''10 50\nD 4 10 1\nC 6 1\nC 9 3\nD 6 8\nD 6 7\nD 9 4\nD 7 6\nD 4 4\n''') == '110.000000000'\n"
    },
    {
        "number": 3082,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\") == \"Impossible\"\nassert solution(\"2 15\") == \"40.500000000\"\nassert solution(\"3 15\") == \"49.000000000\"\nassert solution(\"2 15\") == \"40.500000000\"\nassert solution(\"3 15\") == \"49.000000000\"\n"
    },
    {
        "number": 3082,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 15\nD 4 10 1\nC 6 1''') == '40.500000000'\nassert solution('''3 15\nD 4 10 1\nC 6 1\nD 4 9 1\nSample Output 2:\n49.000000000\n''') == '49.000000000'\n'''"
    },
    {
        "number": 3082,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\nD 4 10 1\nC 6 1\n\"\"\") == \"40.500000000\"\n\nassert solution(\n\"\"\"\nD 4 10 1\nC 6 1\nD 7 1\nD 4 9 2\nC 9 3\n\"\"\") == \"49.000000000\"\n"
    },
    {
        "number": 3082,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"45.00000000\"\n"
    },
    {
        "number": 3082,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 15\nD 4 10 1\nC 6 1\n''') == '40.500000000'\nassert solution('''3 15\nD 4 10 1\nC 6 1\nC 9 3\n''') == '49.000000000'\nassert solution('''4 1\nD 2 3 4\nC 1 1\nD 1 1\nC 1 1\nD 1 1\n''') == '9.000000000'\nassert solution('''5 1\nD 2 3 4 5\nC 1 1 1 1\nD 1 1 1 1\nC 1 1 1 1\nD 1 1 1 1\n''') == '48.000000000'\nassert solution('''6 1\nD 2 3 4 5 6\nC 1 1 1 1 1 1\nD 1 1 1 1 1 1\nC 1 1 1 1 1 1\nD 1 1 1 1 1 1\n''') == '67.000000000'\n"
    },
    {
        "number": 3082,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"impossible\"\nassert solution(\"1 1\") == \"impossible\"\nassert solution(\"1 1 2\") == \"impossible\"\nassert solution(\"4 19\") == \"impossible\"\nassert solution(\"2 7\") == \"impossible\"\n"
    },
    {
        "number": 3083,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n10\na 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n''') == '5 4 9 3 1 10 7 6 2'\n\nassert solution('''\n10\na 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n''') == 'fail'\n\nassert solution('''\n3\na 2 1\nb 1 2\nc 2\n''') == '1 2 3 4 5 6 7 8 9'\n\nassert solution('''\n3\na 2 1\nb 1 2\nc 2\n''') == 'fail'\n\nassert solution('''\n3\na 2 1\nb 1 2\nc 2\n''') == 'fail'"
    },
    {
        "number": 3083,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3083,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''a 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7''') == '5 4 9 3 1 10 7 6 2'\nassert solution('''a 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7''') == 'fail'\nassert solution('''a 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\nj 1 5\nj 1 4\nj 1 2\nj 1 1\nj 1 0\n''') == 'j 1 1 j 1 0 j 1 2 j 1 4 j 1 5 j 1 6 j 1 7 j 1 8 j 1 9'\nassert solution('''a 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\nj 1 5\nj 1 4\nj 1 2\nj 1 1\nj 1 0\n''') == 'fail'\nassert solution('''a 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\nj 1 5\nj 1 4\nj 1 2\nj 1 1\nj 1 0\n''') == 'fail'\n"
    },
    {
        "number": 3083,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"9\\na\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\") == \"5 4 9 3 1 10 7 6 2\"\nassert solution(\"9\\na\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\\nk\") == \"fail\"\nassert solution(\"1\\na\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\\nk\") == \"fail\"\nassert solution(\"2\\na\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\") == \"5 4 9 3 1 10 7 6 2\"\nassert solution(\"2\\na\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\\nk\") == \"fail\"\n"
    },
    {
        "number": 3083,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin.split()\n'''\n\n'''\nPROBLEM STATEMENT:\n\nGiven a list of songs, find the list of songs that can be played together in a round-robin fashion.\n\n'''\n\n'''\n-----Thoughts/Observations-----\n-I think it is just a matter of creating a hash table and then using a while loop to iterate through it\n-It's pretty straightforward to see what your range is, use a for loop and the range function\n-Each song can be played after the first one, so the current song can be stored in a dictionary with the number of songs as the key\n-I think it would be easier to think of a linear solution, but it's easy to see that each song is playable after the previous one\n-The solution is given in the code\n-I think it is just iterating through the dictionary to find a combination of songs that adds up to the number of songs\n-In order to store the songs in a dictionary, I would need to use a list of dictionaries and then remove the songs that are not playable\n-There is a function that I could use to see if a song can be played after another\n-I think I would need to use a loop to iterate through the list of dictionaries and compare the values\n-This is also pretty easy to do with a list\n'''"
    },
    {
        "number": 3083,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10\na 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7''') == '5 4 9 3 1 10 7 6 2'\nassert solution('''10\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7''') == 'fail'\nassert solution('''10\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7''') == '5 4 9 3 1 10 7 6 2'\nassert solution('''10\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7''') == '5 4 9 3 1 10 7 6 2'\nassert solution('''10\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7''') == '5 4 9 3 1 10 7 6 2'\n"
    },
    {
        "number": 3083,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''10\na 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n'''\n) == '5 4 9 3 1 10 7 6 2'\nassert solution(\n'''10\na 1 6\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n'''\n) == 'fail'\nassert solution(\n'''10\na 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n'''\n) == 'fail'\nassert solution(\n'''10\na 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n'''\n) == 'fail'\nassert solution(\n'''10\na 1 6\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n'''\n) == 'fail'\n"
    },
    {
        "number": 3083,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('a 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7') == '5 4 9 3 1 10 7 6 2'\nassert solution('a 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\ni 1 3\\nj 1 7\\nfail') == 'fail'\nassert solution('a 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\nfail') == 'fail'\nassert solution('a 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\ni 1 3\\nj 1 7\\nfail\\nfail') == 'fail'\nassert solution('a 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\ni 1 3\\nj 1 7\\nfail\\nfail\\nfail') == 'fail'\n"
    },
    {
        "number": 3083,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\") == '5 4 9 3 1 10 7 6 2'\nassert solution(\"10\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\") == 'fail'\nassert solution(\"10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\") == 'fail'\nassert solution(\"10\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\") == 'fail'\nassert solution(\"10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\") == 'fail'\n"
    },
    {
        "number": 3083,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"a 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\") == \"5 4 9 3 1 10 7 6 2\"\n\"\"\""
    },
    {
        "number": 3084,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n00:00\n01:01\n''') == '3\\n00:00\\n01:00\\n01:01'\n\nassert solution(\n'''\n09:09\n09:01\n''') == '3\\n09:09\\n09:00\\n09:01'\n\nassert solution(\n'''\n00:01\n00:02\n00:03\n00:04\n''') == '4'\n\nassert solution(\n'''\n00:09\n00:05\n00:06\n00:07\n00:08\n''') == '4'\n"
    },
    {
        "number": 3084,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('00:08') == '3\\n00:09\\n00:08'\nassert solution('00:00') == '3\\n00:00\\n00:00'\nassert solution('00:00') == '3\\n00:00\\n00:00'\nassert solution('00:00') == '3\\n00:00\\n00:00'\nassert solution('00:00') == '3\\n00:00\\n00:00'\n"
    },
    {
        "number": 3084,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"00:00\") == \"3\"\nassert solution(\"01:01\") == \"00:00\"\nassert solution(\"00:08\") == \"3\"\nassert solution(\"00:09\") == \"00:08\"\nassert solution(\"00:10\") == \"00:09\"\n"
    },
    {
        "number": 3084,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''00:00\n01:01''') == '3\\n00:00\\n01:00\\n01:01'\nassert solution('''10:00\n10:00\n10:00\n10:00\n10:00\n10:00\n10:00\n10:00\n10:00\n10:00''') == '0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\"
    },
    {
        "number": 3084,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"00:00\") == \"3\"\nassert solution(\"01:01\") == \"00:00\"\nassert solution(\"00:08\") == \"3\"\nassert solution(\"00:00\") == \"3\"\nassert solution(\"00:09\") == \"3\"\n"
    },
    {
        "number": 3084,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('00:08') == '3\\n00:08\\n00:09\\n00:00'\nassert solution('00:08') == '3\\n00:08\\n00:09\\n00:00'\nassert solution('00:08') == '3\\n00:08\\n00:09\\n00:00'\nassert solution('00:08') == '3\\n00:08\\n00:09\\n00:00'\nassert solution('00:08') == '3\\n00:08\\n00:09\\n00:00'\n"
    },
    {
        "number": 3084,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''00:00''') == '''3'''\nassert solution('''00:08''') == '''3'''\nassert solution('''00:10''') == '''2'''\nassert solution('''00:10''') == '''2'''\nassert solution('''00:03''') == '''1'''\n"
    },
    {
        "number": 3084,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n00:08\n00:00\n\"\"\"\n) == \"\"\"\n3\n00:08\n00:09\n00:00\n\"\"\"\n\nassert solution(\n\"\"\"\n00:08\n00:20\n\"\"\"\n) == \"\"\"\n2\n00:08\n00:20\n\"\"\"\n\nassert solution(\n\"\"\"\n00:03\n00:04\n00:05\n\"\"\"\n) == \"\"\"\n5\n00:03\n00:04\n00:05\n00:03\n00:04\n00:05\n\"\"\"\n\nassert solution(\n\"\"\"\n23:00\n00:00\n\"\"\"\n) == \"\"\"\n2\n23:00\n00:00\n23:00\n00:00\n\"\"\"\n\nassert solution(\n\"\"\"\n00:00\n00:10\n00:15\n00:20\n\"\"\"\n) == \"\"\"\n4\n00:00\n00:10\n00:15\n00:20\n\"\"\""
    },
    {
        "number": 3084,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"00:00\") == \"00:00\"\nassert solution(\"01:01\") == \"00:00\"\nassert solution(\"00:08\") == \"00:08\"\nassert solution(\"00:00\") == \"00:00\"\nassert solution(\"01:00\") == \"00:01\"\n"
    },
    {
        "number": 3084,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3\"\n\n-----\n\nNote:\nThe data will be valid.\nThe numbers will be two-digit positive integers between 00 and 59, inclusive.\nThe hour will be between 00 and 23, and the minute will be between 00 and 59, inclusive.\nThe time will be correct.\n\n\"\"\"\n"
    },
    {
        "number": 3085,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('()') == '4,4:4,4:4'\nassert solution('(())') == '4,8:8,8:8'\nassert solution(')()())') == '4,8:8,8:8'\nassert solution('(((((((((()))))))))))') == '4,4:4,4:4'\nassert solution('))()())') == '4,8:8,8:8'\n"
    },
    {
        "number": 3085,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"(())\"\n    ) == \"4,8:8,8:\", \"Expected: 4,8:8,8: but got: {}\".format(solution(\n        \"(())\"\n    ))\nassert solution(\n    \")\"\n    ) == \"4,4:\", \"Expected: 4,4: but got: {}\".format(solution(\n        \")\"\n    ))\nassert solution(\n    \")()(\"\n    ) == \"4,4:4,4:4,4:\", \"Expected: 4,4:4,4: but got: {}\".format(solution(\n        \")()(\"\n    ))\nassert solution(\n    \")()\"\n    ) == \"4,4:4,4:\", \"Expected: 4,4:4,4: but got: {}\".format(solution(\n        \")()\"\n    ))\nassert solution(\n    \")())((()(())((()()))(()()()()(((()))()(()(()(()()))()((()()))()((()()))))))()()(())()(()(()(()())(()()()))()(()(()()()()((()(())((()(()(()()))))()(()(()()()(()()))()(()(()(()()(()(())))))(()()()()((()()))))))()()(())()()()((()()))()((()())))((()(()())()()((()()))()((()()))()(()())))(())()()(()())(()()())(()(())(())(()(())(())(()()(())(())(()(()(()())(()()()))(()()()()((()()))()(()(()()()()((()()()))()(()(()()()(()(())))))(()(())(())()()()((()()))()((()())))(())()()()()(()())(()()())(()(())))(()()()()((()()))()((()())))(())()()()((()())))(()()()()((()()))()((()())))(()()())(()())(()())(())()()()(()())(()())(()())(()())(())()()()()((()())))(()()()()((()())))(()()()()((()())))(()()()())(()())(())()()()()(()())(())()())(()())(()())(())()()()()((()()))()((()())))(())()()()()(()())(()())(()())(()())(())()()()()((()()))()((()())))(())()()()()((()())))(()()()()((()())))(()()()())(()())(())()()()(()())(()())(()())(())()()()()((()()))()((()())))(())()()()()((()())))(()()()()((()()))()((()())))(())()()()()((()())))(()()()()((()())))(()()()())(()())(())()()()((()()))()((()())))(())()()()()((()())))(()()()()((()())))(()()()())(()())(())()()()((()()))()((()())))(())()()()()((()())))(()()()()((()())))(()()()())(()())(())()()()()((()()))()((()())))(())()()()()((()())))(()()()()((()())))(()()()())(()())(())()()()((()()))()((()())))(())()()()()((()())))(()()()())(()())(())()()()((()()))()((()())))(())()()()()((()())))(()()()()((()())))(()()()())(()())(())()()()((()()))()((()())))(())()()()()((()())))(()()()())(()())(())()()()()((()()))()((()())))(())()()()()((()())))(()()()())(()())(())()()()((()()))()((()())))(())()()()()((()())))(()()()())(()())(())()()()()((()()))()((()())))(())()()()()((()())))(()()()())(()())(())()()()()((()()))()((()())))(())()()()()((()())))(()()()())(()())(())()()()()((()()))()((()())))(())()()()()((()())))(()()()())(()())(())()()()()((()()))()((()())))(())()()()()((()())))(()()()())(()())(())()()()()((()()))()((()())))(())()()()()((()())))(()()()())(()())(())()()()()((()()))()((()())))(())()()()()((()())))(()()()())(()())(())()()()()((()()))()((()())))(())()()()()((()())))(()()()())(()())(())()()()()((()()))()((()())))(())()()()()((()())))(()()()())(()())(())()()()()((()()))()((()())))(())()()()()((()())))(()()()())(()())(())()()()()((()()))()((()())))(())()()()()((()())))(()()()())(()())(())()()()()((()()))()((()())))(())"
    },
    {
        "number": 3085,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('(()') == '4,8:8,8:', \"Matched open bracket, no matching close bracket\"\nassert solution(')') == '4,4:', \"Unmatched close bracket\"\nassert solution('()') == '4,4:', \"Empty string\"\nassert solution('(()())') == '4,4:4,4:4,4:4,4:', \"Matched open bracket, unmatched close bracket\"\nassert solution('))') == '4,8:8,8:8,8:', \"Matched open bracket, matched close bracket\"\n"
    },
    {
        "number": 3085,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"(()\") == '4,8:8,8:'\nassert solution(\"()\") == '4,4:4,4:'\nassert solution(\")(((\") == '4,8:4,8:4,4,4:4,4,4:'\nassert solution(\"(((\") == '4,4:4,4:4,4,4:4,4,4:'\nassert solution(\"()\") == '4,4:4,4:4:'\n"
    },
    {
        "number": 3085,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('((()))') == '4,8:8,8:4,4:'\nassert solution('()') == '4,0:0,1:'\nassert solution('(()()') == '4,4:4,4:4,4:'\nassert solution('()()()') == '4,4:4,4:4,4:4:'\nassert solution('((()()))') == '4,4:4,4:4,4:4:4,4:'\n"
    },
    {
        "number": 3085,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\")()\") == \"4,4:4,4:\", \"should return '(()' in the new notation\"\nassert solution(\"()\") == \"4,4:4,4:\", \"should return '(()' in the new notation\"\nassert solution(\"(()()\") == \"4,8:8,8:4,4:4,4:\", \"should return '(()()' in the new notation\"\nassert solution(\"((())\") == \"4,8:8,8:4,4:4,4:\", \"should return '(()()' in the new notation\"\nassert solution(\"(())()\") == \"4,8:8,8:4,4:4,4:4,4:\", \"should return '(()()' in the new notation\"\n"
    },
    {
        "number": 3085,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('()') == '4,4:4,4:'\nassert solution('(()') == '4,8:8,8:4,4:'\nassert solution('()()') == '4,4:4,4:4,4:4,4:'\nassert solution('()()()') == '4,4:4,4:4,4:4,4:4,4:4,4:'\n"
    },
    {
        "number": 3085,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\")((((()()))())\") == \"(4,8:4,8:8,4:4,8:8,4:8,4:8,4:8,4:4,4:8,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:8,4:4,4:8,4:"
    },
    {
        "number": 3085,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('(())') == '4,8:8,8:'\nassert solution('()') == '4,4:'\n\n\"\"\""
    },
    {
        "number": 3085,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('((()))') == '4,4:4,4:4'\nassert solution('()') == '4,4:4,4:4'\nassert solution('(()))') == '4,4:4,4:4'\nassert solution('((()))') == '4,4:4,4:4'\nassert solution('())') == '4,4:4,4:4'\n"
    },
    {
        "number": 3086,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"5\"\nassert solution(\"2 2\") == \"185\"\nassert solution(\"3 3\") == \"360\"\nassert solution(\"3 3\") == \"360\"\nassert solution(\"3 3\") == \"360\"\n"
    },
    {
        "number": 3086,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(io.read_input(__file__, 'a')) == io.read_output(__file__, 'b')\n\"\"\"\n"
    },
    {
        "number": 3086,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3086,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1\\n26 02 03 03 1') == '5'\nassert solution('1 1\\n26 02 03 03 2') == '185'\nassert solution('1 1\\n26 02 03 03 1\\n26 02 03 03 2') == '185'\nassert solution('1 1\\n26 02 03 03 2\\n26 02 03 03 1') == '-1'\nassert solution('1 1\\n26 02 03 03 1\\n26 02 03 03 2') == '-1'\n"
    },
    {
        "number": 3086,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 4') == '-1'\nassert solution('1 2') == '-1'\nassert solution('1 2 3 4') == '1'\nassert solution('1 2 3 4 5') == '2'\nassert solution('1 2 3 4 5 6') == '3'\n"
    },
    {
        "number": 3086,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1\\n26 02 03 03 1\\n') == '5'\nassert solution('1 1\\n26 02 03 03 2\\n') == '185'\nassert solution('1 1\\n26 02 03 03 4\\n') == '-1'\nassert solution('1 1\\n26 02 03 03 4\\n') == '-1'\nassert solution('1 1\\n26 02 03 03 4\\n') == '-1'\n"
    },
    {
        "number": 3086,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"185\"\nassert solution(\"0 0\") == \"-1\"\nassert solution(\"0 0 0 0 0\") == \"-1\"\nassert solution(\"0 0 0 0 0 0 0 0\") == \"-1\"\nassert solution(\"0 0 0 0 0 0 0 0 0 0 0\") == \"-1\"\n"
    },
    {
        "number": 3086,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"5\"\nassert solution(\"1 1\") == \"5\"\nassert solution(\"1 2\") == \"-1\"\nassert solution(\"1 1\") == \"5\"\nassert solution(\"1 1\") == \"5\"\n"
    },
    {
        "number": 3086,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"5\"\nassert solution(\"1 1\\n26 02 03 03 1\\n\") == \"5\"\nassert solution(\"1 1\\n26 02 03 03 2\\n\") == \"185\"\n\n\"\"\"\n"
    },
    {
        "number": 3086,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3087,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3087,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"6 2\n3 4 5 6 1 2\n\"\"\") == \"\"\"5 6 1 2 3 4 \n\"\"\"\nassert solution(\"\"\"4 2\n3 4 1 2\n\"\"\") == \"\"\"2 3 4 1\n\"\"\"\nassert solution(\"\"\"3 4 3\n1 2 3\n\"\"\") == \"\"\"Impossible\n\"\"\"\nassert solution(\"\"\"5 1\n1\n\"\"\") == \"\"\"1\n\"\"\"\nassert solution(\"\"\"6 1\n1\n\"\"\") == \"\"\"1\n\"\"\"\n"
    },
    {
        "number": 3087,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6 2\n3 4 5 6 1 2\n''') == '5 6 1 2 3 4'\nassert solution('''7 2\n6 4 2 1 5 3\n''') == '2 3 4 1 5 6'\nassert solution('''8 2\n6 4 2 1 5 3\n''') == '2 3 4 1 5 6 7'\nassert solution('''8 2\n6 4 2 1 5 3\n''') == 'Impossible'\nassert solution('''9 3\n2 4 3 1 5 6 7 9\n''') == '2 3 4 1 5 6 7 9'\n"
    },
    {
        "number": 3087,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6 2\n3 4 5 6 1 2''') == '5 6 1 2 3 4'\nassert solution('''4 2\n3 4 1 2''') == '2 3 4 1'\nassert solution('''5 2\n1 2 3 4 5''') == 'Impossible'\nassert solution('''3 2\n2 1 3''') == '3 2 1'\nassert solution('''1 2\n1 2''') == '2'\n"
    },
    {
        "number": 3087,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"Impossible\"\nassert solution(\"4 1\") == \"2 3 4 1\"\nassert solution(\"6 2\") == \"5 6 1 2 3 4\"\nassert solution(\"5 3\") == \"2 3 4 5 1\"\nassert solution(\"2 3\") == \"2 1 3\"\n"
    },
    {
        "number": 3087,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n3\") == \"Impossible\"\nassert solution(\"1\\n3\") == \"1\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n1\") == \"1\"\n"
    },
    {
        "number": 3087,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 2\\n3 4 1\\n') == '5 6 1 2 3 4'\nassert solution('7 2\\n6 1 2 3 4 5 6\\n') == '2 3 4 1 6 5 7'\nassert solution('7 2\\n6 1 2 3 4 5 6\\n') == '2 3 4 1 6 5 7'\nassert solution('2 2\\n1\\n') == 'Impossible'\nassert solution('2 2\\n1 1\\n') == 'Impossible'\n"
    },
    {
        "number": 3087,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2') == 'Impossible'\nassert solution('1 1') == 'Impossible'\nassert solution('1 2 3') == 'Impossible'\nassert solution('1 2 3 4') == 'Impossible'\nassert solution('1 2 4 3') == 'Impossible'\n"
    },
    {
        "number": 3087,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6 2\n3 4 5 6 1 2''') == '5 6 1 2 3 4'\nassert solution('''4 2\n3 4 1 2\n''') == '2 3 4 1'\nassert solution('''9 10\n1 2 3 4 5 6 7 8 9\n''') == '3 4 5 6 7 8 9 10 1'\n'''assert solution('''5 6\n1 2 3 4 5\n''') == '5 1 2 3 4'\nassert solution('''4 4\n1 2 3 4 1\n''') == '2 3 4 1'\n"
    },
    {
        "number": 3087,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6 2''') == '''5 6 1 2 3 4 \n'''\nassert solution('''4 2''') == '''2 3 4 1\n'''\nassert solution('''2 3''') == '''2 1 3\n'''\nassert solution('''1 2''') == '''1\n'''\nassert solution('''1 1''') == '''\n'''\n"
    },
    {
        "number": 3088,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1374 2') == '7413'\nassert solution('210 1') == '201'\nassert solution('987654321 0123456789') == '987654321 98765432'\nassert solution('91234 5678 9123456789') == '91234 5678 91234 5678'\nassert solution('9876 54321 0123456789') == '9876 54321 98765432'\n"
    },
    {
        "number": 3088,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1234 5678 9012 3456 7891') == '1234567891'\nassert solution('987654321 12345678 901234567') == '987654321 98765432'\nassert solution('99009900 9999 9999 9999 9999 9999 9999') == '988888888899999'\nassert solution('910225254 9283925899 9278925898') == '922525499'\nassert solution('166693246 8711919123') == '166693921'\n"
    },
    {
        "number": 3088,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3088,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '201'\n"
    },
    {
        "number": 3088,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 0') == '10'\nassert solution('1000000 1') == '1000000'\nassert solution('1000 1000') == '1001'\nassert solution('133 212') == '133 22'\nassert solution('45 6') == '5645'\n"
    },
    {
        "number": 3088,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1374 2') == '7413'\nassert solution('210 1') == '201'\nassert solution('1521 964') == '159984'\nassert solution('1347 579') == '159944'\nassert solution('2345 6789') == '32456789'\n"
    },
    {
        "number": 3088,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1374 2') == '7413'\nassert solution('210 1') == '201'\nassert solution('123456789 1') == '1234567890'\nassert solution('123456789 12') == '12345678921'\nassert solution('123456789 1234') == '123456789123'\n"
    },
    {
        "number": 3088,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1374 2\\n\") == \"7413\"\nassert solution(\"210 1\\n\") == \"201\"\n"
    },
    {
        "number": 3088,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin.strip()\n"
    },
    {
        "number": 3088,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1374 2\\n') == '7413'\nassert solution('210 1\\n') == '201'\nassert solution('1089 6\\n') == '0689'\nassert solution('3652 42\\n') == '3266'\nassert solution('3422 2\\n') == '3422'\n"
    },
    {
        "number": 3089,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''4\n0 0\n0 1\n1 1\n1 0'''\n) == '0.666666666666667'\nassert solution(\n'''3\n0 0\n1 1\n2 0'''\n) == '0.733333333333333'\nassert solution(\n'''5\n0 0\n0 1\n1 1\n1 0\n2 0'''\n) == '0.8518518518518517'\nassert solution(\n'''6\n0 0\n0 1\n1 1\n1 0\n2 0\n3 0'''\n) == '0.9259259259259259'\n\nassert solution(\n'''10\n0 0\n0 1\n1 1\n1 0\n2 0\n3 0\n4 0\n5 0\n6 0\n7 0'''\n) == '0.974358974358974'\n"
    },
    {
        "number": 3089,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 0\\n0 1\\n1 1\\n1 0\\n') == '0.666666666666667'\nassert solution('2\\n0 0\\n1 1\\n2 0\\n') == '0.733333333333333'\nassert solution('2\\n0 0\\n1 1\\n2 1\\n') == '0.666666666666667'\nassert solution('4\\n0 0\\n0 1\\n1 1\\n2 0\\n') == '0.733333333333333'\nassert solution('4\\n0 0\\n1 1\\n2 1\\n3 1\\n') == '0.666666666666667'\n"
    },
    {
        "number": 3089,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0 0\\n0 1\\n1 1\") == \"0.666666666666667\"\n\"\"\"\nimport sys"
    },
    {
        "number": 3089,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0.666666666666667\"\nprint(\"solution:\", solution(stdin))\n\nassert solution(stdin) == \"0.733333333333333\"\nprint(\"solution:\", solution(stdin))\n"
    },
    {
        "number": 3089,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n0 0\n0 1\n1 1\n1 0''') == '0.666666666666667'\nassert solution('''3\n0 0\n1 1\n2 0''') == '0.733333333333333'\nassert solution('''6\n0 0\n0 1\n1 1\n1 0\n0 2\n2 1''') == '1.0'\n\nassert solution('''10000\n-10**9\n''') == '1.0'\n\nassert solution('''1000\n0 0\n1 1\n2 1\n4 1\n1000 1\n1000 -1\n1000 0\n1000 -2\n1000 0\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000 1\n1000"
    },
    {
        "number": 3089,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0.666666666666667\"\n"
    },
    {
        "number": 3089,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0 0\\n0 1\\n1 1\\n1 0\") == \"0.666666666666667\"\nassert solution(\"4\\n0 0\\n0 1\\n1 1\\n1 0\") == \"0.666666666666667\"\nassert solution(\"4\\n0 0\\n0 1\\n1 1\\n1 0\") == \"0.733333333333333\"\n\n-----Template----\n<https://www.codewars.com/kata/road-taxi-customer-problem-solution>\n\"\"\""
    },
    {
        "number": 3089,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0 0\\n0 1\\n1 1\\n1 0\") == \"0.666666666666667\"\nassert solution(\"3\\n0 0\\n1 1\\n2 0\") == \"0.733333333333333\"\nassert solution(\"3\\n0 0\\n1 1\\n2 0\\n0 1\") == \"0.666666666666667\"\nassert solution(\"3\\n0 0\\n1 1\\n2 0\\n1 0\") == \"0.666666666666667\"\nassert solution(\"3\\n0 0\\n1 1\\n2 0\\n0 1\\n1 1\") == \"0.8\"\n"
    },
    {
        "number": 3089,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n0 0\n0 1\n1 1\n1 0''') == '0.666666666666667'\nassert solution('''3\n0 0\n1 1\n2 0''') == '0.733333333333333'\nassert solution('''8\n-80000001 1\n-1 -80000001\n-1 80000001\n80000001 -1\n-80000001 1\n80000001 -1\n1 -80000001\n1 80000001''') == '10648433821249.75'\nassert solution('''10000\n1 1\n99999 99999\n99998 1\n1 1\n99998 99999\n99999 1\n1 1\n99999 99999\n1 1\n99998 1\n1 1\n99999 1\n99999 1\n1 1''') == '45978850'\nassert solution('''6\n1 0\n-1 0\n-1 1\n0 1\n1 1\n1 0\n-1 1\n1 1\n-1 -1\n-1 -1\n-1 1\n1 1\n1 -1\n1 -1\n-1 1\n-1 1\n1 1\n1 0\n0 0\n-1 0\n0 -1\n1 -1\n-1 1\n0 -1\n0 -1\n-1 -1\n-1 -1\n0 -1\n0 -1\n1 1\n1 1\n1 -1\n-1 1\n-1 -1\n1 -1\n1 -1\n1 1\n-1 1\n1 -1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 -1\n1 1\n1 0\n0 0\n-1 0\n0 -1\n1 -1\n-1 1\n0 -1\n0 -1\n-1 -1\n-1 -1\n0 -1\n0 -1\n1 1\n1 1\n1 -1\n-1 1\n-1 -1\n1 -1\n1 -1\n1 1\n-1 1\n1 -1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1 1\n1 -1\n1 1\n1 1\n-1"
    },
    {
        "number": 3089,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 0\\n0 1\\n1 1\\n1 0') == '0.666666666666667'\nassert solution('1\\n0 1\\n1 1') == '0.733333333333333'\nassert solution('1\\n0 0\\n1 1') == '0.733333333333333'\nassert solution('1\\n0 0\\n0 0') == '0.5'\nassert solution('1\\n0 0\\n1 1') == '0.733333333333333'\n"
    },
    {
        "number": 3090,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == str(9)\n'''\n"
    },
    {
        "number": 3090,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"2 3 4\n10 1 3\n0 1 20\"\"\") == \"9\"\nassert solution(\n    \"\"\"2 3 100\n10 1 10\n10 1 10\"\"\") == \"21\"\nassert solution(\n    \"\"\"2 3 4\n10 1 3\n0 1 3\n10 1 10\n10 1 10\"\"\") == \"5\"\n\nassert solution(\n    \"\"\"2 1 4\n10 1 3\n0 1 3\n10 1 10\n10 1 10\"\"\") == \"5\"\n\nassert solution(\n    \"\"\"2 1 2\n10 1 3\n0 1 3\n10 1 10\n10 1 10\"\"\") == \"5\""
    },
    {
        "number": 3090,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0 1 2\") == \"1\"\nassert solution(\"1 1 2\") == \"2\"\nassert solution(\"1 2 1\") == \"2\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 1 1 1\") == \"1\"\n"
    },
    {
        "number": 3090,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3090,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0\\n2\\n0\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n\") == \"1\"\nassert solution(\"2\\n2\\n0\\n\") == \"1\"\nassert solution(\"2\\n2\\n1\\n\") == \"2\"\nassert solution(\"2\\n2\\n0\\n1\\n1\\n\") == \"2\"\n"
    },
    {
        "number": 3090,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3090,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1 1') == '0'\nassert solution('2 3 4') == '9'\nassert solution('10 1 3') == '9'\nassert solution('0 1 20') == '9'\nassert solution('10 1 10') == '21'\n"
    },
    {
        "number": 3090,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3 4\\n10 1 3\\n0 1 20') == '9'\nassert solution('2 3 100\\n10 1 10\\n10 1 10') == '21'\nassert solution('2 3 4\\n10 1 3\\n0 1 10') == '21'\nassert solution('2 3 4\\n10 1 3\\n0 1 10\\n0 1 10\\n0 1 10') == '21'\nassert solution('2 3 4\\n10 1 3\\n0 1 10\\n0 1 10\\n0 1 10\\n0 1 10') == '21'\n"
    },
    {
        "number": 3090,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 3 4\n10 1 3\n0 1 20''') == '9'\nassert solution('''2 3 4\n10 1 10\n10 1 10''') == '21'\nassert solution('''1 1 2\n3 2\n3''') == '3'\nassert solution('''10 1 2\n10 2\n10 3\n10 4\n10 5\n10 6\n10 7\n10 8\n10 9\n10 10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20''') == '59'\nassert solution('''100 1 2\n100 2\n100 3\n100 4\n100 5\n100 6\n100 7\n100 8\n100 9\n100 10\n99 1\n99 2\n99 3\n99 4\n99 5\n99 6\n99 7\n99 8\n99 9\n99 10\n98 1\n98 2\n98 3\n98 4\n98 5\n98 6\n98 7\n98 8\n98 9\n98 10\n97 1\n97 2\n97 3\n97 4\n97 5\n97 6\n97 7\n97 8\n97 9\n97 10\n96 1\n96 2\n96 3\n96 4\n96 5\n96 6\n96 7\n96 8\n96 9\n96 10\n95 1\n95 2\n95 3\n95 4\n95 5\n95 6\n95 7\n95 8\n95 9\n95 10\n94 1\n94 2\n94 3\n94 4\n94 5\n94 6\n94 7\n94 8\n94 9\n94 10\n93 1\n93 2\n93 3\n93 4\n93 5\n93 6\n93 7\n93 8\n93 9\n93 10\n92 1\n92 2\n92 3\n92 4\n92 5\n92 6\n92 7\n92 8\n92 9\n92 10\n91 1\n91 2\n91 3\n91 4\n91 5\n91 6\n91 7\n91 8\n91 9\n91 10\n90 1\n90 2\n90 3\n90 4\n90 5\n90 6\n90 7\n90 8\n90 9\n90 10\n89 1\n89 2\n89 3\n89 4\n89 5\n89 6\n89 7\n89 8\n89 9\n89 10\n88 1\n88 2\n88 3\n88 4\n88 5\n88 6\n88 7\n88 8\n88 9\n88 10\n87 1\n87 2\n87 3\n87 4\n87 5\n87 6\n87 7\n87 8\n87 9\n87 10\n86 1\n86 2\n86 3\n86 4\n86 5\n86 6\n86 7\n86 8\n86 9\n86 10\n85 1\n85 2\n85 3\n85 4\n85 5\n85 6\n85 7\n85 8\n85 9\n85 10\n84 1\n84 2\n84 3\n84 4\n84 5\n84 6\n84 7\n84 8\n84 9\n84 10\n83 1\n83 2\n83 3\n83 4\n83 5\n83 6\n83 7\n83 8\n83 9\n83 10\n82 1\n82 2\n82 3\n82 4\n82 5\n82 6\n82 7\n82 8\n82 9\n82 10\n81 1\n81 2\n81 3\n81 4\n81 5\n81 6\n81 7\n81 8\n81 9\n81 10\n80 1\n80 2\n80 3\n80 4\n80 5\n80 6\n80 7\n80 8\n80 9\n80 10\n79 1\n79 2\n79 3\n79 4\n79 5\n79 6\n79 7\n79 8\n79 9\n79 10\n78 1\n78 2\n78 3\n78 4\n78 5\n78 6\n78 7\n78 8\n78 9\n78 10\n77 1\n77 2\n77 3\n77 4\n77 5\n77 6\n77 7\n77 8\n77 9\n77 10\n76 1\n76 2\n76 3\n76 4\n76 5\n76 6\n76 7\n76 8\n76 9\n76 10\n75 1\n75 2\n75 3\n75 4\n75 5\n75 6\n75 7\n75 8\n75 9\n75 10\n74 1\n74 2\n74 3\n74 4\n74 5\n74 6\n74 7\n74 8\n74 9\n74 10\n73 1\n73 2\n73 3\n73 4\n73 5\n73 6\n73 7\n73 8\n73 9\n73 10\n72 1\n72 2\n72 3\n72 4\n72 5\n72 6\n72 7\n72 8\n72 9\n72 10\n71 1\n71 2\n71 3\n71 4\n71 5\n71 6\n71 7\n71 8\n71 9\n71 10\n70 1\n70 2\n70 3\n70 4\n70 5\n70 6\n70 7\n70 8\n70 9\n70 10\n69 1\n69 2\n69 3\n69 4\n69 5\n69 6\n69 7\n69 8\n69 9\n69 10\n68 1\n68 2\n68 3\n68 4\n68 5\n68 6\n68 7\n68 8\n68 9\n68 10\n67 1\n67 2\n67 3\n67 4\n67 5\n67 6\n67 7\n67 8\n67 9\n67 10\n66 1\n66 2\n66 3\n66 4\n66 5\n66 6\n66 7\n66 8\n66 9\n66 10\n65 1\n65 2\n65 3\n65 4\n65 5\n65 6\n65 7\n65 8\n65 9\n65 10\n64 1\n64 2\n64 3\n64 4\n64 5\n64 6\n64 7\n64 8\n64 9\n64 10\n63 1\n63 2\n63 3\n63 4\n63 5\n63 6\n63 7\n63 8\n63 9\n63 10\n62 1\n62 2\n62 3\n62 4\n62 5\n62 6\n62 7\n62 8\n62 9\n62 10\n61 1\n61 2\n61 3\n61 4\n61 5\n61 6\n61 7\n61 8\n61 9\n61 10\n60 1\n60 2\n60 3\n60 4\n60 5\n60 6\n60 7\n60 8\n60 9\n60 10\n59 1\n59 2\n59 3\n59 4\n59 5\n59 6\n59 7\n59 8\n59 9\n59 10\n58 1\n58 2\n58 3\n58 4\n58 5\n58 6\n58 7\n58 8\n58 9\n58 10\n57 1\n57 2\n57 3\n57 4\n57 5\n57 6\n57 7\n57 8\n57 9\n57 10\n56 1\n56 2\n56 3\n56 4\n56 5\n56 6\n56 7\n56 8\n56 9\n56 10\n55 1\n55 2\n55 3\n55 4\n55 5\n55 6\n55 7\n55 8\n55 9\n55"
    },
    {
        "number": 3090,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '9'"
    },
    {
        "number": 3091,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3091,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1 1 2') == '2'\nassert solution('8 2 7 -') == '2'\nassert solution('9 2 7 -') == '4'\nassert solution('1 1 1 2') == '2'\nassert solution('8 2 7 -') == '2'\n"
    },
    {
        "number": 3091,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 2 7 -\n1 1 1 2\n''') == '2'\nassert solution('''4 2 7 -\n1 1 1 2\n''') == '4'\nassert solution('''6 2 5 /\n3 1 1 1 1 1\n3 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n''') == '3'\nassert solution('''6 2 4 /\n3 1 1 1 1 1\n3 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n''') == '2'\nassert solution('''9 2 7 -\n1 1 1 2\n1 1 1 2\n1 1 1 2\n1 1 1 2\n1 1 1 2\n1 1 1 2\n1 1 1 2\n1 1 1 2\n''') == '4'\n"
    },
    {
        "number": 3091,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"8 2 7 -\") == \"2\"\nassert solution(\"9 2 7 -\") == \"4\"\nassert solution(\"9 9 9 9 -\") == \"24\"\nassert solution(\"9 9 9 9 9 -\") == \"24\"\nassert solution(\"1 1 1 2 -\") == \"2\"\n"
    },
    {
        "number": 3091,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 2 7 -') == '2'\nassert solution('9 2 7 -') == '4'\nassert solution('7 2 7 -') == '1'\nassert solution('9 9 7 -') == '2'\nassert solution('6 4 7 -') == '0'\n"
    },
    {
        "number": 3091,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''8 2 7 -\n1 1 1 2\n''') == '2'\nassert solution('''9 2 7 -\n1 1 1 2\n''') == '4'\nassert solution('''9 3 7 -\n1 1 1 2\n1 2 1 3\n''') == '1'\nassert solution('''9 2 10 *\n1 1 1 2\n1 2 1 3\n''') == '0'\nassert solution('''9 2 7 -\n1 1 1 2\n1 2 1 3\n''') == '4'\n"
    },
    {
        "number": 3091,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8 2 7 -\\n1 1 1 2\\n') == '2'\nassert solution('9 2 7 -\\n1 1 1 2\\n') == '4'\n\n\n---19/8/21--22:00\n---[---[---[---[\n"
    },
    {
        "number": 3091,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n8 2 7 -\n1 1 1 2\n''') == '2'\nassert solution(\n'''\n9 2 7 -\n1 1 1 2\n''') == '4'\nassert solution(\n'''\n8 2 8 *\n1 1 1 2\n''') == '6'\nassert solution(\n'''\n8 2 8 /\n1 1 1 2\n''') == '3'\nassert solution(\n'''\n8 3 8 +\n1 1 1 2\n''') == '2'\n"
    },
    {
        "number": 3091,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n8 2 7 -\n1 1 1 2\n''') == '2'\nassert solution(\n'''\n9 2 7 -\n1 1 1 2\n''') == '4'\n'''\n"
    },
    {
        "number": 3091,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''4 2 7 -\n1 1 1 2\n''') == \"2\"\n\nassert solution(\n'''9 2 7 -\n1 1 1 2\n''') == \"4\"\n\nassert solution(\n'''5 2 7 -\n1 1 1 2\n''') == \"1\"\n\nassert solution(\n'''10 2 7 -\n1 1 1 2\n''') == \"0\"\n\nassert solution(\n'''9 2 7 -\n1 1 1 2\n''') == \"0\""
    },
    {
        "number": 3092,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3092,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\nprint(solution(stdin))\n"
    },
    {
        "number": 3092,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 3\n1 2 5\n2 3 5\n3 4 5\n1 4 8''') == '3\\n4\\n3\\n2\\n1','should work'\nassert solution('''2 1\n1 2 1\n2 3 1''') == '2\\n1\\n1','should work'\n'''\nfrom sys import stdin\nimport math"
    },
    {
        "number": 3092,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n4 3\n1 2 5\n2 3 5\n3 4 5\n1 4 8\n'''\n    ) == '''\n3\n4\n3\n2\n'''\n\nassert solution(\n'''\n5 7\n1 2 3 4 5\n2 3 4 5 6\n3 4 5 6 7\n4 5 6 7 8\n5 6 7 8 9\n6 7 8 9 10\n7 8 9 10 11\n8 9 10 11 12\n9 10 11 12 13\n'''\n    ) == '''\n3\n4\n3\n2\n'''\n"
    },
    {
        "number": 3092,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''5 3\n1 2 5\n2 3 5\n3 4 5\n1 4 8''') == '3\\n4\\n3\\n2\\n1'\nassert solution(\n'''4 4\n1 2 5\n2 3 5\n3 4 5\n1 4 8''') == '2\\n3\\n2\\n1'\nassert solution(\n'''7 7\n1 2 4\n2 3 5\n3 4 6\n4 5 7\n5 6 8\n6 7 9\n7 8 10\n8 9 11\n8 10 12\n8 11 13\n8 12 14\n8 13 15\n9 10 15\n10 11 14\n11 12 13\n11 13 14\n11 14 15\n11 15 16\n12 13 16\n13 14 15\n14 15 16\n14 15 16\n14 16 17\n15 16 17\n16 17 18\n17 18 19\n17 18 19\n17 19 20\n18 19 20\n19 20 21\n19 20 21\n19 21 22\n20 21 22\n21 22 23\n21 22 23\n21 23 24\n22 23 24\n23 24 25\n22 23 25\n23 24 25\n23 25 26\n24 25 26\n25 26 27\n25 26 27\n25 27 28\n26 27 28\n27 28 29\n27 28 29\n27 29 30\n28 29 30\n29 30 31\n28 29 31\n29 30 31\n29 31 32\n30 31 32\n31 32 33\n31 32 33\n31 33 34\n32 33 34\n33 34 35\n32 33 35\n33 34 35\n33 35 36\n34 35 36\n35 36 37\n34 35 37\n35 36 37\n35 37 38\n36 37 38\n37 38 39\n36 37 39\n37 38 39\n37 39 40\n37 38 40\n37 39 40\n37 40 41\n36 37 41\n37 38 41\n37 39 41\n37 40 41\n37 41 42\n36 37 42\n37 38 42\n37 39 42\n37 40 42\n37 41 42\n37 42 43\n36 37 43\n37 38 43\n37 39 43\n37 40 43\n37 41 43\n37 42 43\n37 43 44\n36 37 44\n37 38 44\n37 39 44\n37 40 44\n37 41 44\n37 42 44\n37 43 44\n37 44 45\n36 37 45\n37 38 45\n37 39 45\n37 40 45\n37 41 45\n37 42 45\n37 43 45\n37 44 45\n37 45 46\n36 37 46\n37 38 46\n37 39 46\n37 40 46\n37 41 46\n37 42 46\n37 43 46\n37 44 46\n37 45 46\n37 46 47\n36 37 47\n37 38 47\n37 39 47\n37 40 47\n37 41 47\n37 42 47\n37 43 47\n37 44 47\n37 45 47\n37 46 47\n37 47 48\n36 37 48\n37 38 48\n37 39 48\n37 40 48\n37 41 48\n37 42 48\n37 43 48\n37 44 48\n37 45 48\n37 46 48\n37 47 48\n37 48 49\n36 37 49\n37 38 49\n37 39 49\n37 40 49\n37 41 49\n37 42 49\n37 43 49\n37 44 49\n37 45 49\n37 46 49\n37 47 49\n37 48 49\n37 49 50\n36 37 50\n37 38 50\n37 39 50\n37 40 50\n37 41 50\n37 42 50\n37 43 50\n37 44 50\n37 45 50\n37 46 50\n37 47 50\n37 48 50\n37 49 50\n37 50 51\n36 37 51\n37 38 51\n37 39 51\n37 40 51\n37 41 51\n37 42 51\n37 43 51\n37 44 51\n37 45 51\n37 46 51\n37 47 51\n37 48 51\n37 49 51\n37 50 51\n37 51 52\n36 37 52\n37 38 52\n37 39 52\n37 40 52\n37 41 52\n37 42 52\n37 43 52\n37 44 52\n37 45 52\n37 46 52\n37 47 52\n37 48 52\n37 49 52\n37 50 52\n37 51 52\n37 52 53\n36 37 53\n37 38 53\n37 39 53\n37 40 53\n37 41 53\n37 42 53\n37 43 53\n37 44 53\n37 45 53\n37 46 53\n37 47 53\n37 48 53\n37 49 53\n37 50 53\n37 51 53\n37 52 53\n37 53 54\n36 37 54\n37 38 54\n37 39 54\n37 40 54\n37 41 54\n37 42 54\n37 43 54\n37 44 54\n37 45 54\n37 46 54\n37 47 54\n37 48 54\n37 49 54\n37 50 54\n37 51 54\n37 52 54\n37 53 54\n37 54 55\n36 37 55\n37 38 55\n37 39 55\n37 40 55\n37 41 55\n37 42 55\n37 43 55\n37 44 55\n37 45 55\n37 46 55\n37 47 55\n37 48 55\n37 49 55\n37 50 55\n37 51 55\n37 52 55\n37 53 55\n37 54 55\n37 55 56\n36 37 56\n37 38 56\n37 39 56\n37 40 56\n37 41 56\n37 42 56\n37 43 56\n37 44 56\n37 45 56\n37 46 56\n37 47 56\n37 48 56\n37 49 56\n37 50 56\n37 51 56\n37 52 56\n37 53 56\n37 54 56\n37 55 56\n37 56 57\n36 37 57\n37 38 57\n37 39 57\n37 40 57\n37 41 57\n37 42 57\n37 43 57\n37 44 57\n37 45 57\n37 46 57\n37 47 57\n37 48 57\n37 49 57\n37 50 57\n37 51 57\n37 52 57\n37 53 57\n37 54 57\n37 55 57\n37 56 57\n37 57 58\n36 37 58\n37 38 58\n37 39 58\n37 40 58\n37 41 58\n37 42 58\n37 43 58\n37 44 58\n37 45 58\n37 46 58\n37 47 58\n37 48 58\n37 49 58\n37 50 58\n37 51 58\n37 52 58\n37 53 58\n37 54 58\n37 55 58\n37 56 58\n37 57 58\n37 58 59\n36 37 59\n37 38 59\n37 39 59\n37 40 59\n37 41 59\n37 42 59\n37 43 59\n37 44 59\n37 45 59\n37 46 59\n37 47 59\n37 48 59\n37 49 59\n37 50 59\n37 51 59\n37 52 59\n37 53 59\n37 54 59\n37 55 59\n37 56 59\n37 57 59\n37 58 59\n37 59 60\n36 37 60\n37 38 60\n37 39 60\n37 40 60\n37 41 60\n37 42 60\n37 43 60\n37 44 60\n37 45 60\n37 46 60\n37 47 60\n37 48 60\n37 49 60\n37 50 60\n37 51 60\n37 52 60\n37 53 60\n37 54 60\n37 55 60\n37 56 60\n37 57 60\n37 58 60\n37 59 60\n37 60 61\n36 37"
    },
    {
        "number": 3092,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3092,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n4 4\n1 2 5\n2 3 5\n3 4 5\n1 4 8\n\"\"\") == \"\"\"3\n4\n3\n2\n1\n\"\"\"\n"
    },
    {
        "number": 3092,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3092,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n4 1 5\") == \"3\"\nassert solution(\"1\\n4 1 5\\n2 3 5\") == \"3\"\nassert solution(\"1\\n4 1 5\\n2 3 5\\n3 4 5\") == \"3\"\nassert solution(\"1\\n4 1 5\\n2 3 5\\n3 4 5\\n1 4 8\") == \"2\"\nassert solution(\"2\\n4 1 5\\n2 3 5\\n3 4 5\\n1 4 8\") == \"3\"\n"
    },
    {
        "number": 3092,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 3\n1 2 5\n2 3 5\n3 4 5\n1 4 8''') == '3\\n4\\n3\\n1'\nassert solution('''4 4\n1 2 5\n2 3 5\n3 4 5\n1 4 8''') == '2\\n3\\n2\\n1'\nassert solution('''5 5\n1 2 5\n2 3 5\n3 4 5\n1 4 8\n1 5 7''') == '0\\n1\\n2\\n3'\nassert solution('''4 4\n1 2 5\n2 3 5\n3 4 5\n1 4 8\n1 5 8''') == '2\\n3\\n2\\n1'\nassert solution('''4 4\n1 2 5\n2 3 5\n3 4 5\n1 4 8\n1 5 7\n1 6 5''') == '2\\n3\\n2\\n1'\n"
    },
    {
        "number": 3093,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3093,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 3\\n2 1') == '6'\nassert solution('1 10\\n2 3 4') == '24'\nassert solution('3 4\\n2 3 1') == '24'\n\"\"\""
    },
    {
        "number": 3093,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"6\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"3 4\") == \"24\"\nassert solution(\"1 2\") == \"2\"\n\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 3093,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('2 1') == '1'\n"
    },
    {
        "number": 3093,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''2 3\n2 1''') == '6'\nassert solution(\n'''3 4\n2 3 1''') == '24'\n"
    },
    {
        "number": 3093,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3093,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3093,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin.split(\"\\n\")[0]"
    },
    {
        "number": 3093,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"24\"\n"
    },
    {
        "number": 3093,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 4\n2 3 1''') == '6'\nassert solution('''2 1\n2 1''') == '6'\nassert solution('''2 3\n2 1''') == '6'\nassert solution('''5 4\n2 3 1 4 3''') == '24'\nassert solution('''6 5\n2 3 1 4 3 5 6''') == '184'\n'''"
    },
    {
        "number": 3094,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3094,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 2') == 1\nassert solution('1 2') == 2\nassert solution('2 1') == 2\nassert solution('1 2 3') == 3\nassert solution('1 2 3 4') == 6\n"
    },
    {
        "number": 3094,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == '2'\nassert solution('2\\n1 2') == '1'\nassert solution('5\\n3 4 5 1 2') == '1'"
    },
    {
        "number": 3094,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == str(2)\nassert solution(stdin) == str(1)\n"
    },
    {
        "number": 3094,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\"\n\"\"\"\n"
    },
    {
        "number": 3094,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n') == '2'\nassert solution('2\\n1\\n') == '2'\nassert solution('1\\n3\\n') == '0'\nassert solution('5\\n3 4 5 1 2\\n') == '1'\nassert solution('5\\n3 4 5 1 2\\n') == '1'\n"
    },
    {
        "number": 3094,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\n1 2''') == '2'\nassert solution('''3\n3 4 5 1 2''') == '1'\nassert solution('''5\n3 4 5 1 2''') == '1'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '2'\nassert solution('''11\n1 2 3 4 5 6 7 8 9 10 11''') == '2'\n"
    },
    {
        "number": 3094,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n') == '2'\nassert solution('2\\n1 2') == '2'\nassert solution('2\\n2 1') == '1'\nassert solution('2\\n3 4 5 1 2') == '1'\nassert solution('2\\n3 4 5 1 2') == '1'\n"
    },
    {
        "number": 3094,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\\\n2\n1 2\n''') == '2'\nassert solution('''\\\n5\n3 4 5 1 2\n''') == '1'\nassert solution('''\\\n1\n1\n''') == '2'\nassert solution('''\\\n10\n8 9 10 7 6 5 4 3 2 1\n''') == '1'\nassert solution('''\\\n100\n95 96 97 98 99 93 93 94 93 95 96 97 98 99 93 93 94 93 95 96 97 98 99 93 94 93 95 96 97 98 99 93 93 94 93 95 96 97 98 99 93 93 94 93 95 96 97 98 99 93 93 94 93 95 96 97 98 99 93 93 94 93 95 96 97 98 99 93 93 94 93 95 96 97 98 99 93 93 94 93 95 96 97 98 99 93 93 94 93 95 96 97 98 99 93 93 94 93 95 96 97 98 99 93 93 94 93 95 96 97 98 99 93 93 94 93 95 96 97 98 99 93 93 94 93 95 96 97 98 99 93 93 94 93 95 96 97 98 99 93 93 94 93 95 96 97 98 99 93 93 94 93 95 96 97 98 99 93 93 94 93 95 96 97 98 99 93 93 94 93 95 96 97 98 99 93 93 94 93 95 96 97 98 99 93 93 94 93 95 96 97 98 99 93 93 94 93 95 96 97 98 99\n''') == '1'\n"
    },
    {
        "number": 3094,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '1'\nassert solution('1\\n3') == '2'\nassert solution('1\\n4') == '4'\nassert solution('1\\n5') == '6'\n"
    },
    {
        "number": 3095,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3 3\n1 4 10\n5 2 6\n11 1 3\"\"\") == \"9\"\nassert solution(\"\"\"3 3\n1 3 1\n2 1 2\n1 1 1\"\"\") == \"4\"\n"
    },
    {
        "number": 3095,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1 4 10\\n5 2 6\\n11 1 3\\n\") == \"9\"\nassert solution(\"4 2\\n-1 0 0 1\\n-1 -1 1 1\") == \"4\"\nassert solution(\"4 2\\n-1 0 0 1\\n1 1 0 0\") == \"0\"\nassert solution(\"3 3\\n1 3 1\\n2 1 2\\n1 1 1\") == \"0\"\nassert solution(\"3 3\\n1 3 1\\n2 1 2\\n1 1 1\\n1 1 1\\n1 1 1\") == \"0\"\n"
    },
    {
        "number": 3095,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '9'\n"
    },
    {
        "number": 3095,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 3\n1 4 10\n5 2 6\n11 1 3''') == '9'\nassert solution('''3 3\n1 3 1\n2 1 2\n1 1 1''') == '4'\nassert solution('''3 3\n1 3 1\n2 1 2\n1 1 1''') == '4'\nassert solution('''3 3\n4 4 4\n3 1 2\n1 2 3\n3 4 5\n2 2 1\n2 1 2''') == '6'\nassert solution('''3 4\n1 3 4 1\n2 1 3 2\n1 1 2 1\n3 4 3 4\n1 4 2 3\n2 3 1 4''') == '4'\n"
    },
    {
        "number": 3095,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n3\\n1 3 1') == '9'\nassert solution('2\\n3\\n2 3 1') == '4'\nassert solution('2\\n3\\n1 3 2') == '3'\nassert solution('2\\n3\\n1 3 1') == '4'\nassert solution('2\\n3\\n1 3 1') == '4'\n"
    },
    {
        "number": 3095,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == '3'\nassert solution('1 3 1') == '4'\nassert solution('1 3 4 2 1 1 2') == '4'\nassert solution('2 2 1') == '0'\nassert solution('2 1 1') == '0'\n"
    },
    {
        "number": 3095,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3095,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 3\n1 4 10\n5 2 6\n11 1 3''') == '9'\nassert solution('''3 3\n1 3 1\n2 1 2\n1 1 1''') == '4'\nassert solution('''6 5\n1 1 1 1 1 1\n2 1 2 1 2\n1 3 1 3 4\n4 4 2 2\n2 1 2 1 2\n5 2 1 2 3''') == '5'\nassert solution('''3 3\n1 3 1\n2 1 2\n1 1 1''') == '0'\nassert solution('''3 4\n1 1 1 1\n1 2 2 1\n3 1 3 1\n4 4 2 2\n2 1 2 1\n2 2 2 2\n3 3 3 1''') == '2'\n"
    },
    {
        "number": 3095,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\\n4 5 6\\n7 8 9\") == \"4\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n11 12 13\") == \"9\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n5 5\") == \"3\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"3\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"3\"\n"
    },
    {
        "number": 3095,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n1 2\\n1 1\") == \"4\"\nassert solution(\"2 2\\n2 2\\n1 1\") == \"4\"\nassert solution(\"1 2\\n1 2\\n1 1\") == \"4\"\nassert solution(\"1 1\\n1 1\\n1 1\") == \"4\"\nassert solution(\"1 1\\n1 1\\n1 1\") == \"4\"\n"
    },
    {
        "number": 3096,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n2 1 3 4\n1 2\n1 3\n3 4\n''') == '6'\nassert solution('''4\n3 4 5 6\n1 2\n1 3\n2 4\n''') == '3'\nassert solution('''5\n2 1 3 4 5\n1 2\n1 3\n2 4\n3 4\n1 5\n''') == '1'\nassert solution('''6\n2 1 3 4 5 6\n1 2\n1 3\n2 4\n3 4\n1 5\n2 6\n''') == '2'\n"
    },
    {
        "number": 3096,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n4\n2 1 3 4\n1 2\n1 3\n3 4\n''') == '6'\nassert solution(\n'''\n4\n3 4 5 6\n1 2\n1 3\n2 4\n''') == '3'\nassert solution(\n'''\n2\n1\n''') == '0'\nassert solution(\n'''\n3\n1 1\n1 2\n1 3\n''') == '1'\nassert solution(\n'''\n10\n5 5 4 4 3 3 2 2 1\n1 1\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n4 7\n5 7\n5 8\n6 7\n7 8\n''') == '1'\n"
    },
    {
        "number": 3096,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"4\n2 1 3 4\n1 2\n1 3\n3 4\n\"\"\") == \"6\"\nassert solution(\"\"\"5\n4\n1 3\n2 5\n4 3\n5 1\n\"\"\") == \"3\"\nassert solution(\"\"\"2\n3\n1\n\"\"\") == \"1\"\nassert solution(\"\"\"1\n3\n\"\"\") == \"0\"\nassert solution(\"\"\"1\n1\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3096,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    stdin = '4\\n2 1 3 4\\n1 2\\n1 3\\n3 4\\n4 3'\n) == '6'\n"
    },
    {
        "number": 3096,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n2 1 3 4\n1 2\n1 3\n3 4\n''') == '6'\nassert solution('''4\n2 1 2 3\n1 3\n2 1\n1 3\n''') == '3'\nassert solution('''4\n2 1 2 3\n1 3\n2 1\n1 3\n''') == '3'\nassert solution('''4\n2 1 2 3\n1 3\n2 1\n1 3\n''') == '3'\nassert solution('''5\n4 2 5 3 1\n1 4\n1 2\n2 3\n1 2\n2 1\n1 3\n1 4\n1 5\n2 3\n1 5\n2 3\n2 1\n2 4\n2 5\n1 4\n1 5\n1 3\n1 1\n1 2\n1 4\n1 5\n2 3\n1 4\n1 5\n1 3\n2 3\n1 5\n2 3\n2 1\n1 5\n2 3\n2 1\n1 5\n2 3\n2 1\n1 4\n2 3\n1 4\n2 3\n1 4\n1 5\n1 3\n1 1\n1 2\n1 4\n1 5\n2 3\n1 4\n1 5\n1 3\n2 3\n1 5\n2 3\n2 1\n1 5\n2 3\n2 1\n1 4\n2 3\n1 4\n2 3\n1 4\n1 5\n1 3\n1 1\n1 2\n1 4\n1 5\n2 3\n1 4\n1 5\n1 3\n2 3\n1 5\n2 3\n2 1\n1 5\n2 3\n2 1\n1 4\n2 3\n1 4\n2 3\n1 4\n1 5\n1 3\n1 1\n1 2\n1 4\n1 5\n2 3\n1 4\n1 5\n1 3\n2 3\n1 5\n2 3\n2 1\n1 5\n2 3\n2 1\n1 4\n2 3\n1 4\n2 3\n1 4\n1 5\n1 3\n1 1\n1 2\n1 4\n1 5\n2 3\n1 4\n1 5\n1 3\n2 3\n1 5\n2 3\n2 1\n1 5\n2 3\n2 1\n1 4\n2 3\n1 4\n2 3\n1 4\n1 5\n1 3\n1 1\n1 2\n1 4\n1 5\n2 3\n1 4\n1 5\n1 3\n2 3\n1 5\n2 3\n2 1\n1 5\n2 3\n2 1\n1 4\n2 3\n1 4\n2 3\n1 4\n1 5\n1 3\n1 1\n1 2\n1 4\n1 5\n2 3\n1 4\n1 5\n1 3\n2 3\n1 5\n2 3\n2 1\n1 5\n2 3\n2 1\n1 4\n2 3\n1 4\n2 3\n1 4\n1 5\n1 3\n1 1\n1 2\n1 4\n1 5\n2 3\n1 4\n1 5\n1 3\n2 3\n1 5\n2 3\n2 1\n1 5\n2 3\n2 1\n1 4\n2 3\n1 4\n2 3\n1 4\n1 5\n1 3\n1 1\n1 2\n1 4\n1 5\n2 3\n1 4\n1 5\n1 3\n2 3\n1 5\n2 3\n2 1\n1 5\n2 3\n2 1\n1 4\n2 3\n1 4\n2 3\n1 4\n1 5\n1 3\n1 1\n1 2\n1 4\n1 5\n2 3\n1 4\n1 5\n1 3\n2 3\n1 5\n2 3\n2 1\n1 5\n2 3\n2 1\n1 4\n2 3\n1 4\n2 3\n1 4\n1 5\n1 3\n1 1\n1 2\n1 4\n1 5\n2 3\n1 4\n1 5\n1 3\n2 3\n1 5\n2 3\n2 1\n1 5\n2 3\n2 1\n1 4\n2 3\n1 4\n2 3\n1 4\n1 5\n1 3\n1 1\n1 2\n1 4\n1 5\n2 3\n1 4\n1 5\n1 3\n2 3\n1 5\n2 3\n2 1\n1 5\n2 3\n2 1\n1 4\n2 3\n1 4\n2 3\n1 4\n1 5\n1 3\n1 1\n1 2\n1 4\n1 5\n2 3\n1 4\n1 5\n1 3\n2 3\n1 5\n2 3\n2 1\n1 5\n2 3\n2 1\n1 4\n2 3\n1 4\n2 3\n1 4\n1 5\n1 3\n1 1\n1 2\n1 4\n1 5\n2 3\n1 4\n1 5\n1 3\n2 3\n1 5\n2 3\n2 1\n1 5\n2 3\n2 1\n1 4\n2 3\n1 4\n2 3\n1 4\n1 5\n1 3\n1 1\n1 2\n1 4\n1 5\n2 3\n1 4\n1 5\n1 3\n2 3\n1 5\n2 3\n2 1\n1 5\n2 3\n2 1\n1 4\n2 3\n1 4\n2 3\n1 4\n1 5\n1 3\n1 1\n1 2\n1 4\n1 5\n2 3\n1 4\n1 5\n1 3\n2 3\n1 5\n2 3\n2 1\n1 5\n2 3\n2 1\n1 4\n2 3\n1 4\n2 3\n1 4\n1 5\n1 3\n1 1\n1 2\n1 4\n1 5\n2 3\n1 4\n1 5\n1 3\n2 3\n1 5\n2 3\n2 1\n1 5\n2 3\n2 1\n1 4\n2 3\n1 4\n2 3\n1 4\n1 5\n1 3\n1 1\n1 2\n1 4\n1 5\n2 3\n1 4\n1 5\n1 3\n2 3\n1 5\n2 3\n2 1\n1 5\n2 3\n2 1\n1 4\n2 3\n1 4\n2 3\n1 4\n1 5\n1 3\n1 1\n1 2\n1 4\n1 5\n2 3\n1 4\n1 5\n1 3\n2 3\n1 5\n2 3\n2 1\n1 5\n2 3\n2 1\n1 4\n2 3\n1 4\n2 3\n1 4\n1 5\n1 3\n1 1\n1 2\n1 4\n1 5\n2 3\n1 4\n1 5\n1 3\n2 3\n1 5\n2 3\n2 1\n1 5\n2 3\n2 1\n1 4\n2 3\n1 4\n2 3\n1 4\n1 5\n1 3\n1 1\n1 2\n1 4\n1 5\n2 3"
    },
    {
        "number": 3096,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n4\\n2\\n1\\n3\\n3\\n2\") == \"3\"\nassert solution(\"2\\n2\\n1\\n3\\n3\\n2\") == \"3\"\nassert solution(\"5\\n10\\n11\\n9\\n5\\n1\") == \"5\"\nassert solution(\"3\\n6\\n9\\n2\\n1\\n8\\n2\\n2\") == \"3\"\nassert solution(\"8\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"1\"\n"
    },
    {
        "number": 3096,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n4 2 3') == '3'\nassert solution('3\\n4 2 3\\n1 2\\n1 3\\n3 4\\n') == '3'\n"
    },
    {
        "number": 3096,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n4\n2 1 3 4\n1 2\n1 3\n3 4\n\"\"\"\n) == \"6\"\n\nassert solution(\n\"\"\"\n4\n2 1 2 1\n1 2\n2 1\n1 2\n\"\"\"\n) == \"3\"\n\nassert solution(\n\"\"\"\n2\n1 2\n1 2\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n3\n3 4 4 4\n1 2\n3 4\n1 2\n\"\"\"\n) == \"3\"\n\nassert solution(\n\"\"\"\n5\n4 5 3 2 1\n2 1\n3 2\n1 4\n1 4\n2 4\n\"\"\"\n) == \"2\""
    },
    {
        "number": 3096,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3096,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n1 3\\n1 4\\n3 4\\n1 2\\n1 3\") == '6'\n\"\"\"\n\nn = int(stdin.readline().strip())\nv = [int(x) for x in stdin.readline().strip().split(' ')]\np = int(stdin.readline().strip())\n\nresult = 0\n\nfor i in range(n):\n    if v[i] == 1:\n        for j in range(i+1,n):\n            if v[j] == 1:\n                for k in range(j+1,n):\n                    if v[k] == 1:\n                        for l in range(k+1,n):\n                            if v[l] == 1:\n                                result += 1\n\nprint(result)\n"
    },
    {
        "number": 3097,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3097,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    '2\\n1 10\\n5 8\\n'\n) == '18\\n8\\n'\n\nassert solution(\n    '2\\n17 144\\n121 121\\n89 98\\n'\n) == '265\\n25\\n10\\n'\n"
    },
    {
        "number": 3097,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == answer()\n"
    },
    {
        "number": 3097,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 10\\n5 8') == '18\\n8'\nassert solution('2\\n1 10\\n5 8') == '18\\n8'\nassert solution('3\\n17 144\\n121 121\\n89 98') == '265\\n25\\n10'\nassert solution('4\\n17 144\\n121 121\\n89 98\\n21 21') == '265\\n25\\n10\\n2'\nassert solution('5\\n17 144\\n121 121\\n89 98\\n21 21\\n0 0') == '265\\n25\\n10\\n2\\n0'\n"
    },
    {
        "number": 3097,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3097,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"2\n1 10\n5 8\n\"\"\") == \"\"\"18\n8\n\"\"\"\nassert solution(\n    \"\"\"3\n17 144\n121 121\n89 98\n\"\"\") == \"\"\"265\n25\n10\n\"\"\"\nassert solution(\n    \"\"\"3\n17 144\n121 121\n89 98\n\"\"\") == \"\"\"265\n25\n10\n\"\"\"\nassert solution(\n    \"\"\"1\n100 999\n\"\"\") == \"\"\"999\n\"\"\"\nassert solution(\n    \"\"\"1\n1000 999\n\"\"\") == \"\"\"999\n\"\"\"\n"
    },
    {
        "number": 3097,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 10\\n5 8\") == \"18\\n8\\n\"\nassert solution(\"3\\n17 144\\n121 121\\n89 98\") == \"265\\n25\\n10\\n\""
    },
    {
        "number": 3097,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output\nprint(\"Passed\")\nTestcase:\nTestcase 1:\nInput:\n2\n1 10\n5 8\nOutput:\n18\n8\n\nTestcase 2:\nInput:\n3\n17 144\n121 121\n89 98\nOutput:\n265\n25\n10\n\nTestcase 3:\nInput:\n10\n10 100\n1 1\n9 9\n8 8\n7 7\n6 6\n5 5\n4 4\n3 3\n2 2\n1 1\nOutput:\n2\n4\n64\n336\n1024\n25280\n1048576\n100\n'''\n"
    },
    {
        "number": 3097,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 10\n5 8\n''') == '18'\nassert solution('''2\n17 144\n121 121\n89 98\n''') == '265'\nassert solution('''4\n1000 10000\n7143 7143\n7144 7144\n7145 7144\n''') == '10'\nassert solution('''6\n1145 1599\n1140 1344\n1146 1347\n1338 1330\n1330 1327\n1356 1345\n''') == '7'\nassert solution('''7\n15111 15211\n13314 13354\n13406 13405\n13415 13407\n13448 13408\n13468 13409\n13472 13409\n13484 13410\n13499 13411\n13511 13411\n13521 13411\n13535 13412\n13547 13412\n13556 13413\n13568 13413\n13580 13413\n13592 13414\n13604 13414\n13616 13414\n13648 13415\n13666 13415\n13688 13416\n13704 13417\n13716 13417\n13738 13418\n13756 13418\n13778 13418\n13792 13419\n13804 13419\n13816 13419\n13828 13420\n13840 13420\n13852 13420\n13864 13421\n13876 13421\n13888 13421\n13900 13422\n1392 13422\n1394 13422\n1396 13423\n1398 13423\n1400 13423\n1402 13424\n1404 13424\n1406 13424\n1408 13425\n1410 13425\n1412 13425\n1414 13426\n1416 13426\n1418 13426\n1420 13427\n1422 13427\n1424 13427\n1426 13428\n1428 13428\n1430 13428\n1432 13429\n1434 13429\n1436 13429\n1438 13430\n1440 13430\n1442 13430\n1444 13431\n1446 13431\n1448 13431\n1450 13432\n1452 13432\n1454 13432\n1456 13433\n1458 13433\n1460 13433\n1462 13434\n1464 13434\n1466 13434\n1468 13435\n1470 13435\n1472 13435\n1474 13436\n1476 13436\n1478 13436\n1480 13437\n1482 13437\n1484 13437\n1486 13438\n1488 13438\n1490 13438\n1492 13439\n1494 13439\n1496 13439\n1498 13440\n1500 13440\n1502 13440\n1504 13441\n1506 13441\n1508 13441\n1510 13442\n1512 13442\n1514 13442\n1516 13443\n1518 13443\n1520 13443\n1522 13444\n1524 13444\n1526 13444\n1528 13445\n1530 13445\n1532 13445\n1534 13446\n1536 13446\n1538 13446\n1540 13447\n1542 13447\n1544 13447\n1546 13448\n1548 13448\n1550 13448\n1552 13449\n1554 13449\n1556 13449\n1558 13450\n1560 13450\n1562 13450\n1564 13451\n1566 13451\n1568 13451\n1570 13452\n1572 13452\n1574 13452\n1576 13453\n1578 13453\n1580 13453\n1582 13454\n1584 13454\n1586 13454\n1588 13455\n1590 13455\n1592 13455\n1594 13456\n1596 13456\n1598 13456\n1600 13457\n1602 13457\n1604 13457\n1606 13458\n1608 13458\n1610 13458\n1612 13459\n1614 13459\n1616 13459\n1618 13460\n1620 13460\n1622 13460\n1624 13461\n1626 13461\n1628 13461\n1630 13462\n1632 13462\n1634 13462\n1636 13463\n1638 13463\n1640 13463\n1642 13464\n1644 13464\n1646 13464\n1648 13465\n1650 13465\n1652 13465\n1654 13466\n1656 13466\n1658 13466\n1660 13467\n1662 13467\n1664 13467\n1666 13468\n1668 13468\n1670 13468\n1672 13469\n1674 13469\n1676 13469\n1678 13470\n1680 13470\n1682 13470\n1684 13471\n1686 13471\n1688 13471\n1690 13472\n1692 13472\n1694 13472\n1696 13473\n1698 13473\n1700 13473\n1702 13474\n1704 13474\n1706 13474\n1708 13475\n1710 13475\n1712 13475\n1714 13476\n1716 13476\n1718 13476\n1720 13477\n1722 13477\n1724 13477\n1726 13478\n1728 13478\n1730 13478\n1732 13479\n1734 13479\n1736 13479\n1738 13480\n1740 13480\n1742 13480\n1744 13481\n1746 13481\n17"
    },
    {
        "number": 3097,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 10') == '18'\nassert solution('5 8') == '8'\nassert solution('17 144') == '265'\nassert solution('121 121') == '25'\nassert solution('89 98') == '10'\n"
    },
    {
        "number": 3098,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 2') == 0.5\nassert solution('5 5') == 12.5\nassert solution('10 10') == 50\nassert solution('5 3') == 0.5\nassert solution('10 4') == 10\n\"\"\"\n"
    },
    {
        "number": 3098,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"4 3\n0 0\n1 1\n2 1\n1 0\"\"\") == \"0.50000000\"\n\nassert solution(\n\"\"\"4 3\n0 4\n4 2\n4 1\n3 -1\n-2 4\"\"\") == \"12.50000000\"\n"
    },
    {
        "number": 3098,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n4 3\n0 0\n1 1\n2 1\n1 0\n''') == '0.50000000'\n\nassert solution('''\n5 5\n0 4\n4 2\n4 1\n3 -1\n-2 4\n''') == '12.50000000'\nassert solution('''\n5 5\n0 4\n4 2\n4 1\n3 -1\n-2 4\n''') == '12.50000000'\nassert solution('''\n5 5\n0 4\n4 2\n4 1\n3 -1\n-2 4\n''') == '12.50000000'\nassert solution('''\n5 5\n0 4\n4 2\n4 1\n3 -1\n-2 4\n''') == '12.50000000'\n"
    },
    {
        "number": 3098,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == str(solution(stdin))\n\"\"\"\nfrom typing import List\n\nimport sys\nsys.setrecursionlimit(100000)\n"
    },
    {
        "number": 3098,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 0\\n1 1\\n2 1\\n1 0\\n4 4\\n4 2\\n4 1\\n3 -1\\n-2 4\\n') == '0.50000000'\nassert solution('1 0\\n0 1\\n1 0\\n2 1\\n1 0\\n3 0\\n0 3\\n0 0\\n2 3\\n0 1\\n2 3\\n1 0\\n2 3\\n0 0\\n2 3\\n1 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2 3\\n0 0\\n2"
    },
    {
        "number": 3098,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3098,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 0\\n0 0') == '0.50000000'\nassert solution('3 2\\n0 0\\n1 1\\n2 1\\n1 0\\n') == '0.50000000'\nassert solution('3 2\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\\n') == '12.50000000'\n"
    },
    {
        "number": 3098,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 3\n0 0\n1 1\n2 1\n1 0''') == '0.50000000'\nassert solution('''5 3\n0 4\n4 2\n4 1\n3 -1\n-2 4''') == '12.50000000'\nassert solution('''7 10\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7''') == '45.0'\nassert solution('''7 10\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '45.0'\nassert solution('''10 10\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '45.0'\n"
    },
    {
        "number": 3098,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 3\n0 0\n1 1\n2 1\n1 0''') == '0.50000000'\nassert solution('''5 5\n0 4\n4 2\n4 1\n3 -1\n-2 4''') == '12.50000000'\nassert solution('''3 4\n1 0\n1 -1\n2 1''') == '0.50000000'\nassert solution('''3 5\n1 0\n1 -1\n2 1\n1 0''') == '2.1500000'\nassert solution('''3 4\n1 -1\n1 0\n2 1''') == '2.2500000'\n"
    },
    {
        "number": 3098,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"4 3\n0 0\n1 1\n2 1\n1 0\n\"\"\") == \"0.50000000\"\nassert solution(\n\"\"\"5 5\n0 4\n4 2\n4 1\n3 -1\n-2 4\n\"\"\") == \"12.50000000\"\nassert solution(\n\"\"\"30 10\n-29 -10\n-29 -9\n-29 -7\n-29 -5\n-29 -3\n-29 -1\n-29  0\n-29  1\n-29  2\n-29  3\n-29  4\n-29  5\n-29  6\n-29  7\n-29  8\n-29  9\n-29 10\n-29 11\n-29 12\n-29 13\n-29 14\n-29 15\n-29 16\n-29 17\n-29 18\n-29 19\n-29 20\n-29 21\n-29 22\n-29 23\n-29 24\n-29 25\n-29 26\n-29 27\n-29 28\n-29 29\n-29 30\n-29 31\n-29 32\n-29 33\n-29 34\n-29 35\n-29 36\n-29 37\n-29 38\n-29 39\n-29 40\n-29 41\n-29 42\n-29 43\n-29 44\n-29 45\n-29 46\n-29 47\n-29 48\n-29 49\n-29 50\n-29 51\n-29 52\n-29 53\n-29 54\n-29 55\n-29 56\n-29 57\n-29 58\n-29 59\n-29 60\n-29 61\n-29 62\n-29 63\n-29 64\n-29 65\n-29 66\n-29 67\n-29 68\n-29 69\n-29 70\n-29 71\n-29 72\n-29 73\n-29 74\n-29 75\n-29 76\n-29 77\n-29 78\n-29 79\n-29 80\n-29 81\n-29 82\n-29 83\n-29 84\n-29 85\n-29 86\n-29 87\n-29 88\n-29 89\n-29 90\n-29 91\n-29 92\n-29 93\n-29 94\n-29 95\n-29 96\n-29 97\n-29 98\n-29 99\n-29 100\n-29 101\n-29 102\n-29 103\n-29 104\n-29 105\n-29 106\n-29 107\n-29 108\n-29 109\n-29 110\n-29 111\n-29 112\n-29 113\n-29 114\n-29 115\n-29 116\n-29 117\n-29 118\n-29 119\n-29 120\n-29 121\n-29 122\n-29 123\n-29 124\n-29 125\n-29 126\n-29 127\n-29 128\n-29 129\n-29 130\n-29 131\n-29 132\n-29 133\n-29 134\n-29 135\n-29 136\n-29 137\n-29 138\n-29 139\n-29 140\n-29 141\n-29 142\n-29 143\n-29 144\n-29 145\n-29 146\n-29 147\n-29 148\n-29 149\n-29 150\n-29 151\n-29 152\n-29 153\n-29 154\n-29 155\n-29 156\n-29 157\n-29 158\n-29 159\n-29 160\n-29 161\n-29 162\n-29 163\n-29 164\n-29 165\n-29 166\n-29 167\n-29 168\n-29 169\n-29 170\n-29 171\n-29 172\n-29 173\n-29 174\n-29 175\n-29 176\n-29 177\n-29 178\n-29 179\n-29 180\n-29 181\n-29 182\n-29 183\n-29 184\n-29 185\n-29 186\n-29 187\n-29 188\n-29 189\n-29 190\n-29 191\n-29 192\n-29 193\n-29 194\n-29 195\n-29 196\n-29 197\n-29 198\n-29 199\n-29 200\n-29 201\n-29 202\n-29 203\n-29 204\n-29 205\n-29 206\n-29 207\n-29 208\n-29 209\n-29 210\n-29 211\n-29 212\n-29 213\n-29 214\n-29 215\n-29 216\n-29 217\n-29 218\n-29 219\n-29 220\n-29 221\n-29 222\n-29 223\n-29 224\n-29 225\n-29 226\n-29 227\n-29 228\n-29 229\n-29 230\n-29 231\n-29 232\n-29 233\n-29 234\n-29 235\n-29 236\n-29 237\n-29 238\n-29 239\n-29 240\n-29 241\n-29 242\n-29 243\n-29 244\n-29 245\n-29 246\n-29 247\n-29 248\n-29 249\n-29 250\n-29 251\n-29 252\n-29 253\n-29 254\n-29 255\n-29 256\n-29 257\n-29 258\n-29 259\n-29 260\n-29 261\n-29 262\n-29 263\n-29 264\n-29 265\n-29 266\n-29 267\n-29 268\n-29 269\n-29 270\n-29 271\n-29 272\n-29 273\n-29 274\n-29 275\n-29 276\n-29 277\n-29 278\n-29 279\n-29 280\n-29 281\n-29 282\n-29 283\n-29 284\n-29 285\n-29 286\n-29 287\n-29 288\n-29 289\n-29 290\n-29 291\n-29 292\n-29 293\n-29 294\n-29 295\n-29 296\n-29 297\n-29 298\n-29 299\n-29 300\n-29 301\n-29 302\n-29 303\n-29 304\n-29 305\n-29 306\n-29 307\n-29 308\n-29 309\n-29 310\n-29 311\n-29 312\n-29 313\n-29 314\n-29 315\n-29 316\n-29 317\n-29 318\n-29 319\n-29 320\n-29 321\n-29 322\n-29 323\n-29 324\n-29 325\n-29 326\n-29 327\n-29 328\n-29 329\n-29 330\n-29 331\n-29 332\n-29 333\n-29 334\n-29 335\n-29 336\n-29 337\n-29 338\n-29 339\n-29 340\n-29 341\n-29 342\n-29 343\n-29 344\n-29 345\n-29 346\n-29 347\n-29 348\n-29 349\n-29 350\n-29 351\n-29 352\n-29 353\n-29 354\n-29 355\n-29 356\n-29 357\n-29 358\n-29 359\n-29 360\n-29 361\n-29 362\n-29 363\n-29 364\n-29 365\n-29 366\n-29 367\n-29 368\n-29 369\n-29 370\n-29 371\n-29 372\n-29 373\n-29 374\n-29 375\n-29 376\n-29 377\n-29 378\n"
    },
    {
        "number": 3099,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 1 3\n0 1\n1 2\n2 3\n1\n''') == '2'\nassert solution('''4 0 4\n0 2\n0 1\n2 1\n2 3\n''') == '1'\nassert solution('''9 1 2\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9\n''') == '5'\nassert solution('''9 1 2\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9\n''') == '1'\nassert solution('''10 1 3\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10\n''') == '7'\n"
    },
    {
        "number": 3099,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0 0 0\\n0 1\\n1 2\\n2 3\\n1\") == \"2\"\nassert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\") == \"2\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\\n\") == \"1\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\\n0 3\") == \"1\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\\n0 4\") == \"1\"\n"
    },
    {
        "number": 3099,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 1 3\\n0 1\\n1 2\\n2 3\\n1') == '2'\nassert solution('4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\\n1') == '1'\nassert solution('4 1 3\\n1 2\\n0 1\\n0 3\\n0 1\\n1 3\\n1 2\\n0 2\\n2 3\\n0 2\\n2 1') == '4'\nassert solution('4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\\n1') == '1'\nassert solution('4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\\n1\\n0 2\\n0 1\\n1 3\\n1 2\\n0 2\\n0 1') == '3'\n"
    },
    {
        "number": 3099,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''4 1 3\n0 1\n1 2\n2 3\n1\n''') == '2'\nassert solution(\n'''4 0 4\n0 2\n0 1\n2 1\n2 3\n''') == '1'\nassert solution(\n'''4 0 4\n0 2\n1 2\n2 3\n2\n''') == '0'\nassert solution(\n'''6 0 3\n0 3\n0 4\n0 5\n0 6\n0 1\n1 2\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n''') == '2'\nassert solution(\n'''6 0 3\n0 3\n0 4\n0 5\n0 6\n0 1\n1 2\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n1 5\n1 6\n1 3\n1 1\n1 4\n"
    },
    {
        "number": 3099,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''4 1 3\n0 1\n1 2\n2 3\n1\n''') == '2'\nassert solution(\n'''4 0 4\n0 2\n0 1\n2 1\n2 3\n''') == '1'\nassert solution(\n'''1 2\n0 2\n1 0\n''') == '1'\nassert solution(\n'''1 2\n2 0\n1 0\n''') == '2'\nassert solution(\n'''4 1 3\n1 2\n2 3\n1\n''') == '3'\n"
    },
    {
        "number": 3099,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 1 3\n0 1\n1 2\n2 3\n1''') == '2'\nassert solution('''4 1 3\n0 1\n1 2\n2 3\n1\n3 1\n3 0''') == '1'\nassert solution('''4 0 4\n0 2\n0 1\n2 1\n2 3\n''') == '1'\nassert solution('''4 0 4\n1 2\n2 3\n2 1\n2 3\n''') == '2'\nassert solution('''4 0 4\n1 2\n2 3\n1\n3 1\n3 0\n''') == '1'\n"
    },
    {
        "number": 3099,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin[3]\nprint(solution(stdin))"
    },
    {
        "number": 3099,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 1 3\\n0 1\\n1 2\\n2 3\\n1') == '2'\nassert solution('4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\\n') == '1'\nassert solution('5 2 3\\n0 1\\n1 2\\n2 3\\n3 4\\n') == '2'\nassert solution('1\\n1') == '0'\nassert solution('5 4 3\\n0 1\\n1 2\\n2 3\\n3 4\\n') == '1'\n"
    },
    {
        "number": 3099,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('2 1 3') == '3'\nassert solution('1') == '0'\nassert solution('2 3 4') == '2'\nassert solution('4 2 4') == '1'\n"
    },
    {
        "number": 3099,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 1 3') == '2'\nassert solution('4 0 4') == '1'\nassert solution('4 1 3') == '2'\nassert solution('4 0 4') == '1'\nassert solution('4 1 3') == '2'\n"
    },
    {
        "number": 3100,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 1') == '6'\nassert solution('2 2 2') == '30'\nassert solution('2 3 2') == '30'\nassert solution('2 2 3') == '6'\nassert solution('3 2 2') == '30'\n"
    },
    {
        "number": 3100,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3100,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3100,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n1 2 1\n''') == '6'\nassert solution('''\n2 2 2\n''') == '30'\nassert solution('''\n5 2 5\n''') == '0'\nassert solution('''\n20 3 10\n''') == '0'\nassert solution('''\n3 2 1\n''') == '0'\n"
    },
    {
        "number": 3100,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 1') == '6'\nassert solution('2 2 2') == '30'\n"
    },
    {
        "number": 3100,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 1') == '6'\nassert solution('2 2 2') == '30'\nassert solution('0 0 0') == '0'\nassert solution('1 1 1') == '1'\nassert solution('1 2 1') == '6'\n"
    },
    {
        "number": 3100,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 1') == \"6\"\nassert solution('2 2 2') == \"30\"\nassert solution('1 2 1') == \"6\"\nassert solution('2 2 2') == \"30\"\nassert solution('3 3 3') == \"0\"\n\"\"\"\n"
    },
    {
        "number": 3100,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 1') == 6\nassert solution('2 2 2') == 30\n"
    },
    {
        "number": 3100,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == str(solution(stdin))\nprint(solution(stdin))\n"
    },
    {
        "number": 3100,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '1 2 1'\n) == '6'\nassert solution(\n    '2 2 2'\n) == '30'\nassert solution(\n    '1 2 2'\n) == '30'\nassert solution(\n    '2 3 2'\n) == '0'\nassert solution(\n    '2 2 2'\n) == '0'\n"
    },
    {
        "number": 3101,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3101,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0\\n1\\n2\\n3\") == \"2\\n3\\n1\"\nassert solution(\"0\\n1\\n1\\n1\") == \"impossible\"\nassert solution(\"0\\n1\\n9\\n9\") == \"impossible\"\nassert solution(\"0\\n1\\n1\\n1\\n1\") == \"impossible\"\nassert solution(\"0\\n1\\n1\\n9\\n9\") == \"impossible\"\n"
    },
    {
        "number": 3101,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == input\n"
    },
    {
        "number": 3101,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n2020 2020 2020''') == '''2021 2020 2020'''\nassert solution('''2\n1 9999999''') == '''impossible'''\nassert solution('''4\n1 7 5 12 9''') == '''1 3 5 12 7'''\nassert solution('''5\n1 7 5 12 9 1''') == '''impossible'''\n'''"
    },
    {
        "number": 3101,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n2020 2020 2020''') == '''2021 2020 2020'''\nassert solution('''2\n1 9999999''') == 'impossible'\n'''"
    },
    {
        "number": 3101,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n2020 2020 2020''') == '2021 2020 2020'\nassert solution('''2\n1 9999999''') == 'impossible'\nassert solution('''3\n4 5 6''') == '4 5 6'\nassert solution('''3\n7 8 9''') == 'impossible'\nassert solution('''3\n0 0 0''') == 'impossible'\n"
    },
    {
        "number": 3101,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n2020 2020 2020\n''') == '2021 2020 2020'\nassert solution('''1\n1 9999999\n''') == 'impossible'\nprint('solution:', solution('''3\n2020 2020 2020\n'''))\n"
    },
    {
        "number": 3101,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    \"3\\n2020 2020 2020\"\n) == \"2021 2020 2020\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 3101,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n3\n2020 2020 2020\n\"\"\") == \"\"\"\n2021 2020 2020\n\"\"\"\n\nassert solution(\n\"\"\"\n3\n2 10 22\nSample Output 1:\nimpossible\n\"\"\") == \"\"\"\nimpossible\n\"\"\"\n\nassert solution(\n\"\"\"\n2\n1 9999999\nSample Output 2:\n2021 2020 2020\n\"\"\"\n) == \"\"\"\n2021 2020 2020\n\"\"\"\n\nassert solution(\n\"\"\"\n3\n5 6 4\nSample Output 3:\nimpossible\n\"\"\"\n) == \"\"\"\nimpossible\n\"\"\"\n"
    },
    {
        "number": 3101,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3102,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    '''30 70'''\n    ) == '11'\n'''\nSample Input 3:\n1 2\nSample Output 3:\n1\n\nSample Input 4:\n1 2\nSample Output 4:\n0\n'''\nassert solution(\n    '''1 2'''\n    ) == '0'\nassert solution(\n    '''0 1'''\n    ) == '1'\n"
    },
    {
        "number": 3102,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 10') == '1'\nassert solution('11 11') == '0'\nassert solution('5 10') == '0'\nassert solution('8 9') == '1'\nassert solution('3 4') == '0'\n"
    },
    {
        "number": 3102,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('30 70') == '11'\nassert solution('66 69') == '2'\n"
    },
    {
        "number": 3102,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"...\\n30 70\\n...\\n\") == \"11\"\n\"\"\""
    },
    {
        "number": 3102,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('1 1') == '1'\nassert solution('5 10') == '0'\nassert solution('2 4') == '2'\nassert solution('10 9') == '1'\n"
    },
    {
        "number": 3102,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"30 70\\n\") == \"11\"\nassert solution(\"66 69\\n\") == \"2\"\n\nprint(solution(stdin))\n"
    },
    {
        "number": 3102,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2\n"
    },
    {
        "number": 3102,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('30 70') == '11'\nassert solution('66 69') == '2'\nassert solution('1 1') == '1'\nassert solution('1 1') == '1'\nassert solution('1 10') == '1'\n"
    },
    {
        "number": 3102,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('30 70') == '11'\nassert solution('66 69') == '2'\nprint(solution(input()))\n\n'''\n"
    },
    {
        "number": 3102,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3103,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2 0') == '2'\nassert solution('3 5 1') == '4'\nassert solution('3 5 2') == '4'\nassert solution('3 5 3') == '5'\nassert solution('3 5 4') == '5'\n"
    },
    {
        "number": 3103,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2 0') == '2'\nassert solution('3 5 1') == '4'\n\n'''\n"
    },
    {
        "number": 3103,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input(\"\")) == \"begin repairs\"\nassert solution(input(\"2 2 0\\n>@\\n>~\")) == \"2\"\nassert solution(input(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\")) == \"4\"\n\n\"\"\"\n\nfrom collections import deque\nfrom functools import lru_cache\nfrom typing import Dict, List, Tuple\n"
    },
    {
        "number": 3103,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\">@<<\") == 4\nassert solution(\">>@<<\") == 4\nassert solution(\">>@<<<<\") == 4\nassert solution(\">@<<<<<<\") == 4\nassert solution(\">>@<<\") == 4\n"
    },
    {
        "number": 3103,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2 0') == '2'\nassert solution('3 5 1') == '4'\nassert solution('3 2 0') == '2'\nassert solution('5 10 1') == '4'\nassert solution('5 5 1') == '4'\n"
    },
    {
        "number": 3103,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2 0') == '2'\nassert solution('3 5 1') == '4'\nassert solution('2 3 2') == '4'\nassert solution('4 2 2') == '4'\nassert solution('1 1 2') == 'begin repairs'\n"
    },
    {
        "number": 3103,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2 0') == '2'\nassert solution('3 5 1') == '4'\n\"\"\""
    },
    {
        "number": 3103,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    \"1 1 0\"\n) == \"2\"\nassert solution(\n    \"3 5 1\"\n) == \"4\"\nassert solution(\n    \"4 5 1\"\n) == \"1\"\nassert solution(\n    \"4 4 1\"\n) == \"1\"\nassert solution(\n    \"5 2 2\"\n) == \"1\"\n"
    },
    {
        "number": 3103,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3\\n>@\\n>~') == '2'\nassert solution('2 2 0\\n>@\\n>~') == '2'\nassert solution('3 3 1\\n>>@<<\\n>~#~<\\n>>>>~') == '4'\nassert solution('3 2 0\\n>@\\n>~') == 'begin repairs'\nassert solution('3 2 0\\n>@\\n>~') == 'begin repairs'\n"
    },
    {
        "number": 3103,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 1 0\") == \"2\"\nassert solution(\"2 2 0\") == \"4\"\nassert solution(\"1 1 1\") == \"5\"\nassert solution(\"3 3 0\") == \"begin repairs\"\nassert solution(\"3 5 1\") == \"4\"\n"
    },
    {
        "number": 3104,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\"\nassert solution(\"999999999\") == \"9+999999999\"\nassert solution(\"999999999\") == \"9+999999999\"\nassert solution(\"90009000=999999999\") == \"9+999+9000=999999999\"\n"
    },
    {
        "number": 3104,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(143175==120) == '14+31+75=120'\nassert solution(5025==30) == '5+025=30'\n"
    },
    {
        "number": 3104,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\"\n"
    },
    {
        "number": 3104,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\"\nassert solution(\"11704=4\") == \"11+70+04=4\"\nassert solution(\"10030=10\") == \"100+30=10\"\nassert solution(\"10020=20\") == \"100+20=20\"\n"
    },
    {
        "number": 3104,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '143175=120'\n) == '14+31+75=120'\nassert solution(\n    '5025=30'\n) == '5+025=30'\n"
    },
    {
        "number": 3104,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''143175=120''') == '14+31+75=120'\nassert solution('''5025=30''') == '5+025=30'\nassert solution('''54321=4099''') == '54321=4099'\nassert solution('''868963=32111''') == '868963=32111'\nassert solution('''46829=36278''') == '46829=36278'\n"
    },
    {
        "number": 3104,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\"\n\"\"\"\n\nfrom typing import Tuple"
    },
    {
        "number": 3104,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('143175=120') == '14+31+75=120'\nassert solution('5025=30') == '5+025=30'\nassert solution('939503543=39503543') == '9+9+39+5+3+5=39+5+3+3+3+3+3=39503543'\nassert solution('939503543=39503543') == '9+9+39+5+3+5=39+5+3+3+3+3+3=39503543'\nassert solution('432455=123') == '43+24+55=123'\n"
    },
    {
        "number": 3104,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''143175=120''') == '14+31+75=120'\nassert solution('''5025=30''') == '5+025=30'\nassert solution('''2135317-310009=237621''') == '135+34+1+3+7+5=2376'\nassert solution('''135+34+1+3+7+5=2376''') == '135+34+1+3+7+5=2376'\nassert solution('''10210011+41210331+10010141=123014411''') == '1+2+0+1+3=4+1+0+4+1+3=4+1+0+1+3=4+1+0+1+3=4+1+0+1+3'\n"
    },
    {
        "number": 3104,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\"\nassert solution(\"4564=30\") == \"45+64=70\"\nassert solution(\"123456789=900000000\") == \"1+2+3+4+5+6+7+8+9=900000000\"\nassert solution(\"1234456789=900000000\") == \"1+2+3+4+5+6+7+8+9=900000000\"\n"
    },
    {
        "number": 3105,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\"\"\""
    },
    {
        "number": 3105,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''8\n1\n3\n2\n4\n1\n5\n2\n4\n''') == '1 2'\nassert solution('''8\n1\n2\n3\n4\n5\n6\n7\n1\n''') == '-1'\nassert solution('''8\n1\n2\n3\n4\n5\n6\n7\n1\n''') == '-1'\nassert solution('''6\n1\n2\n3\n4\n5\n6\n7\n''') == '1 2'\nassert solution('''7\n1\n2\n3\n4\n5\n6\n7\n1\n''') == '1 2'\n"
    },
    {
        "number": 3105,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 3105,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\n\"\"\"\nSample Output 1:\n1 2\n\"\"\"\n\n\"\"\"\n1\n3\n2\n4\n1\n5\n2\n4\n\"\"\"\n"
    },
    {
        "number": 3105,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\\n') == '1 2\\n'\nassert solution('4\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\n1\\n5\\n2\\n4\\"
    },
    {
        "number": 3105,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    '''\n8\n1\n3\n2\n4\n1\n5\n2\n4\n'''\n    ) == '1 2'\nassert solution(\n    '''\n8\n1\n2\n3\n4\n5\n6\n7\n1\n'''\n    ) == '-1'\nassert solution(\n    '''\n8\n2\n3\n4\n5\n6\n7\n1\n'''\n    ) == '-1'\nassert solution(\n    '''\n8\n3\n4\n5\n6\n7\n1\n'''\n    ) == '-1'\nassert solution(\n    '''\n8\n2\n1\n3\n4\n5\n6\n7\n1\n'''\n    ) == '-1'\n"
    },
    {
        "number": 3105,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''8\n1\n3\n2\n4\n1\n5\n2\n4\n''') == '1 2'\nassert solution('''8\n1\n2\n3\n4\n5\n6\n7\n1\n''') == '-1'\nassert solution('''8\n1\n2\n3\n4\n5\n6\n7\n2\n''') == '-1'\nassert solution('''8\n1\n2\n3\n4\n5\n6\n7\n8\n1\n''') == '1 2'\nassert solution('''8\n1\n2\n3\n4\n5\n6\n7\n8\n9\n1\n''') == '1 2'\n"
    },
    {
        "number": 3105,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\\n') == '1 2'\nassert solution('8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n1\\n') == '-1'\nassert solution('8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n') == '-1'\nassert solution('8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n') == '-1'\nassert solution('8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n1\\n') == '-1'\n"
    },
    {
        "number": 3105,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''8\n1\n3\n2\n4\n1\n5\n2\n4\n''') == '1 2'\nassert solution('''9\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n"
    },
    {
        "number": 3105,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3106,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('1101') == 1\nassert solution('1010101') == 0\nassert solution('01010101') == 1\nassert solution
    },
    {
        "number": 3106,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1101') == 1\nassert solution('111') == 0\nassert solution('10') == -1\nassert solution
    },
    {
        "number": 3106,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1') == 0\nassert solution('1101') == 1\nassert solution('11111') == 0\nassert solution('0000') == 0\nassert solution('11') == 1\n"
    },
    {
        "number": 3106,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1101\") == 1\nassert solution(\"1\") == 0\nassert solution(\"1000101\") == 5\nassert solution(\"10001001\") == 4\nassert solution(\"00110101\") == 3\n"
    },
    {
        "number": 3106,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '1101'\n) == 1\nassert solution(\n    '101'\n) == 0\nassert solution(\n    '111101101'\n) == 2\nassert solution(\n    '11110111010111110111100100010110111001010101111101001000101'\n) == 4\nassert solution(\n
    },
    {
        "number": 3106,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1101\") == 1\nassert solution(\"1\") == 0\nassert solution(\"0\") == 0\nassert solution(\"010\") == 1\nassert solution(\"10101010\") == 1\n"
    },
    {
        "number": 3106,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1101\") == 1\nassert solution(\"111000100011110111\") == 6\nassert solution(\"111000100011110111\") == 5\nassert solution(\"111000100011110111\") == 4\nassert solution(\"111000100011110111\") == 3\n"
    },
    {
        "number": 3106,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1101\") == 1\nassert solution(\"10101010\") == 1\nassert solution(\"11110000\") == 2\nassert solution(\"00010011\") == 3\nassert solution(\"00010101\") == 4\n"
    },
    {
        "number": 3106,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"10111\") == 0\nassert solution(\"1101\") == 1\nassert solution(\"11\") == 0\nassert solution(\"10110\") == 1\nassert solution(\"00\") == 0\n"
    },
    {
        "number": 3106,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    10101010\n    10101010\n    01010100\n    01010100\n    10101010\n    10101010\n    10101010\n    01010100\n    10101010\n    \"\"\") == 0\nassert solution(\n    \"\"\"\n    10101010\n    10101010\n    10101010\n    10101010\n    10101010\n    10101010\n    10101010\n    10101010\n    10101010\n    \"\"\") == 1\nassert solution(\n    \"\"\"\n    10101010\n    10101010\n    10101010\n    10101010\n    10101010\n    10101010\n    10101010\n    10101010\n    10101010\n    \"\"\") == 0\nassert solution(\n    \"\"\"\n    1101\n    10101010\n    10101010\n    10101010\n    10101010\n    10101010\n    10101010\n    10101010\n    10101010\n    \"\"\") == 3\nassert solution(\n    \"\"\"\n    1101\n    10101010\n    10101010\n    10101010\n    10101010\n    10101010\n    10101010\n    10101010\n    10101010\n    \"\"\") == 2\n"
    },
    {
        "number": 3107,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output\nprint(\"Test cases passed.\")\n"
    },
    {
        "number": 3107,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1 1') == '1'\nassert solution('2 2 1') == '0'\nassert solution('3 3 1 3 1') == '1'\nassert solution('4 4 1 6 3 6') == '0'\nassert solution('5 5 1 7 3 7') == '1'\n"
    },
    {
        "number": 3107,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1\n''') == '''1\n0\n2\n'''\n\nassert solution('''2 1\n4 1 6 3 6\n7 3 4 2 6 5 6 1\n1 2\n''') == '''3\n0\n2\n'''\n\nassert solution('''3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1\n''') == '''1\n0\n2\n'''\n\nassert solution('''4 4\n1 1 2 1 2\n4 1 2 3 1\n2 1 2 1 3\n3 2 1 3 1\n1 1 2 3 3\n3 3 1 2 1\n2 1 3 1 2\n3 1 1\n''') == '''0\n0\n0\n'''\n\nassert solution('''5 5\n1 1 2 1 2\n5 1 2 3 1\n4 1 2 3 1\n2 1 2 1 3\n3 2 1 3 1\n1 1 2 3 3\n3 3 1 2 1\n2 1 3 1 2\n3 1 1\n''') == '''0\n0\n0\n'''"
    },
    {
        "number": 3107,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1\n''') == \"\"\"1\n0\n2\"\"\"\n\nassert solution('''4 4\n1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1"
    },
    {
        "number": 3107,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1\n''') == '1\\n0\\n2'\n\nassert solution('''\n4 4\n4 1 3 6 4\n1 3 3 1 5 3 4\n3 3 2 3 1 1\n1 2\n1 2\n1 3\n1 3\n1 2\n1 3\n''') == '2\\n0\\n0\\n1\\n0'\n\nassert solution('''\n2 2\n1 1\n2 1\n1 1\n''') == '0\\n1'\n\nassert solution('''\n3 3\n5 2 1\n6 1 4 1\n2 2\n2 3\n2 1\n3 1\n''') == '0\\n0\\n1'\n\nassert solution('''\n6 3\n5 1 2 5 4 1 3\n1 1 1 1 2 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '5\\n1\\n1\\n1\\n1\\n1'"
    },
    {
        "number": 3107,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2') == '1'\nassert solution('3 3') == '0'\nassert solution('3 1 3 1') == '1'\nassert solution('4 1 6 3 6') == '2'\nassert solution('7 3 4 2 6 5 6 1') == '3'\n"
    },
    {
        "number": 3107,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3 1\\n1 2\\n2 3\\n3 1\\n2 1\\n3 3 1 3 1\\n1 2\") == \"1\\n0\\n2\"\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 3107,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1\n''') == '''1\n0\n2'''\n\nassert solution('''2 1\n4 1 6 3 6\n7 3 4 2 6 5 6 1\n1 2\n''') == '''3\n0\n2'''\n"
    },
    {
        "number": 3107,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1\n''') == '1\\n0\\n2'\nassert solution('''5 5\n1\n2\n3\n4\n5\n6\n''') == '0\\n0\\n1\\n0\\n0'\nassert solution('''5 4\n1\n2\n3\n4\n5\n6\n7\n''') == '0\\n0\\n0\\n0\\n0'\nassert solution('''6 6\n1\n2\n3\n4\n5\n6\n7\n8\n9\n''') == '0\\n0\\n0\\n0\\n0\\n0'\nassert solution('''8 6\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n''') == '0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0'\n"
    },
    {
        "number": 3107,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"4 1 6 3 6\") == \"3\"\nassert solution(\"4 1 6 3 6\\n2 2 1\") == \"1\"\nassert solution(\"3 3\\n3 1 3 1\\n2 2 1\") == \"0\"\n"
    },
    {
        "number": 3108,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '4.000000'"
    },
    {
        "number": 3108,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 1\n1 2 3 4''') == '4.000000'\nassert solution('''4 2\n2 4 3 4''') == '3.666666'\nassert solution('''4 2\n2 4 3 4''') == '3.666666'\nassert solution('''4 3\n1 2 3 4''') == '2.000000'\nassert solution('''4 3\n1 1 1 1''') == '1.000000'\n"
    },
    {
        "number": 3108,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == '1.0'\nassert solution('1\\n1 2\\n1') == '2.0'\nassert solution('1\\n1 2 3\\n1') == '2.0'\nassert solution('1\\n1 2 3 4\\n1') == '2.0'\nassert solution('1\\n1 2 3 4 5\\n1') == '3.0'\n"
    },
    {
        "number": 3108,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == output\n"
    },
    {
        "number": 3108,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3108,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 1\\n1 2') == '2.000000'\nassert solution('1 1\\n1') == '1.000000'\nassert solution('2 1\\n2') == '2.000000'\nassert solution('1 1\\n1') == '1.000000'\nassert solution('1 1\\n2') == '2.000000'\n"
    },
    {
        "number": 3108,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '4.000000'\n"
    },
    {
        "number": 3108,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 1\n1 2 3 4''') == '4.000000'\nassert solution('''4 2\n2 4 3 4''') == '3.666666'\n"
    },
    {
        "number": 3108,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    stdin = \"\"\"4 1\n1 2 3 4\nSample Output 1\n4.000000\n\nSample Input 2\n4 2\n2 4 3 4\nSample Output 2\n3.666666\"\"\"\n) == \"4.000000\"\nassert solution(\n    stdin = \"\"\"4 2\n1 2 3 4\nSample Output 2\n3.666666\"\"\"\n) == \"3.666666\"\nassert solution(\n    stdin = \"\"\"10 3\n1 2 3 4 5 6 7 8 9 10\nSample Output 2\n6.75000\"\"\"\n) == \"6.75000\"\nassert solution(\n    stdin = \"\"\"10 3\n1 2 3 4 5 6 7 8 9 10\nSample Output 2\n6.75000\"\"\"\n) == \"6.75000\"\nassert solution(\n    stdin = \"\"\"4 5\n3 2 1 4\nSample Output 1\n4.000000\n\nSample Input 2\n5 4\n2 3 4 5 1\nSample Output 2\n3.50000\n\nSample Input 3\n5 5\n1 2 3 4 5\nSample Output 3\n5.000000\n\nSample Input 4\n6 3\n1 2 3 4 5 6\nSample Output 4\n4.000000\n\nSample Input 5\n5 5\n1 2 3 4 5\nSample Output 5\n4.000000\n\nSample Input 6\n5 4\n1 2 3 4 5\nSample Output 6\n4.000000\"\"\"\n) == \"4.000000\"\n"
    },
    {
        "number": 3108,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1') == '2.000000'\nassert solution('2 2') == '1.000000'\nassert solution('3 3') == '0.000000'\nassert solution('1 1 1') == '1.000000'\nassert solution('3 2') == '0.000000'\n"
    },
    {
        "number": 3109,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0') == '0.750'\nassert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0') == '0.625'\n\"\"\""
    },
    {
        "number": 3109,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.0 0.0\n0.0 2.0''') == '0.750'\nassert solution('''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0''') == '0.625'\nassert solution('''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n2.0 0.0\nSample Output 2:\n0.625\nassert solution('''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n2.0 0.0\nSample Output 3:\n0.875\nassert solution('''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n2.0 2.0\nSample Output 4:\n0.875\n"
    },
    {
        "number": 3109,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\\n') == '0.750'\nassert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\\n') == '0.625'\nassert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\\n') == '0.125'\nassert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\\n') == '0.250'\nassert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 1.0\\n0.0 2.0\\n') == '1.125'\n"
    },
    {
        "number": 3109,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1 2 2') == '0.750'\nassert solution('1 1 3 2') == '0.750'\nassert solution('1 1 4 3') == '0.750'\nassert solution('1 1 4 3') == '0.750'\nassert solution('1 1 4 2') == '0.750'\n"
    },
    {
        "number": 3109,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.0 0.0\n0.0 2.0''') == '0.750'\nassert solution('''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0''') == '0.625'\nassert solution('''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 1.0\n1.0 0.0''') == '0.0'\nassert solution('''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.0 1.0\n0.0 2.0''') == '0.0'\nassert solution('''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 1.0''') == '0.0'\n"
    },
    {
        "number": 3109,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\\n') == '0.750'\nassert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\\n') == '0.625'\nassert solution('1 1 1 1\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0\\n1.0"
    },
    {
        "number": 3109,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0') == '0.750'\nassert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0') == '0.625'\nassert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n2.5 0.0\\n0.0 2.0') == '0.750'\nassert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n2.5 0.0\\n0.0 2.0') == '0.750'\nassert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n3.5 0.0\\n0.0 2.0') == '0.750'\n"
    },
    {
        "number": 3109,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0 0 5 5\") == \"0.750\"\nassert solution(\"1 1 1 1\") == \"0.000\"\nassert solution(\"0 0 5 5\") == \"0.750\"\nassert solution(\"1 1 1 1\") == \"0.000\"\nassert solution(\"0 0 5 5\") == \"0.750\"\n"
    },
    {
        "number": 3109,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3109,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2 5 5') == '0.750'\nassert solution('2 2 5 5') == '0.750'\nassert solution('2 2 5 5') == '0.750'\nassert solution('2 2 5 5') == '0.750'\nassert solution('2 2 5 5') == '0.750'\n"
    },
    {
        "number": 3110,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\n1 2 4\n0 3 6\n4 0 3\n''') == '2'\nassert solution('''\n4 4\n1 2 3 4\n0 0 2 3\n1 1 1 3\n''') == '9'\nassert solution('''\n4 4\n2 3 0 7\n0 0 2 1\n0 0 3 0\n''') == '37'\n'''\n"
    },
    {
        "number": 3110,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''3 3\n1 2 4\n0 3 6\n4 0 3''') == '2'\nassert solution('''4 4\n2 3 0 7\n0 0 2 1\n0 0 3 0''') == '37'\n"
    },
    {
        "number": 3110,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n1 2 4\\n0 3 6\\n4 0 3\") == \"2\"\nassert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == \"2\"\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == \"37\"\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == \"37\"\nassert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == \"2\"\n"
    },
    {
        "number": 3110,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''3 3\n1 2 4\n0 3 6\n4 0 3\n''') == '2'\n\nassert solution(\n'''3 4\n2 3 0 7\n0 0 2 1\n0 0 3 0\n''') == '37'\n\nassert solution(\n'''3 3\n2 3 0 7\n0 0 2 1\n0 0 3 0\n''') == '37'\n'''"
    },
    {
        "number": 3110,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 2 3 4 5') == '5'\nassert solution('0 0 2 1') == '37'\nassert solution('1 2 3 4 5') == '1'\nassert solution('1 2 3 4') == '0'\nassert solution('1 2 3') == '0'\n"
    },
    {
        "number": 3110,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1') == '0'\nassert solution('1 1\\n0 0 2 1\\n0 0 3 0') == '37'\nassert solution('3 3\\n1 2 4\\n0 3 6\\n4 0 3') == '2'\nassert solution('3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0') == '37'\nassert solution('1 1\\n0 0 2 1\\n0 0 3 0') == '0'\n"
    },
    {
        "number": 3110,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3\\n4 0 3\\n0 1 2\\n3 4 0\\n0 0 2 1\\n0 0 3 0') == '2\\n'\nassert solution('2 3\\n0 0 2 1\\n0 0 3 0\\n0 0 3 0') == '37\\n'\nassert solution('3 3\\n1 2 4\\n0 3 6\\n4 0 3\\n0 0 3') == '2\\n'\n\"\"\"\n"
    },
    {
        "number": 3110,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n2 1\") == \"0\"\nassert solution(\"2 2\\n3 2\") == \"0\"\nassert solution(\"2 3\\n4 3\") == \"6\"\nassert solution(\"3 3\\n2 3\\n0 3\") == \"15\"\nassert solution(\"3 3\\n4 3\\n2 3\") == \"25\"\n"
    },
    {
        "number": 3110,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 3\n1 2 4\n0 3 6\n4 0 3''') == '2'\nassert solution('''3 4\n2 3 0 7\n0 0 2 1\n0 0 3 0''') == '37'\n'''\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 3110,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '37'\n\n-------------------------------------------------------------------------"
    },
    {
        "number": 3111,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 3\\n1 4\\n1 4\\n1 4\\n1 4\") == '1\\n4\\n9\\n16'\nassert solution(\"1 4\\n1 4\\n1 4\\n1 4\") == '1\\n4\\n9\\n16'\nassert solution(\"1 1\\n1 2\\n1 3\\n1 4\") == '1\\n4\\n9'"
    },
    {
        "number": 3111,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 3\\n1234\\n1 4\\n1 4\\n1 4\\n') == '10\\n14\\n18\\n'\nassert solution('3 3\\n1 1\\n1 2\\n1 3\\n1 4\\n') == '1\\n4\\n9\\n16\\n'\nassert solution('4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\\n') == '1\\n4\\n9\\n16\\n'\nassert solution('4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\\n') == '1\\n4\\n9\\n16\\n'\nassert solution('4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\\n') == '1\\n4\\n9\\n16\\n'\n"
    },
    {
        "number": 3111,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 3\\n1234\\n1 4\\n1 4\\n1 4\\n') == '10\\n14\\n18\\n'\nassert solution('10 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\\n') == '1\\n4\\n9\\n16\\n'\nassert solution('4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\\n') == '1\\n4\\n9\\n16\\n'\nassert solution('7 3\\n24342\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n1 16\\n1 17\\n1 18\\n1 19\\n1 20\\n1 21\\n1 22\\n1 23\\n1 24\\n1 25\\n1 26\\n1 27\\n1 28\\n1 29\\n1 30\\n1 31\\n1 32\\n1 33\\n1 34\\n1 35\\n1 36\\n1 37\\n1 38\\n1 39\\n1 40\\n1 41\\n1 42\\n1 43\\n1 44\\n1 45\\n1 46\\n1 47\\n1 48\\n1 49\\n1 50\\n1 51\\n1 52\\n1 53\\n1 54\\n1 55\\n1 56\\n1 57\\n1 58\\n1 59\\n1 60\\n1 61\\n1 62\\n1 63\\n1 64\\n1 65\\n1 66\\n1 67\\n1 68\\n1 69\\n1 70\\n1 71\\n1 72\\n1 73\\n1 74\\n1 75\\n1 76\\n1 77\\n1 78\\n1 79\\n1 80\\n1 81\\n1 82\\n1 83\\n1 84\\n1 85\\n1 86\\n1 87\\n1 88\\n1 89\\n1 90\\n1 91\\n1 92\\n1 93\\n1 94\\n1 95\\n1 96\\n1 97\\n1 98\\n1 99\\n1 100\\n1 101\\n1 102\\n1 103\\n1 104\\n1 105\\n1 106\\n1 107\\n1 108\\n1 109\\n1 110\\n1 111\\n1 112\\n1 113\\n1 114\\n1 115\\n1 116\\n1 117\\n1 118\\n1 119\\n1 120\\n1 121\\n1 122\\n1 123\\n1 124\\n1 125\\n1 126\\n1 127\\n1 128\\n1 129\\n1 130\\n1 131\\n1 132\\n1 133\\n1 134\\n1 135\\n1 136\\n1 137\\n1 138\\n1 139\\n1 140\\n1 141\\n1 142\\n1 143\\n1 144\\n1 145\\n1 146\\n1 147\\n1 148\\n1 149\\n1 150\\n1 151\\n1 152\\n1 153\\n1 154\\n1 155\\n1 156\\n1 157\\n1 158\\n1 159\\n1 160\\n1 161\\n1 162\\n1 163\\n1 164\\n1 165\\n1 166\\n1 167\\n1 168\\n1 169\\n1 170\\n1 171\\n1 172\\n1 173\\n1 174\\n1 175\\n1 176\\n1 177\\n1 178\\n1 179\\n1 180\\n1 181\\n1 182\\n1 183\\n1 184\\n1 185\\n1 186\\n1 187\\n1 188\\n1 189\\n1 190\\n1 191\\n1 192\\n1 193\\n1 194\\n1 195\\n1 196\\n1 197\\n1 198\\n1 199\\n1 200\\n1 201\\n1 202\\n1 203\\n1 204\\n1 205\\n1 206\\n1 207\\n1 208\\n1 209\\n1 210\\n1 211\\n1 212\\n1 213\\n1 214\\n1 215\\n1 216\\n1 217\\n1 218\\n1 219\\n1 220\\n1 221\\n1 222\\n1 223\\n1 224\\n1 225\\n1 226\\n1 227\\n1 228\\n1 229\\n1 230\\n1 231\\n1 232\\n1 233\\n1 234\\n1 235\\n1 236\\n1 237\\n1 238\\n1 239\\n1 240\\n1 241\\n1 242\\n1 243\\n1 244\\n1 245\\n1 246\\n1 247\\n1 248\\n1 249\\n1 250\\n1 251\\n1 252\\n1 253\\n1 254\\n1 255\\n1 256\\n1 257\\n1 258\\n1 259\\n1 260\\n1 261\\n1 262\\n1 263\\n1 264\\n1 265\\n1 266\\n1 267\\n1 268\\n1 269\\n1 270\\n1 271\\n1 272\\n1 273\\n1 274\\n1 275\\n1 276\\n1 277\\n1 278\\n1 279\\n1 280\\n1 281\\n1 282\\n1 283\\n1 284\\n1 285\\n1 286\\n1 287\\n1 288\\n1 289\\n1 290\\n1 291\\n1 292\\n1 293\\n1 294\\n1 295\\n1 296\\n1 297\\n1 298\\n1 299\\n1 300\\n1 301\\n1 302\\n1 303\\n1 304\\n1 305\\n1 306\\n1 307\\n1 308\\n1 309\\n1 310\\n1 311\\n1 312\\n1 313\\n1 314\\n1 315\\n1 316\\n1 317\\n1 318\\n1 319\\n1 320\\n1 321\\n1 322\\n1 323\\n1 324\\n1 325\\n1 326\\n1 327\\n1 328\\n1 329\\n1 330\\n1 331\\n1 332\\n1 333\\n1 334\\n1 335\\n1 336\\n1 337\\n1 338\\n1 339\\n1 340\\n1 341\\n1 342\\n1 343\\n1 344\\"
    },
    {
        "number": 3111,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3111,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''4 3\n1234\n1 4\n1 4\n1 4\n''') == '10\\n14\\n18\\n'\nassert solution(\n'''4 3\n123\n1 4\n1 4\n1 4\n''') == '1\\n4\\n9\\n16\\n'\nassert solution(\n'''5 5\n1110\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n''') == '1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n'\n"
    },
    {
        "number": 3111,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 3\\n1234\\n1 4\\n1 4\\n1 4\\n') == '10\\n14\\n18'\nassert solution('4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\\n') == '1\\n4\\n9\\n16'\nassert solution('2 2\\n2 2\\n2 2\\n2 2\\n2 2') == '2'\nprint(solution('4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\\n'))\n"
    },
    {
        "number": 3111,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3111,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '1\\n4\\n9\\n16\\n'\n"
    },
    {
        "number": 3111,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\\n\") == \"10\\n14\\n18\"\nassert solution(\"4 3\\n1 1\\n1 2\\n1 3\\n1 4\\n\") == \"1\\n4\\n9\\n16\"\nassert solution(\"1 1\\n1 2\\n1 3\\n1 4\\n\") == \"1\\n4\\n9\\n16\"\nassert solution(\"1 1\\n1 2\\n1 3\\n1 4\\n\") == \"1\\n4\\n9\\n16\"\nassert solution(\"1 1\\n1 2\\n1 3\\n1 4\\n\") == \"1\\n4\\n9\\n16\"\n"
    },
    {
        "number": 3111,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2\\n1 3\\n1 4') == '1\\n4\\n9\\n16'\nassert solution('2 2\\n1 2\\n1 2') == '1\\n4\\n9\\n16'\nassert solution('4 4\\n1 1\\n1 2\\n1 3\\n1 4') == '1\\n4\\n9\\n16'\nassert solution('4 4\\n1 1\\n1 2\\n1 3\\n1 4') == '1\\n4\\n9\\n16'\nassert solution('4 4\\n1 1\\n2 2\\n1 3\\n1 4') == '1\\n4\\n9\\n16'\n"
    },
    {
        "number": 3112,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\\n1 3\\n2 3\\n3 4\\n1 4\\n1 5\") == \"2\"\nassert solution(\"2 2 3\\n1 3\\n2 3\\n3 4\\n4 5\\n1 5\") == \"1\"\nassert solution(\"4 4 5\\n1 3\\n3 4\\n2 4\\n4 5\") == \"1\"\nassert solution(\"5 5 4\\n1 3\\n3 4\\n2 4\\n4 5\") == \"2\"\nassert solution(\"5 2 4\\n1 3\\n3 4\\n2 4\\n4 5\") == \"1\"\n"
    },
    {
        "number": 3112,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 3112,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\n\"\"\"\n\nfrom __future__ import print_function\nfrom collections import defaultdict\nfrom functools import lru_cache\n"
    },
    {
        "number": 3112,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 2 3\n1 3\n2 3\n3 4''') == '2'\nassert solution('''5 2 4\n1 3\n3 4\n2 4\n4 5''') == '1'\nassert solution('''7 2 4\n1 3\n3 4\n2 4\n4 5\n5 6\n6 7''') == '1'\nassert solution('''7 2 4\n1 3\n3 4\n2 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12''') == '1'\nassert solution('''6 2 4\n1 3\n3 4\n2 4\n4 5\n5 6\n6 7''') == '0'\n"
    },
    {
        "number": 3112,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 3 2') == '2'\nassert solution('5 2 4') == '1'\nassert solution('8 2 6') == '4'\nassert solution('5 8 6') == '4'\nassert solution('2 1') == '1'\n"
    },
    {
        "number": 3112,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"\"\"[Hint](https://www.codewars.com/kata/factory-design)\"\"\"\n"
    },
    {
        "number": 3112,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"4 2 3\n1 3\n2 3\n3 4\n\"\"\") == \"2\"\nassert solution(\"\"\"5 2 4\n1 3\n3 4\n2 4\n4 5\n\"\"\") == \"1\"\nassert solution(\"\"\"9 9 9\n1 9\n1 2\n1 1\n2 2\n2 1\n2 1\n3 3\n3 1\n1 1\n4 4\n4 3\n3 3\n1 1\n\"\"\") == \"9\"\nassert solution(\"\"\"9 9 9\n1 9\n1 2\n1 1\n2 2\n2 1\n2 1\n3 3\n3 1\n1 1\n4 4\n4 3\n3 3\n1 1\n\"\"\") == \"1\"\nassert solution(\"\"\"9 9 9\n1 9\n1 2\n1 1\n2 2\n2 1\n2 1\n3 3\n3 1\n1 1\n4 4\n4 3\n3 3\n1 1\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3112,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input(\"\")) == None\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 3112,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '1'\nassert solution(stdin) == '2'\nassert solution(stdin) == '1'\nassert solution(stdin) == '2'\nassert solution(stdin) == '1'\n"
    },
    {
        "number": 3112,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 2 3\n1 3\n2 3\n3 4''') == '2'\nassert solution('''5 2 4\n1 3\n3 4\n2 4\n4 5''') == '1'\nprint('passed')'''\n"
    },
    {
        "number": 3113,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''1\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0\n''') == 'no'\n\nassert solution(\n'''1\n9999 0 10000 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\n''') == 'yes'\n"
    },
    {
        "number": 3113,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\\n9999 0 10000 0 0 1\\n9999 0 10000 0 0 1\\n\") == \"no\"\nassert solution(\"1000 0 1000 10000 0 10000\\n0 0 0 1000 1000 0\\n0 0 0 1000 1000 0\\n0 0 0 1000 1000 0\\n0 0 0 1000 1000 0\\n0 0 0 1000 1000 0\\n0 0 0 1000 1000 0\\n0 0 0 1000 1000 0\\n\") == \"yes\"\nassert solution(\"1000 0 1000 10000 0 10000\\n9997 0 10000 0 0 1\\n0 0 0 1000 1000 0\\n9999 0 10000 0 0 1\\n9998 0 10000 0 0 1\\n\") == \"no\"\nassert solution(\"1000 0 1000 10000 0 10000\\n9997 0 10000 0 0 1\\n0 0 0 1000 1000 0\\n9999 0 10000 0 0 1\\n9998 0 10000 0 0 1\\n\") == \"yes\"\nassert solution(\"1000 0 1000 10000 0 10000\\n9997 0 10000 0 0 1\\n0 0 0 1000 1000 0\\n9999 0 10000 0 0 1\\n9998 0 10000 0 0 1\\n\") == \"no\"\n"
    },
    {
        "number": 3113,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0\n''') == 'no'\nassert solution('''1\n9996 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\n''') == 'yes'\n'''\n"
    },
    {
        "number": 3113,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0\n''') == 'no'\nassert solution('''1\n99990 0 99997 0 0 1\n99990 0 10000 0 0 1\n2\n99990 0 99997 0 0 1\n99990 0 10000 0 0 1\n''') == 'yes'\nassert solution('''1\n0 0 0 1000 1000 0\n0 0 0 1000 1000 0\n2\n0 0 0 1000 1000 0\n0 0 0 1000 1000 0\n''') == 'no'\nassert solution('''1\n9996 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\n''') == 'yes'\nassert solution('''1\n9996 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\n''') == 'no'\n"
    },
    {
        "number": 3113,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0\n''') == 'no'\nassert solution('''2\n9996 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\n''') == 'yes'\nassert solution('''3\n9996 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\n3\n999 0 999 0 0 1\n998 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0 999 0 0 1\n999 0"
    },
    {
        "number": 3113,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(open(\"test_file.txt\").read()) == \"no\"\nassert solution(open(\"test2_file.txt\").read()) == \"yes\"\n\n----- Explanation -----\nThe skyline of the first example is shown in the image below. The skyline of the second example is shown in the image below.\n\nPossible ways to represent the union of the two cloud coverings:\n\n$\\{(0, 0), (0, 1000), (0, 2000), (1000, 0), (1000, 1000), (1000, 2000), (2000, 0), (2000, 1000), (2000, 2000), (3000, 0), (3000, 1000), (3000, 2000), (5000, 0), (5000, 1000), (5000, 2000)}$\n$\\{(0, 0), (0, 1000), (0, 2000), (1000, 0), (1000, 1000), (1000, 2000), (2000, 0), (2000, 1000), (2000, 2000), (3000, 0), (3000, 1000), (3000, 2000), (5000, 0), (5000, 1000), (5000, 2000)}$\n$\\{(0, 0), (0, 1000), (0, 2000), (1000, 0), (1000, 1000), (1000, 2000), (2000, 0), (2000, 1000), (2000, 2000), (3000, 0), (3000, 1000), (3000, 2000), (5000, 0), (5000, 1000), (5000, 2000), (6000, 0), (6000, 1000), (6000, 2000), (7000, 0), (7000, 1000), (7000, 2000), (8000, 0), (8000, 1000), (8000, 2000), (9000, 0), (9000, 1000), (9000, 2000)}$\n$\\{(0, 0), (0, 1000), (0, 2000), (1000, 0), (1000, 1000), (1000, 2000), (2000, 0), (2000, 1000), (2000, 2000), (3000, 0), (3000, 1000), (3000, 2000), (5000, 0), (5000, 1000), (5000, 2000), (6000, 0), (6000, 1000), (6000, 2000), (7000, 0), (7000, 1000), (7000, 2000), (8000, 0), (8000, 1000), (8000, 2000), (9000, 0), (9000, 1000), (9000, 2000)}$\n\nBecause no triangles from the second example intersects with any of the first example\u2019s triangles, the answer is \u201cno\u201d.\n"
    },
    {
        "number": 3113,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0\n''') == 'no'\nassert solution('''1\n9996 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\n''') == 'no'\nassert solution('''1\n1000 0 1000 0 0 1\n9998 0 10000 0 0 1\n2\n1000 0 1000 0 0 1\n9998 0 10000 0 0 1\n''') == 'yes'\nassert solution('''2\n9996 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\n''') == 'yes'\n"
    },
    {
        "number": 3113,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0\n''') == 'no'\nassert solution('''2\n9996 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\n''') == 'yes'\n\nprint('solution')\n"
    },
    {
        "number": 3113,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0\n''') == 'no'\nassert solution('''1\n9996 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\n''') == 'no'\n\nassert solution('''1\n3\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0\n''') == 'yes'\nassert solution('''1\n3\n9999 0 10000 10000 10000 0 10000\n3\n9999 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0\n''') == 'no'\nassert solution('''1\n3\n9999 0 10000 10000 10000 0 10000\n3\n9999 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0\n''') == 'yes'\n"
    },
    {
        "number": 3113,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\") == \"no\"\nassert solution(\"1\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\") == \"no\"\nassert solution(\"1\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\") == \"no\"\nassert solution(\"1\\n0 0 0 1000 1000 0\\n0 0 0 1000 1000 0\\n2\\n0 0 0 1000 1000 0\\n0 0 0 1000 1000 0\") == \"yes\"\nassert solution(\"1\\n0 0 0 1000 1000 0\\n0 0 0 1000 1000 0\\n2\\n0 0 0 1000 1000 0\\n0 0 0 1000 1000 0\") == \"yes\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n1 2\n2 3\n1 3\n''') == \"YES\"\nassert solution('''4 3\n1 2\n1 3\n1 4\n2 3\n''') == \"NO\"\nassert solution('''3 4\n1 2\n2 3\n1 3\n1 4\n''') == \"YES\"\nassert solution('''3 4\n1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n3 4\n''') == \"NO\"\nassert solution('''3 4\n1 2\n1 3\n1 4\n2 3\n1 2\n1 3\n1 4\n''') == \"YES\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 3114,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n2 3\\n1 3\\n\") == \"YES\\n1 3\\n2 1\\n3 2\\n\"\nassert solution(\"1 2\\n2 3\\n3 1\") == \"NO\\n\"\nassert solution(\"2 3\\n3 1\\n1 2\\n\") == \"NO\\n\"\nassert solution(\"1 2\\n3 1\\n2 3\\n\") == \"NO\\n\"\nassert solution(\"1 2\\n2 3\\n2 1\\n\") == \"NO\\n\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n2 3\\n1 3\") == \"YES\\n1 3\\n2 1\"\nassert solution(\"1 2\\n2 3\\n2 1\") == \"NO\"\nassert solution(\"1 2\\n2 3\") == \"NO\"\nassert solution(\"1 2\\n1 3\") == \"NO\"\nassert solution(\"2 3\\n1 3\") == \"NO\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(open(\"/home/prajna/code/github/Coursera/Algorithmic Thinking/Week2/test_cases/1.in\").read()) == 'YES'\nassert solution(open(\"/home/prajna/code/github/Coursera/Algorithmic Thinking/Week2/test_cases/2.in\").read()) == 'NO'\nassert solution(open(\"/home/prajna/code/github/Coursera/Algorithmic Thinking/Week2/test_cases/3.in\").read()) == 'NO'\nassert solution(open(\"/home/prajna/code/github/Coursera/Algorithmic Thinking/Week2/test_cases/4.in\").read()) == 'YES'\nassert solution(open(\"/home/prajna/code/github/Coursera/Algorithmic Thinking/Week2/test_cases/5.in\").read()) == 'YES'\n"
    },
    {
        "number": 3114,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"YES\"\nassert solution(\"3 3\") == \"NO\"\nassert solution(\"4 5\") == \"NO\"\nassert solution(\"3 4\") == \"YES\"\nassert solution(\"4 4\") == \"YES\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n1 2\") == \"YES\"\nassert solution(\"1 1\\n1 2\") == \"NO\"\nassert solution(\"3 4\\n1 2\\n2 3\\n1 3\") == \"NO\"\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n4 1\") == \"YES\"\nassert solution(\"2 4\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n4 1\") == \"NO\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3114,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"3 3\n1 2\n2 3\n1 3\"\"\"\n) == \"\"\"YES\n1 3\n2 1\n3 2\"\"\"\n\nassert solution(\n    \"\"\"4 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\"\"\"\n) == \"\"\"NO\"\"\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50') == 'YES'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n448\\n449\\n450\\n451\\n452\\n453\\n454\\n455\\n456\\n457\\n458\\n459\\n460\\n461\\n462\\n463\\n464\\n465\\n466\\n467\\n468\\n469\\n470\\n471\\n472\\n473\\n474\\n475\\n476\\n477\\n478\\n479\\n480\\n481\\n482\\n483\\n484\\n485\\n486\\n487\\n488\\n489\\n490\\n491\\n492\\n493"
    },
    {
        "number": 3115,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"inconsistent\"\nassert solution(\"1 1\") == \"consistent\"\nassert solution(\"1 1\") == \"inconsistent\"\nassert solution(\"3 2\") == \"consistent\"\nassert solution(\"0 1\") == \"inconsistent\"\n"
    },
    {
        "number": 3115,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 3\\n0 > 1\\n1 = 2\\n0 = 2') == 'inconsistent'\nassert solution('3 3\\n0 > 1\\n1 = 2\\n0 = 2') == 'consistent'\nassert solution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\\nSample Output 2:') == 'inconsistent'\nassert solution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\\nSample Output 2:') == 'consistent'\nassert solution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\\nSample Output 2:') == 'inconsistent'\n"
    },
    {
        "number": 3115,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input1) == 'inconsistent'\nassert solution(input2) == 'consistent'\n"
    },
    {
        "number": 3115,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''0>1\n1=2\n0=2''') == 'consistent'\nassert solution('''1>1\n1=2\n3=4\n0>3\n1>4''') == 'consistent'\nassert solution('''0>1\n1=2\n0=2\n3=4\n1>4''') == 'consistent'\nassert solution('''2>2\n1=1\n2=2\n1=1\n2>2''') == 'consistent'\nassert solution('''0>1\n1=2\n1>2\n2>1\n0>3\n1>4''') == 'inconsistent'\n"
    },
    {
        "number": 3115,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 3\n0 > 1\n1 = 2\n0 = 2''') == 'inconsistent'\nassert solution('''3 3\n0 = 1\n1 = 2\n3 = 4\n0 > 3\n1 > 4''') == 'consistent'\nassert solution('''6 5\n0 = 1\n1 = 2\n3 = 4\n0 > 3\n1 > 4''') == 'inconsistent'\nassert solution('''6 5\n0 = 1\n1 = 2\n3 = 4\n0 = 3\n1 > 4\nSample Output 3:\ninconsistent\n''') == 'consistent'\nassert solution('''3 3\n0 = 1\n1 = 2\n3 = 4\n0 > 3\n1 = 4\nSample Output 4:\nconsistent\n''') == 'consistent'\n"
    },
    {
        "number": 3115,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3115,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 3\n0 > 1\n1 = 2\n0 = 2''') == 'inconsistent'\nassert solution('''5 5\n0 = 1\n1 = 2\n3 = 4\n0 > 3\n1 > 4''') == 'consistent'\nassert solution('''2 3\n0 = 1\n1 = 2\n3 = 4\n0 > 3\n1 = 2''') == 'consistent'\nassert solution('''10 10\n0 = 1\n1 = 2\n3 = 4\n0 > 3\n1 > 4\n9 = 8\n3 = 7\n8 = 6\n4 = 5\n7 = 4\n6 = 3\n5 = 2\n2 = 1\n1 = 0''') == 'consistent'\nassert solution('''10 10\n1 = 2\n3 = 4\n0 > 3\n1 = 2\n9 = 8\n3 = 7\n8 = 6\n4 = 5\n7 = 4\n6 = 3\n5 = 2\n2 = 1\n1 = 0''') == 'inconsistent'\n"
    },
    {
        "number": 3115,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"inconsistent\"\n"
    },
    {
        "number": 3115,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"consistent\"\nassert solution(\"2 2\") == \"consistent\"\nassert solution(\"5 5\") == \"inconsistent\"\nassert solution(\"5 4\") == \"inconsistent\"\nassert solution(\"1 2\") == \"inconsistent\"\n"
    },
    {
        "number": 3115,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n0 = 1\") == \"consistent\"\nassert solution(\"2 2\\n0 = 1\\n1 = 2\") == \"inconsistent\"\nassert solution(\"2 2\\n0 = 1\\n1 = 2\\n1 > 0\") == \"inconsistent\"\nassert solution(\"2 2\\n0 = 1\\n1 = 2\\n0 > 1\") == \"consistent\"\nassert solution(\"2 2\\n0 = 1\\n1 = 2\\n0 > 1\\n1 = 2\\n0 > 1\") == \"consistent\"\n"
    },
    {
        "number": 3116,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1 1 0\\n0 0 0\\n0 0 1') == 1.57079633\nassert solution('2\\n-1 -1 -1\\n-1 1 -1\\n-1 -1 1\\n1 -1 -1\\n1 1 1') == 2.2250738585072014\nassert solution('3\\n-1 -1 -1\\n-1 -1 1\\n-1 1 -1\\n-1 1 1') == 2.09493107856876\nassert solution('4\\n-1 -1 -1\\n-1 -1 1\\n-1 1 -1\\n-1 1 1\\n1 -1 -1\\n1 1 1') == 1.6314775643924194\nassert solution('5\\n1 -1 -1\\n1 -1 1\\n1 1 -1\\n1 1 1\\n1 -1 -1') == 1.8294599666497498\n"
    },
    {
        "number": 3116,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n0 0 0\") == \"1.57079633\"\nassert solution(\"1\\n1 1 0\") == \"1.57079633\"\nassert solution(\"1\\n1 1 1\") == \"3.14159265\"\nassert solution(\"2\\n-100 0 0\\n10 0 10\") == \"41938.65135885\"\n"
    },
    {
        "number": 3116,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n1 0 0\n1 1 0\n0 0 0\n0 0 1''') == '1.57079633'\nassert solution('''4\n-100 0 0\n10 0 10\n-10 -10 -10\n0 0 0\n''') == '41938.65135885'\n"
    },
    {
        "number": 3116,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output\nprint(f\"Correct solution: {expected_output}\")"
    },
    {
        "number": 3116,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n0 0 0\\n1 1 0\\n0 0 0\\n0 0 1') == '1.57079633'\nassert solution('2\\n-10 -10 -10\\n0 0 0\\n0 0 1') == '41938.65135885'\nassert solution('3\\n10 -10 -10\\n10 10 -10\\n-10 10 10') == '45917.39025293'\nassert solution('4\\n10 -10 -10\\n10 10 -10\\n-10 10 10\\n0 0 0') == '45917.39025293'\nassert solution('5\\n10 -10 -10\\n10 10 -10\\n-10 10 10\\n0 0 0\\n0 0 1') == '83119.02975293'\n"
    },
    {
        "number": 3116,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n4\n1 0 0\n1 1 0\n0 0 0\n0 0 1\n\"\"\"\n) == \"1.57079633\"\n\nassert solution(\n\"\"\"\n4\n-100 0 0\n10 0 10\n-10 -10 -10\n0 0 0\n\"\"\"\n) == \"41938.65135885\"\n"
    },
    {
        "number": 3116,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"1.57079633\"\nassert solution(\"5\") == \"3.141593\"\nassert solution(\"6\") == \"5.1961524\"\nassert solution(\"7\") == \"7.6774934\"\nassert solution(\"8\") == \"11.047309\"\n"
    },
    {
        "number": 3116,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n1 0 0\n1 1 0\n0 0 0\n0 0 1''') == '1.57079633'\nassert solution('''4\n-100 0 0\n10 0 10\n-10 -10 -10\n0 0 0\nSample Output 2:\n41938.65135885''') == '41938.65135885'\nassert solution('''5\n1 1 1\n1 1 -1\n-1 1 1\n1 -1 -1\n-1 -1 -1\nSample Output 2:\n0.14285714''') == '0.14285714'\nassert solution('''2\n-1 0 0\n-1 -1 -1\nSample Output 2:\n0''') == '0'\nassert solution('''2\n-1 -1 -1\n-1 1 1\nSample Output 2:\n0''') == '0'\n"
    },
    {
        "number": 3116,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input(1) == '1.57079633')\nassert solution(input(2) == '41938.65135885')"
    },
    {
        "number": 3116,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('3') == None\nassert solution('5') == None\nassert solution('5 2 1') == None\n"
    },
    {
        "number": 3117,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('11\\nabcabcfabc') == '3'\nassert solution('18\\ntrutrutiktiktappop') == '4'\nassert solution('12\\ntrutrutiktiktappop') == '0'\nassert solution('25\\nabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabce') == 'abcdabcdabcd'\nassert solution('13\\nacbabcbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbac"
    },
    {
        "number": 3117,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('11\\nsabcabcfabc') == '3'\nassert solution('18\\ntrutrutiktiktappop') == '4'\nassert solution('11\\ntrutrutiktiktappop') == '4'\nassert solution('11\\nsabcabcfabc') == '3'\nassert solution('18\\ntrutrutiktiktappop') == '4'\n"
    },
    {
        "number": 3117,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''11\nabcabcfabc''') == '3'\nassert solution('''18\ntrutrutiktiktappop''') == '4'\nassert solution('''15\nxyzzy''') == '0'\nassert solution('''13\nxxyy''') == '2'\nassert solution('''14\nxyzzy''') == '2'\n"
    },
    {
        "number": 3117,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"a\") == \"0\"\nassert solution(\"abc\") == \"0\"\nassert solution(\"abcc\") == \"2\"\nassert solution(\"abcddc\") == \"3\"\nassert solution(\"trutrutiktiktappop\") == \"4\"\n"
    },
    {
        "number": 3117,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('11\\nsabcabcfabc') == '3'\nassert solution('18\\ntrutrutiktiktappop') == '4'\n"
    },
    {
        "number": 3117,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '2'\n\n\"\"\"\n"
    },
    {
        "number": 3117,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3117,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\nab') == '0'\nassert solution('2\\nabcd') == '0'\nassert solution('3\\nabc') == '0'\nassert solution('4\\nabc') == '0'\nassert solution('5\\nabc') == '0'\n"
    },
    {
        "number": 3117,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''11\nsabcabcfabc\n''') == '3'\nassert solution('''18\ntrutrutiktiktappop\n''') == '4'\nassert solution('''21\nhfkfjgfjkgjhkfgkjhfkfgjhfjkgjhkfkfjhkfjkgjhkfjgkfjk\n''') == '6'\nassert solution('''21\ntk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk tk t"
    },
    {
        "number": 3117,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output\nprint('Passed!')\n"
    },
    {
        "number": 3118,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n3\n2 3 1\n3 1 2\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n10\n3 1 4 5 6 7 8 9 10\n5 4 3 2 1 6 7 8 9 10\n\"\"\"\n) == \"9\"\n"
    },
    {
        "number": 3118,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3118,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 3 1\\n3 1 2\") == \"2\"\nassert solution(\"2\\n2 3 1\\n3 1 2\") == \"4\"\nassert solution(\"2\\n3 1 2\\n3 1 2\") == \"3\"\nassert solution(\"4\\n1 2 3 4\\n2 1 3 4\\n3 4 1 2\\n4 3 1 2\\n\") == \"10\"\nassert solution(\"5\\n1 2 3 4 5\\n2 1 3 4 5\\n3 4 5 1 2\\n4 5 1 2 3\\n5 1 2 3 4\\n\") == \"18\"\n"
    },
    {
        "number": 3118,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3') == '2'\nassert solution('1') == '1'\nassert solution('6') == '5'\nassert solution('2') == '2'\nassert solution('3') == '3'\n"
    },
    {
        "number": 3118,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n3\\n2 3 1') == '2'\nassert solution('1\\n2 3 1') == 'huge'\nassert solution('1\\n2 1 3') == 'huge'\nassert solution('1\\n2 3 1') == 'huge'\nassert solution('3\\n1 3 2') == '2'\n"
    },
    {
        "number": 3118,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n2 3 1\n3 1 2\n''') == '2'\n\nassert solution('''6\n5 1 6 3 2 4\n4 6 5 1 3 2\n''') == '5'\n\nassert solution('''5\n5 1 4 2 3\n4 1 2 3 5\n''') == '1'\n\nassert solution('''6\n5 1 4 3 2 5\n4 1 2 3 4 5\n''') == '1'\n\nassert solution('''6\n5 1 4 3 2 5\n4 1 2 3 4 5\n''') == '2'"
    },
    {
        "number": 3118,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\\n2 3 1\\n3 1 2\") == \"2\"\nassert solution(\"3\\n3 1 2\\n3 1 2\") == \"huge\"\nassert solution(\"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\") == \"5\"\nassert solution(\"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\\n3 6 5 4 1 2\") == \"5\"\n"
    },
    {
        "number": 3118,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n2\\n2') == '2'\nassert solution('1\\n2\\n2\\n3') == '5'\nassert solution('1\\n2\\n1\\n2') == '0'\nassert solution('1\\n2\\n2\\n2') == '1'\nassert solution('2\\n3\\n2\\n1') == '0'\n"
    },
    {
        "number": 3118,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n3 1\\n3 1 2\\n') == '2'\nassert solution('1\\n3 1\\n3 1 2\\n') == 'huge'\nassert solution('6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\\n') == '5'\nassert solution('2\\n5 1 6 3 2 4\\n4 6 5 1 3 2\\n') == '2'\nassert solution('7\\n3 1 7 2 4 5 6\\n5 1 6 3 7 2 4\\n4 1 2 3 7 6 5\\n') == '8'\n"
    },
    {
        "number": 3118,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n"
    },
    {
        "number": 3119,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0 10\\n0 10\") == \"4\"\nassert solution(\"1 1\\n0 10\\n0 10\") == \"4\"\nassert solution(\"1 1\\n0 10\\n0 10\\n0 10\") == \"9\"\nassert solution(\"1 1\\n0 10\\n0 40\\n0 10\") == \"9\"\nassert solution(\"1 1\\n0 10\\n0 40\\n0 10\\n0 10\") == \"9\"\n"
    },
    {
        "number": 3119,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(open(\"test_file.txt\").read()) == \"0\"\nassert solution(open(\"test_file_2.txt\").read()) == \"3\"\nassert solution(open(\"test_file_3.txt\").read()) == \"6\"\nassert solution(open(\"test_file_4.txt\").read()) == \"9\"\nassert solution(open(\"test_file_5.txt\").read()) == \"13\"\n"
    },
    {
        "number": 3119,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0\\n0\\n1\\n0\\n1\\n0\\n\") == \"4\"\nassert solution(\"0\\n0\\n1\\n0\\n1\\n0\\n\") == \"9\"\nassert solution(\"1\\n0\\n1\\n0\\n1\\n0\\n\") == \"4\"\nassert solution(\"2\\n0\\n1\\n0\\n1\\n0\\n\") == \"4\"\nassert solution(\"3\\n0\\n1\\n0\\n1\\n0\\n\") == \"4\"\n"
    },
    {
        "number": 3119,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3119,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '9'\n'''\n\nimport math"
    },
    {
        "number": 3119,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 1') == '4'\nassert solution('4 1') == '4'\nassert solution('6 1') == '9'\nassert solution('100 1') == '99'\nassert solution('6 2') == '0'\n"
    },
    {
        "number": 3119,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 1\n0 10 20\n0 10''') == '4'\nassert solution('''5 1\n0 10 20 22 30 32\n0 40\n0 90\n1 100\n1 200\n1 300\n1 400''') == '9'\nassert solution('''5 1\n0 10 22 30 32\n0 40\n0 90\n1 100\n1 200\n1 300\n1 400\n1 800''') == '6'\nassert solution('''5 1\n0 10 22 30 32\n0 40\n0 90\n1 100\n1 200\n1 300\n1 400\n1 900''') == '10'\nassert solution('''8 1\n0 10 20 22 30 32 35 40 45 50 57 60 69\n0 40\n0 90\n1 100\n1 200\n1 300\n1 400\n1 600\n1 900\n1 1200''') == '14'\n"
    },
    {
        "number": 3119,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"9\"\n\nassert solution(\"3 3\") == \"6\"\n\nassert solution(\"1 1\") == \"1\"\n\nassert solution(\"3 3 2 2 1\") == \"5\"\n\nassert solution(\"4 1 2 3 4\") == \"8\""
    },
    {
        "number": 3119,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 3119,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '9'\n"
    },
    {
        "number": 3120,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"equal\"\n\n\"\"\""
    },
    {
        "number": 3120,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('concat(shuffle([1,2]),shuffle([1,2]))') == 'equal'\nassert solution('shuffle([1,2,1,2])') == 'not equal'\nassert solution('sorted(concat([3,2,1],[4,5,6]))') == 'equal'\nassert solution('[1,2,3,4,5,6]') == 'equal'\nassert solution('[3,2,1,4,5,6]') == 'equal'\n"
    },
    {
        "number": 3120,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    concat(shuffle([1,2]),shuffle([1,2]))\n    shuffle([1,2,1,2])\n    \"\"\") == 'equal'\n\"\"\"\n"
    },
    {
        "number": 3120,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 3120,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\") == \"equal\"\nassert solution(\"shuffle([1,2,1,2])\") == \"equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\") == \"equal\"\n\"\"\""
    },
    {
        "number": 3120,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'equal'\n\"\"\"\n\nimport sys\n\nclass Balloon:\n    def __init__(self, arr):\n        self.arr = arr\n\n    def shuffle(self):\n        return self.arr[::-1]\n\n    def concat(self, other):\n        return self.arr + other.arr\n\n    def sorted(self):\n        return sorted(self.arr)\n\n    def __str__(self):\n        return''.join(str(x) for x in self.arr)"
    },
    {
        "number": 3120,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(concat(shuffle([1,2]),shuffle([1,2]))) == \"equal\"\nassert solution(shuffle([1,2,1,2])) == \"not equal\"\nassert solution(sorted(concat([3,2,1],[4,5,6]))) == \"equal\"\nassert solution([1,2,3,4,5,6]) == \"equal\"\nassert solution([1,2,3,4,5,6,7]) == \"equal\"\n"
    },
    {
        "number": 3120,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('concat(shuffle([1,2]),shuffle([1,2]))') == 'equal'\nassert solution('shuffle([1,2,1,2])') == 'not equal'\nassert solution('sorted(concat([3,2,1],[4,5,6]))') == 'equal'\nassert solution('[1,2,3,4,5,6]') == 'equal'\nassert solution('[]') == 'equal'\n"
    },
    {
        "number": 3120,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('concat([1,2], [1,2])') == 'equal'\nassert solution('shuffle([1,2])') == 'equal'\nassert solution('concat([1,2], [2,1])') == 'equal'\nassert solution('shuffle([1,2])') == 'equal'\nassert solution('concat([3,2,1], [4,5,6])') == 'equal'\n"
    },
    {
        "number": 3120,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('concat(shuffle([1,2]),shuffle([1,2]))') == 'equal'\nassert solution('shuffle([1,2,1,2])') == 'not equal'\nassert solution('sorted(concat([3,2,1],[4,5,6]))') == 'equal'\nassert solution('[1,2,3,4,5,6]') == 'equal'\n'''\n"
    },
    {
        "number": 3121,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"1 2\\n\" +\n    \"3 2\\n\" +\n    \"1 2 1 2\\n\" +\n    \"2 3 1 2\\n\") == \"1\"\n\nassert solution(\n    \"1 3\\n\" +\n    \"3 2\\n\" +\n    \"1 2 1 2\\n\" +\n    \"2 3 1 2\\n\") == \"1\"\n"
    },
    {
        "number": 3121,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 2''') == 'Oh no'\nassert solution('''1 3''') == '1'\nassert solution('''2 3''') == '1'\nassert solution('''4 2''') == '1'\nassert solution('''4 5''') == '2'\n"
    },
    {
        "number": 3121,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2') == 'Oh no'\nassert solution('3 2') == '1'\nassert solution('1 2 1 2') == '1'\nassert solution('2 3 1 2') == '1'\nassert solution('1 3 1 2') == '1'\n"
    },
    {
        "number": 3121,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 3\n3 2\n1 2 1 2\n2 3 1 2''') == '1'\nassert solution('''1 2\n3 2\n1 2 1 2\n2 3 1 2''') == '1'\nassert solution('''2 2\n1 2\n1 2 1 2''') == '0'\nassert solution('''2 2\n1 2\n1 2 1 2\n2 3 1 2''') == '1'\nassert solution('''1 2\n3 2\n1 2 1 2\n2 3 1 2''') == '1'\n"
    },
    {
        "number": 3121,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '1'\n\nprint('Well done! Click on \"Check\" to earn cool rewards!')\n"
    },
    {
        "number": 3121,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n1 2\n3 2\n1 2 1 2\n2 3 1 2\n''') == '1'\n\nassert solution(\n'''\n1 2\n3 2\n1 2 1 2\n2 3 1 2\n''') == '1'\n"
    },
    {
        "number": 3121,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '1'\nassert solution(stdin) == '1'\nassert solution(stdin) == '1'\nassert solution(stdin) == '1'\nassert solution(stdin) == '1'\n"
    },
    {
        "number": 3121,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'Oh no'\n"
    },
    {
        "number": 3121,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 3121,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"Oh no\"\nassert solution(\"1 3\") == \"1\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"2 3\\n1 3\") == \"1\"\nassert solution(\"2 4\\n1 3\\n2 4\\n1 3\\n2 4\") == \"4\"\n"
    },
    {
        "number": 3122,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2\\n') == '3'\nassert solution('3 4\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\\n') == 'impossible'\nassert solution('6 6\\n1 2 2\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\\n4 6 1\\n') == 'impossible'\nassert solution('6 3\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\\n4 6 1\\n') == 'impossible'\nassert solution('5 4\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\\n4 6 1\\n') == '3'\n"
    },
    {
        "number": 3122,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'impossible'\n'''\n"
    },
    {
        "number": 3122,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 3122,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3122,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '3'\n\n\"\"\""
    },
    {
        "number": 3122,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3\"\n'''\n"
    },
    {
        "number": 3122,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"impossible\"\nassert solution(\"1\\n\") == \"impossible\"\nassert solution(\"1\\n2\\n\") == \"impossible\"\nassert solution(\"1\\n2\\n3\\n\") == \"impossible\"\nassert solution(\"1\\n1\\n2\\n3\\n\") == \"impossible\"\n"
    },
    {
        "number": 3122,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1\\n2 3 2\\n3 4 1\\n4 5 1\\n5 1 2\\n') == '3'\nassert solution('2 1\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\\n5 1 2\\n') == 'impossible'\nassert solution('1 1\\n2 3 2\\n3 4 1\\n4 5 1\\n5 1 2\\n') == '3'\nassert solution('1 1\\n2 3 2\\n3 4 1\\n4 5 1\\n5 1 2\\n') == '3'\nassert solution('1 1\\n2 3 2\\n3 4 1\\n4 5 1\\n5 1 2\\n') == '3'\n"
    },
    {
        "number": 3122,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"4 4\n1 2 2\n2 3 1\n3 4 1\n4 1 2\n\"\"\") == \"3\"\nassert solution(\"\"\"6 6\n1 2 1\n2 3 1\n2 4 1\n2 5 1\n4 5 1\n3 4 1\n5 3 1\n\"\"\") == \"impossible\"\n\"\"\"\n##Test\n\"\"\"\nfrom unittest import TestCase"
    },
    {
        "number": 3122,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 2') == '3'\nassert solution('2 3 1') == '3'\nassert solution('3 4 1') == '3'\nassert solution('4 1 2') == '3'\nassert solution('2 4 1') == '3'\n"
    },
    {
        "number": 3123,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n    6\n    1 2 1 2 3\n''') == '2'\nassert solution('''\n    3\n    1 1 1\n''') == '1'\nassert solution('''\n    4\n    1 1 1 1\n''') == '3'\nassert solution('''\n    5\n    1 1 1 1 1\n''') == '4'\nassert solution('''\n    2\n    1 2\n''') == '3'\n"
    },
    {
        "number": 3123,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n22') == '4'\n"
    },
    {
        "number": 3123,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5') == '2'\nassert solution('22') == '4'\n\nassert solution('5') == '2'\nassert solution('22') == '4'\nassert solution('2 1 1 1 3') == '2'\n"
    },
    {
        "number": 3123,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n1\n22\n2\n2\n1\n3\n3\n3\n3\n2\n3\n3\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2"
    },
    {
        "number": 3123,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n2 1 1 1 3''') == '2'\nassert solution('''1\n22''') == '4'\nassert solution('''0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n"
    },
    {
        "number": 3123,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"this is a string\") == \"1\"\nassert solution(\"I can't believe that I'm actually doing this\") == \"2\"\nassert solution(\"He's doing fine, just like everyone else.\") == \"3\"\nassert solution(\"This is not a quotation!\") == \"0\"\nassert solution(\"These aren't the droids you're looking for.\") == \"0\"\n"
    },
    {
        "number": 3123,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n2\n1 2 3\n''') == \"2\"\nassert solution('''\n3\n1 2 3\n''') == \"2\"\nassert solution('''\n3\n1 2 3\n''') == \"2\"\nassert solution('''\n7\n4 1 2 3 1 1 1\n''') == \"1\"\nassert solution('''\n5\n2 1 1 1 3\n''') == \"2\"\n"
    },
    {
        "number": 3123,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('\"Sample Input 1\"') == '2'\nassert solution('\"Sample Input 2\"') == '4'\nassert solution('2\\n22') == '4'\nassert solution
    },
    {
        "number": 3123,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 3123,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3124,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 1 5\") == \"3\\n\"\nassert solution(\"4\\n1 2 3 4\") == \"2\\n\"\nassert solution(\"4\\n1 4 2 1 3\") == \"2\\n\"\nassert solution(\"3\\n3 2 1\") == \"3\\n\"\nassert solution(\"1\\n1\") == \"0\\n\"\n"
    },
    {
        "number": 3124,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n3 1 5''') == '3'\nassert solution('''4\n1 2 3 4''') == '2'\nassert solution('''5\n1 2 3 4 5''') == '5'\nassert solution('''2\n1 2''') == '2'\nassert solution('''5\n1 2 3 4 5''') == '3'\n"
    },
    {
        "number": 3124,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3124,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n3\n3 1 5\n''') == '3'\nassert solution('''\n4\n1 2 3 4\n''') == '2'\nassert solution('''\n5\n1 2 3 4 5\n''') == '4'\nassert solution('''\n6\n1 2 3 4 5 6\n''') == '2'\nassert solution('''\n7\n1 2 3 4 5 6 7\n''') == '4'\n"
    },
    {
        "number": 3124,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"1 2 2\") == \"\"\n"
    },
    {
        "number": 3124,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n2\") == \"1\"\nassert solution(\"2\\n2\") == \"1\"\nassert solution(\"2\\n4\") == \"2\"\nassert solution(\"3\\n2 1 5\") == \"2\"\n"
    },
    {
        "number": 3124,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"3\n3 1 5\"\"\") == \"3\"\nassert solution(\"\"\"4\n1 2 3 4\"\"\") == \"2\"\nassert solution(\"\"\"1\n2 3 4\"\"\") == \"1\"\nassert solution(\"\"\"2\n1 2\"\"\") == \"1\"\nassert solution(\"\"\"5\n10 3 7 8 1\"\"\") == \"2\"\n"
    },
    {
        "number": 3124,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('12') == '3'\nassert solution('123') == '3'\nassert solution('1234') == '3'\n"
    },
    {
        "number": 3124,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n3 1 5''') == '3'\nassert solution('''4\n1 2 3 4''') == '2'\nassert solution('''2\n2 2''') == '1'\nassert solution('''1\n1''') == '1'\nassert solution('''4\n1 1 3 3''') == '2'\n"
    },
    {
        "number": 3124,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3125,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"a+b-c\") == \"- +d-\"\nassert solution(\"a-b+d-c\") == \"<empty>\"\nassert solution(\"knuth-morris-pratt\") == \"<any>\"\nassert solution(\"knuthmorrispratt\") == \"<any>\"\n'''\n"
    },
    {
        "number": 3125,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3125,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"a+b-c\"\"\") == \"\"\"\n\n- +d-\n\n\"\"\"\nassert solution(\n\"\"\"knuth-morris-pratt\"\"\") == \"\"\"\n\n<any> <empty>\n\n\"\"\"\nassert solution(\n\"\"\"a-b+c\"\"\") == \"\"\"\n\n- +d-\n\n\"\"\"\nassert solution(\n\"\"\"abc\"\"\") == \"\"\"\n\n<any> <empty>\n\n\"\"\"\nassert solution(\n\"\"\"a-b-c\"\"\") == \"\"\"\n\n- +d-\n\n\"\"\"\n"
    },
    {
        "number": 3125,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('a+b-c') == '- +d-'\nassert solution('a-b+d-c') == '<any> <empty>'\nassert solution('knuth-morris-pratt') == '<any> <empty>'\nassert solution('knuth-morris-pratt') == '<any> <empty>'\nassert solution('knuth-morris-pratt') == '<any> <empty>'\n"
    },
    {
        "number": 3125,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('a+b-c') == '- +d-'\nassert solution('a-b+d-c') == '- +d-'\nassert solution('knuth-morris-pratt') == '<any> <empty>'\nassert solution('knuthmorrispratt') == '<any> <empty>'\n\"\"\"\nfrom collections import defaultdict\nfrom functools import reduce\n"
    },
    {
        "number": 3125,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('a+b-c') == '- +d-'\nassert solution('a-b+d-c') == '<empty> <any>'\nassert solution('knuth-morris-pratt') == '<any> <empty>'\nassert solution('knuthmorrispratt') == '<any> <empty>'\nprint(solution('a+b-c'))\nprint(solution('a-b+d-c'))\nprint(solution('knuth-morris-pratt'))\nprint(solution('knuthmorrispratt'))\n'''"
    },
    {
        "number": 3125,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"a+b-c\") == \"- +d-\"\nassert solution(\"a-b+d-c\") == \"<any> <empty>\""
    },
    {
        "number": 3125,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3125,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == '<empty>'\nassert solution('a+b-c') == '- +d-'\nassert solution('a-b+d-c') == '- -'\nassert solution('a-b-c') == '- -'\nassert solution('a-b-c-d') == '- - -'\n"
    },
    {
        "number": 3125,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('a+b-c') == '- +d-'\nassert solution('knuth-morris-pratt') == '<any> <empty>'\nassert solution('a--b+d-c') == '- -d-'\nassert solution('abcde') == '- <any>'\n"
    },
    {
        "number": 3126,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1') == '0'\nassert solution('2 6 6') == '3'\nassert solution('3 0') == '7'\n"
    },
    {
        "number": 3126,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3126,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1') == '0'\nassert solution('3 0') == '7'\nassert solution('2 6 6') == '10'\nassert solution('10') == 't 0'\nassert solution('10') == 't 1'\n"
    },
    {
        "number": 3126,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\") == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\nassert solution(\"3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\") == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n\"\nassert solution(\"1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\") == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\nassert solution(\"3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\") == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n\"\nassert solution(\"2 2\\n1\\n1\\n2\\n2\\n1\\n2\") == \"3\\n3\\n5\\n5\\n6\\n5\\n\"\n"
    },
    {
        "number": 3126,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == '0'\nassert solution('2 2') == '0'\nassert solution('3 3') == '0'\nassert solution('4 4') == '0'\nassert solution('5 5') == '0'\n"
    },
    {
        "number": 3126,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1') == '0'\nassert solution('0\\n1') == '1'\nassert solution('1\\n0') == '0'\nassert solution('2\\n1 3\\n0\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1') == '3'\nassert solution('2\\n0\\n-1\\n1\\n0\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1') == '3'\n"
    },
    {
        "number": 3126,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 0''') == '0'\nassert solution('''2 1''') == '1'\nassert solution('''2 2''') == '2'\nassert solution('''3 1''') == '1'\nassert solution('''3 2''') == '3'\n"
    },
    {
        "number": 3126,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0\\n2\\n6\\n') == '0'\nassert solution('1\\n0\\n7\\n') == '0'\nassert solution('3\\n0\\n2\\n6\\n') == '3'\nassert solution('3\\n0\\n2\\n6\\n') == '5'\nassert solution('3\\n0\\n2\\n6\\n') == '4'\n"
    },
    {
        "number": 3126,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3126,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3127,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1''') == \"2\\n4 6\\n\"\nassert solution('''5 6\n1 2 2\n2 3 2\n3 5 2\n1 4 3\n4 5 3\n1 5 6''') == \"0\\n\"\nassert solution('''5 5\n1 2 2\n2 3 2\n3 4 2\n1 5 2\n5 4 2\n1 3 3\n3 4 3\n4 5 3\n1 5 4\n1 4 5''') == \"1\\n3\\n\"\nassert solution('''7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1\n6 7 2\n1 6 5\n1 4 5\n1 5 3\n4 1 2\n3 1 4\n2 3 1''') == \"2\\n4 6\\n\"\nassert solution('''7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1\n6 7 2\n1 6 5\n1 4 5\n1 5 3\n4 1 2\n3 1 4\n2 3 1\n3 1 4''') == \"2\\n4 6\\n\"\n"
    },
    {
        "number": 3127,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"2\", \"2 is the number of unused switches\"\nassert solution(\"2 4\") == \"2 4\", \"2 4 is the indices of the unused switches\"\nassert solution(\"7 8\") == \"2 4 6\", \"2 4 6 is the indices of the unused switches\"\nassert solution(\"7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == \"0 4 6\\n\", \"0 4 6 is the indices of the unused switches\"\nassert solution(\"7 8\\n1 1 1\\n2 2 1\\n3 3 1\\n4 4 1\\n5 5 1\\n6 6 1\\n7 7 1\") == \"0 4 6\\n\", \"0 4 6 is the indices of the unused switches\"\n"
    },
    {
        "number": 3127,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == \"2\\n4 6\"\nassert solution(\"7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == \"2\\n4 6\"\n\"\"\""
    },
    {
        "number": 3127,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1''') == '4 6'\nassert solution('''5 6\n1 2 2\n2 3 2\n3 5 2\n1 4 3\n4 5 3\n1 5 6''') == '0 4 6'\nassert solution('''1 2 3\n2 3 2\n2 4 3\n2 5 4\n2 6 5\n3 7 2\n3 8 1\n4 9 4\n4 8 4\n5 8 2\n5 7 1\n5 6 1''') == '3'\nassert solution('''7 7\n1 2 2\n2 3 1\n3 4 1\n1 4 4\n1 5 3\n2 6 1\n1 6 2\n1 7 1\n1 8 2\n1 9 1\n1 10 3\n1 11 2\n1 12 1''') == '2'\nassert solution('''1000000000 4000000000\n1 1 1\n1 2 1\n1 3 1\n1 4 1\n1 5 1\n1 6 1\n1 7 1\n1 8 1\n1 9 1\n1 10 1\n1 11 1\n1 12 1\n1 13 1\n1 14 1\n1 15 1\n1 16 1\n1 17 1\n1 18 1\n1 19 1\n1 20 1\n1 21 1\n1 22 1\n1 23 1\n1 24 1\n1 25 1\n1 26 1\n1 27 1\n1 28 1\n1 29 1\n1 30 1\n1 31 1\n1 32 1\n1 33 1\n1 34 1\n1 35 1\n1 36 1\n1 37 1\n1 38 1\n1 39 1\n1 40 1\n1 41 1\n1 42 1\n1 43 1\n1 44 1\n1 45 1\n1 46 1\n1 47 1\n1 48 1\n1 49 1\n1 50 1\n1 51 1\n1 52 1\n1 53 1\n1 54 1\n1 55 1\n1 56 1\n1 57 1\n1 58 1\n1 59 1\n1 60 1\n1 61 1\n1 62 1\n1 63 1\n1 64 1\n1 65 1\n1 66 1\n1 67 1\n1 68 1\n1 69 1\n1 70 1\n1 71 1\n1 72 1\n1 73 1\n1 74 1\n1 75 1\n1 76 1\n1 77 1\n1 78 1\n1 79 1\n1 80 1\n1 81 1\n1 82 1\n1 83 1\n1 84 1\n1 85 1\n1 86 1\n1 87 1\n1 88 1\n1 89 1\n1 90 1\n1 91 1\n1 92 1\n1 93 1\n1 94 1\n1 95 1\n1 96 1\n1 97 1\n1 98 1\n1 99 1\n1 100 1\n1 101 1\n1 102 1\n1 103 1\n1 104 1\n1 105 1\n1 106 1\n1 107 1\n1 108 1\n1 109 1\n1 110 1\n1 111 1\n1 112 1\n1 113 1\n1 114 1\n1 115 1\n1 116 1\n1 117 1\n1 118 1\n1 119 1\n1 120 1\n1 121 1\n1 122 1\n1 123 1\n1 124 1\n1 125 1\n1 126 1\n1 127 1\n1 128 1\n1 129 1\n1 130 1\n1 131 1\n1 132 1\n1 133 1\n1 134 1\n1 135 1\n1 136 1\n1 137 1\n1 138 1\n1 139 1\n1 140 1\n1 141 1\n1 142 1\n1 143 1\n1 144 1\n1 145 1\n1 146 1\n1 147 1\n1 148 1\n1 149 1\n1 150 1\n1 151 1\n1 152 1\n1 153 1\n1 154 1\n1 155 1\n1 156 1\n1 157 1\n1 158 1\n1 159 1\n1 160 1\n1 161 1\n1 162 1\n1 163 1\n1 164 1\n1 165 1\n1 166 1\n1 167 1\n1 168 1\n1 169 1\n1 170 1\n1 171 1\n1 172 1\n1 173 1\n1 174 1\n1 175 1\n1 176 1\n1 177 1\n1 178 1\n1 179 1\n1 180 1\n1 181 1\n1 182 1\n1 183 1\n1 184 1\n1 185 1\n1 186 1\n1 187 1\n1 188 1\n1 189 1\n1 190 1\n1 191 1\n1 192 1\n1 193 1\n1 194 1\n1 195 1\n1 196 1\n1 197 1\n1 198 1\n1 199 1\n1 200 1\n1 201 1\n1 202 1\n1 203 1\n1 204 1\n1 205 1\n1 206 1\n1 207 1\n1 208 1\n1 209 1\n1 210 1\n1 211 1\n1 212 1\n1 213 1\n1 214 1\n1 215 1\n1 216 1\n1 217 1\n1 218 1\n1 219 1\n1 220 1\n1 221 1\n1 222 1\n1 223 1\n1 224 1\n1 225 1\n1 226 1\n1 227 1\n1 228 1\n1 229 1\n1 230 1\n1 231 1\n1 232 1\n1 233 1\n1 234 1\n1 235 1\n1 236 1\n1 237 1\n1 238 1\n1 239 1\n1 240 1\n1 241 1\n1 242 1\n1 243 1\n1 244 1\n1 245 1\n1 246 1\n1 247 1\n1 248 1\n1 249 1\n1 250 1\n1 251 1\n1 252 1\n1 253 1\n1 254 1\n1 255 1\n1 256 1\n1 257 1\n1 258 1\n1 259 1\n1 260 1\n1 261 1\n1 262 1\n1 263 1\n1 264 1\n1 265 1\n1 266 1\n1 267 1\n1 268 1\n1 269 1\n1 270 1\n1 271 1\n1 272 1\n1 273 1\n1 274 1\n1 275 1\n1 276 1\n1 277 1\n1 278"
    },
    {
        "number": 3127,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 6\\n1 2 2\\n2 3 2\\n3 5 2\\n1 4 3\\n4 5 3\\n1 5 6') == '0\\n4 6'\nassert solution('5 6\\n1 2 2\\n2 3 2\\n3 5 2\\n1 4 3\\n4 5 3\\n1 5 6') == '2\\n4 6'\nassert solution('7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1') == '0\\n4 6\\n8 9'\nassert solution('5 4\\n1 2 1\\n2 3 2\\n3 4 1\\n4 5 2\\n1 5 1') == '2'\nassert solution('10 10\\n1 2 1\\n2 3 2\\n3 4 1\\n4 5 2\\n5 6 1\\n6 7 2\\n7 8 1\\n8 9 2\\n9 10 1') == '0'\n"
    },
    {
        "number": 3127,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1') == '2\\n4 6\\n'"
    },
    {
        "number": 3127,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n8 7\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1\n\"\"\"\n) == '4'\nassert solution(\n    \"\"\"\n5 6\n1 2 2\n2 3 2\n3 5 2\n1 4 3\n4 5 3\n1 5 6\n\"\"\"\n) == '0'\n\nassert solution(\n    \"\"\"\n4 4\n1 2 3\n2 3 4\n2 4 3\n2 3 4\n3 4 1\n\"\"\"\n) == '2'\nassert solution(\n    \"\"\"\n3 3\n1 2 1\n2 3 1\n3 1 1\n\"\"\"\n) == '0'\nassert solution(\n    \"\"\"\n2 2\n1 2 1\n2 3 1\n\"\"\"\n) == '0'\n"
    },
    {
        "number": 3127,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 6\n1 2 2\n2 3 2\n3 5 2\n1 4 3\n4 5 3\n1 5 6''') == '0\\n4 6'\n\nassert solution('''5 7\n1 2 2\n2 3 2\n3 5 2\n1 4 3\n4 5 3\n1 5 6\n5 4 2\n1 4 5\n4 5 3\n1 5 6''') == '0\\n4 6'\n"
    },
    {
        "number": 3127,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == \"2\\n4 6\"\nassert solution(\"3 5 3\\n2 1 1\\n3 1 3\\n2 1 2\\n1 4 1\\n1 5 3\\n4 6 4\\n2 4 4\\n1 5 3\\n4 6 3\\n2 5 2\\n1 5 2\\n4 6 4\\n1 6 2\\n2 7 3\\n2 1 2\\n3 1 1\\n1 4 2\\n1 5 4\\n1 2 4\\n3 4 5\\n1 3 2\\n1 5 4\\n1 5 3\\n1 4 1\\n1 1 1\\n3 1 2\\n1 2 1\\n4 1 3\\n2 2 2\\n1 3 3\\n1 4 4\\n2 6 4\\n2 7 5\\n3 5 6\\n1 5 1\\n2 7 2\\n4 6 3\\n1 4 2\\n1 5 2\\n1 1 1\\n3 1 2\\n2 2 1\\n1 1 2\\n1 3 4\\n3 4 5\\n2 5 6\\n1 1 2\\n2 1 4\\n1 1 5\\n1 2 4\\n1 2 3\\n1 1 1\\n4 1 2\\n2 1 5\\n1 1 2\\n3 1 4\\n2 6 5\\n1 2 2\\n1 2 3\\n2 1 2\\n1 4 1\\n1 5 2\\n1 1 2\\n3 1 2\\n1 2 1\\n1 3 2\\n1 2 1\\n1 2 2\\n1 4 1\\n1 5 2\\n1 1 2\\n1 1 1\\n1 1 1\\n1 1 1\\n1 2 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n"
    },
    {
        "number": 3127,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1\"\"\"\n) == \"\"\"2\n4 6\"\"\"\nassert solution(\n\"\"\"3 4\n1 2 1\n2 3 1\n1 3 1\"\"\"\n) == \"\"\nassert solution(\n\"\"\"3 4\n1 1 1\n1 2 1\n1 3 1\"\"\"\n) == \"\"\nassert solution(\n\"\"\"10 10\n1 2 1\n2 3 1\n1 3 1\n2 3 1\n1 3 1\n2 3 1\n1 3 1\n2 3 1\n1 3 1\n2 3 1\"\"\"\n) == \"\"\nassert solution(\n\"\"\"10 10\n1 2 1\n1 2 1\n1 3 1\n2 3 1\n1 3 1\n2 3 1\n1 3 1\n2 3 1\n1 3 1\n2 3 1\"\"\"\n) == \"\"\n"
    },
    {
        "number": 3128,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"a\"\nassert solution(\"a\") == \"a\"\nassert solution(\"b\") == \"b\"\nassert solution(\"aba\") == \"b\"\n"
    },
    {
        "number": 3128,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1') == '4'\nassert solution('1 2') == '5'\nassert solution('1 3') == '6'\nassert solution('2 1') == '1'\nassert solution('2 2') == '2'\n"
    },
    {
        "number": 3128,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1 1') == '1'\nassert solution('2\\n1 1') == '2'\nassert solution('3\\n1 1') == '3'\nassert solution('4\\n1 1') == '4'\nassert solution('5\\n1 1') == '5'\n"
    },
    {
        "number": 3128,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 1') == '2'\nassert solution('1 2 3') == '2'\nassert solution('1 2 3 4') == '2'\nassert solution('1 2 3 4 5 6') == '2'\n"
    },
    {
        "number": 3128,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(open(\"test_file.txt\").read()) == \"1\\n2\\n3\""
    },
    {
        "number": 3128,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\nprint('test success')"
    },
    {
        "number": 3128,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\\n1\\n2\\n2\\n2\\n3\\n3\\n3\\n4\\n4\\n4\\n5\\n5\\n5\\n6\\n6\\n6\\n7\\n7\\n7\\n8\\n8\\n8\\n9\\n9\\n9\\n10\\n10\\n10\\n11\\n11\\n11\\n12\") == \"4\\n5\\n6\\n1\\n2\\n3\"\nassert solution(\"2\\n1\\n1\\n2\\n2\\n2\\n3\\n3\\n3\\n4\\n4\\n4\\n5\\n5\\n5\\n6\\n6\\n6\\n7\\n7\\n7\\n8\\n8\\n8\\n9\\n9\\n9\\n10\\n10\\n10\\n11\\n11\\n11\\n12\\n12\\n12\") == \"1\\n2\\n3\"\nassert solution(\"3\\n1\\n1\\n2\\n2\\n2\\n3\\n3\\n3\\n4\\n4\\n4\\n5\\n5\\n5\\n6\\n6\\n6\\n7\\n7\\n7\\n8\\n8\\n8\\n9\\n9\\n9\\n10\\n10\\n10\\n11\\n11\\n11\\n12\\n12\\n12\") == \"4\\n5\\n6\"\nassert solution(\"5\\n1\\n1\\n2\\n2\\n2\\n3\\n3\\n3\\n4\\n4\\n4\\n5\\n5\\n5\\n6\\n6\\n6\\n7\\n7\\n7\\n8\\n8\\n8\\n9\\n9\\n9\\n10\\n10\\n10\\n11\\n11\\n11\\n12\\n12\\n12\\n13\\n13\\n13\\n14\\n14\\n14\\n15\\n15\\n15\\n16\\n16\\n16\\n17\\n17\\n17\\n18\\n18\\n18\\n19\\n19\\n19\\n20\\n20\\n20\\n21\\n21\\n21\\n22\\n22\\n22\\n23\\n23\\n23\\n24\\n24\\n24\\n25\\n25\\n25\\n26\\n26\\n26\\n27\\n27\\n27\\n28\\n28\\n28\\n29\\n29\\n29\\n30\\n30\\n30\\n31\\n31\\n31\\n32\\n32\\n32\\n33\\n33\\n33\\n34\\n34\\n34\\n35\\n35\\n35\\n36\\n36\\n36\\n37\\n37\\n37\\n38\\n38\\n38\\n39\\n39\\n39\\n40\\n40\\n40\\n41\\n41\\n41\\n42\\n42\\n42\\n43\\n43\\n43\\n44\\n44\\n44\\n45\\n45\\n45\\n46\\n46\\n46\\n47\\n47\\n47\\n48\\n48\\n48\\n49\\n49\\n49\\n50\\n50\\n50\\n51\\n51\\n51\\n52\\n52\\n52\\n53\\n53\\n53\\n54\\n54\\n54\\n55\\n55\\n55\\n56\\n56\\n56\\n57\\n57\\n57\\n58\\n58\\n58\\n59\\n59\\n59\\n60\\n60\\n60\\n61\\n61\\n61\\n62\\n62\\n62\\n63\\n63\\n63\\n64\\n64\\n64\\n65\\n65\\n65\\n66\\n66\\n66\\n67\\n67\\n67\\n68\\n68\\n68\\n69\\n69\\n69\\n70\\n70\\n70\\n71\\n71\\n71\\n72\\n72\\n72\\n73\\n73\\n73\\n74\\n74\\n74\\n75\\n75\\n75\\n76\\n76\\n76\\n77\\n77\\n77\\n78\\n78\\n78\\n79\\n79\\n79\\n80\\n80\\n80\\n81\\n81\\n81\\n82\\n82\\n82\\n83\\n83\\n83\\n84\\n84\\n84\\n85\\n85\\n85\\n86\\n86\\n86\\n87\\n87\\n87\\n88\\n88\\n88\\n89\\n89\\n89\\n90\\n90\\n90\\n91\\n91\\n91\\n92\\n92\\n92\\n93\\n93\\n93\\n94\\n94\\n94\\n95\\n95\\n95\\n96\\n96\\n96\\n97\\n97\\n97\\n98\\n98\\n98\\n99\\n99\\n99\\n100\\n100\\n100\") == \"1\\n2\\n3\\n4\\n5\\n6\"\n\nprint(solution(stdin))"
    },
    {
        "number": 3128,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\\\n12\n1 1\n1 2\n1 3\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n\"\"\") == \"\"\"\\\n4\n5\n6\n1\n2\n3\n\"\"\"\nassert solution(\"\"\"\\\n6\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n\"\"\") == \"\"\"\\\n1\n2\n3\n1\n2\n3\n\"\"\"\nassert solution(\"\"\"\\\n4\n1 1\n1 2\n1 3\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n\"\"\") == \"\"\"\\\n4\n5\n6\n1\n2\n3\n\"\"\"\nassert solution(\"\"\"\\\n12\n1 1\n1 2\n1 3\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n\"\"\") == \"\"\"\\\n4\n5\n6\n1\n2\n3\n\"\"\"\nassert solution(\"\"\"\\\n12\n1 1\n1 2\n1 3\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n\"\"\") == \"\"\"\\\n4\n5\n6\n1\n2\n3\n\"\"\"\n"
    },
    {
        "number": 3128,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 3128,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3129,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('CPCC') == '1'\nassert solution('PPPPCCCC') == '8'\nprint(\"Assertions passed!\")\n"
    },
    {
        "number": 3129,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('CPCC') == '1'\nassert solution('PPPPCCCC') == '8'\nassert solution
    },
    {
        "number": 3129,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"CPCC\") == 1\nassert solution(\"PPPPCCCC\") == 8\n"
    },
    {
        "number": 3129,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\"\n\"\"\"\n"
    },
    {
        "number": 3129,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"CPCC\") == 1\nassert solution(\"PPPPCCCC\") == 8\nassert solution(\"C\") == 0\nassert solution(\"PP\") == 1\nassert solution(\"CCCCCCCC\") == 0\n"
    },
    {
        "number": 3129,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nimport sys\nassert (len(sys.argv) > 1) == True, \"Please input a sequence of hay bales\"\ninput_sequence = sys.argv[1]\n\nmax_len = len(input_sequence)\npermutations = [[] for _ in range(max_len)]"
    },
    {
        "number": 3129,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\"\n\n\"\"\"\n"
    },
    {
        "number": 3129,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\"\nassert solution(\"CP\") == \"1\"\nassert solution(\"PP\") == \"1\"\nassert solution(\"PPPP\") == \"2\"\n"
    },
    {
        "number": 3129,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\"\nassert solution(\"CPCPCPCPC\") == \"17\"\nassert solution(\"CPPCPCPCPC\") == \"21\"\nassert solutionn"
    },
    {
        "number": 3129,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\""
    },
    {
        "number": 3130,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2 1\n1 2\n2 3\n2''') == '1 2 3'\nassert solution('''3 2 1\n1 3\n2 3\n3\n''') == '3'\nassert solution('''3 2 1\n1 3\n2 3\n3\n1\n2\n3\n''') == '3'\nassert solution('''3 2 1\n1 3\n2 3\n3\n1\n2\n3\n''') == '3'\nassert solution('''3 2 1\n1 3\n2 3\n3\n1\n2\n3\n''') == '3'\n"
    },
    {
        "number": 3130,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n3 2 1\n1 2\n2 3\n2\n''') == '1 2 3'\n\nassert solution(\n'''\n3 2 1\n1 2\n2 3\n3\n''') == '3'\n\nassert solution(\n'''\n3 2 1\n1 3\n2 3\n3\n''') == '3'\n\nassert solution(\n'''\n3 2 1\n1 3\n2 3\n1\n''') == '1 3'\n\nassert solution(\n'''\n3 2 1\n1 2\n2 3\n3\n''') == '1 2 3'"
    },
    {
        "number": 3130,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3\\n2 3 4\\n3 4 1') == '3'\nassert solution('2 3 1\\n3 4 2\\n4 1 3\\n1 3 4') == '3'\nassert solution('1 2\\n2 3\\n3 4\\n4 1') == '1 2 3 4'\nassert solution('2 3\\n3 4\\n4 1\\n1 3\\n3 4') == '3'\nassert solution('2 3\\n3 4\\n4 1\\n1 2\\n2 3\\n3 4') == '1 2 3 4'\n"
    },
    {
        "number": 3130,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 2 1\") == \"1 2 3\"\nassert solution(\"3 2 1\\n1 2\\n2 3\\n2\") == \"1 2 3\"\nassert solution(\"3 2 1\\n1 3\\n2 3\\n3\") == \"3\"\nassert solution(\"3 2 1\\n1 3\\n2 3\\n3\\n3\") == \"3\"\nassert solution(\"3 2 1\\n1 3\\n2 3\\n3\\n3\\n3\") == \"3\"\n"
    },
    {
        "number": 3130,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3\") == \"1 2 3\"\nassert solution(\"1 3\") == \"1 3\"\nassert solution(\"1 2 3 4\") == \"1 2 3 4\"\nassert solution(\"1 2 3 4\") == \"1 2 3 4\"\n"
    },
    {
        "number": 3130,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n2\\n') == '2'\nassert solution('1\\n2\\n2\\n') == '2'\nassert solution('1\\n3\\n3\\n') == '3'\nassert solution('1\\n3\\n3\\n') == '3'\nassert solution('1\\n3\\n3\\n') == '3'\n"
    },
    {
        "number": 3130,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 2 1\n1 2\n2 3\n2\n''') == '1 2 3'\nassert solution('''3 2 1\n1 3\n2 3\n3\n''') == '3'\nassert solution('''3 2 1\n1 2\n2 3\n3\n''') == '3'\nassert solution('''3 2 1\n1 2\n2 3\n1\n''') == '1 2'\nassert solution('''3 2 1\n1 3\n2 3\n3\n''') == '3'\n"
    },
    {
        "number": 3130,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input) == str(solution(input))\n\n-----Write your code here------"
    },
    {
        "number": 3130,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\\n1 2\\n2 3\") == \"3\"\nassert solution(\"1 2 3\\n1 2\\n2 3\\n2\\n3\") == \"3\"\nassert solution(\"3 2 1\\n1 2\\n2 3\\n2\\n3\") == \"3\"\nassert solution(\"3 2 1\\n1 3\\n2 3\\n2\\n3\") == \"3\"\nassert solution(\"1 2 3\\n1 2\\n2 3\\n2\\n3\") == \"3\"\n"
    },
    {
        "number": 3130,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 2 1''') == '1 2 3'\nassert solution('''3 2 1''') == '1 2 3'\nassert solution('''3 2 1''') == '3'\nassert solution('''3 2 1''') == '3'\nassert solution('''3 2 1''') == '3'\n"
    },
    {
        "number": 3131,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3\n2 4 2 3 4''') == '39'\nassert solution('''5 1\n1 0 1 1 1''') == '4'\n"
    },
    {
        "number": 3131,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 5\\n1 0 1 1 1\\n') == '39'\n\nassert solution('3 3\\n2 4 2 3\\n') == '30'\n\nassert solution('5 1\\n1 0 1 1 1\\n') == '4'\n"
    },
    {
        "number": 3131,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3131,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('1 2') == '3'\nassert solution('1 1 2') == '2'\nassert solution('3 2 1') == '1'\n"
    },
    {
        "number": 3131,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '4'\nassert solution('2\\n2') == '10'\nassert solution('2\\n3') == '6'\nassert solution('2\\n4') == '14'\n"
    },
    {
        "number": 3131,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3131,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 3\\\\n2 4 2 3 4\\\\n') == '39'\nassert solution('5 1\\\\n1 0 1 1 1\\\\n') == '4'\n"
    },
    {
        "number": 3131,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1') == '4'\nassert solution('1 1\\n1 1') == '4'"
    },
    {
        "number": 3131,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6 3\\n2 4 2 3 4') == '39'\n"
    },
    {
        "number": 3131,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 3\n2 4 2 3 4''') == '39'\nassert solution('''5 1\n1 0 1 1 1''') == '4'\nassert solution('''7 2\n1 1 1 1 1 1 1''') == '89'\nassert solution('''7 3\n1 1 1 1 1 1 1''') == '466'\nassert solution('''7 5\n1 1 1 1 1 1 1''') == '164'\n"
    },
    {
        "number": 3132,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected(stdin)\nprint(f\"Passed! ({tst1-time.time()} < {tst2-time.time()})\")\n"
    },
    {
        "number": 3132,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 3\\nxx\\nxxx\\n...\\n') == '1 1 2\\n2 3 1\\n'\nassert solution('3 4\\nx.x\\n.xx\\nx..\\n') == '1 1 2\\n2 4 3\\n'\nassert solution('2 4\\nx.\\nx.\\nx..\\n') == '1 1 2\\n1 1 1\\n'\nassert solution('1 1\\nx.\\nx.\\nx..\\n') == '1 1 2\\n1 1 1\\n'\nassert solution('2 1\\nx.\\nx.\\nx..\\n') == '1 1 2\\n1 1 1\\n'\n"
    },
    {
        "number": 3132,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 3\\nxx.\\nxxx\\n...') == '1 1 2\\n2 3 1'\nassert solution('3 4\\nxx....\\nxx.xxx\\n...xxx\\n...xxx') == '1 1 2\\n2 4 3\\n3 5 4'\nassert solution('5 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx\\n...xxx') == '1 1 2\\n2 4 3\\n3 5 4\\n4 6 1'\n\"\"\"\n"
    },
    {
        "number": 3132,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 4\nxxx....\nxx.xxx\n...xxx\n...xxx''') == '1 1 2\\n2 4 3'\nassert solution('''4 5\nx...\nxx..\n...x\n...x''') == '1 1 2\\n3 2 1'\nassert solution('''3 3\n...\n...\n...\n''') == '1 1 2'\n'''\n\n'''\n"
    },
    {
        "number": 3132,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output\nprint(solution(stdin))\n\"\"\"\nfrom sys import stdin\nfrom typing import NamedTuple\n\n\nclass Building(NamedTuple):\n    row: int\n    column: int\n    length: int\n"
    },
    {
        "number": 3132,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"3 3\nxx.\nxxx\n...\n\"\"\") == \"\"\"1 1 2\n2 3 1\"\"\"\n\nassert solution(\"\"\"4 6\nxx....\nxx.xxx\n...xxx\n...xxx\n\"\"\") == \"\"\"1 1 2\n2 4 3\n\"\"\"\n\nassert solution(\"\"\"3 3\n..xx\nxx.x\nxx.x\n\"\"\") == \"\"\"1 1 2\n2 3 1\"\"\"\n\nassert solution(\"\"\"6 6\nxxxxx\nx.x.\nx.x.\nx.x.\nx.x.\nx.x.\n\"\"\") == \"\"\"1 1 2\n2 4 3\n\"\"\"\n\nassert solution(\"\"\"5 6\nxxxxxxxx\n.x.x.\nxx..xx\nx.x.x\nx.x.x\nx.x.x\n\"\"\") == \"\"\"1 1 2\n2 4 3\n\"\"\""
    },
    {
        "number": 3132,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 3\") == \"\"\nassert solution(\"2 2\") == \"\"\nassert solution(\"3 3\") == \"\"\nassert solution(\"1 1\") == \"\"\n"
    },
    {
        "number": 3132,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 3\\nxx.\\nxxx\\n...\\n') == '1 1 2\\n2 3 1\\n'\nassert solution('2 4\\nxx....\\nxx.xxx\\n...xxx\\n...xxx\\n') == '1 1 2\\n2 4 3\\n'\n"
    },
    {
        "number": 3132,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    stdin='3 3\\nxx.\\nxxx\\n...') == \"1 1 2\\n2 3 1\"\nassert solution(\n    stdin='4 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx') == \"1 1 2\\n2 4 3\"\nassert solution(\n    stdin='2 3\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx."
    },
    {
        "number": 3132,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_result\n"
    },
    {
        "number": 3133,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == answer\n\"\"\""
    },
    {
        "number": 3133,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n'''\n"
    },
    {
        "number": 3133,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == answer()\n"
    },
    {
        "number": 3133,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 1 2\n1 2 1\n0 2 0\n0 1 0''') == '0'\nassert solution('''3 1 3\n0 1 1\n0 2 1\n0 3 1''') == 'indistinguishable'\nassert solution('''3 1 3\n0 1 2\n1 1 1\n0 0 0\n''') == '0'\nassert solution('''4 1 2\n0 1 2\n0 1 3\n0 1 4\n1 1 1\n1 1 2\n0 2 0\n1 2 0\n0 3 1\n1 3 1\n''') == 'indistinguishable'\nassert solution('''3 2 1\n0 2 1\n0 3 1\n1 2 1\n0 1 3\n1 2 3\n1 1 1\n0 2 1\n1 3 1\n''') == '1'\n"
    },
    {
        "number": 3133,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 1 2\\n1 2 1\\n0 2 0\\n0 1 0\") == \"0\"\nassert solution(\"2 0 1\\n1 1 1\\n0 0 0\") == \"indistinguishable\"\n\"\"\"\n"
    },
    {
        "number": 3133,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n0\\n0\\n') == '0'\nassert solution('3\\n1 2 1\\n0 2 0\\n0 1 0') == 'indistinguishable'\nassert solution('3\\n1 2 1\\n2 2 1\\n1 2 0') == '2'\nassert solution('4\\n1 2 3 4\\n1 1 1 1\\n0 0 0 0\\n0 0 0 0') == 'indistinguishable'\nassert solution('4\\n1 2 3 4\\n1 1 1 1\\n0 0 0 0\\n2 1 0 0') == '2'\n"
    },
    {
        "number": 3133,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1\\n0 0 0\\n0 1 0\") == \"0\"\nassert solution(\"1 1 1\\n1 1 1\\n0 0 0\\n0 1 0\") == \"indistinguishable\"\nassert solution(\"3 1 2\\n1 2 1\\n0 2 0\\n0 1 0\") == \"0\"\nassert solution(\"2 0 1\\n1 1 1\\n0 0 0\\n0 1 0\") == \"0\"\nassert solution(\"3 1 2\\n1 3 1\\n0 2 0\\n0 1 0\") == \"1\"\n"
    },
    {
        "number": 3133,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 1 2') == '0'\nassert solution('1 2 1') == 'indistinguishable'\nassert solution('0 2 0') == 'indistinguishable'\nassert solution('0 1 0') == '0'\nassert solution('0 0 0') == 'indistinguishable'\n"
    },
    {
        "number": 3133,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1 1') == '0'\nassert solution('0 1 1') == '1'\nassert solution('1 0 1') == 'indistinguishable'\nassert solution('0 0 1') == '0'\nassert solution('1 0 1') == '1'\n"
    },
    {
        "number": 3133,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\nassert solution('\\n'.join([\n    '3 1 2',\n    '1 2 1',\n    '0 2 0',\n    '0 1 0',\n])) == '0\\n'\nassert solution('\\n'.join([\n    '3 1 2',\n    '1 2 1',\n    '0 2 0',\n    '0 1 0',\n])) == 'indistinguishable'\nassert solution('\\n'.join([\n    '3 4 3',\n    '1 1 0',\n    '0 3 1',\n    '0 2 2',\n])) == '1\\n'\nassert solution('\\n'.join([\n    '10 1 1',\n    '0 1 2',\n    '0 3 2',\n    '0 6 3',\n    '0 7 3',\n    '0 8 2',\n    '0 9 2',\n    '0 10 2',\n    '0 11 1',\n])) == '6\\n'\n"
    },
    {
        "number": 3134,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''0110\n1001'''\n    ) == '1111'\n\nassert solution(\n'''0\n1\n0110\n1001'''\n    ) == '-1'\n\nassert solution(\n'''1\n0\n1001\n0110'''\n    ) == '-1'\n\nassert solution(\n'''0\n1\n0110\n1101'''\n    ) == '1110'\n\nassert solution(\n'''0\n1\n1001\n1011'''\n    ) == '1010'"
    },
    {
        "number": 3134,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0110\") == \"1111\"\nassert solution(\"1001\") == \"0111\"\nassert solution(\"0\") == \"-1\"\nassert solution(\"1\") == \"-1\"\nprint(\"All tests passed successfully\")\n\n\"\"\""
    },
    {
        "number": 3134,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('101100') == '101111'\nassert solution('101') == '1111'\nassert solution('100') == '1110'\nassert solution('01') == '1111'\nassert solution('00') == '-1'\n"
    },
    {
        "number": 3134,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == '-1'\nassert solution('0000000000001101') == '10101010101010101'\nassert solution('0000000000010101') == '10101010101010101'\nassert solution('0000000100000001') == '10101010101010101'\nassert solution('00000001000000101') == '10101010101010101'\n"
    },
    {
        "number": 3134,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n0110\n1001\n''') == '1111\nassert solution(\n'''\n0\n1\n''') == '-1'\nassert solution(\n'''\n0001\n0001\n''') == '1'\nassert solution(\n'''\n1001\n1110\n''') == '1110'\nassert solution(\n'''\n1111\n1110\n''') == '1110'\n"
    },
    {
        "number": 3134,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"0110\n1001\"\"\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\n\"\"\"1\n1\"\"\") == \"-1\""
    },
    {
        "number": 3134,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0110\") == \"1111\"\nassert solution(\"1001\") == \"0111\"\nassert solution(\"0\") == \"-\"\nassert solution(\"1\") == \"-\""
    },
    {
        "number": 3134,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    '0110'\n    '1001') == '1111'\nassert solution(\n    '0'\n    '1') == '-1'\nassert solution(\n    '0011'\n    '0001') == '0111'\nassert solution(\n    '0001'\n    '1111') == '0111'\nassert solution(\n    '0111'\n    '0000') == '1110'\n"
    },
    {
        "number": 3134,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0110'\n'1001') == '1111'\nassert solution('0'\n'1') == '-1'\nassert solution('0110'\n'1001'\n'0100'\n'1010') == '1110'\nassert solution('0'\n'1'\n'0100'\n'1010'\n'0000') == '-1'\n\"\"\"\n"
    },
    {
        "number": 3134,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0110\\n1001\\n') == '1111\\n0111\\n1110\\n1111'\nassert solution('0\\n1\\n') == '-1'\nassert solution('0110\\n1001\\n') == '1111\\n0111\\n1110\\n1111'\nassert solution('0\\n1\\n') == '-1'\nassert solution('0110\\n1001\\n') == '1111\\n0111\\n1110\\n1111'\n"
    },
    {
        "number": 3135,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"10000\") == \"+0000\"\n\"\"\"\n"
    },
    {
        "number": 3135,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\"\nassert solution(\"1110\") == \"+000-0\"\nassert solution(\"1011\") == \"+001-+\"\nassert solution(\"0011\") == \"+001-++\"\n"
    },
    {
        "number": 3135,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected1\nassert solution(stdin) == expected2\nassert solution(stdin) == expected3\nassert solution(stdin) == expected4\nassert solution(stdin) == expected5\n"
    },
    {
        "number": 3135,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\", \"Please check your output\"\n\nprint(\"The testing is done, hit ENTER to continue\")\ninput()\n'''\n"
    },
    {
        "number": 3135,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10000') == '+0000'\nassert solution('1111') == '+000-'\nassert solution('110') == '-000'\nassert solution('111') == '+001-'\nassert solution('10101') == '-100'\n"
    },
    {
        "number": 3135,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\"\nassert solution(\"1\") == \"+000\"\nassert solution(\"2\") == \"+000\"\nassert solution(\"10\") == \"+000\"\n"
    },
    {
        "number": 3135,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1') == '+'\nassert solution('1000') == '+-11'\nassert solution('1000000') == '+-11-100'\nassert solution('10000001') == '+-111'\n"
    },
    {
        "number": 3135,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n1111\n''') == \"+000-\", \"Wrong answer!\"\n\nassert solution(\n'''\n10000\n''') == \"+0000\", \"Wrong answer!\"\n\nassert solution(\n'''\n10001\n''') == \"+0001\", \"Wrong answer!\"\n\nassert solution(\n'''\n110000\n''') == \"-00-\", \"Wrong answer!\"\n\nassert solution(\n'''\n110101\n''') == \"++-\", \"Wrong answer!\""
    },
    {
        "number": 3135,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10000') == '+0000'\nassert solution('1111') == '+000-', '+000- should be lexicographically smallest'\n"
    },
    {
        "number": 3135,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10000') == '+0000'\nassert solution('1111') == '+000-'\nassert solution('10010') == '+-110'\nassert solution('01111') == '+000+'\nassert solution('10000001') == '-1-0000001'\n"
    },
    {
        "number": 3136,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5''') == '9'\nassert solution('''4 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5''') == '2'\nassert solution('''2 1 1 1\n2 2\n1\n1\n1 2 1\n''') == '2'\n\nimport unittest\nclass TestConsecutivePairs(unittest.TestCase):\n    def test_solution(self):\n        self.assertEqual(solution('''4 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5'''), '9')\n        self.assertEqual(solution('''4 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5'''), '2')\n        self."
    },
    {
        "number": 3136,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3136,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7 8 3 2''') == '9'\nassert solution('''1 2''') == '2'\nassert solution('''7 3 4''') == '1'\nassert solution('''5 6''') == '1'\nassert solution('''1 3 2''') == '1'\n"
    },
    {
        "number": 3136,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"7 8 3 2\"\"\") == \"9\"\nassert solution(\"\"\"5 1\n5\n5\n5\n5\n5\n5\"\"\") == \"5\"\nassert solution(\"\"\"3 3 1 1\n1 2\n1 3\n1 2\n1 1\n1 2\n1 3\n1 3\n1 2\n1 2\n1 1\n1 1\n1 1\"\"\") == \"3\"\nassert solution(\"\"\"3 4 2 2\n2 1 4\n1 3\n1 4\n1 1 4\n1 4 1\n1 2 4\n1 4 4\n1 4 1\n1 1 4\n1 2 2\n1 2 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n1 1 4\n"
    },
    {
        "number": 3136,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '2'\n"
    },
    {
        "number": 3136,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''7 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5''') == '9'\n\nassert solution('''10 10 5 1\n2 4\n3 6\n3 8\n1 3 2\n4 5 1\n4 7 1\n5 9 1\n4 9 1\n4 8 1\n9 8 1\n4 5 1\n3 2\n1\n2\n2 1 1\n3 1 1\n4 1 1\n5 1 1\n6 1 1\n7 1 1\n8 1 1\n9 1 1''') == '10'\n\nassert solution('''2 1 1 1\n2 2\n1\n1\n1 2 1\n''') == '2'\n\nassert solution('''2 1 1 1\n2 2\n1\n1\n1 2 1\n''') == '2'\n\nassert solution('''2 1 1 1\n2 2\n1\n1\n1 2 1\n''') == '2'"
    },
    {
        "number": 3136,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5') == '9'\nassert solution('2 1 1 1\\n2 2\\n1\\n1\\n1 2 1\\n') == '2'\nprint(solution(open('/home/vutronghu/Desktop/Programming/Coursera/Algorithms/graphs/data_structures/data_structures/2/problems/4/input.txt').read()))\n"
    },
    {
        "number": 3136,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5 1 1 1\") == \"2\"\nassert solution(\"7 8 3 2\") == \"9\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 2 1\") == \"1\"\nassert solution(\"1 2 1 1\") == \"2\"\n"
    },
    {
        "number": 3136,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6 5 3 2') == '5'\nassert solution('6 5 3 2\\n1 2\\n1 3 4\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\\n') == '5'\nassert solution('5 7 3 2\\n1 2\\n2 3\\n1 3\\n1 4\\n1 5\\n1 6\\n2 6\\n2 7\\n3 7\\n') == '7'\nassert solution('3 5 3 2\\n1 2\\n1 3 4\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\\n') == '9'\nassert solution('5 7 3 2\\n1 2\\n2 3\\n1 3\\n1 4\\n1 5\\n1 6\\n2 6\\n2 7\\n3 7\\n') == '5'\n"
    },
    {
        "number": 3136,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 1 1 1\\n2 2\\n1\\n1\\n1 2 1\\n') == '2'\nassert solution('3 3 2 1\\n1 2\\n1 3 3\\n2 3\\n2 3 1\\n3 1\\n2 1 2\\n') == '3'\nassert solution('4 4 2 1\\n1 2\\n1 3 3\\n2 3\\n2 3 1\\n3 1\\n2 1 2\\n3 1\\n2 3 3\\n1 2\\n') == '2'\nassert solution('5 5 2 1\\n1 2\\n1 3 3\\n2 3\\n2 3 1\\n3 1\\n2 1 2\\n1 3 2\\n2 3\\n3 3 1\\n1 2\\n') == '4'\nassert solution('6 6 2 1\\n1 2\\n1 3 3\\n2 3\\n2 3 1\\n3 1\\n2 1 2\\n1 3 2\\n2 3\\n3 3 1\\n1 2\\n3 3\\n2 3\\n') == '5'\n"
    },
    {
        "number": 3137,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3 1\n2 2\n1 1 R\n010\n000\n000\n''') == \"2\"\nassert solution('''3 4 2\n2 2\n3 4 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301\n''') == \"7\"\nassert solution('''3 3 1\n2 2\n1 1 R\n010\n000\n000\n''') == \"-1\"\nassert solution('''3 3 1\n2 2\n1 1 R\n010\n000\n000\n''') == \"7\"\nassert solution('''3 4 2\n2 2\n3 4 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301\n''') == \"7\"\n"
    },
    {
        "number": 3137,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 3 1\n2 2\n1 1 R\n010\n000\n000\n''') == '2'\nassert solution('''3 4 2\n2 2\n3 4 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301\n''') == '7'\nassert solution('''10 10 10\n1 1 U\n9 9 R\n9 9 R\n8 8 R\n8 8 R\n8 8 R\n8 8 R\n8 8 R\n8 8 R\n8 8 R\n''') == '-1'\nassert solution('''10 10 10\n1 1 U\n9 9 R\n9 9 R\n8 8 R\n8 8 R\n8 8 R\n8 8 R\n8 8 R\n8 8 R\n8 8 R\n''') == '-1'\nassert solution('''3 3 1\n2 2\n1 1 R\n010\n000\n000\n''') == '2'\n"
    },
    {
        "number": 3137,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 4 2\\n2 2\\n1 1 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301') == '7'\nassert solution('3 5 5\\n1 2 R\\n2 1 U\\n3 2 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 U\\n1 3 R\\n2 3 R\\n1 2 R\\n2 1 D\\n1 3 R\\n2 3 R\\n1 2 R\\n"
    },
    {
        "number": 3137,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000\\n000') == '2'\nassert solution('3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\\n000') == '7'\nassert solution('3 5 1\\n1 1 R\\n000\\n000\\n000\\n000\\n000\\n000') == '-1'\nassert solution('3 3 2\\n1 1 R\\n000\\n000\\n000\\n000\\n000\\n000') == '-1'\nassert solution('5 5 3\\n4 4 U\\n3 3 R\\n2 2 D\\n1 1 R\\n010\\n000\\n000\\n000') == '6'\n"
    },
    {
        "number": 3137,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''3 4 2\n2 2\n3 4 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301''') == '7'\n\nassert solution(\n'''3 4 2\n2 2\n3 4 U\n2327\n6009\n2112\n3 2 U\n1310\n2101\n1301''') == '7'\n\nassert solution(\n'''3 4 2\n2 2\n3 4 L\n2327\n6009\n2112\n3 2 L\n1310\n2101\n1301''') == '7'\n\nassert solution(\n'''3 4 2\n2 2\n3 4 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301''') == '7'\n\nassert solution(\n'''3 4 2\n2 2\n3 4 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301''') == '7'"
    },
    {
        "number": 3137,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == '-1'\nassert solution('3 3 1') == '2'\nassert solution('3 4 2') == '7'\nassert solution('3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\\n') == '7'\nassert solution('3 4 2\\n2 2\\n3 4 U\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\\n') == '-1'\n"
    },
    {
        "number": 3137,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"3 3 1\"\n) == \"2\"\nassert solution(\n    \"3 4 2\"\n) == \"7\"\nassert solution(\n    \"2 2\"\n) == \"-1\"\nassert solution(\n    \"3 4 2\"\n) == \"7\"\nassert solution(\n    \"1 1 R\"\n) == \"-1\"\n"
    },
    {
        "number": 3137,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 4 2\n2 2\n3 4 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301''') == '7'\nassert solution('''4 4 3\n2 2\n3 4 R\n2478\n6349\n2122\n3 2 R\n1235\n2477\n1311''') == '-1'\nassert solution('''10 10 10\n6 6 U\n7 7 R\n8 8 D\n9 9 R\n10 10 R\n8 8 D\n7 7 R\n6 6 U\n5 5 R\n4 4 D\n3 3 R\n2 2\n1 1 R\n0 0 R\n1 1 R\n2 2\n3 3 R\n4 4 D\n5 5 D\n6 6 U\n7 7 R\n8 8 D\n9 9 R\n10 10 R''') == '10'\nprint(\"All tests passed successfully.\")\n\n\"\"\""
    },
    {
        "number": 3137,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000\\n') == '2'\nassert solution('3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\\n') == '7'\nassert solution('3 3 1\\n2 2\\n1 1 U\\n010\\n000\\n000\\n') == '-1'\nassert solution('3 4 2\\n2 2\\n3 4 U\\n2327\\n6009\\n2112\\n3 2 U\\n1310\\n2101\\n1301\\n') == '-1'\nassert solution('3 3 1\\n2 2\\n1 1 L\\n010\\n000\\n000\\n') == '-1'\n"
    },
    {
        "number": 3137,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 3 1') == 2\nassert solution('3 4 2') == 7\nassert solution('1 1 R') == -1\nassert solution('0 0') == -1\nassert solution('4 3 2') == -1\n"
    },
    {
        "number": 3138,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n"
    },
    {
        "number": 3138,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''5\n2 2 1 2 3'''\n) == '2'\nassert solution(\n'''8\n1 2 4 1 1 2 5 1'''\n) == '4'\nassert solution(\n'''1\n1'''\n) == '1'\nassert solution(\n'''2\n1 2'''\n) == '0'\nassert solution(\n'''8\n1 2 4 1 1 2 5 1'''\n) == '4'\n"
    },
    {
        "number": 3138,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3138,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\") == \"1\"\nassert solution(\"2\\n1\") == \"1\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\") == \"2\"\nassert solution(\"5\\n1 2 2 1 2 3\") == \"4\"\n"
    },
    {
        "number": 3138,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"4\"\n"
    },
    {
        "number": 3138,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n2 2 1 2 3\\n') == '2'\nassert solution('8\\n1 2 4 1 1 2 5 1\\n') == '4'\nassert solution('3\\n1 2 3\\n') == '0'\n"
    },
    {
        "number": 3138,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''5\n2 2 1 2 3\n''') == \"2\"\nassert solution(\n'''8\n1 2 4 1 1 2 5 1\n''') == \"4\"\n"
    },
    {
        "number": 3138,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n2 2 1 2 3') == '2'\nassert solution('8\\n1 2 4 1 1 2 5 1') == '4'\n\nprint(solution(stdin))\n"
    },
    {
        "number": 3138,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n2 2 1 2 3''') == '2'\nassert solution('''8\n1 2 4 1 1 2 5 1''') == '4'\nassert solution('''10\n2 3 4 1 1 2 3 5 1''') == '8'\n''')"
    },
    {
        "number": 3138,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin.split('\\n')[0]\nprint(\"Testcase 1 PASSED\")\n'''\n"
    },
    {
        "number": 3139,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\nD 3 1\nD 2 2\nD 1 3\nP 1\nP 2\nP 3''') == '''NE\nNE\nNE\n3\n1'''\nassert solution('''3\nD 8 8\nD 2 4\nD 5 6\nP 2\nD 6 2\nP 4''') == '''3\n1\nNE\n'''\nassert solution('''1\nP 1\n''') == '''1'''\nassert solution('''1\nP 1\nP 2''') == '''1'''\nassert solution('''1\nP 1\nP 2\nP 3''') == '''1'''\n"
    },
    {
        "number": 3139,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('D 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3') == 'NE'\nassert solution('D 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4') == '3'\nassert solution('D 5 7\\nD 1 3\\nP 1') == '3'\nassert solution('D 6 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4') == '1'\nassert solution('D 2 6\\nD 1 3\\nP 1') == '1'\n"
    },
    {
        "number": 3139,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''D 3 1\nD 2 2\nD 1 3\nP 1\nP 2\nP 3''') == 'NE NE NE'\nassert solution('''D 8 8\nD 2 4\nD 5 6\nP 2\nD 6 2\nP 4''') == '3 1'\nassert solution('''D 4\nD 1 1\nD 1 1\nD 2 2\nP 1\nP 2\nP 3\nP 4\nP 5\nP 6\nD 7 7\nP 7\nP 8\nP 9\nP 10''') == '1 1 2 2 3 4'\nassert solution('''D 4\nD 1 1\nD 1 1\nD 2 2\nP 1\nP 2\nP 3\nP 4\nP 5\nP 6\nD 7 7\nP 7\nP 8\nP 9\nP 10''') == '1 1 2 2 3 4'\nassert solution('''D 8\nD 2 4\nD 5 6\nP 2\nD 6 2\nP 4\nP 5\nP 6\nP 7\nP 8\nP 9\nP 10\nP 11\nP 12\nP 13\nP 14\nP 15\nP 16\nD 17 17\nP 17\nP 18\nP 19\nP 20\nP 21\nP 22\nP 23\nD 24 24\nP 24\nP 25\nP 26\nP 27\nP 28\nP 29\nP 30\nP 31\nP 32\nP 33\nP 34\nP 35\nP 36\nP 37\nP 38\nP 39\nP 40\nP 41\nP 42\nP 43\nP 44\nP 45\nP 46\nP 47\nP 48\nP 49\nP 50\nP 51\nP 52\nP 53\nP 54\nP 55\nP 56\nP 57\nP 58\nP 59\nP 60\nP 61\nP 62\nP 63\nP 64\nP 65\nP 66\nP 67\nP 68\nP 69\nP 70\nP 71\nP 72\nP 73\nP 74\nP 75\nP 76\nP 77\nP 78\nP 79\nP 80\nP 81\nP 82\nP 83\nP 84\nP 85\nP 86\nP 87\nP 88\nP 89\nP 90\nP 91\nP 92\nP 93\nP 94\nP 95\nP 96\nP 97\nP 98\nP 99\nP 100\nP 101\nP 102\nP 103\nP 104\nP 105\nP 106\nP 107\nP 108\nP 109\nP 110\nP 111\nP 112\nP 113\nP 114\nP 115\nP 116\nP 117\nP 118\nP 119\nP 120\nP 121\nP 122\nP 123\nP 124\nP 125\nP 126\nP 127\nP 128\nP 129\nP 130\nP 131\nP 132\nP 133\nP 134\nP 135\nP 136\nP 137\nP 138\nP 139\nP 140\nP 141\nP 142\nP 143\nP 144\nP 145\nP 146\nP 147\nP 148\nP 149\nP 150\nP 151\nP 152\nP 153\nP 154\nP 155\nP 156\nP 157\nP 158\nP 159\nP 160\nP 161\nP 162\nP 163\nP 164\nP 165\nP 166\nP 167\nP 168\nP 169\nP 170\nP 171\nP 172\nP 173\nP 174\nP 175\nP 176\nP 177\nP 178\nP 179\nP 180\nP 181\nP 182\nP 183\nP 184\nP 185\nP 186\nP 187\nP 188\nP 189\nP 190\nP 191\nP 192\nP 193\nP 194\nP 195\nP 196\nP 197\nP 198\nP 199\nP 200\nP 201\nP 202\nP 203\nP 204\nP 205\nP 206\nP 207\nP 208\nP 209\nP 210\nP 211\nP 212\nP 213\nP 214\nP 215\nP 216\nP 217\nP 218\nP 219\nP 220\nP 221\nP 222\nP 223\nP 224\nP 225\nP 226\nP 227\nP 228\nP 229\nP 230\nP 231\nP 232\nP 233\nP 234\nP 235\nP 236\nP 237\nP 238\nP 239\nP 240\nP 241\nP 242\nP 243\nP 244\nP 245\nP 246\nP 247\nP 248\nP 249\nP 250\nP 251\nP 252\nP 253\nP 254\nP 255\nP 256\nP 257\nP 258\nP 259\nP 260\nP 261\nP 262\nP 263\nP 264\nP 265\nP 266\nP 267\nP 268\nP 269\nP 270\nP 271\nP 272\nP 273\nP 274\nP 275\nP 276\nP 277\nP 278\nP 279\nP 280\nP 281\nP 282\nP 283\nP 284\nP 285\nP 286\nP 287\nP 288\nP 289\nP 290\nP 291\nP 292\nP 293\nP 294\nP 295\nP 296\nP 297\nP 298\nP 299\nP 300\nP 301\nP 302\nP 303\nP 304\nP 305\nP 306\nP 307\nP 308\nP 309\nP 310\nP 311\nP 312\nP 313\nP 314\nP 315\nP 316\nP 317\nP 318\nP 319\nP 320\nP 321\nP 322\nP 323\nP 324\nP 325\nP 326\nP 327\nP 328\nP 329\nP 330\nP 331\nP 332\nP 333\nP 334\nP 335\nP 336\nP 337\nP 338\nP 339\nP 340\nP 341\nP 342\nP 343\nP 344\nP 345\nP 346\nP 347\nP 348\nP 349\nP 350\nP 351\nP 352\nP 353\nP 354\nP 355\nP 356\nP 357\nP 358\nP 359\nP 360\nP 361\nP 362\nP 363\nP 364\nP 365\nP 366\nP 367\nP 368\nP 369\nP 370\nP 371\nP 372\nP 373\nP 374\nP 375\nP 376\nP 377\nP 378\nP 379\nP 380\nP 381\nP 382\nP 383\nP 384\nP 385\nP 386\nP 387\nP 388\nP 389\nP 390\nP 391\nP 392\nP 393\nP 394\nP 395\nP 396\nP 397\nP 398\nP 399\nP 400\nP 401\nP 402\nP 403\nP 404\nP 405\nP 406\n"
    },
    {
        "number": 3139,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('D 1 1\\nD 2 2\\nD 3 3\\nP 1\\nP 2\\nP 3') == '3\\n1\\n1\\n'\nassert solution('D 1 1\\nD 2 2\\nD 3 3\\nP 2\\nD 3 1\\nP 4\\n') == '3\\n1\\n2\\n'\nassert solution('D 5 3\\nD 2 3\\nD 3 2\\nP 1\\nP 2\\nP 3\\nP 4\\n') == '2\\n1\\n3\\n'\nassert solution('D 1 1\\nD 2 2\\nD 3 3\\nP 1\\nP 2\\nP 3\\nP 4\\nP 5\\nP 6\\n') == '3\\n1\\n2\\n1\\n'\nassert solution('D 1 1\\nD 2 2\\nD 3 3\\nP 1\\nP 2\\nP 3\\nP 4\\nP 5\\nP 6\\nP 7\\nP 8\\nP 9\\nP 10\\n') == '3\\n1\\n2\\n1\\n1\\n1\\n1\\n'\n"
    },
    {
        "number": 3139,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3139,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('D 2 4\\nD 1 3\\nP 1\\nP 2\\nP 3\\nD 1 1\\nP 4\\n') == '3'\nassert solution('D 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\\n') == '1'\n"
    },
    {
        "number": 3139,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"6\nD 3 1\nD 2 2\nD 1 3\nP 1\nP 2\nP 3\"\"\") == \"3\"\nassert solution(\n\"\"\"6\nD 8 8\nD 2 4\nD 5 6\nP 2\nD 6 2\nP 4\"\"\") == \"1\"\nassert solution(\n\"\"\"6\nD 8 8\nD 2 4\nD 5 6\nP 2\nD 6 2\nP 4\"\"\") == \"NE\"\nassert solution(\n\"\"\"6\nD 8 8\nD 2 4\nD 5 6\nP 2\nD 6 2\nP 4\"\"\") == \"3\"\nassert solution(\n\"\"\"6\nD 8 8\nD 2 4\nD 5 6\nP 2\nD 6 2\nP 4\"\"\") == \"1\"\n"
    },
    {
        "number": 3139,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"D 3 1\") == \"NE\"\nassert solution(\"D 2 2\") == \"NE\"\nassert solution(\"D 1 3\") == \"NE\"\nassert solution(\"P 1\") == \"NE\"\nassert solution(\"P 2\") == \"3\"\n"
    },
    {
        "number": 3139,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"\\nD 3 1\\nD 2 2\\nD 1 3\\nP 1\") == \"NE\"\nassert solution(\"\\nD 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\\n\") == \"3\"\nassert solution(\"\\nD 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\\nD 1 3\\nP 1\") == \"3\"\n"
    },
    {
        "number": 3139,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''D 3 1\nD 2 2\nD 1 3\nP 1\nP 2\nP 3''') == '3'\nassert solution('''D 8 8\nD 2 4\nD 5 6\nP 2\nD 6 2\nP 4''') == '1'\nassert solution('''D 5 5\nP 1\nP 3\nP 2\nP 1\nP 3''') == '3'\nassert solution('''D 3 1\nD 2 2\nD 1 3\nD 1 3\nD 1 3\nD 1 3\nD 1 3\nP 1\nP 2\nP 3''') == '1'\nassert solution('''D 5 5\nP 1\nP 3\nP 2\nP 1\nP 3\nP 1\nP 3\nP 2\nP 1\nP 3\nP 1\nP 3''') == '3'\n"
    },
    {
        "number": 3140,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3140,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(sample0) == \"5\"\nassert solution(sample1) == \"2\"\nassert solution(sample2) == \"6\"\nassert solution(sample3) == \"3\"\nassert solution(sample4) == \"4\"\n"
    },
    {
        "number": 3140,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''2 2 1 10\n0 0\n1 4\n3 2\n''') == \"2\"\nassert solution(\n'''2 3 5 6\n1 1\n1 1 6\n1 2 2\n''') == \"5\"\nassert solution(\n'''10 10 5 5\n9 9 5\n9 9 7\n9 9 5\n9 9 7\n9 9 6\n9 9 4\n9 9 3\n9 9 2\n9 9 1\n''') == \"9\"\nassert solution(\n'''1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1"
    },
    {
        "number": 3140,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3140,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 2 1 10\n0 0\n1 4\n3 2''') == '2'\nassert solution('''2 2 1 10\n0 0\n1 4\n3 2''') == '2'\nassert solution('''2 2 1 10\n0 0\n1 4\n3 2''') == '5'\nassert solution('''2 2 1 10\n0 0\n1 4\n1 2 2''') == '5'\nassert solution('''2 2 1 10\n0 0\n1 4\n1 2 2''') == '5'\n"
    },
    {
        "number": 3140,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3140,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 2 1 10\n0 0\n1 4\n3 2''') == '2'\nassert solution('''2 3 5 6\n1 1\n1 1 6\n1 2 2\n''') == '5'\nassert solution('''2 3 5 6\n1 1\n1 1 6\n1 2 2\n''') == '5'\nassert solution('''3 3 1 10\n0 0\n1 4\n2 3\n''') == '3'\nassert solution('''3 3 1 10\n0 0\n1 4\n2 3\n''') == '3'\n"
    },
    {
        "number": 3140,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0,0\\n1,1\\n1,0\\n1,1\\n1,1\\n1,0\\n1,1\\n1,1\\n1,0\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1,1\\n1"
    },
    {
        "number": 3140,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') is None\nassert solution('0 0') == '0'\nassert solution('2 2 1 10') == '2'\nassert solution('0 0') == '0'\nassert solution('1 4') == '1'\n"
    },
    {
        "number": 3140,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin.strip()\n\"\"\"\n\n\n\"\"\"\nMITx 6.009 Introduction to Computing using Python\nProblem 8\n25 Sep 2019\n\nOne way to become familiar with the idea of pipelines and pipelines and pipelines is to use the two-step approach: to write a program, write a series of steps that are executed one after the other, rather than writing a series of programs which write the output of one program as input to the next.\n\nThe steps are as follows:\n\nWrite a program to compute the first 100 Fibonacci numbers. The program should have a variable which contains the previous number (which is 1 for the first number), and another variable which contains the number that is to be computed.\n\nNext, write a function that returns the next number in the sequence by adding the previous number to the previous number.\n\nFinally, write a function that prints the first 100 Fibonacci numbers, starting from the number 1.\n\n-----Input-----\nThe input consists of:\n - one line with the integers $n$ and $m$ ($1 \\le n, m \\le 10^5$), the dimensions of the sequence, and the number of Fibonacci numbers to be printed.\n - one line with $n$ integers $f_{i}$ ($0 \\le i < n$), the first $n$ numbers of the sequence.\n\n-----Output-----\nPrint the first $m$ numbers of the sequence. Each number should be printed on a single line.\n\n-----Examples-----\nSample Input 1:\n10 10\n1 3 4 7 11 16 25 35 43\n\nSample Output 1:\n1\n3\n5\n8\n13\n21\n34\n55\n89\n144\n233\n377\n\nSample Input 2:\n5 5\n1 3 4 5\n\nSample Output 2:\n1\n3\n5\n8\n13\n\"\"\"\n\n\n\"\"\"\nMITx 6.009 Introduction to Computing using Python\nProblem 9\n25 Sep 2019\n\nGiven a matrix of dimension $n \\times m$, calculate the number of distinct rows.\n\n-----Input-----\nThe input consists of:\n - one line with the integers $n$ and $m$ ($1 \\le n, m \\le 10^5$), the dimensions of the matrix, and the number of rows.\n - one line with $n$ integers $a_{i, j}$ ($0 \\le i < n$ and $0 \\le j < m$), the elements of the $i$\u2019th row.\n\n-----Output-----\nOutput the number of distinct rows.\n\n-----Examples-----\nSample Input 1:\n3 3\n1 2 3\n2 1 4\n3 2 1\n\nSample Output 1:\n3\n\nSample Input 2:\n2 3\n1 2\n1 2\n\nSample Output 2:\n2\n\nSample Input 3:\n2 2\n1 2\n2 1\n\nSample Output 3:\n1\n\"\"\"\n\n\n\"\"\"\nMITx 6.009 Introduction to Computing using Python\nProblem 10\n25 Sep 2019\n\nThe Fibonacci numbers are the numbers in the following integer sequence:\n\n$F_0 = 0$\n$F_1 = 1$\n$F_2 = 1$\n$F_3 = 2$\n$F_4 = 3$\n$F_5 = 5$\n$F_6 = 8$\n$F_{n+1} = F_n + F_{n-1}$\n\nFor example, $F_3$ = 1 and $F_{4}$ = 5. What is the value of the 3rd Fibonacci number $F_3$?\n\n-----Input-----\nThe input consists of:\n - one line with the integers $n$ and $m$ ($1 \\le n, m \\le 10^5$), the dimensions of the matrix, and the number of Fibonacci numbers to be printed.\n - one line with $n$ integers $a_{i, j}$ ($0 \\le i < n$ and $0 \\le j < m$), the elements of the $i$\u2019th row.\n\n-----Output-----\nOutput the value of the $n$\u2019th Fibonacci number $F_n$.\n\n-----Examples-----\nSample Input 1:\n3 3\n1 2 3\n2 1 4\n3 2 1\n\nSample Output 1:\n3\n\nSample Input 2:\n2 3\n1 2\n1 2\n\nSample Output 2:\n2\n\nSample Input 3:\n1 1\n1 1\n\nSample Output 3:\n1\n\"\"\"\n\n\"\"\"\nMITx 6.009 Introduction to Computing using Python\nProblem 11\n25 Sep 2019\n\nThe cube, 41063625 (345^3), can be permuted to produce two other cubes: 56623104 (384^3) and 66430125 (405^3). In fact, 41063625 is the smallest cube which has exactly three permutations of its digits which are also cube.\n\nFind the smallest cube for which exactly five permutations of its digits are cube.\n\n-----Input-----\nThe input consists of:\n - one line with the integers $n$ and $m$ ($1 \\le n, m \\le 10^5$), the dimensions of the matrix, and the number of Fibonacci numbers to be printed.\n - one line with $n$ integers $a_{i, j}$ ($0 \\le i < n$ and $0 \\le j < m$), the elements of the $i$\u2019th row.\n\n-----Output-----\nPrint the value of the smallest cube for which exactly five permutations of its digits are cube. If there are more than one cube which is cube, output the value of the smallest cube.\n\n-----Examples-----\nSample Input 1:\n3 3\n1 2 3\n2 1 4\n3 2 1\n\nSample Output 1:\n6\n\nSample Input 2:\n2 3\n1 2\n1 2\n\nSample Output 2:\n4\n\nSample Input 3:\n1 1\n1 1\n\nSample Output 3:\n1\n\"\"\"\n\n\n\"\"\"\nMITx 6.009 Introduction to Computing using Python\nProblem 12\n25 Sep 2019\n\nA word w is a good word if there exists a string of letters 'w' in the string. We define good and bad words to be any word that is good or bad, respectively. Given a string S of lowercase letters and a list of good and bad words, print out the number of good words in S.\n\nA word is a good word if it can be formed by deleting some number of letters from the string S.\n\nFor example, \"apple\", \"ple\", and \"le\" are good words. For \"leawe\", we need to delete two letters which is not a word.\n\n-----Input-----\nThe input consists of:\n - one line with the integers $n$ and $m$ ($1 \\le n \\le 10^5$), the dimensions of the matrix, and the number"
    },
    {
        "number": 3141,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1.0 0.0 1.4\n-1.0 0.0 -1.4\n0.0 1.0 -0.2\n''') == '2.0000000000'\nassert solution('''5\n1.4 1.0 0.0\n-0.4 -1.0 0.0\n-0.1 -0.25 -0.5\n-1.2 0.0 0.9\n0.2 0.5 0.5\n''') == '2.0000000000'\nassert solution('''6\n1.6 0.0 0.0\n-0.2 0.0 0.0\n-0.5 0.0 0.0\n-1.4 0.0 0.0\n-0.6 0.0 0.0\n0.3 0.3 0.3\n''') == '2.0000000000'\nassert solution('''7\n-2.0 0.0 0.0\n0.0 2.0 0.0\n-0.5 0.5 0.0\n0.0 0.0 0.0\n-1.3 0.0 0.0\n-0.3 0.3 0.3\n-0.3 0.3 0.3\n''') == '2.0000000000'\nassert solution('''8\n-2.0 0.0 0.0\n0.0 2.0 0.0\n-0.5 0.5 0.0\n0.0 0.0 0.0\n-1.3 0.0 0.0\n-0.3 0.3 0.3\n-0.3 0.3 0.3\n-0.5 0.5 0.0\n''') == '2.0000000000'\n"
    },
    {
        "number": 3141,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1.0 0.0 1.4') == '2.0000000000'\nassert solution('2\\n1.0 0.0 -1.4\\n-1.0 0.0 -1.4') == '2.0000000000'\nassert solution('3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2') == '2.0000000000'\nassert solution('5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5') == '2.0000000000'\nassert solution('4\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n-1.2 0.0 0.9\\n0.2 0.5 0.5') == '2.0000000000'\n"
    },
    {
        "number": 3141,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\\n1.0 0.0 -0.2\\n0.0 0.5 0.5\") == \"2.0000000000\"\n\nassert solution(\"5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5\") == \"2.0000000000\"\n\nassert solution(\"7\\n0.0 0.0 0.0\\n-0.5 -0.5 0.0\\n-0.2 -0.2 0.5\\n0.0 0.5 0.5\\n0.5 0.5 0.5\\n0.2 0.2 0.5\\n0.5 0.0 0.5\") == \"3.0\"\n\nassert solution(\"13\\n1.0 0.0 1.0\\n0.0 -1.0 1.0\\n0.0 0.0 -1.0\\n0.0 1.0 -0.5\\n0.0 -1.0 0.5\\n0.5 0.5 0.5\\n0.5 0.0 0.5\\n-0.5 0.0 0.5\\n-0.5 0.0 -0.5\\n-0.5 0.5 -0.5\\n-0.5 -0.5 -0.5\") == \"2.0000000000\"\n\nassert solution(\"15\\n1.0 0.0 1.0\\n0.0 -1.0 1.0\\n0.0 0.0 -1.0\\n0.0 1.0 -0.5\\n0.0 -1.0 0.5\\n0.5 0.5 0.5\\n0.5 0.0 0.5\\n-0.5 0.0 0.5\\n-0.5 0.0 -0.5\\n-0.5 0.5 -0.5\\n-0.5 -0.5 -0.5\\n-0.5 -0.5 0.5\") == \"3.0\""
    },
    {
        "number": 3141,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n1.0 0.0 1.4\n-1.0 0.0 -1.4\n0.0 1.0 -0.2\n''') == '2.0000000000'\n'''\nassert solution('''5\n1.4 1.0 0.0\n-0.4 -1.0 0.0\n-0.1 -0.25 -0.5\n-1.2 0.0 0.9\n0.2 0.5 0.5\n''') == '2.0000000000'\n"
    },
    {
        "number": 3141,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n1.0 0.0 1.4\n-1.0 0.0 -1.4\n0.0 1.0 -0.2''') == '2.0000000000'\nassert solution('''5\n1.4 1.0 0.0\n-0.4 -1.0 0.0\n-0.1 -0.25 -0.5\n-1.2 0.0 0.9\n0.2 0.5 0.5''') == '2.0000000000'\n"
    },
    {
        "number": 3141,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 0 0\") == '2'\nassert solution(\"1 1 1\") == '1.0000000000000000'\nassert solution(\"0 0 0\") == '0'\nassert solution(\"-1 1 1\") == '-1.0000000000000000'\nassert solution(\"0 0 0\") == '0'\n"
    },
    {
        "number": 3141,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n1.0 0.0 1.4\n-1.0 0.0 -1.4\n0.0 1.0 -0.2\n''') == '2.0000000000'\nassert solution('''5\n1.4 1.0 0.0\n-0.4 -1.0 0.0\n-0.1 -0.25 -0.5\n-1.2 0.0 0.9\n0.2 0.5 0.5\n''') == '2.0000000000'\nassert solution('''10\n1.4 1.0 0.0\n-0.4 -1.0 0.0\n-0.1 -0.25 -0.5\n-1.2 0.0 0.9\n0.2 0.5 0.5\n-0.2 0.5 0.5\n-0.1 -0.25 -0.5\n1.4 1.0 0.0\n-0.4 -1.0 0.0\n-0.1 -0.25 -0.5\n-1.2 0.0 0.9\n0.2 0.5 0.5\n''') == '3.3333333333'\nassert solution('''5\n-1.4 1.0 0.0\n-0.4 -1.0 0.0\n-0.1 -0.25 -0.5\n-1.2 0.0 0.9\n0.2 0.5 0.5\n''') == '0.0'\nassert solution('''5\n1.4 1.0 0.0\n-0.4 -1.0 0.0\n-0.1 -0.25 -0.5\n-1.2 0.0 0.9\n0.2 0.5 0.5\n''') == '0.0'\n"
    },
    {
        "number": 3141,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n1.0 0.0 1.4\n-1.0 0.0 -1.4\n0.0 1.0 -0.2''') == '2.0000000000'\nassert solution('''5\n1.4 1.0 0.0\n-0.4 -1.0 0.0\n-0.1 -0.25 -0.5\n-1.2 0.0 0.9\n0.2 0.5 0.5''') == '2.0000000000'\n'''\nfrom math import sqrt, floor\n"
    },
    {
        "number": 3141,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n1.0 0.0 1.4\n-1.0 0.0 -1.4\n0.0 1.0 -0.2\n''') == '2.0000000000'\nassert solution('''5\n1.4 1.0 0.0\n-0.4 -1.0 0.0\n-0.1 -0.25 -0.5\n-1.2 0.0 0.9\n0.2 0.5 0.5\n''') == '2.0000000000'\n'''\n"
    },
    {
        "number": 3141,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n3\n1.0 0.0 1.4\n-1.0 0.0 -1.4\n0.0 1.0 -0.2\n\"\"\") == \"2.0000000000\"\n"
    },
    {
        "number": 3142,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == '0'\nassert solution('0 0 0') == '0'\nassert solution('2 1 10') == '0'\nassert solution('99999 2 2') == '1'\nassert solution('99999 3 2') == '1'\n"
    },
    {
        "number": 3142,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 9 5''') == '1\\n5'\nassert solution('''1 100 10''') == '9\\n19'\nassert solution('''2 1 1''') == '0'\nassert solution('''2 1 10''') == '1'\nassert solution('''4 1 1''') == '9'\n"
    },
    {
        "number": 3142,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1 1 1') == ''\nassert solution('0 0 0') == ''\nassert solution('1 0 0') == ''\nassert solution('1 1 0') == ''\n"
    },
    {
        "number": 3142,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == output(input())\n"
    },
    {
        "number": 3142,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output(input())\n"
    },
    {
        "number": 3142,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 9 5''') == '1\\n5'\nassert solution('''1 100 10''') == '9\\n19'\nassert solution('''6 4 9''') == '2\\n2'\nassert solution('''123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789''') == '999999999\\n9999999999'\n\n---\nN O T E\n---"
    },
    {
        "number": 3142,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1 1 1') == ''\nassert solution('1 9 5') == '1'\nassert solution('1 100 10') == '9'\nassert solution('1 100 100') == '19'\n"
    },
    {
        "number": 3142,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 9 5') == '1\\n5'\nassert solution('1 100 10') == '9\\n19'\nprint('Testcases passed')\n"
    },
    {
        "number": 3142,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 9 5''') == '1\\n5'\nassert solution('''1 100 10''') == '9\\n19'\nassert solution('''1 1000 200''') == '4\\n108'\nassert solution('''1 100 200''') == '4\\n108'\nassert solution('''1 999 999''') == '0\\n0'\n'''\n"
    },
    {
        "number": 3142,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 9 5') == '1\\n5'\nassert solution('1 100 10') == '9\\n19'\nassert solution('1 100 10') == '9\\n19'\nassert solution('1 100 10') == '9\\n19'\nassert solution('1 100 10') == '9\\n19'\n"
    },
    {
        "number": 3143,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"1 1 1 1\") == \"\"\n"
    },
    {
        "number": 3143,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n1 1\n1\n1\n''') == '1'\n\nassert solution(\n'''\n4 5\n4 1 2 4 4\n4 3 2 1\n''') == '7'\n"
    },
    {
        "number": 3143,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"1\\n1\"\nassert solution(\"2 2\") == \"1\\n1\"\nassert solution(\"2 2\\n1 2\") == \"1\\n1\"\nassert solution(\"3 3\\n1 2 3\") == \"7\\n1 3 4 1 4 2 1 3\"\nassert solution(\"3 3\\n1 2 3\\n1 2 1\") == \"7\\n1 3 4 1 4 2 1 3\"\n\n-----\nIf you are using random library, you can get numbers in range [0, N] with randint(0, N) function.\n\n-----\n\nimport random\n\nN, K = map(int, input().split())\n\ninitial_order = input().split()\n\norder = input().split()\n\ninital_order = [None] * N\n\nfor i in range(N):\n    inital_order[int(order[i]) - 1] = i\n\nfor i in range(K):\n    random.shuffle(inital_order)\n    print(inital_order)\n\"\"\"\n\"\"\"\n------- TESTS (from leetcode) -------\n\"\"\"\nimport random\n\nN, K = map(int, input().split())\n\ninitial_order = input().split()\n\norder = input().split()\n\ninital_order = [None] * N\n\nfor i in range(N):\n    inital_order[int(order[i]) - 1] = i\n\nfor i in range(K):\n    random.shuffle(inital_order)\n    print(inital_order)\n\"\"\"\n\n------\n\"\"\"\n"
    },
    {
        "number": 3143,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"4 5\") == \"7\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"4 1 2 4 4\") == \"4\"\nassert solution(\"4 3 2 1\") == \"4 4 2 4 4 1 4\"\n"
    },
    {
        "number": 3143,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == '1'\nassert solution('1') == '1'\nassert solution('4 5') == '7'\nassert solution('4 1 2 4 4') == '1 4 4 2 4 1 4'\nassert solution('4 3 2 1') == '7 4 4 2 4 1 4'\n"
    },
    {
        "number": 3143,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1\\n1\\n1') == '1\\n1'\nassert solution('2 1\\n4 1 2 4 4\\n4 3 2 1\\n') == '7\\n4 4 2 4 4 1 4'\nassert solution('3 1\\n3\\n1 3\\n') == '3\\n3'\nassert solution('4 1\\n4 1 2 4 4\\n4 3 2 1\\n') == '7\\n4 4 2 4 4 1 4'\nassert solution('5 1\\n5\\n5 1 5\\n') == '4\\n5 5 1 5'\n"
    },
    {
        "number": 3143,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3143,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    input_string=\n\"\"\"\n1 1\n1\n1\n\"\"\") == \"\"\"\n1\n1\n\"\"\"\n\nassert solution(\n    input_string=\n\"\"\"\n4 5\n4 1 2 4 4\n4 3 2 1\n\"\"\") == \"\"\"\n7\n4 4 2 4 4 1 4\n\"\"\"\n\nassert solution(\n    input_string=\n\"\"\"\n3 1\n1\n1\n\"\"\") == \"\"\"\n1\n1\n\"\"\"\n\nassert solution(\n    input_string=\n\"\"\"\n3 2\n3 1 2\n3 3 2\n\"\"\") == \"\"\"\n1\n1 2\n\"\"\"\n\nassert solution(\n    input_string=\n\"\"\"\n3 1\n2\n1\n\"\"\") == \"\"\"\n1\n1\n\"\"\""
    },
    {
        "number": 3143,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 1''') == '1'\nassert solution('''2 3''') == '1'\nassert solution('''5 4''') == '3'\nassert solution('''1\n1\n1''') == '1'\nassert solution('''2\n1\n1''') == '1'\n"
    },
    {
        "number": 3143,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3144,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3144,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3144,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 10 3 2') == '4'\nassert solution('10 10 5 0') == '10'\n\"\"\"\n"
    },
    {
        "number": 3144,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 10 3 2\") == \"4\"\nassert solution(\"10 10 5 0\") == \"10\"\nassert solution(\"2 2 2 2\") == \"4\"\nassert solution(\"2 1 1 1\") == \"4\"\nassert solution(\"10 1 1 1\") == \"4\"\n"
    },
    {
        "number": 3144,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3144,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3144,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 10 3 2\") == \"4\"\nassert solution(\"10 10 5 0\") == \"10\"\nassert solution(\"10 10 5 1\") == \"10\"\nassert solution(\"10 10 5 3\") == \"10\"\nassert solution(\"10 10 5 10\") == \"10\"\n"
    },
    {
        "number": 3144,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 10 3 2\") == \"4\"\nassert solution(\"10 10 5 0\") == \"10\"\nassert solution(\"1 10 1 1\") == \"1\"\nassert solution(\"1 1 1 1\") == \"1\"\nassert solution(\"1 1 1 1\") == \"1\"\n"
    },
    {
        "number": 3144,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n\nfrom sys import stdin"
    },
    {
        "number": 3144,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 10 3 2\") == 4\nassert solution(\"10 10 5 0\") == 10\nassert solution(\"10 10 0 0\") == 10\nassert solution(\"0 0 0 0\") == 10\nassert solution(\"1 1 1 1\") == 10\n"
    },
    {
        "number": 3145,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 1 20\\n0123456789\") == \"10\"\nassert solution(\"2 1 20\\n01234567890123456789\") == \"111\"\nassert solution(\"2 1 20\\n012345678901234567890123456789\") == \"111\"\nassert solution(\"2 1 20\\n01234567890123456789012345678901234567890123456789\") == \"111111111\"\nassert solution(\"2 1 20\\n
    },
    {
        "number": 3145,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"2 1 20\n0123456789\"\"\") == \"10\"\nassert solution(\n\"\"\"6 100 9294\n23689\"\"\") == \"111\"\nassert solution(\n\"\"\"2 9 3\n0123456789\"\"\") == \"9\"\nassert solution(\n\"\"\"4 5 6\n0123456789\"\"\") == \"1\"\nassert solution(\n\"\"\"1 10 11\n0123456789\"\"\") == \"1\"\n"
    },
    {
        "number": 3145,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3145,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\\n098765\") == \"1\"\nassert solution(\"2 1 20\\n0123456789\") == \"10\"\nassert solution(\"6 100 9294\\n23689\") == \"111\"\nprint(\"Passed. (Add more tests to be more sure!)\")"
    },
    {
        "number": 3145,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 1 20\") == \"10\"\nassert solution(\"6 100 9294\") == \"111\"\nassert solution(\"1 1 20\") == \"10\"\nassert solution(\"6 100 929\") == \"111\"\nassert solution(\"2 1 9\") == \"9\"\n"
    },
    {
        "number": 3145,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"2 1 20\n0123456789\"\"\"\n) == \"10\"\n\nassert solution(\n\"\"\"6 100 9294\n23689\"\"\"\n) == \"111\"\n\nassert solution(\n\"\"\"2 1 20\n0123456789\"\"\"\n) == \"10\"\n\nassert solution(\n\"\"\"4 100 8999999999\n123112321314\"\"\"\n) == \"0\"\n\nassert solution(\n\"\"\"2 2 10\n0123456789\"\"\"\n) == \"10\""
    },
    {
        "number": 3145,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 1 20\\n0123456789') == '10'\nassert solution('6 100 9294\\n23689') == '111'\nassert solution('1 1 100\\n23') == '0'\nassert solution('1 1 100\\n23') == '0'\nassert solution('1 1 100\\n23') == '0'\n"
    },
    {
        "number": 3145,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 1 20\") == \"10\"\nassert solution(\"6 100 9294\") == \"111\"\nassert solution(\"6 100 9294\") == \"111\"\nassert solution(\"6 100 9294\") == \"111\"\nassert solution(\"6 100 9294\") == \"111\"\n"
    },
    {
        "number": 3145,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 1 20\n0123456789''') == '10'\nassert solution('''6 100 9294\n23689''') == '111'\nprint('All tests passed successfully.')\n"
    },
    {
        "number": 3145,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 1 20\n0123456789''') == '10'\nassert solution('''6 100 9294\n23689''') == '111'\nassert solution('''4 4 89\n3741''') == '11'\nassert solution('''2 5 20\nabcde0123456789''') == '16'\n'''"
    },
    {
        "number": 3146,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\") == \"1.500000 2.666667\"\nassert solution(\"2 2\\n1 S 1\\n2 S 2\") == \"0.00000 2.666667\"\n"
    },
    {
        "number": 3146,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 3\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1''') == '1.500000 2.666667'\nassert solution('''5 2\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1''') == '1.500000 3.666667'\nassert solution('''5 2\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 2''') == '1.500000 2.666667'\nassert solution('''5 2\n1 R 4\n2 R 2\n3 S 2\n4 S 1\n5 S 1''') == '1.000000 2.333333'\nassert solution('''5 2\n1 R 4\n2 R 2\n3 S 2\n4 S 2\n5 S 1''') == '1.000000 2.666667'\n"
    },
    {
        "number": 3146,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"5 3\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1\n\"\"\") == \"1.500000 2.666667\"\n\nassert solution(\n\"\"\"7 5\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1\n6 R 4\n7 R 3\n\"\"\") == \"3.333333 2.666667\"\n\nassert solution(\n\"\"\"7 8\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1\n6 R 4\n7 R 3\n8 R 3\n\"\"\") == \"3.333333 4.000000\"\n\nassert solution(\n\"\"\"6 1\n1 R 1\n2 R 2\n3 S 2\n4 S 3\n5 S 4\n6 S 4\n\"\"\") == \"0.500000\"\n\nassert solution(\n\"\"\"5 1\n1 R 1\n2 R 2\n3 R 2\n4 S 2\n5 S 1\n\"\"\") == \"0.500000\""
    },
    {
        "number": 3146,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 3\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1''') == '1.500000 2.666667'\nassert solution('''3 3\n1 R 2\n2 S 2\n3 R 2''') == '1.000000 2.666667'\nassert solution('''7 3\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1\n6 R 2\n7 R 1''') == '0.50000 1.000000'\nassert solution('''6 1\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1\n6 R 2''') == '0.000000 1.000000'\nassert solution('''6 2\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1\n6 R 2''') == '0.000000 1.000000'\n"
    },
    {
        "number": 3146,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2"
    },
    {
        "number": 3146,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 2\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1''') == '1.500000 3.666667'\nassert solution('''7 2\n1 R 2\n2 S 2\n3 R 2\n4 S 2\n5 R 2\n6 S 2\n7 S 1''') == '1.500000 3.666667'\nassert solution('''3 2\n1 R 2\n2 R 2\n3 S 2''') == '1.500000 2.666667'\nassert solution('''8 2\n1 R 2\n2 R 2\n3 R 2\n4 S 2\n5 R 2\n6 S 2\n7 R 2\n8 S 1''') == '1.500000 3.666667'\nassert solution('''5 2\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1''') == '1.500000 3.666667'\n"
    },
    {
        "number": 3146,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 3\") == \"1.500000 2.666667\"\nassert solution(\"5 4\") == \"1.000000 2.666667\"\nassert solution(\"5 5\") == \"0.00000 2.666667\"\nassert solution(\"5 6\") == \"0.00000 0.00000\"\nassert solution(\"5 7\") == \"0.00000 0.00000\"\n"
    },
    {
        "number": 3146,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 3146,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1') == '1.500000 2.666667'\n"
    },
    {
        "number": 3146,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '1.5 0'\n"
    },
    {
        "number": 3147,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 6\n101010\n111001\n101001''') == '3'\nassert solution('''4 5\n10010\n01010\n10101\n01001''') == '3'\nassert solution('''5 4\n10010\n11100\n10100\n01010\n10101''') == '-1'\nassert solution('''6 7\n000000011111\n110000011110\n110110010110\n11101001111\n111000111110\n111001100110\n111011011010\n111010111100\n111000111110\n110000011110''') == '3'\n'''\n"
    },
    {
        "number": 3147,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(''.join(input().split())) == input()\n"
    },
    {
        "number": 3147,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3147,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0\\n0\\n1') == '1'\nassert solution('0\\n1\\n1') == '1'\nassert solution('0\\n1\\n0') == '1'\nassert solution('1\\n0\\n1') == '1'\nassert solution('0\\n0\\n1\\n1') == '2'\n"
    },
    {
        "number": 3147,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 6\n101010\n111001\n101001''') == '3'\nassert solution('''5 5\n1010101\n010101\n1010101\n010101\n010101''') == '-1'\nassert solution('''4 6\n101101\n01010\n10101\n01001''') == '3'\nassert solution('''5 3\n01010\n10101\n10101\n01010''') == '-1'\nassert solution('''4 6\n00100\n00100\n10101\n00100''') == '4'\n"
    },
    {
        "number": 3147,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3\""
    },
    {
        "number": 3147,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('101010\\n111001\\n101001') == '3'\nassert solution('4 5\\n10010\\n01010\\n10101\\n01001') == '3'\nassert solution('3 6\\n101010\\n111001\\n101001') == '3'\n"
    },
    {
        "number": 3147,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 6\n101010\n111001\n101001''') == '3'\nassert solution('''4 5\n10010\n01010\n10101\n01001''') == '3'\nassert solution('''1 1\n0''') == '-1'\nassert solution('''1 1\n1''') == '-1'\nassert solution('''1 1\n1''') == '-1'\n"
    },
    {
        "number": 3147,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == -1\nassert solution(\"1 2 3 4\") == 1\nassert solution(\"1 2 3 4 5\") == -1\nassert solution(\"10010\") == 1\nassert solution(\"111001\") == 2\n"
    },
    {
        "number": 3147,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3148,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\\n\"\n) == \"-3 -1\"\nassert solution(\n    \"4\\n2 4\\n6 -1\\n3 5\\n-1 -1\\n\"\n) == \"3 4\\n3 -1\""
    },
    {
        "number": 3148,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    '''5'''\n    ) == '3 4'\nassert solution(\n    '''4'''\n    ) == '3 -1'\nassert solution(\n    '''2'''\n    ) == '-3 -1'\nassert solution(\n    '''0'''\n    ) == '3 1'\nassert solution(\n    '''0'''\n    ) == '-3 1'\n"
    },
    {
        "number": 3148,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0\\n0\\n0\\n0\") == \"0 0\"\nassert solution(\"1\\n0\\n0\\n0\") == \"0 1\"\nassert solution(\"2\\n0\\n1\\n1\") == \"1 1\"\nassert solution(\"3\\n1 0\\n0 0\") == \"0 0\"\nassert solution(\"4\\n0 0\\n0 0\") == \"0 0\"\n"
    },
    {
        "number": 3148,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n0 0\\n0 1\\n1 0\\n0 -1') == '-3 -1'\nassert solution('4\\n2 4\\n6 -1\\n3 5\\n-1 -1') == '3 4\\n3 -1'\nassert solution('7\\n1 2\\n2 0\\n-1 -1\\n-2 -2\\n-2 -1\\n-3 -2') == '-1 -1'\nassert solution('2\\n-1 -1\\n1 0') == '-1 1'\nassert solution('1\\n0 0') == '0 0'\n"
    },
    {
        "number": 3148,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n0 0\n0 1\n1 0\n0 -1\n-1 0''') == '-3 -1'\nassert solution('''4\n2 4\n6 -1\n3 5\n-1 -1''') == '3 4'\nassert solution('''2\n1 2\n-1 -1''') == '-1 -1'\nassert solution('''2\n1 2\n-1 -1''') == '-1 -1'\nassert solution('''3\n1 0\n-1 -1\n0 1\n2 1\n0 -1''') == '-1 -1'\n"
    },
    {
        "number": 3148,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n0 0\n0 1\n1 0\n0 -1\n-1 0''') == '-3 1'\nassert solution('''4\n2 4\n6 -1\n3 5\n-1 -1\n''') == '3 4'\n"
    },
    {
        "number": 3148,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n-1 2\\n-1 2') == '3 -1'\nassert solution('3\\n1 1\\n2 2\\n2 1\\n1 1') == '3 1'\nassert solution('3\\n2 0\\n2 1\\n2 0\\n1 1\\n2 -1') == '3 1'\nassert solution('3\\n0 0\\n0 1\\n1 0\\n0 -1\\n1 -1') == '3 -1'\nassert solution('4\\n2 4\\n6 -1\\n3 5\\n-1 -1\\n2 1\\n-1 2') == '3 4\\n3 -1\\n2 1'\n"
    },
    {
        "number": 3148,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output"
    },
    {
        "number": 3148,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"5\"\n) == \"-3 -1\"\nassert solution(\n    \"5\"\n) == \"3 1\"\nassert solution(\n    \"4\"\n) == \"3 4\"\nassert solution(\n    \"4\"\n) == \"-1 -1\"\nassert solution(\n    \"6\"\n) == \"3 5\"\n"
    },
    {
        "number": 3148,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''5\n0 0\n0 1\n1 0\n0 -1\n-1 0'''\n) == '-3 -1'\nassert solution(\n'''4\n2 4\n6 -1\n3 5\n-1 -1'''\n) == '3 4' or solution(\n'''4\n2 4\n6 -1\n3 5\n-1 -1'''\n) == '3 -1'\n"
    },
    {
        "number": 3149,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 6 5 45 20\\n0 0\\n2 0\\n1 1.5') == '2 5.086781'\nassert solution('3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5') == '1 12.715255'\nassert solution('3 0.25 1 4 0\\n0 0\\n2 0\\n1 1.5') == '1 3.845386'\nassert solution('3 1 3 0\\n0 0\\n2 0\\n1 1.5') == '1 3.845386'\nassert solution('3 0.25 1 4 0\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\"
    },
    {
        "number": 3149,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 6 5 45 20 0 0 2 0 1 1.5\\n0 0\\n2 0\\n1 1.5') == '2 5.086781'\nassert solution('3 6 5 45 20 0 0 2 0 1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5') == '1 12.715255'\nassert solution('3 0.25 2 45 20 0 0 2 0 1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5') == '1 12.715255'\nassert solution('3 0.25 2 45 20 0 0 2 0 1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1"
    },
    {
        "number": 3149,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 6 5 45 20\n0 0\n2 0\n1 1.5''') == '2 5.086781'\nassert solution('''3 0.25 2 45 20\n0 0\n2 0\n1 1.5''') == '1 12.715255'\nassert solution('''4 0.25 3 45 20\n0 0\n2 0\n1 1.5\n1 1.5''') == '1 12.715255'\nassert solution('''4 0.25 3 45 20\n0 0\n2 0\n1 1.5\n1 1.5 1.5''') == '1 12.715255'\nassert solution('''2 0.25 3 45 20\n0 0\n2 0\n1 1.5\n1 1.5 1.5''') == '1 12.715255'\n"
    },
    {
        "number": 3149,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    '3 6 5 45 20\\n' +\n    '0 0\\n' +\n    '2 0\\n' +\n    '1 1.5\\n'\n) == '2 5.086781\\n'"
    },
    {
        "number": 3149,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n3 0.25 2 45 20\n0 0\n2 0\n1 1.5\n''') == '1 12.715255'\nassert solution(\n'''\n3 0.25 2 45 20\n0 0\n1 1.5\n2 0\n3 1.5\n''') == '1 12.715255'\nassert solution(\n'''\n3 0.25 2 45 20\n0 0\n3 1.5\n1 1.5\n2 0\n''') == '2 12.715255'\nassert solution(\n'''\n3 0.25 2 45 20\n0 0\n1 1.5\n2 0\n3 1.5\n''') == '2 12.715255'\nassert solution(\n'''\n3 0.25 2 45 20\n0 0\n2 0\n1 1.5\n''') == '1 1.5'\n"
    },
    {
        "number": 3149,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 6 5 45 20\n0 0\n2 0\n1 1.5''') == '2 5.086781'\nassert solution('''3 0.25 2 45 20\n0 0\n2 0\n1 1.5''') == '1 12.715255'\nassert solution('''1 0 0\n1 1 0\n2 0 0\n3 0 0\n4 0 0\n5 0 0\n6 0 0''') == '1 12.715255'\nassert solution('''1 2 3\n2 3 2\n3 4 3\n4 5 3\n5 6 3\n6 7 3\n7 8 3\n8 9 3\n9 10 3''') == '1 4'\nassert solution('''1 1 1\n1 2 1\n2 3 1\n3 4 1\n4 5 1\n5 6 1\n6 7 1\n7 8 1\n8 9 1\n9 10 1\n10 11 1\n11 12 1\n12 13 1\n13 14 1\n14 15 1\n15 16 1\n16 17 1\n17 18 1\n18 19 1\n19 20 1''') == '1 2'\n"
    },
    {
        "number": 3149,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3149,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 6 5 45 20\n0 0\n2 0\n1 1.5''') == '2 5.086781'\nassert solution('''3 0.25 2 45 20\n0 0\n2 0\n1 1.5''') == '1 12.715255'\nassert solution('''3 0.25 2 45 20\n0 0\n2 0\n1 1.5\n0 0\n-1 0\n2 0\n1 1.5''') == '2 10.156785'\nassert solution('''3 0.25 2 45 20\n0 0\n2 0\n1 1.5\n0 0\n-1 0\n2 0\n1 1.5\n0 0\n1 1.5\n-1 0\n2 0\n1 1.5''') == '2 12.715255'\nassert solution('''3 0.25 2 45 20\n0 0\n2 0\n1 1.5\n0 0\n-1 0\n2 0\n1 1.5\n0 0\n1 1.5\n-1 0\n2 0\n1 1.5\n0 0\n1 1.5\n-1 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n1 1.5\n0 0\n2 0\n"
    },
    {
        "number": 3149,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''3 6 5 45 20\n0 0\n2 0\n1 1.5''') == \"2 5.086781\"\n\nassert solution(\n'''3 0.25 2 45 20\n0 0\n2 0\n1 1.5''') == \"1 12.715255\"\n\nassert solution(\n'''3 1 2 4 5\n0 0\n1 1\n2 2\n3 3''') == \"1 3\"\n\nassert solution(\n'''3 1 2 4 5\n0 0\n1 1\n2 2\n3 3''') == \"1 4\"\n\nassert solution(\n'''3 1 2 4 5\n0 0\n1 1\n2 2\n4 4''') == \"1 4\""
    },
    {
        "number": 3149,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"3\n6\n5 45 20\n0 0\n2 0\n1 1.5\n\"\"\") == '2 5.086781'\nassert solution(\n\"\"\"3\n0.25\n2\n45\n20\n\"\"\") == '1 12.715255'\nassert solution(\n\"\"\"3\n9.9999\n2\n45\n20\n\"\"\") == '1 9.9999'\nassert solution(\n\"\"\"3\n9.9999\n2\n45\n20\n\"\"\") == '1 9.9999'\nassert solution(\n\"\"\"3\n9.9999\n2\n45\n20\n\"\"\") == '1 9.9999'\n"
    },
    {
        "number": 3150,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3 4\") == \"4\"\nassert solution(\"0 0 1 0\") == \"0\"\nassert solution(\"0 0 0 1\") == \"0\"\nassert solution(\"0 1 1 1\") == \"0\"\n"
    },
    {
        "number": 3150,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1''') == '8'\n'''"
    },
    {
        "number": 3150,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3150,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1') == '8'\nassert solution('1 0 1 1\\n0 0 0 1\\n4 0 4 4\\n7 0 3 4\\n') == '1'\nassert solution('2 0 1 1\\n1 0 0 1\\n4 0 4 4\\n7 0 3 4\\n') == '0'\nassert solution('3 0 1 1\\n1 0 0 1\\n4 0 4 4\\n7 0 3 4\\n') == '1'\nassert solution('4 0 1 1\\n1 0 0 1\\n4 0 4 4\\n7 0 3 4\\n') == '1'\n"
    },
    {
        "number": 3150,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n''') == '8'\nassert solution(\n'''5\n1 0 7 1\n1 1 5 1\n4 0 4 4\n7 0 3 4\n''') == '1'\nassert solution(\n'''10\n1 0 10 1\n1 1 5 1\n4 0 4 4\n7 0 3 4\n7 1 3 4\n7 1 5 4\n7 2 5 4\n7 2 3 4\n7 3 4 3\n7 3 5 4\n7 4 5 4\n''') == '23'\nassert solution(\n'''5\n1 0 7 1\n1 1 5 1\n4 0 4 4\n7 0 3 4\n7 1 3 4\n7 1 5 4\n7 2 5 4\n7 2 3 4\n7 3 4 3\n7 3 5 4\n7 4 5 4\n''') == '20'"
    },
    {
        "number": 3150,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2') == '1'\nassert solution('1\\n2\\n1\\n1') == '1'\nassert solution('2\\n2\\n1\\n1') == '2'\nassert solution('1\\n2\\n1\\n1\\n1\\n1') == '5'\nassert solution('1\\n2\\n1\\n1\\n1\\n1\\n1\\n1') == '7'\n"
    },
    {
        "number": 3150,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n\") == \"8\"\nassert solution(\"1 1 5 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4\\n\") == \"1\"\nassert solution(\"1 1 5 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4\\n1 1 2 3\\n\") == \"0\"\nprint(\"all tests passed\")\n\n\"\"\"\n"
    },
    {
        "number": 3150,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 3150,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1''') == '8'\nassert solution('''6\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n''') == '8'\nassert solution('''4\n5 1 7 1\n1 1 5 1\n4 0 4 4\n7 0 3 4\n''') == '1'\nassert solution('''5\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n''') == '1'\n'''\n"
    },
    {
        "number": 3150,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n''') == '8'\nassert solution('''0\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n''') == '1'\nassert solution('''5\n5 1 7 1\n1 1 5 1\n4 0 4 4\n7 0 3 4\n''') == '8'\nassert solution('''7\n5 1 7 1\n1 1 5 1\n4 0 4 4\n7 0 3 4\n''') == '1'\nassert solution('''6\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n''') == '8'\n"
    },
    {
        "number": 3151,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7') == '4 3'\nassert solution('10') == 'impossible'\n"
    },
    {
        "number": 3151,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(7) == '4 3'\nassert solution(10) == 'impossible'\nassert solution(3) == 'impossible'\nassert solution(1) == 'impossible'\nassert solution(9) == 'impossible'\n"
    },
    {
        "number": 3151,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\nfrom math import sqrt\n\nn = int(input())\n\nfor i in range(1, n + 1):\n    if sqrt(i) == int(sqrt(i)):\n        m = i\n        k = int(sqrt(i))\n        break"
    },
    {
        "number": 3151,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"7\"\n) == \"4 3\"\nassert solution(\n    \"10\"\n) == \"impossible\"\nassert solution(\n    \"10\"\n) == \"impossible\"\nassert solution(\n    \"10\"\n) == \"impossible\"\nassert solution(\n    \"10\"\n) == \"impossible\"\n"
    },
    {
        "number": 3151,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7') == '4 3'\nassert solution('10') == 'impossible'\nprint(\"All tests past. Now we're getting hung up! Run `python3 main.py` to solve!\")"
    },
    {
        "number": 3151,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == 'impossible'\nassert solution(input()) == 'impossible'\nassert solution(input()) == 'impossible'\nassert solution(input()) == 'impossible'\nassert solution(input()) == 'impossible'\n"
    },
    {
        "number": 3151,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7') == '4 3'\nassert solution('10') == 'impossible'\nassert solution('14') == 'impossible'\nassert solution('10' * 10 ** 9) == 'impossible'\n\"\"\""
    },
    {
        "number": 3151,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7') == '4 3'\nassert solution('10') == 'impossible'\nassert solution('1') == 'impossible'\nassert solution('1000') == 'impossible'\nassert solution('-1') == 'impossible'\n"
    },
    {
        "number": 3151,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(1) == \"impossible\"\nassert solution(2) == \"impossible\"\nassert solution(3) == \"impossible\"\nassert solution(4) == \"impossible\"\nassert solution(5) == \"impossible\"\n"
    },
    {
        "number": 3151,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7') == '4 3'\nassert solution('10') == 'impossible'\nassert solution('15') == 'impossible'\nassert solution('14') == '4 3'\nassert solution('16') == 'impossible'\n"
    },
    {
        "number": 3152,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"1\n2\n3\n4\n5\"\"\"\n) == \"16\"\n\nassert solution(\n    \"\"\"1\n2\n3\n4\n5\n6\n7\n8\n9\"\"\"\n) == \"109\"\n\nassert solution(\n    \"\"\"1000\n9\n8\n7\n6\n5\n4\n3\n2\n1\"\"\"\n) == \"99000198000099\"\n\nassert solution(\n    \"\"\"10000\n99\n98\n97\n96\n95\n94\n93\n92\n91\n90\"\"\"\n) == \"9989998899999\"\n\nassert solution(\n    \"\"\"100\n9\n8\n7\n6\n5\n4\n3\n2\n1\n10000\"\"\"\n) == \"9999988999\""
    },
    {
        "number": 3152,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n2\n1\n3\n''') == '16'\nassert solution('''\n2\n4\n1\n4\n''') == '109'\n"
    },
    {
        "number": 3152,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n3\\n4\\n4\\n2\") == \"109\"\nassert solution(\"2\\n1\\n3\\n4\\n4\\n2\") == \"16\"\nassert solution(\"4\\n2\\n4\\n1\\n4\\n2\\n2\\n2\") == \"109\"\nassert solution(\"4\\n2\\n4\\n1\\n4\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2"
    },
    {
        "number": 3152,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '2'\nassert solution('3\\n1') == '3'\nassert solution('4\\n1') == '4'\nassert solution('5\\n1') == '5'\n"
    },
    {
        "number": 3152,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n3\\n4\") == \"109\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"6875\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\") == \"6942\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\") == \"696547\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\") == \"6965474884\"\n"
    },
    {
        "number": 3152,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n1\\n3') == '16'\nassert solution('2\\n4\\n1') == '109'\nassert solution('4\\n4\\n4\\n4') == '256'\nassert solution('1\\n1\\n1\\n1') == '1'\nassert solution('2\\n4\\n1') == '109'\n"
    },
    {
        "number": 3152,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n') == '10916164577503931'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n') == '10916164577503931'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n') == '10916164577503931'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n') == '10916164577503931'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n') == '10916164577503931'\n"
    },
    {
        "number": 3152,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3152,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '109'"
    },
    {
        "number": 3152,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n1\\n3') == '16'\nassert solution('4\\n2\\n4\\n1\\n4') == '109'\nprint(\"Passed\")\n"
    },
    {
        "number": 3153,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 2\n2 3''') == '3'\nassert solution('''3 4\n3 3 1 1\n1 3\n2 3\n4 1\n''') == '5'\nassert solution('''5 4\n5 3 1 1\n1 3\n2 3\n4 1\n''') == '5'\nassert solution('''3 4\n3 3 1 1\n1 3\n2 3\n4 1\n''') == '5'\nassert solution('''1 1\n2 3\n3 4\n1 1\n1 1\n1 1\n2 2\n2 2\n1 2\n2 3\n2 3\n''') == '6'\n"
    },
    {
        "number": 3153,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n5 1\\n1 2\\n1 2\\n1 2\\n\") == \"3\\n1 2 1\\n1 2 2\\n1 2 2\\n\"\nassert solution(\"4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n\") == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\\n\"\nassert solution(\"6 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n\") == \"5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n\"\nassert solution(\"2 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n\") == \"5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n\"\nassert solution(\"6 6\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n"
    },
    {
        "number": 3153,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n5 2\n5 1 1 1 1\n1 3\n2 3\n4 1\n\"\"\") == \"\"\"\n3\n1 3 1\n2 3 2\n4 1 0\n2 4 1\n3 1 0\n\"\"\"\nassert solution(\n\"\"\"\n5 2\n5 1 1 1 1\n1 3\n2 3\n4 1\n\"\"\") == \"\"\"\n3\n1 3 1\n2 3 2\n4 1 0\n2 4 1\n3 1 0\n\"\"\"\n"
    },
    {
        "number": 3153,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n\") == '5\\n1 2 1\\n1 2 2\\n1 2 2\\n2 4 1 0\\n3 1 0\\n'\nassert solution(\"2 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n\") == '5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1 0\\n3 1 0\\n'\nassert solution(\"5 2\\n5 1\\n1 3\\n1 2\\n2 2\\n2 1\\n3 3\\n3 2\\n3 1\\n\") == '3\\n1 2 1\\n1 2 2\\n1 2 2\\n2 1 0\\n2 2 0\\n2 1 0\\n'\nassert solution(\"5 2\\n5 1\\n1 3\\n1 2\\n2 2\\n2 1\\n3 3\\n3 2\\n3 1\\n\") == '3\\n1 2 1\\n1 2 2\\n1 2 2\\n2 1 0\\n2 2 0\\n2 1 0\\n'\nassert solution(\"5 2\\n5 1\\n1 3\\n1 2\\n2 2\\n2 1\\n3 3\\n3 2\\n3 1\\n\") == '3\\n1 2 1\\n1 2 2\\n1 2 2\\n2 1 0\\n2 2 0\\n2 1 0\\n'\n"
    },
    {
        "number": 3153,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3153,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3\\n5 1\\n1 2\\n1 2\\n1 2\\n') == '3\\n1 2 1\\n1 2 2\\n1 2 2\\n'\nassert solution('4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n') == '5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\\n'\n"
    },
    {
        "number": 3153,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"2 3\n5 1\n1 2\n1 2\n1 2\n\"\"\") == \"\"\"3\n1 2 1\n1 2 2\n1 2 2\n\"\"\"\n"
    },
    {
        "number": 3153,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3\\n5 1\\n1 2\\n1 2\\n1 2\\n') == '3\\n1 2 1\\n1 2 2\\n1 2 2\\n'\nassert solution('4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n') == '5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\\n'\nassert solution('4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1\\n1 3\\n2 3\\n4 1"
    },
    {
        "number": 3153,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 3\n5 1\n1 2\n1 2\n1 2\n''') == '''3\n1 2 1\n1 2 2\n1 2 2\n'''\n\nassert solution('''5 4\n5 3 1 1\n1 3\n2 3\n4 1\n''') == '''5\n1 3 1\n2 3 2\n4 1 0\n2 4 1\n3 1 0\n'''\n\nassert solution('''10 4\n6 3 2 1\n1 3\n2 3\n4 1\n4 3\n7 1\n7 2\n7 2\n7 3\n7 4\n''') == '''2\n1 3 1\n2 3 2\n4 1 0\n4 3 2\n7 1 0\n7 2 1\n7 2 2\n7 3 3\n7 4 4\n'''\n\nassert solution('''10 4\n6 3 2 1\n1 3\n2 3\n4 1\n4 3\n7 1\n7 2\n7 2\n7 3\n7 4\n''') == '''2\n1 3 1\n2 3 2\n4 1 0\n4 3 2\n7 1 0\n7 2 1\n7 2 2\n7 3 3\n7 4 4\n'''\n\nassert solution('''30 3\n20 15 10 5\n8 8 5 5\n9 9 5 5\n10 10 5 5\n11 11 5 5\n12 12 5 5\n13 13 5 5\n14 14 5 5\n15 15 5 5\n16 16 5 5\n17 17 5 5\n18 18 5 5\n19 19 5 5\n20 20 5 5\n''') == '''27\n
    },
    {
        "number": 3153,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"1 2 1\"\nassert solution(\"1 2 3\") == \"1 2 2 1\"\nassert solution(\"1 3 2\") == \"1 3 2 2\"\nassert solution(\"2 3 1\") == \"1 2 1 1\"\nassert solution(\"2 3 1 2\") == \"1 2 2 2 1\"\n"
    },
    {
        "number": 3154,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == None\n\n'''"
    },
    {
        "number": 3154,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 3\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1''') == '1 2'\nassert solution('''2 1\n20 3\n0 1 1\n10 1 0\n10 2 1''') == 'impossible'\nassert solution('''2 2\n20 1\n0 1 1\n10 1 0\n10 2 1''') == 'impossible'\nassert solution('''3 3\n10 11\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1''') == '2 1'\nassert solution('''4 4\n2 3\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1''') == '1 2'\n"
    },
    {
        "number": 3154,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 3\\n0 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1') == '1 2'\nassert solution('1 2\\n0 1 0\\n0 2 1') == '1 2'\nassert solution('1 1\\n0 1 0\\n0 1 0') == 'impossible'\nassert solution('0 1\\n0 2 0\\n0 1 0\\n0 2 0\\n0 1 0') == '1 2'\nassert solution('0 1\\n0 2 0\\n0 1 0\\n0 2 0\\n0 1 0\\n0 2 0') == '1 2'\n"
    },
    {
        "number": 3154,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0 1 1\") == \"1 2\"\nassert solution(\"1 1 3\") == \"1 2\"\nassert solution(\"0 2 2\") == \"impossible\"\nassert solution(\"1 2 1\") == \"1 2\"\nassert solution(\"0 2 1\") == \"impossible\"\n"
    },
    {
        "number": 3154,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 3\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1''') == '1 2'\nassert solution('''2 1\n20 3\n0 1 1\n10 1 0\n10 2 1''') == 'impossible'\n'''\n'''"
    },
    {
        "number": 3154,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 1\n20 3\n0 1 1\n10 1 0\n10 2 1''') == '1 2'\nassert solution('''2 3\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1''') == '1 2'\nassert solution('''2 3\n6 7\n0 2 1\n0 1 1\n10 1 0\n10 2 1\nSample Output 2:\nimpossible\n\n''') == 'impossible'\n\nassert solution('''2 2\n7 3\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1''') == '1 2'\nassert solution('''2 2\n7 3\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1''') == '1 2'\n"
    },
    {
        "number": 3154,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 1 1') == '1 2'\nassert solution('1 2') == 'impossible'\nassert solution('2 1') == '1 2'\nassert solution('2 2') == 'impossible'\nassert solution('2 1 2') == '1 2'\n"
    },
    {
        "number": 3154,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 1\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1''') == '1 2'\nassert solution('''2 1\n20 3\n0 1 1\n10 1 0\n10 2 1\nSample Output 2:\nimpossible\n''') == 'impossible'\n'''\n    k,m=map(int,stdin.split())\n    t=list(map(int,stdin.split()[1:]))\n    s,e=map(int,stdin.split()[1:])\n    ind=1\n    t2=0\n    t3=0\n    t4=0\n    p=[]\n    l=len(t)\n    for i in t:\n        if i == t3:\n            t2+=1\n        elif i!= t4:\n            t3=i\n            t2=1\n        else:\n            t4=i\n    if t2>l/2:\n        for i in t:\n            p.append(i)\n    else:\n        for i in range(0,l):\n            if t[i]!=t3:\n                p.append(t[i])\n    print(*p)\n'''\n"
    },
    {
        "number": 3154,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0 1 1\") == \"1 2\"\nassert solution(\"2 1 2\") == \"impossible\"\nassert solution(\"2 3\") == \"1 2\"\nassert solution(\"2 3\") == \"impossible\"\nassert solution(\"3 3\") == \"1 2\"\n"
    },
    {
        "number": 3154,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n2 3\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1\n\"\"\") == \"1 2\"\n\nassert solution(\n\"\"\"\n3 2\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1\n\"\"\") == \"1 2\"\n\nassert solution(\n\"\"\"\n3 3\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1\n\"\"\") == \"1 2\"\n\nassert solution(\n\"\"\"\n3 3\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1\n\"\"\") == \"1 2\"\n\nassert solution(\n\"\"\"\n3 3\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1\n\"\"\") == \"1 2\""
    },
    {
        "number": 3155,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('123456789') == ''\nassert solution
    },
    {
        "number": 3155,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3155,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10') == '5 2'\nassert solution('2020') == '2020 1'\nassert solution('100') == '10 5'\n'''"
    },
    {
        "number": 3155,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 3155,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3155,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') is None\nassert solution('1') == '1 1'\nassert solution('2') == '1 2'\nassert solution('3') == '1 3'\nassert solution('4') == '1 4'\n"
    },
    {
        "number": 3155,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10') == '5 2'\nassert solution('2020') == '2020 1'\n\"\"\""
    },
    {
        "number": 3155,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3155,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5') == '5 1'\nassert solution('2020') == '2020 1'\nassert solution('5 ') == '5 1'\nassert solution('5\\n') == '5 1'\nassert solution('1\\n') == '1 1'\n"
    },
    {
        "number": 3155,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('20') == ''\nassert solution('20 ') == ''\nassert solution('20' * 20) == ''\nassert solution('20' * 21) == ''\n"
    },
    {
        "number": 3156,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\ncookies\nicecream''') == 'impossible'\nassert solution('''3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies''') == 'unique'\nassert solution('''3\n5\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\ncookies\nicecream\n1 chocolate\n2 icecream\n2 cookies\n3\nchocolate\nicecream\ncookies''') == 'ambiguous'\nassert solution('''3\n3\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies''') == 'impossible'\nassert solution('''3\n5\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\ncookies\nicecream\n1 chocolate\n2 icecream\n2 cookies\n3\nchocolate\nicecream\ncookies''') == 'unique'\n"
    },
    {
        "number": 3156,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == 'impossible'\nassert solution('0') == 'impossible'\nassert solution('1') == 'impossible'\nassert solution('2') == 'impossible'\nassert solution('3') == 'impossible'\n"
    },
    {
        "number": 3156,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'impossible'\nassert solution(stdin) == 'unique'\nassert solution(stdin) == 'ambiguous'\n\n\"\"\"\n"
    },
    {
        "number": 3156,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n2\\n0 1\\n1 2\\n2 0\\n1 0\\n1 1\\n2 1\\n0 2\\n1 1') == 'impossible'\nassert solution('2\\n4\\n0 1\\n1 2\\n2 3\\n3 0') == 'unique'\nassert solution('2\\n4\\n0 1\\n1 2\\n2 3\\n3 0\\n0 1\\n1 0\\n1 2\\n2 1') == 'ambiguous'\nassert solution('2\\n3\\n0 1\\n1 2\\n2 0') == 'impossible'\nassert solution('2\\n5\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 0') == 'unique'\n"
    },
    {
        "number": 3156,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"impossible\"\nassert solution(\"4\") == \"unique\"\nassert solution(\"3\\n3\") == \"impossible\"\nassert solution(\"4\\n3\\n3\\n3\") == \"impossible\"\nassert solution(\"4\\n4\\n3\\n3\") == \"impossible\"\n"
    },
    {
        "number": 3156,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin1) == \"impossible\"\nassert solution(stdin2) == \"unique\"\nassert solution(stdin3) == \"ambiguous\"\n\n-----\nSample Input 3:\n4\n5\n0 1\n0 2\n0 3\n1 2\n1 3\n2 3\nSample Output 3:\nunique\n\n-----\nSample Input 4:\n4\n5\n0 1\n0 2\n0 3\n1 2\n1 3\n1 4\n2 3\n2 4\n2 5\nSample Output 4:\nambiguous\n\"\"\"\n"
    },
    {
        "number": 3156,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(sample1) == \"impossible\"\nassert solution(sample2) == \"ambiguous\"\nassert solution(sample3) == \"impossible\"\nassert solution(sample4) == \"ambiguous\"\nassert solution(sample5) == \"impossible\"\n"
    },
    {
        "number": 3156,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 'impossible'\nassert solution('0') == 'impossible'\nassert solution('1') == 'unique'\nassert solution('2') == 'unique'\nassert solution('3') == 'impossible'\n"
    },
    {
        "number": 3156,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\") == \"impossible\"\nassert solution(\"3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n3 chocolate\\n4 cookies\\n3 cookies\") == \"ambiguous\"\nassert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3 cookies\") == \"unique\"\nassert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3 cookies\") == \"unique\"\nassert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3 cookies\") == \"unique\"\n"
    },
    {
        "number": 3156,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''3''') == 'impossible'\nassert solution(\n'''4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies''') == 'ambiguous'\nassert solution(\n'''4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\nchocolate\ncookies''') == 'impossible'\nassert solution(\n'''3\n3\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\nchocolate\ncookies''') == 'ambiguous'\n"
    },
    {
        "number": 3157,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3157,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nn,k,m = [int(x) for x in stdin.split()]\ntotal = 0\nfor i in range(k,n+1):\n    total += (i * 33) % m\nprint(total)\n"
    },
    {
        "number": 3157,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3157,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3157,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '0'\n"
    },
    {
        "number": 3157,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3157,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_stdout\nprint(f\"{test_input} == {expected_stdout} (Test passed)\")\n\nprint(f\"{solution(stdin)} == {expected_stdout} (Test passed)\")\n"
    },
    {
        "number": 3157,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n\nN, K, M = map(int, stdin.split(\" \"))"
    },
    {
        "number": 3157,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 0 10') == '0'\nassert solution('1 2 10') == '1'\nassert solution('2 1 10') == '1'\nassert solution('2 2 10') == '0'\nassert solution('2 3 10') == '1'\n"
    },
    {
        "number": 3157,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3158,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n.X.....\n...X...\n...X...\nX...X.\n.X...X.\n.X...X.\n.......\n''') == '3 zoom out'\nassert solution('''\n.X.......\n...X...X.\n...X...X.\nX...X...X\n.X.......\n.X.......\n.......X.\n''') == '3 pan'\nassert solution('''\n.X.......\n...X...X.\n...X...X.\nX...X...X\n.X.......\n.X.......\n.......X.\n''') == '3 zoom out'\nassert solution('''\n.X.......\n...X...X.\n...X...X.\nX...X...X\n.X.......\n.X.......\n.......X.\n''') == '3 pan'\nassert solution('''\n.X.......\n...X...X.\n...X...X.\nX...X...X\n.X.......\n.X.......\n.......X.\n''') == '3 zoom out'\n"
    },
    {
        "number": 3158,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution
    },
    {
        "number": 3158,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''....................\n....................XXXX..\n...................XX...XX.\n...................XX..X..X.\n.............XXX..XXXXX..X..\n........XXX.......XX....XX..\n........X..X......XX......\n..........XX........X......\n........X..X......XXXXX....\n..........XX....XXXX....XX.\n.............XX..XXXXX...XX.\n..................XX...XX..\n...................XX..X..X.\n...................XX..X..X.\n....................XXXX..''') == '3 pan'\nassert solution('''....................\n....................XXXX..\n...................XX...XX.\n...................XX..X..X.\n.............XXX..XXXXX..X..\n........XXX.......XX....XX..\n........X..X......XX......\n..........XX........X......\n........X..X......XXXXX....\n..........XX....XXXX....XX.\n.............XX..XXXXX...XX.\n..................XX...XX..\n...................XX..X..X.\n...................XX..X..X.\n....................XXXX..''') == '3 zoom out'\nassert solution('''....................\n....................XXXX..\n...................XX...XX.\n...................XX..X..X.\n.............XXX..XXXXX..X..\n........XXX.......XX....XX..\n........X..X......XX......\n..........XX........X......\n........X..X......XXXXX....\n..........XX....XXXX....XX.\n.............XX..XXXXX...XX.\n..................XX...XX..\n...................XX..X..X.\n...................XX..X..X.\n....................XXXX..''') == '2 pan'\nassert solution('''....................\n....................XXXX..\n...................XX...XX.\n...................XX..X..X.\n.............XXX..XXXXX..X..\n........XXX.......XX....XX..\n........X..X......XX......\n..........XX........X......\n........X..X......XXXXX....\n..........XX....XXXX....XX.\n.............XX..XXXXX...XX.\n..................XX...XX..\n...................XX..X..X.\n...................XX..X..X.\n....................XXXX..''') == '3 zoom out'\nassert solution('''....................\n....................XXXX..\n...................XX...XX.\n...................XX..X..X.\n.............XXX..XXXXX..X..\n........XXX.......XX....XX..\n........X..X......XX......\n..........XX........X......\n........X..X......XXXXX....\n..........XX....XXXX....XX.\n.............XX..XXXXX...XX.\n..................XX...XX..\n...................XX..X..X.\n...................XX..X..X.\n....................XXXX..''') == '2 pan'\n"
    },
    {
        "number": 3158,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''............................................................\n............................................................\n............XXXX..................................XXXX..............\n.....................XXXX........... XXXX.............XXXX...........\n....................XXXXXXXX...... X..XXX..XXXXXXXXXXXXXXXXX...\n...................XXXXXXXXXXXX....X XXXX..XXXXXXXXXXXXXXXXXX..\n...................XX....XXXXXXXXX..X XXXX..XXXXXXXXXXXXXXXXX..\n...................XX.XXXXXXXXXXXXX X XXXX..XXXXXXXXXXXXXXXXX..\n...................XX XXXXXXXXXXXXX X XXXX..XXXXXXXXXXXXXXXXX..\n...................XX XX XXXXXXXXX X XX XXXX..XXXXXXXXXXXXXXXX..\n...................XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n............................................................\n............................................................''') == '3 zoom out'\n\nassert solution('''............................................................\n............................................................\n............XXXX..................................XXXX..............\n.....................XXXX........... XXXX.............XXXX...........\n....................XXXXXXXX...... X..XXX..XXXXXXXXXXXXXXXXX...\n...................XXXXXXXXXXXX....X XXXX..XXXXXXXXXXXXXXXXXX..\n...................XX....XXXXXXXXX..X XXXX..XXXXXXXXXXXXXXXXX..\n...................XX.XXXXXXXXXXXXX X XXXX..XXXXXXXXXXXXXXXXX..\n...................XX XXXXXXXXXXXXX X XXXX..XXXXXXXXXXXXXXXXX..\n...................XX XX XXXXXXXXX X XX XXXX..XXXXXXXXXXXXX..\n...................XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n............................................................\n............................................................''') == '3 pan'\n\nassert solution('''............................................................\n............................................................\n............XXXX..................................XXXX..............\n.....................XXXX........... XXXX.............XXXX...........\n....................XXXXXXXX...... X..XXX..XXXXXXXXXXXXXXXXX...\n...................XXXXXXXXXXXX....X XXXX..XXXXXXXXXXXXXXXXXX..\n...................XX....XXXXXXXXX..X XXXX..XXXXXXXXXXXXXXXXX..\n...................XX.XXXXXXXXXXXXX X XXXX..XXXXXXXXXXXXXXXXX..\n...................XX XXXXXXXXXXXXX X XXXX..XXXXXXXXXXXXXXXXX..\n...................XX XX XXXXXXXXX X XX XXXX..XXXXXXXXXXXXX..\n...................XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n............................................................\n............................................................''') == '3 rotate'\n\nassert solution('''............................................................\n............................................................\n............XXXX..................................XXXX..............\n.....................XXXX........... XXXX.............XXXX...........\n....................XXXXXXXX...... X..XXX..XXXXXXXXXXXXXXXXX...\n...................XXXXXXXXXXXX....X XXXX..XXXXXXXXXXXXXXXXXX..\n...................XX....XXXXXXXXX..X XXXX..XXXXXXXXXXXXXXXXX..\n...................XX.XXXXXXXXXXXXX X XXXX..XXXXXXXXXXXXXXXXX..\n...................XX XXXXXXXXXXXXX X XXXX..XXXXXXXXXXXXXXXXX..\n...................XX XX XXXXXXXXX X XX XXXX..XXXXXXXXXXXXX..\n...................XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXXX..XXXXXXXXX..\n...................XX XX XX XX XXXXXXX XX XX XXX"
    },
    {
        "number": 3158,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''.........................................................................\n...................XXXX.......\n...................XXXX.......\n...................................XXXX\n...................................XXXX\n...................XXXX.......\n...................XXXX.......\n.........................................................................'''\n    ) == \"3 pan\\n\"\n    assert solution(\n'''.........................................................................\n...................XXXX.......\n...................XXXX.......\n...................................XXXX\n...................................XXXX\n...................XXXX.......\n...................XXXX.......\n.........................................................................'''\n    ) == \"5 rotate\\n\"\n    assert solution(\n'''.........................................................................\n...................XXXX.......\n...................XXXX.......\n...................................XXXX\n...................................XXXX\n...................XXXX.......\n...................XXXX.......\n.........................................................................'''\n    ) == \"3 zoom in\\n\"\n    assert solution(\n'''.........................................................................\n...................XXXX.......\n...................XXXX.......\n...................................XXXX\n...................................XXXX\n...................XXXX.......\n...................XXXX.......\n.........................................................................'''\n    ) == \"5 rotate\\n\"\n    assert solution(\n'''.........................................................................\n...................XXXX.......\n...................XXXX.......\n...................................XXXX\n...................................XXXX\n...................XXXX.......\n...................XXXX.......\n.........................................................................'''\n    ) == \"3 zoom in\\n\"\n    "
    },
    {
        "number": 3158,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"error\"\nassert solution(\"....XXXX....................................................\") == \"error\"\nassert solution(\"....XXXX..................................XXXX..............\") == \"error\"\nassert solution(\"............................................................\") == \"error\"\nassert solution(\"............................................................\") == \"error\"\n"
    },
    {
        "number": 3158,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('....................................................\\n'\n        '............................................................\\n'\n        '....XXXX....................................................\\n'\n        '....XXXX..................................XXXX..............\\n'\n        '....XXXX...................................XXX..............\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '............................................................\\n'\n        '"
    },
    {
        "number": 3158,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"X..........XXX...X.......X.......X......................XXXXXXXXX.X.............X...........X..........XX.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X"
    },
    {
        "number": 3158,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3158,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 0\\n0 0') == '0 pan'\nassert solution('1 1\\n1 1') == '0 pan'\nassert solution('0 0\\n0 0') == '0 pan'\nassert solution('1 1\\n1 1') == '0 pan'\nassert solution('0 0\\n0 0') == '0 pan'\n"
    },
    {
        "number": 3159,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"8 20\\napples are great!  \\n++++++++++++++++++++\\n+oranges are way better!\\n+#oranges>apples  \\n++++++++++++++++++++\\ncheck out our\\nfresh apples!\\n\") == 'apples are great!\\nfresh apples!\\ncheck out our\\nfresh apples!\\n'\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == '       \\n       \\n       \\n       \\n       \\n'\nassert solution(\"7 7\\n+++++++\\n+ = = +\\n+ + ++ +\\n+ ++ + +\\n+     +\\n+++++++\\n\") == '       \\n       \\n       \\n       \\n       \\n'\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ ++\\n+ ++ ++ ++\\n+     +\\n+++++++\\n\") == '       \\n       \\n       \\n       \\n       \\n'\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ ++\\n+ ++ ++ ++\\n+     +\\n+++++++\\n\") == '       \\n       \\n       \\n       \\n       \\n'\n"
    },
    {
        "number": 3159,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n8 20\n apples are great!  \n++++++++++++++++++++\n+ oranges are      +\n+ way better!      +\n+ #oranges>apples  +\n++++++++++++++++++++\n check out our      \n fresh apples!      \n''') == '''    apples are great!\n                    \n                    \n                    \n                    \n                    \n check out our      \n fresh apples!      \n'''\nassert solution('''\n8 20\n+++\n+  =\n+ +++\n+ + +\n+ +++\n+     +\n+++\nSample Input 3:\n7 7\n+++++++\n+     =\n+ +++ +\n+ + + +\n+ +++ +\n+     +\n+++++++\nSample Output 3:\n       \n       \n       \n       \n       \n       \n       "
    },
    {
        "number": 3159,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''8 20\n apples are great!  \n++++++++++++++++++++\n+ oranges are      +\n+ way better!      +\n+ #oranges>apples  +\n++++++++++++++++++++\n check out our      \n fresh apples!      \n''') == 'apples are great!  \\n\\n\\n\\n\\ncheck out our      \\nfresh apples!\\n'\n\nassert solution('''8 10\n+++++++++++\n++++  =  +\n+  + +++ +\n+   + + + +\n+ =+++ ++++\n+ +++   +\n+ +++  = +\n+++++++++++\n''') == '+++++++++++\\n++++  =  +\\n+  + +++ +\\n+   + + + +\\n+ =+++ ++++\\n+ +++   +\\n+ +++  = +\\n+++++++++++\\n'\n\nassert solution('''8 8\n++ +++ - + ++ -\n+ + +++   + +++\n+ +++ ++ ++   +\n++ +++ ++ ++   +\n+ ++++   + +++\n+ +++ ++ ++ + +\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++ ++ ++ ++\n+ ++ ++"
    },
    {
        "number": 3159,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\\\n8 19\n *=*\n+++++\n++++++\n++++++\n++++++\n++++=+\n+++++=+\n+++*=++\n''') == '''\\\n    *=*\n    +++++\n    ++++++\n    ++++++\n    ++++++\n    ++++=+\n    +++++=+\n    +++*=++\n'''\nassert solution('''\\\n7 7\n+++++\n+ + +\n+ + +\n+ + +\n+ = +\n+++++\n''') == '''\\\n    +\n    +\n    +\n    +\n    +\n    +\n'''\nassert solution('''\\\n8 10\n++++++\n+ ++ ++\n++ ++ ++\n+ ++ ++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n''') == '''\\\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n'''\nassert solution('''\\\n9 8\n++++++\n+ ++ ++\n++ ++ ++\n+ ++ ++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n''') == '''\\\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n'''\nassert solution('''\\\n12 1\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n''') == '''\\\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n++++++\n'''\n"
    },
    {
        "number": 3159,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n    8 20\n    apples are great!  \n    ++++++++++++++++++++\n    + oranges are      +\n    + way better!      +\n    + #oranges>apples  +\n    ++++++++++++++++++++\n    check out our      \n    fresh apples!      \n    ''') == 'apples are great!  \\n' + \\\n    '++++++++++++++++++++\\n' + \\\n    '+ oranges are      +\\n' + \\\n    '+ way better!      +\\n' + \\\n    '+ #oranges>apples  +\\n' + \\\n    '++++++++++++++++++++\\n' + \\\n    'check out our      \\n' + \\\n    'fresh apples!      \\n'\n\nassert solution('''\n    7 7\n    +++++++\n    +  =  +\n    + +++ +\n    + + + +\n    + +++ +\n    +     +\n    +++++++\n    ''') == '       \\n       \\n       \\n       \\n       \\n'\n\nassert solution('''\n    7 7\n    +++++++\n    +  =  +\n    + +++ +\n    + + + +\n    + +++ +\n    +     +\n    +++++++\n    ''') == '       \\n       \\n       \\n       \\n       \\n'\n\nassert solution('''\n    8 10\n    ##########\n    #oo#oo#oo#\n    #oo#oo#oo#\n    #oo#oo#oo#\n    #oo#oo#oo#\n    #oo#oo#oo#\n    #oo#oo#oo#\n    ##########\n    ''') == '       \\n       \\n       \\n       \\n       \\n       \\n'\n\nassert solution('''\n    8 10\n    ##########\n    #oooo#oooo#\n    #oooo#oooo#\n    #oooo#oooo#\n    #oooo#oooo#\n    #oooo#oooo#\n    #oooo#oooo#\n    ##########\n    ''') == '       \\n       \\n       \\n       \\n       \\n       \\n'"
    },
    {
        "number": 3159,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 20\\napples are great!  \\n++++++++++++++++++++\\n+ oranges are      +\\n+ way better!      +\\n+ #oranges>apples  +\\n++++++++++++++++++++\\ncheck out our      \\nfresh apples!      \\n') == 'apples are great!  \\n                    \\n'\nassert solution('6 6\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\ncheck out our      \\nfresh apples!      \\n') == '      \\n      \\n      \\n      \\n      \\n      \\n'\n"
    },
    {
        "number": 3159,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3159,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n8 20\n apples are great!  \n++++++++++++++++++++\n+ oranges are      +\n+ way better!      +\n+ #oranges>apples  +\n++++++++++++++++++++\n check out our      \n fresh apples!      \n''') == '''apples are great!'''\n\nassert solution('''\n4 1\n?*?*?+\n?**+*??\n++?*???\n++?*???\n+++++++\n++?*???\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n+++++++\n++++"
    },
    {
        "number": 3159,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n8 20\n apples are great!  \n++++++++++++++++++++\n+ oranges are      +\n+ way better!      +\n+ #oranges>apples  +\n++++++++++++++++++++\n check out our      \n fresh apples!      \n'''\n    ) == '''      \napples are great!  \n                    \n                    \n                    \n                    \n                    \n check out our      \n fresh apples!      \n'''\n\nassert solution(\n'''\n7 7\n+++++++\n+  =  +\n+ +++ +\n+ + + +\n+ +++ +\n+     +\n+++++++\n'''\n) == '''      \n       \n       \n       \n       \n       \n       \n       \n       \n'''\n"
    },
    {
        "number": 3159,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('\\n'.join(('8 20',\n       'apples are great!  ',\n       '++++++++++++++++++++',\n       '+ oranges are      +',\n       '+ way better!      +',\n       '+ #oranges>apples  +',\n       '++++++++++++++++++++',\n       'check out our      ',\n       'fresh apples!      '))) == 'apples are great!  \\nfresh apples!\\ncheck out our\\n'\nassert solution('\\n'.join(('8 7',\n       '+++++++',\n       '+  =  +',\n       '+ +++ +',\n       '+ + + +',\n       '+ +++ +',\n       '+     +',\n       '+++++++',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n       '+     +',\n    "
    },
    {
        "number": 3160,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('HH') == '2.0'\nassert solution('H?') == '1.5'\nassert solution('H?H') == '3.0'\nassert solution('HTHTH') == '3.0'\nassert solution('HTHTHHTHTHH') == '6.0'\n"
    },
    {
        "number": 3160,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('HH') == '2.0'\nassert solution('H?') == '1.5'\nassert solution('HHTHHTTTT') == '1.0'\nassert solution('HHTHHHTTTH') == '1.0'\nassert solution('HHTHHHTHHHH') == '1.0'\n"
    },
    {
        "number": 3160,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('HH') == '2.0'\nassert solution('H?') == '1.5'\nprint(solution(stdin))\n\n>>> 2.0\n>>> 1.5\n"
    },
    {
        "number": 3160,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('HTH') == '2.0'\nassert solution('HT') == '1.5'\nassert solution('HTHHHHTHT') == '2.0'\nassert solution('HTHTTHTHTHTTHTHT') == '2.0'\nassert solution('HTTH') == '1.5'\n"
    },
    {
        "number": 3160,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1.5\""
    },
    {
        "number": 3160,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"HH\") == '2.0'\nassert solution(\"H?\") == '1.5'\nassert solution(\"T\") == '1.0'\nassert solution(\"TT\") == '0.5'\nassert solution(\"HHTH\") == '1.5'\n"
    },
    {
        "number": 3160,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"HH\") == 2.0\nassert solution(\"H?\") == 1.5\nassert solution(\"HHH\") == 4.0\nassert solution(\"HTH\") == 3.0\nassert solution(\"HT\") == 1.5\n"
    },
    {
        "number": 3160,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('HTHHTTHTHTHTHTHTHTHTHTH') == 1.5\nassert solution('HHHHHT') == 2.0\nassert solution('HTHHTTHHT') == 1.5\nassert solution('HTHHHHH') == 2.0\nassert solution('HHTHHTTH') == 2.0\n"
    },
    {
        "number": 3160,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('HH') == '2.0'\nassert solution('H?') == '1.5'\nassert solution('H?H') == '1.5'\nassert solution('H') == '2.0'\nassert solution('H?') == '1.5'\n"
    },
    {
        "number": 3160,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"HH\") == \"2.0\"\nassert solution(\"H?\") == \"1.5\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3161,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3161,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3161,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\n"
    },
    {
        "number": 3161,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n0001\n0001\n0011\n1110''') == '1'\nassert solution('''4\n1111\n1111\n1111\n1111''') == '6'\nassert solution('''8\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000\n0000''') == '12'\nassert solution('''16\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000"
    },
    {
        "number": 3161,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n0001\n0001\n0011\n1110''') == '1'\nassert solution('''4\n1111\n1111\n1111\n1111''') == '6'\nassert solution('''4\n0101\n0101\n0101\n0101''') == '0'\nassert solution('''8\n1101\n1101\n1101\n1101\n1101\n1101\n1101\n1101\n1101''') == '25'\nassert solution('''16\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111''') == '115'\n"
    },
    {
        "number": 3161,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin.strip()\n"
    },
    {
        "number": 3161,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"\\n\\n\\n\") == \"\"\nassert solution(\"\\n\\n\\n\\n\") == \"\"\n\nassert solution(\"4\") == \"0\"\n"
    },
    {
        "number": 3161,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('11') == '11'\nassert solution('1111') == '11'\n"
    },
    {
        "number": 3161,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''4\n0001\n0001\n0011\n1110''') == '1'\nassert solution('''10\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111''') == '6'\nassert solution('''16\n
    },
    {
        "number": 3161,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n0001\n0001\n0011\n1110''') == '1'\nassert solution('''3\n0001\n0001\n1110\n''') == '1'\nassert solution('''6\n1111\n1111\n1111\n1111\n1110\n1111\n''') == '6'\nassert solution('''8\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1110\n''') == '0'\nassert solution('''8\n1111\n1110\n1001\n1111\n1100\n1010\n1000\n''') == '7'\n"
    },
    {
        "number": 3162,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2h 1 4 1') == '0'\nassert solution('2h 1 4 1 v 2 4 2') == '0'\nassert solution('2h 1 4 1 v 2 4 2 h 10 2 2') == '0'\nassert solution('2h 1 4 1 v 2 4 2 h 10 2 2 v 11 2 3') == '2'\nassert solution('2h 1 4 1 v 2 4 2 h 10 2 2 v 11 2 3 v 5 10 3') == '4'\n"
    },
    {
        "number": 3162,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('h1 1 4 1') == '2'\nassert solution('v 2 4 2') == '4'\nassert solution('h 10 2 2') == '2'\nassert solution('v 11 2 3') == '4'\n"
    },
    {
        "number": 3162,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''h 1 4 1\nv 2 4 2\nh 10 2 2\nv 11 2 3'''\n) == '2'\n\nassert solution(\n'''v 1 4 1\nh 5 10 2\nv 1 10 1\nv 5 10 3'''\n) == '4'\n\nassert solution(\n'''v 1 10 1\nv 5 10 3'''\n) == '1'\n\nassert solution(\n'''h 1 10 1\nh 5 10 2\nv 1 10 1\nv 5 10 3'''\n) == '2'\n"
    },
    {
        "number": 3162,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''h 1 4 1\nv 2 4 2\nh 10 2 2\nv 11 2 3''') == \"2\"\nassert solution('''h 1 10 1\nh 5 10 2\nv 1 10 1\nv 5 10 3''') == \"4\"\nassert solution('''v 1 4 1\nv 2 4 2\nh 10 2 2\nh 11 2 3''') == \"2\"\nassert solution('''v 1 10 1\nv 5 10 2\nh 1 10 1\nh 5 10 2''') == \"4\"\nassert solution('''h 1 4 1\nv 2 4 2\nv 10 2 2\nh 5 10 2\nh 11 2 3''') == \"2\"\n"
    },
    {
        "number": 3162,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('h 1 4 1\\n' +\n'v 2 4 2\\n' +\n'h 10 2 2\\n' +\n'v 11 2 3\\n') == '2'\nassert solution('h 1 10 1\\n' +\n'h 5 10 2\\n' +\n'v 1 10 1\\n' +\n'v 5 10 3\\n') == '4'\nassert solution('h 1 10 1\\n' +\n'h 5 10 2\\n' +\n'v 1 10 1\\n' +\n'v 5 10 3\\n') == '4'\nassert solution('h 1 4 1\\n' +\n'v 2 4 2\\n' +\n'h 10 2 2\\n' +\n'v 11 2 3\\n') == '2'\nassert solution('h 1 10 1\\n' +\n'h 5 10 2\\n' +\n'v 1 10 1\\n' +\n'v 5 10 3\\n') == '4'\n"
    },
    {
        "number": 3162,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('h 1 4 1') == ''\nassert solution('v 2 4 2') == ''\nassert solution('h 10 2 2') == ''\nassert solution('v 11 2 3') == ''\n"
    },
    {
        "number": 3162,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('h 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3') == '2'\nassert solution('h 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3') == '4'\nassert solution('h 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3') == '4'\nassert solution('h 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3') == '4'\nassert solution('h 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3') == '4'\n"
    },
    {
        "number": 3162,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n1\nh 1 4 1\nv 2 4 2\nh 10 2 2\nv 11 2 3\n''') == '2'\nassert solution('''\n1\nv 1 10 1\nv 5 10 2\nh 1 10 1\nh 5 10 2\n''') == '4'\nassert solution(\n'''\n2\nh 1 10 1\nh 5 10 2\nv 1 10 1\nv 5 10 3\n''') == '6'\nassert solution(\n'''\n1\nh 1 4 1\nh 1 4 1\nh 1 4 1\n''') == '4'\nassert solution(\n'''\n1\nv 1 10 1\nv 1 10 1\nv 1 10 1\nv 1 10 1\n''') == '4'\n"
    },
    {
        "number": 3162,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('h 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3') == '2'\nassert solution('h 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3') == '4'\nassert solution('h 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3') == '2'\nassert solution('h 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3') == '4'\nassert solution('h 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3') == '2'\n"
    },
    {
        "number": 3162,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"h 1 4 1\nh 2 4 2\nv 1 4 1\nv 2 4 2\"\"\") == \"2\"\nassert solution(\"\"\"h 1 10 1\nh 5 10 2\nv 1 10 1\nv 5 10 3\"\"\") == \"4\"\n\"\"\"\n\nimport sys\nimport re"
    },
    {
        "number": 3163,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3163,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\\n4 2 3\\n6 5 1\\n0 7 8\") == \"2\\n\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\") == \"4\\n\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\") == \"4\\n\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\") == \"4\\n\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\") == \"4\\n\"\n"
    },
    {
        "number": 3163,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3163,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 4\n1 0 2 0\n3 5 4 0\n2 1 0 0\n3 0 4 5''') == '2'\nassert solution('''2 3\n1 2 3\n4 5 6\n7 8 0\n4 2 3\n6 5 1\n0 7 8''') == '-1'\n'''\n"
    },
    {
        "number": 3163,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == expected\n"
    },
    {
        "number": 3163,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == -1\nassert solution('1 1') == 0\nassert solution('1 1 1') == 0\nassert solution('1 1 2') == -1\nassert solution('1 1 2 3') == -1\n"
    },
    {
        "number": 3163,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 4\") == \"2\"\nassert solution(\"3 3\") == \"4\"\nassert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\\n4 2 3\\n6 5 1\\n0 7 8\\n\") == \"4\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\\n\") == \"4\"\nassert solution(\"5 6\\n8 9 0\\n1 2 3 4 5\\n6 7 8 9\\n7 6 5 4 3 2 1 0\\n8 7 6 5 4 3 2 1 0\\n8 7 6 5 4 3 2 1 0\") == \"3\"\n"
    },
    {
        "number": 3163,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 4\n1 0 2 0\n3 5 4 0\n2 1 0 0\n3 0 4 5''') == '2'\nassert solution('''3 3\n1 2 3\n4 5 6\n7 8 0\n4 2 3\n6 5 1\n0 7 8''') == '4'\nassert solution('''2 1\n1 0 2\n3 0 4\n2 1 0''') == '-1'\nassert solution('''2 2\n1 0 2\n3 0 4\n2 1 0''') == '-1'\nassert solution('''2 2\n1 0 2\n3 0 4\n2 1 0''') == '-1'\n"
    },
    {
        "number": 3163,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 4\n1 0 2 0\n3 5 4 0\n2 1 0 0\n3 0 4 5''') == '2'\nassert solution('''3 3\n1 2 3\n4 5 6\n7 8 0\n4 2 3\n6 5 1\n0 7 8''') == '-1'\n'''\nassert solution('''10 7\n1 2 3 4 5 6 7 8 9 10 0\n2 3 0 0 5 0 0 0 0 0\n4 5 6 0 0 0 0 0 0 0\n6 7 8 9 0 0 0 0 0 0\n10 0 0 0 0 0 0 0 0 0\n8 9 0 0 0 0 0 0 0 0\n6 5 0 0 0 0 0 0 0 0\n4 3 0 0 0 0 0 0 0 0\n2 1 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n''') == '4'\n'''\n"
    },
    {
        "number": 3163,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2\\n3 4\\n2 1') == '-1'\nassert solution('2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5') == '2'\nassert solution('2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5') == '4'\nassert solution('3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8') == '4'\nassert solution('3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8') == '4'\n"
    },
    {
        "number": 3164,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '2'\nassert solution('2\\n1 2') == '2'\nassert solution('3\\n1 2 3') == '2'\nassert solution('4\\n1 2 3 4') == '2'\nassert solution('5\\n1 2 3 4 5') == '4'\n"
    },
    {
        "number": 3164,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n6\n1 2 3 3 4 2\n\"\"\") == \"2\"\nassert solution(\n\"\"\"\n8\n1 2 1 3 1 3 1 2\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3164,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3 3 4 2') == '2'\nassert solution('1 2 1 3 1 3 1 2') == '4'\nassert solution('1 2 1 3 1 3 1 2 3 1 1 1 1 1 1') == '8'\nassert solution('1 2 1 3 1 3 1 2 3 1 1 1 1 1 1 1') == '4'\n"
    },
    {
        "number": 3164,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\\n\") == \"1\"\nassert solution(\"2\\n2\\n\") == \"2\"\nassert solution(\"3\\n3\\n\") == \"1\"\nassert solution(\"4\\n4\\n\") == \"2\"\nassert solution(\"5\\n5\\n\") == \"2\"\n"
    },
    {
        "number": 3164,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '''1 2 3 3 4 2'''\n) == '2'\n\nassert solution(\n    '''1 2 1 3 1 3 1 2'''\n) == '4'\n"
    },
    {
        "number": 3164,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3164,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6\n1 2 3 3 4 2''') == '2'\nassert solution('''8\n1 2 1 3 1 3 1 2''') == '4'\nassert solution('''2\n1 2''') == '2'\nassert solution('''3\n1 2 1''') == '2'\nassert solution('''10\n1 1 2 1 2 1 2 1 2 1 2 1''') == '2'\n"
    },
    {
        "number": 3164,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input(\"\")) == \"1 2 3 4 2\"\n\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nBelow is the implementation of the above approach:"
    },
    {
        "number": 3164,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 1 3 1 3 1 2\") == \"2\"\nassert solution(\"1 2 1 3 1 3 1 2\") == \"4\"\nassert solution(\"1 2 1 3 1 3 1 2\") == \"4\"\nassert solution(\"1 2 1 3 1 3 1 2\") == \"4\"\nassert solution(\"1 2 1 3 1 3 1 2\") == \"4\"\n"
    },
    {
        "number": 3164,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\\n1\\n2\\n2\") == 2\nassert solution(\"3\\n3\\n3\") == 1\nassert solution(\"7\\n1 2 3 4 3 1 2 1\") == 4\nassert solution(\"4\\n1 2 1 3 2\") == 3\nassert solution(\"1\\n2\\n1\") == 2\n"
    },
    {
        "number": 3165,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2 2') == '4'\nassert solution('1 1 1') == '0'\nassert solution('2 2 1') == '0'\nassert solution('2 2 2 1') == '4'\nassert solution('1 1 1 2') == '2'\n'''\n\nimport sys"
    },
    {
        "number": 3165,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 2 2\n1 1 1\n2 2 1\n2 2 2 1\n1 1 1 2\n''') == '4\\n0\\n'\nassert solution('''2 2 2\n1 1 1\n2 2 2\n2 2 2 1\n1 1 1 2\n''') == '4\\n2\\n'\nassert solution('''2 2 2\n1 1 1\n2 2 2\n2 2 2 1\n1 1 1 2\n''') == '4\\n2\\n'\nassert solution('''2 2 2\n1 1 1\n2 2 2\n2 2 2 1\n1 1 1 2\n''') == '4\\n2\\n'\nassert solution('''2 2 2\n1 1 1\n2 2 2\n2 2 2 1\n1 1 1 2\n''') == '4\\n2\\n'\n"
    },
    {
        "number": 3165,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 2 2\n1 1 1\n2 2 1\n2 2 2 1\n1 1 1 2\n''') == '0\\n2\\n'\nassert solution('''3 3 3\n1 1 1\n2 2 2\n1 1 1\n2 2 2\n1 1 1\n2 2 1\n1 1 1\n2 2 2 1\n1 1 1 2\n''') == '2\\n0\\n'\nassert solution('''4 4 4\n1 1 1 1\n2 2 2 2\n1 1 1 1\n1 1 1 1\n2 2 2 2\n1 1 1 1\n1 1 1 1\n2 2 2 2\n1 1 1 1\n1 1 1 1\n''') == '2\\n4\\n'\nassert solution('''3 4 1\n1 1 1 1\n2 2 2 2\n2 2 2 2\n2 2 2 2\n1 1 1 1\n1 1 1 1\n1 1 1 1\n2 2 2 2\n1 1 1 1\n1 1 1 1\n''') == '2\\n4\\n'\n\nassert solution('''5 4 4\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n2 2 2 2 2\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n''') == '6\\n0\\n'"
    },
    {
        "number": 3165,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"2 2 2\n1 1 1\n2 2 1\n2 2 2 1\n1 1 1 2\n\"\"\") == \"\"\"4\n0\n\"\"\"\nassert solution(\n\"\"\"2 2 2\n1 1 1\n2 2 2\n2 2 2 1\n1 1 1 2\n\"\"\") == \"\"\"4\n2\n\"\"\"\n"
    },
    {
        "number": 3165,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == result\n"
    },
    {
        "number": 3165,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3165,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\n'''\n\nimport sys\nfrom functools import reduce\n\nnum_of_rows = int(sys.stdin.readline().strip())\nnum_of_columns = int(sys.stdin.readline().strip())\nnum_of_rooks = int(sys.stdin.readline().strip())\n\ninit_rook_power = sys.stdin.readline().strip()\nrooks_power = sys.stdin.readline().strip()"
    },
    {
        "number": 3165,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 2 2\") == \"0\"\nassert solution(\"2 2 1\") == \"4\"\nassert solution(\"2 2 2 1\") == \"4\"\nassert solution(\"1 1 1 2\") == \"2\"\nassert solution(\"1 1 1 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3165,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 2 2\n1 1 1\n2 2 1\n2 2 2 1\n1 1 1 2\n''') == '4\\n0\\n'\n'''\nassert solution('''2 2 2\n1 1 1\n2 2 2\n2 2 2 1\n1 1 1 2\n''') == '4\\n2\\n'\n'''\nassert solution('''2 2 2\n2 2 1\n2 2 1\n2 2 2 1\n1 1 1 2\n''') == '4\\n2\\n'\n'''\nassert solution('''2 2 2\n1 1 1\n2 2 2\n2 2 2 1\n1 1 1 2\n''') == '4\\n2\\n'\n'''\nassert solution('''2 2 2\n2 2 1\n2 2 1\n2 2 2 1\n1 1 1 2\n''') == '4\\n2\\n'\n'''\n"
    },
    {
        "number": 3165,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2 2') == '4\\n0'\nassert solution('1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2') == '4\\n0'\nassert solution('3 3 3\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2') == '1\\n0'\nassert solution('3 3 3\\n1 1 1\\n2 2 2\\n2 2 2 1\\n2 2 2 1') == '1\\n0'\nassert solution('4 4 4\\n1 1 1 1\\n2 2 2 2\\n2 2 2 2 1\\n2 2 2 2 1') == '4\\n1\\n0'\n"
    },
    {
        "number": 3166,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 2\") == \"1\"\nassert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\") == \"1\"\nassert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\") == \"impossible\"\nassert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\") == \"impossible\"\nassert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 0 1 0\\n0 2\") == \"impossible\"\n"
    },
    {
        "number": 3166,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 2\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n0 2''') == '1'\nassert solution('''4 2\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n1 2''') == 'impossible'\nassert solution('''8 3\n1 2 3 4 5 6 7 8\n3 0 0 0 1 1 1 1\n1 1 1 1 0 0 0 0\n1 1 1 0 0 0 0 0\n1 1 1 0 0 0 0 0\n1 1 1 0 0 0 0 0\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1''') == '2'\nassert solution('''6 5\n1 2 3 4 5 6\n2 0 0 0 0 1\n0 1 1 1 0 0\n0 0 0 0 0 0\n0 1 1 1 0 0\n0 0 0 0 0 0\n3 1 1 1 1 1\n1 1 1 1 1 1''') == '5'\nassert solution('''8 8\n1 2 3 4 5 6 7 8\n2 0 0 0 0 1 1 1\n1 1 1 1 0 0 0 0\n1 1 1 0 0 0 0 0\n1 1 1 0 0 0 0 0\n1 1 1 0 0 0 0 0\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1''') == 'impossible'\n"
    },
    {
        "number": 3166,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    4 2\n    0 0 1 1\n    1 0 0 1\n    0 1 0 0\n    0 0 1 0\n    0 2\n    \"\"\".strip()\n    ) == \"1\"\nassert solution(\n    \"\"\"\n    4 2\n    0 0 1 1\n    1 0 0 1\n    0 1 0 0\n    0 0 1 0\n    1 2\n    \"\"\".strip()\n    ) == \"impossible\""
    },
    {
        "number": 3166,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 1 0 0\\n1 0 0 0\\n0 1 0 0\\n0 0 1 0') == '1'\nassert solution('1 1 1 1\\n0 0 0 0\\n1 1 1 1\\n1 1 1 1\\n0 0 0 0\\n0 0 0 0') == 'impossible'\nassert solution('1 1 1 1\\n1 1 1 1\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0') == 'impossible'\nassert solution('4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2') == '1'\nassert solution('1 1 1 1\\n1 1 1 1\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0') == 'impossible'\n"
    },
    {
        "number": 3166,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '2 2\\n'\n    '0 0 1 1\\n'\n    '1 0 0 1\\n'\n    '0 1 0 0\\n'\n    '0 0 1 0\\n'\n    '0 2'\n    ) == '1'\n\nassert solution(\n    '3 3\\n'\n    '0 0 1 1\\n'\n    '1 0 0 1\\n'\n    '0 1 0 0\\n'\n    '0 0 1 0\\n'\n    '0 2'\n    ) == 'impossible'\n\nassert solution(\n    '4 3\\n'\n    '0 0 1 1\\n'\n    '1 0 0 1\\n'\n    '0 1 0 0\\n'\n    '0 0 1 0\\n'\n    '0 2'\n    ) == 'impossible'\n\nassert solution(\n    '5 6\\n'\n    '0 0 1 1 1\\n'\n    '1 0 0 1 1\\n'\n    '0 1 0 0 1\\n'\n    '0 0 1 0 1\\n'\n    '0 2'\n    ) == 'impossible'\n\nassert solution(\n    '6 6\\n'\n    '0 0 1 1 1 1\\n'\n    '1 0 0 1 1 1\\n'\n    '0 1 0 0 1 1\\n'\n    '0 0 1 0 0 1\\n'\n    '0 2'\n    ) == 'impossible'"
    },
    {
        "number": 3166,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2') == 1\nassert solution('2 1\\n1 0') == 2\nassert solution('2 1\\n2 0') == 1\nassert solution('2 1\\n2 0') == 1\nassert solution('2 1\\n2 0') == 1\n"
    },
    {
        "number": 3166,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"impossible\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3166,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n4 2\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n0 2\n\"\"\".strip()) == '1'\n\nassert solution(\n\"\"\"\n4 2\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n1 2\n\"\"\".strip()) == 'impossible'\n\nassert solution(\n\"\"\"\n4 4\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n0 2\n\"\"\".strip()) == '0'\n\nassert solution(\n\"\"\"\n2 2\n0 1\n1 0\n\"\"\".strip()) == '0'\n\nassert solution(\n\"\"\"\n8 4\n1 2 1 0 0 1 2 1\n0 1 0 1 1 1 0 0\n0 0 1 0 1 1 0 0\n0 0 0 0 1 1 1 1\n0 1 2 1 0 0 0 1\n0 0 1 1 1 1 1 1\n0 0 1 1 1 1 1 1\n0 0 0 1 1 1 1 1\n\"\"\".strip()) == '2'"
    },
    {
        "number": 3166,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"4 2\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n0 2\n\"\"\") == \"1\"\nassert solution(\"\"\"4 3\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n1 1\n\"\"\") == \"impossible\"\nassert solution(\"\"\"3 3\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n2\n\"\"\") == \"1\"\nassert solution(\"\"\"7 4\n0 0 1 1 1 1 1\n1 0 0 1 1 1 1\n0 1 0 0 1 1 1\n0 0 1 0 0 1 1\n0 0 0 1 0 0 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n\"\"\") == \"4\"\nassert solution(\"\"\"10 6\n0 0 1 1 1 1 1 1 1 1 1 1\n1 0 0 1 1 1 1 1 1 1 1 1\n0 1 0 0 1 1 1 1 1 1 1 1\n0 0 1 0 0 1 1 1 1 1 1 1\n0 0 0 1 0 0 1 1 1 1 1 1\n0 0 0 0 1 0 0 1 1 1 1 1\n0 0 0 0 0 1 0 0 1 1 1 1\n0 0 0 0 0 0 1 0 0 1 1 1\n0 0 0 0 0 0 0 1 0 0 1 1\n0 0 0 0 0 0 0 0 1 0 0 1\n0 0 0 0 0 0 0 0 0 1 0 0\n0 0 0 0 0 0 0 0 0 0 1 0\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3166,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 3167,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(open(\"test_1\").read()) == open(\"test_1_solution\").read()\nassert solution(open(\"test_2\").read()) == open(\"test_2_solution\").read()\nassert solution(open(\"test_3\").read()) == open(\"test_3_solution\").read()\nprint(solution(open(\"input\").read()))\n\n\"\"\""
    },
    {
        "number": 3167,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3167,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 3167,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n"
    },
    {
        "number": 3167,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''10 3\n3 7 10\n3\n0 10\n2 6\n7 7''') == \"8\\n2\\n1\\n\"\nassert solution('''1 10\n1 1\n10 9\n2 8\n3 8\n4 8\n5 8\n6 8\n7 8\n8 8\n9 8\n10 8''') == \"8\\n8\\n8\\n\"\nassert solution('''1 3\n1 1 2 1\n3\n0 9\n2 6\n7 7\nSample Output 3:\n35\n18\n3\n''') == \"8\\n2\\n1\\n\"\nassert solution('''1 1\n1 1\n10 9\n2 8\n3 8\n4 8\n5 8\n6 8\n7 8\n8 8\n9 8\n10 8''') == \"8\\n8\\n8\\n\"\nassert solution('''4 4\n1 1 2 1\n3\n0 9\n2 6\n7 7\n3\n3\n2 3\n3\n3\n2 3\n4 3\n2 1\n1\n1\n1\n1\n2\n2\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n1\n1\n2\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 3167,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10 11\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7\\n0 10\\n2 6\\n7 7') == '3518\\n18\\n3\\n'\nassert solution('1 2 3 4 5 6 7 8 9 10 11\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7\\n0 10\\n2 6\\n7 7') == '8\\n2\\n1\\n'\nassert solution('1 2 3 4 5 6 7 8 9 10 11\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7\\n0 10\\n2 6\\n7 7') == '8\\n2\\n1\\n'\n\"\"\"\n"
    },
    {
        "number": 3167,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n3') == '35'\nassert solution('3\\n3') == '18'\nassert solution('10\\n3') == '8'\nassert solution('11\\n3') == '2'\nassert solution('7\\n3') == '1'\n"
    },
    {
        "number": 3167,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10 4\n1 1 2 1\n3\n0 9\n2 6\n7 7''') == '35'\nassert solution('''11 3\n3 7 10\n3\n0 10\n2 6\n7 7''') == '8'\nassert solution('''5 5\n1 1 2 1\n2\n1 2\n3 3\n4 4\n5 5''') == '12'\n'''\n"
    },
    {
        "number": 3167,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3167,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n10 4\n1 1 2 1\n3\n0 9\n2 6\n7 7\n\"\"\") == \"\"\"\n35\n18\n3\n\"\"\"\nassert solution(\n\"\"\"\n10 9\n1 1 2 1\n3\n0 9\n2 6\n7 7\n\"\"\") == \"\"\"\n8\n2\n1\n\"\"\"\n"
    },
    {
        "number": 3168,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))"
    },
    {
        "number": 3168,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\\n0\"\nassert solution(\"2\") == \"1\\n0\"\nassert solution(\"3\") == \"1\\n0\"\nassert solution(\"4\") == \"1\\n0\"\n"
    },
    {
        "number": 3168,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(open(\"solution.txt\").read()) == open(\"expected_output.txt\").read()\nprint(\"Tests passed.\")\n"
    },
    {
        "number": 3168,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n4\n1\n2\n3\n4\n''') == '0\\n1\\n3\\n6'\n\nassert solution('''\n5\n3\n2\n4\n1\n5\n''') == '0\\n1\\n2\\n4\\n6'\n\nassert solution('''\n6\n5\n3\n2\n4\n1\n5\n''') == '0\\n1\\n2\\n4\\n5'\n\nassert solution('''\n5\n3\n4\n2\n1\n5\n''') == '0\\n1\\n2\\n3\\n4'\n\nassert solution('''\n1\n5\n''') == '0\\n1'"
    },
    {
        "number": 3168,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n1\n2\n3\n4''') == '0\\n1\\n3\\n6'\nassert solution('''5\n3\n2\n4\n1\n5\n''') == '0\\n1\\n2\\n4\\n6'\n"
    },
    {
        "number": 3168,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3168,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\") == \"0\"\nassert solution(\"3\\n2\\n3\") == \"1\"\nassert solution(\"4\\n2\\n3\\n4\") == \"3\"\nassert solution(\"5\\n3\\n2\\n4\\n1\\n5\") == \"2\"\nassert solution(\"3\\n2\\n3\") == \"0\"\n"
    },
    {
        "number": 3168,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n4\n1\n2\n3\n4\n'''\n    ) == '0\\n1\\n3\\n6'\n\nassert solution(\n'''\n5\n3\n2\n4\n1\n5\n'''\n    ) == '0\\n1\\n2\\n4\\n6'\n\nassert solution(\n'''\n8\n1\n2\n3\n4\n5\n6\n7\n8\n9\n'''\n    ) == '0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8'\n\nassert solution(\n'''\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n'''\n    ) == '0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10'\n\nassert solution(\n'''\n100\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n'''\n    ) == '0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99'"
    },
    {
        "number": 3168,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n1\n2\n3\n4''') == '0\\n1\\n3\\n6'\nassert solution('''5\n3\n2\n4\n1\n5''') == '0\\n1\\n2\\n4\\n6'\nassert solution('''6\n4\n2\n5\n1\n3\n6''') == '0\\n1\\n2\\n3\\n4\\n5'\nassert solution('''7\n4\n2\n5\n1\n3\n6\n7''') == '0\\n1\\n2\\n3\\n4\\n5\\n6'\nassert solution('''8\n5\n2\n4\n1\n3\n6\n7\n8''') == '0\\n1\\n2\\n3\\n4\\n5\\n6\\n7'\n"
    },
    {
        "number": 3168,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n1\n2\n3\n4''') == '0\\n1\\n3\\n6'\nassert solution('''5\n3\n2\n4\n1\n5''') == '0\\n1\\n2\\n4\\n6'\nassert solution('''7\n3\n2\n4\n1\n5\n7\n''') == '0\\n1\\n2\\n4\\n5\\n7'\nassert solution('''8\n3\n2\n4\n1\n5\n7\n''') == '0\\n1\\n2\\n4\\n5\\n7\\n8'\nassert solution('''9\n3\n2\n4\n1\n5\n7\n''') == '0\\n1\\n2\\n4\\n5\\n7\\n8\\n9'\n"
    },
    {
        "number": 3169,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n4\n1 3 2 2\n1 1 3 2\n2 4 7 3\n3 3 5 3\n\"\"\") == \"2 4 1 3\"\n\nassert solution(\n\"\"\"\n0 0 1 1\n1 2 0 3\n2 2 3 3\n4 0 3 1\n\"\"\") == \"4 3 1 2\"\n\nassert solution(\n\"\"\"\n4\n0 0 1 1\n1 2 0 3\n2 2 3 3\n4 0 3 1\n\"\"\") == \"4 3 1 2\"\n\nassert solution(\n\"\"\"\n4\n0 0 1 1\n0 0 1 1\n1 2 0 3\n2 2 3 3\n\"\"\") == \"1 1 1 1\"\n\nassert solution(\n\"\"\"\n8\n1 3 1 2 2 3 2 3\n3 1 3 1 2 1 1 1\n1 3 1 2 1 1 3 1\n1 1 1 1 3 3 3\n2 1 2 1 1 1 1\n3 1 2 1 3 1 3\n3 1 1 1 1 1 1\n2 1 3 1 3 1 3\n\"\"\") == \"1 2 3 1 4 5 1 6 2 7 3 8\"\n"
    },
    {
        "number": 3169,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\\n\") == \"2 4 1 3\"\nassert solution(\"4\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\\n\") == \"4 3 1 2\"\n"
    },
    {
        "number": 3169,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 3169,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 0 1 1') == '4 3 1 2'\nassert solution('1 2 0 3') == '2 4 1 3'\nassert solution('2 2 3 3') == '4 3 1 2'\nassert solution('4 0 3 1') == '4 3 1 2'\nassert solution('1 1 1 1') == '1 1 1 1'\n"
    },
    {
        "number": 3169,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0 0 1 1\") == \"4 3 1 2\"\nassert solution(\"1 2 0 3\") == \"2 4 1 3\"\nassert solution(\"2 2 3 3\") == \"4 3 1 2\"\nassert solution(\"4 0 3 1\") == \"4 3 1 2\"\n"
    },
    {
        "number": 3169,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    '''4\n    1 3 2 2\n    1 1 3 2\n    2 4 7 3\n    3 3 5 3\n    '''\n) == '4 3 1 2'\n\nassert solution(\n    '''5\n    0 0 1 1\n    1 2 0 3\n    2 2 3 3\n    4 0 3 1\n    5 5 5 5\n    '''\n) == '5 5 4 3 2 1 0'\n\nassert solution(\n    '''5\n    1 2 2 2\n    1 1 1 1\n    2 3 3 3\n    3 3 3 3\n    4 4 4 4\n    '''\n) == '4 3 1 2'\n\nassert solution(\n    '''5\n    2 2 2 2\n    1 1 1 1\n    2 3 3 3\n    3 3 3 3\n    4 4 4 4\n    '''\n) == '4 3 1 2'\n\nassert solution(\n    '''7\n    4 3 2 1 2 4 3\n    4 3 2 1 2 4 3\n    4 3 2 1 2 4 3\n    4 3 2 1 2 4 3\n    4 3 2 1 2 4 3\n    4 3 2 1 2 4 3\n    4 3 2 1 2 4 3\n    '''\n) == '7 6 5 4 3 2 1 0'"
    },
    {
        "number": 3169,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n1\\n1') == '1 1 1 1'\nassert solution('1\\n1\\n1\\n1\\n1') == '4 1 3 2'\nassert solution('1\\n1\\n1\\n1\\n1') == '2 4 1 3'\nassert solution('2\\n2\\n2\\n2\\n2') == '2 2 2 2'\nassert solution('2\\n2\\n2\\n2\\n2\\n2') == '2 2 2 2'\n"
    },
    {
        "number": 3169,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 3169,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\\n') == '2 4 1 3'\n\"\"\"\n"
    },
    {
        "number": 3169,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\\n\") == \"2 4 1 3\"\nassert solution(\"2 3 2 2\\n1 1 3 2\\n2 2 3 3\\n4 0 3 1\\n\") == \"4 3 1 2\"\n\"\"\"\n\nfrom math import sqrt\n"
    },
    {
        "number": 3170,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\"\n"
    },
    {
        "number": 3170,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5') == \"Theta wins\"\nassert solution('89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49') == \"Theta wins\"\n\"\"\"\n"
    },
    {
        "number": 3170,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == None\nassert solution('A23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5') == None\nassert solution('23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5') == None\nassert solution('23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5') == None\nassert solution('23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5') == None\n"
    },
    {
        "number": 3170,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(sample1) == 'Theta wins'\nassert solution(sample2) == 'Theta wins'\n\n-----\n\n\"\"\"\n\nn = input().strip()\ncnt = [0]*10\nres = 0\n\nfor i in range(10):\n    cnt[i] = n.count(str(i))\n\nfor i in range(10):\n    if cnt[i]%2==0:\n        res+=cnt[i]//2\n    else:\n        res+=cnt[i]//2+1"
    },
    {
        "number": 3170,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5') == 'Theta wins'\nassert solution('89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49') == 'Theta wins'\nassert solution('B3B13C12P4C7P1D6D5D9D8D2D10D3D11D16D17D18D8D6D7D9D10') == 'Theta loses'\nassert solution('B3B13C12P4C7P1D6D5D9D8D2D10D3D11D16D17D18D8D6D7D9D10') == 'Theta loses'\nassert solution('A3C4D2C5C6D7C8D9D4D5D6D7D8D9D2D3D4D5D6D7D8D9D1D1D1D1D1D1D1D1D1D1D1') == 'Theta loses'\n"
    },
    {
        "number": 3170,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2\n"
    },
    {
        "number": 3170,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\"\nassert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\n"
    },
    {
        "number": 3170,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == None\nassert solution('AJTAJ') == None\nassert solution('AJTAJ24T8Q') == None\nassert solution('AJTAJ24T8Q24T') == None\nassert solution('AJTAJ24T8Q24T9AJ') == None\n"
    },
    {
        "number": 3170,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\"\n"
    },
    {
        "number": 3170,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5') == 'Theta wins'\nassert solution('89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49') == 'Theta wins'\n\"\"\"\n"
    },
    {
        "number": 3171,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 2\n1 charlatan 1\n1 not charlatan 1''') == 'fabulist'\nassert solution('''1 2\n1 fabulist 1 fabulist 2\n''') == 'fabulist'\nassert solution('''2 1\n1 and fabulist 1 fabulist 2\n''') == 'fabulist'\nassert solution('''1 2\n1 truther 1\n1 not truther 1\n1 not truther 2\n1 not truther 3\n1 charlatan 1\n1 not charlatan 1\n''') == 'charlatan'\n'''\n"
    },
    {
        "number": 3171,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2') == 'charlatan'\nassert solution('1 fabulist 1 fabulist 2') == 'fabulist'\nassert solution('1 not charlatan 1') == 'truther'\nassert solution('2 1') == 'fabulist'\nassert solution('1 and fabulist 1 fabulist 2') == 'fabulist'\n"
    },
    {
        "number": 3171,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 3171,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n1 charlatan 1\\n1 not charlatan 1\") == \"charlatan\"\n\"\"\"\n\nimport sys\nsys.path.append(\"./code\")\nfrom test import Test\nfrom solution import Solution\n\ntest = Test(__file__)\ntest.add(\"sample input\", \"charlatan\")\ntest.run()\n\ns = Solution()\n"
    },
    {
        "number": 3171,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 2\n1 fabulist 1\n1 not charlatan 1\n''') == 'fabulist'\nassert solution('''2 1\n1 and fabulist 1 fabulist 2\n''') == 'fabulist'\nassert solution('''3 2\n1 and fabulist 1 fabulist 2\n1 not charlatan 1\n1 charlatan 1\n1 not charlatan 1\n''') == 'fabulist'\nassert solution('''5 2\n1 and fabulist 1 fabulist 2\n1 not charlatan 1\n1 charlatan 1\n1 not charlatan 1\n1 charlatan 1\n1 not charlatan 1\n''') == 'truther'\n'''"
    },
    {
        "number": 3171,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 2\n1 and fabulist 1 fabulist 2''') == 'fabulist'\nassert solution('''1 2\n1 not charlatan 1\n1 not truther 1''') == 'truther'\nassert solution('''1 2\n1 not charlatan 1\n1 truther 1''') == 'truther'\nassert solution('''1 2\n1 fabulist 1 fabulist 2\n1 truther 1\n1 charlatan 1\n1 not truther 1''') == 'charlatan'\nassert solution('''1 2\n1 not charlatan 1\n1 not truther 1\n1 truther 1\n1 fabulist 1 fabulist 2\n1 charlatan 1''') == 'charlatan'\n"
    },
    {
        "number": 3171,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 3171,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2\\n1 charlatan 1\\n1 not charlatan 1') == 'charlatan'\nassert solution('2 1\\n1 and fabulist 1 fabulist 2\\n1 not charlatan 1\\n1 not charlatan 2') == 'fabulist'\nassert solution('2 2\\n1 and fabulist 1 fabulist 2\\n1 not charlatan 1\\n1 not charlatan 2') == 'truther'\n\n\"\"\"\n\nfrom collections import defaultdict\n"
    },
    {
        "number": 3171,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\").read()) == \"fabulist\"\n\n\"\"\""
    },
    {
        "number": 3171,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 2\n1 charlatan 1\n1 not charlatan 1''') == 'fabulist'\nassert solution('''1 2\n1 truther 1\n1 fabulist 2\n1 not fabulist 1\n1 not truther 2\n1 fabulist 2''') == 'truther'\n'''\n"
    },
    {
        "number": 3172,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"5\n1.00 5.00\n3.00 3.00\n4.00 2.00\n6.00 4.50\n7.00 1.00\"\"\") == \"4\"\nassert solution(\n\"\"\"5\n-1.50 -1.00\n1.50 -1.00\n0.00 1.00\"\"\") == \"3\"\nassert solution(\n\"\"\"8\n1.00 1.00\n1.00 1.00\n1.00 1.00\n1.00 1.00\n1.00 1.00\n1.00 1.00\n1.00 1.00\"\"\") == \"5\"\nassert solution(\n\"\"\"4\n1.00 1.00\n1.00 1.00\n1.00 1.00\n1.00 1.00\"\"\") == \"4\"\nassert solution(\n\"\"\"1\n1.00 0.00\"\"\") == \"0\"\n"
    },
    {
        "number": 3172,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\" \") == \"\"\nassert solution(\"1.00\") == \"\"\nassert solution(\"1.0 1.0\") == \"\"\nassert solution(\"1.0 1.0 1.0 1.0\") == \"\"\n"
    },
    {
        "number": 3172,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n5\n1.00 5.00\n3.00 3.00\n4.00 2.00\n6.00 4.50\n7.00 1.00\n''') == '4'\nassert solution('''\n1\n-1.00\n-1.00\n0.00\n''') == '1'\nassert solution('''\n3\n-1.50 -1.00\n1.50 -1.00\n0.00 1.00\n''') == '3'\nassert solution('''\n5\n1.00 5.00\n3.00 3.00\n4.00 2.00\n6.00 4.50\n7.00 1.00\n1.50 2.50\n''') == '4'\nassert solution('''\n3\n-1.50 -1.00\n1.50 -1.00\n0.00 1.00\n1.50 -1.00\n0.00 1.00\n''') == '3'\n"
    },
    {
        "number": 3172,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input_data) == output_data\n"
    },
    {
        "number": 3172,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\"\n) == \"4\"\nassert solution(\n\"3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\"\n) == \"3\"\nassert solution(\n\"5\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\\n3.00 4.00\\n4.50 6.00\"\n) == \"4\"\nassert solution(\n\"6\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\\n3.00 4.00\\n4.50 6.00\\n7.00 1.00\"\n) == \"5\"\nassert solution(\n\"6\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\\n3.00 4.00\\n4.50 6.00\\n7.00 1.00\\n8.00 4.00\"\n) == \"4\"\n"
    },
    {
        "number": 3172,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00') == '4'\nassert solution('3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\\n-1.00 1.00\\n-1.00 0.00') == '3'\nassert solution('1\\n0.00 0.00') == '1'\nassert solution('0\\n1.00 1.00\\n1.00 0.00\\n1.00 0.00\\n0.00 1.00\\n0.00 0.00') == '1'\nassert solution('1\\n1.00 1.00\\n1.00 0.00\\n1.00 0.00\\n0.00 1.00\\n0.00 0.00') == '1'\n"
    },
    {
        "number": 3172,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n1.00 5.00\n3.00 3.00\n4.00 2.00\n6.00 4.50\n7.00 1.00''') == '4'\nassert solution('''3\n-1.50 -1.00\n1.50 -1.00\n0.00 1.00''') == '3'\nassert solution('''2\n0.00 0.00\n0.00 0.00''') == '2'\nassert solution('''1\n1.00 0.00\n0.00 0.00''') == '1'\nassert solution('''0\n0.00 0.00\n0.00 0.00''') == '0'\n"
    },
    {
        "number": 3172,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n1.00 5.00\n3.00 3.00\n4.00 2.00\n6.00 4.50\n7.00 1.00''') == '4'\nassert solution('''5\n-1.50 -1.00\n1.50 -1.00\n0.00 1.00''') == '3'\nassert solution('''5\n1.00 3.00\n4.00 3.00\n1.50 1.00\n4.50 2.00\n6.00 4.50''') == '2'\nassert solution('''3\n-1.50 -1.00\n1.50 -1.00\n0.00 1.00''') == '3'\nassert solution('''3\n-1.50 -1.00\n1.50 -1.00\n0.00 1.00''') == '3'\n"
    },
    {
        "number": 3172,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3172,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\\n') == '3'\nassert solution('-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\\n') == '3'\nassert solution('-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\\n') == '3'\nassert solution('-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\\n') == '3'\nassert solution('-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\\n') == '3'\n"
    },
    {
        "number": 3173,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3 1\\nR..?.\\n.X...\\n100 100 7 100 8\\n') == '16'\nassert solution('2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8\\n') == '16'\nassert solution('2 4 1\\nX..?.\\n.X...\\n100 100 7 100 8\\n') == '10'\nassert solution('3 5 1\\nR....?.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n.X...X.\\n."
    },
    {
        "number": 3173,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 5 2\nR..?.\n.X...\n100 100 7 100 8''') == '16'\nassert solution('''2 3 1\nX..\n.?.\n10 1000 1''') == '10'\nassert solution('''1\n.X.\n.X.\n7 9''') == '4'\nassert solution('''1\n.X.\n.X.\n7 9''') == '4'\nassert solution('''1\n.X.\n.X.\n7 9''') == '4'\n"
    },
    {
        "number": 3173,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 5 2\nR..?.\n.X...\n100 100 7 100 8''') == '16'\nassert solution('''2 3 1\nX..\n.?.\n10 1000 1''') == '10'\nprint('tests passed')"
    },
    {
        "number": 3173,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n"
    },
    {
        "number": 3173,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 4\") == \"9\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"16\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"14\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14\") == \"30\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\") == \"40\"\n"
    },
    {
        "number": 3173,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(test_input1) == test_output1\nassert solution(test_input2) == test_output2\nprint(\"Program completed successfully\")\n"
    },
    {
        "number": 3173,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8\\n\") == \"16\"\nassert solution(\"1\\n.\\n.\\n100 100 7 100 8\\n\") == \"10\"\nassert solution(\"1\\n.\\n.\\n.\\n100 100 7 100 8\\n\") == \"10\"\nassert solution(\"2 3 1\\nX..\\n.?.\\n10 1000 1\\n\") == \"10\""
    },
    {
        "number": 3173,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('1 2 3') == '1'\nassert solution('123') == '123'\nassert solution('3 3 2') == '3'\nassert solution('1 1 0') == '3'\n"
    },
    {
        "number": 3173,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"2 5 2\nR..?.\n.X...\n100 100 7 100 8\n\"\"\") == \"16\"\nassert solution(\"\"\"2 3 1\nX..\n.?.\n10 1000 1\n\"\"\") == \"10\"\nassert solution(\"\"\"2 3 1\nX..\n.?.\n5 5 5\n\"\"\") == \"5\"\nassert solution(\"\"\"2 5 1\nR..\n.X.\n100 100 100\n\"\"\") == \"5\"\nassert solution(\"\"\"2 3 1\nX..\nX..\n100 100 100\n\"\"\") == \"5\"\n"
    },
    {
        "number": 3173,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 16\n\"\"\""
    },
    {
        "number": 3174,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 1 2 3 4 5\\n0 0 1 1 1 4\\n1 1 1 1 1 5\\n0 1 1 0 1 6\\n1 1 0 0 1 7\\n0 1 0 0 1 8\\n0 1 0 0 1 9\\n0 1 1 1 1 10') == '5.657'\nassert solution('0 1 2 3 4 5\\n0 0 1 1 1 4\\n1 1 1 1 1 5\\n0 1 1 0 1 6\\n1 1 0 0 1 7\\n0 1 0 0 1 8\\n0 1 0 0 1 9\\n0 1 1 1 1 10\\n0 1 1 1 1 11') == '4.521'\nassert solution('0 1 2 3 4 5\\n0 0 1 1 1 4\\n1 1 1 1 1 5\\n0 1 1 0 1 6\\n1 1 0 0 1 7\\n0 1 0 0 1 8\\n0 1 0 0 1 9\\n0 1 1 1 1 10\\n0 1 1 1 1 11') == '1.414'\nassert solution('0 1 2 3 4 5\\n0 0 1 1 1 4\\n1 1 1 1 1 5\\n0 1 1 0 1 6\\n1 1 0 0 1 7\\n0 1 0 0 1 8\\n0 1 0 0 1 9\\n0 1 1 1 1 10\\n0 1 1 1 1 11\\n0 1 1 1 1 12') == '0.14'\nassert solution('0 1 2 3 4 5\\n0 0 1 1 1 4\\n1 1 1 1 1 5\\n0 1 1 0 1 6\\n1 1 0 0 1 7\\n0 1 0 0 1 8\\n0 1 0 0 1 9\\n0 1 1 1 1 10\\n0 1 1 1 1 11\\n0 1 1 1 1 12') == '0'\n"
    },
    {
        "number": 3174,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3 3\n0 4 4\n1 5 1\n2 6 1\"\"\") == \"1.414\"\nassert solution(\"\"\"6 11\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n20 20 10\"\"\") == \"5.657\"\nassert solution(\"\"\"10 10\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n20 20 10\"\"\") == \"8.926\"\nassert solution(\"\"\"100000 100000\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n200000 200000\"\"\") == \"0.876\"\nassert solution(\"\"\"15000 15000\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n200000 200000\"\"\") == \"5.1499\"\n\"\"\"\nSample Case 1:\n    3, 3\n    0, 4, 4\n    1, 5, 1\n    2, 6, 1\n    \n    # Distance:  1.414\n    \n    \nSample Case 2:\n    6, 11\n    0, 0, 1\n    0, 1, 2\n    1, 0, 3\n    1, 1, 4\n    5, 5, 1\n    20, 20, 10\n    \n    # Distance:  5.657\n    \n    \nSample Case 3:\n    10, 10\n    0, 0, 1\n    0, 1, 2\n    1, 0, 3\n    1, 1, 4\n    5, 5, 1\n    20, 20, 10\n    \n    # Distance:  8.926\n\"\"\"\n"
    },
    {
        "number": 3174,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0 3\\n0 4 4\\n1 5 1\\n2 6 1\") == \"1.414\"\nassert solution(\"3 3\\n0 4 4\\n1 5 1\\n2 6 1\") == \"1.414\"\nassert solution(\"3 3\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\") == \"5.657\"\nassert solution(\"6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\") == \"5.657\"\nassert solution(\"0 1000000000 3\\n0 1 2\\n0 2 3\\n1 0 4\\n1 1 5\\n5 0 6\\n10 1 7\\n15 1 8\\n20 1 9\\n24 1 10\\n28 1 11\\n32 1 12\\n36 1 13\\n40 1 14\\n44 1 15\\n48 1 16\\n52 1 17\\n56 1 18\\n60 1 19\\n64 1 20\\n68 1 21\\n72 1 22\\n76 1 23\\n80 1 24\\n84 1 25\\n88 1 26\\n92 1 27\\n96 1 28\\n100 1 29\\n104 1 30\\n108 1 31\\n112 1 32\\n116 1 33\\n120 1 34\\n124 1 35\\n128 1 36\\n132 1 37\\n136 1 38\\n140 1 39\\n144 1 40\\n148 1 41\\n152 1 42\\n156 1 43\\n160 1 44\\n164 1 45\\n168 1 46\\n172 1 47\\n176 1 48\\n180 1 49\\n184 1 50\\n188 1 51\\n192 1 52\\n196 1 53\\n200 1 54\\n204 1 55\\n208 1 56\\n212 1 57\\n216 1 58\\n220 1 59\\n224 1 60\\n228 1 61\\n232 1 62\\n236 1 63\\n240 1 64\\n244 1 65\\n248 1 66\\n252 1 67\\n256 1 68\\n260 1 69\\n264 1 70\\n268 1 71\\n272 1 72\\n276 1 73\\n280 1 74\\n284 1 75\\n288 1 76\\n292 1 77\\n296 1 78\\n300 1 79\\n304 1 80\\n308 1 81\\n312 1 82\\n316 1 83\\n320 1 84\\n324 1 85\\n328 1 86\\n332 1 87\\n336 1 88\\n340 1 89\\n344 1 90\\n348 1 91\\n352 1 92\\n356 1 93\\n360 1 94\\n364 1 95\\n368 1 96\\n372 1 97\\n376 1 98\\n380 1 99\\n384 1 100\\n388 1 101\\n392 1 102\\n396 1 103\\n400 1 104\\n404 1 105\\n408 1 106\\n412 1 107\\n416 1 108\\n420 1 109\\n424 1 110\\n428 1 111\\n432 1 112\\n436 1 113\\n440 1 114\\n444 1 115\\n448 1 116\\n452 1 117\\n456 1 118\\n460 1 119\\n464 1 120\\n468 1 121\\n472 1 122\\n476 1 123\\n480 1 124\\n484 1 125\\n488 1 126\\n492 1 127\\n496 1 128\\n500 1 129\\n504 1 130\\n508 1 131\\n512 1 132\\n516 1 133\\n520 1 134\\n524 1 135\\n528 1 136\\n532 1 137\\n536 1 138\\n540 1 139\\n544 1 140\\n548 1 141\\n552 1 142\\n556 1 143\\n560 1 144\\n564 1 145\\n568 1 146\\n572 1 147\\n576 1 148\\n580 1 149\\n584 1 150\\n588 1 151\\n592 1 152\\n596 1 153\\n600 1 154\\n604 1 155\\n608 1 156\\n612 1 157\\n616 1 158\\n620 1 159\\n624 1 160\\n628 1 161\\n632 1 162\\n636 1 163\\n640 1 164\\n644 1 165\\n648 1 166\\n652 1 167\\n656 1 168\\n660 1 169\\n664 1 170\\n668 1 171\\n672 1 172\\n676 1 173\\n680 1 174\\n684 1 175\\n688 1 176\\n692 1 177\\n696 1 178\\n700 1 179\\n704 1 180\\n708 1 181\\n712 1 182\\n716 1 183\\n720 1 184\\n724 1 185\\n728 1 186\\n732 1 187\\n736 1 188\\n740 1 189\\n744 1 190\\n748 1 191\\n752 1 192\\n756 1 193\\n760 1 194\\n764 1 195\\n768 1 196\\n772 1 197\\n776 1 198\\n780 1 199\\n784 1 200\\n788 1 201\\n792 1 202\\n796 1 203\\n800 1 204\\n804 1 205\\n808 1 206\\n812 1 207\\n816 1 208\\n820 1 209\\n824 1 210\\n828 1 211\\n832 1 212\\n836 1 213\\n840 1 214\\n844 1 215\\n848 1 216\\n852 1 217\\n856 1 218\\n860 1 219\\n864 1 220\\n868 1 221\\n872 1 222\\n876 1 223\\n880 1 224\\n884 1 225\\n888 1 226\\n892 1 227\\n896 1 228\\n900 1 229\\n904 1 230\\n908 1 231\\n912 1 232\\n916 1 233\\n920 1 234\\n924 1 235\\n928 1 236\\n932 1 237\\n936 1 238\\n940 1 239\\n944 1 240\\n948 1"
    },
    {
        "number": 3174,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\\n\") == \"5.657\"\n\"\"\"\n"
    },
    {
        "number": 3174,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 3\n0 4 4\n1 5 1\n2 6 1''') == '1.414'\nassert solution('''6 11\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n20 20 10''') == '5.657'"
    },
    {
        "number": 3174,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"3 3\n0 4 4\n1 5 1\n2 6 1\"\"\") == \"1.414\"\nassert solution(\n    \"\"\"6 11\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n20 20 10\"\"\") == \"5.657\"\nprint(solution(stdin.read()))\n"
    },
    {
        "number": 3174,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\") == \"1.414\"\nassert solution(\"0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\") == \"5.657\"\nassert solution(\"0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\") == \"1.414\"\nassert solution(\"0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\") == \"5.657\"\nassert solution(\"0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\") == \"5.657\"\n"
    },
    {
        "number": 3174,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '5.657'\n'''\n"
    },
    {
        "number": 3174,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 3\n0 4 4\n1 5 1\n2 6 1''') == '1.414'\nassert solution('''6 11\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n20 20 10''') == '5.657'\nassert solution('''7 4\n0 1 2\n0 2 3\n0 3 4\n1 1 5\n2 2 6\n3 3 7\n4 4 8\n5 5 9\n6 6 10\n''') == '7.818'\n'''\n\nfrom math import *\n"
    },
    {
        "number": 3174,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0 4 4\\n1 5 1\\n2 6 1\\n\") == \"1.414\"\nassert solution(\"3 3\\n0 4 4\\n1 5 1\\n2 6 1\\n\") == \"1.414\"\nassert solution(\"3 6\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\\n\") == \"5.657\"\nassert solution(\"5 5\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\\n\") == \"5.657\"\nassert solution(\"3 3\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\\n\") == \"5.657\"\n"
    },
    {
        "number": 3175,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 1 1 1 1') == '1.0'\nassert solution('3 1 1 1') == '0.433'\nassert solution('3 1 1 1') == '0.433'\nassert solution('3 1 1 1 1') == '0.833'\nassert solution('3 1 1 1 1 1') == '1.0'\n"
    },
    {
        "number": 3175,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"$n$ 1 1 1 1\") == \"1.0\"\nassert solution(\"$n$ 4 1 1 1 1\") == \"0.433\"\nassert solution(\"$n$ 3 1 1 1 1\") == \"0.433\"\nassert solution(\"$n$ 3 1 1 1 1\") == \"0.433\"\nassert solution(\"$n$ 3 1 1 1 1 1\") == \"0.433\"\n"
    },
    {
        "number": 3175,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 1 1 1 1\") == \"1.0\"\nassert solution(\"3 1 1 1\") == \"0.433\"\nassert solution(\"1 1 1 1 1\") == \"1.0\"\nassert solution(\"2 1 1 1 1 1 1 1 1 1\") == \"1.0\"\nassert solution(\"3 1 1 1 1 1 1 1 1 1\") == \"1.0\"\n"
    },
    {
        "number": 3175,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"$n$ 1 1 1 1\") == \"1.0\"\nassert solution(\"3 1 1 1\") == \"0.433\"\nassert solution(\"4 1 1 1 1\") == \"1.0\"\nassert solution(\"$n$ 4 1 1 1\") == \"0.433\"\nassert solution(\"$n$ 4 1 1 1\") == \"1.0\"\n"
    },
    {
        "number": 3175,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '0.433'\n"
    },
    {
        "number": 3175,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('$3\\n1 1 1 1\\n') == '1.0'\nassert solution('$1\\n1 1 1 1\\n') == '1.0'\nassert solution('$8\\n1 1 1 1 1 1 1 1\\n') == '1.0'\nassert solution('$12\\n
    },
    {
        "number": 3175,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0.433\"\n"
    },
    {
        "number": 3175,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n4 1 1 1 1\") == \"1.0\"\nassert solution(\"2\\n3 1 1 1\") == \"0.433\"\nassert solution(\"3\\n3 1 1 1\") == \"0.0\"\nassert solution(\"4\\n1 1 1 1 1\") == \"1.0\"\nassert solution(\"4\\n2 1 1 1\") == \"0.5\"\n"
    },
    {
        "number": 3175,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('$n$ 1 1 1 1') == '1.0'\nassert solution('$n$ 4 1 1 1') == '1.0'\nassert solution('$n$ 3 1 1 1') == '0.433'\nassert solution('$n$ 1 1 1 1') == '1.0'\nassert solution('$n$ 2 1 1 1') == '0.433'\n"
    },
    {
        "number": 3175,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 1 1 1\\n\") == \"1.0\"\nassert solution(\"3\\n1 1 1\\n\") == \"0.433\"\nassert solution(\"3\\n3 1 1\\n\") == \"0.433\"\nassert solution(\"3\\n3 2 1\\n\") == \"0.433\"\nassert solution(\"3\\n1 3 1\\n\") == \"0.433\"\n"
    },
    {
        "number": 3176,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3176,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3176,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 10\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\") == \"36\"\nassert solution(\"3 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15\") == \"5\"\nassert solution(\"5 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15\") == \"36\"\nassert solution(\"8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15\") == \"36\"\nassert solution(\"3 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15\") == \"36\"\n"
    },
    {
        "number": 3176,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5') == '5'\nassert solution('7 3\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15') == '36'\nassert solution('5 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15') == '5'\nassert solution('8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15') == '36'\nassert solution('8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15') == '36'\n"
    },
    {
        "number": 3176,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == str(4)\nassert solution(stdin) == str(5)\n"
    },
    {
        "number": 3176,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"6 5\n1 1 5\n2 1 5\n1 2 4\n2 3 5\n3 2 30\n3 3 5\"\"\") == \"5\"\n\nassert solution(\n\"\"\"8 10\n1 1 15\n2 2 30\n1 2 8\n2 1 7\n3 2 8\n2 3 7\n4 2 100\n3 3 15\"\"\") == \"36\"\n\nassert solution(\n\"\"\"6 5\n1 1 5\n2 1 5\n1 2 4\n2 3 5\n3 2 30\n3 3 5\"\"\") == \"5\"\n\nassert solution(\n\"\"\"8 10\n1 1 15\n2 2 30\n1 2 8\n2 1 7\n3 2 8\n2 3 7\n4 2 100\n3 3 15\"\"\") == \"36\"\n\nassert solution(\n\"\"\"8 10\n1 1 15\n2 2 30\n1 2 8\n2 1 7\n3 2 8\n2 3 7\n4 2 100\n3 3 15\"\"\") == \"36\""
    },
    {
        "number": 3176,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"6 5\") == \"5\"\nassert solution(\"1 1 5\") == \"5\"\nassert solution(\"2 1 5\") == \"4\"\nassert solution(\"1 2 4\") == \"3\"\nassert solution(\"2 3 5\") == \"3\"\n"
    },
    {
        "number": 3176,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''6 5\n1 1 5\n2 1 5\n1 2 4\n2 3 5\n3 2 30\n3 3 5\n''') == \"5\"\n\nassert solution(\n'''8 10\n1 1 15\n2 2 30\n1 2 8\n2 1 7\n3 2 8\n2 3 7\n4 2 100\n3 3 15\n''') == \"36\"\n"
    },
    {
        "number": 3176,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6 5\n1 1 5\n2 1 5\n1 2 4\n2 3 5\n3 2 30\n3 3 5\n''') == '5'\nassert solution('''8 10\n1 1 15\n2 2 30\n1 2 8\n2 1 7\n3 2 8\n2 3 7\n4 2 100\n3 3 15\n''') == '36'\n"
    },
    {
        "number": 3176,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"6 10\n1 1 15\n2 2 30\n1 2 8\n2 1 7\n3 2 8\n2 3 7\n4 2 100\n3 3 15\"\"\") == \"36\"\n\nassert solution(\n\"\"\"6 10\n1 1 30\n2 2 8\n1 2 7\n3 2 8\n2 3 7\n4 2 100\n3 3 15\"\"\") == \"1 1 1 2 2 3 3 4 4\"\n\nassert solution(\n\"\"\"6 10\n1 1 30\n2 2 8\n1 2 7\n3 2 8\n2 3 7\n4 2 100\n3 3 15\"\"\") == \"1 1 1 2 2 3 3 4 4\"\n\nassert solution(\n\"\"\"6 10\n1 1 15\n2 2 30\n1 2 8\n2 1 7\n3 2 8\n2 3 7\n4 2 100\n3 3 15\"\"\") == \"1 1 1 2 2 3 3 4 4\"\n\nassert solution(\n\"\"\"6 10\n1 1 30\n2 2 8\n1 2 7\n3 2 8\n2 3 7\n4 2 100\n3 3 15\"\"\") == \"1 1 1 2 2 3 3 4 4\""
    },
    {
        "number": 3177,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 1''') == '1'\nassert solution('''2 1''') == '1'\nassert solution('''3 2''') == '3'\nassert solution('''2 1 3''') == '1'\nassert solution('''2 1 3''') == '1'\n"
    },
    {
        "number": 3177,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2\\n2 1') == '1'\nassert solution('1 2 3\\n3 1') == '2'\nassert solution('1 2 3\\n2 3 1') == '3'\nassert solution('1 3 2\\n2 1 3\\n3 1 2') == '1'\nassert solution('1 2 3\\n3 1 2\\n1 2 3') == '2'\n"
    },
    {
        "number": 3177,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 1\n2 1\n1 2\n''') == \"1\"\n\nassert solution('''2 1\n1 2\n2 1\n''') == \"1\"\n\nassert solution('''3 2\n2 1 3\n1 3\n2 3\n''') == \"3\"\n\nassert solution('''3 2\n1 2 3\n1 3\n2 3\n''') == \"2\"\n\nassert solution('''3 2\n2 1 3\n1 3\n2 3\n1 3\n''') == \"1\""
    },
    {
        "number": 3177,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 1\n2 1\n1 2\n''') == '1'\nassert solution('''3 2\n2 1 3\n1 3\n2 3\n''') == '3'\nassert solution('''3 3\n1 3\n2 3\n3 1\n''') == '4'\nassert solution('''3 3\n1 2\n2 3\n3 1\n''') == '4'\nassert solution('''3 3\n1 2\n2 3\n3 1\n''') == '4'\n"
    },
    {
        "number": 3177,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\n2 1\") == \"1\"\nassert solution(\"1 2\\n2 1\\n1 2\") == \"1\"\nassert solution(\"3 2\\n2 1 3\\n1 3\") == \"3\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\") == \"2\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n3 2\") == \"1\"\n"
    },
    {
        "number": 3177,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"1\n3\n2 1 3\n1 3\n2 3\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"2\n2\n1 3\n2 3\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"4\n2 1 4 3\n1 3\n2 3\n4 1\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"5\n3\n1 2 4\n2 1\n1 3\n1 2\n1 3\n1 4\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"6\n3\n1 2 4\n2 1\n2 3\n1 3\n1 4\n2 4\n\"\"\") == \"2\""
    },
    {
        "number": 3177,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n2 1\\n1 2\\n\") == \"1\"\nassert solution(\"2 3\\n2 1 3\\n1 3\\n2 3\\n\") == \"3\"\nassert solution(\"2 3\\n2 3\\n2 1 3\\n1 3\\n2 1 3\\n\") == \"3\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"3\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\\n1 3\\n\") == \"3\"\n"
    },
    {
        "number": 3177,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 1\n2 1\n1 2\n''') == '1'\n\nassert solution('''3 2\n2 1 3\n1 3\n2 3\n''') == '3'\n\nassert solution('''4 3\n2 3 4 1\n2 3\n1 2\n3 1\n''') == '2'\n\nassert solution('''5 3\n2 3 4 1 5\n2 3\n1 2\n3 1\n4 5\n''') == '3'\n\nassert solution('''6 3\n2 3 4 1 5 6\n2 3\n1 2\n3 1\n4 5\n6 4\n''') == '4'"
    },
    {
        "number": 3177,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 1''') == '1'\nassert solution('''2 1''') == '1'\nassert solution('''1 2''') == '2'\nassert solution('''3 2''') == '3'\nassert solution('''2 3\n1 3''') == '3'\n"
    },
    {
        "number": 3177,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 2') == '3'\nassert solution('3 2') == '3'\nassert solution('3 2') == '3'\nassert solution('2 1') == '1'\n"
    },
    {
        "number": 3178,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6') == '5'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8') == '5'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == '-1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12') == '-1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n448\\n449\\n450\\n451\\n452\\n453\\n454\\n455\\n456\\n457\\n458\\"
    },
    {
        "number": 3178,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"-1\"\nassert solution(\"4\") == \"-1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 3178,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 8\n1 4\n4 5\n1 5\n1 2\n1 3\n2 3\n3 5\n2 5\n''') == '5'\nassert solution('''5 4\n1 4\n4 5\n1 5\n1 2\n1 3\n2 3\n3 5\n2 5\n''') == '-1'\nassert solution('''10 4\n1 4\n1 5\n1 2\n1 3\n2 3\n3 5\n4 6\n1 6\n2 6\n1 7\n2 7\n1 8\n1 9\n2 9\n3 9\n2 10\n''') == '0'\nassert solution('''9 6\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n2 9\n3 9\n2 10\n''') == '2'\nassert solution('''9 9\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n2 9\n3 9\n2 10\n''') == '1'\n"
    },
    {
        "number": 3178,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3178,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 8\n1 4\n4 5\n1 5\n1 2\n1 3\n2 3\n3 5\n2 5\n''') == '-1'\nassert solution('''5 8\n1 4\n4 5\n1 5\n1 2\n1 3\n2 3\n3 5\n2 5\n2 5\n2 5\n1 6\n''') == '5'\nassert solution('''5 5\n1 2\n2 3\n1 4\n3 5\n1 4\n4 5\n2 5\n3 4\n1 4\n2 5\n3 5\n''') == '6'\nassert solution('''4 6\n1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n2 5\n3 5\n3 4\n''') == '5'\nassert solution('''4 6\n1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n2 5\n3 5\n3 4\n''') == '6'\n"
    },
    {
        "number": 3178,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 8\n1 4\n4 5\n1 5\n1 2\n1 3\n2 3\n3 5\n2 5\n''') == \"-1\"\nassert solution('''3 4\n1 2\n3 4\n1 2\n2 3\n2 4\n1 4\n''') == \"0\"\nassert solution('''5 8\n1 4\n4 5\n1 5\n1 2\n1 3\n2 3\n3 5\n2 5\n''') == \"4\"\n'''"
    },
    {
        "number": 3178,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 5\\n1 4\\n4 5\") == \"-1\"\nassert solution(\"2 5\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\") == \"5\"\nassert solution(\"6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\\n1 2\\n3 2\") == \"5\"\nassert solution(\"3 4\\n3 4\\n1 2\\n2 3\\n1 3\") == \"3\"\n"
    },
    {
        "number": 3178,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 8\n1 4\n4 5\n1 5\n1 2\n1 3\n2 3\n3 5\n2 5\n''') == \"5\"\nassert solution('''6 5\n2 4\n3 5\n1 5\n3 6\n1 6\n''') == \"5\"\nassert solution('''2 4\n3 4\n3 4\n''') == \"1\"\nassert solution('''2 4\n3 4\n1 4\n''') == \"-1\"\nassert solution('''2 4\n2 4\n''') == \"-1\"\n"
    },
    {
        "number": 3178,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3178,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 8\n1 4\n4 5\n1 5\n1 2\n1 3\n2 3\n3 5\n2 5\n''') == '-1'\nassert solution('''6 5\n2 4\n3 5\n1 5\n3 6\n1 6\n''') == '5'\nassert solution('''10 10\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n5 6\n5 7\n5 8\n5 9\n5 10\n6 7\n6 8\n6 9\n6 10\n7 8\n7 9\n7 10\n8 9\n8 10\n9 10\n9 10\n''') == '10'\n"
    },
    {
        "number": 3179,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 1\n1 1\n5 1\n5 5\n4 2\n''') == '4.00'\nassert solution('''6 3\n-8 -8\n0 -1\n8 -8\n1 0\n0 10\n-1 0\n''') == '9.00'\nassert solution('''10 3\n-1 -1\n0 0\n2 -1\n5 1\n1 1\n1 -1\n-1 1\n-1 -1\n0 0\n2 -1\n5 1\n1 1\n''') == '9.00'\nassert solution('''14 4\n1 1\n-1 1\n1 -1\n-1 -1\n1 1\n0 0\n-1 1\n1 1\n0 1\n1 -1\n0 -1\n-1 -1\n1 -1\n-1 1\n1 1\n0 1\n-1 1\n-1 -1\n-1 -1\n-1 1\n1 1\n1 -1\n0 -1\n-1 1\n0 1\n-1 1\n0 1\n0 -1\n1 -1\n0 -1\n-1 -1\n0 -1\n1 1\n1 -1\n1 -1\n1 1\n1 1\n1 1\n1 -1\n-1 1\n-1 1\n-1 -1\n-1 -1\n-1 1\n-1 1\n1 -1\n1 -1\n-1 -1\n1 1\n1 1\n1 1\n1 -1\n-1 1\n-1 1\n-1 -1\n-1 -1\n-1 1\n1 1\n1 1\n1 1\n1 -1\n1 -1\n1 1\n1 1\n1 -1\n-1 1\n-1 1\n-1 -1\n-1 -1\n-1 1\n-1 1\n1 -1\n1 -1\n-1 -1\n-1 -1\n-1 1\n-1 1\n1 -1\n1 -1\n-1 -1\n-1 -1\n-1 1\n1 -1\n0 0\n-1 1\n0 1\n0 0\n-1 -1\n1 1\n1 1\n1 1\n1 -1\n-1 1\n-1 1\n-1 -1\n-1 -1\n-1 1\n1 1\n1 1\n1 1\n1 -1\n1 -1\n0 0\n-1 1\n0 1\n0 0\n-1 -1\n1 1\n1 1\n1 1\n1 -1\n-1 1\n-1 1\n-1 -1\n-1 -1\n-1 1\n1 1\n1 1\n1 1\n1 -1\n1 -1\n0 0\n-1 1\n0 1\n0 0\n-1 -1\n1 1\n1 1\n1 1\n1 -1\n-1 1\n-1 1\n-1 -1\n-1 -1\n-1 1\n1 1\n1 1\n1 1\n1 -1\n1 -1\n0 0\n-1 1\n0 1\n0 0\n-1 -1\n1 1\n1 1\n1 1\n1 -1\n-1 1\n-1 1\n-1 -1\n-1 -1\n-1 1\n1 1\n1 1\n1 1\n1 -1\n1 -1\n0 0\n-1 1\n0 1\n0 0\n-1 -1\n1 1\n1 1\n1 1\n1 -1\n-1 1\n-1 1\n-1 -1\n-1 -1\n-1 1\n1 1\n1 1\n1 1\n1 -1\n1 -1\n0 0\n-1 1\n0 1\n0 0\n-1 -1\n1 1\n1 1\n1 1\n1 -1\n-1 1\n-1 1\n-1 -1\n-1 -1\n-1 1\n1 1\n1 1\n1 1\n1 -1\n1 -1\n0 0\n-1 1\n0 1\n0 0\n-1 -1\n1 1\n1 1\n1 1\n1 -1\n-1 1\n-1 1\n-1 -1\n-1 -1\n-1 1\n1 1\n1 1\n1 1\n1 -1\n1 -1\n0 0\n-1 1\n0 1\n0 0\n-1 -1\n1 1\n1 1\n1 1\n1 -1\n-1 1\n-1 1\n-1 -1\n-1 -1\n-1 1\n1 1\n1 1\n1 1\n1 -1\n1 -1\n0 0\n-1 1\n0 1\n0 0\n-1 -1\n1 1\n1 1\n1 1\n1 -1\n-1 1\n-1 1\n-1 -1\n-1 -1\n-1 1\n1 1\n1 1\n1 1\n1 -1\n1 -1\n0 0\n-1 1\n0 1\n0 0\n-1 -1\n1 1\n1 1\n1 1\n1 -1\n-1 1\n-1 1\n-1 -1\n-1 -1\n-1 1\n1 1\n1 1\n1 1\n1 -1\n1 -1\n0 0\n-1 1\n0 1\n0 0\n-1 -1\n1 1\n1 1\n1 1\n1 -1\n-1 1\n-1 1\n-1 -1\n-1 -1\n-1 1\n1 1\n1 1\n1 1\n1 -1\n1 -1\n0 0\n-1 1\n0 1\n0 0\n-1 -1\n1 1\n1 1\n1 1\n1 -1\n-1 1\n-1 1\n-1 -1\n-1 -1\n-1 1\n1 1\n1 1\n1 1\n1 -1\n1 -1\n0 0\n-1 1\n0 1\n0 0\n-1 -1\n1 1\n1 1\n1 1\n1 -1\n-1 1\n-1 1\n-1 -1\n-1 -1\n-1 1\n1"
    },
    {
        "number": 3179,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 1\n1 1\n5 1\n5 5\n4 2''') == \"4.00\"\nassert solution('''6 3\n-8 -8\n0 -1\n8 -8\n1 0\n0 10\n-1 0''') == \"9.00\"'''\n"
    },
    {
        "number": 3179,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1\\n1 1\\n5 1\\n5 5\\n4 2') == '4.00'\nassert solution('6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0') == '9.00'\n'''\n"
    },
    {
        "number": 3179,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 1\n5 1\n5 5\n4 2\n''') == '4.00'\nassert solution('''-8 -8\n0 -1\n8 -8\n1 0\n0 10\n-1 0\n''') == '9.00'\nassert solution('''1 1\n1 1\n5 1\n5 5\n4 2\n''') == '4.00'\nassert solution('''-8 -8\n0 -1\n8 -8\n1 0\n0 10\n-1 0\n''') == '9.00'\nassert solution('''1 1\n1 1\n5 1\n5 5\n4 2\n''') == '4.00'\n"
    },
    {
        "number": 3179,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1\\n5 1\\n5 5\\n4 2') == '4.00'\nassert solution('-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0') == '9.00'\nassert solution('-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\\n1 0') == '9.00'\nassert solution('-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\\n1 0\\n1 0') == '9.00'\nassert solution('-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\\n1 0\\n1 0\\n1 0') == '9.00'\n"
    },
    {
        "number": 3179,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == solution(stdin)\n"
    },
    {
        "number": 3179,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 1\n1 1\n5 1\n5 5\n4 2''') == '4.00'\nassert solution('''6 3\n-8 -8\n0 -1\n8 -8\n1 0\n0 10\n-1 0''') == '9.00'\nassert solution('''4 1\n5 5\n5 1\n1 1''') == '4.00'\nassert solution('''6 3\n-8 -8\n0 -1\n8 -8\n1 0\n0 10\n-1 0''') == '9.00'\nassert solution('''4 1\n5 5\n5 3\n1 3\n5 2\n1 2\n5 1\n1 1''') == '4.00'\n"
    },
    {
        "number": 3179,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 1\n1 1\n5 1\n5 5\n4 2''') == '4.00'\nassert solution('''6 3\n-8 -8\n0 -1\n8 -8\n1 0\n0 10\n-1 0''') == '9.00'\nassert solution('''6 3\n1 1\n5 1\n5 5\n4 2\n1 1\n1 1''') == '1.00'\nassert solution('''6 3\n-8 -8\n0 -1\n8 -8\n1 0\n0 10\n-1 0\n-1 1''') == '3.00'\nassert solution('''6 3\n1 1\n5 1\n5 5\n4 2\n1 1\n1 1''') == '1.00'\n"
    },
    {
        "number": 3179,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"4 1\n1 1\n5 1\n5 5\n4 2\n\"\"\") == \"4.00\"\nassert solution(\n\"\"\"6 3\n-8 -8\n0 -1\n8 -8\n1 0\n0 10\n-1 0\n\"\"\") == \"9.00\"\nassert solution(\n\"\"\"6 3\n5.4 -2.7\n-3.4 -5.1\n5.4 -7.9\n-6.8 -3.7\n-4.1 -3.2\n-4.5 -7.9\n-3.8 -3.7\n-3.1 -6.1\n-5.2 -5.8\n-5.8 -5.6\n\"\"\") == \"9.00\"\nassert solution(\n\"\"\"10 2\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\"\"\") == \"1.00\"\nassert solution(\n\"\"\"6 3\n1\n1\n1\n1\n1\n1\n\"\"\") == \"1.00\"\n"
    },
    {
        "number": 3179,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 1\n1 1\n5 1\n5 5\n4 2\n''') == '4.00'\n\nassert solution('''6 3\n-8 -8\n0 -1\n8 -8\n1 0\n0 10\n-1 0\n''') == '9.00'\n\nassert solution('''6 4\n2 2\n3 2\n3 3\n2 4\n2 4\n3 3\n''') == '8.00'\n'''\n\nimport sys\nimport math"
    },
    {
        "number": 3180,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(''.join(solution(read_input('''3 3 4\nPAINT 3 0 0 1 1\nSAVE\nPAINT 2 1 1 2 2\nLOAD 1'''))) == '3 1 1\\n1 3 1\\n1 1 1'\n\nassert solution(''.join(solution(read_input('''3 4 2\nPAINT 3 0 0 3 3\nPAINT 3 0 3 3 3\nPAINT 3 3 0 3 3\nPAINT 3 3 3 3 3''')))) == '2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2'\n\nassert solution(''.join(solution(read_input('''10 4 2\nPAINT 1 0 0 1 1\nPAINT 2 0 0 1 1\nPAINT 3 0 0 1 1\nPAINT 3 3 3 3 3\nSAVE\nPAINT 3 3 3 3 3\nPAINT 1 0 0 1 1\nSAVE\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 1 0 0 1 1\nSAVE\nPAINT 3 0 0 1 1\nPAINT 3 0 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 3 3 3 3''')))) == '3 1 1\\n1 3 1\\n1 1 1\\n2 1 2\\n2 1 2\\n3 1 1\\n1 3 1\\n1 1 1'\n\nassert solution(''.join(solution(read_input('''10 4 2\nPAINT 3 0 0 1 1\nPAINT 3 0 3 3 3\nPAINT 3 3 0 3 3\nPAINT 3 3 3 3 3\nSAVE\nPAINT 3 3 3 3 3\nPAINT 3 0 0 1 1\nSAVE\nPAINT 3 0 0 1 1\nPAINT 3 0 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 3 3 3 3\nPAINT 1 0 0 1 1\nSAVE\nPAINT 3 0 0 1 1\nPAINT 2 0 0 1 1\nPAINT 3 0 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 0 0 1 1\nSAVE\nPAINT 3 0 0 1 1\nPAINT 3 0 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 3 3 3 3''')))) == '3 1 1\\n1 3 1\\n1 1 1\\n2 1 2\\n2 1 2\\n3 1 1\\n1 3 1\\n1 1 1\\n2 1 2\\n2 1 2\\n3 1 1'\n\nassert solution(''.join(solution(read_input('''10 4 2\nPAINT 1 0 0 1 1\nPAINT 2 0 0 1 1\nPAINT 3 0 0 1 1\nPAINT 3 3 3 3 3\nSAVE\nPAINT 3 3 3 3 3\nPAINT 1 0 0 1 1\nSAVE\nPAINT 2 0 0 1 1\nPAINT 3 0 0 1 1\nPAINT 3 0 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 0 0 1 1\nSAVE\nPAINT 3 0 0 1 1\nPAINT 3 0 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 0 0 1 1\nSAVE\nPAINT 3 0 0 1 1\nPAINT 3 0 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 0 0 1 1\nSAVE\nPAINT 3 0 0 1 1\nPAINT 3 0 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 0 0 1 1\nSAVE\nPAINT 3 0 0 1 1\nPAINT 3 0 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 0 0 1 1\nSAVE\nPAINT 3 0 0 1 1\nPAINT 3 0 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 0 0 1 1\nSAVE\nPAINT 3 0 0 1 1\nPAINT 3 0 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 0 0 1 1\nSAVE\nPAINT 3 0 0 1 1\nPAINT 3 0 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 0 0 1 1\nSAVE\nPAINT 3 0 0 1 1\nPAINT 3 0 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 0 0 1 1\nSAVE\nPAINT 3 0 0 1 1\nPAINT 3 0 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 0 0 1 1\nSAVE\nPAINT 3 0 0 1 1\nPAINT 3 0 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 0 0 1 1\nSAVE\nPAINT 3 0 0 1 1\nPAINT 3 0 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 0 0 1 1\nSAVE\nPAINT 3 0 0 1 1\nPAINT 3 0 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 3 3 3 3\nPAINT 3 0 0 1 1\nSAVE\nPAINT 3 0 0"
    },
    {
        "number": 3180,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\"\n"
    },
    {
        "number": 3180,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 3 2\nPAINT 2 0 0 3 3\nPAINT 3 0 3 3 3\n''') == '2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2'\n\nassert solution('''4 3 2\nPAINT 2 0 0 3 3\nPAINT 3 0 3 3 3\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nSAVE\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 2 0 0 3 3\nPAINT 3 0 3 3 3\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0 3 3 3\nPAINT 3 0"
    },
    {
        "number": 3180,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(open(\"test_solution_1.txt\").read()) == open(\"test_solution_1_res.txt\").read()\nassert solution(open(\"test_solution_2.txt\").read()) == open(\"test_solution_2_res.txt\").read()\nassert solution(open(\"test_solution_3.txt\").read()) == open(\"test_solution_3_res.txt\").read()"
    },
    {
        "number": 3180,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 3 2\nPAINT 2 0 0 3 3\nPAINT 3 0 3 3 3\n''') == '2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2'\nassert solution('''4 3 2\nPAINT 2 0 0 3 3\nPAINT 3 0 3 3 3\nPAINT 4 0 4 4 4\nSAVE\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 4 0 4 4 4\nLOAD 2\nPAINT 4 0 4 4 4\nLOAD 3\nPAINT 4 0 4 4 4\nLOAD 1\nPAINT 4 0 4 4 4\nLOAD 4\nPAINT 4 0 4 4 4\n''') == '3 1 1\\n1 3 1\\n1 1 1\\n2 1 2 2'\n"
    },
    {
        "number": 3180,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"4 3 2\nPAINT 2 0 0 3 3\nPAINT 3 0 3 3 3\n\"\"\"\n) == \"\"\"2 1 2 3\n1 2 1 2\n2 1 2 3\n1 2 1 2\"\"\"\n\nassert solution(\n\"\"\"3 3 4\nPAINT 3 0 0 1 1\nSAVE\nPAINT 2 1 1 2 2\nLOAD 1\n\"\"\"\n) == \"\"\"3 1 1\n1 3 1\n1 1 1\n\"\"\"\n\nassert solution(\n\"\"\"4 5 3\nPAINT 3 0 0 1 1\nSAVE\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 3 0 3\nPAINT 4 0 2 0 4\nLOAD 3\nPAINT 3 0 2 0 3\nSAVE\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 4 0 2 0 4\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 4 0 2 0 4\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 4 0 2 0 4\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 4 0 0 0 4\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 0 3\nPAINT 2 1"
    },
    {
        "number": 3180,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('PAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n') == '2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n'\nassert solution('PAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n') == '3 1 1\\n1 3 1\\n1 1 1\\n'\nassert solution('PAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n') == '2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n3 1 1\\n1 3 1\\n1 1 1\\n'\nassert solution('PAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\nPAINT 3 0 0 3 3\\nPAINT 2 0 0 3 3\\n') == '3 1 1\\n1 3 1\\n1 1 1\\n2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n'\nassert solution('PAINT 3 0 0 3 3\\nPAINT 3 0 3 3 3\\nPAINT 3 0 0 3 3\\nPAINT 2 0 0 3 3\\n') == '3 1 1\\n1 3 1\\n1 1 1\\n2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n'\n"
    },
    {
        "number": 3180,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 3 2\nPAINT 2 0 0 3 3\nPAINT 3 0 3 3 3\n''') == '2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2'\n'''\nassert solution('''3 3 4\nPAINT 3 0 0 1 1\nSAVE\nPAINT 2 1 1 2 2\nLOAD 1\n''') == '3 1 1\\n1 3 1\\n1 1 1\\n'\n'''\nassert solution('''4 3 2\nPAINT 2 0 0 1 1\nPAINT 3 0 1 1 1\nPAINT 2 0 2 2 3\nPAINT 3 0 3 1 3\n''') == '2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2'\n'''\nassert solution('''8 3 2\nPAINT 2 0 0 1 1\nPAINT 3 0 1 1 1\nPAINT 2 0 2 2 3\nPAINT 3 0 3 1 3\nPAINT 2 0 4 4 5\nPAINT 3 0 5 1 5\nPAINT 2 0 6 6 7\nPAINT 3 0 7 1 7\n''') == '2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2'\n'''\nassert solution('''4 4 2\nPAINT 2 0 0 1 1\nPAINT 3 0 1 1 1\nPAINT 2 0 2 2 3\nPAINT 3 0 3 1 3\nPAINT 2 0 4 4 5\nPAINT 3 0 5 1 5\nPAINT 2 0 6 6 7\nPAINT 3 0 7 1 7\nPAINT 2 0 8 8 9\nPAINT 3 0 9 1 9\nPAINT 2 0 10 10 11\nPAINT 3 0 11 1 11\nPAINT 2 0 12 12 13\nPAINT 3 0 13 1 13\nPAINT 2 0 14 14 15\nPAINT 3 0 15 1 15\nPAINT 2 0 16 16 17\nPAINT 3 0 17 1 17\nPAINT 2 0 18 18 19\nPAINT 3 0 19 1 19\nPAINT 2 0 20 20 21\nPAINT 3 0 21 1 21\nPAINT 2 0 22 22 23\nPAINT 3 0 23 1 23\nPAINT 2 0 24 24 25\nPAINT 3 0 25 1 25\nPAINT 2 0 26 26 27\nPAINT 3 0 27 1 27\nPAINT 2 0 28 28 29\nPAINT 3 0 29 1 29\nPAINT 2 0 30 30 31\nPAINT 3 0 31 1 31\nPAINT 2 0 32 32 33\nPAINT 3 0 33 1 33\nPAINT 2 0 34 34 35\nPAINT 3 0 35 1 35\nPAINT 2 0 36 36 37\nPAINT 3 0 37 1 37\nPAINT 2 0 38 38 39\nPAINT 3 0 39 1 39\nPAINT 2 0 40 40 41\nPAINT 3 0 41 1 41\nPAINT 2 0 42 42 43\nPAINT 3 0 43 1 43\nPAINT 2 0 44 44 45\nPAINT 3 0 45 1 45\nPAINT 2 0 46 46 47\nPAINT 3 0 47 1 47\nPAINT 2 0 48 48 49\nPAINT 3 0 49 1 49\nPAINT 2 0 50 50 51\nPAINT 3 0 51 1 51\nPAINT 2 0 52 52 53\nPAINT 3 0 53 1 53\nPAINT 2 0 54 54 55\nPAINT 3 0 55 1 55\nPAINT 2 0 56 56 57\nPAINT 3 0 57 1 57\nPAINT 2 0 58 58 59\nPAINT 3 0 59 1 59\nPAINT 2 0 60 60 61\nPAINT 3 0 61 1 61\nPAINT 2 0 62 62 63\nPAINT 3 0 63 1 63\nPAINT 2 0 64 64 65\nPAINT 3 0 65 1 65\nPAINT 2 0 66 66 67\nPAINT 3 0 67 1 67\nPAINT 2 0 68 68 69\nPAINT 3 0 69 1 69\nPAINT 2 0 70 70 71\nPAINT 3 0 71 1 71\nPAINT 2 0 72 72 73\nPAINT 3 0 73 1 73\nPAINT 2 0 74 74 75\nPAINT 3 0 75 1 75\nPAINT 2 0 76 76 77\nPAINT 3 0 77 1 77\nPAINT 2 0 78 78 79\nPAINT 3 0 79 1 79\nPAINT 2 0 80 80 81\nPAINT 3 0 81 1 81\nPAINT 2 0 82 82 83\nPAINT 3 0 83 1 83\nPAINT 2 0 84 84 85\nPAINT 3 0 85 1 85\nPAINT 2 0 86 86 87\nPAINT 3 0 87 1 87\nPAINT 2 0 88 88 89\nPAINT 3 0 89 1 89\nPAINT 2 0 90 90 91\nPAINT 3 0 91 1 91\nPAINT 2 0 92 92 93\nPAINT 3 0 93 1 93\nPAINT 2 0 94 94 95\nPAINT 3 0 95 1 95\nPAINT 2 0 96 96 97\nPAINT 3 0 97 1 97\nPAINT 2 0 98 98 99\nPAINT 3 0 99 1 99\nPAINT 2 0 100 100 101\nPAINT 3 0 101 1 101\nPAINT 2 0 102 102 103\nPAINT 3 0 103 1 103\nPAINT 2 0 104 104 105\nPAINT 3 0 105 1 105\nPAINT 2 0 106 106 107\nPAINT 3 0 107 1 107\nPAINT 2 0 108 108 109\nPAINT 3 0 109 1 109\nPAINT 2 0 110 110 111\nPAINT 3 0 111 1 111\nPAINT 2 0 112 112 113\nPAINT 3 0 113 1 113\nPAINT 2 0 114 114 115\nPAINT 3 0 115 1 115\nPAINT 2 0 116 116 117\nPAINT 3 0 117 1 117\nPAINT 2 0 118 118 119\nPAINT 3 0 119 1 119\nPAINT 2 0 120 120 121\nPAINT 3 0 121 1 121\nPAINT 2 0 122 122 123\nPAINT 3 0 123 1 123\nPAINT 2 0 124 124 125\nPAINT 3 0 125 1 125\nPAINT 2 0 126 126 127\nPAINT 3 0 127 1 127\nPAINT 2 0 128 128 129\nPAINT 3 0 129 1 129\nPAINT 2 0 130 130 131\nPAINT 3 0 131 1 131\nPAINT 2 0 132 132 133\nPAINT 3 0 133 1 133\nPAINT 2 0 134 134 135\nPAINT 3 0 135 1 135\nPAINT 2 0 136 136 137\nPAINT 3 0 137 1 137\nPAINT 2 0 138 138 139\nPAINT 3 0 139 1 139\nPAINT 2 0 140 140 141\nPAINT 3 0 141 1 141\nPAINT 2 0 142 142 143\nPA"
    },
    {
        "number": 3180,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('PAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1') == '3 1 1'\nassert solution('PAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\nPAINT 1 1 1 2 2\\nPAINT 1 1 1 2 2\\nPAINT 1 1 1 2 2\\nPAINT 1 1 1 2 2\\nPAINT 1 1 1 2 2\\nPAINT 1 1 1 2 2\\nPAINT 1 1 1 2 2\\nPAINT 1 1 1 2 2\\nPAINT 1 1 1 2 2') == '3 1 1'\nassert solution('1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n2 1 1 1 2 2\\n"
    },
    {
        "number": 3180,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n') == '2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2'\nassert solution('3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n') == '3 1 1\\n1 3 1\\n1 1 1\\n'\n\n-----Notes-----\nThis is a hard problem. But, I don\u2019t know how to solve it. So, here is my best idea:"
    },
    {
        "number": 3181,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 3') == '1 4 2 3'\nassert solution('5 1') == '-1'\nassert solution('5 3') == '1 4 2 3'\nassert solution('5 4') == '1 4 2 3'\nassert solution('5 4') == '1 4 2 3'\n"
    },
    {
        "number": 3181,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 3''') == '1 4 2 3'\nassert solution('''4 3''') == '-1'\nassert solution('''1 1''') == '-1'\nassert solution('''1 1''') == '-1'\nassert solution('''1 1''') == '-1'\n"
    },
    {
        "number": 3181,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 3''') == '1 4 2 3'\nassert solution('''5 1''') == '-1'\nassert solution('''1 2''') == '1 2'\nassert solution('''1 2 3''') == '1 2'\nassert solution('''1 2 3 4''') == '1 2'\n"
    },
    {
        "number": 3181,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 3''') == '1 4 2 3'\nassert solution('''5 1''') == '-1'\nassert solution('''9 9''') == '-1'\nassert solution('''1 1''') == '1'\nassert solution('''5 2''') == '1 2 4 5'\n"
    },
    {
        "number": 3181,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 3181,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3181,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '1 4 2 3'\nassert solution(stdin) == '1 4 2 3'\n"
    },
    {
        "number": 3181,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3181,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 3') == '1 4 2 3'\nassert solution('5 1') == '-1'\nassert solution('5 4') == '1 2 3 4'\nassert solution('5 1') == '-1'\nassert solution('5 3') == '1 4 2 3'\n"
    },
    {
        "number": 3181,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 3') == '1 4 2 3'\nassert solution('5 1') == '-1'\nassert solution('5 1') == '1 4 2 3'\nassert solution('7 2') == '-1'\nassert solution('7 2') == '1 4 2 3'\n"
    },
    {
        "number": 3182,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '''1\n'''\n\nassert solution('''4''') == '''0\n'''\n\nassert solution('''5''') == '''0\n'''\n\nassert solution('''6''') == '''0\n'''\n\nassert solution('''7''') == '''0\n'''"
    },
    {
        "number": 3182,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n4 2\n2 1\n1 3''') == '1'\nassert solution('''4\n5 0\n2 6\n8 6\n5 7''') == '0'\nassert solution('''1000\n0 0\n998 998\n998 997\n997 996\n996 995\n995 994\n994 993\n993 992\n992 991\n991 990\n990 989\n988 987\n987 986\n986 985\n985 984\n983 983\n982 982\n981 981\n980 979\n979 978\n978 977\n976 976\n975 975\n974 974\n973 973\n972 972\n971 971\n970 970\n969 969\n968 968\n967 967\n966 966\n965 965\n964 964\n963 963\n962 962\n961 961\n960 960\n959 959\n958 958\n957 957\n956 956\n955 955\n954 954\n953 953\n952 952\n951 951\n950 950\n949 949\n948 948\n947 947\n946 946\n945 945\n944 944\n943 943\n942 942\n941 941\n940 940\n939 939\n938 938\n937 937\n936 936\n935 935\n934 934\n933 933\n932 932\n931 931\n930 930\n929 929\n928 928\n927 927\n926 926\n925 925\n924 924\n923 923\n922 922\n921 921\n920 920\n919 919\n918 918\n917 917\n916 916\n915 915\n914 914\n913 913\n912 912\n911 911\n910 910\n909 909\n908 908\n907 907\n906 906\n905 905\n904 904\n903 903\n902 902\n901 901\n900 900\n899 899\n898 898\n897 897\n896 896\n895 895\n894 894\n893 893\n892 892\n891 891\n890 890\n889 889\n888 888\n887 887\n886 886\n885 885\n884 884\n883 883\n882 882\n881 881\n880 880\n879 879\n878 878\n877 877\n876 876\n875 875\n874 874\n873 873\n872 872\n871 871\n870 870\n869 869\n868 868\n867 867\n866 866\n865 865\n864 864\n863 863\n862 862\n861 861\n860 860\n859 859\n858 858\n857 857\n856 856\n855 855\n854 854\n853 853\n852 852\n851 851\n850 850\n849 849\n848 848\n847 847\n846 846\n845 845\n844 844\n843 843\n842 842\n841 841\n840 840\n839 839\n838 838\n837 837\n836 836\n835 835\n834 834\n833 833\n832 832\n831 831\n830 830\n829 829\n828 828\n827 827\n826 826\n825 825\n824 824\n823 823\n822 822\n821 821\n820 820\n819 819\n818 818\n817 817\n816 816\n815 815\n814 814\n813 813\n812 812\n811 811\n810 810\n809 809\n808 808\n807 808\n806 806\n805 805\n804 804\n803 803\n802 802\n801 802\n800 802\n799 801\n798 801\n797 801\n796 801\n795 801\n794 801\n793 801\n792 801\n791 801\n790 801\n789 801\n788 801\n787 801\n786 801\n785 801\n784 801\n783 801\n782 801\n781 801\n780 801\n779 801\n778 801\n777 801\n776 801\n775 801\n774 801\n773 801\n772 801\n771 801\n770 801\n769 801\n768 801\n767 801\n766 801\n765 801\n764 801\n763 801\n762 801\n761 801\n760 801\n759 801\n758 801\n757 801\n756 801\n755 801\n754 801\n753 801\n752 801\n751 801\n750 801\n749 801\n748 801\n747 801\n746 801\n745 801\n744 801\n743 801\n742 801\n741 801\n740 801\n739 801\n738 801\n737 801\n736 801\n735 801\n734 801\n733 801\n732 801\n731 801\n730 801\n729 801\n728 801\n727 801\n726 801\n725 801\n724 801\n723 801\n722 801\n721 801\n720 801\n719 801\n718 801\n717 801\n716 801\n715 801\n714 801\n713 801\n712 801\n711 801\n710 801\n709 801\n708 801\n707 801\n706 801\n705 801\n704 801\n703 801\n702 801\n701 801\n700 801\n699 801\n698 801\n697 801\n696 801\n695 801\n694 801\n693 801\n692 801\n691 801\n690 801\n689 801\n688 801\n687 801\n686 801\n685 801\n684 801\n683 801\n682 801\n681 801\n680 801\n679 801\n678 801\n677 801\n676 801\n675 801\n674 801\n673 801\n672 801\n671 801\n670 801\n669 801\n668 801\n667 801\n666 801\n665 801\n664 801\n663 801\n662 801\n661 801\n660 801\n659 801\n658 801\n657 801\n656 801\n655 801\n654 801\n653 801\n652 801\n651 801\n650 801\n649 801\n648 801\n647 801\n646 801\n645 801\n644 801\n643 801\n642 801\n641 801\n640 801\n639 801\n638 801\n637 801\n636 801\n635 801\n634 801\n633 801\n632 801\n631 801\n630 801\n629 801\n628 801\n627 801\n626 801\n625 801\n624 801\n623 801\n622 801\n621 801\n620 801\n619 801\n618 801\n617 801\n616 801\n615 801\n614 801\n613 801\n612 801\n611 801\n610 801\n609 801\n608 801\n607 801\n606 801\n605 801\n604 801\n603 801\n602 801\n601 801\n600 801\n599 801\n598 801\n597 801\n596 801\n"
    },
    {
        "number": 3182,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n1 0\n2 6\n8 6\n5 7''') == '0'\nassert solution('''3\n4 2\n2 1\n1 3''') == '1'\nassert solution('''1\n0 0\n1 1''') == '1'\nassert solution('''4\n-1 0\n-2 -1\n-3 -2\n-4 -3''') == '1'\nassert solution('''7\n-2 -4\n-3 -5\n-4 -6\n-5 -7\n-6 -8\n-7 -9\n-8 -10''') == '8'\n"
    },
    {
        "number": 3182,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n3\\n1\\n2\\n2\\n3\\n2') == '0'\nassert solution('2\\n3\\n2\\n3\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1') == '1'\nassert solution('1\\n3\\n1\\n2\\n2\\n3\\n2') == '0'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 3182,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\\n0\") == \"\"\nassert solution(\"1\\n0\\n0\") == \"\"\nassert solution(\"1\\n1\\n0\") == \"\"\n"
    },
    {
        "number": 3182,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n4 2\n2 1\n1 3''') == '1'\nassert solution('''4\n5 0\n2 6\n8 6\n5 7''') == '0'\nassert solution('''9\n0 0\n2 10\n5 -10\n-4 -9\n3 -2\n0 -3\n2 -6\n6 -9\n7 2''') == '7'\nassert solution('''10\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1''') == '0'\nassert solution('''20\n0 0\n5 1\n7 1\n3 6\n3 -2\n4 0\n6 -4\n2 4\n1 -1\n3 2\n3 -2\n6 7\n2 6\n0 7\n5 -6\n8 0\n7 7\n-4 2\n7 -5\n9 1\n8 -4\n7 7\n4 2\n0 0\n1 0\n2 0\n0 -1\n2 2\n2 -1\n-1 1\n0 -2\n3 0\n1 2\n2 -2\n1 -2\n-1 1\n-2 2\n1 -3\n-2 2\n0 -2\n1 -2\n0 -1''') == '7'\n"
    },
    {
        "number": 3182,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n2\\n1\\n3') == '1'\nassert solution('1\\n-2\\n2\\n2\\n1') == '0'\nassert solution('2\\n-1\\n0\\n-1\\n2') == '1'\nassert solution('2\\n1\\n-2\\n2\\n1') == '0'\nassert solution('2\\n2\\n1\\n2\\n1') == '1'\n"
    },
    {
        "number": 3182,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3\\n1 2\\n2 1') == '1'\nassert solution('3\\n4 2\\n2 1\\n1 3') == '1'\nassert solution('2\\n1 2\\n2 1\\n1 3') == '0'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '0'\nassert solution('4\\n5 0\\n2 6\\n8 6\\n5 7') == '0'\n"
    },
    {
        "number": 3182,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n4 2\n2 1\n1 3''') == '1'\nassert solution('''4\n5 0\n2 6\n8 6\n5 7''') == '0'\nassert solution('''1\n2\n3\n4\n5''') == '1'\nassert solution('''2\n1\n1\n2\n3\n3\n4\n4\n5''') == '3'\nassert solution('''2\n4\n3\n4\n4\n5\n5\n5\n5\n5\n5\n5\n5''') == '4'\n"
    },
    {
        "number": 3182,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n4 2\\n2 1\\n1 3') == '1'\nassert solution('2\\n4 2\\n2 1\\n1 3') == '0'\nassert solution('2\\n4 2\\n2 1\\n1 3\\n3 2\\n2 3\\n3 1\\n2 2\\n3 3') == '3'\nassert solution('2\\n4 2\\n2 1\\n1 3\\n3 2\\n2 3\\n3 1\\n2 2\\n3 3\\n1 2\\n2 1\\n3 3') == '0'\nassert solution('2\\n4 2\\n2 1\\n1 3\\n3 2\\n2 3\\n3 1\\n2 2\\n3 3\\n1 2\\n2 1\\n3 3\\n2 2\\n2 1') == '0'\n"
    },
    {
        "number": 3183,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1 2 0 2') == '1'\nassert solution('2 1 0 2') == '2'\nassert solution('2 2 0 2') == '2'\nassert solution('2 1 0 2 2 1') == '3'\n"
    },
    {
        "number": 3183,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0 2000\"\nassert solution(stdin) == '1 60'\nassert solution(stdin) == '0 0'\nassert solution(stdin) == '0 100'\nassert solution(stdin) == '0 0'\n"
    },
    {
        "number": 3183,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3183,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10') == '4 140'\nassert solution('2 1 0 1\\n0 1 1000 100\\n') == '1000 100000'\n"
    },
    {
        "number": 3183,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\\n') == '4 140'\nassert solution('2 1 0 1\\n0 1 1000 100\\n') == '1000 100000'\n\n\"\"\""
    },
    {
        "number": 3183,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''0 1 4 3\n0 1 4 10\n0 2 2 10\n0 3 3 10\n1 3 1 30\n2 3 2 30\n0 2 4 30\n0 2 1 10\n0 2 4 10\n1 2 2 10\n0 1 4 10\n0 3 4 10\n0 1 4 10\n2 2 2 10\n0 3 4 10\n0 1 4 10\n0 1 4 10\n0 2 2 10\n0 2 4 10\n0 2 1 10\n0 3 4 10\n0 3 2 10\n0 3 4 10\n1 3 1 30\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 2 2 10\n0 2 4 10\n0 2 1 10\n0 3 4 10\n0 3 2 10\n0 3 4 10\n1 3 1 30\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 3 4 10\n0 2 2 10\n0 2 4 10\n0 2 1 10\n0 3 4 10\n0 3 2 10\n0 3 4 10\n1 3 1 30\n''') == '200 100'\n\nassert solution('''0 1 4 3\n0 1 4 10\n0 2 2 10\n0 3 3 10\n1 3 1 30\n2 3 2 30\n0 2 4 30\n0 2 1 10\n0 2 4 10\n0 2 1 10\n0 3 4 10\n0 3 2 10\n0 3 4 10\n1 3 1 30\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 3 4 10\n0 1 4 10\n2 2 2 10\n0 3 4 10\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 2 2 10\n0 2 4 10\n0 2 1 10\n0 3 4 10\n0 3 2 10\n0 3 4 10\n1 3 1 30\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 3 4 10\n0 1 4 10\n2 2 2 10\n0 3 4 10\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 2 2 10\n0 2 4 10\n0 2 1 10\n0 3 4 10\n0 3 2 10\n0 3 4 10\n1 3 1 30\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 2 2 10\n0 2 4 10\n0 2 1 10\n0 3 4 10\n0 3 2 10\n0 3 4 10\n1 3 1 30\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 2 2 10\n0 2 4 10\n0 2 1 10\n0 3 4 10\n0 3 2 10\n0 3 4 10\n1 3 1 30\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 2 2 10\n0 2 4 10\n0 2 1 10\n0 3 4 10\n0 3 2 10\n0 3 4 10\n1 3 1 30\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 2 2 10\n0 2 4 10\n0 2 1 10\n0 3 4 10\n0 3 2 10\n0 3 4 10\n1 3 1 30\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 2 2 10\n0 2 4 10\n0 2 1 10\n0 3 4 10\n0 3 2 10\n0 3 4 10\n1 3 1 30\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 2 2 10\n0 2 4 10\n0 2 1 10\n0 3 4 10\n0 3 2 10\n0 3 4 10\n1 3 1 30\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 2 2 10\n0 2 4 10\n0 2 1 10\n0 3 4 10\n0 3 2 10\n0 3 4 10\n1 3 1 30\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 2 2 10\n0 2 4 10\n0 2 1 10\n0 3 4 10\n0 3 2 10\n0 3 4 10\n1 3 1 30\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 2 2 10\n0 2 4 10\n0 2 1 10\n0 3 4 10\n0 3 2 10\n0 3 4 10\n1 3 1 30\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 2 2 10\n0 2 4 10\n0 2 1 10\n0 3 4 10\n0 3 2 10\n0 3 4 10\n1 3 1 30\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 2 2 10\n0 2 4 10\n0 2 1 10\n0 3 4 10\n0 3 2 10\n0 3 4 10\n1 3 1 30\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 2 2 10\n0 2 4 10\n0 2 1 10\n0 3 4 10\n0 3 2 10\n0 3 4 10\n1 3 1 30\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 2 2 10\n0 2 4 10\n0 2 1 10\n0 3 4 10\n0 3 2 10\n0 3 4 10\n1 3 1 30\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 2 2 10\n0 2 4 10\n0 2 1 10\n0 3 4 10\n0 3 2 10\n0 3 4 10\n1 3 1 30\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 2 2 10\n0 2 4 10\n0 2 1 10\n0 3 4 10\n0 3 2 10\n0 3 4 10\n1 3 1 30\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 2 2 10\n0 2 4 10\n0 2 1 10\n0 3 4 10\n0 3 2 10\n0 3 4 10\n1 3 1 30\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 2 2 10\n0 2 4 10\n0 2 1 10\n0 3 4 10\n0 3 2 10\n0 3 4 10\n1 3 1 30\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 2 2 10\n0 2 4 10\n0 2 1 10\n0 3 4 10\n0 3 2 10\n0 3 4 10\n1 3 1 30\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 2 2 10\n0 2 4 10\n0 2 1 10\n0 3 4 10\n0 3 2 10\n0 3 4 10\n1 3 1 30\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 3 4 10\n0 1 4 10\n0 2 2 10\n0 2 4 10\n0 2 1 10\n0 3 4 10\n0 3 2 10\n0 3 4 10\n1 3 1 30\n0 1"
    },
    {
        "number": 3183,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\") == \"4 140\"\nassert solution(\"2 1 0 1\\n0 1 1000 100\\n\") == \"1000 100000\"\n"
    },
    {
        "number": 3183,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3183,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 1 0 1\") == \"4 100\"\nassert solution(\"1 2 0 1\") == \"1000 100\"\nassert solution(\"4 4 0 3\") == \"4 140\"\nassert solution(\"0 1 4 10\") == \"1 1000\"\nassert solution(\"1 2 2 10\") == \"1 1000\"\n"
    },
    {
        "number": 3183,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"4 4 0 3\n0 1 4 10\n1 2 2 10\n0 2 4 30\n2 3 4 10\"\"\"\n) == '4 140'\n\nassert solution(\n\"\"\"2 1 0 1\n0 1 1000 100\n\"\"\"\n) == '1000 100000'\n\nassert solution(\n\"\"\"4 5 1 9\n0 1 4 10\n1 2 2 10\n0 2 4 30\n2 3 4 10\n3 4 2 10\n3 2 1 9\"\"\"\n) == '5 90'\n\nassert solution(\n\"\"\"4 4 0 4\n0 1 4 10\n1 2 2 10\n0 2 4 30\n2 3 4 10\n3 4 2 10\n3 2 1 9\"\"\"\n) == '4 140'\n\nassert solution(\n\"\"\"4 5 1 9\n0 1 4 10\n1 2 2 10\n0 2 4 30\n2 3 4 10\n3 4 2 10\n3 2 1 9\n1 1 1 10\n2 2 2 10\n3 3 3 10\"\"\"\n) == '4 100'"
    },
    {
        "number": 3184,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3184,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(TEST_INPUT) == TEST_OUTPUT"
    },
    {
        "number": 3184,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''100 7\n1 50\n50 70\n70 90\n90 40\n20 60\n60 80\n80 20''') == '3'\nassert solution('''2 2\n1 50\n50 70\nSample Output 2:\nimpossible''') == 'impossible'\nassert solution('''1 1\n100 100\nSample Output 2:\nimpossible''') == 'impossible'\nassert solution('''2 3\n1 2\n1 4\n3 4\nSample Output 2:\nimpossible''') == 'impossible'\nassert solution('''100 7\n1 50\n50 70\n70 90\n90 40\n20 60\n60 80\n80 20''') == '3'\n"
    },
    {
        "number": 3184,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n3 2\") == \"impossible\"\nassert solution(\"1\\n3 2\\n2 3\") == \"impossible\"\nassert solution(\"1\\n3 2\\n2 3\\n1 3\") == \"impossible\"\nassert solution(\"1\\n3 2\\n2 3\\n1 3\\n3 4\") == \"impossible\"\nassert solution(\"1\\n3 2\\n2 3\\n1 3\\n3 4\\n4 5\") == \"impossible\"\n"
    },
    {
        "number": 3184,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''100 7\n1 50\n50 70\n70 90\n90 40\n20 60\n60 80\n80 20'''\n) == '3'\nassert solution(\n'''1000 1000\n1 1\n1 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000'''\n) == 'impossible'\nassert solution(\n'''100 100\n1 1\n1 100\n100 100\n100 100\n100 100\n100 100\n100 100'''\n) == '2'\nassert solution(\n'''10 10\n1 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10'''\n) == '2'\nassert solution(\n'''10 10\n1 10\n1 9\n10 9\n10 9\n10 9\n10 9\n10 9\n10 9\n10 9\n10 9'''\n) == '1'\n"
    },
    {
        "number": 3184,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3184,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 4\\n1 2\\n4 3\\n\") == 'impossible'\nassert solution(\"2 3\\n1 2\\n4 3\\n\") == '3'\nassert solution(\"1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10"
    },
    {
        "number": 3184,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''100 7\n1 50\n50 70\n70 90\n90 40\n20 60\n60 80\n80 20''') == '3'\nassert solution('''8 2\n8 3\n5 7\n''') == 'impossible'"
    },
    {
        "number": 3184,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''100 7\n1 50\n50 70\n70 90\n90 40\n20 60\n60 80\n80 20''') == '3'\nassert solution('''8 2\n8 3\n5 7\n''') == 'impossible'\nassert solution('''1\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100''') == '6'\nassert solution('''1\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n''') == '10'\nassert solution('''1\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252"
    },
    {
        "number": 3184,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''100 7\n1 50\n50 70\n70 90\n90 40\n20 60\n60 80\n80 20''') == '3'\nassert solution('''4 2\n1 2\n1 3\n2 3\n3 4\n4 1''') == 'impossible'\nassert solution('''100 10\n1 100\n1 4\n3 10\n3 4\n1 2\n1 3\n2 3\n3 4\n4 5\n3 6\n4 7\n3 8\n1 9\n1 10\n2 9\n2 10\n1 11\n1 12\n2 11\n2 12\n2 13\n3 11\n3 12\n3 13\n3 14\n4 11\n4 12\n4 13\n4 14\n4 15\n3 16\n3 17\n3 18\n4 15\n4 16\n4 17\n4 18\n4 19\n3 20\n3 21\n3 22\n4 19\n4 20\n4 21\n4 22\n4 23\n3 24\n3 25\n3 26\n4 24\n4 25\n4 26\n4 27\n3 28\n3 29\n3 30\n4 27\n4 28\n4 29\n4 30\n4 31\n3 32\n3 33\n3 34\n4 31\n4 32\n4 33\n4 34\n4 35\n3 36\n3 37\n3 38\n4 35\n4 36\n4 37\n4 38\n4 39\n3 40\n3 41\n3 42\n4 39\n4 40\n4 41\n4 42\n4 43\n3 44\n3 45\n3 46\n4 43\n4 44\n4 45\n4 46\n4 47\n3 48\n3 49\n3 50\n4 47\n4 48\n4 49\n4 50\n4 51\n3 52\n3 53\n3 54\n4 51\n4 52\n4 53\n4 54\n4 55\n3 56\n3 57\n3 58\n4 55\n4 56\n4 57\n4 58\n4 59\n3 60\n3 61\n3 62\n4 59\n4 60\n4 61\n4 62\n4 63\n3 64\n3 65\n3 66\n4 63\n4 64\n4 65\n4 66\n4 67\n3 68\n3 69\n3 70\n4 67\n4 68\n4 69\n4 70\n4 71\n3 72\n3 73\n3 74\n4 71\n4 72\n4 73\n4 74\n4 75\n3 76\n3 77\n3 78\n4 75\n4 76\n4 77\n4 78\n4 79\n3 80\n3 81\n3 82\n4 79\n4 80\n4 81\n4 82\n4 83\n3 84\n3 85\n3 86\n4 83\n4 84\n4 85\n4 86\n4 87\n3 88\n3 89\n3 90\n4 87\n4 88\n4 89\n4 90\n4 91\n3 92\n3 93\n3 94\n4 91\n4 92\n4 93\n4 94\n4 95\n3 96\n3 97\n3 98\n4 95\n4 96\n4 97\n4 98\n4 99\n3 100\n3 101\n3 102\n4 99\n4 100\n4 101\n4 102\n4 103\n3 104\n3 105\n3 106\n4 103\n4 104\n4 105\n4 106\n4 107\n3 108\n3 109\n3 110\n4 107\n4 108\n4 109\n4 110\n4 111\n3 112\n3 113\n3 114\n4 111\n4 112\n4 113\n4 114\n4 115\n3 116\n3 117\n3 118\n4 115\n4 116\n4 117\n4 118\n4 119\n3 120\n3 121\n3 122\n4 119\n4 120\n4 121\n4 122\n4 123\n3 124\n3 125\n3 126\n4 123\n4 124\n4 125\n4 126\n4 127\n3 128\n3 129\n3 130\n4 127\n4 128\n4 129\n4 130\n4 131\n3 132\n3 133\n3 134\n4 131\n4 132\n4 133\n4 134\n4 135\n3 136\n3 137\n3 138\n4 135\n4 136\n4 137\n4 138\n4 139\n3 140\n3 141\n3 142\n4 139\n4 140\n4 141\n4 142\n4 143\n3 144\n3 145\n3 146\n4 143\n4 144\n4 145\n4 146\n4 147\n3 148\n3 149\n3 150\n4 147\n4 148\n4 149\n4 150\n4 151\n3 152\n3 153\n3 154\n4 151\n4 152\n4 153\n4 154\n4 155\n3 156\n3 157\n3 158\n4 155\n4 156\n4 157\n4 158\n4 159\n3 160\n3 161\n3 162\n4 159\n4 160\n4 161\n4 162\n4 163\n3 164\n3 165\n3 166\n4 163\n4 164\n4 165\n4 166\n4 167\n3 168\n3 169\n3 170\n4 167\n4 168\n4 169\n4 170\n4 171\n3 172\n3 173\n3 174\n4 171\n4 172\n4 173\n4 174\n4 175\n3 176\n3 177\n3 178\n4 175\n4 176\n4 177\n4 178\n4 179\n3 180\n3 181\n3 182\n4 179\n4 180\n4 181\n4 182\n4 183\n3 184\n3 185\n3 186\n4 183\n4 184\n4 185\n4 186\n4 187\n3 188\n3 189\n3 190\n4 187\n4 188\n4 189\n4 190\n4 191\n3 192\n3 193\n3 194\n4 191\n4 192\n4 193\n4 194\n4 195\n3 196\n3 197\n3 198\n4 195\n4 196\n4 197\n4 198\n4 199\n3 200\n3 201\n3 202\n4 199\n4 200\n4 201\n4 202\n4 203\n3 204\n3 205\n3 206\n4 203\n4 204\n4 205\n4 206\n4 207\n3 208\n3 209\n3 210\n4 207\n4 208\n4 209\n4 210\n4 211\n3 212\n3 213\n3 214\n4 211\n4 212\n4 213\n4 214\n4 215\n3 216\n3 217\n3 218\n4 215\n4 216\n4 217\n4 218\n4 219\n3 220\n3 221\n3 222\n4 219\n4 220\n4 221\n4 222\n4 223\n3 224\n3 225\n3 226\n4 223\n4 224\n4 225\n4 226\n4 227\n3 228\n3 229\n3 230\n4 227\n4 228\n4 229\n4 230\n4 231\n3 232\n3 233\n3 234\n4 231\n4 232\n4 233\n4 234\n4 235\n3 236\n3 237\n3 238\n4 235\n4 236\n4 237\n4 238\n4 239\n3 240\n3 241\n3 242\n4 239\n4 240\n4 241\n4 242\n4 243\n3 244\n3 245\n3 246\n4 243\n4 244\n4 245\n4 246\n4 247\n3 248\n3 249\n3 250\n4 247\n4 248\n4 249\n4 250\n4 251\n3 252\n3 253\n3 254\n4 251\n4 252\n4"
    },
    {
        "number": 3185,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10') == 1\nassert solution('12') == 3\nassert solution('1234') == 6\nassert solution('123456789') == 3628800\nassert solution('9123456789') == 3628800\n"
    },
    {
        "number": 3185,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''120''') == '5'\nassert solution('''51090942171709440000''') == '21'\nassert solution('''1000000000''') == '3628800'\nassert solution('''0''') == '1'\nassert solution('''10000000''') == '3628800'\n"
    },
    {
        "number": 3185,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('120') == '5'\nassert solution('51090942171709440000') == '21'\nprint('Testcases passed')\n"
    },
    {
        "number": 3185,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('120') == '5'\nassert solution('51090942171709440000') == '21'\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 3185,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"120\") == \"5\"\nassert solution(\"51090942171709440000\") == \"21\"\nassert solution(\"1\" * 10000) == \"1\" * 10000\nassert solution(\"1\" * 100000) == \"1\" * 100000\nassert solution(\"9\" * 100000000) == \"9\" * 100000000\n"
    },
    {
        "number": 3185,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(120) == \"5\"\nassert solution(51090942171709440000) == \"21\"\nprint(\"All tests passed successfully!\")\n"
    },
    {
        "number": 3185,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''120''') == '5'\nassert solution('''51090942171709440000''') == '21''''\n"
    },
    {
        "number": 3185,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 2') == '1'\nassert solution('3 6') == '720'\nassert solution('3 17') == '5040'\nassert solution('3 123') == '6227020800'\n"
    },
    {
        "number": 3185,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('20\\n') == '5'\nassert solution('51090942171709440000\\n') == '21'\n"
    },
    {
        "number": 3185,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''120''') == '5'\nassert solution('''51090942171709440000''') == '21'\nassert solution('''120323547553143523423543434''') == '120323547553143523423543434'\nassert solution('''123456789''') == '123456789'\nassert solution('''109876543210987654321098765''') == '109876543210987654321098765'\n"
    },
    {
        "number": 3186,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '10'\n"
    },
    {
        "number": 3186,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"10 1 2\") == 45\nassert solution(\"3 3 3\") == 10\nassert solution(\"5 2 1\") == 7\nassert solution(\"1 1 1\") == 1\nassert solution(\"1 1 1\") == 1\n"
    },
    {
        "number": 3186,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\n\"\"\""
    },
    {
        "number": 3186,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 1 2') == '45'\n\n\"\"\"\n"
    },
    {
        "number": 3186,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"10 1 2\") == \"45\"\nassert solution(\"3 3 3\") == \"10\"\n\"\"\"\n\nn, m, k = map(int, stdin.split())\nn_choose_k = math.factorial(n) / math.factorial(m) / math.factorial(n - m)\n\nprint((n_choose_k % 1000000007) * (k % 1000000007) % 1000000007)\n"
    },
    {
        "number": 3186,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 2 5\") == \"45\"\nassert solution(\"3 3 3\") == \"10\"\nassert solution(\"10 1 2\") == \"45\"\n"
    },
    {
        "number": 3186,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"10 1 2\") == \"45\"\nassert solution(\"3 3 3\") == \"10\"\nassert solution(\"3 1 2\") == \"45\"\nassert solution(\"10 10 10\") == \"10\"\nassert solution(\"5 4 2\") == \"0\"\n"
    },
    {
        "number": 3186,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"10 1 2\") == \"45\"\nassert solution(\"3 3 3\") == \"10\"\nassert solution(\"10 10 10\") == \"0\"\nassert solution(\"10 1 2\") == \"45\"\nassert solution(\"1 1 1\") == \"1\"\n"
    },
    {
        "number": 3186,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10 1 2') == '45'\nassert solution('3 3 3') == '10'\n"
    },
    {
        "number": 3186,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3187,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3\n10''') == '18'\nassert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3\n0\n''') == 'impossible'\nassert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3\n4\n''') == '20'\nassert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3\n5\n''') == 'impossible'\n"
    },
    {
        "number": 3187,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3187,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3\n5''') == \"18\"\nassert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3\n5''') == \"20\"\nassert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3\n10''') == \"impossible\"\nassert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3\n5\n3 5\n2 3\n5 3\n1 3\n5 2\n1 5\n3 5\n2 1\n4 1\n2 1\n5 9\n2 6\n5 3\n10''') == \"20\"\nassert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3\n10''') == \"impossible\"\n"
    },
    {
        "number": 3187,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3\n5''') == '18'\nassert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3\n10''') == 'impossible'\nassert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3\n4''') == '20'\nassert solution('''2\n1 1\n2 1\n4''') == 'impossible'\nassert solution('''2\n1 1\n2 2\n4''') == 'impossible'\n"
    },
    {
        "number": 3187,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3\n5''') == '18'\nassert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3\n5''') == '20'\nassert solution('''6\n3 1\n4 1\n5 9\n2 6\n5 3\n5''') == 'impossible'\nassert solution('''6\n3 1\n4 1\n5 9\n2 6\n5 3\n0''') == 'impossible'\nassert solution('''5\n6\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n"
    },
    {
        "number": 3187,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"impossible\""
    },
    {
        "number": 3187,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '18'"
    },
    {
        "number": 3187,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3\n5\n''') == '18'\nassert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3\n0\n''') == 'impossible'\nassert solution('''0\n0\n0\n0\n0\n0\n0\n''') == 'impossible'\nassert solution('''1\n0\n0\n0\n0\n0\n0\n''') == 'impossible'\nassert solution('''3\n1 0\n2 0\n3 0\n4 0\n5 0\n''') == 'impossible'\n"
    },
    {
        "number": 3187,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\") == \"18\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n5\\n5\") == \"20\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5 5\\n5\") == \"impossible\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5 5\\n5 5\") == \"impossible\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5 5\\n5 5 5\") == \"impossible\"\n"
    },
    {
        "number": 3187,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3\n5\n''') == '18'\nassert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3\n2\n''') == '20'\nassert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3\n7\n''') == 'impossible'\nassert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3\n10\n''') == 'impossible'\nassert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3\n3\n''') == 'impossible'\n"
    },
    {
        "number": 3188,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n1') == '2'\nassert solution('2\\n1\\n1') == '2'\nassert solution('2\\n1\\n-1') == '2'\nassert solution('3\\n-1\\n-1\\n-1') == '2'\nassert solution('3\\n1\\n2\\n3') == '2'\n"
    },
    {
        "number": 3188,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\n1 5 10\n7 8 2''') == '3'\nassert solution('''3\n-1 -1 -1\n5 5 5\n10 10 10''') == '11'\nassert solution('''3\n-1 -1 -1\n1 1 1\n2 2 2''') == '5'\n'''\n"
    },
    {
        "number": 3188,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n1 5 10\n7 8 2''') == '3'\n'''\n\n'''"
    },
    {
        "number": 3188,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n1 2 10\n5 8 2\n''') == '3'\n\nassert solution('''\n2\n0 0 0\n0 1 1\n''') == '1'\n"
    },
    {
        "number": 3188,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"11\"\nassert solution(\"10\") == \"11\"\nassert solution(\"1\") == \"3\"\nassert solution(\"10\") == \"11\"\n"
    },
    {
        "number": 3188,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3188,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\n1 5 10\n7 8 2''') == '3'\nassert solution('''3\n-1 -1 -1\n5 5 5\n10 10 10''') == '11'\nassert solution('''4\n8 8 8\n1 1 1\n1 1 1\n8 8 8\n2 2 2''') == '20'\nassert solution('''5\n9 9 9\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n8 8 8''') == '22'\nassert solution('''6\n3 3 3\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1''') == '30'\n"
    },
    {
        "number": 3188,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1\\n1\") == \"0\"\nassert solution(\"1\\n0\\n0\\n0\\n0\\n0\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"0\"\n"
    },
    {
        "number": 3188,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3188,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n-1 -1 -1\\n5 5 5') == '3'\nassert solution('3\\n-1 -1 -1\\n5 5 5\\n10 10 10') == '11'\nassert solution('10\\n-1 -1 -1\\n5 5 5\\n10 10 10\\n1 1 1') == '11'\nassert solution('1\\n-1 -1 -1\\n5 5 5') == '3'\nassert solution('3\\n-1 -1 -1\\n5 5 5\\n10 10 10\\n1 1 1') == '11'\n"
    },
    {
        "number": 3189,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 1\n110\n011''') == '2'\nassert solution('''4 2\n1000\n1000\n0000\n0010''') == '0'\nassert solution('''10 10\n11111111\n00011111\n00001111\n00001111\n00001111\n00001111\n00001111\n00001111\n00001111\n00001111\n00001111\n00011111\n11111111\n00001111\n00001111\n00001111\n00001111\n00011111\n11100000\n01011110\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101\n00000101"
    },
    {
        "number": 3189,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(open(\"test_input_01.txt\", \"r\").read()) == \"2\"\nassert solution(open(\"test_input_02.txt\", \"r\").read()) == \"0\"\nprint(solution(open(\"input.txt\", \"r\").read()))\n"
    },
    {
        "number": 3189,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 1\\n110\\n011\\n') == '2'\nassert solution('4 2\\n1000\\n1000\\n0000\\n0010\\n') == '0'\n"
    },
    {
        "number": 3189,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3189,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n3 1\n110\n011\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n4 2\n1000\n1000\n0000\n0010\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"\n3 3\n11100\n0000\n00100\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n5 3\n11110\n0000\n11010\n1000\n0000\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3189,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3189,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0\"\nassert solution(\"2 2\\n1 0\\n0 1\") == \"2\"\nassert solution(\"3 1\\n111\\n110\\n011\\n000\") == \"2\"\nassert solution(\"10 2\\n1010\\n1010\\n1010\\n1010\\n1010\\n1010\\n1010\\n1010\") == \"0\"\nassert solution(\"4 3\\n101\\n000\\n100\\n010\") == \"3\"\n"
    },
    {
        "number": 3189,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"2 1\") == \"0\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"2 2\") == \"0\"\n"
    },
    {
        "number": 3189,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3189,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 1\n110\n011''') == '2'\nassert solution('''4 2\n1000\n1000\n0000\n0010''') == '0'\nassert solution('''4 1\n0000''') == '1'\nassert solution('''4 1\n1111''') == '1'\nassert solution('''4 1\n1111\n0000''') == '1'\n"
    },
    {
        "number": 3190,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\\n1 2 3\\n3\") == \"1\"\nassert solution(\"3\\n1 3 2\\n2\") == \"5\"\n"
    },
    {
        "number": 3190,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == output"
    },
    {
        "number": 3190,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3190,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3190,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3190,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3190,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n1 2 3\n3\n''') == '1'\nassert solution('''3\n1 3 2\n2\n''') == '5'\nassert solution('''1\n1\n''') == '1'\nassert solution('''2\n1\n1\n''') == '2'\nassert solution('''10\n1 3 2 4 5 6 7 8 9\n4\n''') == '2'\n"
    },
    {
        "number": 3190,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3190,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected1\n\n\"\"\""
    },
    {
        "number": 3190,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n1 2 3\n3\n3''') == '1'\nassert solution('''3\n1 2 3\n2\n3''') == '5'\nassert solution('''3\n1 3 2\n2\n3''') == '1'\nassert solution('''3\n5 3 2\n3\n2''') == '1'\nassert solution('''3\n5 3 2\n4\n2''') == '4'\n"
    },
    {
        "number": 3191,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 100 20') == '0'\nassert solution('10 10 1') == '19'\nprint('tests passed')\n"
    },
    {
        "number": 3191,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3191,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == ''"
    },
    {
        "number": 3191,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0\"\nassert solution(\"1 100 10\") == \"0\"\nassert solution(\"1 100 1\") == \"1\"\nassert solution(\"1 1 0\") == \"1\"\nassert solution(\"10 10 1\") == \"9\"\n"
    },
    {
        "number": 3191,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == 19\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3191,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 100 20\") == \"0\"\nassert solution(\"1 100 20 1\") == \"19\"\nassert solution(\"1 100 20 1 1\") == \"0\"\nassert solution(\"1 100 20 1 2\") == \"19\"\nassert solution(\"1 100 20 1 3\") == \"0\"\n"
    },
    {
        "number": 3191,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input().split()) == 0, \"Test 1 failed\"\nassert solution(input().split()) == 19, \"Test 2 failed\"\n\"\"\""
    },
    {
        "number": 3191,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == \"0\"\n\nIf this is a particularly hard problem, running the program for a long time, in the new version, might take much longer than running it for a short time. This is why we need to see the answer in the smallest time possible, before the new version is released.\n\n-------Note-------\nThe exact answer might not be 100% obvious, but the optimal approach is very similar to this one, only the timing changes. The worst-case time is always obtained by replacing the innermost if-else statements, but the time to replace the innermost if-else changes the time to find the solution for the second version, so we need to replace the innermost if-else in the second version.\n\nNote that you have to replace the innermost if-else in the second version to find the answer in the smallest time, as the else statement will never be executed.\n\"\"\"\n"
    },
    {
        "number": 3191,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('1 1 1') == '1'\nassert solution('2 1 1') == '0'\nassert solution('3 1 1') == '2'\nassert solution('4 1 1') == '1'\n"
    },
    {
        "number": 3191,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1 1') == '0'\nassert solution('2 2 2') == '19'\nassert solution('10 10 1') == '19'\nassert solution('1 100 20') == '0'\nassert solution('100 100 1') == '19'\n"
    },
    {
        "number": 3192,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('classa classb myfilec execd libe') == 'classa'\nassert solution('classa classb myfilec execd libe') == 'classb'\nassert solution('classa classb myfilec execd libe') =='myfilec'\nassert solution('classa classb myfilec execd libe') == 'execd'\nassert solution('classa classb myfilec execd libe') == 'libe'\n"
    },
    {
        "number": 3192,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('classa classb myfilec execd libe' + \\\n                'classa 2' + \\\n                'import classb' + \\\n                'import myfilec, libe' + \\\n                'classb 1' + \\\n                'import execd' + \\\n                'myfilec 1' + \\\n                'import libe' + \\\n                'execd 1' + \\\n                'import libe' + \\\n                'libe 0') == 'classa classb myfilec execd libe'"
    },
    {
        "number": 3192,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4\\n\") == \"a,b,c,d\\n\"\nassert solution(\"5\\n\") == \"a,b,c,d\\nc,b,a\\n\"\nassert solution(\"5\\n\") == \"a,b,c,d\\nc,b,a\\n\"\nassert solution(\"5\\n\") == \"a,b,c,d\\nc,b,a\\n\"\nassert solution(\"5\\n\") == \"a,b,c,d\\nc,b,a\\n\"\n"
    },
    {
        "number": 3192,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 'SHIP IT'\nassert solution('classa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0') == 'classa'\nassert solution('classa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0') == 'classa'\nassert solution('classa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0') == 'classa'\nassert solution('classa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0') == 'classa'\n"
    },
    {
        "number": 3192,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"classa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\") == \"SHIP IT\"\nassert solution(\"classa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\") == \"MYFILEC\"\nassert solution(\"classa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\") == \"MYFILEC\"\nassert solution(\"classa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\") == \"MYFILEC\"\nassert solution(\"classa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\") == \"MYFILEC\"\n"
    },
    {
        "number": 3192,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n'\n    'a b c d\\n'\n    'a 1\\n'\n    'import d, b, c\\n'\n    'b 2\\n'\n    'import d\\n'\n    'import c\\n'\n    'c 1\\n'\n    'import c\\n'\n    'd 0\\n'\n) == 'c'\n\nassert solution('5\\n'\n    'classa classb myfilec execd libe\\n'\n    'classa 2\\n'\n    'import classb\\n'\n    'import myfilec, libe\\n'\n    'classb 1\\n'\n    'import execd\\n'\n    'myfilec 1\\n'\n    'import libe\\n'\n    'execd 1\\n'\n    'import libe\\n'\n    'libe 0\\n'\n) == 'SHIP IT'\n\nassert solution('5\\n'\n    'classa classb myfilec execd libe\\n'\n    'classa 2\\n'\n    'import classb\\n'\n    'import myfilec, libe\\n'\n    'classb 1\\n'\n    'import execd\\n'\n    'myfilec 1\\n'\n    'import libe\\n'\n    'execd 1\\n'\n    'import libe\\n'\n    'libe 0\\n'\n) == 'SHIP IT'\n\nassert solution('5\\n'\n    'classa classb myfilec execd libe\\n'\n    'classa 2\\n'\n    'import classb\\n'\n    'import myfilec, libe\\n'\n    'classb 1\\n'\n    'import execd\\n'\n    'myfilec 1\\n'\n    'import libe\\n'\n    'execd 1\\n'\n    'import libe\\n'\n    'libe 0\\n'\n) == 'SHIP IT'\n\nassert solution('5\\n'\n    'classa classb myfilec execd libe\\n'\n    'classa 2\\n'\n    'import classb\\n'\n    'import myfilec, libe\\n'\n    'classb 1\\n'\n    'import execd\\n'\n    'myfilec 1\\n'\n    'import libe\\n'\n    'execd 1\\n'\n    'import libe\\n'\n    'libe 0\\n'\n) == 'SHIP IT'"
    },
    {
        "number": 3192,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"SHIP IT\"\n\n@test\n"
    },
    {
        "number": 3192,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''classa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0''') == 'SHIP IT'\n\nassert solution('''classa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0''') == 'classa, classb, myfilec, libe, execd, classb'\n\nassert solution('''classa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0''') == 'classa, classb, myfilec, libe'\n\nassert solution('''classa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0''') == 'classa, classb, myfilec, libe'\n\nassert solution('''classa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0''') == 'classa, classb, myfilec, libe'"
    },
    {
        "number": 3192,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''a b c d\na 1\nimport d, b, c\nb 2\nimport d\nimport c\nc 1\nimport c\nd 0\n''') == 'c'\nassert solution('''classa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0\n''') == 'classa, myfilec, classb, libe'\nassert solution('''classa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0\n''') == 'classa, myfilec, classb, libe'\nassert solution('''classa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0\n''') == 'classa, myfilec, classb, libe'\nassert solution('''classa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0\n''') == 'classa, myfilec, classb, libe'\n"
    },
    {
        "number": 3192,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''classa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0''') == 'SHIP IT'\nassert solution('''classa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0''') == 'classb, libe'\nassert solution('''classa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0''') == 'classb'\nassert solution('''classa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0''') == 'classa, classb, libe'\nassert solution('''classa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0''') == 'classa, classb, libe'\n"
    },
    {
        "number": 3193,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5+3+x') == '1'\nassert solution('20+3+x') == '2'\nassert solution('5+3+x') == '1'\nassert solution('1+2+3+4') == '4'\nassert solution('1+2*3*4') == '4'\n"
    },
    {
        "number": 3193,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5+3+x') == '1'\nassert solution('5+3+x') == '1'\nassert solution('20+3+x') == '2'\nassert solution('20+3+x') == '2'\nassert solution('40+3+x') == '2'\n"
    },
    {
        "number": 3193,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"5+3+x\n9 10\n\"\"\") == \"1\"\nassert solution(\n\"\"\"20+3+x\n0 5\n\"\"\") == \"2\"\nassert solution(\n\"\"\"2+3*5\n1 5\n\"\"\") == \"1\"\nassert solution(\n\"\"\"x + x + x + x\n2 4\n\"\"\") == \"0\"\nassert solution(\n\"\"\"2+3*5\n1 5\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3193,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 + 2 + 1') == 2\nassert solution('6 + x - 2 - x') == 1\nassert solution('5 + 3 + x') == 2\nassert solution('x + 3 + x') == 2\nassert solution('x + 3 * (x + 1)') == 4\n"
    },
    {
        "number": 3193,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    \"5+3+x\"\n) == '1'\nassert solution(\n    \"20+3+x\"\n) == '2'\nassert solution(\n    \"5+3+x\"\n) == '1'\nassert solution(\n    \"20+3+x\"\n) == '2'\nassert solution(\n    \"5+3+x\"\n) == '1'\n"
    },
    {
        "number": 3193,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('20+3+x') == '2'\nassert solution('5+3+x') == '1'\nassert solution('5+3*(3*2)') == '1'\nassert solution('5*3*(3*2)') == '2'\nassert solution('5*3*(3+2)') == '2'\n"
    },
    {
        "number": 3193,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(solution) == str(solution)\n\nimport codewars_test as test\n\n@test.describe(\"Fixed Tests\")\n"
    },
    {
        "number": 3193,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5+3+x\") == \"1\"\nassert solution(\"20+3+x\") == \"2\"\nassert solution(\"20+3+x\") == \"2\"\nassert solution(\"4+5\") == \"5\"\nassert solution(\"x\") == \"x\"\n"
    },
    {
        "number": 3193,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3193,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5+3+x') == 1\nassert solution('20+3+x') == 2\nassert solution('5+3+x') == 1\nassert solution('20+3+x') == 2\nassert solution('5+3+x') == 1\n"
    },
    {
        "number": 3194,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3194,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"yes\"\nassert solution(stdin) == \"no\"\n\"\"\"\n"
    },
    {
        "number": 3194,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''0 15\n5 20''') == 'yes'\nassert solution('''0 15\n5 20\n0 15''') == 'no'\nassert solution('''0 15\n0 15\n5 20\n0 15''') == 'yes'\nassert solution('''0 15\n0 15\n5 20\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n5 20\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15\n0 15"
    },
    {
        "number": 3194,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3194,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 10\n0 15\n5 20''') == 'yes'\nassert solution('''2 10\n0 15\n5 20\n3 19\n1 18\n0 17\n1 16\n5 15\n3 14\n2 13\n0 12\n1 11\n5 10\n3 9\n2 8\n1 7\n0 6\n1 5\n5 4\n3 3\n2 2\n1 1\n0 0\n5''') == 'no'\n\nassert solution('''2 10\n0 15\n5 20\n3 19\n1 18\n0 17\n1 16\n5 15\n3 14\n2 13\n0 12\n1 11\n5 10\n3 9\n2 8\n1 7\n0 6\n1 5\n5 4\n3 3\n2 2\n1 1\n0 0\n5''') == 'yes'\n"
    },
    {
        "number": 3194,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3194,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0 15\n0 20\n5 15\n5 17\n''') == 'yes'\n\nassert solution('''0 15\n0 20\n5 15\n5 17\n5 19\n5 19\n5 19\n5 19\n5 19\n5 19\n''') == 'no'\n"
    },
    {
        "number": 3194,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 10\\n0 15\\n5 20\\n') == 'yes'\nassert solution('2 10\\n1 15\\n0 20\\n') == 'no'\nassert solution('1 10\\n0 15\\n5 20\\n') == 'yes'\nassert solution('1 10\\n0 15\\n0 20\\n') == 'no'\nassert solution('1 10\\n0 15\\n5 20\\n') == 'yes'\n"
    },
    {
        "number": 3194,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 10\") == \"yes\"\nassert solution(\"2 10\") == \"no\"\nassert solution(\"2 10\") == \"no\"\nassert solution(\"1 10\") == \"yes\"\nassert solution(\"1 10\") == \"yes\"\n"
    },
    {
        "number": 3194,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''0 10\n0 15\n5 20''') == 'yes'\nassert solution('''0 10\n1 15\n0 20''') == 'no'\nassert solution('''0 10\n1 15\n5 20''') == 'no'\n"
    },
    {
        "number": 3195,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n4 4 4\n3\n2 green\n18 yellow\n34 red\n5 green\n''') == '0.25'\nassert solution('''\n4 4 4\n4\n2 green\n6 yellow\n10 red\n14 green\n4 red\n''') == '0'\nassert solution('''\n4 4 4\n5\n2 green\n6 yellow\n10 red\n14 green\n4 red\n''') == '1.0'\nassert solution('''\n4 4 4\n4\n2 green\n6 yellow\n10 red\n14 green\n4 red\n''') == '0.125'\nassert solution('''\n4 4 4\n3\n2 green\n6 yellow\n10 red\n14 green\n4 red\n''') == '0.0625'\n"
    },
    {
        "number": 3195,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"4 4 4\n3\n2 green\n18 yellow\n34 red\n5 green\n\"\"\") == \"0.25\"\nassert solution(\n\"\"\"4 4 4\n4\n2 green\n6 yellow\n10 red\n14 green\n4 red\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3195,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3195,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 3195,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 3195,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green') == '0.25'\nassert solution('4 4 4\\n4\\n2 green\\n6 yellow\\n10 red\\n14 green\\n4 red') == '0'\nassert solution('4 4 4\\n4\\n2 green\\n6 yellow\\n10 red\\n14 green\\n4 red') == '0'\nassert solution('4 4 4\\n4\\n2 green\\n6 yellow\\n10 red\\n14 green\\n4 red') == '0'\nassert solution('4 4 4\\n4\\n2 green\\n6 yellow\\n10 red\\n14 green\\n4 red') == '0'\n"
    },
    {
        "number": 3195,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n"
    },
    {
        "number": 3195,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 4 4') == '0.25'\nassert solution('4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green\\n') == '0.25'\nassert solution('4 4 4\\n4\\n2 green\\n6 yellow\\n10 red\\n14 green\\n4 red\\n') == '0'\nassert solution('4 4 4\\n4\\n2 green\\n6 yellow\\n10 red\\n14 green\\n4 red\\n5 green\\n') == '0.25'\nassert solution('4 4 4\\n4\\n2 green\\n6 yellow\\n10 red\\n14 green\\n4 red\\n5 green\\n5 green\\n5 green\\n') == '0.125'\n"
    },
    {
        "number": 3195,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3195,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 4 4\") == \"0.25\"\nassert solution(\"4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green\") == \"0.25\"\nassert solution(\"4 4 4\\n4\\n2 green\\n6 yellow\\n10 red\\n14 green\\n4 red\") == \"0\"\n\"\"\"\nfrom __future__ import annotations\n\nfrom dataclasses import dataclass\nfrom decimal import Decimal, DecimalException\n\n\n@dataclass\nclass Result:\n    \"\"\"\n    A class to represent the result of a probability calculation.\n    \"\"\"\n\n    p: Decimal\n    t: Decimal\n    r: Decimal\n"
    },
    {
        "number": 3196,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 7\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4\n4 3\n''') == '3'\nassert solution('''4 4\n1 2\n2 3\n3 1\n4 2\n1 4\n2 1\n3 2\n4 3\n''') == 'inf'\n"
    },
    {
        "number": 3196,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 4 5\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"6\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"inf\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11\") == \"inf\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12\") == \"inf\"\n"
    },
    {
        "number": 3196,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 7') == '3'\nassert solution('5 7') == 'inf'\nassert solution('5 7') == 'inf'\nassert solution('4 7') == 'inf'\nassert solution('1 2 3 4') == '0'\n"
    },
    {
        "number": 3196,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6 7\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4''') == '3'\nassert solution('''6 8\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4\n4 3''') == 'inf'\nprint('test passed')\n"
    },
    {
        "number": 3196,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 2') == '1'\nassert solution('1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n') == 'inf'\nassert solution('10 10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n') == '5'\nassert solution('10 10\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n') == 'inf'\nassert solution('10 10\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n') == 'inf'\n"
    },
    {
        "number": 3196,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3') == '3'\nassert solution('6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3') == 'inf'\n"
    },
    {
        "number": 3196,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6 7\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4''') == '3'\nassert solution('''8 9\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4\n4 3\n''') == 'inf'\nassert solution('''1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4''') == '3'\nassert solution('''1 1\n1 1\n1 1\n''') == '3'\nassert solution('''6 7\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4''') == '3'\n"
    },
    {
        "number": 3196,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''6 7\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4'''\n) == '3'\n\nassert solution(\n'''2 2\n1 2\n'''\n) == 'inf'\n"
    },
    {
        "number": 3196,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 6\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3') == '3'\nassert solution('3 2\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5') == 'inf'\nassert solution('2 3\\n1 2\\n1 3\\n2 3') == '2'\nassert solution('1 1\\n1 2\\n1 3\\n2 3') == '1'\nassert solution('6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3') == 'inf'\n"
    },
    {
        "number": 3196,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8') == '3'\n"
    },
    {
        "number": 3197,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4\\n1 2 3 4') == '4'\nassert solution('5 3\\n2 3 4 5 6 7 4 7 8 8 12 12') == '2'\nassert solution('1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1') == '4'\nassert solution('2 1\\n1 1\\n1 1\\n1 1\\n1 1') == '3'\nassert solution('2 2\\n1 1\\n1 1\\n1 1\\n1 1') == '1'\n"
    },
    {
        "number": 3197,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3197,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3\"\n\"\"\"\nfrom __future__ import absolute_import\n\nimport sys\n\nimport numpy as np\n\nsys.path.insert(0, '..')\n\nfrom atcoder.solved.a11b_organized_a_group_trip_for_the_elderly_maze import solution"
    },
    {
        "number": 3197,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output\nprint(f\"Correct solution is : {expected_output}\")\n\"\"\"\n\nn, k = map(int, stdin.split())\nl = list(map(int, stdin.split()))\nl = sorted(l, reverse = True)\n\nc = 0\nfor i in l:\n    if c+i <= k:\n        c += i\n    else:\n        break\nprint(i)"
    },
    {
        "number": 3197,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\n\") == \"4\"\nassert solution(\"12 3\\n2 3 4 5 6 7 4 7 8 8 12 12\\n\") == \"2\"\nassert solution(\"12 3\\n2 3 4 5 6 7 4 7 8 8 12 12\\n\") == \"2\"\nassert solution(\"6 5\\n1 2 3 4 5 6\\n\") == \"3\"\n\"\"\"\n"
    },
    {
        "number": 3197,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    '4 4\\n1 2 3 4\\n') == '4'\nassert solution(\n    '12 3\\n2 3 4 5 6 7 4 7 8 8 12 12\\n') == '2'\nassert solution(\n    '5 1\\n1 2 3 4 5\\n') == '5'\n\nimport sys\nassert sys.argv[0] == 'python3'\nimport io\nsys.stdin = io.StringIO('1 1\\n1 2 3 4\\n')\nassert solution() == '1'\nsys.stdin = io.StringIO('2 2\\n1 2 3 4 5\\n')\n"
    },
    {
        "number": 3197,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3197,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\n\") == 4\nassert solution(\"12 3\\n2 3 4 5 6 7 4 7 8 8 12 12\\n\") == 2\n"
    },
    {
        "number": 3197,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 4\n1 2 3 4\n''') == '4'\n\nassert solution('''12 3\n2 3 4 5 6 7 4 7 8 8 12 12\n''') == '2'\n"
    },
    {
        "number": 3197,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 4\n1 2 3 4\n''') == '4'\nassert solution('''12 3\n2 3 4 5 6 7 4 7 8 8 12 12\n''') == '2'\nassert solution('''5 3\n7 4 1 2 3 6 5\n''') == '3'\nassert solution('''4 4\n2 1 3 4\n''') == '1'\nassert solution('''8 7\n8 1 2 3 4 5 6 7 8\n''') == '4'\n"
    },
    {
        "number": 3198,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\nhoose\nhose\nnose\nnoises\nnoise''') == \"hoose\\nnoises\\nnoise\"\nassert solution('''4\nhose\nhoose\noose\nmoose''') == \"hoose\\nmoose\"\nassert solution('''4\nhose\nhoose\noose\nmoose''') == \"hoose\\nmoose\"\nassert solution('''7\nhose\nhoose\noose\nmoose\nnose\nnoises\nnoise''') == \"hoose\\nnoises\\nnoise\"\nassert solution('''7\nhose\nhoose\noose\nmoose\nnose\nnoises\nnoise''') == \"hoose\\nnoises\\nnoise\"\n"
    },
    {
        "number": 3198,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\nhoose\nhose\nnose\nnoises\nnoise\n''') == 'hoose\\nnoises\\nnoise\\n'\nassert solution('''4\nhose\nhoose\noose\nmoose\n''') == 'hoose\\nmoose\\n'\n"
    },
    {
        "number": 3198,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('inputs/test_1') == 'hoose\\nnoises\\nnoise\\n'\nassert solution('inputs/test_2') == 'hoose\\nnoises\\nnoise\\n'\nassert solution('inputs/test_3') == 'no typos'\nassert solution('inputs/test_4') == 'no typos'\nassert solution('inputs/test_5') == 'hoose\\nnoises\\nnoise\\n'\n"
    },
    {
        "number": 3198,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(SAMPLE_INPUT_1) == SAMPLE_OUTPUT_1\nassert solution(SAMPLE_INPUT_2) == SAMPLE_OUTPUT_2\n\nprint(solution(sys.stdin.read()))\n\n\"\"\"\n\nimport sys\nfrom collections import defaultdict\n"
    },
    {
        "number": 3198,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"NO TYPOS\"\n"
    },
    {
        "number": 3198,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\nhoose\nhose\nnose\nnoises\nnoise''') == 'hoose\\nnoises\\nnoise'\nassert solution('''4\nhose\nhoose\noose\nmoose''') == 'hoose\\nmoose'\n'''"
    },
    {
        "number": 3198,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3198,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 'NO TYPOS'\nassert solution('hoose') == 'hoose'\nassert solution('hose') == 'NO TYPOS'\nassert solution('nose') == 'NO TYPOS'\nassert solution('noises') == 'NO TYPOS'\n"
    },
    {
        "number": 3198,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('hose\\nhoose\\nmoose\\nnoise\\n') == 'hoose\\nnoise\\nmoose'\nassert solution('hose\\nhoese\\nmoose\\nnoise\\n') == 'noise'\nassert solution('hose\\nhoese\\nmoose\\nnoise\\n') =='moose'\nassert solution('hose\\nhoese\\nmoose\\nnoise\\n') == 'NO TYPOS'\nassert solution('hose\\nhoese\\nmoose\\nnoises\\n') == 'noises'\n"
    },
    {
        "number": 3198,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"hello\") == \"hello\"\nassert solution(\"hello\") == \"hello\"\nassert solution(\"hello\") == \"hello\"\nassert solution(\"hello\") == \"hello\"\nassert solution(\"hello\") == \"hello\"\n"
    },
    {
        "number": 3199,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"1 1\"\n) == '0'\nassert solution(\n\"2 3\"\n) == '2'\nassert solution(\n\"1 1\"\n) == '2'\nassert solution(\n\"1 1\"\n) == '5'\nassert solution(\n\"2 3\"\n) == '16'\n"
    },
    {
        "number": 3199,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"2\\n2\\n5\"\nassert solution(\"2 3\") == \"0\\n16\\n8\"\nassert solution(\"1 1\") == \"2\\n2\\n5\"\nassert solution(\"2 3\") == \"0\\n16\\n8\"\nassert solution(\"1 1\") == \"2\\n2\\n5\"\n"
    },
    {
        "number": 3199,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"2\\n2\\n5\"\nassert solution(\"1 2\") == \"0\\n16\\n8\"\nassert solution(\"1 3\") == \"0\\n16\\n5\"\nassert solution(\"1 4\") == \"0\\n16\\n4\"\nassert solution(\"1 5\") == \"0\\n16\\n3\"\n"
    },
    {
        "number": 3199,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3199,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n3\\n\") == \"2\\n2\\n5\\n\"\nassert solution(\"2 3\\n4\\n\") == \"0\\n16\\n8\\n\"\nassert solution(\"2 3\\n3\\n\") == \"0\\n16\\n8\\n\"\nassert solution(\"1 1\\n3\\n\") == \"2\\n2\\n5\\n\""
    },
    {
        "number": 3199,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3199,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3199,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1') == '2'\nassert solution('2 3') == '0 16'\nassert solution('1 2') == '2'\nassert solution('2 3') == '0 16'\nassert solution('2 4') == '0'\n"
    },
    {
        "number": 3199,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3199,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3200,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n''') == '44.72135955'\nassert solution('''2\n50 45 45\n''') == '68.52419365'\nassert solution('''2\n100 200 300\n500 50 50\n''') == '0.000040'\nassert solution('''2\n30 30 30\n50 50 50\n''') == '0.000000'\nassert solution('''3\n50 45 45 45\n30 30 30 30\n20 20 20 20\n''') == '0.000000'\n"
    },
    {
        "number": 3200,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == 44.72135955\nassert solution('2') == 68.52419365\n\nprint('solution:', solution(input()))\n"
    },
    {
        "number": 3200,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n4\\n5\\n4\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2"
    },
    {
        "number": 3200,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n50 45 45') == '68.52419365'\nassert solution('1\\n1 1 1') == '0.00000'\nassert solution('2\\n1 1 1') == '10.000000'\nassert solution('7\\n60 60 60\\n
    },
    {
        "number": 3200,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3200,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n50 45 45\\n') == '44.72135955'\nassert solution('2\\n50 45 45\\n50 45 45') == '68.52419365'\nassert solution('2\\n1 3 4\\n6 5 4\\n3 4 3\\n') == '8.24596559'\nassert solution('10\\n
    },
    {
        "number": 3200,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2 3 5 7 2 1 1\\n9 8 8') == '13.96'\nassert solution('1\\n2 3 5 7 2 1 1\\n9 8 8') == '13.96'\nassert solution('1\\n2 3 5 7 2 1 1\\n9 8 8') == '13.96'\nassert solution('1\\n2 3 5 7 2 1 1\\n9 8 8') == '13.96'\nassert solution('1\\n2 3 5 7 2 1 1\\n9 8 8') == '13.96'\n"
    },
    {
        "number": 3200,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1\n50 45 45\n''') == '68.52419365'\n\nassert solution('''2\n50 45 45\n50 45 45\n''') == '68.52419365'\n\nassert solution('''3\n100 500 30\n100 200 30\n100 1000 60\n''') == '20.0365593'\n\nassert solution('''4\n100 500 30\n100 200 30\n100 500 60\n100 1000 60\n''') == '24.719675'\n\nassert solution('''5\n100 500 30\n100 200 30\n100 500 60\n100 1000 60\n100 1000 60\n''') == '18.01487076'"
    },
    {
        "number": 3200,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3') == '4'\nassert solution('2\\n1\\n2') == '7'\nassert solution('1\\n2\\n3') == '4'\nassert solution('1\\n2\\n3') == '4'\nassert solution('1\\n2\\n3') == '4'\n"
    },
    {
        "number": 3200,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == '44.72135955'\nassert solution('2') == '68.52419365'\nassert solution('3') == '72.3287083'\nassert solution('4') == '81.5443384'\nassert solution('5') == '90.94404835'\n"
    },
    {
        "number": 3201,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3201,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 4 2 3\\n1 3 1') == '1\\n1\\n0\\n2'\nassert solution('4 2 3 2\\n1 3 1') == '1\\n1\\n0\\n2'\nassert solution('3 3 3 3\\n1 1 1 1\\n') == '1\\n1\\n0\\n2\\n0\\n4'\nassert solution('2 3 1 5\\n1 2\\n') == '1\\n3\\n2'\nassert solution('2 3 2 3\\n1 1 2 1\\n') == '1\\n1\\n0\\n2\\n0\\n4'\n"
    },
    {
        "number": 3201,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 3 1 5\\n1 2\\n') == '1\\n3\\n2'\nassert solution('3 4 2 3\\n1 3 1\\n') == '1\\n1\\n0\\n2'\nassert solution('3 3 3 3\\n1 2 1 2\\n') == '1\\n1\\n0\\n0'\nassert solution('3 3 3 3\\n1 2 1 2\\n') == '1\\n1\\n0\\n0'\nassert solution('3 4 3 2 3\\n1 3 1 1\\n') == '1\\n1\\n0\\n0'\n"
    },
    {
        "number": 3201,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3201,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 3 1 5''') == '''1\n3\n2'''\nassert solution('''3 4 2 3''') == '''1\n1\n0\n2'''\nassert solution('''3 4 2 3''') == '''1\n1\n0\n2'''\nassert solution('''3 4 2 3''') == '''1\n1\n0\n2'''\nassert solution('''4 4 2 3''') == '''1\n1\n0\n0\n2'''\n"
    },
    {
        "number": 3201,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3201,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3201,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3 1 5\\n1 2') == '1\\n3\\n2'\nassert solution('2 3 1 5\\n1 3 1') == '1\\n3\\n2'\nassert solution('1 1\\n1') == '0'\nassert solution('3 4 2 3\\n1 3 1') == '1\\n1\\n0\\n2'\nassert solution('10 816 394 804\\n466 358 42 131 225 197 140 114 194 96\\n90 228 203 132 150 112 114') == '1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9'\n"
    },
    {
        "number": 3201,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4'.split()) == '1'\nassert solution('1 2 3 4'.split()) == '1'\nassert solution('1 2 3 4'.split()) == '1'\nassert solution('1 2 3 4'.split()) == '1'\nassert solution('1 2 3 4'.split()) == '1'\n"
    },
    {
        "number": 3201,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3 1 5\\n1 2\\n') == '1\\n3\\n2\\n'\nassert solution('3 4 2 3\\n1 3 1\\n') == '1\\n1\\n0\\n2\\n'\n"
    },
    {
        "number": 3202,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    '2 5\\n'\n    '1 1\\n') == '3\\n'\nassert solution(\n    '5 3\\n'\n    '2 2 3 2 2\\n'\n) == '2\\n'\n"
    },
    {
        "number": 3202,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"3\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"2 2 3 2 2\") == \"2\"\nassert solution(\"2 2 3 2 1\") == \"1\"\nassert solution(\"2 2 3 2 1\") == \"1\"\n"
    },
    {
        "number": 3202,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 2 1 1\") == \"1\"\nassert solution(\"1 2 1 2 2\") == \"0\"\nassert solution(\"1 2 1 2 2 3 2 3\") == \"2\"\n"
    },
    {
        "number": 3202,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 5\\n1 1\\n') == '3'\nassert solution('5 3\\n2 2 3 2 2\\n') == '2'\n"
    },
    {
        "number": 3202,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4 5') == 1\nassert solution('2 1 2 1 3') == 2\nassert solution('3 1 1 2 3') == 2\nassert solution('4 1 2 3 4') == 1\nassert solution('5 1 2 3 4 5') == 1\n"
    },
    {
        "number": 3202,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 3202,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 5\\n1 1') == '3'\nassert solution('2 3\\n2 2 3 2 2\\n') == '2'\nassert solution('1 100\\n
    },
    {
        "number": 3202,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 5\n1 1''') == '3'\nassert solution('''5 3\n2 2 3 2 2''') == '2'\nassert solution('''3 3\n1 1 1\n1 1 1\n2 1''') == '3'\nassert solution('''6 3\n1 1 1 1 1 1\n2 1 1 1\n1 1 1''') == '2'\nassert solution('''4 5\n1 1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n2 1 1 1\n2 1 1 1\n2 1 1 1''') == '4'\n"
    },
    {
        "number": 3202,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"2 5\n1 1\n\"\"\") == \"\"\"3\"\"\"\nassert solution(\n    \"\"\"5 3\n2 2 3 2 2\n\"\"\") == \"\"\"2\"\"\"\n"
    },
    {
        "number": 3202,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3203,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n100 100\\n50 50\\n') == '50'\nassert solution('1\\n0 50\\n50 0\\n') == '25'\nassert solution('2\\n100 100\\n50 50\\n') == '50'\nassert solution('2\\n0 50\\n50 0\\n') == '25'\nassert solution('2\\n10 100\\n20 100\\n10 0\\n') == '25'\n"
    },
    {
        "number": 3203,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n0\\n0') == '0'\nassert solution('1\\n100\\n50') == '50'\nassert solution('2\\n100\\n0') == '25'\nassert solution('2\\n100\\n100') == '50'\nassert solution('2\\n50\\n0') == '50'\n"
    },
    {
        "number": 3203,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"25\"\n"
    },
    {
        "number": 3203,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2\\n100 100\\n50 50\\n\") == \"50\"\nassert solution(\"2\\n0 50\\n50 0\\n\") == \"25\"\nassert solution(\"2\\n50 0\\n100 50\\n\") == \"75\"\nassert solution(\"2\\n0 100\\n100 50\\n\") == \"0\"\nassert solution(\"2\\n50 0\\n0 100\\n\") == \"0\"\n"
    },
    {
        "number": 3203,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == '2'\nassert solution('2\\n3\\n4\\n5\\n6\\n7') == '10'\nassert solution('1\\n5\\n3\\n7\\n9\\n1') == '50'\nassert solution('10\\n100\\n50\\n50\\n50\\n50\\n50\\n50\\n50\\n50\\n50') == '50'\nassert solution('10\\n100\\n50\\n50\\n50\\n50\\n50\\n50\\n50\\n50\\n50') == '0'\n"
    },
    {
        "number": 3203,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0 0\\n0 50\\n50 0\") == \"25\"\nassert solution(\"2\\n0 50\\n50 0\") == \"25\"\nassert solution(\"2\\n0 0\\n50 0\\n0 0\") == \"25\"\nassert solution(\"1\\n0 0\\n50 0\\n0 0\") == \"25\"\nassert solution(\"4\\n0 0\\n50 0\\n0 0\") == \"25\"\n"
    },
    {
        "number": 3203,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n100 100') == '50'\nassert solution('2\\n0 50\\n50 0') == '25'\nassert solution('3\\n0 0\\n0 0') == '25'\nassert solution('3\\n10 10\\n10 10') == '25'\nassert solution('3\\n90 90\\n10 10') == '25'\n"
    },
    {
        "number": 3203,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '50'"
    },
    {
        "number": 3203,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1\\n1\") == \"0\"\nassert solution(\"1\\n0\\n1\") == \"0\"\nassert solution(\"10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\n20\\n10\\"
    },
    {
        "number": 3203,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"25\"\n\"\"\"\n\n\"\"\"\nFor each mission, the probability that that mission is completed successfully, is\nequal to the product of the probabilities of the single missions being completed\nsuccessfully. Thus the probability of all missions being completed successfully is\nequal to the product of the probabilities of the single missions being completed\nsuccessfully.\n\nThe answer is the maximum of the individual probabilities.\n\nInput:\n-a list of n integers between 0 and 100, inclusive.\n\nOutput:\n-a single integer between 0 and 100, inclusive.\n\nConstraints:\n1 <= n <= 20\n0 <= each integer <= 100\n\nExamples:\n-For a = [0, 5, 100]\n\nP(a) =\nP(a[0]) * P(a[1]) * P(a[2]) =\nP(a[0]) * (100 - a[0]) * (100 - a[1]) * (100 - a[2]) =\nP(a[0]) * (100 - 5) * (100 - 100) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 100) * (100 - 0) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 - 0) * (100 - 100) =\nP(a[0]) * (100 - 5) * (100 -"
    },
    {
        "number": 3204,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n100\n200\n''') == '160'\nassert solution('''3\n100\n200\n2010\n''') == '250'\nassert solution('''4\n100\n2000\n200\n2010\n''') == '270'\nassert solution('''5\n100\n2000\n200\n2010\n2000\n''') == '280'\nassert solution('''6\n100\n2000\n200\n2010\n2000\n2000\n''') == '300'\n"
    },
    {
        "number": 3204,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('100\\n200\\n2010') == '160'\nassert solution('10\\n20\\n30\\n40\\n50\\n60\\n70\\n80\\n90\\n100') == '250'\nassert solution('2\\n100\\n200') == '160'\nassert solution('2\\n100\\n20\\n100\\n100\\n100\\n100\\n100') == '250'\nassert solution('6\\n100\\n200\\n300\\n400\\n500\\n600') == '600'\n"
    },
    {
        "number": 3204,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('100\\n200\\n2010') == '160'\nassert solution('2\\n100\\n200') == '160'\nassert solution('3\\n100\\n200\\n2010') == '250'\nassert solution('10\\n100\\n1000\\n2000\\n3000\\n4000') == '3000'\nassert solution('10\\n100\\n1000\\n2000\\n3000\\n4000\\n5000\\n6000\\n7000\\n8000\\n9000\\n10000\\n11000\\n12000\\n13000\\n14000\\n15000\\n16000\\n17000\\n18000\\n19000\\n20000\\n21000\\n22000\\n23000\\n24000\\n25000\\n26000\\n27000\\n28000\\n29000\\n30000\\n31000\\n32000\\n33000\\n34000\\n35000\\n36000\\n37000\\n38000\\n39000\\n40000\\n41000\\n42000\\n43000\\n44000\\n45000\\n46000\\n47000\\n48000\\n49000\\n50000\\n51000\\n52000\\n53000\\n54000\\n55000\\n56000\\n57000\\n58000\\n59000\\n60000\\n61000\\n62000\\n63000\\n64000\\n65000\\n66000\\n67000\\n68000\\n69000\\n70000\\n71000\\n72000\\n73000\\n74000\\n75000\\n76000\\n77000\\n78000\\n79000\\n80000\\n81000\\n82000\\n83000\\n84000\\n85000\\n86000\\n87000\\n88000\\n89000\\n90000\\n91000\\n92000\\n93000\\n94000\\n95000\\n96000\\n97000\\n98000\\n99000') == '30300000'\n"
    },
    {
        "number": 3204,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '250'\n'''\n"
    },
    {
        "number": 3204,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"2\n100\n200\"\"\") == \"160\"\nassert solution(\"\"\"3\n100\n200\n2010\"\"\") == \"250\"\nassert solution(\"\"\"5\n100\n100\n100\n100\n100\"\"\") == \"300\"\nassert solution(\"\"\"5\n100\n90\n80\n70\n60\"\"\") == \"310\"\nassert solution(\"\"\"5\n100\n100\n90\n80\n70\"\"\") == \"300\"\n"
    },
    {
        "number": 3204,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '160'\n\"\"\""
    },
    {
        "number": 3204,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n0\n0\n0\n1\n0\n\"\"\") == \"160\"\nassert solution(\n\"\"\"\n0\n0\n0\n0\n1\n0\n\"\"\") == \"160\"\nassert solution(\n\"\"\"\n0\n0\n0\n0\n1\n0\n\"\"\") == \"160\"\nassert solution(\n\"\"\"\n0\n0\n0\n0\n1\n0\n\"\"\") == \"160\"\nassert solution(\n\"\"\"\n0\n0\n0\n0\n0\n1\n\"\"\") == \"160\"\n"
    },
    {
        "number": 3204,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n100\n200''') == '160'\nassert solution('''3\n100\n200\n2010''') == '250'\nassert solution('''4\n100\n200\n2010\n3200''') == '800'\nassert solution('''4\n10\n2\n300\n3200''') == '2300'\nassert solution('''4\n100\n200\n2\n300\n3200''') == '2300'\n"
    },
    {
        "number": 3204,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"10\") == \"\"\nassert solution(\"100 2 3\") == \"\"\n"
    },
    {
        "number": 3204,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin[len(\"2\\n\"):]\nassert solution(stdin) == stdin[len(\"3\\n\"):]\nassert solution(stdin) == stdin[len(\"30\\n\"):]\n\n\"\"\"\n\n\n\"\"\"\nCounting the total number of seconds\n\nThe above algorithm is used to solve the problem, but there are two possible problems with the above algorithm:\n1. The number of seconds is incremented after every iteration of the algorithm.\n2. The incrementing of the number of seconds happens very frequently. It may occur that the time is in the last part of the minute.\nThe above problems can be fixed by calculating the number of seconds separately for each iteration.\n\nFor the first problem, we can simply increment the number of seconds and then check the result after the increment to see if it matches the input.\nFor the second problem, we can increment the number of seconds and then calculate the result after the increment.\n\nFor both the first and second problems, we can use a dictionary to store the number of seconds that have occurred.\nWe increment the number of seconds for every iteration of the algorithm.\n\nIf the number of seconds already exists in the dictionary, we increment it.\nIf the number of seconds does not exist in the dictionary, we increment it by 1.\n\nIf the number of seconds is not in the dictionary, we add the number of seconds to the dictionary.\n\nAfter the increment, we check if the result is the same as the input.\n\nIf the number of seconds is not the same as the input, then we increment the number of seconds by 1, and we check the result again.\n\"\"\"\n"
    },
    {
        "number": 3205,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2\n0 1 1\n2 3 1\n''') == '2'\nassert solution('''5 5\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 0 3\n''') == '0'\nassert solution('''4 2\n0 1 1\n2 3 1\n1 3 2\n3 4 3\n4 0 3\n''') == '2'\nassert solution('''7 3\n0 1 2\n1 2 3\n3 4 5\n4 5 6\n5 6 7\n6 0 7\n7 1 6\n''') == '5'\nassert solution('''8 5\n0 1 2\n1 2 3\n2 3 4\n3 4 5\n4 5 6\n5 6 7\n6 7 8\n7 0 8\n8 1 7\n''') == '2'\n"
    },
    {
        "number": 3205,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0 1 2\n2 1 1\n1 3 1\n3 2 1\n2 4 1''') == '0'\nassert solution('''4 2\n0 1 1\n2 3 1\nSample Input 3:\n5 5\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 0 3\nSample Output 3:\n1\n''') == '1'\nassert solution('''5 5\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 0 3\nSample Input 4:\n4 1\n0 1 3\n1 2 3\n2 3 3\n3 0 3\nSample Output 4:\n1\n''') == '0'\nassert solution('''4 1\n0 1 3\n1 2 3\n2 3 3\n3 0 3\nSample Input 5:\n5 3\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 0 3\nSample Output 5:\n2\n''') == '0'\nassert solution('''7 7\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 5 3\n5 6 3\n6 7 3\nSample Input 6:\n6 3\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 5 3\n5 6 3\n6 7 3\nSample Input 7:\n6 2\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 5 3\n5 6 3\n6 7 3\nSample Output 7:\n0\n''') == '0'\n"
    },
    {
        "number": 3205,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 3205,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"5 5\") == \"0\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"0 1 1\") == \"2\"\n"
    },
    {
        "number": 3205,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 2\n0 1 1\n2 3 1\n''') == '2'\nassert solution('''5 5\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 0 3\n''') == '0'\nassert solution('''10 8\n0 1 2\n1 3 3\n2 4 3\n3 5 2\n4 7 2\n5 8 1\n6 7 1\n7 8 4\n8 9 1\n9 10 4\n''') == '5'\nassert solution('''10 9\n0 1 2\n1 3 3\n2 4 3\n3 5 2\n4 6 1\n5 7 1\n6 7 4\n7 8 1\n8 9 4\n9 10 2\n''') == '3'\nassert solution('''10 9\n0 1 2\n1 3 3\n2 4 3\n3 5 2\n4 6 1\n5 7 1\n6 7 4\n7 8 1\n8 9 4\n9 10 2\n''') == '5'\n"
    },
    {
        "number": 3205,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 2\n0 1 1\n2 3 1\n''') == '2'\nassert solution('''5 5\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 0 3\n''') == '0'\nassert solution('''3 5\n0 1 1\n1 2 3\n2 3 4\n3 4 5\n1 4 2\n2 3 1\n3 0 2\n''') == '3'\nassert solution('''8 4\n0 1 1\n1 2 2\n2 3 3\n3 4 4\n4 5 5\n5 6 6\n6 7 7\n7 0 7\n''') == '2'\nassert solution('''10 10\n1 2 3\n2 3 4\n2 4 5\n3 4 6\n4 5 7\n5 6 8\n6 7 9\n7 8 9\n8 9 0\n9 1 1\n''') == '0'\n"
    },
    {
        "number": 3205,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3205,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 2\\n0 1 1\\n2 3 1\\n2 3 1\\n3 4 3\\n4 0 3') == '0'\nassert solution('3 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3') == '2'\nassert solution('7 3\\n0 1 7\\n1 2 7\\n2 3 7\\n3 4 7\\n4 5 7\\n5 6 7\\n6 7 6\\n7 0 7') == '5'\nprint(solution('0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0'))\n"
    },
    {
        "number": 3205,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 2') == '0'\nassert solution('5 5') == '0'\nassert solution('2 2') == '0'\nassert solution('5 5') == '0'\nassert solution('2 3') == '2'\n"
    },
    {
        "number": 3205,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input(\"\")) == str(0)\nassert solution(input(\"1\\n2\\n\")) == str(0)\nassert solution(input(\"2\\n3\\n\")) == str(1)\nassert solution(input(\"1\\n1\\n\")) == str(0)\nassert solution(input(\"1\\n2\\n1\\n\")) == str(1)\n"
    },
    {
        "number": 3206,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n3 3 2 1\\n3 3 3\\n\") == \"1 1\\n1 2\\n2 3 4\\n\"\nassert solution(\"2 2\\n3 3\\n\") == \"1 1\\n2 2 2\\n\"\nassert solution(\"3 2\\n3 3\\n\") == \"-1\"\n\"\"\"\n\nfrom sys import stdin"
    },
    {
        "number": 3206,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3206,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"1 1\"\nassert solution(\"2 3\") == \"1 2\"\nassert solution(\"4 3\") == \"1 1\"\nassert solution(\"6 3\") == \"1 2\"\nassert solution(\"4 3\") == \"1 1\"\n"
    },
    {
        "number": 3206,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 3\n3 3 2 1\n3 3 3\n''') == '1 1\\n1 2\\n2 3 4\\n'\nassert solution('''4 2\n3 3 2 2\n6 3\n''') == '-1\\n'\nassert solution('''8 8\n4 4 1 4 4 2 4 4 1 4 1\n4 4 2 4 1 4 1 1\n4 1 4 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n''') == '4 4 4 4 4 2 4 4 4 1 4 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3206,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n4 2\\n3 3 2 1\\n3 3 3') == '1 1\\n1 2\\n2 3 4\\n'\nassert solution('1\\n4 2\\n3 3 2 2\\n6 3\\n') == '-1\\n'\nassert solution('1\\n4 2\\n3 3 2 1\\n3 3 3\\n') == '1 1\\n1 2\\n2 3 4\\n'\nassert solution('1\\n1\\n1\\n1\\n') == '1\\n1\\n'\nassert solution('1\\n1\\n1\\n1\\n') == '1\\n1\\n'\n"
    },
    {
        "number": 3206,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 3\n3 3 2 1\n3 3 3\n''') == '1 1\\n1 2\\n2 3 4\\n'\nassert solution('''4 2\n3 3 2 2\n6 3\n''') == '-1\\n'\nassert solution('''4 2\n3 3 2 2\n3 3 3\n''') == '-1\\n'\nassert solution('''5 2\n1 3 2 4 5\n1 3 1 1\n''') == '1 1\\n1 2\\n2 3 4\\n'\nassert solution('''5 2\n4 4 4 4 4\n4 4 4 4 4\n''') == '1 1\\n1 2\\n2 3 4\\n'\n"
    },
    {
        "number": 3206,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 3\n3 3 2 1\n3 3 3\n''') == '1 1\\n1 2\\n2 3 4\\n'\n\nassert solution('''4 2\n3 3 2 2\n6 3\n''') == '-1'\n"
    },
    {
        "number": 3206,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 3206,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3206,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1') == '1 1'\nassert solution('2 2') == '-1'\nassert solution('2 3') == '-1'\nassert solution('2 4') == '-1'\nassert solution('1 2') == '1 1'\n"
    },
    {
        "number": 3207,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 0 D\n10 1 L''') == '10.0\\n4.0\\n1.0\\n'\nassert solution('''0 0 D\n10 1 L\n0 0 D\n10 1 L\n0 0 D\n10 1 L''') == '10.0\\n10.0\\n1.0\\n'\nassert solution('''0 0 D\n10 1 L\n1 0 D\n3 0 D\n4 1 L\n6 2 D\nSample Output 2:\n10.0\n4.0\n1.0\\n'\nassert solution('''0 0 D\n10 1 L\n0 0 D\n10 1 L\n0 0 D\n10 1 L''') == '10.0\\n10.0\\n1.0\\n'\nassert solution('''0 0 D\n10 1 L\n1 0 D\n3 0 D\n4 1 L\n6 2 D\n7 3 D\n8 4 D\n9 5 L\nSample Output 2:\n10.0\n9.0\n9.0\\n'\n"
    },
    {
        "number": 3207,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3 10') == '10.0'\nassert solution('4 3 7') == '10.0'\nassert solution('3 4 7') == '4.0'\nassert solution('4 3 7') == '4.0'\nassert solution('10 4 5') == '10.0'\n"
    },
    {
        "number": 3207,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0 3 10\\n0 0 D\\n10 1 L\\n\") == \"10.0\\n10.0\\n0.0\"\nassert solution(\"2 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\\n\") == \"10.0\\n4.0\\n1.0\"\nassert solution(\"1 2 3\\n1 1 D\\n2 2 D\\n3 3 D\\n\") == \"6.0\\n4.0\\n1.0\"\n"
    },
    {
        "number": 3207,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(open(\"inputs/e04.in\").read()) == open(\"outputs/e04.out\").read()\nassert solution(open(\"inputs/e06.in\").read()) == open(\"outputs/e06.out\").read()\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3207,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3 10\\n0 0 D\\n10 1 L\\n') == '10.0\\n10.0\\n0.0\\n'"
    },
    {
        "number": 3207,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 3 10\n0 0 D\n10 1 L\n''') == '10.0\\n10.0\\n0.0'\nassert solution('''4 3 7\n1 0 D\n3 0 D\n4 1 L\n6 2 D\n''') == '10.0\\n4.0\\n1.0'\nassert solution('''4 4 7\n1 0 D\n1 0 D\n1 1 L\n1 1 L\n''') == '10.0\\n10.0\\n1.0'\nassert solution('''4 4 7\n1 1 L\n1 1 L\n1 1 L\n1 1 L\n''') == '10.0\\n10.0\\n10.0'\nassert solution('''4 4 7\n1 1 L\n1 1 L\n1 1 L\n1 1 L\n''') == '10.0\\n10.0\\n10.0'\n"
    },
    {
        "number": 3207,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n2 3 10\n0 0 D\n10 1 L\n\"\"\"\n) == \"\"\"\n10.0\n10.0\n0.0\n\"\"\"\n\nassert solution(\n\"\"\"\n2 3 7\n1 0 D\n3 0 D\n4 1 L\n6 2 D\n\"\"\"\n) == \"\"\"\n10.0\n4.0\n1.0\n\"\"\"\n\nassert solution(\n\"\"\"\n2 3 7\n1 0 D\n3 0 D\n4 1 L\n6 2 D\n\"\"\"\n) == \"\"\"\n10.0\n4.0\n1.0\n\"\"\"\n"
    },
    {
        "number": 3207,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0\\n2\\n1\\n\") == \"10.0\\n4.0\\n1.0\"\nassert solution(\"1\\n0\\n10\\n1\\n\") == \"10.0\\n4.0\\n1.0\"\nassert solution(\"1\\n0\\n10\\n1\\n\") == \"10.0\\n4.0\\n1.0\"\nassert solution(\"1\\n0\\n10\\n1\\n\") == \"10.0\\n4.0\\n1.0\"\nassert solution(\"1\\n0\\n10\\n1\\n\") == \"10.0\\n4.0\\n1.0\"\n"
    },
    {
        "number": 3207,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3207,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1\n2\n3\n1\n2\n3''') == '''10.0\n4.0\n1.0\n'''\n\nassert solution('''1\n2\n3\n1\n2\n3''') == '''10.0\n4.0\n1.0\n'''\n\nassert solution('''1\n2\n3\n1\n2\n3''') == '''10.0\n4.0\n1.0\n'''\n\nassert solution('''1\n2\n3\n1\n2\n3''') == '''10.0\n4.0\n1.0\n'''\n\nassert solution('''1\n2\n3\n1\n2\n3''') == '''10.0\n4.0\n1.0\n'''"
    },
    {
        "number": 3208,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"wl jkd\") == \"Impossible\"\nassert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"yx hqybxfc zkfskjz kyb\") == \"we will avenge our dead parrot arr\"\nassert solution(\"hav lxjvlvxqe jkddvr kzxxjkzkjjkx\") == \"we will avenge our dead parrot arr\"\nassert solution(\"qrghzqzqwvxlkzwvqrqwzvxkzqwvqrkzqwvqrkzqwvqrqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvqrkzqwvq"
    },
    {
        "number": 3208,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('ex eoii jpxbmx cvz uxju sjzzcn jzz') == 'we will avenge our dead parrot arr'\nassert solution('wl jkd') == 'Impossible'\nassert solution('ex eoi i jpxbmx cvz uxju sjzzcn jzz') == 'we will avenge our dead parrot arr'\nassert solution('ex eoi i jpxbmx cvz uxju sjzzcn jzz') == 'we will avenge our dead parrot arr'\nassert solution('ex eoi i jpxbmx cvz uxju sjzzcn jzz') == 'we will avenge our dead parrot arr'\n"
    },
    {
        "number": 3208,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\"\nassert solution(\"ulrulr uxjpbbxwfkxnxnxqjxoibnqnqnqjxqkbxqnqnqnqxqxkqzmq nqnqnqnqxqnqnqnqnqnqnqnqnqnqnqxqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqnqn"
    },
    {
        "number": 3208,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"wl jkd\") == \"Impossible\"\nassert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\"\nassert solution(\"wywdhhjrjqmpa \") == \"Impossible\"\nassert solution(\"wowjkroa\") == \"Impossible\"\n"
    },
    {
        "number": 3208,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\"\n\"\"\"\n\nimport sys\nfrom collections import defaultdict\n"
    },
    {
        "number": 3208,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\"\nprint(solution(input()))\n\n'''\n"
    },
    {
        "number": 3208,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('ex eoii jpxbmx cvz uxju sjzzcn jzz') == 'we will avenge our dead parrot arr'\nassert solution('wl jkd') == 'Impossible'\n"
    },
    {
        "number": 3208,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('ex eoii jpxbmx cvz uxju sjzzcn jzz') == 'we will avenge our dead parrot arr'\nassert solution('wl jkd') == 'Impossible'\n"
    },
    {
        "number": 3208,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\nex eoii jpxbmx cvz uxju sjzzcn jzz\n'''\n) == 'we will avenge our dead parrot arr'\nassert solution(\n'''\nwl jkd\n'''\n) == 'Impossible'\n"
    },
    {
        "number": 3208,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('wl jkd') == 'Impossible'\nassert solution('ex eoii jpxbmx cvz uxju sjzzcn jzz') == 'we will avenge our dead parrot arr'\nassert solution('wljkd') == 'Impossible'\nassert solution('w ljkd') == 'Impossible'\nassert solution('wljk d') == 'Impossible'\n"
    },
    {
        "number": 3209,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 'IMPOSSIBLE'\nassert solution('2') == 'IMPOSSIBLE'\nassert solution('3') == 'IMPOSSIBLE'\nassert solution('2\\n3') == 'IMPOSSIBLE'\nassert solution('1\\n2\\n3') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3209,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(INPUT))\n\n'''\n\n'''\n\n-----Solution-----\n\n'''\n\nimport random"
    },
    {
        "number": 3209,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(open(\"test_1.txt\").read()) == \"2.2\"\nassert solution(open(\"test_2.txt\").read()) == \"6.5\"\nassert solution(open(\"test_3.txt\").read()) == \"2.0\"\nassert solution(open(\"test_4.txt\").read()) == \"8.0\"\nassert solution(open(\"test_5.txt\").read()) == \"IMPOSSIBLE\"\nprint(solution(open(\"input.txt\").read()))\n"
    },
    {
        "number": 3209,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 3209,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"Hamburg Bremen\") == \"68.3\"\nassert solution(\n\"Hamburg Frankfurt\") == \"IMPOSSIBLE\"\nassert solution(\n\"Hamburg Utrecht\") == \"68.3\"\nassert solution(\n\"Bremen Amsterdam\") == \"IMPOSSIBLE\"\nassert solution(\n\"Bremen Rotterdam\") == \"8.8\"\n"
    },
    {
        "number": 3209,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('Hamburg Bremen') == 68.3\nassert solution('Amsterdam Utrecht') == 'IMPOSSIBLE'\nassert solution('Amsterdam Utrecht 15 22 5 10') == 68.3\nassert solution('Hamburg Bremen 46 55 50 60') == 68.3\nassert solution('Bremen Frankfurt 14 226 10 120') == 68.3\n"
    },
    {
        "number": 3209,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"Hamburg Bremen\") == \"68.3\"\nassert solution(\"Bremen Berlin\") == \"IMPOSSIBLE\"\nassert solution(\"Amsterdam Rotterdam\") == \"IMPOSSIBLE\"\nassert solution(\"Hamburg Hamburg\") == \"68.3\"\nassert solution(\"Amsterdam Amsterdam\") == \"68.3\"\n"
    },
    {
        "number": 3209,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3209,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"Hamburg Bremen\n3\nHamburg Bremen 15 68 10 5\nHamburg Bremen 46 55 50 60\nBremen Frankfurt 14 226 10 120\"\"\") == \"68.3\"\nassert solution(\n\"\"\"Hamburg Bremen\n1\nHamburg Utrecht 10 22 5 10\nSample Output 2:\nIMPOSSIBLE\n\n\"\"\") == \"IMPOSSIBLE\"\nassert solution(\n\"\"\"Hamburg Bremen\n1\nBremen Utrecht 10 22 5 10\nSample Output 2:\nIMPOSSIBLE\n\n\"\"\") == \"IMPOSSIBLE\"\nassert solution(\n\"\"\"Hamburg Utrecht\n3\nHamburg Bremen 15 68 10 5\nBremen Utrecht 10 22 5 10\nBremen Frankfurt 14 226 10 120\"\"\") == \"68.3\"\nassert solution(\n\"\"\"Hamburg Utrecht\n3\nHamburg Bremen 46 55 50 60\nBremen Utrecht 10 22 5 10\nBremen Frankfurt 14 226 10 120\"\"\") == \"68.3\"\n"
    },
    {
        "number": 3209,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3210,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3210,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3210,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n4\n*.*\n|.|.|\n*.*-*\n|...|\n*.*.*\n'''\n    ) == '3'\n\nassert solution(\n'''\n2\n*.*\n...\n*.*\n'''\n    ) == '4'\n\nassert solution(\n'''\n3\n...\n*.*\n|.|.|\n*.*-*\n|...|\n*.*.*\n'''\n    ) == '3'\n\nassert solution(\n'''\n4\n*.*\n|.|.|\n*.*-*\n|...|\n*.*.*\n'''\n    ) == '3'\n\nassert solution(\n'''\n8\n*.*\n|.|.|\n*.*-*\n|...|\n*.*.*\n|.|.|\n*.*-*\n|...|\n*.*.*\n'''\n    ) == '6'"
    },
    {
        "number": 3210,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n'''\n"
    },
    {
        "number": 3210,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3') == '3'\nassert solution('*-*.*') == '3'\nassert solution('|.|.|') == '3'\nassert solution('*.*-*.*') == '3'\nassert solution('|...|') == '4'\n"
    },
    {
        "number": 3210,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\n"
    },
    {
        "number": 3210,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3''') == '3'\nassert solution('''\n3\n*-*.*\n|.|.|\n*.*-*\n|...|\n*.*.*\n''') == '3'\nassert solution('''\n2\n*.*\n...\n*.*\n''') == '4'\nassert solution('''\n4\n*.*\n...\n*.*\n''') == '4'\nassert solution('''\n6\n*.*.\n|...|\n*.*.*\n|.|.*\n.*.*.*\n.*.*.*\n''') == '5'\n"
    },
    {
        "number": 3210,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('2') == ''\nassert solution('3') == ''\nassert solution('4') == ''\nassert solution('5') == ''\n"
    },
    {
        "number": 3210,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n*-*.*\\n|.|.|\\n*.*-*') == '3'\nassert solution('2\\n*.*\\n...\\n*.*') == '4'\nassert solution('5\\n******\\n******\\n******\\n******\\n*.*.*.*') == '5'\nassert solution('4\\n*.*.*.*\\n*.*.*.*\\n*.*.*.*\\n*.*.*.*') == '6'\nassert solution('4\\n****\\n*..*\\n*.*.*\\n*.*.*\\n*.*.*\\n*.*.*\\n*.*.*\\n*.*.*') == '10'\n"
    },
    {
        "number": 3210,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected1\nprint(\"tests passed\")\n\"\"\"\n"
    },
    {
        "number": 3211,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"8\\n12210020\") == \"4\"\nassert solution(\"4\\n1111\") == \"impossible\"\n"
    },
    {
        "number": 3211,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"8\\n12210020\") == 4\nassert solution(\"4\\n1111\") == \"impossible\"\nprint(solution(input()))"
    },
    {
        "number": 3211,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8\\n12210020\\n') == '4'\nassert solution('4\\n1111\\n') == 'impossible'\nassert solution('8\\n00001\\n') == 'impossible'\nassert solution('8\\n00000\\n') == 'impossible'\nassert solution('8\\n00110\\n') == 'impossible'\n"
    },
    {
        "number": 3211,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n4\n0111\nSample Output 1:\nimpossible\nSample Input 2:\n6\n12321\nSample Output 2:\n0\n\"\"\"\n) == \"0\"\nassert solution(\n\"\"\"\n7\n011010110\nSample Output 2:\nimpossible\n\"\"\"\n) == \"impossible\"\nassert solution(\n\"\"\"\n8\n011010110\nSample Output 2:\n0\n\"\"\"\n) == \"0\"\nassert solution(\n\"\"\"\n8\n011010110\nSample Output 2:\nimpossible\n\"\"\"\n) == \"impossible\"\nassert solution(\n\"\"\"\n8\n111011010\nSample Output 2:\nimpossible\n\"\"\"\n) == \"impossible\"\n"
    },
    {
        "number": 3211,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2') == \"impossible\"\nassert solution('123') == \"impossible\"\nassert solution('1234') == \"impossible\"\nassert solution('123423') == \"impossible\"\nassert solution('123421') == \"impossible\"\n"
    },
    {
        "number": 3211,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n        '8'\n        '12210020'\n        ) == '4'\n\nassert solution(\n        '4'\n        '1111'\n        ) == 'impossible'\n\nassert solution(\n        '6'\n        '0102'\n        ) == 'impossible'\n\nassert solution(\n        '6'\n        '0102'\n        ) == 'impossible'\n\nassert solution(\n        '4'\n        '0102'\n        ) == 'impossible'"
    },
    {
        "number": 3211,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8\\n12210020') == '4'\nassert solution('8\\n1111') == 'impossible'\nassert solution('4\\n1111') == 'impossible'\nassert solution('6\\n2112211221') == '1'\nassert solution('1\\n11111') == 'impossible'\n"
    },
    {
        "number": 3211,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8\\n12210020') == '4'\nassert solution('4\\n110000') == 'impossible'\nassert solution('4\\n10011') == '0'\nassert solution('5\\n12111') == 'impossible'\nassert solution('5\\n11010') == 'impossible'\n"
    },
    {
        "number": 3211,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"4\"\n"
    },
    {
        "number": 3211,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n8\n12210020\n''') == '4'\nassert solution('''\n4\n1111\n''') == 'impossible'\nassert solution('''\n3\n11100000\n''') == 'impossible'\nassert solution('''\n3\n0111100\n''') == 'impossible'\nassert solution('''\n3\n0011100\n''') == 'impossible'\n"
    },
    {
        "number": 3212,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''3\n500 500 499\n0 0 999\n1000 1000 200\n'''\n) == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\nassert solution(\n'''4\n250 250 300\n750 250 300\n250 750 300\n750 750 300\n'''\n) == 'Bill will be bitten.'\nassert solution(\n'''6\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n'''\n) == 'Bill enters at (0.50, 750.50) and leaves at (1000.00, 1000.00).'\nprint('Passed all test cases!')\n"
    },
    {
        "number": 3212,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Bill will be bitten.\"\n\"\"\"\n"
    },
    {
        "number": 3212,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'Bill will be bitten.'\n"
    },
    {
        "number": 3212,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n500 500 499\n0 0 999\n1000 1000 200\n''') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\nassert solution('''4\n250 250 300\n750 250 300\n250 750 300\n750 750 300\n''') == 'Bill will be bitten.'\nassert solution('''2\n0 0 999\n1000 1000 200\n''') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\nassert solution('''5\n50 50 50\n0 0 999\n1000 1000 200\n0 0 999\n1000 1000 200\n''') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\nassert solution('''4\n0 0 999\n1000 1000 200\n0 0 999\n1000 1000 200\n''') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\n"
    },
    {
        "number": 3212,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == input()\n\"\"\"\n\nimport sys\nfrom itertools import product\n\nn = int(sys.stdin.readline())\nsnakes = []\nfor _ in range(n):\n    x, y, d = map(int, sys.stdin.readline().split())\n    snakes.append((x, y, d))"
    },
    {
        "number": 3212,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n500 500 499''') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\nassert solution('''4\n250 250 300\n750 250 300\n250 750 300\n750 750 300''') == 'Bill will be bitten.'\nassert solution('''1\n0 0 999''') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\nassert solution('''2\n0 0 999\n1000 1000 200''') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\nassert solution('''3\n0 0 999\n1000 1000 200\n1000 1000 400''') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\n"
    },
    {
        "number": 3212,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''500 500 499\n0 0 999\n1000 1000 200\n''') == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\"\nassert solution('''250 250 300\n750 250 300\n250 750 300\n750 750 300\n''') == \"Bill will be bitten.\"\nassert solution('''450 450 499\n750 750 499\n450 450 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n750 750 499\n"
    },
    {
        "number": 3212,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('100 1000 700') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00)'\nassert solution('1000 1000 400') == 'Bill enters at (1000.00, 800.00) and leaves at (0.00, 1000.00)'\nassert solution('1000 1000 700') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00)'\nassert solution('1000 1000 400') == 'Bill enters at (1000.00, 800.00) and leaves at (0.00, 1000.00)'\nassert solution('1000 1000 700') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00)'\n"
    },
    {
        "number": 3212,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3212,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n250 250 300\n750 250 300\n250 750 300\n750 750 300''') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\n\nassert solution('''10\n500 500 499\n0 0 999\n1000 1000 200\n750 750 300\n250 750 300\n250 750 300\n750 750 300\n750 750 300\n750 750 300\n750 750 300''') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\n\nassert solution('''100\n50 50 450\n750 750 700\n250 750 400\n750 750 100\n50 50 350\n750 750 1000\n750 750 200\n750 750 300\n750 750 400\n750 750 450''') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\n\nassert solution('''50\n0 0 500\n100 100 300\n200 200 200\n250 250 250\n300 300 300\n350 350 350\n400 400 400\n450 450 450\n500 500 500''') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\n\nassert solution('''1\n200 200 200\n200 200 200\n200 200 200''') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'"
    },
    {
        "number": 3213,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8 3\\n++xx+x++') == '++xx+o++'\nassert solution('8 3\\nx+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+"
    },
    {
        "number": 3213,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(open(\"test_input_01.txt\").read()) == open(\"test_output_01.txt\").read()\nassert solution(open(\"test_input_02.txt\").read()) == open(\"test_output_02.txt\").read()\nassert solution(open(\"test_input_03.txt\").read()) == open(\"test_output_03.txt\").read()\nassert solution(open(\"test_input_04.txt\").read()) == open(\"test_output_04.txt\").read()\nassert solution(open(\"test_input_05.txt\").read()) == open(\"test_output_05.txt\").read()\n"
    },
    {
        "number": 3213,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''8 3\n++xx+x++\n''') == '''++xx+o++'''\n\nassert solution('''8 3\nxxxxxxxx\n''') == '''xxoooooo'''\n\nassert solution('''2 1\nx\n''') == '''x'''\n\nassert solution('''3 1\n++\n+\n+\n+\n''') == '''+'''\n\nassert solution('''4 2\n+++\n+-\n-+-\n-+-\n+-++\n''') == '''-+-++'''"
    },
    {
        "number": 3213,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8 3\\n++xx+x++') == '++xx+o++'\nassert solution('8 3\\nxxxxxxxx') == 'xxoooooo'"
    },
    {
        "number": 3213,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3213,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 3\\n++xx+x++') == '++xx+o++'\nassert solution('8 3\\nxxxxxxxx') == 'xxoooooo'\nassert solution('8 5\\n+++++++') == '++oooo++'\nassert solution('8 3\\nxxxxxxx') == 'xxxxxxx'\nassert solution('8 4\\n++++++++') == '+++++oo'\n"
    },
    {
        "number": 3213,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3213,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\\n++xx+x++\") == \"++xx+oo++\"\nassert solution(\"1 2 3\\nxxoooxxxx\") == \"xxooooxxxx\"\nassert solution(\"1 2 3\\n++xx+x++\") == \"++xx+o++\"\nassert solution(\"1 2 3\\nxxxxxxxx\") == \"xxoooooo\"\n"
    },
    {
        "number": 3213,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3213,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('test') == 'xxxxxxoo'\nassert solution('++xx+x++') == '++xx+oo++'\nassert solution('xxxxxxxx') == 'xxoooooo'\nassert solution('++x++x') == '++oooooo'\nassert solution('++x+xxx+xxxx') == '++oooooo'\n"
    },
    {
        "number": 3214,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"\\n\\n\\n\") == \"\"\nassert solution(\"\\n\\n\\n\\n\") == \"\"\nassert solution(\"Hello World!\") == \"Hello World!\"\n"
    },
    {
        "number": 3214,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"The fox said, \\\"When?\\\"\\n\\\"Not till 12 o'clock\\\", replied the hen.\\n\\\"That clock is stopped, it will never strike,\\n\\\"he said.\\\"\") == \"\"\nassert solution(\"The fox said, \\\"When?\\\"\\n\\\"Not till 12 o'clock\\\", replied the hen.\\n\\\"That clock is stopped, it will never strike,\\n\\\"he said.\\\"\\n***\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"The fox said, \\\"When?\\\"\\n\\\"Not till 12 o'clock\\\", replied the hen.\\n\\\"That clock is stopped, it will never strike,\\n\\\"he said.\\\"\\n***\\nThe fox said, \\\"When?\\\"\\n\\\"Not till 12 o'clock\\\", replied the hen.\\n\\\"That clock is stopped, it will never strike,\\n\\\"he said.\\\"\\n***\") == \"\"\n"
    },
    {
        "number": 3214,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution(' ') ==''\nassert solution('  ') ==''\nassert solution('a') == 'a'\nassert solution('  a  ') == 'a'\n"
    },
    {
        "number": 3214,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\nThe fox said, \"When?\"\n\"Not till 12 o'clock\", replied the hen.\n\"That clock is stopped, it will never strike.\", he said.\n''') == '''clock: oclock\nhe: hen the\nhen: he when\nis: it\nit: is\noclock: clock\nthe: he\ntill: will\nwhen: hen\nwill: till\n"
    },
    {
        "number": 3214,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('He said, \"When?\"\\n\"Not till 12 o\\'clock\", replied the hen.\\n\"That clock is stopped, it will never strike.\", he said.\\n') == 'clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\ntill: will\\nwhen: hen\\ntill: will\\n'\nassert solution('The fox said, \"When?\"\\n\"Not till 12 o\\'clock\", replied the hen.\\n\"That clock is stopped, it will never strike.\", he said.\\n') == 'clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\ntill: will\\nwhen: hen\\ntill: will\\n'\nassert solution('The fox said, \"When?\"\\n\"Not till 12 o\\'clock\", replied the hen.\\n\"That clock is stopped, it will never strike.\", he said.\\n') == 'clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\ntill: will\\nwhen: hen\\ntill: will\\n'\nassert solution('The fox said, \"When?\"\\n\"Not till 12 o\\'clock\", replied the hen.\\n\"That clock is stopped, it will never strike.\", he said.\\n') == 'clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\ntill: will\\nwhen: hen\\ntill: will\\n'\n"
    },
    {
        "number": 3214,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''Lorem ipsum dolor sit amet, consectetur adipiscing elit.\nVestibulum porta tellus eget massa fermentum ornare. Sed eu diam at tellus\nlobortis congue. Suspendisse arcu quam, blandit quis, rhoncus sit amet,\nsapien vel ante. Duis pulvinar purus ut massa. Cum sociis natoque\npenatibus et magnis dis parturient montes, nascetur ridiculus mus.\nSuspendisse potenti. In est risus, cursus sit amet,\nscelerisque dui. Aenean massa turpis, tristique vel, aliquet nec,\nsodales eu, diam.\nNunc nunc, massa id nunc eu, dapibus fringilla,\nodio sit amet cursus quis, lacinia quam feugiat a,\nsollicitudin est nibh eu tincidunt. Nam nulla ac nunc\nquis accumsan commodo.\nEtiam varius libero at turpis. Nam rutrum nunc sit amet\norci. Suspendisse at sem eu orci. Nam suscipit velit at diam.\nIn hac habitasse platea dictumst. Suspendisse platea dictumst\nsit amet est. Sed quis libero odio,\na imperdiet eros consequat. Phasellus ut velit ac neque.\nLorem ipsum dolor sit amet, consectetur adipiscing elit.\nSuspendisse potenti. In est risus, cursus sit amet,\nscelerisque dui. Aenean massa turpis, tristique vel, aliquet nec,\nsodales eu, diam.\nNunc nunc, massa id nunc eu, dapibus fringilla,\nodio sit amet cursus quis, lacinia quam feugiat a,\nsollicitudin est nibh eu tincidunt. Nam nulla ac nunc\nquis accumsan commodo.\nEtiam varius libero at turpis. Nam rutrum nunc sit amet\norci. Suspendisse at sem eu orci. Nam suscipit velit at diam.\nIn hac habitasse platea dictumst. Suspendisse platea dictumst\nsit amet est. Sed quis libero odio,\na imperdiet eros consequat. Phasellus ut velit ac neque.\nLorem ipsum dolor sit amet, consectetur adipiscing elit.\nSuspendisse potenti. In est risus, cursus sit amet,\nscelerisque dui. Aenean massa turpis, tristique vel, aliquet nec,\nsodales eu, diam.\nNunc nunc, massa id nunc eu, dapibus fringilla,\nodio sit amet cursus quis, lacinia quam feugiat a,\nsollicitudin est nibh eu tincidunt. Nam nulla ac nunc\nquis accumsan commodo.\nEtiam varius libero at turpis. Nam rutrum nunc sit amet\norci. Suspendisse at sem eu orci. Nam suscipit velit at diam.\nIn hac habitasse platea dictumst. Suspendisse platea dictumst\nsit amet est. Sed quis libero odio,\na imperdiet eros consequat. Phasellus ut velit ac neque.\nLorem ipsum dolor sit amet, consectetur adipiscing elit.\nSuspendisse potenti. In est risus, cursus sit amet,\nscelerisque dui. Aenean massa turpis, tristique vel, aliquet nec,\nsodales eu, diam.\nNunc nunc, massa id nunc eu, dapibus fringilla,\nodio sit amet cursus quis, lacinia quam feugiat a,\nsollicitudin est nibh eu tincidunt. Nam nulla ac nunc\nquis accumsan commodo.\nEtiam varius libero at turpis. Nam rutrum nunc sit amet\norci. Suspendisse at sem eu orci. Nam suscipit velit at diam.\nIn hac habitasse platea dictumst. Suspendisse platea dictumst\nsit amet est. Sed quis libero odio,\na imperdiet eros consequat. Phasellus ut velit ac neque.\nLorem ipsum dolor sit amet, consectetur adipiscing elit.\nSuspendisse potenti. In est risus, cursus sit amet,\nscelerisque dui. Aenean massa turpis, tristique vel, aliquet nec,\nsodales eu, diam.\nNunc nunc, massa id nunc eu, dapibus fringilla,\nodio sit amet cursus quis, lacinia quam feugiat a,\nsollicitudin est nibh eu tincidunt. Nam nulla ac nunc\nquis accumsan commodo.\nEtiam varius libero at turpis. Nam rutrum nunc sit amet\norci. Suspendisse at sem eu orci. Nam suscip"
    },
    {
        "number": 3214,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == \"\"\nassert solution(\"\"\".\\n\"\".\\n\"***\".\\n\"The Fox said, \"When?\"\"\".\\n\"Not till 12 o'clock\".\\n\"That clock is stopped, it will never strike.\"\"\".\\n\") == \"\"\nassert solution(\"\"\".\\n\"\".\\n\"***\".\\n\"The Fox said, \"When?\"\"\".\\n\"Not till 12 o'clock\".\\n\"That clock is stopped, it will never strike.\"\"\".\\n\") == \"\"\nassert solution(\"\"\".\\n\"\".\\n\"***\".\\n\"The Fox said, \"When?\"\"\".\\n\"Not till 12 o'clock\".\\n\"That clock is stopped, it will never strike.\"\"\".\\n\") == \"\"\nassert solution(\"\"\".\\n\"\".\\n\"***\".\\n\"The Fox said, \"When?\"\"\".\\n\"Not till 12 o'clock\".\\n\"That clock is stopped, it will never strike.\"\"\".\\n\") == \"\"\n"
    },
    {
        "number": 3214,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"Lost is Close to Lose\") == \"close: lose\\nhe: the\\nin: inc is\\ninc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\\n\"\nassert solution(\"The fox said, \\\"When?\") == \"clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\nthe: he\\ntill: will\\nwhen: hen\\nwill: till\\n\"\nassert solution(\"The fox said, \\\"Not till 12 o'clock\\\"\") == \"clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\nthe: he\\ntill: will\\nwhen: hen\\nwill: till\\n\"\nassert solution(\"\\\"Not till 12 o'clock\\\"\") == \"clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\nthe: he\\ntill: will\\nwhen: hen\\nwill: till\\n\"\n\"\"\""
    },
    {
        "number": 3214,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3214,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\nThe fox said, \"When?\"\n\"Not till 12 o'clock\", replied the hen.\n\"That clock is stopped, it will never strike.\", he said.\n''') == 'clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str:\n    pass\n\nassert solution(\n'''\nThe fox said, \"When?\"\n\"Not till 12 o'clock\", replied the hen.\n\"That clock is stopped, it will never strike.\", he said.\n''') == 'clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str:\n    pass\n\nassert solution(\n'''\nThe fox said, \"When?\"\n\"Not till 12 o'clock\", replied the hen.\n\"That clock is stopped, it will never strike.\", he said.\n''') == 'clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str:\n    pass\n\nassert solution(\n'''\nThe fox said, \"When?\"\n\"Not till 12 o'clock\", replied the hen.\n\"That clock is stopped, it will never strike.\", he said.\n''') == 'clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str:\n    pass\n\nassert solution(\n'''\nThe fox said, \"When?\"\n\"Not till 12 o'clock\", replied the hen.\n\"That clock is stopped, it will never strike.\", he said.\n''') == 'clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str:\n    pass"
    },
    {
        "number": 3215,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n'''\n\nimport unittest\nfrom unittest import TestCase\nfrom itertools import permutations"
    },
    {
        "number": 3215,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"10\n1 2 7 3 8 9 4 5 10 6\n\"\"\") == '1'\nassert solution(\"\"\"10\n3 8 1 9 4 5 2 7 10 6\n\"\"\") == '2'\nassert solution(\"\"\"10\n1 2 3 4 5 6 7 8 9 10\n\"\"\") == '1'\nassert solution(\"\"\"10\n3 5 2 4 1 6 7 8 9 10\n\"\"\") == '1'\nassert solution(\"\"\"10\n3 4 1 5 2 7 8 9 10 6\n\"\"\") == '2'\n"
    },
    {
        "number": 3215,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"1\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"1\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"1\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"1\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"1\"\n"
    },
    {
        "number": 3215,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    10\n    1 2 7 3 8 9 4 5 10 6\n    \"\"\") == '1'\n\nassert solution(\n    \"\"\"\n    10\n    3 8 1 9 4 5 2 7 10 6\n    \"\"\") == '2'\nassert solution(\n    \"\"\"\n    10\n    9 8 7 4 5 3 6 2 1\n    \"\"\") == '7'\nassert solution(\n    \"\"\"\n    10\n    9 1 2 7 8 4 5 3 6\n    \"\"\") == '2'\nassert solution(\n    \"\"\"\n    10\n    1 2 3 4 5 6 7 8 9 10\n    \"\"\") == '1'\n"
    },
    {
        "number": 3215,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '1'\n"
    },
    {
        "number": 3215,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3215,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n2') == '1'\nassert solution('1\\n2\\n3') == '2'\nassert solution('1\\n2\\n3\\n4') == '2'\nassert solution('1\\n2\\n3\\n4\\n5') == '3'\n"
    },
    {
        "number": 3215,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\n\nHint:\n\nHere's a hint for first solution. First of all, there will always be at least one shuffling operation. There are a total of $n!/(n-1)!$ possible shuffles. There is a shuffling operation of the first and last cards, and $n-2$ other shuffles.\n\nTo find the second-to-last shuffling operation, find the first shuffling operation and shift the cards from the start of the list to the end. The second shuffling operation is just the first shuffling operation reversed.\n\nIt's easy to count the number of possible permutations of the first $n-1$ cards using $\\binom{n}{2}$ and then subtracting $n-1$ from the binomial coefficients, and then add the permutations of the last card.\n\nTo find the shuffling operations, we can use the fact that for each shuffling operation, the first $n-1$ cards are already in the right order, and the last card is shuffled into the position that the first card would be if the operation were reversed.\n\nOne way to do this is to iterate over the first $n-1$ shuffles, and keep track of the order of each card after each shuffling operation.\n\nThen we can use the order of the first $n-1$ shuffles to find the number of the last shuffling operation.\n\nFor the last shuffling operation, we reverse the order of the cards and count the number of permutations.\n\nYou can use the fact that after the last shuffling operation, the first $n-1$ cards are already in the right order.\n\n-----Best Speed-----\nIn the average case, you will have to shuffle every single card once, so the time complexity is O(n).\n\nIf the first $n-1$ shuffles have some special property, say that if they are sorted, then after the last shuffling operation, the order of the first $n-1$ cards will be the same as before. Then the number of shuffling operations is the number of permutations of the first $n-1$ cards.\n\nIf all the cards are unique, then every single card can be shuffled once. Then the number of shuffling operations is the factorial of $n$.\n\n-----Alternate Solution-----\n"
    },
    {
        "number": 3215,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\nimport sys\nfrom collections import Counter"
    },
    {
        "number": 3215,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3216,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(solution.__doc__) == '1/7\\n'\n"
    },
    {
        "number": 3216,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0.142857 6') == '1/7'\nassert solution('1.6 1') == '5/3'\nassert solution('0.142857 6 0') == '1/7'\nassert solution('1.6 1 1') == '5/3'\nassert solution('0.142857 6 0 5') == '1/7'\n"
    },
    {
        "number": 3216,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1') == '1/1'\nassert solution('2 3') == '2/3'\nassert solution('0.142857 0 6') == '1/7'\nassert solution('0.142857 0 6') == '1/7'\nassert solution('1.6 1') == '5/3'\n"
    },
    {
        "number": 3216,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0.142857 6') == '1/7'\nassert solution('1.6 1') == '5/3'\nassert solution('0.1 0') == '0/1'\nassert solution('0.01 0') == '0/1'\nassert solution('0.00 1') == '0/1'\n"
    },
    {
        "number": 3216,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"$0.142857$ $6$\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\"\nassert solution(\"2.3 3\") == \"4/3\"\nassert solution(\"1.5 1\") == \"4/3\"\nassert solution(\"1.0 1\") == \"1/1\"\n"
    },
    {
        "number": 3216,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\"\n"
    },
    {
        "number": 3216,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0.142857 6') == '1/7'\nassert solution('1.6 1') == '5/3'\nprint(\"Tests passed successfully.\")\n"
    },
    {
        "number": 3216,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0.142857 $6$\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\"\nassert solution(\"0.142857 6\") == \"1/7\"\nassert solution(\"1.6 $0$\") == \"5/3\"\nassert solution(\"1.6 6\") == \"5/3\"\n"
    },
    {
        "number": 3216,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0.142857 6') == '1/7'\nassert solution('1.6 1') == '5/3'\nprint(\"Testcases passed.\")\n"
    },
    {
        "number": 3216,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\".142857 0 6\") == \"1/7\"\nassert solution(\"0.142857 0 6\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\"\nassert solution(\"1.6 0\") == \"1/6\"\nassert solution(\"1.6 9\") == \"5/6\"\n"
    },
    {
        "number": 3217,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 0 0\n0 0 1''') == '6'\n\nassert solution('''0 0 0\n0 0 1\n1 1 1''') == '10'\n\nassert solution('''0 0 0\n0 0 1\n1 1 1''') == '10'\n\nassert solution('''2\n1 1 1\n1 1 1''') == '10'\n\nassert solution('''1\n0 0 0\n0 0 1\n1 1 1''') == '10'"
    },
    {
        "number": 3217,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 0 0') == '6'\nassert solution('0 0 1') == '10'\nassert solution('1 0 0') == '6'\nassert solution('1 0 1') == '10'\nassert solution('2 0 0') == '6'\n"
    },
    {
        "number": 3217,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == str(solution(''))\n'''\n\nclass Panel(object):\n    def __init__(self, x, y, z, size):\n        self.x = x\n        self.y = y\n        self.z = z\n        self.size = size\n    def __repr__(self):\n        return '({}, {}, {}, {})'.format(self.x, self.y, self.z, self.size)"
    },
    {
        "number": 3217,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output\nprint('Passed!')\n"
    },
    {
        "number": 3217,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0\\n0\\n0\\n') == '6'\nassert solution('1\\n0\\n0\\n') == '10'\nassert solution('2\\n0\\n0\\n0\\n1\\n') == '10'\nassert solution('3\\n0\\n0\\n0\\n0\\n0\\n0\\n') == '9'\nassert solution('2\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n') == '6'\n"
    },
    {
        "number": 3217,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '6'\nassert solution(stdin) == '10'\n\n\"\"\"\n\n\"\"\"\nV1.0:\nTime Complexity: O(n^2)\nSpace Complexity: O(1)\n\"\"\"\n\nn = int(input())\ncoordinates = set()\nfor _ in range(n):\n    coordinates.add(tuple(map(int, input().split())))"
    },
    {
        "number": 3217,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0 0 0\") == \"6\"\nassert solution(\"0 0 1\") == \"10\"\nassert solution(\"1 0 0\") == \"6\"\nassert solution(\"1 0 1\") == \"10\"\nassert solution(\"10 0 0\") == \"6\"\n"
    },
    {
        "number": 3217,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\n\"\"\"\nThe example contains a two-dimensional grid. Each cell is of size $1 \\times 1 \\times 1$, and each of the $n$ cells is reported to be defective. We must define a rectangle of size $n \\times 1 \\times 1$ that encloses all of the defective cells. We can find the rectangle by starting at the left edge of the grid and going clockwise, and moving to the right edge of the grid.\n\nThe grid is given by a string of letters, $C_x$ and $C_y$:\n\n$C_x$ is a single character that is present in the grid.\n$C_y$ is the first line of the grid. The second line represents the second line of the grid.\nLet $N$ be the number of defective cells.\n\nFor example, a grid with two defective cells would look like:\n\n$C_x$ = $C_y$ = $C_z$ = $C_w$ = $C_x$ = $C_y$ = $C_z$ = $C_w$ = $C_x$ = $C_y$ = $C_z$ = $C_w$ = $C_x$ = $C_y$ = $C_z$ = $C_w$ = $C_x$ = $C_y$ = $C_z$ = $C_w$\n\nThe rectangle is defined by the two corners of the grid. For example, for the example above, the top left corner is the point $(0,0,0)$ and the bottom right corner is the point $(3,3,3)$, so the rectangle is:\n\n$(0,0,0) \\times (0,1,0) \\times (0,0,1) \\times (0,1,1) \\times (0,1,2) \\times (0,2,1) \\times (0,2,2) \\times (0,3,1) \\times (0,3,2) \\times (0,3,3)$\n\nAfter moving clockwise, we get:\n\n$(0,0,0) \\times (1,0,0) \\times (1,0,1) \\times (1,0,2) \\times (1,1,1) \\times (1,1,2) \\times (1,2,1) \\times (1,2,2) \\times (1,3,1) \\times (1,3,2) \\times (1,3,3) \\times (2,0,0) \\times (2,0,1) \\times (2,0,2) \\times (2,1,1) \\times (2,1,2) \\times (2,2,1) \\times (2,2,2) \\times (2,3,1) \\times (2,3,2) \\times (2,3,3) \\times (3,0,0) \\times (3,0,1) \\times (3,0,2) \\times (3,1,1) \\times (3,1,2) \\times (3,2,1) \\times (3,2,2) \\times (3,3,1) \\times (3,3,2) \\times (3,3,3)$\n\nBy moving clockwise, we get:\n\n$(0,0,0) \\times (1,0,0) \\times (1,0,1) \\times (1,0,2) \\times (1,1,1) \\times (1,1,2) \\times (1,2,1) \\times (1,2,2) \\times (1,3,1) \\times (1,3,2) \\times (1,3,3) \\times (2,0,0) \\times (2,0,1) \\times (2,0,2) \\times (2,1,1) \\times (2,1,2) \\times (2,2,1) \\times (2,2,2) \\times (2,3,1) \\times (2,3,2) \\times (2,3,3) \\times (3,0,0) \\times (3,0,1) \\times (3,0,2) \\times (3,1,1) \\times (3,1,2) \\times (3,2,1) \\times (3,2,2) \\times (3,3,1) \\times (3,3,2) \\times (3,3,3) \\times (4,0,0) \\times (4,0,1) \\times (4,0,2) \\times (4,1,1) \\times (4,1,2) \\times (4,2,1) \\times (4,2,2) \\times (4,3,1) \\times (4,3,2) \\times (4,3,3)$\n\nWe can see that the perimeter is $24$ in this case.\n\nSample Input 2:\n3\n0 0 0\n0 0 1\n0 0 2\nSample Output 2:\n8\n\nSample Input 3:\n10\n0 0 0\n0 0 1\n0 0 2\n0 0 3\n0 0 4\n0 0 5\n0 0 6\n0 0 7\n0 0 8\n0 0 9\n0 0 10\nSample Output 3:\n24\n\"\"\""
    },
    {
        "number": 3217,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 0 0\\n0 0 1') == '6'\nassert solution('2\\n0 0 0\\n0 0 1') == '10'\nassert solution('10\\n0 0 0\\n0 0 1\\n1 0 0\\n1 0 1\\n2 0 0\\n2 0 1\\n3 0 0\\n3 0 1\\n4 0 0\\n4 0 1\\n5 0 0\\n5 0 1\\n6 0 0\\n6 0 1\\n7 0 0\\n7 0 1\\n8 0 0\\n8 0 1\\n9 0 0\\n9 0 1\\n10 0 0\\n10 0 1') == '56'\nassert solution('2\\n0 0 0\\n0 0 1') == '10'\nassert solution('10\\n0 0 0\\n0 0 1\\n1 0 0\\n1 0 1\\n2 0 0\\n2 0 1\\n3 0 0\\n3 0 1\\n4 0 0\\n4 0 1\\n5 0 0\\n5 0 1\\n6 0 0\\n6 0 1\\n7 0 0\\n7 0 1\\n8 0 0\\n8 0 1\\n9 0 0\\n9 0 1\\n10 0 0\\n10 0 1') == '56'\n"
    },
    {
        "number": 3217,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n0 0 0\\n0 0 1\") == \"6\"\n\"\"\"\n"
    },
    {
        "number": 3218,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\nassert solution(\"6\") == \"7\"\n"
    },
    {
        "number": 3218,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1') == '1'\nassert solution('3\\n-1 2 -1\\n2 2\\n1 -1 1') == '1'\nassert solution('7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1') == '1'\nassert solution('7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1') == '1'\nassert solution('7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1') == '1'\n"
    },
    {
        "number": 3218,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n-1 2 -1\n2 2\n1 -1 1\n''') == '1'\nassert solution('''7\n-1 4 5 1 0 -1 -1\n-1 3 2 0 0 1\n-1 4 -1 1 0 -1 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n''') == '1'\nassert solution('''10\n-1 4 5 1 0 -1 -1\n-1 3 2 0 0 1\n-1 4 -1 1 0 -1 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n1 4 4 3 3 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n''') == '1'\nassert solution('''15\n-1 4 5 1 0 -1 -1\n-1 3 2 0 0 1\n-1 4 -1 1 0 -1 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n1 4 4 3 3 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n1 4 4 3 3 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n1 4 4 3 3 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n1 4 4 3 3 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n1 4 4 3 3 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n1 4 4 3 3 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n1 4 4 3 3 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n1 4 4 3 3 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n1 4 4 3 3 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n1 4 4 3 3 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n1 4 4 3 3 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n1 4 4 3 3 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n1 4 4 3 3 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n1 4 4 3 3 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n1 4 4 3 3 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n1 4 4 3 3 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n1 4 4 3 3 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n1 4 4 3 3 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n1 4 4 3 3 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n1 4 4 3 3 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n1 4 4 3 3 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n1 4 4 3 3 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n1 4 4 3 3 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -"
    },
    {
        "number": 3218,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3''') == '1'\nassert solution('''7''') == '1'\nassert solution('''6''') == '0'\nassert solution('''12''') == '1'\nassert solution('''2''') == '0'\n"
    },
    {
        "number": 3218,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n1\\n-1') == '1'\nassert solution('2\\n1\\n1\\n1\\n2\\n2\\n1') == '1'\nassert solution('3\\n1\\n1\\n1\\n2\\n2\\n1') == '1'\nassert solution('7\\n1\\n1\\n1\\n2\\n2\\n1') == '1'\nassert solution('10\\n1\\n1\\n1\\n2\\n2\\n1\\n2\\n2\\n1') == '1'\n"
    },
    {
        "number": 3218,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1') == 1\nassert solution('2') == 1\nassert solution('3') == 1\nassert solution('4') == 1\nassert solution('5') == 1\n"
    },
    {
        "number": 3218,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n-1 2 -1\\n2 2\\n1 -1 1\\n2\\n-1 1\\n1\\n-1 -1 1\\n1 3 2 0 0 1\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1') == '1\\n'\nassert solution('6\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1') == '2\\n'\nassert solution('7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1') == '3\\n'\nassert solution('9\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\\n-1 -1 -1 -1 4 2 -1') == '4\\n'\nassert solution('10\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\\n-1 -1 -1 -1 4 2 -1') == '5\\n'\n"
    },
    {
        "number": 3218,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3''') == '1'\nassert solution('''-1 2 -1''') == '1'\nassert solution('''2 2''') == '1'\nassert solution('''1 -1 1''') == '1'\nassert solution('''7''') == '1'\n"
    },
    {
        "number": 3218,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3''') == '1'\nassert solution('''3\n-1 2 -1\n2 2\n1 -1 1\n''') == '1'\nassert solution('''7\n-1 4 5 1 0 -1 -1\n-1 3 2 0 0 1\n-1 4 -1 1 0 -1 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n''') == '1'\nassert solution('''9\n-1 4 5 1 0 -1 -1\n-1 3 2 0 0 1\n-1 4 -1 1 0 -1 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 3 4 4 4 3 2\n1 -1 -1 -1 4 2 -1\n''') == '2'\nassert solution('''7\n-1 4 5 1 0 -1 -1\n-1 3 2 0 0 1\n-1 4 -1 1 0 -1 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 3 4 4 4 3 2\n1 -1 -1 -1 4 2 -1\n''') == '2'\n"
    },
    {
        "number": 3218,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n-1 2 -1\\n2 2\\n1 -1 1\\n') == '1'\nassert solution('3\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\\n') == '1'\nassert solution('7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\\n') == '1'\nassert solution('7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\\n') == '2'\nassert solution('7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\\n') == '3'\n"
    },
    {
        "number": 3219,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1001') == 3\nassert solution('1111') == 1\n\"\"\"\n\n\n\"\"\"\n- n & (n - 1) => n & (n - 1) = 0\n- n & (n - 2) => n & (n - 2) = 0\n- n & (n - 4) => n & (n - 4) = 0\n- n & (n - 8) => n & (n - 8) = 0\n- n & (n - 16) => n & (n - 16) = 0\n- n & (n - 32) => n & (n - 32) = 0\n- n & (n - 64) => n & (n - 64) = 0\n- n & (n - 128) => n & (n - 128) = 0\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 3219,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1001') == '3'\nassert solution('01011101') == '3'\nassert solution('1111111') == '1'\nassert solution('1') == '1'\nassert solution('11') == '2'\n"
    },
    {
        "number": 3219,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1001') == '3'\nassert solution('1111') == '1'\nassert solution('1') == '2'\nassert solution('0') == '0'\nassert solution('0') == '1'\n"
    },
    {
        "number": 3219,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0') == '0'\nassert solution('100') == '1'\nassert solution('11') == '2'\nassert solution('1111') == '3'\nassert solution('1') == '1'\n"
    },
    {
        "number": 3219,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1101\") == 3\nassert solution(\"1111\") == 1\nassert solution(\"10001\") == 3\nassert solution(\"101\") == 1\nassert solution(\"10101\") == 3\n"
    },
    {
        "number": 3219,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('0') == ''\nassert solution('101') == '1'\nassert solution('1010') == '2'\n"
    },
    {
        "number": 3219,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1001\") == \"3\"\nassert solution(\"1111\") == \"1\"\nassert solution(\"100\") == \"3\"\nassert solution(\"10\") == \"3\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 3219,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1111\") == 1\nassert solution(\"0\") == 1\nassert solution(\"111\") == 2\nassert solution(\"001\") == 3\nassert solution(\"1110\") == 4\n"
    },
    {
        "number": 3219,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10001') == 4\nassert solution('1111') == 1\nassert solution('1111') == 1\nassert solution('1') == 1\nassert solution
    },
    {
        "number": 3219,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1001001') == 3\nassert solution('00011110111010001111000111001010110100') == 5\nassert solution('00000000000') == 1\nassert solution('11111') == 3\nassert solution('1110110111') == 3\n"
    },
    {
        "number": 3220,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"1 2 2\") == \"\"\nassert solution(\"1 2 2 1 2\") == \"\"\n"
    },
    {
        "number": 3220,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''3\n1 1 1''') == 'LLL'\nassert solution(\n'''5\n1 2 2 1 2''') == 'LLRLR'\n"
    },
    {
        "number": 3220,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"LLLRLR\""
    },
    {
        "number": 3220,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == 'LL'\nassert solution('2\\n1 1') == 'LLL'\nassert solution('2\\n1 2 2') == 'LLRLR'\nassert solution('4\\n1 3 2 4') == 'LRRR'\nassert solution('5\\n1 2 2 1 2') == 'LLRLR'\n"
    },
    {
        "number": 3220,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == 'no dance'\nassert solution('1 1 1') == 'LLL'\nassert solution('1 2 2 1 2') == 'LLRLR'\n'''\n"
    },
    {
        "number": 3220,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2 1') == 'LL'\nassert solution('2 2 2') == 'LLR'\nassert solution('2 2 1 2') == 'LLRLR'\nassert solution('4 2 1 2 3') == 'LLLLRLR'\nassert solution('4 2 1 1 3') == 'LLLLRLL'\n"
    },
    {
        "number": 3220,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\") == \"LLL\"\nassert solution(\"2\\n2 2\") == \"LLLR\"\nassert solution(\"2\\n1 1 1\") == \"LRLR\"\nassert solution(\"3\\n2 1 3\") == \"LLLLRR\"\nassert solution(\"3\\n1 3 3\") == \"RRRLR\"\n"
    },
    {
        "number": 3220,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"3 1 2\") == \"\"\nassert solution(\"3 1 3\") == \"\"\n"
    },
    {
        "number": 3220,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3220,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"L\"\nassert solution(\"1 1 1\") == \"L\"\nassert solution(\"2\") == \"L\"\nassert solution(\"2 2 2\") == \"L\"\n"
    },
    {
        "number": 3221,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000') == '49000000000070'\nassert solution('6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000') == '25000000000021'\nprint('Success')\n"
    },
    {
        "number": 3221,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    '''7 7 10\n1 2 1000000\n2 3 2000000\n3 4 3000000\n4 5 4000000\n5 6 5000000\n6 7 6000000\n7 1 7000000''') == 'Poor girl'\nassert solution(\n    '''8 8 4\n1 2 5000\n2 3 10000\n3 4 30000\n4 5 40000\n5 6 50000\n6 7 60000\n7 8 1000000''') == 'Poor girl'\n\nassert solution(\n    '''7 7 10\n1 2 5000\n2 3 10000\n3 4 30000\n4 5 40000\n5 6 50000\n6 7 60000\n7 8 1000000''') == 'Poor girl'\nassert solution(\n    '''4 4 5\n1 2 3 4\n2 3 4 5\n3 4 5 6\n4 5 6 7\n5 6 7 8''') == 'Poor girl'\nassert solution(\n    '''5 7 4\n1 2 5\n2 3 5\n3 4 5\n4 5 6\n5 6 7\n6 7 8''') == 'Poor girl'\n"
    },
    {
        "number": 3221,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2 1000000\") == \"Poor girl\"\nassert solution(\"1 2 1000000\\n1 3 2000000\\n2 3 3000000\") == \"Poor girl\"\nassert solution(\"1 2 3\\n2 3 4\\n3 4 5\") == \"Poor girl\"\nassert solution(\"1 2 3\\n2 3 4\\n3 4 5\\n4 5 6\") == \"Poor girl\"\nassert solution(\"1 2 3\\n2 3 4\\n3 4 5\\n4 5 6\\n5 6 7\") == \"Poor girl\"\n"
    },
    {
        "number": 3221,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == solution(sample1)\nassert solution(sample1) == 'Poor girl'\nassert solution(sample2) == '25000000000021'\nassert solution(sample3) == 'Poor girl'\nassert solution(sample4) == '25000000000021'\n"
    },
    {
        "number": 3221,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''7 7 10\n1 2 1000000\n2 3 2000000\n3 4 3000000\n4 5 4000000\n5 6 5000000\n6 7 6000000\n7 1 7000000''') == '49000000000070'\nassert solution(\n'''6 6 7\n1 3 1000000\n3 5 3000000\n5 1 5000000\n2 4 2000000\n4 6 4000000\n6 2 6000000''') == '25000000000021'\nprint('Passed all test cases!')\n"
    },
    {
        "number": 3221,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''7 7 10\n1 2 1000000\n2 3 2000000\n3 4 3000000\n4 5 4000000\n5 6 5000000\n6 7 6000000\n7 1 7000000''') == '49000000000070'\nassert solution('''6 6 7\n1 3 1000000\n3 5 3000000\n5 1 5000000\n2 4 2000000\n4 6 4000000\n6 2 6000000''') == '25000000000021'\nassert solution('''6 6 7\n1 3 1000000\n3 5 3000000\n5 1 5000000\n2 4 2000000\n4 6 4000000\n6 2 6000000\n1 2 1000000''') == 'Poor girl'"
    },
    {
        "number": 3221,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'Poor girl'\n"
    },
    {
        "number": 3221,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 100000') == 'Poor girl'\nassert solution('2 3 200000') == 'Poor girl'\nassert solution('3 4 3000000') == 'Poor girl'\nassert solution('4 5 4000000') == 'Poor girl'\nassert solution('5 6 5000000') == 'Poor girl'\n"
    },
    {
        "number": 3221,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7 7 10') == '49000000000070'\nassert solution('6 6 7') == '25000000000021'\nprint('Test success!')\n"
    },
    {
        "number": 3221,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == str(solution(stdin))\n"
    },
    {
        "number": 3222,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"Yeah!\"\nassert solution(\"3 3\") == \"Yeah!\"\nassert solution(\"4 4\") == \"2\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"1 0\") == \"2\"\n"
    },
    {
        "number": 3222,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''4 4\n0 1\n1 0\n2 3\n3 2'''\n    ) == '2'\nassert solution(\n'''4 4\n0 1\n1 0\n2 3\n3 2\n4 3\n'''\n    ) == 'Yeah!'\nassert solution(\n'''4 2\n0 1\n1 0\n2 3\n3 2'''\n    ) == '2'\nassert solution(\n'''4 2\n0 1\n1 0\n2 3\n3 2\n'''\n    ) == 'Yeah!'\nassert solution(\n'''4 5\n0 1\n1 0\n2 3\n3 4\n4 2\n4 3\n'''\n    ) == '2'\n"
    },
    {
        "number": 3222,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 4\n0 1\n1 0\n2 3\n3 2''') == '''2\n2\n0\n1\n2\n2\n3'''\n\nassert solution('''4 4\n0 1\n1 0\n2 3\n3 3''') == '''Yeah!\n2\n2\n0\n1'''\n"
    },
    {
        "number": 3222,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\n---\n\n## Codility\n\n## Task\n\nYou are given a binary string (i.e. with characters 0 and 1) that contains a code word. The code word is one that can be encoded by a phone dialpad (i.e. a pattern of numbers that you can dial). The pattern is encoded by a string consisting of one character 0 or 1.\n\nYou are also given a phone keypad that you can use to decode the code word. The phone keypad has the following layout:\n\n0 1 2 3\n4 5 6 7\n8 9 * 0#\n* # are unused.\n\nThe number of digits used by the phone keypad is exactly the same as the number of digits in the code word. The code word can also be decoded by pressing the \"*\" or \"#\" keys on a standard calculator.\n\nTo decode the code word, you press the key corresponding to the character at the same position in the code word as the character in the corresponding position on the phone keypad. You press the key corresponding to the character at two positions away from the character in the corresponding position on the phone keypad, then the key corresponding to the character at three positions away from the character in the corresponding position on the phone keypad, and so on.\n\nWhen you press a key, the position of the next character to press is determined by the remaining positions to press on the phone keypad. If there are no more remaining positions to press, the next character pressed is the digit at the corresponding position of the code word.\n\nFor example, if the code word is \"101\", the phone keypad is shown below, and the code word \"101\" can be decoded by pressing the \"#\" key 4 times (with each key being pressed once before moving on to the next digit).\n\nThe number of keys in the phone keypad is exactly the same as the number of digits in the code word.\n\nYour task is to determine if the code word can be decoded by pressing the right number of keys on the phone keypad.\n\nExample\n\nFor codeWord = \"101\" and phoneKeypad = \"01234\", the output should be\nisPhoneKeypadPossible(codeWord, phoneKeypad) = true.\n\nYou can press the \"#\" key 4 times to get the code word \"101\".\n\nFor codeWord = \"1010\" and phoneKeypad = \"01234\", the output should be\nisPhoneKeypadPossible(codeWord, phoneKeypad) = false.\n\nYou can press the \"#\" key 3 times, but not the \"#\" key 4 times. You can press the \"1\" key, which doesn't correspond to a key on the phone keypad, and you can't press the \"#\" key.\n\nInput/Output\n\n[time limit] 4000ms (py)\n\n[input] string codeWord\n\nA string containing a code word. It is guaranteed that the code word can be decoded by pressing the \"#\" key 4 times.\n\n[input] string phoneKeypad\n\nA string containing a phone keypad. It is guaranteed that the phone keypad has the same number of columns as the number of digits in the code word.\n\n[output] boolean\n\ntrue if the code word can be decoded by pressing the right number of keys on the phone keypad, false otherwise.\n\"\"\"\nimport collections\nimport re"
    },
    {
        "number": 3222,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 4\n0 1\n1 0\n2 3\n3 2''') == '2\\n2\\n0\\n1\\n2\\n2\\n3\\n3'\nassert solution('''4 4\n0 1\n1 0\n2 3\n3 2\n0 1\n1 0\n2 3\n3 2\n0 1\n1 0\n2 3\n3 2''') == '2\\n2\\n0\\n1\\n2\\n2\\n3\\n3'\nassert solution('''4 4\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n0 1\n1 0\n2 3\n3 2\n3 0\n"
    },
    {
        "number": 3222,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 4\\n0 1\\n1 0\\n2 3\\n3 2') == '2\\n2\\n0\\n1\\n2\\n2\\n3\\n3\\n'\nassert solution('4 4\\n0 1\\n1 0\\n2 3\\n3 3') == 'Yeah!\\n'\nassert solution('10 11\\n0 0\\n2 2\\n2 1\\n0 2\\n3 0\\n3 2\\n3 1\\n0 2\\n1 1\\n0 0') == 'Yeah!\\n'\nassert solution('9 3\\n0 0\\n1 1\\n1 0\\n0 1\\n1 1\\n1 0\\n0 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 1\\n1 1\\n1 0\\n0 1\\n0 0') == '2\\n2\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n'\nassert solution('6 2\\n0 0\\n0 1\\n0 2\\n0 3\\n0 4\\n1 0\\n1 1\\n2 0\\n2 1\\n2 2\\n2 3\\n2 4\\n3 0\\n3 1\\n3 2\\n3 3\\n3 4\\n4 0\\n4 1\\n4 2\\n4 3\\n4 4\\n4 5\\n5 0\\n5 1\\n5 2\\n5 3\\n5 4\\n5 5') == '4\\n4\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n1\\n1\\n1\\n1\\n1\\n'\n"
    },
    {
        "number": 3222,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0 1\n1 0\n2 3\n3 2''') == \"2\\n0\\n2\\n2\\n3\\n3\\n\"\nassert solution('''0 1\n1 0\n2 3\n3 3''') == \"Yeah!\\n\"\nassert solution('''0 1\n1 0\n2 3\n2 3\n3 3''') == \"2\\n1\\n2\\n2\\n3\\n3\\n\"\nassert solution('''0 1\n1 0\n2 2\n2 3\n3 3''') == \"2\\n2\\n1\\n2\\n2\\n3\\n3\\n\"\nassert solution('''0 1\n0 2\n1 3\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2"
    },
    {
        "number": 3222,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3222,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 4\n0 1\n1 0\n2 3\n3 2''') == '2'\nassert solution('''4 4\n0 1\n1 0\n2 3\n3 2\n2 1\n0 2''') == '2'\nassert solution('''4 4\n0 1\n1 0\n2 3\n3 2\n2 1\n3 4\n1 4\n0 3\n2 4\n3 1\n4 0\n1 4\n1 2\n3 4\n2 3\n3 1\n4 2\n0 4\n4 2\n1 4\n2 1\n3 4\n4 1\n2 3\n3 4\n1 2\n0 3\n2 4\n3 2\n0 4\n4 2\n1 4\n2 3\n3 1\n4 0\n1 4\n1 2\n3 4\n2 3\n3 1\n4 2\n0 4\n4 2\n1 4\n2 3\n3 2\n1 2\n0 3\n2 4\n3 2\n0 4\n4 2\n1 4\n2 3\n3 1\n4 0\n1 4\n1 2\n3 4\n2 3\n3 1\n4 2\n0 4\n4 2\n1 4\n2 3\n3 2\n1 2\n0 3\n2 4\n3 2\n0 4\n4 2\n1 4\n2 3\n3 1\n4 0\n1 4\n1 2\n3 4\n2 3\n3 1\n4 2\n0 4\n4 2\n1 4\n2 3\n3 2\n1 2\n0 3\n2 4\n3 2\n0 4\n4 2\n1 4\n2 3\n3 1\n4 0\n1 4\n1 2\n3 4\n2 3\n3 1\n4 2\n0 4\n4 2\n1 4\n2 3\n3 2\n1 2\n0 3\n2 4\n3 2\n0 4\n4 2\n1 4\n2 3\n3 1\n4 0\n1 4\n1 2\n3 4\n2 3\n3 1\n4 2\n0 4\n4 2\n1 4\n2 3\n3 2\n1 2\n0 3\n2 4\n3 2\n0 4\n4 2\n1 4\n2 3\n3 1\n4 0\n1 4\n1 2\n3 4\n2 3\n3 1\n4 2\n0 4\n4 2\n1 4\n2 3\n3 2\n1 2\n0 3\n2 4\n3 2\n0 4\n4 2\n1 4\n2 3\n3 1\n4 0\n1 4\n1 2\n3 4\n2 3\n3 1\n4 2\n0 4\n4 2\n1 4\n2 3\n3 2\n1 2\n0 3\n2 4\n3 2\n0 4\n4 2\n1 4\n2 3\n3 1\n4 0\n1 4\n1 2\n3 4\n2 3\n3 1\n4 2\n0 4\n4 2\n1 4\n2 3\n3 2\n1 2\n0 3\n2 4\n3 2\n0 4\n4 2\n1 4\n2 3\n3 1\n4 0\n1 4\n1 2\n3 4\n2 3\n3 1\n4 2\n0 4\n4 2\n1 4\n2 3\n3 2\n1 2\n0 3\n2 4\n3 2\n0 4\n4 2\n1 4\n2 3\n3 1\n4 0\n1 4\n1 2\n3 4\n2 3\n3 1\n4 2\n0 4\n4 2\n1 4\n2 3\n3 2\n1 2\n0 3\n2 4\n3 2\n0 4\n4 2\n1 4\n2 3\n3 1\n4 0\n1 4\n1 2\n3 4\n2 3\n3 1\n4 2\n0 4\n4 2\n1 4\n2 3\n3 2\n1 2\n0 3\n2 4\n3 2\n0 4\n4 2\n1 4\n2 3\n3 1\n4 0\n1 4\n1 2\n3 4\n2 3\n3 1\n4 2\n0 4\n4 2\n1 4\n2 3\n3 2\n1 2\n0 3\n2 4\n3 2\n0 4\n4 2\n1 4\n2 3\n3 1\n4 0\n1 4\n1 2\n3 4\n2 3\n3 1\n4 2\n0 4\n4 2\n1 4\n2 3\n3 2\n1 2\n0 3\n2 4\n3 2\n0 4\n4 2\n1 4\n2 3\n3 1\n4 0\n1 4\n1 2\n3 4\n2 3\n3 1\n4 2\n0 4\n4 2\n1 4\n2 3\n3 2\n1 2\n0 3\n2 4\n3 2\n0 4\n4 2\n1 4\n2 3\n3 1\n4 0\n1 4\n1 2\n3 4\n2 3\n3 1\n4 2\n0 4\n4 2\n1 4\n2 3\n3 2\n1 2\n0 3\n2 4\n3 2\n0 4\n4 2\n1 4\n2 3\n3 1\n4 0\n1 4\n1 2\n3 4\n2 3\n3 1\n4 2\n0 4\n4 2\n1 4\n2 3\n3 2\n1 2\n0 3\n2 4\n3 2\n0 4\n4 2\n1 4\n2 3\n3 1\n4 0\n1 4\n1 2\n3 4\n2 3\n3 1\n4 2\n0 4\n4 2\n1 4\n2 3\n3 2\n1 2\n0 3\n2 4\n3 2\n0 4\n4 2\n1 4\n2 3\n3 1\n4 0\n1 4\n1 2\n3 4\n2 3\n3 1\n4 2\n0 4\n4 2\n1 4\n2 3\n3 2\n1 2\n0 3\n2 4\n3 2\n0 4\n4 2\n1 4\n2 3\n3 1\n4 0\n1 4\n1 2\n3 4\n2 3\n3 1\n4 2\n0 4\n4 2\n1 4\n2 3\n3 2\n1 2\n0 3\n2 4\n3 2\n0 4\n4 2\n1 4\n2 3\n3 1\n4 0\n1 4\n1 2\n3 4\n2 3\n3 1\n4 2\n0 4\n4 2\n1 4\n2 3\n"
    },
    {
        "number": 3222,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n4 4\n0 1\n1 0\n2 3\n3 2\n'''\n) == '2\\n2\\n0\\n1\\n2\\n2\\n3\\n3\\n'\n\nassert solution(\n'''\n2 2\n1 2\n1 2\n'''\n) == 'Yeah!'\n\nassert solution(\n'''\n2 2\n0 1\n1 0\n1 0\n'''\n) == 'Yeah!'\n"
    },
    {
        "number": 3223,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n') == 'POSSIBLE'\nassert solution('1\\n1\\n') == 'POSSIBLE'\nassert solution('1\\n1\\n') == 'POSSIBLE'\nassert solution('1\\n1\\n') == 'POSSIBLE'\nassert solution('1\\n1\\n') == 'POSSIBLE'\n"
    },
    {
        "number": 3223,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 3223,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n1 1 2''') == 'POSSIBLE'\nassert solution('''2\n1 2''') == 'IMPOSSIBLE'\nassert solution('''2\n1 2''') == 'POSSIBLE'\nassert solution('''3\n1 2\n2 1\n3''') == 'POSSIBLE'\nassert solution('''3\n1 1 2\n2 2 1\n3''') == 'POSSIBLE'\n"
    },
    {
        "number": 3223,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"1 2 3 4\") == \"\"\n"
    },
    {
        "number": 3223,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n1 1 2''') == 'POSSIBLE'\nassert solution('''2\n1 2''') == 'IMPOSSIBLE'\n'''\n\nfrom functools import reduce"
    },
    {
        "number": 3223,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n1 1 2''') == 'POSSIBLE'\nassert solution('''2\n1 2''') == 'IMPOSSIBLE'\nassert solution('''4\n1 2 1 2''') == 'IMPOSSIBLE'\nassert solution('''4\n1 3 1 1''') == 'POSSIBLE'\nassert solution('''6\n1 1 2 1 1 3''') == 'POSSIBLE'\n"
    },
    {
        "number": 3223,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(open('sample_input.txt', 'r').read()) == 'POSSIBLE'\nassert solution(open('sample_input2.txt', 'r').read()) == 'IMPOSSIBLE'\nassert solution(open('sample_input3.txt', 'r').read()) == 'POSSIBLE'\nassert solution(open('sample_input4.txt', 'r').read()) == 'IMPOSSIBLE'\nassert solution(open('sample_input5.txt', 'r').read()) == 'POSSIBLE'\n"
    },
    {
        "number": 3223,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1 2\\n3') == 'POSSIBLE\\n1 3\\n2 3'\nassert solution('1 1 2\\n3') == 'IMPOSSIBLE'\nassert solution('1 2\\n1') == 'IMPOSSIBLE'\nassert solution('1 2\\n2') == 'IMPOSSIBLE'\nassert solution('2\\n1 1') == 'POSSIBLE\\n1 2'\n"
    },
    {
        "number": 3223,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('3') == 'POSSIBLE'\nassert solution('1 1 2') == 'POSSIBLE'\nassert solution('1 2') == 'IMPOSSIBLE'\nassert solution('1 1') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3223,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 'POSSIBLE'\nassert solution('2\\n1 2') == 'IMPOSSIBLE'\nassert solution('3\\n1 1 2') == 'POSSIBLE'\nassert solution('3\\n2 2 1') == 'POSSIBLE'\nassert solution('3\\n2 1 1') == 'POSSIBLE'\n"
    },
    {
        "number": 3224,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 0 0\n1 0 0\n0 1 0\n0 0 1''') == '0.5 0.5 -0.0'\n\nassert solution('''-1 0 0\n1 0 0\n0 1 0\n0 0 1''') == '0.0 0.0 0.0'\n\nassert solution('''0 0 0\n-1 0 0\n0 1 0\n0 0 1''') == '0.0 0.0 0.0'\n\nassert solution('''0 0 0\n0 1 0\n-1 0 0\n0 0 1''') == '0.5 0.5 0.5'\n\nassert solution('''0 0 0\n-1 0 0\n0 -1 0\n0 0 1''') == '0.5 0.5 -0.0'"
    },
    {
        "number": 3224,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 0 0') == '0.5 0.5 0.5'\nassert solution('-1 0 0') == '0.0 0.0 -0.0'\nassert solution('1 0 0') == '0.5 0.5 0.5'\nassert solution('0 1 0') == '0.0 0.0 -0.0'\nassert solution('1 1 1') == '0.5 0.5 0.5'\n"
    },
    {
        "number": 3224,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''0 0 0\n1 0 0\n0 1 0\n0 0 1''') == '0.5 0.5 -0.0'\nassert solution('''-1 0 0\n1 0 0\n0 1 0\n0 0 1''') == '0.0 0.0 0.0'\nassert solution('''0 0 0\n1 0 0\n0 1 0\n0 0 1''') == '0.0 0.0 -0.0'\nassert solution('''0 0 0\n0 1 0\n1 0 0\n0 0 1''') == '0.0 0.0 0.0'\nassert solution('''0 0 0\n0 1 0\n1 0 0\n0 0 1''') == '0.0 0.0 -0.0'\n"
    },
    {
        "number": 3224,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''0 0 0\n1 0 0\n0 1 0\n0 0 1''') == '0.5 0.5 0.5'\nassert solution('''-1 0 0\n1 0 0\n0 1 0\n0 0 1''') == '0.0 0.0 -0.0'\n"
    },
    {
        "number": 3224,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n0 0 0\n1 0 0\n0 1 0\n0 0 1\n\"\"\") == \"0.5 0.5 -0.0\"\n"
    },
    {
        "number": 3224,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''0 0 0\n1 0 0\n0 1 0\n0 0 1''') == '0.5 0.5 0.5'\nassert solution('''-1 0 0\n1 0 0\n0 1 0\n0 0 1''') == '0.0 0.0 -0.0'\nassert solution('''-1 0 0\n1 0 0\n-1 0 0\n0 0 1''') == '0.5 0.0 0.0'\nassert solution('''1 0 0\n0 1 0\n1 0 0\n0 0 1''') == '0.0 0.5 -0.5'\nassert solution('''1 0 0\n-1 0 0\n0 1 0\n0 0 1''') == '-0.5 0.5 -0.5'\n"
    },
    {
        "number": 3224,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0 0 0\n1 0 0\n0 1 0\n0 0 1''') == '0.0 0.0 -0.0'\nassert solution('''-1 0 0\n1 0 0\n0 1 0\n0 0 1''') == '0.0 0.0 -0.0'\n'''"
    },
    {
        "number": 3224,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''0 0 0\n1 0 0\n0 1 0\n0 0 1''') == '0.5 0.5 0.5'\nassert solution('''-1 0 0\n1 0 0\n0 1 0\n0 0 1''') == '0.0 0.0 -0.0'\n"
    },
    {
        "number": 3224,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0 0 0\n1 0 0\n0 1 0\n0 0 1''') == '0.5 0.5 0.5'\nassert solution('''-1 0 0\n1 0 0\n0 1 0\n0 0 1''') == '0.0 0.0 -0.0'\nassert solution('''0 0 0\n0 1 0\n1 0 0\n0 0 1''') == '0.0 0.0 -0.0'\n'''\n"
    },
    {
        "number": 3224,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''0 0 0\n1 0 0\n0 1 0\n0 0 1'''\n) == '0.5 0.5 -0.0'\nassert solution(\n'''-1 0 0\n1 0 0\n0 1 0\n0 0 1'''\n) == '0.0 0.0 -0.0'\nassert solution(\n'''1 0 0\n-1 0 0\n0 1 0\n0 0 1'''\n) == '0.0 0.0 0.0'\nassert solution(\n'''-1 0 0\n1 0 0\n0 1 0\n0 0 1'''\n) == '0.0 0.0 0.0'\nassert solution(\n'''1 1 1\n-1 1 1\n1 1 1\n1 1 1'''\n) == '0.0 0.0 0.0'\n"
    },
    {
        "number": 3225,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3225,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 3225,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3225,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('3\\n3\\n3\\n') == '0'\nassert solution('3\\n6\\n2\\n3\\n2\\n2\\n1\\n5\\n6') == '2'\nassert solution('4\\n16 17 4 6 9 19 2 5 4') == '5'\nassert solution('7\\n1 3 1 5 6 8 9 8 6') == '1'\n"
    },
    {
        "number": 3225,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10\\n3 6 2 3 2 2 2 1 5 6') == '2\\n3 2 2 1 5\\n3 2 2'\nassert solution('3\\n17 17 17') == '0\\n17 17 17'"
    },
    {
        "number": 3225,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10\n3 6 2 3 2 2 2 1 5 6''') == '2'\nassert solution('''10\n6 6 5 6 5 5 5 4 4 4 4 4 4 4 4 4 4 1''') == '0'\nassert solution('''6\n2 2 1 1 1 1 1 1 1''') == '0'\nassert solution('''3\n3 2 1''') == '2'\nassert solution('''5\n2 1 3 4 5 2''') == '0'\n"
    },
    {
        "number": 3225,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3225,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n') == '0\\n'\nassert solution('1\\n2\\n') == '0\\n1\\n'\nassert solution('1\\n2\\n1\\n') == '1\\n1\\n'\nassert solution('1\\n1\\n1\\n') == '0\\n1\\n1\\n'\nassert solution('3\\n17 17 17') == '0\\n17 17 17\\n0\\n17 17 17\\n0\\n17 17 17\\n'\n"
    },
    {
        "number": 3225,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n1') == '0'\nassert solution('2\\n1\\n0') == '0\\n1'\nassert solution('2\\n1\\n0\\n0') == '0\\n1'\nassert solution('10\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '8'\n"
    },
    {
        "number": 3225,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\n3 6 2 3 2 2 1 5 6') == '2\\n3 2 2 1 5\\n3 2 2\\n6 6'\n\nprint(solution(stdin))\n"
    },
    {
        "number": 3226,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == output\n\"\"\""
    },
    {
        "number": 3226,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"3 2 1\n1 2 7\n2 3 8\n1\n3 2\n\"\"\") == \"74.6666666667\"\nassert solution(\n\"\"\"3 2 1\n1 2 7\n2 3 8\n1\n2 3\n\"\"\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3226,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    '''\n    3 2 1\n    1 2 7\n    2 3 8\n    1\n    3 2\n    '''\n    ) == '74.6666666667'\n\nassert solution(\n    '''\n    3 2 1\n    1 2 7\n    2 3 8\n    1\n    2 3\n    '''\n    ) == 'IMPOSSIBLE'\n\nassert solution(\n    '''\n    3 2 1\n    1 2 7\n    2 3 8\n    1\n    2 3\n    '''\n    ) == '74.6666666667'\n\nassert solution(\n    '''\n    3 2 1\n    1 2 7\n    2 3 8\n    1\n    2 3\n    '''\n    ) == '74.6666666667'\n\nassert solution(\n    '''\n    3 2 1\n    1 2 7\n    2 3 8\n    1\n    2 3\n    '''\n    ) == '74.6666666667'"
    },
    {
        "number": 3226,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output\nprint(solution(stdin))\n\n\"\"\"\n"
    },
    {
        "number": 3226,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(test_data1) == \"IMPOSSIBLE\"\nassert solution(test_data2) == \"74.6666666667\"\nassert solution(test_data3) == \"IMPOSSIBLE\"\nassert solution(test_data4) == \"IMPOSSIBLE\"\nassert solution(test_data5) == \"74.6666666667\""
    },
    {
        "number": 3226,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n3 2 1\n1 2 7\n2 3 8\n1\n3 2\n''') == '74.6666666667'\nassert solution(\n'''\n3 2 1\n1 2 7\n2 3 8\n1\n1 2\n''') == 'IMPOSSIBLE'\nassert solution(\n'''\n3 2 1\n1 2 7\n2 3 8\n1\n2 3\n''') == 'IMPOSSIBLE'\nassert solution(\n'''\n4 2 3\n1 2 4\n2 3 3\n1\n3 2\n3 1\n1\n''') == '34.5'\nassert solution(\n'''\n4 2 3\n1 2 4\n2 3 3\n1\n3 2\n2 1\n1\n''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3226,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 2 1\n1 2 7\n2 3 8\n1\n3 2\n''') == 'IMPOSSIBLE'\nassert solution('''3 2 1\n1 2 7\n2 3 8\n1\n3 2\n2 3\n1\n2 3\n''') == '74.6666666667'\nassert solution('''3 2 1\n1 2 7\n2 3 8\n1\n3 2\n2 3\n1\n2 3\n''') == '74.6666666667'\nassert solution('''3 2 1\n1 2 7\n2 3 8\n1\n2 3\n1\n2 3\n''') == '74.6666666667'\nassert solution('''3 2 1\n1 2 7\n2 3 8\n1\n2 3\n1\n2 3\n2 3\n1\n2 3\n''') == '74.6666666667'\n"
    },
    {
        "number": 3226,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 2 1\n1 2 7\n2 3 8\n1\n3 2\n''') == '74.6666666667'\nassert solution('''1\n1 2 3\n1\n3 2\n''') == 'IMPOSSIBLE'\nassert solution('''1\n3 2\n1\n3 2\n''') == 'IMPOSSIBLE'\nassert solution('''1\n2 2\n1\n2\n''') == 'IMPOSSIBLE'\nassert solution('''1\n1 1\n2 1\n2\n''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3226,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 2 1\n1 2 7\n2 3 8\n1\n3 2\n''') == 'IMPOSSIBLE'\nassert solution('''3 2 1\n1 2 7\n2 3 8\n1\n3 2\n1 2 3\n''') == '74.6666666667'\nassert solution('''3 2 1\n1 2 7\n2 3 8\n1\n2 3\n1 2 3\n1 2 3\n''') == '3.78'\nassert solution('''3 2 1\n1 2 7\n2 3 8\n1\n1 2 3\n1 2 3\n''') == 'IMPOSSIBLE'\nassert solution('''4 2 2\n1 2 4\n1 3 4\n1 2 3\n2 3 5\n1 2 4\n''') == '6.4'\n"
    },
    {
        "number": 3226,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 2 1\n1 2 7\n2 3 8\n1\n3 2\n''') == '74.6666666667'\nassert solution('''3 2 1\n1 2 7\n2 3 8\n1\n2 3\n''') == 'IMPOSSIBLE'\nassert solution('''3 2 1\n1 2 7\n2 3 8\n1\n3 2\n1\n2 3\n''') == 'IMPOSSIBLE'\nassert solution('''3 2 1\n1 2 7\n2 3 8\n1\n2 3\n1\n3 2\n1\n2 3\n1\n2 3\n1\n2 3\n''') == 'IMPOSSIBLE'\nassert solution('''3 2 1\n1 2 7\n2 3 8\n1\n3 2\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n1\n2 3\n"
    },
    {
        "number": 3227,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 7\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\n5 6\n6 7\n7 4''') == '''1\n2\n1\n2\n2\n1\n'''\n"
    },
    {
        "number": 3227,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n'''"
    },
    {
        "number": 3227,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == output\n\"\"\"\n\n\nimport sys"
    },
    {
        "number": 3227,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n3') == '1'\nassert solution('2\\n1\\n3') == '1'\nassert solution('3\\n2\\n1') == '1'\nassert solution('3\\n1\\n2') == '2'\nassert solution('3\\n2\\n3') == '0'\n"
    },
    {
        "number": 3227,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n5 6\\n6 7\\n7 4') == '1\\n2\\n1\\n2\\n2\\n1\\n2'\nassert solution('5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n5 6\\n6 7\\n7 4') == '1\\n2\\n1\\n2\\n2\\n1\\n2'\nassert solution('8 9\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n5 6\\n6 7\\n7 8') == '0'\nassert solution('8 9\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n5 6\\n6 7\\n7 8') == '0'\nassert solution('8 9\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n5 6\\n6 7\\n7 8') == '0'\n"
    },
    {
        "number": 3227,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\n''') == '''1\n2\n1\n2\n2\n1\n'''\n\nassert solution('''7 7\n1 2\n2 3\n3 1\n4 5\n5 6\n6 7\n7 4\n''') == '''0\n'''\n\nassert solution('''5 4\n1 2\n1 3\n2 3\n3 1\n2 4\n''') == '''1\n1\n2\n1\n1\n'''\n\nassert solution('''5 4\n1 2\n2 3\n3 1\n2 4\n''') == '''0\n'''\n\nassert solution('''7 6\n1 2\n2 3\n3 1\n4 5\n5 6\n6 7\n7 4\n''') == '''1\n1\n1\n2\n1\n'''"
    },
    {
        "number": 3227,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\n5 6\n7 4''') == '0'\n\nassert solution('''5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\n5 6\n7 4''') == '1'\n\nassert solution('''7 7\n1 2\n2 3\n3 1\n4 5\n5 6\n6 7\n7 4\n1 2\n2 3\n3 1\n4 5\n5 6\n6 7\n7 4''') == '1'\n\nassert solution('''1 2\n2 3\n3 1\n3 4\n1 4\n4 5\n5 6\n6 7\n7 4''') == '1'\n\nassert solution('''5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\n5 6\n7 4''') == '1'"
    },
    {
        "number": 3227,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\n''') == '''1\n2\n1\n2\n2\n1\n'''\n\nassert solution(\n'''7 7\n1 2\n2 3\n3 1\n4 5\n5 6\n6 7\n7 4\n''') == '''0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n'''\n\nassert solution(\n'''10 10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 1\n''') == '''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n'''\n\nassert solution(\n'''100 100\n1 2\n2 3\n3 1\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 1\n''') == '''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n'''\n\nassert solution(\n'''10 100\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 1\n''') == '''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n'''"
    },
    {
        "number": 3227,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5') == '0\\n1\\n2\\n2\\n2\\n1'\nassert solution('7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4') == '1\\n1\\n2\\n2\\n2\\n1\\n1'\nassert solution('3 2\\n2 1') == '1\\n0'\nassert solution('3 2\\n2 1\\n1 2') == '1\\n0'\nassert solution('3 2\\n2 1\\n1 2\\n1 3') == '1\\n0'\n"
    },
    {
        "number": 3227,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\n5 6\n7 4''') == '''1\n2\n1\n2\n2\n1\n'''\nassert solution('''7 7\n1 2\n2 3\n3 1\n4 5\n5 6\n6 7\n7 4''') == '''0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n'''\nassert solution('''2 4\n1 2\n2 3\n3 1''') == '''1\n'''\nassert solution('''2 4\n1 2\n1 3\n2 3\n3 1\n3 4\n1 4\n4 5\n5 6\n6 7\n7 4\n''') == '''1\n'''\nassert solution('''3 3\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\n5 6\n6 7\n7 4\n''') == '''0\n'''\n"
    },
    {
        "number": 3228,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 10 2\\n0\\n15\\n30\\n45') == '10'\nassert solution('4 10 3\\n0\\n15\\n30\\n45') == '5'\nassert solution('4 10 2\\n0\\n15\\n30\\n45\\n90') == '5'\nassert solution('4 10 1\\n0\\n15\\n30\\n45') == '5'\nassert solution('4 10 1\\n0\\n15\\n30\\n45\\n90') == '5'\n"
    },
    {
        "number": 3228,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 10 2''') == '10'\nassert solution('''4 10 3''') == '5'\nassert solution('''4 10 4''') == '5'\nassert solution('''4 10 5''') == '7'\nassert solution('''4 10 6''') == '9'\n"
    },
    {
        "number": 3228,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(open(\"solutions/prob_2_sample_input.txt\", \"r\").read()) == \"10\"\nassert solution(open(\"solutions/prob_2_input.txt\", \"r\").read()) == \"5\"\nprint(\"Tests passed\")\n"
    },
    {
        "number": 3228,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 10 2\n0\n15\n30\n45''') == '10'\nassert solution('''4 10 3\n0\n15\n30\n45''') == '5'\nassert solution('''10 10 10\n0\n20\n30\n40\n50\n60\n70\n80\n90\n100\n110\n120\n130\n140\n150\n160\n170\n180\n190\n200\n210\n220\n230\n240\n250\n260\n270\n280\n290\n300\n310\n320\n330\n340\n350\n360\n370\n380\n390\n400\n410\n420\n430\n440\n450\n460\n470\n480\n490\n500\n510\n520\n530\n540\n550\n560\n570\n580\n590\n600\n610\n620\n630\n640\n650\n660\n670\n680\n690\n700\n710\n720\n730\n740\n750\n760\n770\n780\n790\n800\n810\n820\n830\n840\n850\n860\n870\n880\n890\n900\n910\n920\n930\n940\n950\n960\n970\n980\n990\n1000\n''') == '35'\nassert solution('''10 10 10\n0\n20\n30\n40\n50\n60\n70\n80\n90\n100\n110\n120\n130\n140\n150\n160\n170\n180\n190\n200\n210\n220\n230\n240\n250\n260\n270\n280\n290\n300\n310\n320\n330\n340\n350\n360\n370\n380\n390\n400\n410\n420\n430\n440\n450\n460\n470\n480\n490\n500\n510\n520\n530\n540\n550\n560\n570\n580\n590\n600\n610\n620\n630\n640\n650\n660\n670\n680\n690\n700\n710\n720\n730\n740\n750\n760\n770\n780\n790\n800\n810\n820\n830\n840\n850\n860\n870\n880\n890\n900\n910\n920\n930\n940\n950\n960\n970\n980\n990\n1000''') == '35'\nassert solution('''10 10 10\n0\n20\n30\n40\n50\n60\n70\n80\n90\n100\n110\n120\n130\n140\n150\n160\n170\n180\n190\n200\n210\n220\n230\n240\n250\n260\n270\n280\n290\n300\n310\n320\n330\n340\n350\n360\n370\n380\n390\n400\n410\n420\n430\n440\n450\n460\n470\n480\n490\n500\n510\n520\n530\n540\n550\n560\n570\n580\n590\n600\n610\n620\n630\n640\n650\n660\n670\n680\n690\n700\n710\n720\n730\n740\n750\n760\n770\n780\n790\n800\n810\n820\n830\n840\n850\n860\n870\n880\n890\n900\n910\n920\n930\n940\n950\n960\n970\n980\n990\n1000''') == '35'\n"
    },
    {
        "number": 3228,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 10 2') == '10'\nassert solution('3 3 3') == '6'\nassert solution('4 10 1') == '9'\nassert solution('4 4 4') == '2'\nassert solution('4 4 3') == '5'\n"
    },
    {
        "number": 3228,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 3228,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input_) == output_\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3228,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 10 2\n0\n15\n30\n45''') == \"10\"\nassert solution('''4 10 2\n0\n15\n30\n45''') == \"5\"\nassert solution('''4 1 2\n0\n15\n30\n45''') == \"0\"\nassert solution('''1000000000 1000000000 1000000000\n100000000000 1000000000 1000000000\n100000000000 1000000000 1000000000\n100000000000 1000000000 1000000000\n100000000000 1000000000 1000000000''') == \"20000000000\"\n'''\nNote: For the first test case, there are no skiers, so the waiting time is 0. There are only $G$ available gondolas, so the sum of the waiting times is 0.\n\nFor the second test case, there are no skiers in the first lap, so the waiting time is 0. There are only $G$ available gondolas, so the sum of the waiting times is 0.\n\nFor the third test case, there are no skiers in the first and second laps, so the waiting time is 0. There are only $G$ available gondolas, so the sum of the waiting times is 0.\n\nFor the fourth test case, there are no skiers in the first, second and third laps, so the waiting time is 0. There are only $G$ available gondolas, so the sum of the waiting times is 0.\n\nFor the fifth test case, there are no skiers in the first, second, third, fourth and fifth laps, so the waiting time is 0. There are only $G$ available gondolas, so the sum of the waiting times is 0.\n\nFor the sixth test case, there are skiers in the first, second, third, fourth, fifth and sixth laps, so the waiting time is 0. There are only $G$ available gondolas, so the sum of the waiting times is 0.\n\nFor the seventh test case, there are no skiers in the first, second, third, fourth, fifth, sixth and seventh laps, so the waiting time is 0. There are only $G$ available gondolas, so the sum of the waiting times is 0.\n\nFor the eighth test case, there are no skiers in the first, second, third, fourth, fifth, sixth, seventh and eighth laps, so the waiting time is 0. There are only $G$ available gondolas, so the sum of the waiting times is 0.\n\nFor the ninth test case, there are no skiers in the first, second, third, fourth, fifth, sixth, seventh, eighth and ninth laps, so the waiting time is 0. There are only $G$ available gondolas, so the sum of the waiting times is 0.\n\nFor the tenth test case, there are no skiers in the first, second, third, fourth, fifth, sixth, seventh, eighth and ninth and tenth laps, so the waiting time is 0. There are only $G$ available gondolas, so the sum of the waiting times is 0.\n\n'''\n"
    },
    {
        "number": 3228,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3 1') == '5'\nassert solution('5 10 2') == '10'\nassert solution('5 10 3') == '5'\nassert solution('4 10 3') == '4'\nassert solution('0 10 2') == '0'\n"
    },
    {
        "number": 3228,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5 10 2\") == \"\"\nassert solution(\"5 10 2\\n0\\n15\\n30\\n45\\n\") == \"\"\nassert solution(\"5 10 2\\n0\\n15\\n30\\n45\\n\\n0\\n15\\n30\\n45\\n\") == \"\"\nassert solution(\"5 10 2\\n0\\n15\\n30\\n45\\n\\n0\\n15\\n30\\n45\\n\\n0\\n15\\n30\\n45\\n\") == \"\"\n"
    },
    {
        "number": 3229,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''5 2\n50 50 75\n25 25 25\n50 50 50\n25 25 25\n''') == '2'\nassert solution(\n'''4 2\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n''') == '1'\nassert solution(\n'''7 2\n34 45 53 71 54 62 62\n51 51 51 51 51 51 51\n''') == '1'\nassert solution(\n'''2 2\n1 0\n100 0\n''') == '1'\nassert solution(\n'''2 2\n10 10\n0 0\n''') == '1'\n"
    },
    {
        "number": 3229,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3229,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 2\\n50 50 75') == '2'\nassert solution('5 2\\n25 25 25 25') == '1'\nassert solution('4 2\\n50 50 75') == '2'\nassert solution('4 2\\n50 50 75\\n25 25 25') == '1'\nassert solution('4 2\\n50 50 75\\n25 25 75') == '0'\n"
    },
    {
        "number": 3229,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n5 5 5\\n1 1 1 1\") == \"1\"\nassert solution(\"2 3\\n4 4 4\\n3 3 3 3\\n1 1 1 1\") == \"2\"\nassert solution(\"2 3\\n4 4 4\\n3 3 3 3\\n2 2 2 2\") == \"1\"\nassert solution(\"1 1 1\\n1 1 1\") == \"0\"\nassert solution(\"2 1\\n100 101\\n100 102\") == \"1\"\n"
    },
    {
        "number": 3229,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 2\n50 50 75\n25 25 25''') == '2'\nassert solution('''4 2\n50 50 50 50\n25 25 25 25''') == '1'\nassert solution('''4 2\n50 50 50 50\n25 25 25 25''') == '0'\nassert solution('''5 2\n50 50 50 50 50\n25 25 25 25 25''') == '0'\nassert solution('''7 3\n50 50 50 50 50 50 50 50\n25 25 25 25 25 25 25 25\n25 25 25 25 25 25 25 25\n25 25 25 25 25 25 25 25\n25 25 25 25 25 25 25 25\n25 25 25 25 25 25 25 25\n25 25 25 25 25 25 25 25\n25 25 25 25 25 25 25 25''') == '2'\n"
    },
    {
        "number": 3229,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '1'\n\"\"\"\n\"\"\"\nFor the first N-1 contests, we find out the rank of each contestant and record it. We then determine the worst possible rank that could be achieved in the last contest, by computing the rank of the worst-performing contestant.\n\nIn this problem, we are given a sequence of N-1 integers a1, a2,..., an, where 0 <= ai < 101.\n\nIn the ith contest, we award the value Ai points. If the worst possible rank is achieved, we award Ai+1 points. If the worst possible rank is achieved in the last contest, we award Ai points.\n\nWhen the first N-1 contests have been over, we award a score of 0. If the last contest was a tie, we award the average of the worst possible rank achieved during the first N-1 contests.\n\nThus, the worst possible rank that could be achieved in the last contest is the average rank of the worst-performing contestant in the first N-1 contests.\n\nExample 1:\n\nIn the first N-1 contests, the contestant with the highest score is worth 50 points, while the other two are worth 25 points each. We award the highest possible rank (50 + 25 + 25 + 25) = 100 points to the last contestant.\n\nIn the second contest, the winner of the first contest is the one with the highest score, while the other two are all tied for the second place. So we award 25+25+25+25 = 75 points to the last contestant.\n\nThe worst possible rank that could be achieved in the last contest is 75.\n\nExample 2:\n\nIn the first N-1 contests, the contestant with the highest score is worth 50 points, while the other two are worth 25 points each. We award the highest possible rank (50 + 25 + 25 + 25) = 100 points to the last contestant.\n\nIn the second contest, all three contestants tied for the second place, so their ranks would be 50, 50, and 50. We award 50+50+50+50 = 150 points to the last contestant.\n\nThe worst possible rank that could be achieved in the last contest is 150.\n\nIn this example, the worst possible rank is the average rank of the worst-performing contestant in the first N-1 contests.\n\"\"\"\n"
    },
    {
        "number": 3229,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 2\n50 50 75\n25 25 25\n''') == '2'\nassert solution('''5 2\n50 50 50 50\n25 25 25 25\n''') == '1'\n'''\n"
    },
    {
        "number": 3229,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 2') == '1'\nassert solution('4 2') == '2'\nassert solution('5 2') == '1'\nassert solution('6 2') == '2'\nassert solution('6 2') == '1'\n"
    },
    {
        "number": 3229,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0 2\\n50 50 75\") == \"2\"\nassert solution(\"1 2\\n50 50 75\") == \"1\"\nassert solution(\"2 2\\n50 50 75\") == \"1\"\nassert solution(\"0 3\\n50 50 50 50\") == \"2\"\nassert solution(\"1 3\\n50 50 50 50\") == \"1\"\n"
    },
    {
        "number": 3229,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n' + '1\\n' * 5) == 2\nassert solution('1\\n' * 5) == 1\nassert solution('3\\n' * 4) == 2\nassert solution('3\\n' * 4 + '2\\n' * 4) == 1\nassert solution('3\\n' * 4 + '1\\n' * 4 + '2\\n' * 3) == 2\n"
    },
    {
        "number": 3230,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('.L..') == '1'\nassert solution('LX') == '1'\nassert solution('LX') == '1'\nassert solution('LX') == '1'\nassert solution('LX.L') == '2'\n"
    },
    {
        "number": 3230,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('.LX.X..X.L..L.LX.X.X.L.X.X.L.X.X.L.X.X.L.X.X.L.X.X.L.X.X.L.X.X.L.X.X.L.X.L.L.X.L.L.L.L.X.L.L.X.L.L.L.L.X.L.L.X.L.L.L.L.X.L.L.X.L.L.L.X.L.X.L.X.L.X.L.X.L.L.X.L.X.L.X.L.L.X.X.L.L.L.X.L.X.L.X.L.X.L.X.L.X.L.X.L.L.L.L.X.L.L.X.L.X.L.L.X.L.L.L.X.L.L.X.L.X.L.L.X.L.L.L.X.L.L.L.X.L.L.L.X.L.X.L.X.L.L.L.X.L.L.L.X.L.X.L.L.X.L.L.X.L.X.L.X.L.X.L.L.X.L.X.L.L.X.L.L.X.L.X.L.X.L.X.L.X.L.L.X.L.L.X.L.X.L.X.L.L.L.X.X.L.X.L.X.L.X.L.X.L.L.X.L.X.L.X.L.L.X.X.L.X.L.X.L.L.X.L.X.L.L.X.L.X.L.X.L.X.L.L.X.X.L.L.X.L.L.X.L.X.L.X.L.L.X.L.L.X.L.X.L.L.X.L.X.L.X.L.L.X.L.X.L.X.L.L.X.L.X.L.X.L.X.L.L.X.X.L.X.L.L.X.L.X.L.L.X.L.X.L.X.L.X.L.X.L.L.X.L.X.L.L.X.L.X.L.X.L.X.L.X.L.L.X.L.X.L.X.L.L.X.L.L.X.X.L.X.L.X.L.X.L.X.L.L.X.L.X.L.X.L.X.L.L.X.L.X.L.X.L.L.X.L.X.L.X.L.X.L.L.X.L.X.L.L.X.L.L.X.L.X.L.L.X.L.X.L.X.L.X.L.L.X.L.L.X.L.X.L.L.X.L.X.L.L.X.L.X.L.L.X.L.X.L.L.X.L.X.L.X.L.L.X.X.L.L.X.L.X.L.X.L.L.X.L.L.X.L.X.L.L.X.L.L.X.L.X.L.L.X.L.L.X.L.X.L.L.X.L.L.X.L.L.X.L.X.L.L.X.L.X.L.L.X.L.X.L.L.X.L.L.X.L.X.L.L.X.L.L.X.L.L.X.L.L.X.L.X.L.L.X.L.L.X.L.X.L.L.X.L.X.L.X.L.L.X.L.X.L.L.X.L.X.L.L.X.L.X.L.L.X.L.X.L.L.X.L.L.X.L.X.L.X.L.L.X.L.X.L.L.X.L.X.L.L.X.L.L.X.L.X.L.L.X.L.X.L.L.X.L.L.X.L.X.L.L.X.L.X.L.L.X.L.X.L.L.X.L.X.L.L.X.L.X.L.L.X.L.X.L.L.X.L.X.L.L.X.L.L.X.L.X.L.L.X.L.X.L.L.X.L.L.X.L.X.L.L.X.L.X.L.L.X.L.L.X.L.X.L.L.X.L.L.X.L.X.L.L.X.L.X.L.L.X.L.X.L.L.X.L.X.L.L.X.L.X.L.L.X.L.X.L.L.X.L.L.X.L.X.L.X.L.L.X.L.X.L.L.X.L.X.L.X.L.L.X.L.X.L.X.L.L.X.L.X.L.L.X.L.X.L.L.X.L.L.X.L.X.L.L.X.L.L.X.L.X.L.L.X.L.X.L.L.X.L.L.X.L.X.L.L.X.L.L.X.L.X.L.L.X.L.X.L.L.X"
    },
    {
        "number": 3230,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\".LX.\\n.X..\\n....\\n.L..\\n\") == \"1\"\nassert solution(\".XLX\\n.X..\\n...L\\n.X..\\n\") == \"2\"\nassert solution(\"2 4\\nLX.\\n.L.\\n.X..\\n.L.\\n\") == \"1\"\nassert solution(\"3 4\\n.L.\\n.X..\\n....\\n.L..\\n\") == \"0\"\nassert solution(\"3 4\\nL.\\n.L..\\n....\\n.L..\\n\") == \"3\"\n"
    },
    {
        "number": 3230,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"4 4\n.LX.\n.X..\n....\n.L..\n\"\"\") == \"1\"\nassert solution(\"\"\"4 4\n.LX.\n.X..\n...L\n.X..\n\"\"\") == \"2\"\nassert solution(\"\"\"4 4\n.LX.\n.X..\n.L...\n.X..\n\"\"\") == \"3\"\nassert solution(\"\"\"2 1\nL\nL\n\"\"\") == \"0\"\nassert solution(\"\"\"1 1\nL\nL\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3230,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 4') == 1\nassert solution('4 4') == 2\n"
    },
    {
        "number": 3230,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\".X..L.X.L.\") == 2\n\"\"\"\n"
    },
    {
        "number": 3230,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\".X..\") == \"1\"\nassert solution(\".XLX\") == \"2\"\nassert solution(\".L..\") == \"3\"\nassert solution(\".X..\") == \"4\"\nassert solution(\".X..\") == \"5\"\n"
    },
    {
        "number": 3230,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\".L.X.\") == 1\nassert solution(\"X.X.\") == 2\nassert solution(\"X.L.X.\") == 1\nassert solution(\"L.L.X.\") == 2\nassert solution(\"L.L.X.L.\") == 3\n"
    },
    {
        "number": 3230,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\".LX.\") == \"1\"\nassert solution(\".X..\") == \"2\"\nassert solution(\".X.X\") == \"1\"\nassert solution(\".XLX\") == \"2\"\nassert solution(\"L..L..L....\") == \"3\"\n"
    },
    {
        "number": 3230,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('X') == 'X'\nassert solution('LLX') == '1'\nassert solution('LXL') == '2'\nassert solution('LLL') == '3'\n"
    },
    {
        "number": 3231,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2') == 'home'\nassert solution('5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n') == 'detention'\nprint('Test passed')\n"
    },
    {
        "number": 3231,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 2 1\") == \"detention\"\nassert solution(\"5 2 1\") == \"home\"\nassert solution(\"1 1\") == \"home\"\nassert solution(\"3 2 1\") == \"detention\"\nassert solution(\"5 3 1\") == \"home\"\n"
    },
    {
        "number": 3231,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'detention'"
    },
    {
        "number": 3231,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 2 1\") == \"home\"\nassert solution(\"1 1\") == \"home\"\nassert solution(\"1 2\") == \"home\"\nassert solution(\"3 2 1\") == \"home\"\nassert solution(\"3 2 1\") == \"detention\"\n"
    },
    {
        "number": 3231,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n') == 'home'\nassert solution('5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n') == 'detention'\nassert solution('5 3 2\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 4\\n1 2\\n') == 'detention'\nassert solution('5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 4\\n1 2\\n') == 'detention'\nassert solution('5 3 2\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 4\\n1 2\\n') == 'detention'\n"
    },
    {
        "number": 3231,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n2\\n1') == 'detention'\nassert solution('2\\n1\\n2\\n2') == 'home'\nassert solution('2\\n2\\n2\\n2') == 'detention'\nassert solution('3\\n2\\n2\\n2') == 'home'\nassert solution('3\\n2\\n2\\n3') == 'detention'\n"
    },
    {
        "number": 3231,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n\"\n) == \"detention\"\n\nassert solution(\n    \"5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n\"\n) == \"home\"\n\nassert solution(\n    \"5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n2 2 4\\n1 3\\n\"\n) == \"home\"\n\"\"\"\n\nfrom collections import defaultdict\nimport sys\n\nclass Vertex:\n    def __init__(self, value: int):\n        self.value = value\n        self.in_degree = 0\n        self.edges = defaultdict(Vertex)\n\nclass Graph:\n    def __init__(self, vertices: int):\n        self.vertices = [Vertex(i) for i in range(vertices)]\n\n    def add_edge(self, edge: tuple):\n        self.vertices[edge[0]].in_degree += 1\n        self.vertices[edge[1]].in_degree += 1\n        self.vertices[edge[1]].edges[edge[0]] = self.vertices[edge[0]]\n\n    def print_graph(self):\n        for vertex in self.vertices:\n            print(f'Vertex {vertex.value}: {[vertex.edges[i].value for i in vertex.edges]}')"
    },
    {
        "number": 3231,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 2 1''') == 'home'\nassert solution('''5 2 1''') == 'detention'\n'''"
    },
    {
        "number": 3231,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 2 1\") == \"home\"\nassert solution(\"5 2 1\") == \"home\"\nassert solution(\"5 2 3\") == \"detention\"\nassert solution(\"5 2 3\\n2 2 3\\n2 0 3\\n1 3\") == \"detention\"\nassert solution(\"1 1\\n1 1\") == \"home\"\n"
    },
    {
        "number": 3231,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 2 1\n1 1\n2 0 2\n2 1 3\n1 2\n''') == 'home'\nassert solution('''5 2 1\n1 1\n2 0 2\n2 1 3\n2 2 4\n1 3\n''') == 'detention'\nassert solution('''7 2 1\n1 1\n2 0 2\n2 1 3\n2 2 4\n2 3 5\n2 4 6\n1 5\n''') == 'detention'\nassert solution('''7 2 1\n1 1\n2 0 2\n2 1 3\n2 2 4\n2 3 5\n2 4 6\n2 5 7\n1 6\n''') == 'detention'\nassert solution('''7 2 1\n1 1\n2 0 2\n2 1 3\n2 2 4\n2 3 5\n2 4 6\n2 5 7\n2 6 8\n1 7\n''') == 'detention'\n"
    },
    {
        "number": 3232,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('tralalal') == 'allatral'\nassert solution('zzzz') == '-1'\nassert solution('tralala') == 'allatral'\nassert solution('tralala') == 'allatral'\nassert solution('tralalal') == 'allatral'\n"
    },
    {
        "number": 3232,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3232,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('tralalal') == 'allatral'\nassert solution('zzzzzz') == '-1'\nassert solution('tralala') == 'allatral'\nassert solution('zzzz') == '-1'\nassert solution('tralal') == 'allatral'\n"
    },
    {
        "number": 3232,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('tralalal') == 'allatral'\nassert solution('zzzz') == '-1'"
    },
    {
        "number": 3232,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\"\nassert solution(\"aaa\") == \"aaa\"\nassert solution(\"abc\") == \"abc\"\nassert solution(\"abcd\") == \"abcd\"\n"
    },
    {
        "number": 3232,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\"\nassert solution(\"tralalal\") == \"allatral\"\nassert solution(\"tralal\") == \"allatral\"\nassert solution(\"trala\") == \"allatral\"\n"
    },
    {
        "number": 3232,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('tralalal') == 'allatral'\nassert solution('zzzz') == '-1'\nprint(solution(stdin.strip()))\n\"\"\"\n"
    },
    {
        "number": 3232,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 3232,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('tralalal') == 'allatral'\nassert solution('zzzzz') == '-1'\nassert solution('cabbba') == 'cabbbac'\nassert solution('aa') == 'a'\nassert solution('b') == 'b'\n"
    },
    {
        "number": 3232,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('tralalal') == 'allatral'\nassert solution('zzzz') == '-1'\nassert solution('tralalal') == 'allatral'\nassert solution('qwerty') == '-1'\nassert solution('tralalal') == 'allatral'\n"
    },
    {
        "number": 3233,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2 3 4 5') == '5'\nassert solution('6\\n3 2 1 6 4 5') == '8'\n\n'''\n"
    },
    {
        "number": 3233,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4 5') == '5'\nassert solution('3 2 1 6 4 5') == '8'\nassert solution('1 2 3 4 5 6') == '10'\nassert solution('1 2 3 4 5 6 7') == '14'\nassert solution('1 2 3 4 5 6 7 8') == '21'\n"
    },
    {
        "number": 3233,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n1 2\") == \"2\"\nassert solution(\"3\\n1 2 3\") == \"4\"\nassert solution(\"4\\n1 2 3 4\") == \"5\"\nassert solution(\"5\\n1 2 3 4 5\") == \"6\"\n"
    },
    {
        "number": 3233,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 3233,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n1 2 3 4 5') == '5'\nassert solution('6\\n3 2 1 6 4 5') == '8'\n\"\"\"\n"
    },
    {
        "number": 3233,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"1\"\n"
    },
    {
        "number": 3233,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n3\") == \"3\"\nassert solution(\"1\\n2\") == \"2\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n1\") == \"0\"\nassert solution(\"1\\n10\") == \"10\"\n"
    },
    {
        "number": 3233,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n1 2') == 2\nassert solution('1\\n1') == 1\nassert solution('1\\n2') == 0\nassert solution('5\\n1 2 3 4 5') == 5\nassert solution('6\\n3 2 1 6 4 5') == 8\n"
    },
    {
        "number": 3233,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"5\\n1 2 3 4 5\\n\") == \"5\"\nassert solution(\n    \"6\\n3 2 1 6 4 5\\n\") == \"8\"\nassert solution(\n    \"6\\n3 2 1 6 4 5\\n\") == \"8\"\nassert solution(\n    \"2\\n1\\n\") == \"1\"\nassert solution(\n    \"3\\n1 2 3\\n\") == \"2\"\n"
    },
    {
        "number": 3233,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''5\n1 2 3 4 5'''\n) == '5'\n\nassert solution(\n'''6\n3 2 1 6 4 5'''\n) == '8'\n"
    },
    {
        "number": 3234,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expect\n"
    },
    {
        "number": 3234,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"47\") == \"1\"\nassert solution(\"523\") == \"2\"\nassert solution(\"12345678\") == \"0\"\n\"\"\""
    },
    {
        "number": 3234,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"47\") == \"1\"\nassert solution(\"523\") == \"2\""
    },
    {
        "number": 3234,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('10000000000') == '1'\nassert solution('9') == '2'\nassert solution('2') == '1'\n"
    },
    {
        "number": 3234,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"47\") == \"1\"\nassert solution(\"523\") == \"2\"\nprint(\"Tests passed successfully.\")\n"
    },
    {
        "number": 3234,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('47') == 1\nassert solution('523') == 2\nprint('Test complete')\n\n'''\n"
    },
    {
        "number": 3234,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"47\") == \"1\"\nassert solution(\"523\") == \"2\"\nassert solution(\"1534\") == \"1\"\nassert solution(\"3435\") == \"0\"\nassert solution(\"5750\") == \"4\"\n"
    },
    {
        "number": 3234,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"47\") == \"1\"\nassert solution(\"523\") == \"2\"\n"
    },
    {
        "number": 3234,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"47\") == \"1\"\nassert solution(\"523\") == \"2\"\n\nimport sys\nfrom io import StringIO\n\ntest_input_1 = \"\"\"47\n\"\"\"\n\ntest_input_2 = \"\"\"523\n\"\"\"\n\nsys.stdin = StringIO(test_input_1)\n"
    },
    {
        "number": 3234,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3235,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20\") == \"0\\n1\\n0 1 15\\n\"\n"
    },
    {
        "number": 3235,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3235,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\n"
    },
    {
        "number": 3235,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n''') == '0'\n\nassert solution(\n'''\n1 2 3\n0 1 10\n1 2 9\n''') == '0'\n\nassert solution(\n'''\n6 6\n0 1 10\n1 2 5\n0 3 10\n1 4 10\n3 2 10\n1 5 10\n''') == '0'\n\nassert solution(\n'''\n5 7\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 5\n3 1 10\n2 1 5\n''') == '1'\n\nassert solution(\n'''\n5 7\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 5\n3 1 10\n2 1 5\n0 0 5\n''') == '1'"
    },
    {
        "number": 3235,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3235,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20''') == '''0\n1\n0 1 15\n'''\n"
    },
    {
        "number": 3235,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 3235,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20') == '0\\n1 15'\nassert solution('3 3\\n0 1 20\\n1 0 5\\n0 2 10\\n2 0 10\\n1 3 10\\n3 2 10\\n2 0 10\\n1 3 10\\n3 2 10\\n0 3 20\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n2 3 10\\n1 3 10\\n0 3 10\\n3 2 10\\n2 0 10\\n"
    },
    {
        "number": 3235,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20''') == '1\\n0 1 15'\nassert solution('''0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n1 2 15\n0 1 25''') == '2'\nassert solution('''1 1 1\n1 0 1\n1 1 1''') == '0'\nassert solution('''0 1 10\n1 0 10\n1 0 20\n1 1 10\n1 1 0''') == '0'\nassert solution('''0 1 10\n1 0 10\n1 0 20\n1 1 10\n1 1 0\n0 1 25\n1 2 15\n0 1 25''') == '1'\n"
    },
    {
        "number": 3235,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1\\n0 1 15\"\nprint('Test success!')\n'''"
    },
    {
        "number": 3236,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5') == '5'\nassert solution('4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\\n4 5') == '1'\nassert solution('3 2\\n1 2\\n2 3') == '0'\nassert solution('1 2\\n1 2\\n1 2') == '2'\nassert solution('5 6\\n1 2 1 2 1 5\\n1 2\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5') == '5'\n"
    },
    {
        "number": 3236,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"5 6\\n\"\n    \"1 3 2 1 5\\n\"\n    \"1 3\\n\"\n    \"2 3\\n\"\n    \"1 4\\n\"\n    \"3 5\\n\"\n    \"4 5\\n\"\n    \"2 5\\n\") == \"5\"\n\nassert solution(\n    \"5 3\\n\"\n    \"4 4 8 12\\n\"\n    \"1 2\\n\"\n    \"2 3\\n\"\n    \"3 4\\n\") == \"1\"\n\nassert solution(\n    \"4 3\\n\"\n    \"4 4 8 12\\n\"\n    \"1 2\\n\"\n    \"2 3\\n\"\n    \"3 4\\n\") == \"0\"\n\nassert solution(\n    \"2 2\\n\"\n    \"1 2\\n\"\n    \"2 1\\n\") == \"0\"\n\nassert solution(\n    \"2 4\\n\"\n    \"1 2\\n\"\n    \"2 1\\n\") == \"1\""
    },
    {
        "number": 3236,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '1'\nassert solution(stdin) == '0'\nassert solution(stdin) == '1'\nassert solution(stdin) == '1'\nassert solution(stdin) == '2'\n"
    },
    {
        "number": 3236,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '1'\n"
    },
    {
        "number": 3236,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 6\n1 3 2 1 5\n1 3\n2 3\n1 4\n3 5\n4 5\n2 5\n''') == '5'\nassert solution('''3 3\n1 2\n2 3\n3 4\n''') == '1'\nassert solution('''10 10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n''') == '4'\nassert solution('''4 2\n4 4 8 12\n1 2\n2 3\n3 4\n''') == '1'\nassert solution('''6 5\n1 3 2 1 5\n1 3\n2 3\n1 4\n3 5\n4 5\n2 5\n''') == '5'\n"
    },
    {
        "number": 3236,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3236,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n\") == 1\nassert solution(\"2 1\\n\") == 0\nassert solution(\"1 2 3\\n\") == 0\nassert solution(\"2 2 1\\n\") == 1\nassert solution(\"1 2 2\\n\") == 1\n"
    },
    {
        "number": 3236,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3') == '1'\nassert solution('1 2') == '0'\nassert solution('1 3') == '1'\nassert solution('3 2') == '2'\nassert solution('1 4') == '1'\n"
    },
    {
        "number": 3236,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n2\") == \"0\"\nassert solution(\"4\\n4\\n8\\n12\\n\") == \"5\"\nassert solution(\"4\\n4\\n8\\n12\\n2\\n5\\n\") == \"1\"\nassert solution(\"2\\n2\\n2\\n2\\n2\\n\") == \"0\"\n"
    },
    {
        "number": 3236,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '0'\n"
    },
    {
        "number": 3237,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('020302') == 7\nassert solution('1311') == 24\nassert solution('11') == 12\nassert solution('00010') == 0\nassert solution('00') == 0\n"
    },
    {
        "number": 3237,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('020302') == '7'\nassert solution('1311') == '24'\nassert solution('11') == '12'\nassert solution('4'*10000) == '4'\n\nfrom math import sqrt\nfrom itertools import count\n"
    },
    {
        "number": 3237,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"020302\") == '7'\nassert solution(\"1311\") == '24'\nassert solution(\"00111111\") == '2'\nassert solution(\"00111001\") == '3'\nassert solution(\"10011\") == '1'\n"
    },
    {
        "number": 3237,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('020302') == '7'\nassert solution('1311') == '24'\nassert solution('030303') == '15'\nassert solution('1101111') == '12'\nassert solution('0401010') == '16'\n"
    },
    {
        "number": 3237,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('020302') == 7\nassert solution('1311') == 24\nassert solution('10000') == 7\nassert solution('1001001') == 8\nassert solution('1011011') == 9\n"
    },
    {
        "number": 3237,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('020302') == '7'\nassert solution('1311') == '24'\nassert solution('01111111') == '4'\nassert solution('987654321') == '4'\nassert solution('40000000000000000') == '4'\n"
    },
    {
        "number": 3237,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('020302') == 7\nassert solution('1311') == 24\nassert solution('11') == 12\nassert solution('11111') == 6\nassert solution('10011') == 5\n"
    },
    {
        "number": 3237,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"020302\") == 7\nassert solution(\"1311\") == 24\nassert solution(\"01100\") == 11\nassert solution(\"101010\") == 3\nassert solution(\"101010\") == 3\n"
    },
    {
        "number": 3237,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('020302') == '7'\nassert solution('1311') == '24'\nassert solution('2020030203040405060708091011121314151617181920202030303030303') == '7'\nassert solution('1311') == '24'\nassert solution('000110001000010110001000001001000001010101010010000101000100100000001') == '7'\n"
    },
    {
        "number": 3237,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('020302') == '7'\nassert solution('1311') == '24'\nassert solution('011001010110110101110101') == '15'\nassert solution('112001011011011011011101011') == '19'\nassert solution('10110101110101001010110010101') == '30'\n"
    },
    {
        "number": 3238,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##.\\n##########\\n##########') == '3 1 3 10'\nassert solution('5 20\\n###########.#.#.#.\\n###########...#.\\n##########..##.#\\n###########..#.#\\n###########.###...\\n##########.######\\n##########..#####\\n') == '1 15 5 15'\nprint(solution(''))\n"
    },
    {
        "number": 3238,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input(\"\")) == output\n"
    },
    {
        "number": 3238,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3238,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##.\\n##########\\n##########') == '3 1 3 10'\nassert solution('6 6\\n###.#..#.#\\n#.#.###...\\n##.###....\\n##.#....#\\n##..#...##\\n#.##..##.#\\n###.###.#.\\n.#..##.#..') == '1 15 5 15'\nassert solution('8 10\\n###########.#.\\n#.####..#..\\n.#..#..#.#.\\n.#..#..#.#.\\n.#..#..#.#.\\n#.####..#..\\n###########..\\n###########..') == '3 1 3 10'\nassert solution('8 10\\n#....#.#...\\n#..###.#...\\n###....#...\\n##.##..#...\\n######.##..\\n#....#.#...\\n#.######.#..\\n..#.##.##.##') == '3 3 3 3'\nassert solution('8 10\\n#.#..#..#.#\\n#.####....#\\n#.#.#....#.\\n#..#.#...#.\\n#...##..#..\\n.#.###.###.\\n#.#.#.#.#.#\\n#.####.###.\\n##..#.##.#.\\n') == '1 1 1 1'\n"
    },
    {
        "number": 3238,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(dedent(\"\"\"\n    8 10\n    #.#..##..#\n    ####..####\n    ###.##....\n    ...#..####\n    ....##....\n    .#.##..##.\n    ##########\n    ##########\n    \"\"\").strip()) == '3 1 3 10'\n\n\n\"\"\"\n\nLets take a look at the example of a \"double-linked list\"\n\nA double-linked list is like a tree.\nIt has a parent and a child\nA node can have a next and a previous node\n\nThe nodes are nodes that store a value\n\nA node has a value, a next, and a previous\n\n\"\"\"\n\nclass Node:\n    def __init__(self, value, next=None, previous=None):\n        self.value = value\n        self.next = next\n        self.previous = previous\n\n    def __str__(self):\n        return str(self.value)\n\n\"\"\"\nLets define a single linked list\n\nLets also define a function that takes a value and inserts it into the front of a double-linked list\n\n\"\"\""
    },
    {
        "number": 3238,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''5 19\n"
    },
    {
        "number": 3238,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##.\\n##########\\n##########\\n') == '3 1 3 10'\n"
    },
    {
        "number": 3238,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 5') == '3 1 3 10'\nassert solution('5 10') == '3 1 3 10'\nassert solution('1 1') == '1 1 1 1'\nassert solution('2 4') == '1 1 1 1'\nassert solution('1 1') == '1 1 1 1'\n"
    },
    {
        "number": 3239,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 3239,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('50 0.125') == '16.339203308'\nassert solution('201 1.000') == '5.000000000'\nassert solution('-30 1.00000001') == '1.00000009'\nassert solution('40 1.00000000') == '1.00000000'\nassert solution('-80 1.00000001') == '1.00000001'\n"
    },
    {
        "number": 3239,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('50 0.125') == '16.339203308'\nassert solution('201 1.000') == '5.000000000'\nassert solution('20 0.01') == '1.669364004'\nassert solution('90 1.0') == '10.000000000'\nassert solution('100 0.001') == '100.0000000'\n"
    },
    {
        "number": 3239,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3239,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"50 0.125\") == \"16.339203308\"\nassert solution(\"201 1.000\") == \"5.000000000\"\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 3239,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '5.000000000'\n\"\"\"\n"
    },
    {
        "number": 3239,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('50 0.125') == '16.339203308'\nassert solution('201 1.000') == '5.000000000'"
    },
    {
        "number": 3239,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('50 0.125\\n') == '16.339203308'\nassert solution('201 1.000\\n') == '5.000000000'\n\"\"\"\n"
    },
    {
        "number": 3239,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3239,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('50 0.125') == '16.339203308'\nassert solution('201 1.000') == '5.000000000'\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 3240,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''2 2\n0.5 1\n''') == '2'\n\nassert solution(\n'''3 3\n0.5 0\n0.5 1\n''') == '2'\n\nassert solution(\n'''6 3\n0.5 0.5\n0.5 0.5\n0.5 1.5\n0.5 1.5\n''') == '2'\n\nassert solution(\n'''8 3\n0.1 0.2\n0.3 0.4\n0.4 0.5\n0.3 0.3\n0.4 0.4\n0.4 0.5\n0.1 0.2\n''') == '4'\n"
    },
    {
        "number": 3240,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2') == '2'\nassert solution('4 3') == '3'\nassert solution('2 1') == '1'\nassert solution('1 1') == '0'\nassert solution('8 3') == '0'\n"
    },
    {
        "number": 3240,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n1 11\\n0.4 1\") == \"3\"\nassert solution(\"2 2\\n0.5 1\\n\") == \"2\"\nassert solution(\"3 3\\n0.3 0\\n0.2 0.4\\n0.1 0.5\\n\") == \"0\"\nassert solution(\"3 3\\n0.7 0.2\\n0.3 0.6\\n0.1 0.5\\n\") == \"0\"\nassert solution(\"6 6\\n0.1 0.2 0.3 0.4 0.5 0.6 0.7\\n0.1 0.2 0.3 0.4 0.5 0.6 0.7\") == \"0\"\n"
    },
    {
        "number": 3240,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin[8:10]\n"
    },
    {
        "number": 3240,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 2\n0.5 1\n''') == '2'\nassert solution('''4 3\n1 11\n0.4 1\n''') == '3'\nassert solution('''3 1\n1 3\n0.5 1\n''') == '2'\nassert solution('''3 2\n1 3\n0.5 1\n''') == '3'\nassert solution('''10 10\n0.1 10\n0.2 9\n0.3 8\n0.4 7\n0.5 6\n0.6 5\n0.7 4\n0.8 3\n0.9 2\n0.99 1\n''') == '3'\n"
    },
    {
        "number": 3240,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 2\n0.5 1\n''') == '2'\nassert solution('''3 3\n1 11\n0.4 1\n''') == '3'\nassert solution('''3 2\n1 11\n0.3 1\n''') == '2'\nassert solution('''4 4\n1 11\n0.2 1\n0.2 1\n0.2 1\n''') == '2'\nassert solution('''5 5\n1 11\n0.2 1\n0.2 1\n0.2 1\n0.2 1\n''') == '2'\n"
    },
    {
        "number": 3240,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3\\n0.5 1\\n0.4 1') == '3'\n\"\"\"\nimport sys\nfrom math import ceil\n\nk, v = [int(x) for x in sys.stdin.readline().strip().split(' ')]\n\nprobs = []\nfor i in range(v - 1):\n    probs.append([float(x) for x in sys.stdin.readline().strip().split(' ')])\n\nprobs.append([0.0, 1.0])\ntotal = 1.0\n\nfor prob in probs:\n    total *= prob[1]\n    total += prob[0]\n\nprobabilities = []\nfor prob in probs:\n    probabilities.append(ceil(total * prob[1] / total))\n\ntotal_probabilities = sum(probabilities)\n\npossible_votes = 2 ** k - 1\nvotes = 1\nfor i in range(total_probabilities):\n    votes *= probabilities[i]\n    if votes > possible_votes:\n        break\n\nprint(possible_votes - votes)\n"
    },
    {
        "number": 3240,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 2\n0.5 1\n''') == '2'\nassert solution('''4 3\n1 11\n0.4 1\n''') == '3'\nassert solution('''6 5\n1 100\n0.5 1\n''') == '2'\nassert solution('''5 7\n0.5 1\n0.5 1\n0.5 1\n0.5 1\n0.5 1\n''') == '6'\nassert solution('''7 7\n0.5 1\n0.5 1\n0.5 1\n0.5 1\n0.5 1\n0.5 1\n0.5 1\n''') == '5'\n"
    },
    {
        "number": 3240,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''2 2\n0.5 1\n''') == '2'\nassert solution(\n'''4 3\n1 11\n0.4 1\n''') == '3'\nassert solution(\n'''4 2\n0.5 1\n''') == '2'\nassert solution(\n'''8 2\n0.05 0\n0.05 1\n0.05 0\n0.05 0\n0.05 0\n0.05 0\n0.05 1\n0.05 0\n''') == '2'\nassert solution(\n'''8 2\n0.05 0\n0.05 1\n0.05 0\n0.05 0\n0.05 0\n0.05 0\n0.05 0\n0.05 1\n0.05 0\n''') == '2'\n"
    },
    {
        "number": 3240,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2\\n0.5 1\\n') == '2'\nassert solution('4 3\\n1 11\\n0.4 1\\n') == '3'\nassert solution('6 2\\n0.1 1\\n0.3 1\\n0.5 0\\n0.7 1\\n0.9 0\\n') == '4'\nassert solution('6 2\\n0.1 1\\n0.3 1\\n0.5 0\\n0.7 1\\n0.9 0\\n0.2 0\\n') == '5'\nassert solution('6 2\\n0.1 1\\n0.3 1\\n0.5 0\\n0.7 1\\n0.9 0\\n0.2 0\\n0.5 0\\n') == '6'\n"
    },
    {
        "number": 3241,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3241,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n1\\n2\\n0') == '10.5'\nassert solution('3\\n7 1\\n3 2\\n10 0') == '10.5'\nassert solution('2\\n4 3\\n1 1\\n0 0') == '2.0'\nassert solution('3\\n2 1\\n4 0\\n0 3') == '-1'\nassert solution('2\\n4 3\\n1 1\\n1 1\\n0 0') == '2.0'\n"
    },
    {
        "number": 3241,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n7 1\n3 2\n10 0''') == '10.5'\nassert solution('''3\n2 1\n4 0\n0 3''') == '-1'"
    },
    {
        "number": 3241,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10\\n7 1\\n3 2\\n10 0\\n') == '10.5\\n'\nassert solution('10\\n2 1\\n4 0\\n0 3\\n') == '-1\\n'\nassert solution('10\\n2 1\\n4 0\\n0 3\\n') == '-1\\n'\nassert solution('10\\n2 1\\n4 0\\n0 3\\n') == '-1\\n'\nassert solution('10\\n2 1\\n4 0\\n0 3\\n') == '-1\\n'\n"
    },
    {
        "number": 3241,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n7 1\n3 2\n10 0''') == '10.5'\nassert solution('''3\n2 1\n4 0\n0 3''') == '-1'\nassert solution('''4\n1 1\n2 0\n0 3\n3 1''') == '8.6'\nassert solution('''4\n1 1\n2 0\n0 3\n3 4''') == '1'\nassert solution('''4\n2 1\n4 0\n0 3\n3 4''') == '5.7'\n"
    },
    {
        "number": 3241,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n2\\n0') == '-1'\nassert solution('1\\n0\\n0') == '-1'\nassert solution('2\\n2\\n1') == '0'\nassert solution('2\\n2\\n2') == '0'\nassert solution('2\\n2\\n2\\n0') == '2'\n"
    },
    {
        "number": 3241,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == solution(stdin)\n\"\"\""
    },
    {
        "number": 3241,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n3\n7 1\n3 2\n10 0\n''') == '10.5'\nassert solution('''\n3\n2 1\n4 0\n0 3\n''') == '-1'\nassert solution('''\n5\n4 1\n3 2\n2 1\n1 0\n''') == '2.5'\nassert solution('''\n6\n2 1\n2 2\n2 3\n3 2\n2 0\n1 2\n''') == '2.5'\nassert solution('''\n2\n1 1\n1 1\n''') == '0'\n"
    },
    {
        "number": 3241,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n7 1\n3 2\n10 0''') == '10.5'\nassert solution('''3\n2 1\n4 0\n0 3''') == '-1'\nassert solution('''3\n3 1\n3 2\n10 0''') == '3'\nassert solution('''3\n4 1\n3 2\n10 0''') == '3'\nassert solution('''3\n2 1\n4 0\n0 3''') == '3'\n"
    },
    {
        "number": 3241,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3\\n7 1\\n3 2\\n10 0\") == \"10.5\"\nassert solution(\"1\\n2\\n3\") == \"-1\"\nassert solution(\"5\\n6\\n1\\n5\\n1\") == \"7.5\"\nassert solution(\"3\\n1\\n0\\n3\") == \"7.5\"\nassert solution(\"2\\n2\\n3\\n0\") == \"-1\"\n"
    },
    {
        "number": 3242,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 0.5\\n2 0.5\\n1 0.5\") == \"1\"\nassert solution(\"2 0.51\\n2 0.49\\n1 0.49\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 3242,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3242,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''2 0.5\n2 0.5\n1 0.5''') == '1'\nassert solution(\n'''2 0.5\n2 0.51\n1 0.49''') == '2'\nassert solution(\n'''2 0.5\n2 0.51\n1 0.49\n3 0.49''') == '2'\nassert solution(\n'''2 0.5\n2 0.51\n1 0.49\n2 0.49''') == '1'\nassert solution(\n'''2 0.5\n2 0.51\n1 0.49\n2 0.49\n1 0.49''') == '2'\n"
    },
    {
        "number": 3242,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '1'"
    },
    {
        "number": 3242,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 0.5\\n2 0.51\\n1 0.49\") == \"2\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\\n0 0.1\") == \"2\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\\n0 0.99\") == \"1\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\\n0 0.999\") == \"2\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\\n0 0.99999\") == \"3\"\n"
    },
    {
        "number": 3242,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 0.5\n2 0.5\n1 0.5''') == '1'\nassert solution('''2 0.5\n2 0.51\n1 0.49''') == '2'\nassert solution('''2 0.5\n2 0.1\n1 0.1''') == '1'\nassert solution('''2 0.5\n2 0.1\n1 0.9''') == '1'\nassert solution('''2 0.5\n2 0.9\n1 0.9''') == '2'\n"
    },
    {
        "number": 3242,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 0.5\\n2 0.5\\n1 0.5\") == \"1\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\") == \"2\"\n"
    },
    {
        "number": 3242,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 0.5\\n2 0.5\\n1 0.5\") == \"1\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\") == \"2\"\nassert solution(\"1 0.1\\n1 0.9\\n1 0.9\\n1 0.1\") == \"5\"\n"
    },
    {
        "number": 3242,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 0.5\n2 0.5\n1 0.5''') == '1'\nassert solution('''2 0.5\n2 0.51\n1 0.49''') == '2'\nassert solution('''2 0.5\n2 0.01\n1 0.49\n3 0.51\n2 0.52\n1 0.51\n2 0.49\n2 0.49\n1 0.47''') == '0'\nassert solution('''10 0.5\n10 0.5\n9 0.5\n7 0.5\n9 0.5\n3 0.5\n6 0.5\n4 0.5\n1 0.5\n2 0.5\n2 0.5\n5 0.5''') == '24'\nassert solution('''7 0.5\n1 0.5\n1 0.5\n1 0.5\n1 0.5\n1 0.5\n2 0.5\n1 0.5''') == '4'\n"
    },
    {
        "number": 3242,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''2 0.5\n2 0.51\n1 0.49\n'''\n    ) == '2'\n\nassert solution(\n'''2 0.1\n2 0.1\n1 0.2\n'''\n    ) == '4'\n\nassert solution(\n'''2 0.01\n2 0.01\n1 0.01\n'''\n    ) == '4'\n\nassert solution(\n'''2 0.01\n2 0.01\n1 0.01\n'''\n    ) == '4'\n\nassert solution(\n'''2 0.01\n2 0.01\n1 0.01\n'''\n    ) == '4'"
    },
    {
        "number": 3243,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n4 5 2\n3 3 3 3\n0 1\n0 3\n1 3\n1 2\n2 3\n\"\"\"\n) == 'yes'\nassert solution(\n\"\"\"\n5 4 4\n1 1 2 2 2\n0 1\n2 3\n3 4\n4 2\n\"\"\"\n) == 'yes'\nassert solution(\n\"\"\"\n6 7 2\n3 3 3 3 3 3\n0 1\n0 3\n1 3\n1 2\n2 3\n1 4\n1 5\n2 4\n3 4\n4 5\n\"\"\"\n) == 'no'\n"
    },
    {
        "number": 3243,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"4 5 2\n3 3 3 3\n0 1\n0 3\n1 3\n1 2\n2 3\"\"\"\n    ) == \"yes\"\n\nassert solution(\n    \"\"\"5 4 4\n1 1 2 2 2\n0 1\n2 3\n3 4\n4 2\n\"\"\"\n    ) == \"yes\"\n\nassert solution(\n    \"\"\"5 5 5\n1 1 2 2 2\n0 1\n0 3\n0 4\n0 5\n2 3\n1 4\n3 4\n\"\"\"\n    ) == \"yes\"\n\nassert solution(\n    \"\"\"5 5 5\n1 1 2 2 2\n0 1\n0 3\n0 4\n0 5\n2 3\n1 4\n3 4\n\"\"\"\n    ) == \"yes\"\n\nassert solution(\n    \"\"\"4 3 2\n3 3 3 3\n0 1\n0 3\n1 3\n1 2\n2 3\"\"\"\n    ) == \"yes\""
    },
    {
        "number": 3243,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 5 2\n3 3 3 3\n0 1\n0 3\n1 3\n1 2\n2 3''') == 'yes'\nassert solution('''5 4 4\n1 1 2 2 2\n0 1\n2 3\n3 4\n4 2\n''') == 'no'\nassert solution('''5 5 5\n0 1\n0 2\n0 3\n0 4\n0 5\n1 2\n2 3\n3 4\n4 5\n''') == 'yes'\nassert solution('''5 5 5\n0 1\n0 2\n0 3\n0 4\n0 5\n1 2\n2 3\n3 4\n4 5\n5 1\n''') == 'no'\nassert solution('''5 5 5\n0 1\n0 2\n0 3\n0 4\n0 5\n1 2\n2 3\n3 4\n4 5\n5 0\n''') == 'yes'\n"
    },
    {
        "number": 3243,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 5 2\\n3 3 3 3\\n0 1\\n0 3\\n1 3\\n1 2\\n2 3\\n') == 'yes'\nassert solution('5 4 4\\n1 1 2 2 2\\n0 1\\n2 3\\n3 4\\n4 2\\n') == 'no'\n\n\"\"\""
    },
    {
        "number": 3243,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2 1') == 'no'\nassert solution('3 3 2') == 'no'\nassert solution('4 4 2') == 'yes'\nassert solution('2 3 2') == 'yes'\nassert solution('10 10 3') == 'yes'\n"
    },
    {
        "number": 3243,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 5 2') == 'yes'\nassert solution('5 4 4') == 'yes'\nassert solution('5 4 4\\n0 1\\n0 3\\n1 3\\n1 2\\n2 3\\n3 4\\n4 2') == 'yes'\nassert solution('3 3 3 3\\n1 1 1 1 1\\n0 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1') == 'yes'\nassert solution('3 3 3 3\\n1 1 1 1 1\\n0 1\\n0 1\\n1 1\\n0 1\\n1 1\\n0 1\\n1 1') == 'yes'\n"
    },
    {
        "number": 3243,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == 'no'\nassert solution('0') == 'yes'\nassert solution('2 3 4') == 'no'\nassert solution('4 5 2') == 'yes'\nassert solution('2 2') == 'no'\n"
    },
    {
        "number": 3243,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 5 2\n3 3 3 3\n0 1\n0 3\n1 3\n1 2\n2 3\n''') == 'yes'\nassert solution('''5 4 4\n1 1 2 2 2\n0 1\n2 3\n3 4\n4 2\n''') == 'no'\n\nassert solution('''8 8 4\n2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2\n1 1 1 1 1 1 1 1\n0 0 0 0 0 0 0 0\n2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2\n''') == 'yes'\n\nassert solution('''7 10 3\n3 3 3 3 3 3 3 3\n3 3 3 3 3 3 3 3\n3 3 3 3 3 3 3 3\n3 3 3 3 3 3 3 3\n3 3 3 3 3 3 3 3\n3 3 3 3 3 3 3 3\n3 3 3 3 3 3 3 3\n3 3 3 3 3 3 3 3\n''') == 'no'\n\nassert solution('''6 8 2\n2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2\n''') == 'yes'"
    },
    {
        "number": 3243,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 5 2\n3 3 3 3\n0 1\n0 3\n1 3\n1 2\n2 3\n''') == 'yes'\nassert solution('''5 4 4\n1 1 2 2 2\n0 1\n2 3\n3 4\n4 2\n''') == 'yes'\nassert solution('''5 4 5\n1 1 2 2 3\n0 1\n2 3\n3 4\n4 2\n5 3\n''') == 'no'\nassert solution('''3 4 4\n1 1 2 2 2\n0 1\n2 3\n3 4\n4 2\n''') == 'yes'\nassert solution('''5 4 2\n1 1 2 2 3\n0 1\n2 3\n3 4\n4 2\n''') == 'yes'\n"
    },
    {
        "number": 3243,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3244,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"2\\n1\\n2\"\nassert solution(\"4\") == \"5\\n8\\n2\\n7\"\nassert solution(\"5\") == \"5\\n10\\n5\\n15\"\nassert solution(\"6\") == \"5\\n15\\n5\\n10\"\nassert solution(\"7\") == \"5\\n10\\n5\\n15\\n17\"\n"
    },
    {
        "number": 3244,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5\\n5\\n5\\n5') == '2\\n1\\n2\\n2'\nassert solution('5\\n5\\n5\\n5') == '5\\n8\\n2\\n7'\nassert solution('5\\n5\\n5\\n5') == '5\\n5\\n5\\n5'\nassert solution('5\\n5\\n5\\n5') == '5\\n5\\n5\\n5'\nassert solution('5\\n5\\n5\\n5') == '5\\n5\\n5\\n5'\n"
    },
    {
        "number": 3244,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n1') == '2\\n1'\nassert solution('5\\n5\\n5\\n5') == '5\\n5\\n5\\n5'\nassert solution('4\\n20\\n15\\n17\\n14') == '5\\n8\\n2\\n7'\nassert solution('10\\n100\\n1000\\n10000\\n100000\\n1000000\\n10000000\\n100000000\\n1000000000') == '5\\n8\\n2\\n7\\n1\\n0\\n1'\nassert solution('4\\n20\\n15\\n17\\n14') == '5\\n8\\n2\\n7'\n"
    },
    {
        "number": 3244,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"5\n5\n5\n5\n\"\"\") == \"\"\"2\n1\n2\n2\n2\n\"\"\"\n\nassert solution(\"\"\"5\n20\n15\n17\n14\n\"\"\") == \"\"\"5\n8\n2\n7\n7\n\"\"\"\n"
    },
    {
        "number": 3244,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n2\\n3\\n') == '3\\n2\\n2'\nassert solution('2\\n3\\n3\\n') == '6\\n3\\n2'\nassert solution('1\\n3\\n') == '3\\n1'\nassert solution('2\\n2\\n') == '3\\n3'\nassert solution('1\\n1\\n2\\n3\\n') == '5\\n1\\n2'\n"
    },
    {
        "number": 3244,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3244,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n20\\n15\\n17\\n14') == '5\\n8\\n2\\n7'\n\"\"\"\n\nfrom collections import deque\n\nn = int(stdin.readline())\nnums = list(map(int, stdin.readline().strip().split(' ')))\n\nfor i in range(len(nums)):\n    num = nums[i]\n    nums[i] = num + nums[(i + 1) % len(nums)]\n\nprint(*nums)"
    },
    {
        "number": 3244,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3\\n5\\n5\\n5\") == \"2\\n1\\n2\"\nassert solution(\"4\\n20\\n15\\n17\\n14\") == \"5\\n8\\n2\\n7\"\n\"\"\"\n\nfrom math import sqrt\n\nn = int(input())\nm = [int(input()) for _ in range(n)]\nl = len(m)\nfor i in range(l):\n    m[i] = int(m[i])\nsum = 0\nfor i in range(l):\n    for j in range(i+1, l):\n        if sqrt((m[i]**2)+(m[j]**2)) == int(sqrt((m[i]**2)+(m[j]**2))):\n            sum += 1\nprint(sum)\n"
    },
    {
        "number": 3244,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n5\\n5\\n5\\n') == '2\\n1\\n2\\n7\\n'\nassert solution('2\\n15\\n17\\n14\\n') == '5\\n8\\n2\\n7\\n'\nassert solution('3\\n20\\n15\\n17\\n14\\n') == '5\\n8\\n2\\n7\\n'\n\"\"\"\n"
    },
    {
        "number": 3244,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n5\n5\n5''') == '''2\n1\n2\n'''\n\nassert solution('''4\n20\n15\n17\n14\n''') == '''5\n8\n2\n7\n'''\n\nassert solution('''4\n6\n3\n4\n3\n4\n4\n3\n5\n''') == '''2\n1\n2\n1\n2\n1\n'''\n\nassert solution('''4\n6\n3\n5\n4\n3\n4\n5\n4\n4\n5\n4\n5\n4\n5\n4\n5\n4\n5\n''') == '''2\n1\n2\n1\n2\n1\n'''\n\nassert solution('''4\n6\n3\n5\n4\n4\n5\n4\n5\n4\n4\n5\n4\n5\n4\n5\n4\n5\n4\n5\n4\n5\n4\n5\n4\n5\n''') == '''2\n1\n2\n1\n2\n1\n'''"
    },
    {
        "number": 3245,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(sample1) == expected1\nassert solution(sample2) == expected2\nassert solution(sample3) == expected3\n\n'''\n\nimport sys\n\n'''\n"
    },
    {
        "number": 3245,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('p^') == 'p'\nassert solution('python') == 'python'\nassert solution('p^ main.py') == 'p^ main.py'\nassert solution('p^ main.py -n 10') == 'p^ main.py -n 10'\n"
    },
    {
        "number": 3245,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"3\np^ main.py\n^ -n 10\n\"\"\"\n) == \"\"\"python\npython main.py\npython main.py -n 10\"\"\"\n\nassert solution(\n    \"\"\"5\npython\n^\n^^^\n^^^\n^^^\n^^^\n\"\"\"\n) == \"\"\"python\njava\njava\npython\njava\n"
    },
    {
        "number": 3245,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\npython\np^ main.py\n^ -n 10''') == 'python\\npython main.py\\npython main.py -n 10\\n'\nassert solution('''5\npython\njava\n^\n^^^\n^^^\n''') == 'python\\npython\\njava\\njava\\njava\\n'\nassert solution('''10\np^\nq^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n''') == 'p\\nq\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n'\n'''\n'''\n"
    },
    {
        "number": 3245,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"python\") == \"python\"\nassert solution(\"python -n 10\") == \"python -n 10\"\nassert solution(\"python  -n 10\") == \"python -n 10\"\nassert solution(\"python  -n 10.5\") == \"python -n 10.5\"\nassert solution(\"python -n -10\") == \"python -n -10\"\n"
    },
    {
        "number": 3245,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == expected_output\nassert solution(sample_input_2) == expected_output\nprint('All set? Click \"Check\" to earn cool rewards!')\n\"\"\"\n"
    },
    {
        "number": 3245,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(sample1) == sample1_expected\nassert solution(sample2) == sample2_expected"
    },
    {
        "number": 3245,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    '3\\npython\\np^ main.py\\n^ -n 10\\n'\n) == 'python\\np^ main.py\\npython main.py -n 10\\n'\n\nassert solution(\n    '5\\npython\\njava\\np^\\n^^^\\n^^^\\n'\n) == 'python\\njava\\np^\\njava\\np^\\n'\n"
    },
    {
        "number": 3245,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('python\\np^ main.py\\n^ -n 10\\np^ main.py\\n^^^\\n^') == 'python\\npython main.py\\npython main.py -n 10\\np^ main.py\\np^ main.py\\np^ main.py\\njava\\njava main.py\\njava main.py\\njava main.py\\np^ main.py\\n'\n"
    },
    {
        "number": 3245,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin'''\n"
    },
    {
        "number": 3246,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"this sentence makes perfect sense\"\n"
    },
    {
        "number": 3246,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\") == \"impossible\"\nassert solution(\"threethreefourhundredthirtynine\") == \"impossible\"\nassert solution(\"fortyseveneightnine\") == \"impossible\"\nassert solution(\"threethreefourhundredthirtynine\") == \"impossible\"\n"
    },
    {
        "number": 3246,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''tihssnetnceemkaesprfecetsesne''') == 'this sentence makes perfect sense'\nassert solution('''hitehre''') == 'impossible'\nassert solution('''thiessne''') == 'impossible'\nassert solution('''hi''') == 'impossible'\nassert solution('''this''') == 'impossible'\n"
    },
    {
        "number": 3246,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('tihssnetnceemkaesprfecetsesne',5,\n'makes',\n'perfect',\n'sense',\n'sentence',\n'this',\n'hello') == 'this sentence makes perfect sense'\nassert solution('hitehre',2,\n'there',\n'hello',\n'hello') == 'impossible'\nassert solution('tihssnetnceemkaesprfecetsesne',6,\n'makes',\n'perfect',\n'sense',\n'sentence',\n'this',\n'hello') == 'impossible'\nassert solution('tihssnetnceemkaesprfecetsesne',2,\n'makes',\n'perfect',\n'hello',\n'hello',\n'hello') == 'impossible'\nassert solution('tihssnetnceemkaesprfecetsesne',5,\n'makes',\n'perfect',\n'sense',\n'sentence',\n'this',\n'hello',\n'hello') == 'this sentence makes perfect sense'\n"
    },
    {
        "number": 3246,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"tihs snetncee mkaes prfecet sesne\", 5, [\"makes\", \"perfect\", \"sense\", \"sentence\", \"this\"]) == \"this sentence makes perfect sense\"\nassert solution(\"hi there\", 2, [\"there\", \"hello\"]) == \"impossible\"\nassert solution(\"hitehre\", 2, [\"there\"]) == \"impossible\"\nassert solution(\"hii thi re hte hre\", 3, [\"there\", \"hi\", \"there\"]) == \"impossible\"\nassert solution(\"hii thi re hte hre\", 2, [\"there\", \"hi\"]) == \"impossible\"\n"
    },
    {
        "number": 3246,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('tihssnetnceemkaesprfecetsesne', '5','makes\\nperfect\\nsense\\nsentence\\nthis\\n', 'there\\nhello\\n') == 'this sentence makes perfect sense'\nassert solution('hitehre', '2', 'there\\nhello\\n', 'impossible\\n') == 'impossible'\nassert solution('hi', '2', 'there\\nhello\\n', 'impossible\\n') == 'impossible'\nassert solution('hi', '1', 'there\\nhello\\n', 'impossible\\n') == 'impossible'\nassert solution('hi', '5', 'there\\nhello\\n', 'impossible\\n') == 'impossible'\n"
    },
    {
        "number": 3246,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('tihssnetnceemkaesprfecetsesne') == 'this sentence makes perfect sense'\nassert solution('hitehre') == 'impossible'\nassert solution('there') == 'impossible'\nassert solution('hello') == 'impossible'\nassert solution('tihssnetnceemkaesprfecetsesne') == 'this sentence makes perfect sense'\n"
    },
    {
        "number": 3246,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\") == \"impossible\"\nassert solution(\"thiehre\") == \"impossible\"\nassert solution(\"hitehrer\") == \"impossible\"\nassert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\"\n"
    },
    {
        "number": 3246,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('tihssnetnceemkaesprfecetsesne') == 'this sentence makes perfect sense'\nassert solution('hitehre') == 'impossible'\nassert solution('hitehre2') == 'impossible'\nassert solution('hitehre3') == 'impossible'\nassert solution('hitehre4') == 'impossible'\n"
    },
    {
        "number": 3246,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    'tihssnetnceemkaesprfecetsesne'\n    '5'\n    'makes'\n    'perfect'\n    'sense'\n    'sentence'\n    'this'\n    'hitehre') == 'this sentence makes perfect sense'\n\nassert solution(\n    'hitehre'\n    '2'\n    'there'\n    'hello') == 'impossible'\n\nassert solution(\n    'cat'\n    '2'\n    'cat'\n    'cat') == 'impossible'\n\nassert solution(\n    'a'\n    '1'\n    'a'\n    'a') == 'impossible'\n\nassert solution(\n    'a'\n    '5'\n    'a'\n    'a'\n    'a') == 'impossible'"
    },
    {
        "number": 3247,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == 4\nassert solution('2 2') == 16\nassert solution('3 4') == 2\nassert solution('4 4') == 4\nassert solution('10 10') == 1\n"
    },
    {
        "number": 3247,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2') == '4'\nassert solution('2 2') == '16'\n\"\"\""
    },
    {
        "number": 3247,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2') == '4'\nassert solution('2 2') == '16'\nassert solution('3 3') == '8'\nassert solution('4 4') == '64'\nassert solution('5 5') == '256'\n"
    },
    {
        "number": 3247,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"4\"\nassert solution(\"2 2\") == \"16\"\nassert solution(\"4 4\") == \"256\"\nassert solution(\"1 2 1 1\") == \"0\"\nassert solution(\"1 1\") == \"0\"\n"
    },
    {
        "number": 3247,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2') == '4'\nassert solution('2 2') == '16'\nassert solution('3 3') == '84'\nassert solution('4 4') == '1248'\nassert solution('5 5') == '9828'\n"
    },
    {
        "number": 3247,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"4\"\nassert solution(\"2 2\") == \"16\"\n"
    },
    {
        "number": 3247,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"4\"\nassert solution(\"2 2\") == \"16\"\nassert solution(\"3 4\") == \"48\"\nassert solution(\"4 3\") == \"16\"\nassert solution(\"5 5\") == \"31226\"\n"
    },
    {
        "number": 3247,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2\\n') == '4'\nassert solution('2 2\\n') == '16'\nassert solution('1 10\\n') == '0'\nassert solution('1 100\\n') == '1'\nassert solution('2 100\\n') == '6'\n"
    },
    {
        "number": 3247,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2') == '4'\nassert solution('2 2') == '16'\nassert solution('1 2') == '4'\nassert solution('1 1') == '1'\nassert solution('5 5') == '32'\n"
    },
    {
        "number": 3247,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2') == '4'\nassert solution('2 2') == '16'\n"
    },
    {
        "number": 3248,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\nabcbab\n2\ncb\ncbab\n''') == '2'\nassert solution('''4\nabab\n2\nbac\nbaba\n''') == '4'\nassert solution('''13\nbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb"
    },
    {
        "number": 3248,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\\\n6\nabcbab\n2\ncb\ncbab\n''') == '2'\nassert solution('''\\\n4\nabab\n2\nbac\nbaba\n''') == '4'\n\n\"\"\"\n\"\"\"\nimport sys\nfrom typing import List\n\nMAX_STREET_LENGTH = 3000"
    },
    {
        "number": 3248,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6\\nabcbab\\n2\\ncb\\ncbab\\n') == '2'\nassert solution('4\\nabab\\n2\\nbac\\nbaba\\n') == '4'\nassert solution('1\\nabc\\n1\\nab\\n') == '0'\nassert solution('3\\nabc\\n1\\nab\\n') == '1'\nassert solution('6\\nabcbab\\n2\\ncb\\ncbab\\n') == '2'\n"
    },
    {
        "number": 3248,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n6\nabcbab\n2\ncb\ncbab\n''') == '2'\nassert solution('''\n7\nabababab\n2\nbab\nbba\nbabab\n''') == '4'\nassert solution('''\n4\nababab\n2\nbab\nbba\nbabab\n''') == '4'\nassert solution('''\n8\nabcdefgh\n2\nabab\nbbb\naabb\nbaba\nbbbb\naaba\nbbab\n''') == '2'\nassert solution('''\n1\na\n2\n''') == '1'\n"
    },
    {
        "number": 3248,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '''\n    6\n    abcabc\n    2\n    cb\n    cbab\n    '''\n) == '2'\n\nassert solution(\n    '''\n    5\n    abab\n    2\n    bac\n    baba\n    '''\n) == '4'\n\nassert solution(\n    '''\n    3\n    ab\n    1\n    cba\n    '''\n) == '1'\n"
    },
    {
        "number": 3248,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('abcbab'\n    '2'\n    'cb'\n    'cbab'\n) == '2'\nassert solution('abcbab'\n    '2'\n    'bac'\n    'baba'\n) == '4'\nassert solution('a' * 3) == '0'\nassert solution('a' * 4) == '1'\nassert solution('a' * 5) == '2'\n"
    },
    {
        "number": 3248,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\nabab\n2\nbac\nbaba''') == '4'\nassert solution('''6\nabcbab\n2\ncb\ncbab''') == '2'\nassert solution('''6\nabcdefg\n2\ncde\ndeqw''') == '0'\nassert solution('''6\nabcbab\n2\ncbc\nbcbab\n2\ncbc\nbcbab''') == '8'\nassert solution('''6\ncdefghij\n2\n"
    },
    {
        "number": 3248,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abab\\n2\\nbac\\nbaba') == '2'\nassert solution('abcbab\\n2\\ncb\\ncbab\\n') == '2'\nassert solution('abab\\n2\\nbac\\nbaba') == '4'\nassert solution('babcbacab\\n2\\nbabcbacb\\nbabcbacb') == '0'\nassert solution('abab\\n2\\nbac\\nbaba') == '2'\n"
    },
    {
        "number": 3248,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abcbab\\n2\\ncb\\ncbab\\n') == '2'\nassert solution('abab\\n2\\nbac\\nbaba\\n') == '4'\n"
    },
    {
        "number": 3248,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\nabc\\nabc\\nabc\\nabc\\nabc\\nabc') == '1'\nassert solution('4\\nab\\nabc\\nab\\nab\\nab\\nab') == '1'\nassert solution('4\\na\\nbc\\nbc\\na\\nbc\\na\\nb') == '1'\nassert solution('7\\na\\nb\\nc\\na\\nb\\nc\\na\\nb\\nc') == '2'\nassert solution('13\\nabcdefghijklmnopqrstuvwxyz\\nabcdefghijklmnopqrstuvwxyz\\nabcdefghijklmnopqrstuvwxyz\\nabcdefghijklmnopqrstuvwxyz') == '2'\n"
    },
    {
        "number": 3249,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''50\n4\n110 10\n80 10\n80 0\n110 0''') == '6\\n85\\n90\\n95\\n100\\n105\\n'\nassert solution('''24\n3\n10 10\n30 10\n20 20\n''') == '4\\n17.071067\\n20\\n22.928932\\n'\nassert solution('''24\n4\n10 10\n30 10\n20 20\n80 80\n''') == '4\\n18\\n22.928932\\n'\nassert solution('''24\n3\n10 10\n30 10\n20 20\n80 80\n''') == '4\\n18\\n22.928932\\n'\nassert solution('''24\n3\n10 10\n30 10\n20 20\n80 80\n''') == '4\\n18\\n22.928932\\n'\n"
    },
    {
        "number": 3249,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''50''') == '6'\nassert solution('''24''') == '4'\nassert solution('''10''') == '6'\nassert solution('''10\n10\n10\n10''') == '6'\nassert solution('''24\n10\n10\n10\n10\n10''') == '4'\n"
    },
    {
        "number": 3249,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''50\n4\n110 10\n80 10\n80 0\n110 0''') == '6\\n85\\n90\\n95\\n100\\n105'\n'''\n\nGiven an integer $C$, the minimum area of a bulkhead section, and a number of vertices $N$ in the boat design, find the maximum number of bulkhead sections such that the area of each section is equal to the other sections, with a spacing between the sections equal to the minimum area of a bulkhead section.\n\nWe also know that the area of a section is equal to the area of the hull minus the area of the bow.\n\nThe solution given is a brute-force algorithm based on the following two properties of the solution:\n\nThe number of vertices in the boat design must be even.\n\nThe positions of the vertices in the boat design must be a permutation of the positions of the vertices in the hull.\n\nFor a given number of vertices $N$, a solution is a list of $N$ integers, each of which is between $-C$ and $C$, inclusive.\n\nIf there are two solutions with the same number of vertices, then they are both equal to the number of vertices.\n\nFor example, when $N = 4$, we have $C = 40$, so we have the following solutions:\n\n[40, 40, 40, 40]\n[10, 10, 10, 10]\n[-10, -10, -10, -10]\n[0, 0, 0, 0]\n\nWe can see that these two solutions have the same number of vertices.\n\nIn addition, the solution with the same number of vertices is one with the positions of the vertices given in the order:\n\n[-10, -10, -10, -10]\n[-10, 0, 0, 0]\n\nAs before, this is the only viable solution.\n\nThe problem is much simpler to solve if $C$ is smaller than $10^5$. In that case, we can use the binary search algorithm to find a solution.\n\nThe binary search algorithm in the code below solves the problem by recursively splitting the search space into a left and right sub-intervals, while keeping the number of vertices fixed.\n\nFirst, we find a limit for the number of vertices such that the solution has the same number of vertices as the solution with $C - 1$ vertices.\n\nIf we don't have this limit, then we have the two sub-intervals:\n\n(left sub-interval)\n\nThe number of vertices in the left sub-interval is less than $C + 1$, so we must increase the number of vertices in the left sub-interval.\n\n(right sub-interval)\n\nThe number of vertices in the right sub-interval is greater than $C + 1$, so we must decrease the number of vertices in the right sub-interval.\n\nWe repeat this process until the left sub-interval and the right sub-interval have the same number of vertices.\n\nNow we know that the solution with $C - 1$ vertices has a solution with the same number of vertices as the solution with $C$ vertices.\n\nSo we can perform a binary search to find the solution with the correct number of vertices.\n\nFor the left sub-interval, we find the ceiling of the number of vertices such that the number of vertices is equal to $C - 1$.\n\nWe make this choice by incrementing the number of vertices until the right sub-interval has a solution with the same number of vertices.\n\nFor the right sub-interval, we find the floor of the number of vertices such that the number of vertices is equal to $C - 1$.\n\nWe make this choice by decrementing the number of vertices until the left sub-interval has a solution with the same number of vertices.\n\nFinally, we compare the ceiling and the floor. If the ceiling is greater than the floor, then we increment the number of vertices. If the ceiling is lower than the floor, we decrement the number of vertices. We repeat this process until the ceiling and the floor are the same.\n\nThe reason that we start the search at $C - 1$ is because the ceiling of $C - 1$ is $C - 1$, and the floor is $0$.\n\nFor example, when $C = 9$, we have the following solutions:\n\n[9, 9, 9, 9]\n[9, 8, 8, 8]\n[9, 7, 7, 7]\n[9, 6, 6, 6]\n[9, 5, 5, 5]\n[9, 4, 4, 4]\n[9, 3, 3, 3]\n[9, 2, 2, 2]\n[9, 1, 1, 1]\n[8, 8, 8, 8]\n[8, 7, 7, 7]\n[8, 6, 6, 6]\n[8, 5, 5, 5]\n[8, 4, 4, 4]\n[8, 3, 3, 3]\n[8, 2, 2, 2]\n[8, 1, 1, 1]\n[7, 7, 7, 7]\n[7, 6, 6, 6]\n[7, 5, 5, 5]\n[7, 4, 4, 4]\n[7, 3, 3, 3]\n[7, 2, 2, 2]\n[7, 1, 1, 1]\n[6, 6, 6, 6]\n[6, 5, 5, 5]\n[6, 4, 4, 4]\n[6, 3, 3, 3]\n[6, 2, 2, 2]\n[6, 1, 1, 1]\n[5, 5, 5, 5]\n[5, 4, 4, 4]\n[5, 3, 3, 3]\n[5, 2, 2, 2]\n[5, 1, 1, 1]\n[4, 4, 4, 4]\n[4, 3, 3, 3]\n[4, 2, 2, 2]\n[4, 1, 1, 1]\n[3, 3, 3, 3]\n[3, 2, 2, 2]\n[3, 1,"
    },
    {
        "number": 3249,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3249,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''50\n4\n110 10\n80 10\n80 0\n110 0''') == '6'\nassert solution('''24\n3\n10 10\n30 10\n20 20\n''') == '4'\nassert solution('''45\n5\n10 10\n20 10\n10 20\n20 0\n10 0\n10 15\n30 15\n15 30\n15 0\n30 0\n''') == '6'\nassert solution('''60\n5\n10 10\n20 10\n10 20\n20 0\n10 0\n10 15\n30 15\n15 30\n15 0\n30 0\n''') == '7'\nassert solution('''60\n4\n10 10\n20 10\n10 20\n10 0\n10 0\n10 15\n30 15\n15 30\n15 0\n30 0\n''') == '5'\n"
    },
    {
        "number": 3249,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('50\\n4\\n110 10\\n80 10\\n80 0\\n110 0\\n') == '6\\n85\\n90\\n95\\n100\\n105\\n'\n"
    },
    {
        "number": 3249,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3249,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    '50\\n4\\n110 10\\n80 10\\n80 0\\n110 0') == '6\\n85\\n90\\n95\\n100\\n105'\nassert solution(\n    '24\\n3\\n10 10\\n30 10\\n20 20\\n') == '4\\n17.071067\\n20\\n22.928932'\nassert solution(\n    '24\\n3\\n10 10\\n30 10\\n20 20\\n') == '4\\n17.071067\\n20\\n22.928932'\nassert solution(\n    '24\\n3\\n10 10\\n30 10\\n20 20\\n') == '4\\n17.071067\\n20\\n22.928932'\nassert solution(\n    '24\\n3\\n10 10\\n30 10\\n20 20\\n') == '4\\n17.071067\\n20\\n22.928932'\n"
    },
    {
        "number": 3249,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''50\n4\n110 10\n80 10\n80 0\n110 0''') == '6\\n85\\n90\\n95\\n100\\n105'\n\nassert solution('''24\n3\n10 10\n30 10\n20 20\n''') == '4\\n17.071067\\n20\\n22.928932'\n'''\n"
    },
    {
        "number": 3249,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('50\\n4\\n110 10\\n80 10\\n80 0\\n110 0\\n') == '6\\n85\\n90\\n95\\n100\\n105\\n'\nassert solution('24\\n3\\n10 10\\n30 10\\n20 20\\n') == '4\\n17.071067\\n20\\n22.928932\\n'\n\"\"\"\n"
    },
    {
        "number": 3250,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\"\nassert solution(\"100 11\") == \"no\"\nassert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\"\n"
    },
    {
        "number": 3250,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\"\nassert solution(\"521 35\") == \"no\"\nassert solution(\"10 42\") == \"yes\"\nassert solution(\"10 12\") == \"no\"\n"
    },
    {
        "number": 3250,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n'''\n"
    },
    {
        "number": 3250,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 11') == 'yes'\nassert solution('10 7') == 'yes'\nassert solution('10 9') == 'no'\nassert solution('10 7 0') == 'yes'\nassert solution('10 8') == 'no'\n"
    },
    {
        "number": 3250,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3250,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"10 7\") == \"yes\"\nassert solution(\"10 11\") == \"yes\"\nassert solution(\"10 123\") == \"no\"\nassert solution(\"10 9\") == \"yes\"\nassert solution(\"10 9\") == \"yes\"\n"
    },
    {
        "number": 3250,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3250,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3250,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"7 9\") == \"yes\"\nassert solution(\"13 11\") == \"no\"\nassert solution(\"17 19\") == \"yes\"\nassert solution(\"42 43\") == \"yes\"\n"
    },
    {
        "number": 3250,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 11') == 'yes'\nassert solution('10 7') == 'yes'\nassert solution('1000 1111') == 'no'\nassert solution('1000 8') == 'no'\nassert solution('1000000001 10000000001 100000001') == 'yes'\n"
    },
    {
        "number": 3251,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3251,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n3\\n2\\n4\\n5\\n6\\n7\\n8\\n9\\na\\nb\\nc\\nd\\ne\\nf\\n') == '1\\n3\\n2\\n4\\n5\\n6\\n7\\n8\\n9\\na\\nb\\nc\\nd\\ne'\nassert solution('2\\n2\\n1\\n2\\n3\\n3\\n4\\n4\\n5\\n5\\n6\\n6\\n7\\n7\\n8\\n8\\n9\\n9\\n10\\n10\\n11\\n11\\n12\\n12\\n13\\n13\\n14\\n14\\n15\\n15\\n16\\n16\\n17\\n17\\n18\\n18\\n19\\n19\\n20\\n20\\n') == '1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9'\n"
    },
    {
        "number": 3251,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"3\n3 4\n2 5\n1 6\n\"\"\") == \"3\\n1 6\\n2 5\\n3 4\"\nassert solution(\"\"\"5\n10 30\n20 40\n30 50\n10 60\n30 40\n\"\"\") == \"3\\n10 60\\n30 50\\n30 40\"\nprint(\"Tests passed successfully!\")\n"
    },
    {
        "number": 3251,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3251,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 2 3 4\") == \"\"\nassert solution(\"1 2 3 4 5\") == \"\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"\"\n"
    },
    {
        "number": 3251,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4 5\") == \"1 2 3 4 5\"\nassert solution(\"10 20 30 40 50 60\") == \"10 60\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26\") == \"10 60\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\") == \"10 60\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\") == \"10 60\"\n"
    },
    {
        "number": 3251,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n3 4\n2 5\n1 6''') == '3'\nassert solution('''5\n10 30\n20 40\n30 50\n10 60\n30 40''') == '3'\n\nprint('Passed')\n"
    },
    {
        "number": 3251,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n3 4\\n2 5\\n1 6\\n') == '3\\n1 6\\n2 5\\n3 4'\nassert solution('5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40\\n') == '3\\n10 60\\n30 50\\n30 40'\nprint('Testcase 1: Passed.')\n\nassert solution('3\\n3 4\\n2 5\\n1 6\\n') == '3\\n1 6\\n2 5\\n3 4'\nassert solution('5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40\\n') == '3\\n10 60\\n30 50\\n30 40'\nprint('Testcase 2: Passed.')\n\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 3251,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"3 4\") == \"\"\n"
    },
    {
        "number": 3251,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3252,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 3252,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5 1\") == \"5836\"\nassert solution(\"5 2\") == \"1828\"\n"
    },
    {
        "number": 3252,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '5836'\nassert solution(stdin) == '1828'\nassert solution(stdin) == '1828'\n"
    },
    {
        "number": 3252,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 1\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16''') == '5836'\nassert solution('''1\n1 1 1\n2 2 2\n3 3 3\n4 4 4\n5 5 5\n6 6 6\n7 7 7\n8 8 8\n9 9 9\n10 10 10\n11 11 11\n12 12 12\n13 13 13\n14 14 14\n15 15 15\n16 16 16\n17 17 17\n18 18 18\n19 19 19\n20 20 20\n21 21 21\n22 22 22\n23 23 23\n24 24 24\n25 25 25\n26 26 26\n27 27 27\n28 28 28\n29 29 29\n30 30 30\n31 31 31\n32 32 32\n33 33 33\n34 34 34\n35 35 35\n36 36 36\n37 37 37\n38 38 38\n39 39 39\n40 40 40\n41 41 41\n42 42 42\n43 43 43\n44 44 44\n45 45 45\n46 46 46\n47 47 47\n48 48 48\n49 49 49\n50 50 50\n51 51 51\n52 52 52\n53 53 53\n54 54 54\n55 55 55\n56 56 56\n57 57 57\n58 58 58\n59 59 59\n60 60 60\n61 61 61\n62 62 62\n63 63 63\n64 64 64\n65 65 65\n66 66 66\n67 67 67\n68 68 68\n69 69 69\n70 70 70\n71 71 71\n72 72 72\n73 73 73\n74 74 74\n75 75 75\n76 76 76\n77 77 77\n78 78 78\n79 79 79\n80 80 80\n81 81 81\n82 82 82\n83 83 83\n84 84 84\n85 85 85\n86 86 86\n87 87 87\n88 88 88\n89 89 89\n90 90 90\n91 91 91\n92 92 92\n93 93 93\n94 94 94\n95 95 95\n96 96 96\n97 97 97\n98 98 98\n99 99 99\n100 100 100\n101 101 101\n102 102 102\n103 103 103\n104 104 104\n105 105 105\n106 106 106\n107 107 107\n108 108 108\n109 109 109\n110 110 110\n111 111 111\n112 112 112\n113 113 113\n114 114 114\n115 115 115\n116 116 116\n117 117 117\n118 118 118\n119 119 119\n120 120 120\n121 121 121\n122 122 122\n123 123 123\n124 124 124\n125 125 125\n126 126 126\n127 127 127\n128 128 128\n129 129 129\n130 130 130\n131 131 131\n132 132 132\n133 133 133\n134 134 134\n135 135 135\n136 136 136\n137 137 137\n138 138 138\n139 139 139\n140 140 140\n141 141 141\n142 142 142\n143 143 143\n144 144 144\n145 145 145\n146 146 146\n147 147 147\n148 148 148\n149 149 149\n150 150 150\n151 151 151\n152 152 152\n153 153 153\n154 154 154\n155 155 155\n156 156 156\n157 157 157\n158 158 158\n159 159 159\n160 160 160\n161 161 161\n162 162 162\n163 163 163\n164 164 164\n165 165 165\n166 166 166\n167 167 167\n168 168 168\n169 169 169\n170 170 170\n171 171 171\n172 172 172\n173 173 173\n174 174 174\n175 175 175\n176 176 176\n177 177 177\n178 178 178\n179 179 179\n180 180 180\n181 181 181\n182 182 182\n183 183 183\n184 184 184\n185 185 185\n186 186 186\n187 187 187\n188 188 188\n189 189 189\n190 190 190\n191 191 191\n192 192 192\n193 193 193\n194 194 194\n195 195 195\n196 196 196\n197 197 197\n198 198 198\n199 199 199\n200 200 200\n201 201 201\n202 202 202\n203 203 203\n204 204 204\n205 205 205\n206 206 206\n207 207 207\n208 208 208\n209 209 209\n210 210 210\n211 211 211\n212 212 212\n213 213 213\n214 214 214\n215 215 215\n216 216 216\n217 217 217\n218 218 218\n219 219 219\n220 220 220\n221 221 221\n222 222 222\n223 223 223\n224 224 224\n225 225 225\n226 226 226\n227 227 227\n228 228 228\n229 229 229\n230 230 230\n231 231 231\n232 232 232\n233 233 233\n234 234 234\n235 235 235\n236 236 236\n237 237 237\n238 238 238\n239 239 239\n240 240 240\n241 241 241\n242 242 242\n243 243 243\n244 244 244\n245 245 245\n246 246 246\n247 247 247\n248 248 248\n249 249 249\n250 250 250\n251 251 251\n252 252 252\n253 253 253\n254 254 254\n255 255 255\n256 256 256\n257 257 257\n258 258 258\n259 259 259\n260 260 260\n261 261 261\n262 262 262\n263 263 263\n264 264 264\n265 265 265\n266 266 266\n267 267 267\n268 268 268\n269 269 269\n270 270 270\n271 271 271\n272 272 272\n273 273 273\n274 274 274\n275 275 275\n276 276 276\n"
    },
    {
        "number": 3252,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\".join(stdin.strip().split())\n"
    },
    {
        "number": 3252,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3252,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16') == '5836'\nassert solution('5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16') == '1828'\nassert solution('1 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16') == '5836'\nassert solution('1 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16') == '1828'\nassert solution('2 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16') == '5836'\n"
    },
    {
        "number": 3252,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 1') == '1828'\nassert solution('5 2') == '5836'\nassert solution('2 3 16') == '1828'\nassert solution('5 3') == '1828'\nassert solution('2 3 4') == '1828'\n"
    },
    {
        "number": 3252,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == \"5836\"\nassert solution(\"3 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == \"1828\"\nassert solution(\"3 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == \"1828\"\nassert solution(\"2 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == \"5836\"\nassert solution(\"2 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == \"1828\"\n"
    },
    {
        "number": 3252,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(open(\"test/004-greeting-cards/input0.txt\", \"r\").read()) == \"5836\"\nassert solution(open(\"test/004-greeting-cards/input1.txt\", \"r\").read()) == \"1828\"\n\"\"\""
    },
    {
        "number": 3253,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99\") == \"50\"\nassert solution(\"3\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200\\n\") == \"impossible\"\nassert solution(\"4\\n8 1000 30000 30000\\n8 1000 25000 25000\\n8 1000 30000 30000\\n8 1000 25000 25000\\n\") == \"impossible\"\nassert solution(\"4\\n8 1000 30000 30000\\n8 1000 25000 25000\\n8 1000 30000 30000\\n8 1000 25000 25000\\n8 1000 30000 30000\\n8 1000 25000 25000\\n\") == \"impossible\"\nassert solution(\"4\\n8 1000 30000 30000\\n8 1000 25000 25000\\n8 1000 30000 30000\\n8 1000 25000 25000\\n8 1000 30000 30000\\n8 1000 25000 25000\\n8 1000 30000 30000\\n8 1000 25000 25000\\n\") == \"impossible\"\n"
    },
    {
        "number": 3253,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n7 2401 3299 0\n6 2401 2399 0\n2 750 750 99''') == '50'\nassert solution('''3\n7 100 200 200\n8 100 300 200\n9 100 400 200''') == 'impossible'\nassert solution('''6\n7 2401 3299 0\n8 2401 2399 0\n9 2401 2499 0\n10 2401 2499 0\n11 2401 2499 0\n12 2401 2499 0''') == 'impossible'\nassert solution('''9\n7 2401 3299 0\n8 2401 2399 0\n9 2401 2499 0\n10 2401 2499 0\n11 2401 2499 0\n12 2401 2499 0\n13 2401 2499 0\n14 2401 2499 0''') == 'impossible'\nassert solution('''9\n7 2401 3299 0\n8 2401 2399 0\n9 2401 2499 0\n10 2401 2499 0\n11 2401 2499 0\n12 2401 2499 0\n13 2401 2499 0\n14 2401 2499 0\n15 2401 2499 0\n16 2401 2499 0\n17 2401 2499 0\n18 2401 2499 0\n19 2401 2499 0''') == 'impossible'\n"
    },
    {
        "number": 3253,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200\\n') == '50'\nassert solution('3\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99\\n') == 'impossible'\nassert solution('2\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200\\n') == 'impossible'\nassert solution('2\\n5 100 200 200\\n5 100 300 200\\n5 100 400 200\\n') == 'impossible'\nassert solution('2\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200\\n') == 'impossible'\n"
    },
    {
        "number": 3253,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"50\"\n"
    },
    {
        "number": 3253,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"50\"\n'''"
    },
    {
        "number": 3253,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"impossible\"\n"
    },
    {
        "number": 3253,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n7 100 200 200\n8 100 300 200\n9 100 400 200''') == '50'\nassert solution('''5\n500 5 5 5 5\n500 10 5 5 5\n100 10 10 10 10\n100 10 10 10 10\n10 10 10 10 10''') == 'impossible'\nassert solution('''2\n7 100 200 200\n8 100 300 200''') == 'impossible'\n'''\n"
    },
    {
        "number": 3253,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n7 100 200 200\n8 100 300 200\n9 100 400 200''') == 'impossible'\nassert solution('''3\n7 1000 1000 1000\n8 1000 2000 2000\n9 1000 3000 3000''') == 'impossible'\nassert solution('''3\n7 999999 1000 1000\n8 999999 2000 2000\n9 999999 3000 3000''') == 'impossible'\nassert solution('''3\n7 999999 1000 1000\n8 999999 2000 2000\n9 999999 3000 3000''') == 'impossible'\nassert solution('''3\n7 999999 999999 1000\n8 999999 999999 2000\n9 999999 999999 3000''') == 'impossible'\n"
    },
    {
        "number": 3253,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"impossible\"\nassert solution(stdin) == \"50\"\n"
    },
    {
        "number": 3253,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n7 2401 3299 0\n6 2401 2399 0\n2 750 750 99''') == '50'\nassert solution('''3\n7 100 200 200\n8 100 300 200\n9 100 400 200''') == 'impossible'\nassert solution('''3\n7 100 200 200\n8 100 300 200\n9 100 400 500''') == 'impossible'\nassert solution('''3\n4 100 100 50\n5 100 100 50\n6 100 100 50''') == 'impossible'\nassert solution('''3\n7 100 200 200\n8 100 300 200\n9 100 400 200''') == 'impossible'\n"
    },
    {
        "number": 3254,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3254,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5.0') == '0 0 0 0 1'\nassert solution('4.5') == '0 0 0 1 1'\n"
    },
    {
        "number": 3254,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(5.0) == \"0 0 0 0 1\"\nassert solution(4.5) == \"0 0 0 1 1\"\n"
    },
    {
        "number": 3254,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 3254,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 3254,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3254,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output\nprint('Passed')\n"
    },
    {
        "number": 3254,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(test_stdin) == test_out\n\"\"\""
    },
    {
        "number": 3254,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5.0') == '0 0 0 0 1'\nassert solution('4.5') == '0 0 0 1 1'\n\"\"\"\n"
    },
    {
        "number": 3254,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5.0\") == \"0 0 0 0 1\"\nassert solution(\"4.5\") == \"0 0 0 1 1\"\nassert solution(\"0.0\") == \"0 0 0 0 0\"\nassert solution(\"2.5\") == \"0 0 0 1 1\"\nassert solution(\"0.01\") == \"0 0 0 0 0\"\n"
    },
    {
        "number": 3255,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9\") == 8\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\") == 10\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\") == 46"
    },
    {
        "number": 3255,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 4 5 6 7\") == \"3\"\nassert solution(\"1 2 3 4 5 6 7 8\") == \"5\"\nassert solution(\"2 2 2 2 2 2\") == \"4\"\nassert solution(\"1 7 8 2 6 4 3 5\") == \"8\"\nassert solution(\"1 7 8 2 6 4 3 5 6\") == \"4\"\n"
    },
    {
        "number": 3255,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8 3 1') == '8'\nassert solution('8 2 1') == '3'\nassert solution('8 7 1') == '8'\nassert solution('8 5 1') == '1'\nassert solution('8 7 2') == '5'\n"
    },
    {
        "number": 3255,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n8 3 1\\n1 7 8 2 6 4 3 5') == '8'\nassert solution('1\\n8 2 1\\n1 7 8 2 6 4 3 5') == '3'\nassert solution('1\\n8 2 2\\n1 7 8 2 6 4 3 5') == '6'\nassert solution('1\\n8 3 1\\n1 7 8 2 6 4 3 5') == '8'\nassert solution('1\\n8 3 2\\n1 7 8 2 6 4 3 5') == '6'\n"
    },
    {
        "number": 3255,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''8 2 1''') == '3'\nassert solution('''8 3 1''') == '8'\nassert solution('''10 5 10''') == '10'\nassert solution('''10 3 10''') == '10'\nassert solution('''5 3 1''') == '5'\n"
    },
    {
        "number": 3255,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"8\"\nassert solution(\"2 3 4 5 6 7 8 9 10\") == \"3\"\nassert solution(\"2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\") == \"45\"\nassert solution(\"2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255\") == \"32\"\nassert solution(\"2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255\") == \"15\"\n"
    },
    {
        "number": 3255,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"8 2 1\") == \"3\"\nassert solution(\"8 3 1\") == \"8\"\nassert solution(\"8 3 1\") == \"3\"\n\nimport sys\nstdin = sys.stdin.read()\nprint(solution(stdin))\n"
    },
    {
        "number": 3255,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8 3 1') == '8'\nassert solution('8 2 1') == '3'\nassert solution('-1000000 1000000 1') == '3'\nassert solution('8 2 1') == '3'\nassert solution('1000000 1 1') == '3'\n"
    },
    {
        "number": 3255,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''8 2 1''') == '3'\nassert solution('''8 3 1''') == '8'\nassert solution('''5 4 1''') == '4'\nassert solution('''8 3 2''') == '5'\nassert solution('''7 4 1''') == '2'\n"
    },
    {
        "number": 3255,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3256,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n2 2 2 4 4 4\") == \"4\"\nassert solution(\"2 3\\n2 2 2 4 4 1\") == \"3\"\nassert solution(\"3 1\\n2 2 2 4 4 1\") == \"4\"\nassert solution(\"2 2\\n4 4 4\") == \"4\"\nassert solution(\"2 2\\n4 4 4\") == \"4\"\n"
    },
    {
        "number": 3256,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n1\") == \"3\"\nassert solution(\"2 2\\n1\") == \"4\"\nassert solution(\"2 2\\n2\") == \"2\"\nassert solution(\"3 2\\n3\") == \"2\"\nassert solution(\"3 2\\n4\") == \"1\"\n"
    },
    {
        "number": 3256,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('2 3 4 1') == '3'\nassert solution('2 2 2 4 4 4') == '4'\nassert solution('6 3') == '3'\n'''\n"
    },
    {
        "number": 3256,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 3\n"
    },
    {
        "number": 3256,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 2\\n2 3 4 1') == '3'\nassert solution('6 3\\n2 2 2 4 4 4') == '4'\nassert solution('6 3\\n2 2 2 4 4 4\\n') == '4'\nassert solution('6 3\\n4 4 4 4 4 4 4') == '4'\nassert solution('6 3\\n2 2 2 4 4 4 4\\n') == '4'\n"
    },
    {
        "number": 3256,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''2 2'''\n) == \"4\"\n\nassert solution(\n'''4 3'''\n) == \"6\"\n\nassert solution(\n'''6 3'''\n) == \"4\"\n\nassert solution(\n'''5 2'''\n) == \"10\"\n\nassert solution(\n'''5 4'''\n) == \"14\""
    },
    {
        "number": 3256,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3\"\n\n\"\"\"\n\nimport sys\nfrom functools import reduce\nfrom typing import Iterator, List"
    },
    {
        "number": 3256,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 1') == '4'\nassert solution('3 2') == '6'\nassert solution('2 3') == '3'\nassert solution('2 4') == '5'\nassert solution('6 4') == '4'\n"
    },
    {
        "number": 3256,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"4 2\") == \"3\"\nassert solution(\n    \"6 3\") == \"4\"\nassert solution(\n    \"2 2 2 4 4 4\") == \"4\"\nassert solution(\n    \"2 2 2 4 4 4 2\") == \"4\"\nassert solution(\n    \"2 2 2 4 4 4 2 2\") == \"4\"\n"
    },
    {
        "number": 3256,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 2\n2 3 4 1\n''') == \"3\"\nassert solution('''6 3\n2 2 2 4 4 4\n''') == \"4\"\nassert solution('''2 2\n2 2 2 2 2 2 2\n''') == \"1\"\nassert solution('''6 3\n2 2 2 4 4 4\n''') == \"4\"\n'''\nassert solution('''8 4\n1 1 1 1 1 1 1 1\n''') == \"0\"\n"
    },
    {
        "number": 3257,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n1 1 1.732050\n'''\n) == '1.732050808'\n\nassert solution(\n'''\n1 1 3.0\n'''\n) == '-1'\n"
    },
    {
        "number": 3257,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1 1.732050') == '1.732050808'\nassert solution('1 1 3.0') == '-1'\nassert solution('1 1 5.5') == '-1'\nassert solution('1 1 3.14159') == '-1'\nassert solution('1 1 0.8') == '-1'\n"
    },
    {
        "number": 3257,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1 1.732050') == '1.732050808'\nassert solution('1 1 3.0') == '-1'\nassert solution('1 1 3.7') == '-1'\nassert solution('1 1 3.735') == '-1'\nassert solution('1 1 3.73589') == '-1'\n"
    },
    {
        "number": 3257,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3257,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\nimport sys\n"
    },
    {
        "number": 3257,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1.732050\") == \"1.732050808\"\nassert solution(\"1 1 3.0\") == \"-\"\nassert solution(\"1 1 2.0\") == \"-1.73205080\"\nassert solution(\"1 1 1.000000000001\") == \"-1.73205080\"\nassert solution(\"1 1 1.00000000001\") == \"1.73205080\"\n"
    },
    {
        "number": 3257,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1 1.732050') == '1.732050808'\nassert solution('1 1 3.0') == '-1'\nassert solution('1 1 0') == '-1'\nassert solution('1 1 2.5') == '-1'\nassert solution('1 1 1.0') == '1.0'\n"
    },
    {
        "number": 3257,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3257,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1 1.732050') == '1.732050808'\nassert solution('1 1 3.0') == '-1'\nassert solution('1 1 3.14159') == '-1'\nassert solution('1 1 3.1415927') == '1.732050808'\nassert solution('1 1 3.14159273') == '-1'\n"
    },
    {
        "number": 3257,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1.732050\") == \"1.732050808\"\nassert solution(\"1 1 3.0\") == -1\nassert solution(\"1 1 3.1415\") == -1\nassert solution(\"1 1 3.14159\") == -1\nassert solution(\"1 1 3.14159265\") == -1\n"
    },
    {
        "number": 3258,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n1\n3 4 2\n.75\n\"\"\") == '2.4999999987500003'\nassert solution(\n\"\"\"\n2\n0 100 10\n0 -100 100\n.80\n\"\"\") == '9.999999999000002'\n"
    },
    {
        "number": 3258,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3258,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 2 5\\n10 50 2') == '2.0'\nassert solution('1\\n0 0 1\\n1 1 1\\n') == '0.0'\nassert solution('2\\n1 0 1\\n2 1 1\\n') == '0.75'\nassert solution('4\\n2 -1 1\\n2 1 -1\\n1 -1 2\\n1 2 1\\n') == '0.8333333333333334'\nassert solution('5\\n1 0 1\\n2 1 1\\n3 2 2\\n4 3 3\\n') == '0.5'\n"
    },
    {
        "number": 3258,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1\n3 4 2\n.75\n''') == '2.4999999987500003'\n\nassert solution('''2\n0 100 10\n0 -100 100\n.80\n''') == '9.999999999000002'\n\nassert solution('''3\n1 1 1\n1 1 1\n.3\n''') == '4.99999999999999'\n\nassert solution('''4\n-1 0 1\n0 -1 0\n1 0 -1\n-1 1 -1\n.4\n''') == '8.0'\n\nassert solution('''5\n0 0 1\n1 1 1\n1 1 1\n1 1 1\n.4\n''') == '13.99999999999999'"
    },
    {
        "number": 3258,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"1.899999976\"\nassert solution(\"1\") == \"1.0\"\nassert solution(\"0\") == \"0.0\"\nassert solution(\"0\\n0\\n0\") == \"0.0\"\nassert solution(\"0\\n1\\n1\\n1\\n1\") == \"0.9999999999999998\"\n"
    },
    {
        "number": 3258,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1\n3 4 2\n.75\n''') == '2.4999999987500003'\nassert solution('''1\n3 4 2\n0 -100 100\n.80\n''') == '9.999999999000002'\nassert solution('''1\n3 4 2\n0 -100 100\n.80\n''') == '9.999999999000002'\nassert solution('''1\n3 4 2\n1 1 1\n.7\n''') == '7.0000000000000004'\nassert solution('''1\n3 4 2\n1 -100 100\n.7\n''') == '7.0000000000000004'\n"
    },
    {
        "number": 3258,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1\n3 4 2\n.75''') == '2.4999999987500003'\nassert solution('''2\n0 100 10\n0 -100 100\n.80''') == '9.999999999000002'\nassert solution('''3\n4 4 4\n.75\n1 1 1\n.40''') == '5.499999981000001'\nassert solution('''4\n1 1 1 1\n.1\n1 1 1 1\n.1''') == '4.599999981000001'\nassert solution('''5\n7 7 7 7\n.5\n.5.5.5.5\n.5\n.5.5.5.5''') == '5.2500000000000002'\n"
    },
    {
        "number": 3258,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 3 5') == \"6.00000000000000\"\nassert solution('1 2 3') == \"3.000000000\"\nassert solution('2 3 4') == \"5.000000000\"\nassert solution('2 3 2') == \"6.000000000\"\nassert solution('1 0 1') == \"3.000000000\"\n"
    },
    {
        "number": 3258,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == str(solution(io.StringIO(stdin)))\nfor test, expected in zip(stdin.splitlines(), solution(io.StringIO(stdin)).splitlines()):\n    assert round(float(test), 3) == round(float(expected), 3)"
    },
    {
        "number": 3258,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\".75\") == '2.4999999987500003'\nassert solution(\"0 0 0\") == '9.999999999000002'\nassert solution(\"0 -100 100\") == '9.999999999000002'\nassert solution(\"0 0 100\") == '2.4999999987500003'\nassert solution(\"0 -100 -100\") == '9.999999999000002'\n"
    },
    {
        "number": 3259,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 3\n2 1 6\n1 1 5 1 2\n2 1 6\n''') == \"0\\n3\\n\"\n\nassert solution('''4 5\n1 1 4 3 4\n2 1 1\n2 2 2\n2 3 3\n2 4 4\n''') == \"3\\n2\\n1\\n0\\n\"\n\nassert solution('''5 5\n2 1 5 1 4\n1 2 2\n1 3 3\n1 4 4\n1 5 5\n2 1 1\n2 2 2\n2 3 3\n2 4 4\n2 5 5\n2 1 1\n1 2 2\n1 3 3\n1 4 4\n1 5 5\n''') == \"3\\n2\\n1\\n0\\n\"\n\nassert solution('''1 1\n2 1 2\n2 2 2\n3 3 3\n2 2 1\n3 3 2\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n2 2 1\n3 3 2\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n2 2 1\n3 3 2\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3"
    },
    {
        "number": 3259,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6 3\n2 1 6\n1 1 5 1 2\n2 1 6\n''') == '''0\n3\n'''\n\nassert solution('''4 5\n1 1 4 3 4\n2 1 1\n2 2 2\n2 3 3\n2 4 4\n''') == '''3\n2\n1\n0\n'''\n\nassert solution('''10 10\n1 1 4 3 4\n2 1 1\n2 2 2\n2 3 3\n2 4 4\n2 5 5\n2 6 6\n2 7 7\n2 8 8\n2 9 9\n2 10 10\n''') == '''55\n9\n7\n0\n'''\n\nassert solution('''11 11\n1 1 4 3 4\n2 1 1\n2 2 2\n2 3 3\n2 4 4\n2 5 5\n2 6 6\n2 7 7\n2 8 8\n2 9 9\n2 10 10\n2 11 11\n2 12 12\n2 13 13\n2 14 14\n2 15 15\n2 16 16\n2 17 17\n2 18 18\n2 19 19\n2 20 20\n2 21 21\n2 22 22\n2 23 23\n2 24 24\n2 25 25\n2 26 26\n2 27 27\n2 28 28\n2 29 29\n2 30 30\n2 31 31\n2 32 32\n2 33 33\n2 34 34\n2 35 35\n2 36 36\n2 37 37\n2 38 38\n2 39 39\n2 40 40\n2 41 41\n2 42 42\n2 43 43\n2 44 44\n2 45 45\n2 46 46\n2 47 47\n2 48 48\n2 49 49\n2 50 50\n2 51 51\n2 52 52\n2 53 53\n2 54 54\n2 55 55\n2 56 56\n2 57 57\n2 58 58\n2 59 59\n2 60 60\n2 61 61\n2 62 62\n2 63 63\n2 64 64\n2 65 65\n2 66 66\n2 67 67\n2 68 68\n2 69 69\n2 70 70\n2 71 71\n2 72 72\n2 73 73\n2 74 74\n2 75 75\n2 76 76\n2 77 77\n2 78 78\n2 79 79\n2 80 80\n2 81 81\n2 82 82\n2 83 83\n2 84 84\n2 85 85\n2 86 86\n2 87 87\n2 88 88\n2 89 89\n2 90 90\n2 91 91\n2 92 92\n2 93 93\n2 94 94\n2 95 95\n2 96 96\n2 97 97\n2 98 98\n2 99 99\n2 100 100\n2 101 101\n2 102 102\n2 103 103\n2 104 104\n2 105 105\n2 106 106\n2 107 107\n2 108 108\n2 109 109\n2 110 110\n2 111 111\n2 112 112\n2 113 113\n2 114 114\n2 115 115\n2 116 116\n2 117 117\n2 118 118\n2 119 119\n2 120 120\n2 121 121\n2 122 122\n2 123 123\n2 124 124\n2 125 125\n2 126 126\n2 127 127\n2 128 128\n2 129 129\n2 130 130\n2 131 131\n2 132 132\n2 133 133\n2 134 134\n2 135 135\n2 136 136\n2 137 137\n2 138 138\n2 139 139\n2 140 140\n2 141 141\n2 142 142\n2 143 143\n2 144 144\n2 145 145\n2 146 146\n2 147 147\n2 148 148\n2 149 149\n2 150 150\n2 151 151\n2 152 152\n2 153 153\n2 154 154\n2 155 155\n2 156 156\n2 157 157\n2 158 158\n2 159 159\n2 160 160\n2 161 161\n2 162 162\n2 163 163\n2 164 164\n2 165 165\n2 166 166\n2 167 167\n2 168 168\n2 169 169\n2 170 170\n2 171 171\n2 172 172\n2 173 173\n2 174 174\n2 175 175\n2 176 176\n2 177 177\n2 178 178\n2 179 179\n2 180 180\n2 181 181\n2 182 182\n2 183 183\n2 184 184\n2 185 185\n2 186 186\n2 187 187\n2 188 188\n2 189 189\n2 190 190\n2 191 191\n2 192 192\n2 193 193\n2 194 194\n2 195 195\n2 196 196\n2 197 197\n2 198 198\n2 199 199\n2 200 200\n2 201 201\n2 202 202\n2 203 203\n2 204 204\n2 205 205\n2 206 206\n2 207 207\n2 208 208\n2 209 209\n2 210 210\n2 211 211\n2 212 212\n2 213 213\n2 214 214\n2 215 215\n2 216 216\n2 217 217\n2 218 218\n2 219 219\n2 220 220\n2 221 221\n2 222 222\n2 223 223\n2 224 224\n2 225 225\n2 226 226\n2 227 227\n2 228 228\n2 229 229\n2 230 230\n2 231 231\n2 232 232\n2 233 233\n2 234 234\n2 235 235\n2 236 236\n2 237 237\n2 238 238\n2 239 239\n2 240 240\n2 241 241\n2 242 242\n2 243 243\n2 244 244\n2 245 245\n2 246 246\n2 247 247\n2 248 248\n2 249 249\n2 250 250\n2 251 251\n2 252 252\n2 253 253\n2 254 254\n2 255 255\n2 256 256\n2 257 257\n2 258 258\n2 259 259\n2 260 260\n2 261 261\n2 262 262\n2 263 263\n2 264 264\n2 265 265\n2 266 266\n2 267 267\n2 268 268\n2 269 269\n2 270 270\n2 271 271\n2 272 272\n2 273 273\n2 274 274\n2 275 275\n2 276 276\n2 277 277\n2 278 278\n2 279 279\n2 280 280"
    },
    {
        "number": 3259,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 3') == '0'\nassert solution('3 3') == '3'\nassert solution('4 4') == '2'\nassert solution('1 1 4 3 4') == '3'\nassert solution('2 1 1') == '2'\n"
    },
    {
        "number": 3259,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('2 1 3') == '1'\nassert solution('2 1 6') == '0'\nassert solution('6 3') == '3'\n\nassert solution('1 2 3') == '3'\n"
    },
    {
        "number": 3259,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3\\n1 1 4 3 4') == '0\\n3\\n'\nassert solution('2 3\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\\n') == '3\\n2\\n1\\n0\\n'\nprint('All tests passed successfully')'''\n"
    },
    {
        "number": 3259,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4 5 6') == '0\\n3\\n2\\n1\\n0'\nassert solution('1 2 4 5 6') == '3\\n2\\n1\\n0'\nassert solution('1 1 2 3 4 5 6') == '3\\n2\\n1\\n0'\nassert solution('1 1 2 3 4 5 6 7 8') == '7'\nassert solution('1 1 2 3 4 5 6 7 8 9 10 11 12') == '15'\n"
    },
    {
        "number": 3259,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"6 3\n2 1 6\n1 1 5 1 2\n2 1 6\n\"\"\") == \"0\\n3\\n\"\nassert solution(\n\"\"\"4 5\n1 1 4 3 4\n2 1 1\n2 2 2\n2 3 3\n2 4 4\n\"\"\") == \"3\\n2\\n1\\n0\\n\"\nassert solution(\n\"\"\"11 8\n1 1 7 3 4 6 8 9 10 11\n1 1 5 1 2\n1 1 6\n1 2 1\n1 3 1\n1 4 1\n1 5 1\n1 6 1\n1 7 1\n1 8 1\n1 9 1\n1 10 1\n1 11 1\n\"\"\") == \"11\\n10\\n9\\n8\\n7\\n6\\n5\\n4\\n3\\n2\\n1\\n\"\n"
    },
    {
        "number": 3259,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 2\\n1 1 4 3 4') == '0'\nassert solution('6 3\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6') == '3'\nassert solution('6 3\\n1 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6') == '2'\nassert solution('6 3\\n1 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6') == '1'\nassert solution('6 3\\n1 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6') == '0'\n"
    },
    {
        "number": 3259,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 1\") == \"3\"\nassert solution(\"5 1\") == \"0\"\nassert solution(\"6 1\") == \"3\"\nassert solution(\"4 2\") == \"2\"\nassert solution(\"5 2\") == \"1\"\n"
    },
    {
        "number": 3259,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6 3\n2 1 6\n1 1 5 1 2\n2 1 6''') == '0\\n3\\n'\nassert solution('''4 5\n1 1 4 3 4\n2 1 1\n2 2 2\n2 3 3\n2 4 4''') == '3\\n2\\n1\\n0\\n'\nprint('solution passed')\n\n\"\"\"\n"
    },
    {
        "number": 3260,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''1 7 1000000007''') == 1\nassert solution(\n'''3 2 1000000007''') == 4\nassert solution(\n'''2 4 1000000007''') == 12\nassert solution(\n'''5 6 1000000007''') == 40\nassert solution(\n'''6 7 1000000007''') == 56\n"
    },
    {
        "number": 3260,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 7 1000000007') == '1'\nassert solution('3 2 1000000007') == '4'\nassert solution('1 7 1000000002') == '0'\nassert solution('10 2 1000000002') == '10'\nassert solution('2 2 1000000002') == '0'\n"
    },
    {
        "number": 3260,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''1 7 1000000007'''\n) == '4'\nassert solution(\n'''3 2 1000000007'''\n) == '4'\nassert solution(\n'''8 1 10'''\n) == '5'\nassert solution(\n'''10 5 2'''\n) == '5'\nassert solution(\n'''100 2 9'''\n) == '9'\n"
    },
    {
        "number": 3260,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"5 2 1000000007\") == \"\"\nassert solution(\"5 2 10\") == \"\"\nassert solution(\"1 2 3 4 5\") == \"\"\n"
    },
    {
        "number": 3260,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3260,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\nprint('Passed')\n"
    },
    {
        "number": 3260,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 7 1000000007\") == \"1\"\nassert solution(\"3 2 1000000007\") == \"4\"\nassert solution(\"4 1 3\") == \"2\"\nassert solution(\"5 3 5\") == \"6\"\nassert solution(\"7 3 2\") == \"6\"\n"
    },
    {
        "number": 3260,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 7 1000000007''') == '4'\nassert solution('''3 2 1000000007''') == '4'\nassert solution('''8 4 1''') == '1'\nassert solution('''1 3 1''') == '6'\nassert solution('''1 3 1''') == '6'\n"
    },
    {
        "number": 3260,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 7 1000000007') == '1'\nassert solution('3 2 1000000007') == '4'\nassert solution('1 1 1000000007') == '1'\nassert solution('2 2 1000000007') == '1'\nassert solution('3 3 1000000007') == '1'\n"
    },
    {
        "number": 3260,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == str(solution(stdin))\n"
    },
    {
        "number": 3261,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3261,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"10 10\\n6\") == \"5\"\nassert solution(\"3 5\\n11\") == \"8\"\nassert solution(\"11 1\\n1\") == \"1\"\nassert solution(\"99 1\\n99\") == \"1\"\nassert solution(\"1 1\\n1\") == \"1\"\n"
    },
    {
        "number": 3261,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output"
    },
    {
        "number": 3261,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10 10\n6\n''') == '5'\nassert solution('''3 5\n11\n''') == '8'\nassert solution('''30 100\n5\n''') == '1'\nassert solution('''10 10\n10\n''') == '0'\nassert solution('''1000000 1\n1000000\n''') == '2'\n"
    },
    {
        "number": 3261,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''10 10\n6''') == '5'\nassert solution('''3 5\n11''') == '8'\n\nassert solution('''3 3\n3''') == '2'\nassert solution('''5 5\n5''') == '10'\nassert solution('''1 1\n1''') == '1'\n"
    },
    {
        "number": 3261,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 3261,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"10 10\n6\n\"\"\") == \"5\"\nassert solution(\"\"\"3 5\n11\n\"\"\") == \"8\"\nassert solution(\"\"\"2 1\n3\n\"\"\") == \"1\"\nassert solution(\"\"\"2 10\n1\n\"\"\") == \"9\"\nassert solution(\"\"\"1 2\n1\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3261,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10 10\n6''') == \"5\"\nassert solution('''3 5\n11''') == \"8\"\nassert solution('''2 2\n2''') == \"1\"\nassert solution('''2 3\n2''') == \"1\"\nassert solution('''2 4\n2''') == \"1\"\n"
    },
    {
        "number": 3261,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10 10\\n6\\n') == '5'\nassert solution('3 5\\n11\\n') == '8'\n\"\"\""
    },
    {
        "number": 3261,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 10\\n6') == '5'\nassert solution('3 5\\n11') == '8'"
    },
    {
        "number": 3262,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3262,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0\\n4 1\\n4 2\\n0 3\\n0 4\\n3 2\\n0 4\\n0 2\\n2 3\\n1 2 1\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1\") == \"3\"\nassert solution(\"4 2\\n0 2\\n0 3\\n1 3\\n0 2\\n1 2\") == \"1\"\nassert solution(\"5 2\\n1 2\\n0 2\\n0 3\\n0 4\\n3 2\\n0 4\\n0 2\\n1 2\") == \"2\"\nassert solution(\"4 5\\n0 1 1\\n0 2 1\\n0 3 1\\n0 4 2\\n0 2 2\\n1 2 1\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\") == \"4\"\nassert solution(\"5 4\\n0 1 1\\n0 2 1\\n0 3 1\\n0 4 2\\n0 2 2\\n1 2 1\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n0 1 1\\n0 2 1\\n0 3 1\\n0 4 2\\n0 2 2\\n1 2 1\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\") == \"3\"\n"
    },
    {
        "number": 3262,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1''') == '2'\nassert solution('''4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1''') == '3'\nassert solution('''4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1''') == '3'\nassert solution('''6 6 1\n0 1 1\n0 2 1\n1 2 1\n1 3 1\n2 3 1\n3 4 1\n4 5 1\n5 6 1\n0 5 2\n0 6 3\n1 6 3\n0 3 2\n2 3 2\n0 4 2\n0 5 3\n0 6 4\n1 5 4\n1 6 5\n0 6 5\n1 5 6\n1 2 3\n1 3 4\n0 3 4\n1 4 5\n2 4 5\n2 5 6\n3 5 6\n3 6 7\n4 5 6\n4 6 8\n5 6 8\n0 5 6\n0 4 5\n0 3 4\n1 3 4\n2 3 4\n3 4 5\n1 4 5\n1 5 6\n0 5 6\n0 4 5\n0 3 4\n1 3 4\n2 3 4\n3 4 5\n1 4 5\n1 5 6\n0 5 6\n0 4 5\n0 3 4\n1 3 4\n2 3 4\n3 4 5\n1 4 5\n1 5 6\n0 5 6\n0 4 5\n0 3 4\n1 3 4\n2 3 4\n3 4 5\n1 4 5\n1 5 6\n0 5 6\n0 4 5\n0 3 4\n1 3 4\n2 3 4\n3 4 5\n1 4 5\n1 5 6\n0 5 6\n0 4 5\n0 3 4\n1 3 4\n2 3 4\n3 4 5\n1 4 5\n1 5 6\n0 5 6\n0 4 5\n0 3 4\n1 3 4\n2 3 4\n3 4 5\n1 4 5\n1 5 6\n0 5 6\n0 4 5\n0 3 4\n1 3 4\n2 3 4\n3 4 5\n1 4 5\n1 5 6\n0 5 6\n0 4 5\n0 3 4\n1 3 4\n2 3 4\n3 4 5\n1 4 5\n1 5 6\n0 5 6\n0 4 5\n0 3 4\n1 3 4\n2 3 4\n3 4 5\n1 4 5\n1 5 6\n0 5 6\n0 4 5\n0 3 4\n1 3 4\n2 3 4\n3 4 5\n1 4 5\n1 5 6\n0 5 6\n0 4 5\n0 3 4\n1 3 4\n2 3 4\n3 4 5\n1 4 5\n1 5 6\n0 5 6\n0 4 5\n0 3 4\n1 3 4\n2 3 4\n3 4 5\n1 4 5\n1 5 6\n0 5 6\n0 4 5\n0 3 4\n1 3 4\n2 3 4\n3 4 5\n1 4 5\n1 5 6\n0 5 6\n0 4 5\n0 3 4\n1 3 4\n2 3 4\n3 4 5\n1 4 5\n1 5 6\n0 5 6\n0 4 5\n0 3 4\n1 3 4\n2 3 4\n3 4 5\n1 4 5\n1 5 6\n0 5 6\n0 4 5\n0 3 4\n1 3 4\n2 3 4\n3 4 5\n1 4 5\n1 5 6\n0 5 6\n0 4 5\n0 3 4\n1 3 4\n2 3 4\n3 4 5\n1 4 5\n1 5 6\n0 5 6\n0 4 5\n0 3 4\n1 3 4\n2 3 4\n3 4 5\n1 4 5\n1 5 6\n0 5 6\n0 4 5\n0 3 4\n1 3 4\n2 3 4\n3 4 5\n1 4 5\n1 5 6\n0 5 6\n0 4 5\n0 3 4\n1 3 4\n2 3 4\n3 4 5\n1 4 5\n1 5 6\n0 5 6\n0 4 5\n0 3 4\n1 3 4\n2 3 4\n3 4 5\n1 4 5\n1 5 6\n0 5 6\n0 4 5\n0 3 4\n1 3 4\n2 3 4\n3 4 5\n1 4 5\n1 5 6\n0 5 6\n0 4 5\n0 3 4\n1 3 4\n2 3 4\n3 4 5\n1 4 5\n1 5 6\n0 5 6\n0 4 5\n0 3 4\n1 3 4\n2 3 4\n3 4 5\n1 4 5\n1 5 6\n0 5 6\n0 4 5\n0 3 4\n1 3 4\n2 3 4\n3 4 5\n1 4 5\n1 5 6\n0 5 6\n0 4 5\n0 3 4\n1 3 4\n2 3 4\n3 4 5\n1 4 5\n1 5 6\n0 5 6\n0 4 5\n0 3 4\n1 3 4\n2 3 4\n3 4 5\n1 4 5\n1 5 6\n0 5 6\n0 4 5\n0 3 4\n1 3 4\n2 3 4\n3 4 5\n1 4 5\n1 5 6\n0 5 6\n0 4 5\n0 3 4\n1 3 4\n2 3 4\n3 4 5\n1 4 5\n1 5 6\n"
    },
    {
        "number": 3262,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3262,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1') == '2'\nassert solution('4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1') == '3'\nassert solution('4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1') == '3'\nassert solution('4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1') == '3'\nassert solution('4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1') == '3'\n"
    },
    {
        "number": 3262,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 4 3\n1 2 3\n0 1 1\n0 3 1\n0 2 2\n1 2 1\n3 2 1''') == '2'\nassert solution('''6 4 7\n0 1 1\n1 3 1\n2 3 2\n1 2 1\n3 4 1\n0 1 1\n''') == '3'\nassert solution('''2 1 1\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '1'\nassert solution('''5 2 2\n0 1 1\n1 3 1\n2 3 2\n1 2 1\n3 2 1''') == '1'\nassert solution('''7 2 1\n0 1 1\n1 3 1\n2 3 2\n1 2 1\n3 4 1\n0 1 1\n1 5 1\n2 6 1\n''') == '2'\n"
    },
    {
        "number": 3262,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 2\n1 2 1\n3 2 1\n'''\n) == '3'\n\nassert solution(\n'''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n'''\n) == '3'\n\nassert solution(\n'''\n5 6 4\n0 1 2\n3 4 1\n0 4 1\n0 1 2\n4 1 1\n0 2 3\n0 3 2\n0 4 2\n1 2 4\n1 3 4\n1 4 3\n2 4 1\n2 3 4\n2 4 2\n3 4 2\n3 4 1\n4 2 1\n3 4 1\n'''\n) == '8'\n"
    },
    {
        "number": 3262,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 3262,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\"\"\") == \"2\"\nassert solution(\"\"\"4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\"\"\") == \"3\"\nassert solution(\"\"\"7 4 3\n0 1 1\n0 2 1\n0 3 1\n0 4 1\n0 5 1\n0 6 1\n1 2 1\n1 3 1\n1 4 1\n1 5 1\n1 6 1\n2 4 1\n2 5 1\n3 4 1\n3 5 1\n3 6 1\n3 7 1\n4 6 1\n4 7 1\n5 6 1\n5 7 1\n6 7 1\n6 8 1\n7 8 1\n7 9 1\n7 10 1\n8 9 1\n8 10 1\n9 10 1\n9 11 1\n10 11 1\n10 12 1\n11 12 1\n11 13 1\n12 13 1\n13 14 1\n13 15 1\n14 15 1\n14 16 1\n14 17 1\n15 16 1\n15 17 1\n16 17 1\n16 18 1\n17 18 1\n17 19 1\n18 19 1\n18 20 1\n19 20 1\n19 21 1\n20 21 1\n20 22 1\n21 22 1\n21 23 1\n22 23 1\n22 24 1\n23 24 1\n23 25 1\n24 25 1\n24 26 1\n25 26 1\n25 27 1\n26 27 1\n26 28 1\n27 28 1\n27 29 1\n28 29 1\n28 30 1\n29 30 1\n29 31 1\n30 31 1\n30 32 1\n31 32 1\n31 33 1\n32 33 1\n32 34 1\n33 34 1\n33 35 1\n34 35 1\n34 36 1\n35 36 1\n35 37 1\n36 37 1\n36 38 1\n37 38 1\n37 39 1\n38 39 1\n38 40 1\n39 40 1\n39 41 1\n40 41 1\n40 42 1\n41 42 1\n41 43 1\n42 43 1\n42 44 1\n43 44 1\n43 45 1\n44 45 1\n44 46 1\n45 46 1\n45 47 1\n46 47 1\n45 48 1\n46 48 1\n46 49 1\n47 49 1\n47 50 1\n48 50 1\n48 51 1\n49 51 1\n49 52 1\n50 52 1\n50 53 1\n51 53 1\n51 54 1\n52 54 1\n52 55 1\n53 55 1\n53 56 1\n54 56 1\n54 57 1\n55 57 1\n55 58 1\n56 58 1\n56 59 1\n57 59 1\n57 60 1\n58 60 1\n58 61 1\n59 61 1\n59 62 1\n60 62 1\n60 63 1\n61 63 1\n61 64 1\n62 64 1\n62 65 1\n63 65 1\n63 66 1\n64 66 1\n64 67 1\n65 67 1\n65 68 1\n66 68 1\n66 69 1\n67 69 1\n67 70 1\n68 70 1\n68 71 1\n69 71 1\n69 72 1\n70 72 1\n70 73 1\n71 73 1\n71 74 1\n72 74 1\n72 75 1\n73 75 1\n73 76 1\n74 76 1\n74 77 1\n75 77 1\n75 78 1\n76 78 1\n76 79 1\n77 79 1\n77 80 1\n78 80 1\n78 81 1\n79 81 1\n79 82 1\n80 82 1\n80 83 1\n81 83 1\n81 84 1\n82 84 1\n82 85 1\n83 85 1\n83 86 1\n84 86 1\n84 87 1\n85 87 1\n85 88 1\n86 88 1\n86 89 1\n87 89 1\n87 90 1\n88 90 1\n88 91 1\n89 91 1\n89 92 1\n90 92 1\n90 93 1\n91 93 1\n91 94 1\n92 94 1\n92 95 1\n93 95 1\n93 96 1\n94 96 1\n94 97 1\n95 97 1\n95 98 1\n96 98 1\n96 99 1\n97 99 1\n97 100 1\n98 100 1\n98 101 1\n99 101 1\n99 102 1\n100 102 1\n100 103 1\n101 103 1\n101 104 1\n102 104 1\n102 105 1\n103 105 1\n103 106 1\n104 106 1\n104 107 1\n105 107 1\n105 108 1\n106 108 1\n106 109 1\n107 109 1\n107 110 1\n108 110 1\n108 111 1\n109 111 1\n109 112 1\n110 112 1\n110 113 1\n111 113 1\n111 114 1\n112 114 1\n112 115 1\n113 115 1\n113 116 1\n114 116 1\n114 117 1\n115 117 1\n115 118 1\n116 118 1\n116 119 1\n117 119 1\n117 120 1\n118 120 1\n118 121 1\n119 121 1\n119 122 1\n120 122 1\n120 123 1\n121 123 1\n121 124 1\n122 124 1\n122 125 1\n123 125 1\n123 126 1\n124 126 1\n124 127 1\n125 127 1\n125 128 1\n126 128 1\n126 129 1\n127 129 1\n127 130 1\n128 130 1\n128 131 1\n129 131 1\n129 132 1\n130 132 1\n130 133 1\n131 133 1\n131 134 1\n132 134 1\n132 135 1\n133 135 1\n133 136 1\n134 136 1\n134 137"
    },
    {
        "number": 3262,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 4 3\n1 2 3\n0 1 1\n0 3 1\n0 2 2\n1 2 1\n3 2 1''') == \"3\"\nassert solution('''7 6 3\n1 2 4\n0 1 2\n0 2 1\n1 2 3\n0 3 3\n3 2 1\n3 2 1\n1 2 1\n0 2 1\n0 3 1\n3 2 1\n''') == \"3\"\nassert solution('''4 5 2\n0 1 1\n0 3 2\n0 2 1\n1 2 1\n3 2 1\n1 2 1\n2 3 1\n''') == \"3\"\nassert solution('''1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1"
    },
    {
        "number": 3263,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 3\\n10 20 30\\n5 5 10\\n2 20\\n1 30\\n1 32\\n3 120') == '3'\nassert solution('3 1\\n10\\n10\\n1 10\\n1 10\\n1 10\\n') == '3'\nassert solution('3 1\\n10\\n10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\"
    },
    {
        "number": 3263,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n10 20 30\\n5 5 10\\n2 20\\n1 30\\n1 32\\n3 120\") == \"3\"\nassert solution(\"3 1\\n10\\n10\\n1 10\\n1 10\\n1 10\\n\") == \"3\"\nassert solution(\"3 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n\") == \"1\"\nassert solution(\"3 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n"
    },
    {
        "number": 3263,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '3'\n"
    },
    {
        "number": 3263,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 3\n10 20 30\n5 5 10\n2 20\n1 30\n1 32\n3 120''') == '3'\n\nassert solution('''1 1\n1 1\n1 1\n1 1''') == '1'\n\nassert solution('''4 3\n10 20 30\n5 5 10\n2 20\n1 30\n1 32\n3 120''') == '3'\n\nassert solution('''4 3\n10\n10\n1 10\n1 10\n1 10\n3 120''') == '3'\n\nassert solution('''4 3\n10\n10\n1 10\n1 10\n1 10\n3 120''') == '3'"
    },
    {
        "number": 3263,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 1\\n10\\n10\\n1 10\\n1 10\\n1 10\\n3 120\\n') == '3'\nassert solution('5 3\\n10 20 30\\n5 5 10\\n2 20\\n1 30\\n1 32\\n3 120\\n') == '3'\nassert solution('3 2\\n10\\n10\\n1 10\\n1 10\\n1 10\\n3 120\\n') == '3'\nassert solution('3 2\\n10\\n10\\n1 10\\n1 10\\n1 10\\n3 120\\n') == '3'\nassert solution('3 2\\n10\\n10\\n1 10\\n1 10\\n1 10\\n3 120\\n') == '3'\n"
    },
    {
        "number": 3263,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin[len(stdin) - 1]\n"
    },
    {
        "number": 3263,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 3\n10 20 30\n5 5 10\n2 20\n1 30\n1 32\n3 120''') == '3'\n\nprint(solution('''1 1\n10\n10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10'''))\n"
    },
    {
        "number": 3263,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10\\n1 1 10\\n2 2 10\\n3 1 10\\n4 3 10') == '3'\nassert solution('1\\n1 1 1\\n2 2\\n3 3') == '1'\nassert solution('1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 3263,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 3\n10 20 30\n5 5 10\n2 20\n1 30\n1 32\n3 120''') == '3'\nassert solution('''5 1\n10\n10\n1 10\n1 10\n1 10\n3 120''') == '3'\nassert solution('''1 1\n1 10\n2 10\n3 10\n4 10\n5 10\n6 10\n7 10\n8 10\n9 10\n10 100''') == '5'"
    },
    {
        "number": 3263,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''4 3\n10 20 30\n5 5 10\n2 20\n1 30\n1 32\n3 120'''\n) == '3'\n\nassert solution(\n'''3 1\n10\n10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10'''\n) == '3'\n\nassert solution(\n'''3 1\n100\n100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n"
    },
    {
        "number": 3264,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2''') == '1'\nassert solution('''3''') == '5'\nassert solution('''5''') == '11'\nassert solution('''10''') == '39'\nassert solution('''20''') == '6816'\n"
    },
    {
        "number": 3264,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2''') == '1'\nassert solution('''3''') == '5'\nassert solution('''4''') == '14'\nassert solution('''5''') == '42'\nassert solution('''6''') == '126'\n"
    },
    {
        "number": 3264,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3264,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\nprint('Test PASSED!')\n\n-----Test Plan/Example------\n\nTestcase 1: No partition exists\n\nTestcase 2: 5 partitions exist\n\nTestcase 3: 13 partitions exist\n"
    },
    {
        "number": 3264,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n\"\"\""
    },
    {
        "number": 3264,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3264,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2''') == '1'\nassert solution('''3''') == '5'\n\nassert solution('''4''') == '7'\nassert solution('''5''') == '11'\nassert solution('''6''') == '15'\n"
    },
    {
        "number": 3264,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '5'\nassert solution('10') == '25'\nassert solution('20') == '250'\nassert solution('25') == '25000'\n"
    },
    {
        "number": 3264,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2''') == '1'\nassert solution('''3''') == '5'\nassert solution('''4''') == '4'\nassert solution('''5''') == '24'\nassert solution('''6''') == '8'\n"
    },
    {
        "number": 3264,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3265,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3265,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0\\n1\\n0\\n0\\n0\\n\") == \"2\\n\"\nassert solution(\"1\\n0\\n0\\n0\\n0\\n\") == \"2\\n\"\nassert solution(\"0\\n0\\n0\\n0\\n0\\n\") == \"-1\\n\"\nassert solution(\"2\\n1\\n0\\n0\\n0\\n\") == \"2\\n\"\nassert solution(\"1\\n0\\n0\\n0\\n0\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3265,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3265,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 1\\n0 11 9\\n1 0 10\\n0 0 0') == '2'\nassert solution('5 2\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0') == '-1'\nassert solution('5 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0') == '-1'\nassert solution('5 4\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0') == '-1'\nassert solution('5 5\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0') == '-1'\n"
    },
    {
        "number": 3265,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 1\n0 11 9\n1 0 10\n0 0 0''') == '2'\nassert solution('''4 3\n0 1 0 19\n0 0 2 0\n0 5 0 3\n0 0 0 0''') == '-1'\n\nassert solution('''4 3\n0 1 0 19\n0 0 2 0\n0 5 0 3\n0 0 0 0''') == '-1'\nassert solution('''3 2\n0 1 2\n1 0 3\n0 0 0''') == '2'\nassert solution('''3 2\n0 1 1\n1 0 3\n0 0 0''') == '2'\n"
    },
    {
        "number": 3265,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 1\") == \"2\"\nassert solution(\"3 1\") == \"2\"\nassert solution(\"4 2\") == \"2\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"4 3\") == \"2\"\n"
    },
    {
        "number": 3265,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0') == '2'\nassert solution('3 1\\n0 11 9\\n1 0 10\\n0 0 0') == '2'\nassert solution('4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0') == '-1'\nassert solution('3 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0') == '2'\nassert solution('1 1\\n0 1 0\\n0 1 0') == '-1'\n"
    },
    {
        "number": 3265,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3265,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3265,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"3 1\n0 11 9\n1 0 10\n0 0 0\"\"\") == \"2\"\nassert solution(\n\"\"\"3 1\n0 1 0 19\n0 0 2 0\n0 5 0 3\n0 0 0 0\"\"\") == \"1\"\nassert solution(\n\"\"\"4 5\n0 1 0 19\n0 0 2 0\n0 5 0 3\n0 0 0 0\"\"\") == \"-1\"\nassert solution(\n\"\"\"4 5\n0 1 0 19\n0 0 2 0\n0 5 0 3\n0 0 0 0\"\"\") == \"0\"\nassert solution(\n\"\"\"6 6\n0 2 1 0 8 6\n0 0 1 1 1 1\n1 0 0 1 1 1\n0 1 0 1 1 1\n1 0 1 1 1 1\n1 1 1 1 1 1\"\"\") == \"2\"\n"
    },
    {
        "number": 3266,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 3 3\\n1 2 10\\n1 3 1\\n0 2 1\\n2 3 10') == '4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2'\n'''\n"
    },
    {
        "number": 3266,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '4 3 5'\n\"\"\"\n\n\"\"\"\nThe idea of the algorithm is to maintain a max-flow that is equal to the flow that reaches the sink.\n\n1) There is a sub-problem: for each edge $(u, v)$, find the maximum capacity of the edge with flow coming from the source.\n2) The main problem is that we have to compute the max-flow from node s to node t.\n\nWe can solve this sub-problem in a way similar to the Ford-Fulkerson algorithm.\n\nCreate a residual network that is the capacity network of the capacity network of the given flow network.\n\n- First, add two edges to the residual network from node s to node t, one for each capacity (or flow) in the original flow network.\n- Then, use the Ford-Fulkerson algorithm to find the max-flow from node s to node t, and return the corresponding flow to the original flow network.\n\n@see http://algs4.cs.princeton.edu/4286/max-flow.pdf\n@see https://www.youtube.com/watch?v=oX4AAw-I5PQ\n\"\"\"\n"
    },
    {
        "number": 3266,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\\n\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\"\nassert solution(\"2 1 0 1\\n0 1 100000\\n\") == \"2 100000 1\\n0 1 100000\"\nprint(\"The code runs successfully\")\n"
    },
    {
        "number": 3266,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3266,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n4 5 0 3\n0 1 10\n1 2 1\n1 3 1\n0 2 1\n2 3 10\n\"\"\") == \"\"\"\n4 3 5\n0 1 2\n0 2 1\n1 2 1\n1 3 1\n2 3 2\n\"\"\"\n\nassert solution(\n\"\"\"\n4 5 0 3\n0 1 10\n1 2 1\n1 3 1\n0 2 1\n2 3 10\n1 2 1\n0 1 1\n\"\"\") == \"\"\"\n4 3 5\n0 1 2\n0 2 1\n1 2 1\n1 3 1\n2 3 2\n1 2 1\n0 1 1\n\"\"\"\n\nassert solution(\n\"\"\"\n4 5 0 3\n0 1 10\n1 2 1\n1 3 1\n0 2 1\n2 3 10\n1 2 1\n0 1 1\n\"\"\") == \"\"\"\n4 3 5\n0 1 2\n0 2 1\n1 2 1\n1 3 1\n2 3 2\n1 2 1\n0 1 1\n\"\"\"\n\nassert solution(\n\"\"\"\n2 1 0 1\n0 1 100000\n\"\"\") == \"\"\"\n2 100000 1\n0 1 100000\n\"\"\"\n\nassert solution(\n\"\"\"\n2 1 0 1\n0 1 100000\n1 2 1\n1 3 1\n0 2 1\n2 3 10\n1 2 1\n0 1 1\n\"\"\") == \"\"\"\n2 100000 1\n0 1 100000\n1 2 1\n1 3 1\n0 2 1\n2 3 2\n1 2 1\n0 1 1\n\"\"\""
    },
    {
        "number": 3266,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''0 1 10\n1 2 1\n1 3 1''') == '4 3 5'\nassert solution('''0 1 100000\n1 2 1\n0 1 100000''') == '2 100000 1'\n'''\n"
    },
    {
        "number": 3266,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '2 100000 1\\n0 1 100000'\n\n\"\"\""
    },
    {
        "number": 3266,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3266,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3266,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\") == \"4 3 5\"\nassert solution(\"2 1 0 1\\n0 1 100000\\n\") == \"2 100000 1\"\nassert solution(\"3 2 1\\n1 2 3\\n0 2 3\\n2 3 4\") == \"0 1 3\"\nassert solution(\"0 2 0\\n0 2 10\\n1 2 1\\n1 3 1\\n2 3 10\") == \"2 100000 1\"\nassert solution(\"0 0 10\\n0 1 10\\n1 1 1\\n2 1 2\\n0 2 2\\n0 3 1\\n1 3 1\\n2 1 2\\n3 4 2\") == \"0 1 1\"\n"
    },
    {
        "number": 3267,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\nSM\\nSMS\\n\") == \"3 5\"\nassert solution(\"2 3\\nSM\\nSMS\") == \"2 0\"\n"
    },
    {
        "number": 3267,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 3\nSMS\nMMS''') == '3 5'\nassert solution('''2 3\nSMS\nMMS''') == '2 0'\nassert solution('''3 2\n.SS\nSS.\n''') == '0 1'\nassert solution('''3 3\nMMS\nMMS\n.MS\n''') == '1 2'\nassert solution('''1 1\nS.\n''') == '0 0'\n"
    },
    {
        "number": 3267,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('SMS\\nMMS') == '3 5'\nassert solution('SMM\\nMMM') == '2 0'\nassert solution('SMM\\nSSM') == '2 0'\nassert solution('SMM\\nSSM') == '2 0'\nassert solution('SMM\\nSSM') == '2 0'\n"
    },
    {
        "number": 3267,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3267,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\nS.M.SMS\") == \"3 5\"\n"
    },
    {
        "number": 3267,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3267,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '2 0'\n'''\n"
    },
    {
        "number": 3267,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin.split(\"\\n\")[0].strip()\n"
    },
    {
        "number": 3267,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n2 3\nSMS\nMMS\n''') == '3 5'\n\nassert solution('''\n5 6\nSMS.MMS\nMMS.MMS\nMMS.MMS\nMMS.MMS\nMSMS\n''') == '2 0'\n\nassert solution('''\n7 7\nSSSSSSSSSS\nSSSSSSSSSS\nSSSSSSSSSS\nSSSSSSSSSS\nSSSSSSSSSS\nSSSSSSSSSS\nSSSSSSSSSS\n''') == '0 0'\n\nassert solution('''\n7 7\nSSSSSSSSSS\nSSSSSSSSSS\nSSSSSSSSSS\nSSSSSSSSSS\nSSSSSSSSSS\nSSSSSSSSSS\nSSSSSSSSSS\n''') == '7 35'\n\nassert solution('''\n10 10\n
    },
    {
        "number": 3267,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 3268,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a') == '2\\n3 c\\n6 c'\nassert solution('2 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a') == '1\\n6 b'\nassert solution('2 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5"
    },
    {
        "number": 3268,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n13\n0 B\n1 B\n2 E a\n2 E b\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a\n''') == '2\\n3 c\\n6 c'\nassert solution('''\n13\n0 B\n1 B\n2 E a\n2 E b\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a\n3 E a\n3 E b\n3 S\n''') == '1\\n6 b\\n'\nassert solution('''\n13\n0 B\n1 B\n2 E a\n2 E b\n2"
    },
    {
        "number": 3268,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\\n') == '2\\nc\\nc\\n6 b'\n\n-----Note-----\n\n1. The number of vertices in the tree is at most $150000$.\n2. The number of vertices is bounded by $3 \\leq n \\leq 150000$.\n3. Each vertex is described in either of the following formats:\n  - \u2018$p_ i$$t_ i$\u2019, where $t_ i$ is either \u2018B\u2019 or \u2018S\u2019"
    },
    {
        "number": 3268,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))"
    },
    {
        "number": 3268,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    0 B\n    1 B\n    2 E a\n    2 E b\n    2 S\n    5 T a\n    \"\"\"\n) == \"2\\n3 c\\n6 c\"\n\nassert solution(\n    \"\"\"\n    1 B\n    1 T a\n    2 E a\n    2 S\n    5 T a\n    \"\"\"\n) == \"1\\n6 b\"\n\nassert solution(\n    \"\"\"\n    13\n    0 B\n    1 B\n    2 E a\n    2 E b\n    2 S\n    5 G a\n    5 T a\n    5 E a\n    5 E b\n    1 S\n    10 E a\n    10 G b\n    1 T a\n    \"\"\"\n) == \"2"
    },
    {
        "number": 3268,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == '6 b\\n'\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == '1\\n6 b\\n'\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == '1\\n6 b\\n'\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == '1\\n6 b\\"
    },
    {
        "number": 3268,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\\\n    13\n    0 B\n    1 B\n    2 E a\n    2 E b\n    2 S\n    5 G a\n    5 T a\n    5 E a\n    5 E b\n    1 S\n    10 E a\n    10 G b\n    1 T a\n    ''') == '2\\n3 c\\n6 b'\nassert solution('''\\\n    7\n    0 B\n    1 B\n    1 T a\n    2 E a\n    2 S\n    5 T a\n    ''') == '1\\n6 b'\nassert solution('''\\\n    10\n    0 B\n    1 B\n    1 T a\n    2 E a\n    2 S\n    5 T a\n    "
    },
    {
        "number": 3268,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\") == \"2\\nc\\nc\"\nassert solution(\"0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\") == \"1\\n6 b\"\nassert solution(\"0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n5 E a\\n"
    },
    {
        "number": 3268,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"0 B\n1 B\n2 E a\n2 E b\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a\n\"\"\") == \"\"\"2\n3 c\n6 c\"\"\"\nassert solution(\"\"\"0 B\n1 B\n2 E a\n2 E b\n2 S\n5 T a\n1 T a\n1 E a\n1 E b\n1 S\n10 E a\n10 G b\n1 T a\n\"\"\") == \"\"\"1\n6 b\n\"\"\"\nassert solution(\"\"\"0 B\n1 B\n2 E a\n2 E b\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G"
    },
    {
        "number": 3268,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(open(\"test_input.txt\").read()) == \"8c\"\n\"\"\"\n\n\n\"\"\"\nProblem 37:\n\n\nIn a gold mine, each field consists of an integer number representing the amount of gold in that field. You have to allocate the gold into fields such that,\n\nThe total amount of gold in all fields is maximized.\nThe total amount of gold in a field is minimized.\nFind the minimum and maximum possible total amount of gold in the fields.\nThe gold mine has only one entrance and one exit.\n\n------Hint: You can use a variable to keep the current maximum and minimum amount of gold in all fields.\n------Hint: The current maximum and minimum amount of gold in all fields are obtained by adding the gold amount in each field to the previous maximum and minimum amount of gold"
    },
    {
        "number": 3269,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 5\\n') == '40'\nassert solution('288 291\\n') == '76'\nassert solution('0 1\\n') == '0'\nassert solution('123 12\\n') == '24'\nassert solution('100 100\\n') == '0'\n"
    },
    {
        "number": 3269,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 5\\n\") == \"40\"\nassert solution(\"288 291\\n\") == \"76\"\nassert solution(\"23 33\\n\") == \"6\"\nassert solution(\"123 15\\n\") == \"1\"\nassert solution(\"8256 20864\\n\") == \"5\"\n"
    },
    {
        "number": 3269,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 5') == '40'\nassert solution('288 291') == '76'\nassert solution('10 9') == '76'\nassert solution('999 999') == '719875'\nassert solution('12 13') == '106'\n"
    },
    {
        "number": 3269,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 3269,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 5') == '40'\nassert solution('288 291') == '76'"
    },
    {
        "number": 3269,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    '1 5') == '40', \"1st example\"\nassert solution(\n    '288 291') == '76', \"2nd example\"\nprint('Exercise 10-4 correct')\n"
    },
    {
        "number": 3269,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 5''') == '40'\nassert solution('''288 291''') == '76'\nassert solution('''0 0''') == '0'\nassert solution('''0 1''') == '1'\nassert solution('''1 0''') == '1'\n"
    },
    {
        "number": 3269,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2') == '1'\nassert solution('3 5') == '7'\nassert solution('0 0') == '0'\nassert solution('542 31') == '49'\nassert solution('0000 1') == '0'\n"
    },
    {
        "number": 3269,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 5') == '40'\nassert solution('288 291') == '76'"
    },
    {
        "number": 3269,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1 2') == ''\nassert solution('1 3') == '2'\nassert solution('1 1') == '0'\nassert solution('1 10') == '9'\n"
    },
    {
        "number": 3270,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1\nACADEMIC\nALBUM\nACQUAINTANCE\nACQUAINT\nALBUM\nACADEMIC\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINTANCE\nACQUAINT\nACQUAINT\nACQUAINT"
    },
    {
        "number": 3270,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('CAT\\nDOG\\nCOT') == 'COG'\nassert solution('CAT\\nDOG') == 'COG'\nassert solution('CAT') == 'CAT'\nassert solution('CAT\\nDOG\\nCOT\\nDOG') == 'COG'\nassert solution('CAT\\nDOG\\nCOT\\nDOG\\nCOT') == 'COG'\n"
    },
    {
        "number": 3270,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"CAT\\nDOG\\nCOT\\n\") == \"COG\\n3\"\nassert solution(\"CAT\\nDOG\\nCOT\\nDOG\\nCOT\\n\") == \"COG\\n3\"\nassert solution(\"CAT\\nDOG\\nCOT\\nDOG\\nCOT\\nCOT\\nCOT\\n\") == \"COG\\n3\"\nassert solution(\"CAT\\nDOG\\nCOT\\nDOG\\nCOT\\nCOT\\nCOT\\nDOG\\nCOT\\nCOT\\n\") == \"COG\\n3\"\nassert solution(\"CAT\\nDOG\\nCOT\\nDOG\\nCOT\\nCOT\\nCOT\\nDOG\\nCOT\\nCOT\\nDOG\\nCOT\\nCOT\\n\") == \"COG\\n3\"\n"
    },
    {
        "number": 3270,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"CAT\") == \"CAT\"\nassert solution(\"CAT\\nDOG\") == \"DOG\"\nassert solution(\"CAT\\nDOG\\nCAT\") == \"DOG\"\nassert solution(\"CAT\\nDOG\\nCOT\") == \"CAT\"\n"
    },
    {
        "number": 3270,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"CAT\") == \"CAT\"\nassert solution(\"CATDOG\") == \"DOG\"\nassert solution(\"CATDOGCOT\") == \"COT\"\nassert solution(\"CATCOT\") == \"CAT\"\n"
    },
    {
        "number": 3270,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"a\") == \"a\"\nassert solution(\"a\\na\") == \"a\"\nassert solution(\"a\\na\\na\") == \"a\"\nassert solution(\"b\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\"
    },
    {
        "number": 3270,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'COG', \"First line test\"\nassert solution(stdin) == '0', \"Second line test\"\nassert solution(stdin) == '-1', \"Third line test\"\nassert solution(stdin) == '0', \"Fourth line test\"\nassert solution(stdin) == '-1', \"Fifth line test\"\n"
    },
    {
        "number": 3270,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == None\nassert solution('CAT') == 'CAT'\nassert solution('CAT\\nDOG') == 'DOG'\nassert solution('CAT\\nDOG\\nCOT') == 'COT'\nassert solution('CAT\\nDOG\\nCOT\\nCAT') == 'CAT'\n"
    },
    {
        "number": 3270,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('this is a test\\n') == ''\nassert solution('cat\\n') == 'CAT'\nassert solution('CAT\\nDOG\\nCOT\\n') == 'COG'\nassert solution('CAT\\nDOG\\nCOT\\n') == 'COG'\n"
    },
    {
        "number": 3270,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('test/0-solution_test/0-solution_input.txt') == 'COG'\nassert solution('test/0-solution_test/0-solution_input2.txt') == 'GAS'\nassert solution('test/0-solution_test/0-solution_input3.txt') == 'GAS'\nassert solution('test/0-solution_test/0-solution_input4.txt') == 'GAS'\nassert solution('test/0-solution_test/0-solution_input5.txt') == 'GAS'\n"
    },
    {
        "number": 3271,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6\"\n"
    },
    {
        "number": 3271,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n10 1\n\"\"\"\n) == \"9\"\n\nassert solution(\n\"\"\"\n4 3\n\"\"\"\n) == \"6\"\n"
    },
    {
        "number": 3271,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3271,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1') == '9'\nassert solution('3 3') == '6'\nassert solution('1 5') == '6'\nassert solution('4 4') == '9'\nassert solution('2 2') == '2'\n"
    },
    {
        "number": 3271,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 3') == '6'\nassert solution('1 3') == '9'\nassert solution('2 2') == '1'\nassert solution('2 2') == '1'\nassert solution('2 2') == '1'\n"
    },
    {
        "number": 3271,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 1') == '3'\nassert solution('3 3') == '7'\nassert solution('5 5') == '10'\nassert solution('10 5') == '14'\nassert solution('20 7') == '44'\n"
    },
    {
        "number": 3271,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == str(2)"
    },
    {
        "number": 3271,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10 1''') == \"9\"\nassert solution('''4 3''') == \"6\"\nassert solution('''1 1000''') == \"1\"\nassert solution('''2001000 1000000''') == \"7\""
    },
    {
        "number": 3271,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3271,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 1') == '6'\nassert solution('10 2') == '9'\nassert solution('100 3') == '27'\nassert solution('1000 4') == '907'\nassert solution('100000 4') == '968779'\n"
    },
    {
        "number": 3272,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 5\n.V.\n./.V.\n..#..\n.V.#.\n.V./''') == \"3\"\nassert solution('''2 5\nV...\nH...V''') == \"-1\"\nassert solution('''4 5\n.../\n.../\n.../\n.../''') == \"-1\"\nassert solution('''5 5\n.../.\n.../.\n.../.\n.../.\n''') == \"3\"\nassert solution('''5 5\n.../.\n.../.\n.../.\n.../.\n''') == \"3\"\n"
    },
    {
        "number": 3272,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3272,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''5 5\n/.V.\\\n./.V.\n..#..\n.V.#.\n\\.V./''') == '3'\nassert solution(\n'''5 5\n./.V.\\\n./.V.\n..#..\nV.#.\n\\.V./''') == '-1'\nassert solution(\n'''2 5\nV...\\\nH...V\nSample Output 2:\n-1''') == '-1'\nassert solution(\n'''1 1\n.#''') == '1'\nassert solution(\n'''10 10\n
    },
    {
        "number": 3272,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 5\\n/.V.\\n./.V.\\n..#..\\n.V.#.\\n.V./') == '3'\nassert solution('2 5\\nV...\\nH...V') == '-1'\nassert solution('1 1\\n#') == '0'\nassert solution('10 10\\n/...\\n.../\\n.......') == '9'\n"
    },
    {
        "number": 3272,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == result\n\nTestcase 1\nEnter the size of the grid: 5 5\nEnter the grid:\n/.V.\\\n./.V.\n..#..\n.V.#.\n\\.V./\nEnter the number of lines of your grid:\n5\nEnter a line:\nV...\nEnter a line:\nH...V\n\nTestcase 2\nEnter the size of the grid: 2 5\nEnter the grid:\nV...\\\nH...V\nEnter the number of lines of your grid:\n2\nEnter a line:\nV...\nEnter a line:\nH...V\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3272,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 5') == 3\nassert solution('2 5') == -1\nassert solution('1 1') == 1\nassert solution('4 4') == 0\nassert solution('4 4\\nVHVH\\n.V.\\nV...') == 0\n"
    },
    {
        "number": 3272,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 5\\n'.strip()) == '3'\nassert solution('2 5\\n'.strip()) == '-1'\nassert solution('3 5\\n'.strip()) == '0'\nassert solution('3 3\\n'.strip()) == '-1'\nassert solution('3 4\\n'.strip()) == '-1'\n"
    },
    {
        "number": 3272,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 5\\n/.V.\\n./.V.\\n..#..\\n.V.#.\\n\\.V./') == '3'\nassert solution('5 5\\nV...\\nH...V\\n') == '-1'\nassert solution('2 5\\nV...\\nH...V\\n') == '-1'\nassert solution('4 3\\n..#..\\n.##..\\n###..\\n####.') == '2'\nassert solution('4 3\\n.#.#\\n.#.#\\n.#.#\\n####.') == '2'\n"
    },
    {
        "number": 3272,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"./a099-V.H./\") == 3\nassert solution(\"./a099-V./\") == -1\nassert solution(\"./a099-V.H./\") == 3\nassert solution(\"./a099-V.H./\") == 3\nassert solution(\"./a099-V.H./\") == 3\n"
    },
    {
        "number": 3272,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2') == '1'\nassert solution('4 4') == '3'\nassert solution('6 5') == '3'\nassert solution('6 6') == '3'\nassert solution('11 11') == '3'\n"
    },
    {
        "number": 3273,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n    cdefghi\n    efghijk\n    efghijx\n    abcdefg\n    ''') == 'cdefghi'\n\nassert solution('''\n    hcckkqhfusdummk\n    fjzdkmwfqu\n    iqfxvckhfr\n    iyyjfcchfu\n    guzcqzpbt\n    znzrmyhqu\n    jqdzyvfqk\n    ezlxwvhsu\n    yspbcjxv\n    mljgau\n    aajqwe\n    ''') == 'hcckkqhfusdummk'\n\nassert solution('''\n    abcdefgh\n    efghijkl\n    opqrstuvw\n    xyzwvxyz\n    ''') == 'ABCDEFGH'\n\nassert solution('''\n    abcdefgh\n    efghijkl\n    opqrstuvw\n    xyzwvxyz\n    ''') == 'ABCDEFGH'\n\nassert solution('''\n    abcd\n    eghijkl\n    opqrstuv\n    wxyzwxyz\n    ''') == 'ABD'"
    },
    {
        "number": 3273,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == 'AMBIGUOUS'\nassert solution('1 2 3') == '1 2 3'\nassert solution('abcd') == 'abcd'\nassert solution('abcde f') == 'abcde f'\nassert solution('abcde ef') == 'AMBIGUOUS'\n"
    },
    {
        "number": 3273,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abcdefg') == 'defg'\nassert solution('efghijx') == 'efghijx'\nassert solution('cdefghi') == 'cdefghi'\nassert solution('efghijx') == 'AMBIGUOUS'\nassert solution('abcefg') == 'ABCEFG'\n"
    },
    {
        "number": 3273,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n4\\nabcdefg\\n2\\n1\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n4\\n3\\n1\\n"
    },
    {
        "number": 3273,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n7\nn fox jumps ove\nuick brown f\nThe quick b\ny dog.\nrown fox\nmps over the l\nthe lazy dog\n''') == 'The quick brown fox jumps over the lazy dog.'\n\nassert solution('''\n4\ncdefghi\nefghijk\nefghijx\nabcdefg\n''') == 'AMBIGUOUS'\n'''"
    },
    {
        "number": 3273,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('abcdefg') == 'AMBIGUOUS'\nassert solution('efghijx') == 'AMBIGUOUS'\nassert solution('cdefghi') == 'The quick brown fox jumps over the lazy dog.'\nassert solution('efghijk') == 'AMBIGUOUS'\nassert solution('ABCDEFGHIJK') == 'AMBIGUOUS'\n"
    },
    {
        "number": 3273,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''n fox jumps ove\nuick brown f\nThe quick b\ny dog.\nrown fox\nmps over the l\nthe lazy dog''') == 'The quick brown fox jumps over the lazy dog.'\nassert solution('''mrs. Anant\nmr. Ananth\nmr. Ananth\nmrs. Ananth''') =='mrs. Anant'\nassert solution('''ababa\nabaab\nababa\nabaab\nababa
    },
    {
        "number": 3273,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n7\nn fox jumps over\nuick brown f\n''') == 'The quick brown fox jumps over the lazy dog.'\nassert solution(\n'''\n4\ncdefghi\nefghijk\nefghijx\nabcdefg\n''') == 'AMBIGUOUS'\nassert solution(\n'''\n1\na\nSample Output 2:\nAMBIGUOUS\n''') == 'AMBIGUOUS'\nassert solution(\n'''\n2\na\naa\nSample Output 2:\nAMBIGUOUS\n''') == 'AMBIGUOUS'\nassert solution(\n'''\n6\na\na\na\na\na\na\na\n''') == 'AMBIGUOUS'\n"
    },
    {
        "number": 3273,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a\"\n    \"a"
    },
    {
        "number": 3273,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n4\nn fox jumps ove\nuick brown f\nThe quick b\ny dog.\nrown fox\nmps over the l\nthe lazy dog\n''') == '''\nThe quick brown fox jumps over the lazy dog.\n'''\nassert solution(\n'''\n4\nabcdefg\nefghijk\nefghijx\ncdefghi\nSample Output 2:\nAMBIGUOUS\n"
    },
    {
        "number": 3274,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 2\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1') == '+-++'\nassert solution('3 2\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\\n3') == 'impossible'\nassert solution('3 2\\n1 2 1\\n-2 0 2\\n2 5 1') == '++--'\nassert solution('3 2\\n1 2 1\\n-2 0 2\\n2 5 1\\n-1 1 2') == '++--'\nassert solution('3 2\\n1 2 1\\n-2 0 2\\n2 5 1\\n-1 1 2\\n2 1 2') == '++--'\n"
    },
    {
        "number": 3274,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == \"+-0++\"\nassert solution(\n    \"3 2\\n1 2 1\\n-2 0 2\\n\") == \"impossible\"\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 3274,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1') == '--+0-', 'First example'\nassert solution('5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1') == '+-0-', 'Second example'\nassert solution('1 2 1\\n-2 0 2\\nSample Output 2') == '0+-', 'Third example'\nassert solution('1 2 1\\n-2 0 2\\nSample Output 2') == 'impossible', 'Fourth example'\nassert solution('5 6\\n3 -3 -2 3\\n2 2 -2 4\\n-1 -1 1\\n0 1 4\\n2 5 1\\n3 5 1\\n1 1 1\\n0 1 4') == '+--++--++-', 'Fifth example'\n"
    },
    {
        "number": 3274,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''-3 -2 3\n-2 -2 4\n2 3 3\n-1 1 2\n0 1 4\n2 5 1''') == '--+0-', \"solution() is broken\"\nassert solution('''-3 -2 3\n-2 -2 4\n2 3 3\n-1 1 2\n0 1 4\n2 5 1''') == 'impossible', \"solution() is broken\"\nassert solution('''-3 -2 3\n-2 -2 4\n2 3 3\n-1 1 2\n0 1 4\n2 5 1''') == '-++-', \"solution() is broken\"\nassert solution('''-3 -2 3\n-2 -2 4\n2 3 3\n-1 1 2\n0 1 4\n2 5 1''') == '++--', \"solution() is broken\"\nassert solution('''-3 -2 3\n-2 -2 4\n2 3 3\n-1 1 2\n0 1 4\n2 5 1''') == '--++', \"solution() is broken\"\n"
    },
    {
        "number": 3274,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1') == '--+0-\\n'\nassert solution('3 2\\n1 2 1\\n-2 0 2\\n') == '0+-\\n'\nassert solution('1 5\\n-2 0 2\\n') == '-\\n'\nassert solution('1 5\\n-2 0 2\\n') == '+\\n'\nassert solution('5 3\\n0 0 0\\n0 0 1\\n0 1 1\\n0 2 2\\n1 3 3\\n2 4 4\\n3 4 5\\n4 5 5\\n5 5 5') == 'impossible'\n"
    },
    {
        "number": 3274,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 3274,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 2\\n1 2 1\\n-2 0 2\\n') == '--+0-'\nassert solution('1 3\\n2 2 1\\n-2 0 2\\n') == '0+-\\n'\nassert solution('3 4\\n-1 1 2\\n-1 1 4\\n-2 -1 1\\n1 -1 -1\\n2 2 2\\n2 3 2\\n2 3 3\\n1 -2 1\\n3 2 -2\\n-2 -3 2\\n-3 -2 3\\n1 -2 3\\n') == 'impossible\\n'\nassert solution('3 4\\n-1 1 2\\n-1 1 4\\n-2 -1 1\\n1 -1 -1\\n2 2 2\\n2 3 2\\n2 3 3\\n1 -2 1\\n3 2 -2\\n-2 -3 2\\n-3 -2 3\\n1 -2 3\\n') == '--+0-\\nimpossible\\n'\nassert solution('3 4\\n-1 1 2\\n-1 1 4\\n-2 -1 1\\n1 -1 -1\\n2 2 2\\n2 3 2\\n2 3 3\\n1 -2 1\\n3 2 -2\\n-2 -3 2\\n-3 -2 3\\n1 -2 3\\n') == '--+0-\\nimpossible\\n'\n"
    },
    {
        "number": 3274,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0\\n-1 1 1\\n-2 1 2\\n-1 1 1\") == \"--++\"\nassert solution(\"1\\n-1 -1 1\\n1 1 1\") == \"+++\"\nassert solution(\"1\\n-1 -1 1\\n1 1 1\\n-2 0 2\\n2 5 1\\n1 1 2\") == \"impossible\"\nassert solution(\"1\\n0 1 1\\n1 1 1\\n1 1 2\\n1 1 3\\n1 1 4\\n1 1 5\\n1 1 6\\n1 1 7\\n1 1 8\\n1 1 9\\n1 1 10\\n1 1 11\\n1 1 12\\n1 1 13\\n1 1 14\\n1 1 15\\n1 1 16\\n1 1 17\\n1 1 18\\n1 1 19\\n1 1 20\\n1 1 21\\n1 1 22\\n1 1 23\\n1 1 24\\n1 1 25\\n1 1 26\\n1 1 27\\n1 1 28\\n1 1 29\\n1 1 30\\n1 1 31\\n1 1 32\\n1 1 33\\n1 1 34\\n1 1 35\\n1 1 36\\n1 1 37\\n1 1 38\\n1 1 39\\n1 1 40\\n1 1 41\\n1 1 42\\n1 1 43\\n1 1 44\\n1 1 45\\n1 1 46\\n1 1 47\\n1 1 48\\n1 1 49\\n1 1 50\") == \"--++--++\"\n"
    },
    {
        "number": 3274,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 3\\n-1 2 3\\n0 1 4\\n2 5 1\\n-2 -2 4\\n-3 -2 3\\n2 3 3\\n-1 -1 2\\n0 1 4\\n2 5 1\\n-2 0 2\\n') == '+--+-\\n--+-\\n---+-\\n'\nassert solution('5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\\n-2 0 2\\n0 1 4\\n2 5 1\\n-2 0 2\\n-3 -2 3\\n2 3 3\\n-1 -1 2\\n0 1 4\\n2 5 1\\n-2 0 2\\n0 1 4\\n2 5 1\\n-2 0 2\\n0 1 4\\n2 5 1\\n-2 0 2\\n') == 'impossible'\nassert solution('4 4\\n1 2 1\\n-2 0 2\\n2 3 3\\n-1 -1 2\\n0 1 4\\n2 5 1\\n-2 0 2\\n0 1 4\\n2 5 1\\n-2 0 2\\n2 3 3\\n-1 -1 2\\n0 1 4\\n2 5 1\\n-2 0 2\\n0 1 4\\n2 5 1\\n-2 0 2\\n0 1 4\\n2 5 1\\n-2 0 2\\n2 3 3\\n-1 -1 2\\n0 1 4\\n2 5 1\\n-2 0 2\\n0 1 4\\n2 5 1\\n-2 0 2\\n') == '+-++-\\n-++-\\n+--++\\n++-++\\n+--++\\n'\nassert solution('6 3\\n1 2 1\\n-2 0 2\\n2 3 3\\n-1 -1 2\\n0 1 4\\n2 5 1\\n-2 0 2\\n0 1 4\\n2 5 1\\n-2 0 2\\n0 1 4\\n2 5 1\\n-2 0 2\\n0 1 4\\n2 5 1\\n-2 0 2\\n0 1 4\\n2 5 1\\n-2 0 2\\n0 1 4\\n2 5 1\\n-2 0 2\\n0 1 4\\n2 5 1\\n-2 0 2\\n0 1 4\\n2 5 1\\n-2 0 2\\n0 1 4\\n2 5 1\\n-2 0 2\\n0 1 4\\n2 5 1\\n-2 0 2\\n0 1 4\\n2 5 1\\n-2 0 2\\n') == 'impossible'\nassert solution('6 4\\n1 2 1\\n-2 0 2\\n2 3 3\\n-1 -1 2\\n0 1 4\\n2 5 1\\n-2 0 2\\n0 1 4\\n2 5 1\\n-2 0 2\\n0 1 4\\n2 5 1\\n-2 0 2\\n0 1 4\\n2 5 1\\n-2 0 2\\n0 1 4\\n2 5 1\\n-2 0 2\\n0 1 4\\n2 5 1\\n-2 0 2\\n0 1 4\\n2 5 1\\n-2 0 2\\n0 1 4\\n2 5 1\\n-2 0 2\\n0 1 4\\n2 5 1\\n-2 0 2\\n0 1 4\\n2 5 1\\n-2 0 2\\n0 1 4\\n2 5 1\\n-2 0 2\\n0 1 4\\n2 5 1\\n-2 0 2\\n0 1 4\\n2 5 1\\n-2 0 2\\n0 1 4\\n2 5 1\\n-2 0 2\\n0 1 4\\n2 5 1\\n-2 0 2\\n0 1 4\\n2 5 1\\n-2 0 2\\n') == '++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-++-\\n++-"
    },
    {
        "number": 3274,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == \"--+0-\"\nassert solution(\"3 2\\n-1 -2 -1\\n-2 0 2\\n2 1 1\") == \"0+-\\n-++\"\nassert solution(\"3 2\\n1 2 1\\n-2 0 -2\\n2 1 1\\n0 1 4\") == \"++-\\n-++\"\nassert solution(\"5 8\\n-1 -1 0\\n-2 0 2\\n3 3 2\\n-1 -1 1\\n0 1 3\\n2 4 1\") == \"impossible\"\nassert solution(\"5 8\\n-1 -1 0\\n-2 0 2\\n3 3 2\\n-1 -1 1\\n0 1 3\\n2 4 1\\n3 3 1\") == \"impossible\"\n"
    },
    {
        "number": 3275,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"1\\n\"\nassert solution(\"2 2\") == \"1\\n\"\nassert solution(\"2 2\\n1\\n2\") == \"1\\n\"\nassert solution(\"2 2\\n2\\n1\") == \"4\\n4\\n\"\nassert solution(\"2 2\\n2\\n1\\n2\") == \"4\\n4\\n\"\n"
    },
    {
        "number": 3275,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"2 2\n1 1\n1 1\n1\n1 1 1\n\"\"\") == \"1\"\nassert solution(\"\"\"1 2\n1 2\n1\n1 2 2\n2 2 2\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3275,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''2 2\n1 1\n1 1\n1\n1 1 1\n'''\n) == '1\\n1'\n\nassert solution(\n'''2 2\n1 2\n2 3\n2\n1 2 2\n2 2 2\n'''\n) == '4\\n4'\n"
    },
    {
        "number": 3275,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 2\n1 1\n1 1\n1\n1 1 1\n''') == '1'\n\nassert solution('''3 3\n1 3\n2 1\n3 3\n2\n1 1 1\n1 2\n1 3\n3\n2 1 2\n1 1\n3\n1 1 1 1\n2\n1 1 1\n1\n1 1 1 1\n''') == '1'\n\nassert solution('''3 3\n1 2\n3 2\n2\n1 2\n2 3\n1\n1 1\n1 1\n1\n1 1 1\n2\n1 1\n1\n2\n1\n2\n1\n''') == '6'\n\nassert solution('''2 3\n2 2\n1 3\n3 1\n1\n1 1\n2\n2 2\n2\n2 1\n2\n3\n2 1\n1\n2\n1\n''') == '3'\n"
    },
    {
        "number": 3275,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 2\n1 1\n1 1\n1\n1 1 1\n''') == '''1\n4\n'''\n\nassert solution('''2 2\n1 2\n2 3\n2\n1 2 2\n2 2 2\n''') == '''4\n4\n'''\n\nassert solution('''2 2\n1 1\n1 1\n1\n1 1 1\n''') == '''0\n0\n'''\n\nassert solution('''2 2\n1 2\n2 3\n2\n1 2 2\n2 2 2\n''') == '''4\n4\n'''\n\nassert solution('''4 4\n1 2\n2 3\n1 4\n3 1\n2 2\n''') == '''1\n1\n'''"
    },
    {
        "number": 3275,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 2\n1 1\n1 1\n1\n1 1 1''') == '1'\nassert solution('''2 2\n1 2\n2 3\n2\n1 2 2''') == '4'\nassert solution('''3 3\n1 1\n1 1\n1\n1 1 1''') == '1'\nassert solution('''3 3\n1 1\n1 2\n1\n1 1 1''') == '3'\nassert solution('''3 3\n1 2\n1 2\n1\n1 1 1''') == '3'\n"
    },
    {
        "number": 3275,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 2\n1 1\n1 1\n1''') == '1'\nassert solution('''2 2\n1 2\n2 3\n2\n1 2 2\n2 2 2\n''') == '4'\nassert solution('''3 3\n1 2\n2 3\n1\n2 2\n1\n2 1 1\n2\n1 1 2\n1''') == '3'\nassert solution('''3 3\n1 2\n2 3\n1\n2 2\n1\n2 1 1\n2\n1 1 2\n1''') == '3'\nassert solution('''4 3\n1 2\n2 3\n1\n2 2\n1\n2 1 1\n2\n1 1 2\n1''') == '3'\n"
    },
    {
        "number": 3275,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 2\n1 1\n1 1\n1\n1 1 1\n''') == '1'\nassert solution('''2 2\n1 2\n2 3\n2\n1 2 2\n2 2 2\n''') == '4'\n"
    },
    {
        "number": 3275,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2\\n1 3') == '2'\nassert solution('2 2\\n1 1\\n1 1\\n1\\n1 1 1') == '1'\nassert solution('2 2\\n1 2\\n2 3\\n2\\n1 2 2') == '4'\nassert solution('2 2\\n1 2\\n1 3\\n1\\n1 1 1') == '2'\nassert solution('2 2\\n1 2\\n2 3\\n2\\n1 2 2') == '4'\n"
    },
    {
        "number": 3275,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 2\n1 1\n1 1\n1''') == '1'\nassert solution('''2 2\n1 2\n2 3\n2\n1 2 2''') == '4'\nassert solution('''3 4\n1 1\n1 1\n1 1\n1\n1 1 1''') == '2'\nassert solution('''2 2\n1 2\n2 3\n2\n2 1 2''') == '4'\nassert solution('''5 4\n1 1\n1 1\n1 1\n1 1\n1\n2 1 2''') == '3'\n"
    },
    {
        "number": 3276,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3\\nWWWW\\nWRRR\\nWRRR\\nWWWW\\nWWWW') == 'NO'\nassert solution('3 4\\nWBBBB\\nWWWRR\\nWWWBB\\nWWWWB\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\nWWWWR\\n"
    },
    {
        "number": 3276,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB') == 'YES'\nassert solution('3 4\\nWWRR\\nWRRR\\nWRRR\\nWBBBB') == 'NO'\nassert solution('4 5\\nWRRR\\nWRRR\\nWRRR\\nWBBBB') == 'NO'\nassert solution('4 5\\nWRRR\\nWRRR\\nWRRR\\nWBBBB') == 'NO'\nassert solution('4 5\\nWRRR\\nWRRR\\nWRRR\\nWBBBB') == 'NO'\n"
    },
    {
        "number": 3276,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\\n\") == \"NO\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\\n\") == \"NO\"\nassert solution(\"3 4\\nWRRR\\nWRRR\\nWRRR\\n\") == \"NO\"\nassert solution(\"3 4\\nWBBBB\\nWRRR\\nWRRR\\n\") == \"NO\"\n"
    },
    {
        "number": 3276,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 'NO'\nassert solution('1 2') == 'NO'\nassert solution('4 5') == 'YES'\nassert solution('WRRRG') == 'YES'\nassert solution('WWRR') == 'NO'\n"
    },
    {
        "number": 3276,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"YES\"\nassert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"NO\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\\n\") == \"NO\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\\n\") == \"NO\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\\n\") == \"NO\"\n"
    },
    {
        "number": 3276,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 5\nWRRRG\nWRRRG\nWRRRG\nWBBBB''') == 'YES'\nassert solution('''2 1\nWRRR''') == 'NO'\nassert solution('''1 1\nW''') == 'YES'\nassert solution('''1 1\n''') == 'YES'\nassert solution('''2 2\nWWRR\nWRRR''') == 'YES'\n"
    },
    {
        "number": 3276,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 5\nWRRRG\nWRRRG\nWRRRG\nWBBBB''') == 'YES'\nassert solution('''4 4\nWWRR\nWRRR\nWRRR\nWBBBB''') == 'NO'\nassert solution('''1 5\nR''') == 'YES'\nassert solution('''1 1\nR''') == 'YES'\nassert solution('''1 1\nR''') == 'NO'\n"
    },
    {
        "number": 3276,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('R') == 'NO'\nassert solution('R' * 5) == 'NO'\nassert solution('RWWRBW') == 'YES'\nassert solution('GRRBWRRRBBWWRWWWBRRBWWWWWWGRRWWWBRW') == 'NO'\n"
    },
    {
        "number": 3276,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 4\") == \"NO\"\nassert solution(\"4 2\") == \"YES\"\nassert solution(\"3 4\") == \"NO\"\nassert solution(\"3 4\") == \"NO\"\nassert solution(\"3 4\") == \"NO\"\n"
    },
    {
        "number": 3276,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n4 5\nWRRRG\nWRRRG\nWRRRG\nWBBBB\n\"\"\"\n) == \"YES\"\n\nassert solution(\n    \"\"\"\n4 5\nWBBBB\nWRRRG\nWRRRG\nWBBBB\n\"\"\"\n) == \"NO\"\n"
    },
    {
        "number": 3277,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '2'\nassert solution(stdin) == '3'\nassert solution(stdin) == '3'\nassert solution(stdin) == '2'\nassert solution(stdin) == '1'\n"
    },
    {
        "number": 3277,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == ''\n'''\n"
    },
    {
        "number": 3277,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '3'\n'''\n"
    },
    {
        "number": 3277,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"6 3 5\") == \"1\"\nassert solution(\"2 3 4\") == \"2\"\nassert solution(\"8 6 12\") == \"3\"\n\"\"\""
    },
    {
        "number": 3277,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output\nprint(str(expected_output) + \" passed.\")\n"
    },
    {
        "number": 3277,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 3 5\") == \"1\"\nassert solution(\"6 3 5\") == \"3\"\nassert solution(\"2 3 3\") == \"0\"\nassert solution(\"4 6 2\") == \"2\"\nassert solution(\"5 5 5\") == \"0\"\n"
    },
    {
        "number": 3277,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 3 5\n1\n2\n3''') == '1'\nassert solution('''6 3 5\n1\n2\n3\n3\n2\n1\n''') == '3'\n'''\n"
    },
    {
        "number": 3277,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3\"\n\"\"\"\n"
    },
    {
        "number": 3277,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3277,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\n\n    "
    },
    {
        "number": 3278,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n3\n0 2\n1 2\n3 3\n''') == '12 3', '1'\nassert solution('''\n4\n1 2\n3 3\n6 4\n9 5\n''') == '12 3', '2'\nassert solution('''\n6\n0 1\n3 4\n1 5\n3 2\n2 6\n4 6\n''') == '8 9', '2'\nassert solution('''\n10\n1 2\n3 4\n4 5\n6 7\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n''') == '24 15', '2'\nassert solution('''\n6\n0 1\n3 4\n1 5\n3 2\n2 6\n4 6\n''') == '8 9', '2'\n"
    },
    {
        "number": 3278,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3278,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''0 2\n1 2\n3 3''') == '3 2', 'a: b'\nassert solution('''5\n0 2\n1 3\n3 3\n7 5\n9 5''') == '12 3', 'b: c'\nassert solution('''1\n0 2\n1 3\n3 3\n7 5\n9 5''') == '12 3', 'd: e'\nassert solution('''2\n0 2\n1 3\n3 3\n7 5\n9 5\n1 1\n2 2\n3 3''') == '12 3', 'e: f'\n'''\nprint(solution(input()))\n"
    },
    {
        "number": 3278,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2\\n0 2\\n1 2\\n3 3\") == \"3 2\"\nassert solution(\"5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\") == \"12 3\"\nassert solution(\"2\\n0 2\\n1 2\\n3 3\") == \"3 2\"\nassert solution(\"2\\n0 2\\n3 3\\n1 2\") == \"3 2\"\nassert solution(\"2\\n0 2\\n1 2\\n3 3\") == \"3 2\"\n"
    },
    {
        "number": 3278,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''0 2\n1 2\n3 3''') == '3 2'\nassert solution('''3\n0 2\n1 2\n3 3''') == '3 2'\nassert solution('''3\n0 2\n1 3\n3 3''') == '12 3'\nassert solution('''5\n0 2\n1 3\n3 3\n7 5\n9 5''') == '12 3'\nassert solution('''6\n0 2\n1 3\n3 3\n7 5\n9 5\n12 7''') == '12 3'\n"
    },
    {
        "number": 3278,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 2\\n1 2\\n3 3') == '3 2'\nassert solution('0 2\\n1 3\\n3 3') == '12 3'\nassert solution('0 2\\n1 3\\n3 3\\n7 5\\n9 5') == '12 3'\nassert solution('0 2\\n1 3\\n3 3\\n7 5\\n9 5\\n9 7\\n9 5\\n9 7\\n9 5') == '12 3'\nassert solution('0 2\\n1 3\\n3 3\\n7 5\\n9 5\\n9 7\\n9 5\\n9 7\\n9 5\\n9 7') == '12 3'\n"
    },
    {
        "number": 3278,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0 2\n1 2\n3 3''') == '3 2'\nassert solution('''0 2\n1 3\n3 3\n''') == '12 3'\nassert solution('''1\n0 1\n''') == '1 1'\nassert solution('''1\n2 3\n3 3\n''') == '0 0'\nassert solution('''1\n1 1\n''') == '1 0'\n"
    },
    {
        "number": 3278,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n0 2\n1 2\n3 3''') == '3 2'\nassert solution('''5\n0 2\n1 3\n3 3\n7 5\n9 5''') == '12 3'\nassert solution('''1\n0 1\n1 1''') == '1 1'\nassert solution('''2\n0 1\n1 1''') == '2 1'\nassert solution('''2\n0 1\n1 1\n1 2''') == '2 1'\n"
    },
    {
        "number": 3278,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0 2\n1 2\n3 3\n''') == '12 3'\nassert solution('''0 2\n1 3\n3 3\n7 5\n9 5\n''') == '12 3'\nassert solution('''0 2\n0 2\n3 3\n7 5\n9 5\n''') == '12 3'\nassert solution('''0 2\n1 3\n3 3\n7 5\n9 5\n''') == '12 3'\nassert solution('''0 2\n2 2\n2 3\n7 5\n9 5\n''') == '6 3'\n"
    },
    {
        "number": 3278,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3''') == '3 2'\nassert solution('''2\n0 2\n1 2\n3 3''') == '3 2'\nassert solution('''5\n0 2\n1 3\n3 3\n7 5\n9 5''') == '12 3'\nassert solution('''0\n0 2\n1 3\n3 3\n7 5\n9 5\n15 5\n21 5\n3 5\n7 5\n9 5\n15 5\n21 5\n37 5\n49 5\n''') == '15 3'\nassert solution('''2\n0 2\n1 3\n3 3\n7 5\n9 5\n15 5\n21 5\n3 5\n7 5\n9 5\n15 5\n21 5\n37 5\n49 5\n''') == '12 3'\n"
    },
    {
        "number": 3279,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin[0:2]"
    },
    {
        "number": 3279,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n\nprint(solution(stdin))"
    },
    {
        "number": 3279,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n1\\n0\\n0\\n3') == '100\\n000\\n01\\n01\\n01'\nassert solution('3\\n0\\n1 1\\n1\\n1 1\\n1\\n1') == '0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n000'\nassert solution('3\\n0\\n0\\n0\\n0') == '0000\\n0000\\n0000\\n0000\\n0000'\n"
    },
    {
        "number": 3279,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 0\\n1 1\\n1 1\\n0') == '0100'\nassert solution('1 0\\n1 1\\n1\\n1') == '1000'\nassert solution('0 0\\n0 0\\n0\\n0') == '0000'\nassert solution('0 1\\n1 1\\n1\\n1') == '1001'\nassert solution('1 1\\n1\\n1') == '1010'\n"
    },
    {
        "number": 3279,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0\\n4\") == \"0000\\n1000\\n0100\\n0000\\n0000\"\nassert solution(\"0\\n0\\n0\\n4\") == \"0000\\n0000\\n0000\\n0000\"\nassert solution(\"0\\n0\\n0\\n0\") == \"0000\\n0000\\n0000\\n0000\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1010\\n1010\\n1010\\n1010\"\nassert solution(\"3\\n0\\n1 1\\n1\\n1 1\\n1\") == \"1010\\n1000\\n0100\\n1000\\n1000\\n1000\"\n"
    },
    {
        "number": 3279,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n1\n0\n0\n3''') == '100'\nassert solution('''1\n1\n0\n0\n3''') == '000'\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 3279,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"100\"\nassert solution(\"0\") == \"000\"\nassert solution(\"0 0\") == \"000\"\nassert solution(\"0 0 0\") == \"000\"\nassert solution(\"0 0 0 0\") == \"000\"\n"
    },
    {
        "number": 3279,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3''') == '101'\nassert solution('''2''') == '100'\nassert solution('''1''') == '001'\nassert solution('''0''') == '000'\nassert solution('''2\n0\n1''') == '100'\n"
    },
    {
        "number": 3279,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"2\n1\n0\n0\n3\n\"\"\") == \"\"\"\n100\n000\n01\n01\n01\n\"\"\"\nassert solution(\n\"\"\"3\n0\n1 1\n1\n1 1\n1\n1\n\"\"\") == \"\"\"\n0000\n1001\n0010\n101\n010\n000\n100\n\"\"\"\nassert solution(\n\"\"\"4\n1\n0\n1 1\n1\n1 1\n1\n1\n\"\"\") == \"\"\"\n0000\n0011\n0100\n0101\n0110\n0111\n1000\n1001\n1010\n1011\n1100\n1101\n1110\n1111\n\"\"\"\n"
    },
    {
        "number": 3279,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n1\\n0\\n0\\n3\\n') == '100\\n000\\n01'\nassert solution('2\\n1\\n0\\n0\\n3\\n') == '0000\\n1001\\n0010'\nassert solution('3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n') == '0000\\n1001\\n0010\\n101\\n010\\n000\\n100'\nassert solution('3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n') == '0000\\n1001\\n0010\\n101\\n010\\n000\\n100'\nassert solution('3\\n1 1\\n1\\n1 1\\n1\\n1\\n') == '100\\n000\\n01'\n"
    },
    {
        "number": 3280,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 1\n1 2\n2 3\n2 3''') == '2'\nassert solution('''4 1\n1 3\n4 6\n7 8\n2 5''') == '3'\nassert solution('''5 4\n1 2\n2 4\n3 5\n4 6\n5 7''') == '4'\nassert solution('''100000 1000\n1 9999\n''') == '99999'\nassert solution('''2 3\n1 2\n2 3\n1 3\n''') == '4'\n"
    },
    {
        "number": 3280,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 1\n1 2\n2 3\n2 3''') == '2'\nassert solution('''4 1\n1 3\n4 6\n7 8\n2 5''') == '3'\nassert solution('''0 1\n0 1''') == '1'\nassert solution('''2 2\n2 2\n2 2''') == '1'\nassert solution('''2 2\n0 0\n1 1\n2 2\n0 1\n1 2\n2 3''') == '3'\n"
    },
    {
        "number": 3280,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 1\n1 2\n2 3\n2 3''') == '2'\nassert solution('''3 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n2 5\n''') == '3'\nassert solution('''5 4\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n2 5\n3 4\n''') == '4'\nassert solution('''3 2\n1 2\n2 3\n3 4\n''') == '1'\nassert solution('''6 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n2 5\n''') == '3'\n"
    },
    {
        "number": 3280,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1') == '1'\nassert solution('1 2') == '2'\nassert solution('1 3') == '3'\nassert solution('2 3') == '2'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 3280,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 1\n1 2\n2 3\n2 3\n''') == '2'\nassert solution('''4 1\n1 3\n4 6\n7 8\n2 5\n''') == '3'\nassert solution('''3 1\n1 2\n2 3\n2 3\n''') == '2'\nassert solution('''4 1\n1 3\n4 6\n7 8\n2 5\n''') == '3'\nassert solution('''3 1\n2 3\n2 3\n2 3\n2 3\n''') == '3'\n"
    },
    {
        "number": 3280,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 3280,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1\\n1 2\\n2 3\\n2 3\\n') == '2'\nassert solution('2 2\\n1 2\\n2 3\\n2 3\\n') == '3'\nassert solution('1 1\\n2 2\\n2 2\\n') == '2'\nassert solution('2 2\\n1 2\\n2 3\\n') == '2'\nassert solution('2 1\\n2 2\\n') == '2'\n"
    },
    {
        "number": 3280,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1\\n1 2\\n2 3\\n2 3') == '2'\nassert solution('2 1\\n1 3\\n4 6\\n7 8\\n2 5') == '3'\nassert solution('2 2\\n1 2\\n2 3\\n2 3\\n2 3') == '2'\nassert solution('1 1\\n1 2\\n2 3\\n3 4\\n2 3\\n1 2\\n2 3') == '4'\n"
    },
    {
        "number": 3280,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 1\\n1 3\\n4 6\\n7 8\\n2 5') == '3'\nassert solution('3 1\\n1 2\\n2 3\\n2 3') == '2'\nassert solution('3 1\\n1 2\\n2 3\\n2 3') == '2'\nassert solution('3 1\\n1 2\\n2 3\\n2 3') == '2'\nassert solution('3 2\\n1 2\\n2 3\\n2 3') == '2'\n"
    },
    {
        "number": 3280,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''1 2\n2 3\n2 3'''\n) == 2\nassert solution(\n'''1 2\n2 3\n1 2'''\n) == 1\nassert solution(\n'''4 1\n1 3\n4 6\n7 8\n2 5\n'''\n) == 3\nassert solution(\n'''100 1\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1"
    },
    {
        "number": 3281,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5') == '90.00000000'\nassert solution('-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5') == '126.86989765'\nassert solution('5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5') == '90.00000000'\nassert solution('5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5') == '126.86989765'\nassert solution('5 6 400\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5') == 'Impossible'\n"
    },
    {
        "number": 3281,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 6 500\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5''') == '90.00000000'\nassert solution('''5 6 450\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5''') == '126.86989765'\n\nprint(solution('''5 6 400\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5'''))"
    },
    {
        "number": 3281,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5') == '90.00000000'\nassert solution('4 3\\n-100 0\\n-100 0\\n0 0\\n0 0') == 'Impossible'\nassert solution('5 4\\n-100 0\\n-100 0\\n0 0\\n0 0') == '127.59795919'\nassert solution('5 5\\n-100 0\\n-100 0\\n0 0\\n0 0') == '127.59795919'\nassert solution('5 6 500\\n-100 0\\n-100 0\\n0 0\\n0 0') == '126.86989765'\n"
    },
    {
        "number": 3281,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"90.00000000\"\n'''"
    },
    {
        "number": 3281,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == \"0\"\n\"\"\""
    },
    {
        "number": 3281,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 6 500\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5''') == '90.00000000'\n\nassert solution('''5 6 500\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5''') == '126.86989765'\n\nassert solution('''5 6 500\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5''') == '-1'\n\nassert solution('''3 3 1000\n-100 0\n-100 1000\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5''') == '-1'\n\nassert solution('''3 3 1000\n-100 0\n-100 1000\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5''') == '90.00000000'"
    },
    {
        "number": 3281,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"5 6 500\\n\"\n    \"-100 0\\n\"\n    \"-100 100\\n\"\n    \"0 200\\n\"\n    \"100 100\\n\"\n    \"100 0\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"2 3\\n\"\n    \"3 4\\n\"\n    \"3 5\\n\"\n    \"4 5\\n\"\n) == \"90.00000000\"\n\nassert solution(\n    \"5 6 450\\n\"\n    \"-100 0\\n\"\n    \"-100 100\\n\"\n    \"0 200\\n\"\n    \"100 100\\n\"\n    \"100 0\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"2 3\\n\"\n    \"3 4\\n\"\n    \"3 5\\n\"\n    \"4 5\\n\"\n) == \"126.86989765\"\n\nassert solution(\n    \"5 6 500\\n\"\n    \"-100 0\\n\"\n    \"-100 100\\n\"\n    \"0 200\\n\"\n    \"100 100\\n\"\n    \"100 0\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"2 3\\n\"\n    \"3 4\\n\"\n    \"3 5\\n\"\n    \"4 5\\n\"\n) == \"90.00000000\"\n\nassert solution(\n    \"5 6 450\\n\"\n    \"-100 0\\n\"\n    \"-100 100\\n\"\n    \"0 200\\n\"\n    \"100 100\\n\"\n    \"100 0\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"2 3\\n\"\n    \"3 4\\n\"\n    \"3 5\\n\"\n    \"4 5\\n\"\n) == \"126.86989765\"\n\nassert solution(\n    \"5 6 450\\n\"\n    \"-100 0\\n\"\n    \"-100 100\\n\"\n    \"0 200\\n\"\n    \"100 100\\n\"\n    \"100 0\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"2 3\\n\"\n    \"3 4\\n\"\n    \"3 5\\n\"\n    \"4 5\\n\"\n) == \"126.86989765\"\n"
    },
    {
        "number": 3281,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 6 500\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5''') == '90.00000000'\n\nassert solution('''5 6 450\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5''') == '126.86989765'\nassert solution('''5 6 7\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n5 6\n3 5\n2 4\n2 3\n1 2\n1 3''') == '90.00000000'\nassert solution('''5 6 3\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n5 6\n3 5\n2 4\n2 3\n1 2\n1 3''') == '120.00000000'\nassert solution('''5 6 7\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n5 6\n3 5\n2 4\n2 3\n1 2\n1 3''') == '120.00000000'\n"
    },
    {
        "number": 3281,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"90.00000000\"\nassert solution(\"1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"126.86989765\"\nassert solution(\"2 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"90.00000000\"\nassert solution(\"2 2\\n1 3\\n1 3\\n2 3\\n2 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"45.000000000\"\nassert solution(\"1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"45.000000000\"\n"
    },
    {
        "number": 3281,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 6 500\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5''') == '90.000000'\nassert solution('''5 6 450\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5''') == '126.8799876'\nassert solution('''5 6 500\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5''') == '126.86989765'\nassert solution('''5 6 400\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5''') == 'Impossible'\n"
    },
    {
        "number": 3282,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('37') == '4\\n8 29\\n9 28\\n11 26\\n15 22'\nassert solution('30014') == '7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225'\n"
    },
    {
        "number": 3282,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3282,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''37''') == '''4\n8 29\n9 28\n11 26\n15 22'''\nassert solution('''30014''') == '''7\n85 29929\n88 29926\n785 29229\n788 29226\n7785 22229\n7788 22226\n7789 22225'''\nassert solution('''100''') == '''1\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n1 30\n1 31\n1 32\n1 33\n1 34\n1 35\n1 36\n1 37\n1 38\n1 39\n1 40\n1 41\n1 42\n1 43\n1 44\n1 45\n1 46\n1 47\n1 48\n1 49\n1 50\n1 51\n1 52\n1 53\n1 54\n1 55\n1 56\n1 57\n1 58\n1 59\n1 60\n1 61\n1 62\n1 63\n1 64\n1 65\n1 66\n1 67\n1 68\n1 69\n1 70\n1 71\n1 72\n1 73\n1 74\n1 75\n1 76\n1 77\n1 78\n1 79\n1 80\n1 81\n1 82\n1 83\n1 84\n1 85\n1 86\n1 87\n1 88\n1 89\n1 90\n1 91\n1 92\n1 93\n1 94\n1 95\n1 96\n1 97\n1 98\n1 99\n1 100'''\n"
    },
    {
        "number": 3282,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"37\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\\n\"\nassert solution(\"30014\") == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\\n\"\n"
    },
    {
        "number": 3282,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('14') == ''\nassert solution('1423') == ''\nassert solution('142323') == ''\n"
    },
    {
        "number": 3282,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == ''"
    },
    {
        "number": 3282,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('100') == '4'\nassert solution('30014') == '7'\nassert solution('17') == '4'\nassert solution('99999') == '4'\nassert solution('999999999') == '4'\n"
    },
    {
        "number": 3282,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('37') == '4'\nassert solution('30014') == '7'\nassert solution('7') == '1'\n"
    },
    {
        "number": 3282,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"37\") == \"4\"\nassert solution(\"30014\") == \"7\"\n"
    },
    {
        "number": 3282,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3283,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1 1 1') == '0'\nassert solution('3 5 2') == '3.5'\nassert solution('3 3 2') == '4.9'\nassert solution('4 5 2') == '5.1'\n"
    },
    {
        "number": 3283,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3.5\"\n\"\"\""
    },
    {
        "number": 3283,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected1\nassert solution(stdin) == expected2\nprint(solution(stdin))\n"
    },
    {
        "number": 3283,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3283,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3 1') == '3.5'\nassert solution('3 3 2') == '4.9'\nprint(\"Passed\")\n"
    },
    {
        "number": 3283,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3 1') == '3.5'\nassert solution('3 3 2') == '4.9'\nassert solution('3 3 1') == '3.5'\nassert solution('3 2 1') == '4.9'\nassert solution('3 4 2') == '7.76'\n"
    },
    {
        "number": 3283,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3.5\"\nassert solution(\"2 3 1\") == \"3.5\"\nassert solution(\"3 3 2\") == \"4.9\"\n\"\"\"\n\nimport sys\nfrom math import factorial\n\nn, d, r = map(int, sys.stdin.readline().split())\n\nexpected_sum = 0\nfor i in range(r):\n    expected_sum += i * factorial(n) / (factorial(i) * factorial(n - i))\n\nexpected_sum += factorial(n) / (factorial(r) * factorial(n - r))\nprint(expected_sum)\n"
    },
    {
        "number": 3283,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"4.9\"\n"
    },
    {
        "number": 3283,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 3 1''') == '3.5'\nassert solution('''3 3 2''') == '4.9'\n'''\n"
    },
    {
        "number": 3283,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 1') == '3.5'\nassert solution('2 3 1') == '4.9'\nassert solution('2 2 1') == '4.5'\n\n'''\n"
    },
    {
        "number": 3284,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 5 1 5\") == 19\nassert solution(\"12 12 1 12\") == 4\nassert solution(\"12 2 4 12\") == 1\nassert solution(\"1 2 3 4\") == 2\nassert solution(\"1 1 1 1\") == 1\n"
    },
    {
        "number": 3284,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3284,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 5 1 5') == 19\nassert solution('12 12 1 12') == 4\n"
    },
    {
        "number": 3284,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 5 1 5') == '19'\nassert solution('12 12 1 12') == '4'\n"
    },
    {
        "number": 3284,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 5 1 5') == '19'\nassert solution('12 12 1 12') == '4'"
    },
    {
        "number": 3284,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 5 1 5\") == 19\nassert solution(\"12 12 1 12\") == 4\n"
    },
    {
        "number": 3284,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3284,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3284,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 5 1 5') == 19\nassert solution('12 12 1 12') == 4\n"
    },
    {
        "number": 3284,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3285,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 5') == '4'\nassert solution('1 12') == '4'\nassert solution('4 5') == '4'\nassert solution('1 1') == '1'\nassert solution('1 1 2') == '3'\n"
    },
    {
        "number": 3285,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\n\nassert solution(\"2 3\") == \"2\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"3 2\") == \"2\"\n"
    },
    {
        "number": 3285,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 5') == 4\nassert solution('1 12') == 4\nassert solution('1 2') == 3\nassert solution('1 3') == 3\nassert solution('1 4') == 3\n"
    },
    {
        "number": 3285,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 5') == '4'\nassert solution('1 12') == '4'\nassert solution('1 2') == '1'\nassert solution('1 2 3') == '1'\nassert solution('1 2 3 4') == '1'\n"
    },
    {
        "number": 3285,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 5') == '4'\nassert solution('1 12') == '4'\nassert solution('100 200') == '4'\nassert solution('1 100') == '3'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 3285,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 5\") == \"4\"\nassert solution(\"2 1\") == \"0\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"3 4\") == \"1\"\nassert solution(\"4 4\") == \"0\"\n"
    },
    {
        "number": 3285,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3285,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    '1 5') == '4'\nassert solution(\n    '1 12') == '4'\nprint(\"Tests passed\")"
    },
    {
        "number": 3285,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 5\") == \"4\"\nassert solution(\"1 12\") == \"4\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"3 3\") == \"2\"\n"
    },
    {
        "number": 3285,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 5') == '4'\nassert solution('1 12') == '4'\nassert solution('1 12') == '4'\nassert solution('1 123') == '4'\nassert solution('1 123') == '4'\n"
    },
    {
        "number": 3286,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"cocar\") == \"cocar\"\nassert solution(\"cocar\") == \"cocar\"\nassert solution(\"abcd\") == \"\"\nassert solution(\"ab\") == \"\"\nassert solution(\"a\") == \"\"\n"
    },
    {
        "number": 3286,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"car\") == \"cocaror\"\nassert solution(\"cocar\") == \"cocaror\"\nassert solution(\"cocaror\") == \"cocaror\"\nassert solution(\"cocaroror\") == \"cocaror\"\nassert solution(\"cocaroror\") == \"cocaror\"\n"
    },
    {
        "number": 3286,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('car') == 'cocaror'\nassert solution('cocar') == 'cocaror'\nassert solution('cocar') == 'cocaror'\nassert solution('ccar') == 'cocaror'\nassert solution('ccc') == 'cocaror'\n"
    },
    {
        "number": 3286,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"car\") == \"cocaror\"\nassert solution(\"cocar\") == \"cocaror\"\nassert solution(\"ccar\") == \"ccar\"\nassert solution(\"cocaror\") == \"cocar\"\nassert solution(\"caocar\") == \"cocar\"\n"
    },
    {
        "number": 3286,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('cocar') == 2\nassert solution('car') == 1\nassert solution('cocac') == 5\nassert solution('cobac') == 4\nassert solution('coac') == 3\n"
    },
    {
        "number": 3286,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"car\") == \"cocar\"\nassert solution(\"cocar\") == \"cococar\"\nassert solution(\"cocar\") == \"cocacar\"\nassert solution(\"car\") == \"car\"\nassert solution(\"car\") == \"cocar\"\n"
    },
    {
        "number": 3286,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"car\") == \"cocar\"\nassert solution(\"cocar\") == \"cocarcocar\"\nassert solution(\"cccc\") == \"cccccccccc\"\nassert solution(\"cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc"
    },
    {
        "number": 3286,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"cocar\") == \"2\"\nassert solution(\"car\") == \"1\"\nassert solution(\"aaaaa\") == \"6\"\nassert solution(\"cabca\") == \"1\"\nassert solution(\"abcda\") == \"1\"\n"
    },
    {
        "number": 3286,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"cocar\") == \"2\"\nassert solution(\"car\") == \"1\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 3286,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"cocar\") == \"1\"\nassert solution(\"car\") == \"1\"\nassert solution(\"caor\") == \"2\"\nassert solution(\"cocear\") == \"0\"\nassert solution(\"coceaarr\") == \"1\"\n"
    },
    {
        "number": 3287,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3287,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3287,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n0 2 0 1''') == '8'\nassert solution('''5\n1000000 1 1 1 1''') == '0'\nassert solution('''6\n1000000 1 1 1 1 1''') == '0'\nassert solution('''7\n1000000 1 1 1 1 1 1''') == '0'\nassert solution('''8\n1000000 1 1 1 1 1 1 1''') == '0'\n"
    },
    {
        "number": 3287,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3287,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n0 2 0 1''') == '8'\nassert solution('''5\n1000000 1 1 1 1''') == '0'\nassert solution('''6\n2 1 0 1 0 1''') == '8'\nassert solution('''6\n3 1 0 1 0 1''') == '2'\nassert solution('''6\n4 1 0 1 0 1''') == '2'\n"
    },
    {
        "number": 3287,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0\"\n\nassert solution(stdin) == \"0\"\n\nassert solution(stdin) == \"8\"\n\nassert solution(stdin) == \"0\"\n\nassert solution(stdin) == \"8\"\n"
    },
    {
        "number": 3287,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 0\n\n-----Note-----\n1. $k$ is the number of denominations.\n2. Each coin of denomination $2^i$ has a value of $2^i$ ($1, 2, 4, 8, \\ldots, 2^{i - 1}$, $2^{i}$, $2^{i + 1}$ etc.).\n3. For the first line, each of the $k$ coins is valued with its corresponding value ($1, 2, 4, 8, \\ldots, 2^{k - 1}$, $2^k$, $2^{k + 1}$ etc.).\n4. For the second line, each of the $k$ coins is valued with its corresponding value ($1, 2, 4, 8, \\ldots, 2^{k - 1}$, $2^k$, $2^{k + 1}$ etc.).\n5. Since there is no loot left over, the answer is zero.\n6. For the third line, each of the $k$ coins is valued with its corresponding value ($1, 2, 4, 8, \\ldots, 2^{k - 1}$, $2^k$, $2^{k + 1}$ etc.).\n7. For the fourth line, each of the $k$ coins is valued with its corresponding value ($1, 2, 4, 8, \\ldots, 2^{k - 1}$, $2^k$, $2^{k + 1}$ etc.).\n8. For the fifth line, each of the $k$ coins is valued with its corresponding value ($1, 2, 4, 8, \\ldots, 2^{k - 1}$, $2^k$, $2^{k + 1}$ etc.).\n\n-----Alternate Solutions-----"
    },
    {
        "number": 3287,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3287,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3287,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3288,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 650') == 'zyz'\nassert solution('2 651') == '-1'\nprint(solution(stdin))\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 3288,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3288,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 650\n''') == 'zyz'\nassert solution('''2 651\n''') == '-1'"
    },
    {
        "number": 3288,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"zyz\"\nprint(\"Passed\")"
    },
    {
        "number": 3288,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 7\\n2 3\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == \"zyz\"\nassert solution(\"2 653\\n2 652\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1"
    },
    {
        "number": 3288,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 650') == 'zyz'\nassert solution('2 651') == '-1'"
    },
    {
        "number": 3288,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 650\n''') == 'zyz'\n\nassert solution('''2 651\n''') == '-1'\n\nassert solution('''3 651\n''') == 'abc'\n\nassert solution('''3 652\n''') == '-1'\n\nassert solution('''4 653\n''') == 'cad'"
    },
    {
        "number": 3288,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('aba') == 'aba'\nassert solution('aca') == 'aca'\nassert solution('ada') == 'ada'\nassert solution('ada') == 'ada'\nassert solution('ada') == 'ada'\n"
    },
    {
        "number": 3288,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('aba') == 'aba'\nassert solution('acb') == 'acb'\nassert solution('acd') == 'acd'\nassert solution('acda') == 'acd'\nassert solution('acdd') == 'acd'\n"
    },
    {
        "number": 3288,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 651''') == '-1'\nassert solution('''2 650''') == 'zyz'\n'''\n"
    },
    {
        "number": 3289,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n0 10 0\n10 0 1\n12 8 1\n5 5 0\n11 2 1\n11 3 0''') == '4'\n\nassert solution('''7\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n''') == '8'\n\nassert solution('''8\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n''') == '8'\n\nassert solution('''9\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n''') == '8'\n\nassert solution('''10\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n''') == '8'"
    },
    {
        "number": 3289,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3289,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 0 0\\n1 1 1\\n0 0 0\\n1 1 1\\n0 0 0\\n1 1 1\\n0 0 0\\n1 1 1\\n0 0 0') == '4'\nassert solution('0 0 0\\n1 1 1\\n0 0 0\\n1 1 1\\n0 0 0\\n1 1 1\\n0 0 0\\n1 1 1\\n0 0 0') == '8'\nassert solution('0 0 0\\n1 1 1\\n0 0 0\\n1 1 1\\n0 0 0\\n1 1 1\\n0 0 0\\n1 1 1\\n0 0 0') == '8'\nassert solution('0 0 0\\n1 1 1\\n0 0 0\\n1 1 1\\n0 0 0\\n1 1 1\\n0 0 0\\n1 1 1\\n0 0 0\\n1 1 1') == '8'\nassert solution('0 0 0\\n1 1 1\\n0 0 0\\n1 1 1\\n0 0 0\\n1 1 1\\n0 0 0\\n1 1 1\\n0 0 0\\n1 1 1\\n0 0 0') == '8'\n"
    },
    {
        "number": 3289,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6\n0 10 0\n10 0 1\n12 8 1\n5 5 0\n11 2 1\n11 3 0''') == '4'\nassert solution('''10\n6 1 1\n0 2 0\n2 1 1\n6 1 1\n8 2 0\n4 4 0\n4 0 0\n2 3 1\n6 1 0\n6 3 1''') == '8'\nassert solution('''10\n6 1 1\n0 2 0\n2 1 1\n6 1 1\n8 2 0\n4 4 0\n4 0 0\n2 3 1\n6 1 0\n6 3 1''') == '8'\nassert solution('''4\n0 10 0\n10 0 1\n12 8 1\n5 5 0\n11 2 1\n11 3 0''') == '4'\nassert solution('''3\n0 10 0\n10 0 1\n12 8 1\n5 5 0\n11 2 1\n11 3 0''') == '3'\n"
    },
    {
        "number": 3289,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\\n') == '4'\nassert solution('6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\\n') == '8'\nassert solution('10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\\n') == '8'\nassert solution('1000\\n1000 1000 0\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 0\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 0\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\n1000 1000 1\\"
    },
    {
        "number": 3289,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 3289,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n0 0 0\\n0 0 0\\n0 0 0') == '2'\nassert solution('2\\n10 0 0\\n10 0 0\\n10 0 0\\n5 5 0\\n11 2 1\\n11 3 0') == '4'\nassert solution('7\\n8 2 0\\n2 2 0\\n1 1 0\\n3 3 0\\n2 3 0\\n6 1 0\\n6 3 1') == '7'\nassert solution('1\\n1 1 1') == '1'\nassert solution('100\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1"
    },
    {
        "number": 3289,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"4\"\nprint(\"tests passed\")\n"
    },
    {
        "number": 3289,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n6\n0 10 0\n10 0 1\n12 8 1\n5 5 0\n11 2 1\n11 3 0\n''') == '4'\nassert solution('''\n10\n6 1 1\n0 2 0\n2 1 1\n6 1 1\n8 2 0\n4 4 0\n4 0 0\n2 3 1\n6 1 0\n6 3 1\n''') == '8'\nassert solution('''\n11\n6 1 1\n0 2 0\n2 1 1\n6 1 1\n8 2 0\n4 4 0\n4 0 0\n2 3 1\n6 1 0\n6 3 1\n''') == '9'\nassert solution('''\n15\n6 1 1\n0 2 0\n2 1 1\n6 1 1\n8 2 0\n4 4 0\n4 0 0\n2 3 1\n6 1 0\n6 3 1\n''') == '6'\nassert solution('''\n7\n6 1 1\n0 2 0\n2 1 1\n6 1 1\n8 2 0\n4 4 0\n4 0 0\n2 3 1\n6 1 0\n6 3 1\n''') == '4'\n"
    },
    {
        "number": 3289,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n6\n0 10 0\n10 0 1\n12 8 1\n5 5 0\n11 2 1\n11 3 0\n\"\"\"\n) == '4'\nassert solution(\n\"\"\"\n10\n6 1 1\n0 2 0\n2 1 1\n6 1 1\n8 2 0\n4 4 0\n4 0 0\n2 3 1\n6 1 0\n6 3 1\n\"\"\"\n) == '8'\nassert solution(\n\"\"\"\n11\n6 1 1\n0 2 0\n2 1 1\n6 1 1\n8 2 0\n4 4 0\n4 0 0\n2 3 1\n6 1 0\n6 3 1\n\"\"\"\n) == '8'\nassert solution(\n\"\"\"\n100\n2 1 1\n3 3 1\n2 1 1\n2 1 1\n3 3 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n3 3 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1"
    },
    {
        "number": 3290,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\") == \"2\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\") == \"-1\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\") == \"2\"\n"
    },
    {
        "number": 3290,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '2'\n"
    },
    {
        "number": 3290,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == None\nassert solution('2 4 3') == None\nassert solution('3 4 5 7') == 0\nassert solution('3 4 5 7 8 9 10') == 0\nassert solution('2 4 3') == None\n"
    },
    {
        "number": 3290,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4\\n3\\n4 4 6\\n2 1 3\\n\") == \"2\"\nassert solution(\"5\\n5 7 10 9 11 14\\n2 3 4 4\\n5 6 10 8\\n7 11 15 15 11 15 11 1\\n2 3 4 4\\n\") == \"3\"\nassert solution(\"5\\n3\\n4 4 6\\n2 1 3\\n\") == \"-1\"\nassert solution(\"3\\n3\\n3 3 2 2\\n1 2 2\") == \"1\"\n"
    },
    {
        "number": 3290,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == 0\n"
    },
    {
        "number": 3290,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == answer"
    },
    {
        "number": 3290,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 4 3\n3 4 5 7\n1 2 10\n''') == '0'\nassert solution('''2 4 3\n3 4 5 7\n1 2 10\n2 3\n''') == '2'\nassert solution('''2 4 3\n2 3 5 7\n1 2 10\n2 3\n''') == '-1'\nassert solution('''3 5 2\n1 4 7 9 11\n2 3\n2 3\n''') == '2'\nassert solution('''3 5 2\n1 4 7 9 11\n2 3\n1 2\n1 2\n''') == '2'\n"
    },
    {
        "number": 3290,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 4 3\n3 4 5 7\n1 2 10\n''') == '0'\nassert solution('''3 5 2\n1 4 7 9 11\n2 3\n''') == '2'\nassert solution('''6 9 2\n1 4 5 7 9 10\n2 3\n''') == '-1'\n\nassert solution('''3 5 2\n1 4 7 9 11\n2 3\n''') == '0'\nassert solution('''9 9 9\n1 4 5 7 9 10\n2 3\n''') == '-1'"
    },
    {
        "number": 3290,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3290,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3291,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3\n3 2''') == '1\\n-2 -1'\nassert solution('''1 2\n3 4''') == '3\\n-1 1'\nassert solution('''1 2\n1 1''') == '2\\n-1 1'\nassert solution('''4 5\n4 3\n3 4\n2 2''') == '1\\n2 1\\n0 -2'\nassert solution('''4 5\n1 3\n3 4\n1 1''') == '3\\n-1 1\\n1 1\\n0 -2'\n"
    },
    {
        "number": 3291,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 3\n3 2''') == '1'\nassert solution('''1 2\n3 4''') == '3'\nassert solution('''2 2\n3 4''') == '3'\nassert solution('''2 4\n4 2''') == '2'\nassert solution('''2 4\n4 3''') == '2'\n"
    },
    {
        "number": 3291,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n'''\n\nfrom collections import defaultdict, deque"
    },
    {
        "number": 3291,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3291,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3291,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 3\n3 2\n''') == '1\\n-2 -1'\nassert solution('''1 2\n3 4\n''') == '3\\n-1 1'\nassert solution('''1 1\n3 4\n''') == '2\\n1 1'\nassert solution('''1 1\n1 1\n''') == '2\\n-1 1'\nassert solution('''1 2\n1 1\n''') == '1\\n-2 -1'\n"
    },
    {
        "number": 3291,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 3\n3 2''') == '1'\nassert solution('''1 2\n3 4\n''') == '3'\nassert solution('''1 2\n4 4\n''') == '3'\nassert solution('''3 2\n4 2\n''') == '1'\nassert solution('''4 1\n3 2\n''') == '3'\n"
    },
    {
        "number": 3291,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n3 2\") == \"1\"\nassert solution(\"1 2\\n3 4\") == \"3\"\nassert solution(\"2 3\\n3 2\") == \"1\"\nassert solution(\"2 3\\n3 2\") == \"1\"\nassert solution(\"1 2\\n3 4\") == \"3\"\n"
    },
    {
        "number": 3291,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3291,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 3292,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\nIVO\nJASNA\nJOSIPA''') == '4'\nassert solution('''5\nMARICA\nMARTA\nMATO\nMARA\nMARTINA''') == '24'\nassert solution('''3\nIVO\nJASNA\nJOSIPA''') == '4'\nassert solution('''4\nIVO\nJASNA\nJOSIPA\nKAROLINSKY''') == '6'\nassert solution('''4\nIVO\nJASNA\nJOSIPA\nKAROLINSKY''') == '6'\n"
    },
    {
        "number": 3292,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''IVO\nJASNA\nJOSIPA''') == '4'\nassert solution('''IVO\nJASNA\nJOSIPA\nMARICA\nMARTA\nMATO\nMARA\nMARTINA''') == '24'\nassert solution('''IVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO"
    },
    {
        "number": 3292,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"\\t\") == \"\"\nassert solution(\"\\t\\t\") == \"\"\nassert solution(\"ABC\\nDEF\") == \"\"\n"
    },
    {
        "number": 3292,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\nIVO\nJASNA\nJOSIPA\nIVO\nJOSIPA''') == '''4\n24\n24\n24\n24\n24'''\n"
    },
    {
        "number": 3292,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\nIVO\nJASNA\nJOSIPA''') == '4'\nassert solution('''5\nMARICA\nMARTA\nMATO\nMARA\nMARTINA''') == '24'\nassert solution('''1\nIVO''') == '1'\n"
    },
    {
        "number": 3292,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\nIVO\nJASNA\nJOSIPA''') == '4'\nassert solution('''5\nMARICA\nMARTA\nMATO\nMARA\nMARTINA''') == '24'\nassert solution('''1\nIVO''') == '1'\nassert solution('''2\nIVO\nJOSIPA''') == '2'\nassert solution('''3\nIVO\nJASNA\nJOSIPA''') == '4'\n"
    },
    {
        "number": 3292,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"IVO\") == \"IVO\"\nassert solution(\"IVO JASNA JOSIPA\") == \"IVO\"\nassert solution(\"IVO JASNA\") == \"IVO\"\nassert solution(\"IVO JASNA MIRO JOSIPA\") == \"IVO\"\n"
    },
    {
        "number": 3292,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3292,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(''.join(sorted
    },
    {
        "number": 3292,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''IVO\nJASNA\nJOSIPA'''\n) == '4'\n\nassert solution(\n'''IVO\nIVO\nIVO\nIVO\nIVO'''\n) == '4'\n\nassert solution(\n'''IVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO'''\n) == '4'\n\nassert solution(\n'''IVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO'''\n) == '4'\n\nassert solution(\n'''IVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\n"
    },
    {
        "number": 3293,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2 3 1\n2 3 4 1\n3 4 5 1\n''') == '3'\nassert solution('''3\n2 2 3 8\n3 1 5 6\n1 9 4 7\n''') == '39'\nassert solution('''3\n1 2 3 4\n2 3 4 5\n3 4 5 6\n''') == '0'\nassert solution('''3\n1 1 1 1\n2 2 2 2\n3 3 3 3\n''') == '0'\nassert solution('''3\n1 1 1 1\n2 2 2 2\n3 3 3 3\n''') == '0'\n"
    },
    {
        "number": 3293,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == '5'\nassert solution('2\\n2\\n3\\n4\\n5') == '7'\nassert solution('3\\n2\\n3\\n4\\n5') == '7'\nassert solution('4\\n2\\n3\\n4\\n5') == '8'\nassert solution('5\\n2\\n3\\n4\\n5') == '8'\n"
    },
    {
        "number": 3293,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n\") == \"0\"\nassert solution(\"1\\n1\\n2\\n3\") == \"3\"\nassert solution(\"1\\n1\\n2\\n3\\n4\") == \"4\"\nassert solution(\"1\\n2\\n3\\n4\") == \"1\"\n"
    },
    {
        "number": 3293,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n1 2 3 1\n2 3 4 1\n3 4 5 1''') == '3'\nassert solution('''3\n2 2 3 8\n3 1 5 6\n1 9 4 7''') == '39'\nassert solution('''4\n1 2 3 4 1\n2 3 4 5 1\n3 4 5 6 1\n4 5 6 7 1''') == '43'\nassert solution('''1000\n1000000 1 1000000 10000 1000000\n10000 1000000 100 1 1 1\n1 1000000 10000 1 1 1\n10000 10000 10000 1 1 1\n10000 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3293,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3') == '3'\nassert solution('2\\n2\\n2\\n2\\n2\\n2\\n2\\n2') == '2'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '0'\nassert solution('2\\n3\\n5\\n8\\n15\\n22\\n31\\n40\\n49\\n56') == '49'\nassert solution('1\\n2\\n3') == '0'\n"
    },
    {
        "number": 3293,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\t\") == \"\"\nassert solution(\"12345\") == \"12345\"\nassert solution(\"1 2 3 4 5\") == \"5\"\nassert solution(\"2 3 4 5 6\") == \"16\"\n"
    },
    {
        "number": 3293,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n1 2 3 1\n2 3 4 1\n3 4 5 1''') == '3'\nassert solution('''3\n2 2 3 8\n3 1 5 6\n1 9 4 7''') == '39'\nassert solution('''1\n1 1 1 1\n1 1 1 1''') == '0'\nassert solution('''5\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1''') == '40'\nassert solution('''7\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1''') == '55'\n"
    },
    {
        "number": 3293,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n3\\n4\") == \"4\"\nassert solution(\"2\\n3\\n4\\n5\") == \"12\"\nassert solution(\"3\\n1\\n2\\n3\") == \"9\"\nassert solution(\"3\\n2\\n1\\n3\") == \"7\"\nassert solution(\"3\\n3\\n2\\n1\") == \"0\"\n"
    },
    {
        "number": 3293,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n1 2 3 1\n2 3 4 1\n3 4 5 1''') == '3'\nassert solution('''3\n2 2 3 8\n3 1 5 6\n1 9 4 7''') == '39'\nassert solution('''3\n1 1 1 1\n1 1 1 1\n1 1 1 1''') == '0'\nassert solution('''4\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1''') == '40'\nassert solution('''4\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1''') == '40'\n"
    },
    {
        "number": 3293,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n1 2 3 1\n2 3 4 1\n3 4 5 1''') == '3'\nassert solution('''3\n2 2 3 8\n3 1 5 6\n1 9 4 7''') == '39'\nassert solution('''5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5''') == '95'\nassert solution('''4\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1''') == '0'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10''') == '55'\n"
    },
    {
        "number": 3294,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\\n') == '5.2696518641\\n'\nassert solution('1 8 3 -14 -14 14 -14 0 20\\n8 10 4 -1 -1 1 -1 1 1 -1 1\\n') == '9\\n'\nassert solution('1 10 3 -14 -14 14 -14 0 20\\n8 10 4 -1 -1 1 -1 1 1 -1 1\\n') == '9\\n'\nassert solution('2 10 3 -14 -14 14 -14 0 20\\n8 10 4 -1 -1 1 -1 1 1 -1 1\\n') == '9\\n'\n\"\"\"\n"
    },
    {
        "number": 3294,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n2\n5 8 4 -2 0 0 -3 2 0 0 3\n8 10 4 -1 -1 1 -1 1 1 -1 1\n''') == '5.2696518641\\n'\nassert solution(\n'''\n1\n8 9 3 -14 -14 14 -14 0 20\nSample Output 2:\n9\n''') == '9\\n'\nassert solution(\n'''\n2\n5 8 4 -2 0 0 -3 2 0 0 3\n8 10 4 -1 -1 1 -1 1 1 -1 1\n''') == '5.2696518641\\n'\nassert solution(\n'''\n1\n8 9 3 -14 -14 14 -14 0 20\nSample Output 2:\n9\n''') == '9\\n'\nassert solution(\n'''\n2\n1 1 1 -1 -1 1 -1 1 1 -1 1\n8 9 3 -14 -14 14 -14 0 20\nSample Output 2:\n1.3022286564\n''') == '1.3022286564\\n'\n"
    },
    {
        "number": 3294,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 8 4 -2 0 0 -3 2 0 0 3') == '5.2696518641'\nassert solution('8 10 4 -1 -1 1 -1 1 1 -1 1') == '9'\nprint(\"tests passed\")\n"
    },
    {
        "number": 3294,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n8 4 4 -2 0 0 -3 2 0 0 3\n8 10 4 -1 -1 1 -1 1 1 -1 1\n''') == '5.2696518641'\nassert solution('''1\n8 9 3 -14 -14 14 -14 0 20\n''') == '9'\nassert solution('''10\n12 14 3 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2 -2 0 -2"
    },
    {
        "number": 3294,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"5\n8 9 3 -14 -14 14 -14 0 20\n8 10 4 -1 -1 1 -1 1 1 -1 1\n\"\"\"\n) == \"9\"\nassert solution(\n    \"\"\"3\n10 5 3 -10 -10 10 -10 0 10\n-10 -10 0 0 10 10 10 10 10\n10 10 10 10 10 10 10 10 10\n\"\"\"\n) == \"0.5\"\nprint(\"tests passed successfully.\")\n"
    },
    {
        "number": 3294,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n1\n5 8 4 -2 0 0 -3 2 0 0 3\n8 10 4 -1 -1 1 -1 1 1 -1 1\n\"\"\"\n) == \"5.2696518641\\n\"\nassert solution(\n\"\"\"\n2\n5 8 4 -2 0 0 -3 2 0 0 3\n8 10 4 -1 -1 1 -1 1 1 -1 1\n\"\"\"\n) == \"9\\n\"\n\n\"\"\"\nTest Case 0\n\n2\n10 10 2\n5 4 3 -6 -6 -6 -6 0 -1 -2 1 -2 2 -5 -3 -3 -3 -2 1 2 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"
    },
    {
        "number": 3294,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    '''2\n5 8 4 -2 0 0 -3 2 0 0 3\n8 10 4 -1 -1 1 -1 1 1 -1 1\n'''\n    ) == '5.2696518641'\n\nassert solution(\n    '''1\n8 9 3 -14 -14 14 -14 0 20\nSample Output 2:\n9'''\n    ) == '9'\n"
    },
    {
        "number": 3294,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    '2\\n'\n    '5 8 4 -2 0 0 -3 2 0 0 3\\n'\n    '8 10 4 -1 -1 1 -1 1 1 -1 1\\n'\n) == '5.2696518641'\n\nassert solution(\n    '1\\n'\n    '8 9 3 -14 -14 14 -14 0 20\\n'\n    '8 10 4 -1 -1 1 -1 1 1 -1 1\\n'\n) == '9'\n\nassert solution(\n    '1\\n'\n    '6 2 3 -1 1 1\\n'\n    '3 4 2 -1 -1 0\\n'\n    '3 2 1 -1 -1 1\\n'\n    '1 1 1 1 1 1\\n'\n) == '3'\n\nassert solution(\n    '1\\n'\n    '6 2 3 -1 1 1\\n'\n    '3 4 2 -1 -1 0\\n'\n    '3 2 1 -1 -1 1\\n'\n    '1 1 1 1 1 1\\n'\n) == '2'\n\nassert solution(\n    '1\\n'\n    '6 2 3 -1 1 1\\n'\n    '3 4 2 -1 -1 0\\n'\n    '3 2 1 -1 -1 1\\n'\n    '1 1 1 1 1 1\\n'\n) == '1'"
    },
    {
        "number": 3294,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n5 8 4 -2 0 0 -3 2 0 0 3\n8 10 4 -1 -1 1 -1 1 1 -1 1\n''') == '5.2696518641'\nassert solution('''1\n8 9 3 -14 -14 14 -14 0 20\nSample Output 2:\n9\n''') == '9'\nassert solution('''2\n1 2 0 0\n1 1 2 2 2\n''') == '3'\nassert solution('''2\n5 8 4 -2 0 0 -3 2 0 0 3\n8 10 4 -1 -1 1 -1 1 1 -1 1\n''') == '5.2696518641'\nassert solution('''1\n8 9 3 -14 -14 14 -14 0 20\n''') == '9'\n"
    },
    {
        "number": 3294,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3295,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\nprint('Passed')\n"
    },
    {
        "number": 3295,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3295,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1\\n2\\n2\\n3\\n3\\n3\\n4\\n4\\n4\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\"
    },
    {
        "number": 3295,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1\\n') == '1'\nassert solution('2\\n1\\n1\\n') == '8'\nassert solution('2\\n2\\n2\\n') == '4'\nassert solution('1\\n1\\n1\\n') == '1'\nassert solution('1\\n2\\n1\\n') == '8'\n"
    },
    {
        "number": 3295,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n0 1 2\\n3 1 2\\n3 0 1') == '1'\nassert solution('4\\n2 4 5\\n1 1 1\\n2 2 2\\n2 0 3\\n3 2 2\\n3 0 1') == '2'\nassert solution('8\\n1 2 3 4 5 6 7 8\\n8 7 6 5 4 3 2 1\\n3 2 1 2 0\\n2 1 1 1\\n2 1 1 1\\n2 1 1 1\\n2 1 1 1') == '4'\nassert solution('8\\n3 3 2 2 1 1\\n1 1 1\\n2 2 2\\n2 0 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == '2'\nassert solution('1\\n0 1 2\\n3 1 2\\n3 0 1') == '1'\n"
    },
    {
        "number": 3295,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3295,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1 1\\n2 0 2\\n3 1 1\") == \"1\\n8\\n4\"\nassert solution(\"3\\n4 1 1\\n5 2 3\\n5 0 3\\n4 4 4\") == \"6\\n4\\n24\"\nassert solution(\"5\\n1 4 1\\n2 2 1\\n3 1 2\\n4 2 1\\n5 3 1\\n4 4 1\") == \"5\"\nassert solution(\"10\\n1 9 1\\n2 9 3\\n3 1 2\\n4 2 1\\n5 1 1\\n6 1 3\\n7 1 1\\n8 1 2\\n9 1 1\") == \"11\\n5\"\nassert solution(\"10\\n1 10 1\\n2 3 1\\n3 1 2\\n4 2 1\\n5 1 1\\n6 1 3\\n7 1 1\\n8 1 2\\n9 1 1\") == \"5\"\n"
    },
    {
        "number": 3295,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"3\n1 1 1\n2 0 2\n3 1 1\"\"\"\n) == \"1\\n8\\n4\"\n\nassert solution(\n    \"\"\"3\n4 1 1\n5 2 3\n5 0 3\"\"\"\n) == \"6\\n4\\n24\"\n\nassert solution(\n    \"\"\"3\n4 1 1\n5 2 3\n3 1 1\"\"\"\n) == \"1\\n8\\n4\"\n"
    },
    {
        "number": 3295,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"1\n1 2 3\n1 0 2\n1 1 1\n\"\"\") == \"3\\n2\\n1\\n\"\nassert solution(\"\"\"2\n1 1 1\n3 2 2\n1 1 1\n\"\"\") == \"6\\n4\\n-1\\n\"\nassert solution(\"\"\"2\n1 1 1\n1 0 0\n1 0 0\n\"\"\") == \"1\\n-1\\n1\\n\"\nassert solution(\"\"\"3\n1 1 1\n1 0 0\n1 0 0\n\"\"\") == \"2\\n1\\n-1\\n\"\nassert solution(\"\"\"4\n1 1 1\n1 0 0\n1 0 0\n1 0 0\n\"\"\") == \"3\\n1\\n-1\\n\"\n"
    },
    {
        "number": 3295,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n1\\n1\") == \"\"\nassert solution(\"1\\n1\\n2\") == \"-1\"\nassert solution(\"1\\n1\\n3\") == \"-1\"\nassert solution(\"1\\n2\\n3\") == \"-1\"\n"
    },
    {
        "number": 3296,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2''') == '3'\nassert solution('''6 6''') == '240'\n'''\n\nprint(solution(input()))"
    },
    {
        "number": 3296,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3296,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 5') == '48'\nassert solution('2 3') == '4'\nassert solution('2 4') == '6'\nassert solution('3 4') == '3'\nassert solution('4 6') == '96'\n"
    },
    {
        "number": 3296,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3296,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2') == 3\nassert solution('2\\n2') == 1\nassert solution('2\\n3') == 0\nassert solution('3\\n2') == 0\nassert solution('3\\n3') == 1\n"
    },
    {
        "number": 3296,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 2') == '3'\nassert solution('6 6') == '240'\n\n\"\"\"\nfrom math import factorial\nfrom itertools import permutations, combinations\nfrom bisect import bisect_left"
    },
    {
        "number": 3296,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 2') == '3'\nassert solution('6 6') == '240'\nassert solution('1 5') == '6'\nassert solution('2 9') == '27'\nassert solution('0 2') == '1'\n"
    },
    {
        "number": 3296,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3296,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 2') == '3'\nassert solution('4 1') == '3'\nassert solution('4 2') == '3'\nassert solution('7 4') == '7'\nassert solution('7 3') == '28'\n"
    },
    {
        "number": 3296,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4 5 6') == 3\nassert solution('2 2 3 4 5 6') == 6\nassert solution('3 4 5 6 7') == 72\nassert solution('4 5 6 7 8') == 504\nassert solution('5 6 7 8 9') == 1296\n"
    },
    {
        "number": 3297,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('SEND+MORE=MONEY') == '9567+1085=10652'\nassert solution('A+A=A') == 'impossible'\n\"\"\""
    },
    {
        "number": 3297,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\"\n\"\"\""
    },
    {
        "number": 3297,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\"\n\"\"\"\n"
    },
    {
        "number": 3297,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('SEND+MORE=MONEY') == '9567+1085=10652'\nassert solution('A+A=A') == 'impossible'\nprint('Test success!')\n"
    },
    {
        "number": 3297,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    'SEND+MORE=MONEY'\n) == '9567+1085=10652'\nassert solution(\n    'A+A=A'\n) == 'impossible'\n\n\"\"\"\n"
    },
    {
        "number": 3297,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('SEND+MORE=MONEY') == '9567+1085=10652'\nassert solution('A+A=A') == 'impossible'\nprint('Testcases passed')\n"
    },
    {
        "number": 3297,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('SEND+MORE=MONEY') == '9567+1085=10652'\nassert solution('A+A=A') == 'impossible'\nassert solution('A-A=A') == 'impossible'\nassert solution('A-A=B') == 'impossible'\nassert solution('A-A=Z') == 'impossible'\n"
    },
    {
        "number": 3297,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('SEND+MORE=MONEY') == '9567+1085=10652'\nassert solution('A+A=A') == 'impossible'\nassert solution('SEND+MORE=MONEY') == '9567+1085=10652'\nassert solution('A+A=B') == 'impossible'\nassert solution('A+B=C') == 'impossible'\n"
    },
    {
        "number": 3297,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('SEND+MORE=MONEY') == '9567+1085=10652'\nassert solution('A+A=A') == 'impossible'\nassert solution('A=A') == 'impossible'\n\"\"\"\nimport sys"
    },
    {
        "number": 3297,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"impossible\"\nassert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\"\n\n---\n\nTo check the correctness of your solution, you can run the following command:\n\npython3 -m pytest -v --tb=line --language=python3 tests/10_cryptarithmetic_puzzles.py\n\nIf your solution works correctly, you should see no output.\nIf your solution produces the wrong output, then for each failing test case, you need to find and correct the error. To check the error message, you can run the following command:\n\npython3 -m pytest -v --tb=line --language=python3 tests/10_cryptarithmetic_puzzles.py:test_puzzle_1\n\nIf the error message says:\n\nValueError: invalid literal for int() with base 10: 'A'\n\nthat means that your program contains an error in the calculation of the solution. Fix the error and run the command again.\nTo verify that your program actually solves the given cryptarithm puzzles, you can use the following command:\n\npython3 -m pytest -v --tb=line --language=python3 tests/10_cryptarithmetic_puzzles.py:test_puzzle_2\n\nIf your solution does not produce any error message, then the program passes the tests.\n\n-----Alternate Solution-----\nYou can also implement a solution that does not use the string operations. For example, suppose that we know that cryptarithms never use the letter \u20180\u2019, so instead of replacing all occurrences of \u20180\u2019 with the digit \u20189\u2019, we can replace it with a character other than \u20180\u2019 that is not used by the cryptarithm. You can replace a character with any other non-zero character. For example, \u20181\u2019 could be replaced with any non-zero character other than \u20180\u2019, \u20181\u2019, or \u20189\u2019."
    },
    {
        "number": 3298,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == 0\nassert solution('0 1 2 3') == 14\nassert solution('4') == 1\nassert solution('0 1 2 3') == 14\nassert solution('1 1 2 1 1') == 1\n"
    },
    {
        "number": 3298,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0 1 2 3\\n0 1 2 3\") == \"14\"\nassert solution(\"1 1 2 1 1\\n1 1 2 1 1\") == \"1\"\nassert solution(\"2 1 3 4 5\\n1 2 3 4 5\") == \"0\"\nassert solution(\"1 1 2 1 1\\n1 1 2 1 1\") == \"1\"\nassert solution(\"0\\n0\") == \"0\"\n"
    },
    {
        "number": 3298,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0 1 2 3\") == \"14\"\nassert solution(\"0 1 2 3\") == \"14\"\nassert solution(\"1 1 2 1 1\") == \"1\"\nassert solution(\"1 1 2 1 1\") == \"1\"\nassert solution(\"5\") == \"1\"\n"
    },
    {
        "number": 3298,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0 1 2 3\") == \"14\"\nassert solution(\"1 1 2 1 1\") == \"1\"\nassert solution(\"0 1 2 3\") == \"14\"\nassert solution(\"1 1 2 1 1\") == \"1\"\nassert solution(\"5\") == \"14\"\n"
    },
    {
        "number": 3298,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\") == \"14\"\nassert solution(\"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\") == \"1\"\nassert solution(\"1 1 2 1 1\") == \"1\"\nassert solution(\"1 1 2 3\") == \"6\"\nassert solution(\"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\") == \"14\"\n"
    },
    {
        "number": 3298,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''0\n1\n2\n3\n4\n5''') == '14'\nassert solution('''0\n1\n2\n2\n3\n3\n4\n4\n5\n5\n6\n6\n7\n7\n8\n8\n9\n9\n10\n10\n11\n11\n12\n12\n13\n13\n14\n14\n15\n15\n16\n16\n17\n17\n18\n18\n19\n19\n20\n20\n21\n21\n22\n22\n23\n23\n24\n24\n25\n25\n26\n26\n27\n27\n28\n28\n29\n29\n30\n30\n31\n31\n32\n32\n33\n33\n34\n34\n35\n35\n36\n36\n37\n37\n38\n38\n39\n39\n40\n40\n41\n41\n42\n42\n43\n43\n44\n44\n45\n45\n46\n46\n47\n47\n48\n48\n49\n49\n50\n50\n51\n51\n52\n52\n53\n53\n54\n54\n55\n55\n56\n56\n57\n57\n58\n58\n59\n59\n60\n60\n61\n61\n62\n62\n63\n63\n64\n64\n65\n65\n66\n66\n67\n67\n68\n68\n69\n69\n70\n70\n71\n71\n72\n72\n73\n73\n74\n74\n75\n75\n76\n76\n77\n77\n78\n78\n79\n79\n80\n80\n81\n81\n82\n82\n83\n83\n84\n84\n85\n85\n86\n86\n87\n87\n88\n88\n89\n89\n90\n90\n91\n91\n92\n92\n93\n93\n94\n94\n95\n95\n96\n96\n97\n97\n98\n98\n99\n99\n100\n100\n101\n101\n102\n102\n103\n103\n104\n104\n105\n105\n106\n106\n107\n107\n108\n108\n109\n109\n110\n110\n111\n111\n112\n112\n113\n113\n114\n114\n115\n115\n116\n116\n117\n117\n118\n118\n119\n119\n120\n120\n121\n121\n122\n122\n123\n123\n124\n124\n125\n125\n126\n126\n127\n127\n128\n128\n129\n129\n130\n130\n131\n131\n132\n132\n133\n133\n134\n134\n135\n135\n136\n136\n137\n137\n138\n138\n139\n139\n140\n140\n141\n141\n142\n142\n143\n143\n144\n144\n145\n145\n146\n146\n147\n147\n148\n148\n149\n149\n150\n150\n151\n151\n152\n152\n153\n153\n154\n154\n155\n155\n156\n156\n157\n157\n158\n158\n159\n159\n160\n160\n161\n161\n162\n162\n163\n163\n164\n164\n165\n165\n166\n166\n167\n167\n168\n168\n169\n169\n170\n170\n171\n171\n172\n172\n173\n173\n174\n174\n175\n175\n176\n176\n177\n177\n178\n178\n179\n179\n180\n180\n181\n181\n182\n182\n183\n183\n184\n184\n185\n185\n186\n186\n187\n187\n188\n188\n189\n189\n190\n190\n191\n191\n192\n192\n193\n193\n194\n194\n195\n195\n196\n196\n197\n197\n198\n198\n199\n199\n200\n200\n201\n201\n202\n202\n203\n203\n204\n204\n205\n205\n206\n206\n207\n207\n208\n208\n209\n209\n210\n210\n211\n211\n212\n212\n213\n213\n214\n214\n215\n215\n216\n216\n217\n217\n218\n218\n219\n219\n220\n220\n221\n221\n222\n222\n223\n223\n224\n224\n225\n225\n226\n226\n227\n227\n228\n228\n229\n229\n230\n230\n231\n231\n232\n232\n233\n233\n234\n234\n235\n235\n236\n236\n237\n237\n238\n238\n239\n239\n240\n240\n241\n241\n242\n242\n243\n243\n244\n244\n245\n245\n246\n246\n247\n247\n248\n248\n249\n249\n250\n250\n251\n251\n252\n252\n253\n253\n254\n254\n255\n255\n256\n256\n257\n257\n258\n258\n259\n259\n260\n260\n261\n261\n262\n262\n263\n263\n264\n264\n265\n265\n266\n266\n267\n267\n268\n268\n269\n269\n270\n270\n271\n271\n272\n272\n273\n273\n274\n274\n275\n275\n276\n276\n277\n277\n278\n278\n279\n279\n280\n280\n281\n281\n282\n282\n283\n283\n284\n284\n285\n285\n286\n286\n287\n287\n288\n288\n289\n289\n290\n290\n291\n291\n292\n292\n293\n293\n294\n294\n295\n295\n296\n296\n297\n297\n298\n298\n299\n299\n300\n300\n301\n301\n302\n302\n303\n303\n304\n304\n305\n305\n306\n306\n307\n307\n308\n308\n309\n309\n310\n310\n311\n311\n312\n312\n313\n313\n314\n314\n315\n315\n316\n316\n317\n317\n318\n318\n319\n319\n320\n320\n321\n321\n322\n322\n323\n323\n324\n324\n325\n325\n326\n326\n327\n327\n328\n328\n329\n329\n330\n330\n331\n331\n332\n332\n333\n333\n334\n334\n335\n335\n336\n336\n337\n337\n338\n338\n339\n339\n340\n340\n341\n341\n342\n342\n343\n343\n344\n344\n345\n345\n346\n346\n347\n347\n348\n348\n349\n349\n350\n350\n351\n351\n352\n352\n353\n353\n354\n354\n355\n355\n356\n356\n357\n357\n358\n358\n359\n359\n360\n360\n361\n361\n"
    },
    {
        "number": 3298,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 1 2 3\\n4\\n1 1 2 1 1') == '14'\nassert solution('0 1 2 3\\n4\\n1 1 2 1 2\\n1 1 2 1 2') == '1'\nassert solution('0 1 2 3\\n4\\n1 1 2 1 2\\n1 1 2 1 2') == '1'\nassert solution('0 1 2 3\\n4\\n1 2 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1') == '1'\nassert solution('0 1 2 3\\n4\\n1 1 2 1 2\\n1 1 2 1 2\\n1 1 2 1 2') == '0'\n"
    },
    {
        "number": 3298,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 1 2 3') == '14'\nassert solution('1 1 2 1 1') == '1'\nassert solution('2 1 2') == '2'\nassert solution('1') == '1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 3298,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 1 3\") == \"14\"\nassert solution(\"2 1 3\") == \"1\"\nassert solution(\"3 1 2\") == \"14\"\nassert solution(\"5 1 1 2 1\") == \"1\"\nassert solution(\"5 1 2 1 3\") == \"1\"\n"
    },
    {
        "number": 3298,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 1 2 3') == '14'\nassert solution('1 1 2 1 1') == '1'\nassert solution('0 0 0 0 0') == '1'\nassert solution('1 1 1 1 1') == '1'\nassert solution('1 1 1 1 1') == '0'\n"
    },
    {
        "number": 3299,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1 1') == '1'\nassert solution('2 2') == '4'\nassert solution('3 3') == '6'\nassert solution('4 4') == '8'\n"
    },
    {
        "number": 3299,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"88\""
    },
    {
        "number": 3299,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 4\n1 2 3 0\n0 0 5 6\n0 0 7 8\n7 0 0 10''') == '88'\nassert solution('''4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10''') == '-1'\nassert solution('''4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n10 0 0 10''') == '-1'\nassert solution('''4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n10 0 0 10''') == '-1'\nassert solution('''4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n10 0 0 9''') == '-1'\n"
    },
    {
        "number": 3299,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n4 4\n1 2 3 0\n0 0 5 6\n0 0 7 8\n7 0 0 10\n\"\"\") == \"88\"\nassert solution(\n\"\"\"\n1 1\n2\n\"\"\") == \"4\"\nassert solution(\n\"\"\"\n1 1\n2\n\"\"\") == \"1\"\nassert solution(\n\"\"\"\n4 3\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n\"\"\") == \"8\"\nassert solution(\n\"\"\"\n10 10\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3299,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == \"88\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n5 0 0\") == \"20\"\nassert solution(\"6 6\\n1 2 3 4 5 6\\n7 8 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\") == \"112\"\nassert solution(\"8 8\\n1 2 3 4 5 6 7 8\\n0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0\") == \"21\"\nassert solution(\"9 9\\n1 2 3 4 5 6 7 8 9\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\") == \"200\"\n"
    },
    {
        "number": 3299,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\\n\") == \"88\"\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n\") == \"-\"\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\\n1 2 3 4\\n1 1 1 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n\") == \"66\"\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 2 3 4\\n1 1 1 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 2 3 4\\n1 1 1 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 2 3 4\\n1 1 1 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 2 3 4\\n1 1 1 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 2 3 4\\n1 1 1 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 2 3 4\\n1 1 1 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 2 3 4\\n1 1 1 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 2 3 4\\n1 1 1 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 2 3 4\\n1 1 1 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 2 3 4\\n1 1 1 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 2 3 4\\n1 1 1 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 2 3 4\\n1 1 1 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 2 3 4\\n1 1 1 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 2 3 4\\n1 1 1 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 2 3 4\\n1 1 1 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 2 3 4\\n1 1 1 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 2 3 4\\n1 1 1 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 2 3 4\\n1 1 1 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 2 3 4\\n1 1 1 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 2 3 4\\n1 1 1 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 2 3 4\\n1 1 1 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 2 3 4\\n1 1 1 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 2 3 4\\n1 1 1 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 2 3 4\\n1 1 1 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 2 3 4\\n1 1 1 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 2 3 4\\n1 1 1 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 2 3 4\\n1 1 1 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 2 3 4\\n1 1 1 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 2 3 4\\n1 1 1 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 2 3 4\\n1 1 1 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 2 3 4\\n1 1 1 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 2 3 4\\n1 1 1 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 2 3 4\\n1 1 1 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 2 3 4\\n1 1 1 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 2 3 4\\n1 1 1 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 2 3 4\\n1 1 1 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 2 3 4\\n1 1 1 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 2 3 4\\n1 1 1 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 2 3 4\\n1 1 1 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 2 3 4\\n1 1 1 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 2 3 4\\n1 1 1 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 2 3 4\\n1 1 1 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 2 3 4\\n1 1 1 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 2 3 4\\n"
    },
    {
        "number": 3299,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''4 4\n1 2 3 0\n0 0 5 6\n0 0 7 8\n7 0 0 10'''\n) == '88'\nassert solution(\n'''4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10'''\n) == '-1'\nassert solution(\n'''4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n0 0 8 9'''\n) == '-1'\nassert solution(\n'''2 4\n1 2 3 0\n0 4 7 8'''\n) == '8'\nassert solution(\n'''3 3\n1 2 3 0\n0 4 7 8\n7 0 0 10'''\n) == '-1'\n"
    },
    {
        "number": 3299,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 4\") == \"88\"\nassert solution(\"2 5\") == \"10\"\nassert solution(\"4 4\") == \"10\"\nassert solution(\"5 5\") == \"-1\"\nassert solution(\"5 4\") == \"10\"\n"
    },
    {
        "number": 3299,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 4\n1 2 3 0\n0 0 5 6\n0 0 7 8\n7 0 0 10''') == '88'\n\nassert solution('''4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n3 5 7 0''') == '-1'\n"
    },
    {
        "number": 3299,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\n\n\"\"\"\n\"\"\"\nhttps://github.com/imdailey/CTF-Write-5-lines-of-Code-to-Test-the-Correctness-of-Solution\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 3300,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"1 1 1 1\") == \"\"\n"
    },
    {
        "number": 3300,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''1\n1 1\n1 1\n''') == '0.000'\nassert solution(\n'''2\n1 1\n1 1\n''') == '0.000'\nassert solution(\n'''10\n1 100000\n1 100000\n''') == '9999700002.000'\nassert solution(\n'''1\n1 1\n2 1\n2 1\n''') == '0.000'\nassert solution(\n'''10\n1 100000\n1 100000\n1 100000\n1 100000\n1 100000\n1 100000\n1 100000\n1 100000\n1 100000\n1 100000\n''') == '9999700002.000'\n"
    },
    {
        "number": 3300,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1\n1 1''') == '0.000'\nassert solution('''2\n1 1\n1 1''') == '0.000'\nassert solution('''1\n1 99999''') == '9999700002.000'\nassert solution('''3\n1 99999\n99999 99999\n999999999999 99999\n999999999999 99999''') == '999999999999.000'\nassert solution('''1\n1 1\n1 1\n1 1''') == '0.000'\n"
    },
    {
        "number": 3300,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\") == \"0.000\"\nassert solution(\"2\\n1 1\\n1 1\") == \"0.000\"\nassert solution(\"2\\n1 99999\\n99999 99999\") == \"9999700002.000\"\nassert solution(\"2\\n1 99999\\n99999 99999\") == \"9999700002.000\"\nassert solution(\"2\\n1 99999\\n99999 99999\\n99999 99999\") == \"9999700002.000\"\n"
    },
    {
        "number": 3300,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1\n1 1\n1 1''') == '0.000'\nassert solution('''2\n1 99999\n99999 99999''') == '9999700002.000'\nassert solution('''5\n1 2\n1 1\n1 1\n1 1\n1 1''') == '0.000'\nassert solution('''7\n4 1\n4 1\n4 1\n4 1\n4 1\n4 1\n4 1''') == '5.000'\nassert solution('''11\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1\n5 1''') == '6.000'\n"
    },
    {
        "number": 3300,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n1 99999\n99999 99999''') == '9999700002.000'\nassert solution('''2\n1 99999\n99999 99999''') == '9999700002.000'\nassert solution('''7\n1 99999\n99999 99999\n1 99999\n99999 99999\n1 99999\n99999 99999\n99999 99999\n''') == '99999999999.000'\nassert solution('''7\n1 99999\n99999 99999\n1 99999\n99999 99999\n1 99999\n99999 99999\n99999 99999\n1 99999\n99999 99999\n''') == '999999999999.000'\nassert solution('''7\n1 99999\n99999 99999\n1 99999\n99999 99999\n1 99999\n99999 99999\n99999 99999\n1 99999\n99999 99999\n''') == '999999999999.000'\n"
    },
    {
        "number": 3300,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\n1 1\n1 1''') == '0.000'\nassert solution('''5\n5 5\n4 4\n3 3\n2 2\n1 1''') == '2.500'\nassert solution('''1\n1 1\n1 1''') == '0.000'\nassert solution('''10\n9 9\n8 8\n7 7\n6 6\n5 5\n4 4\n3 3\n2 2\n1 1''') == '1.000'\nassert solution('''25\n25 25\n24 24\n23 23\n22 22\n21 21\n20 20\n19 19\n18 18\n17 17\n16 16\n15 15\n14 14\n13 13\n12 12\n11 11\n10 10\n9 9\n8 8\n7 7\n6 6\n5 5\n4 4\n3 3\n2 2\n1 1''') == '2.500'\n"
    },
    {
        "number": 3300,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input_data) == solution(example_input_data)\nprint(\"All set!  :)\")\nprint(solution(input_data))"
    },
    {
        "number": 3300,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n1 1\n1 1''') == '0.000'\nassert solution('''2\n1 99999\n99999 99999''') == '9999700002.000'\nassert solution('''5\n1 99999\n99999 1\n99999 1\n99999 99999\n999999999''') == '1.000'\nassert solution('''3\n10 11\n1 2\n1 1\n1 1\n1 1\n3 4\n1 1\n10 99999\n99999 99999''') == '9.500'\nassert solution('''4\n2 2\n1 1\n1 1\n1 1\n1 1\n2 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1"
    },
    {
        "number": 3300,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1\n1 1''') == '0.000'\nassert solution('''2\n1 1\n1 1''') == '0.000'\nassert solution('''3\n1 99999\n99999 99999\n3 99999''') == '9999700002.000'\nassert solution('''3\n1 99999\n9 99999\n3 99999''') == '9999700002.000'\nassert solution('''5\n1 99999\n9 99999\n3 99999\n3 99999\n3 99999''') == '9999700002.000'\n"
    },
    {
        "number": 3301,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '3'\nassert solution('2\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('3\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '4'\nassert solution('4\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('5\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '2'\n"
    },
    {
        "number": 3301,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"Incorrect input\"\nassert solution(\"6 8 1 6\") == \"3\"\nassert solution(\"6 8 1 6\") == \"Incorrect input\"\nassert solution(\"1 2 5\") == \"Incorrect input\"\nassert solution(\"1 2 5\") == \"3\"\n"
    },
    {
        "number": 3301,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 2 1 3') == '3'\nassert solution('2 2 2 1 3') == '3'\nassert solution('1 1 1 1 1 1') == 'Infinity'\nassert solution('2 2 2 1 3') == '3'\nassert solution('1 1 1 1 1 1') == 'Infinity'\n"
    },
    {
        "number": 3301,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\\n\") == \"3\"\nassert solution(\"3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\\n\") == \"Infinity\"\nassert solution(\"3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\\n\") == \"Infinity\"\nassert solution(\"3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\\n\") == \"Infinity\"\nassert solution(\"3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\\n\") == \"Infinity\"\n"
    },
    {
        "number": 3301,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\\n') == '3'\nassert solution('4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\\n') == 'Infinity'"
    },
    {
        "number": 3301,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6 8 1 6\n1 2 5\n1 3 1\n2 6 6\n2 3 6\n4 2 3\n3 4 1\n4 5 1\n5 6 1\n5\n1 3 6 5 4''') == '3'\nassert solution('''3 4 1 2\n1 2 6\n1 3 2\n1 2 7\n2 3 3\n2\n1 2\nSample Output 2:\nInfinity''') == 'Infinity'\nassert solution('''6 8 1 6\n1 2 5\n1 3 1\n2 6 6\n2 3 6\n4 2 3\n3 4 1\n4 5 1\n5 6 1\n5\n1 3 6 5 4''') == '3'\nprint(solution('''6 8 1 6\n1 2 5\n1 3 1\n2 6 6\n2 3 6\n4 2 3\n3 4 1\n4 5 1\n5 6 1\n5\n1 3 6 5 4'''))\n"
    },
    {
        "number": 3301,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2 1\\n1 3 2\\n1 2 6\") == \"3\"\nassert solution(\"2 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\") == \"Infinity\"\nassert solution(\"5 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\\n\") == \"3\"\nassert solution(\"6 7 1 5\\n1 2 3\\n1 3 1\\n2 3 4\\n2 4 5\\n3 4 6\\n4 5 6\\n5 6 7\\n5\\n1 3 4\\n\") == \"4\"\nassert solution(\"2 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\\n\") == \"Infinity\"\n"
    },
    {
        "number": 3301,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4 5 6\\n1 2 6\\n1 3 2\\n2 3 3\\n2\\n1 2\\n3\\n2\\n1 2') == 3\nassert solution('1 2 3 4 5 6\\n1 2 6\\n1 3 2\\n2 3 3\\n2\\n1 2\\n3\\n2\\n1 2') == '3'\nassert solution('1 2 3 4 5 6\\n1 2 6\\n1 3 2\\n2 3 3\\n2\\n1 2\\n3\\n2\\n1 2') == '3'\nassert solution('1 2 3 4 5 6\\n1 2 6\\n1 3 2\\n2 3 3\\n2\\n1 2\\n3\\n2\\n1 2') == '3'\nassert solution('1 2 3 4 5 6\\n1 2 6\\n1 3 2\\n2 3 3\\n2\\n1 2\\n3\\n2\\n1 2') == '3'\n"
    },
    {
        "number": 3301,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4') == '3'\nassert solution('2 3 1\\n1 2 3\\n1 2 3\\n1 2 3') == '4'\nassert solution('2 3 1\\n1 2 3\\n1 2 3\\n1 2 3') == 'Infinity'\nassert solution('1\\n1') == 'Infinity'\nassert solution('1\\n1\\n1') == 'Infinity'\n"
    },
    {
        "number": 3301,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6 8 1 6\n1 2 5\n1 3 1\n2 6 6\n2 3 6\n4 2 3\n3 4 1\n4 5 1\n5 6 1\n5\n1 3 6 5 4''') == '3'\n\nassert solution('''3 4 1 2\n1 2 6\n1 3 2\n1 2 7\n2 3 3\n2\n1 2\n''') == 'Infinity'\n\nassert solution('''5 5 1 1\n1 2 1\n2 3 1\n3 4 1\n4 5 1\n5\n1 3 1\n1 4 1\n1 5 1\n2 4 1\n2 5 1\n2\n1 3 1\n1 4 1\n1 5 1\n''') == '2'\n\nassert solution('''2 1 1\n1\n2\n2\n2\n2\n''') == '0'\n\nassert solution('''2 1 1\n1\n1\n2\n1\n1\n''') == '0'"
    },
    {
        "number": 3302,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 2\") == \"impossible\"\nassert solution(\"3 1\") == \"000\"\nassert solution(\"3 3\") == \"impossible\"\nassert solution(\"1 1\") == \"000\"\n"
    },
    {
        "number": 3302,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3302,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6 1\n6\n''') == '''impossible\n'''\n\nassert solution('''3 1\n1\n''') == '''000\n001\n011\n010\n110\n111\n101\n100\n'''\n\nassert solution('''4 1\n4\n1\n3\n3\n2\n1\n''') == '''00100100\n01010011\n01010110\n01010101\n00100100\n'''\n\nassert solution('''5 1\n5\n1\n4\n4\n5\n''') == '''00100100\n01010011\n01010110\n01010101\n00100100\n'''\n\nassert solution('''7 1\n7\n1\n6\n6\n7\n6\n7\n''') == '''00010001\n00110110\n01101101\n11101110\n00100100\n01010011\n01010110\n01010101\n'''"
    },
    {
        "number": 3302,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0\\n1') == 'impossible'\nassert solution('6\\n1\\n6') == 'impossible'\nassert solution('6\\n1\\n5') == 'impossible'\nassert solution('4\\n5\\n1') == 'impossible'\nassert solution('4\\n1\\n7') == 'impossible'\n"
    },
    {
        "number": 3302,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 1\\n6\\n') == 'impossible'\nassert solution('3 1\\n1\\n') == '000'\nassert solution('4 1\\n1\\n') == '011'\nassert solution('6 1\\n3\\n') == '110'\nassert solution('6 1\\n3\\n') == '101'\n"
    },
    {
        "number": 3302,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6 1\\n6\\n') == 'impossible'\nassert solution('3 1\\n1\\n') == '000\\n001\\n011\\n010\\n110\\n111\\n101\\n100'\nassert solution('2 2\\n1\\n') == '000\\n001'\nassert solution('1 1\\n1') == '000\\n001'\nassert solution('2 2\\n1\\n') == 'impossible'\n"
    },
    {
        "number": 3302,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"000\"\nassert solution(stdin) == \"111\"\nassert solution(stdin) == \"010\"\nassert solution(stdin) == \"001\"\nassert solution(stdin) == \"001\"\n"
    },
    {
        "number": 3302,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"impossible\"\nassert solution(\"1 1\") == \"impossible\"\nassert solution(\"1 2\") == \"impossible\"\nassert solution(\"1 2 2\") == \"impossible\"\n"
    },
    {
        "number": 3302,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == 'impossible'\nassert solution('1\\n2') == 'impossible'\nassert solution('1\\n3') == 'impossible'\nassert solution('1\\n4') == 'impossible'\nassert solution('1\\n5') == 'impossible'\n"
    },
    {
        "number": 3302,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\n\"\"\"\n\n------Solution------\n\nTime Limit: 5 min(s)\n\n------Analysis------\n\n\"\"\"\n\n\"\"\"\n\n------Answer------\n\nThe idea is the following: Each element of $P$ is considered as the \"color\" of an integer. The integer itself is the most significant bit of the integer. We can use the formula $s_i = s_i \\cdot 2^(n-i-1)$ to multiply the color bit by 2.\n\nIf we look at the first element of $P$ we find that $s_1 = s_1 \\cdot 2^{n-1} = s_1 \\cdot 2^{n-1} = 0$ which is clearly true, as we have $s_1 \\neq 0$, and $s_1 \\neq 1$. So we can safely exclude $s_1$ from our possible combinations.\n\nIf we look at the second element of $P$ we find that $s_2 = s_2 \\cdot 2^{n-2} = s_2 \\cdot 2^{n-2} = 1$ and $s_2 \\neq 0$, and $s_2 \\neq 1$. If we multiply by 2 the second element, we get $s_2 = 0$ and $s_2 = 1$, which means that $s_2 \\in P$. The algorithm works by repeatedly multiplying $s_i$ by 2 and adding $i$ to $s_i$ until it is not in $P$.\n\nWe can continue the same procedure for the rest of the elements in $P$ until we reach the end of $P$.\n\n------Analysis-----\n\nTime Complexity: $O(n)$, the above algorithm is repeated $n$ times for each element in $P$, so it is linear in the number of elements in $P$\nSpace Complexity: $O(1)$\n\n------Answer------\n\nThe above algorithm runs in linear space because it does not use any auxiliary memory.\n\n\n\"\"\""
    },
    {
        "number": 3303,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"10\\n99\") == \"1\"\nassert solution(\"90\\n10\") == \"10\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"30\\n20\") == \"1\"\nassert solution(\"1000000000\\n1000000000\") == \"1\"\n"
    },
    {
        "number": 3303,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10\n99''') == '1'\nassert solution('''9\n99''') == '10'\nassert solution('''9\n9''') == '0'\nassert solution('''1\n1''') == '0'\nassert solution('''10\n100''') == '1'\n"
    },
    {
        "number": 3303,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"100\\n10\") == 10\nassert solution(\"99\\n99\") == 1\nassert solution(\"1000\\n999\") == 1\nassert solution(\"1000\\n1000\") == 1\nassert solution(\"99999\\n99999\") == 1\n"
    },
    {
        "number": 3303,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == expected\n"
    },
    {
        "number": 3303,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == 1\n"
    },
    {
        "number": 3303,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10\n99\n''') == '1'\nassert solution('''90\n10\n''') == '10'\nassert solution('''100\n101\n''') == '10'\nassert solution('''10\n1010\n''') == '10'\nassert solution('''10\n1000\n''') == '100'\n"
    },
    {
        "number": 3303,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''10''') == ''\nassert solution('''99''') == ''\nassert solution('''999''') == ''\nassert solution('''123456789''') == ''\nassert solution('''5''') == ''\n"
    },
    {
        "number": 3303,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('99\\n10') == '1'\nassert solution('10\\n90') == '10'\nassert solution('99999\\n9899') == '1'\nassert solution('999999\\n9899999') == '10'\nassert solution('99999\\n98999') == '10'\n"
    },
    {
        "number": 3303,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10\\n99') == '1'\nassert solution('10\\n10') == '0'\nassert solution('100\\n100') == '0'\nassert solution('99\\n99') == '0'\nassert solution('99\\n99') == '0'\n"
    },
    {
        "number": 3303,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10\\n99') == '1'\nassert solution('99\\n10') == '10'\nassert solution('1000\\n1') == '1000'\nassert solution('9000\\n99999') == '1'\nassert solution('10000\\n9999') == '1000'\n"
    },
    {
        "number": 3304,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '2'\nassert solution('''5''') == '1'\nassert solution('''4''') == '1'\n'''\nn = int(input())\na = list(map(int, input().split()))\np = list(map(int, input().split()))\nv = list(map(int, input().split()))"
    },
    {
        "number": 3304,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n3\\n4\\n3') == '2'\nassert solution('2\\n3\\n4\\n3') == '1'\nassert solution('1\\n4\\n4\\n3') == '1'\nassert solution('2\\n4\\n4\\n3') == '2'\nassert solution('1\\n2\\n4\\n3') == '2'\n"
    },
    {
        "number": 3304,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n2 3 3\n4 1 10\n2 7 3\n''') == '2'\nassert solution('''4\n3 1 3 3\n5 8 7 10\n4 1 2 6\n''') == '1'\nassert solution('''6\n2 4 2 4 2\n4 8 4 8 4\n2 1 1 1 2\n3 2 3 2 3\n3 2 3 2 3\n2 2 2 2 2\n''') == '3'\nassert solution('''8\n2 4 4 2 2 2 2\n4 8 4 8 4 8 4\n2 1 1 1 1 2\n2 2 2 2 2 2\n2 2 2 2 2 2\n2 2 2 2 2 2\n2 2 2 2 2 2\n''') == '2'\nassert solution('''7\n3 1 3 3 1 3\n5 8 7 10 9 5\n4 1 2 6 6 4\n''') == '1'\n"
    },
    {
        "number": 3304,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3''') == '2'\nassert solution('''4''') == '1'\nassert solution('''5''') == '0'\nassert solution('''6''') == '-1'\nassert solution('''7''') == '-1'\n"
    },
    {
        "number": 3304,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1') == 1\nassert solution('2') == 0\nassert solution('3') == 0\nassert solution('4') == 0\nassert solution('5') == 0\n"
    },
    {
        "number": 3304,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3304,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input_string) == expected_output\nprint(solution(input_string))\n"
    },
    {
        "number": 3304,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n2 3 3\n4 1 10\n2 7 3''') == '2'\nassert solution('''4\n3 1 3 3\n5 8 7 10\n4 1 2 6''') == '1'\n'''\n\nimport sys\nN = int(sys.stdin.readline().strip())\nA = list(map(int, sys.stdin.readline().strip().split(' ')))\nP = list(map(int, sys.stdin.readline().strip().split(' ')))\nV = list(map(int, sys.stdin.readline().strip().split(' ')))"
    },
    {
        "number": 3304,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n2 3 3\n4 1 10\n2 7 3\n''') == '2'\n\nassert solution('''3\n4 1 3 3\n5 8 7 10\n4 1 2 6\n''') == '1'\n'''\n"
    },
    {
        "number": 3304,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n2 3 3\n4 1 10\n2 7 3\n''') == '2'\nassert solution('''10\n
    },
    {
        "number": 3305,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"beginning\") == \"5\"\nassert solution(\"velvet\") == \"7\"\n\n\"\"\"\n"
    },
    {
        "number": 3305,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('beginning\\n1 5\\n4 8\\n1 9') == '5'\nassert solution('velvet\\n1 6\\n') == '7'\n"
    },
    {
        "number": 3305,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3305,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\nbeginning\\n1 5\\n4 8\\n1 9') == '5\\n11\\n16'\nassert solution('1 1\\nvelvet\\n1 6\\nSample Output 2') == '7\\n'\nassert solution('1 1\\na\\n1 1\\nSample Output 2') == '3\\n'\nassert solution('1 1\\na\\n1 1\\na\\n1 1\\nSample Output 2') == '2\\n'\nassert solution('1 1\\na\\n1 1\\na\\n1 1\\nSample Output 2') == '2\\n'\n"
    },
    {
        "number": 3305,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"9 3\\nbeginning\\n1 5\\n4 8\\n1 9\") == \"5\\n11\\n16\"\nassert solution(\"7 1\\nvelvet\\n1 6\\nSample Output 2\") == \"7\\n\"\n\"\"\"\n"
    },
    {
        "number": 3305,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3305,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\nfoo\\nbar\\n') == '2\\n2\\n'\nassert solution('3\\nfoo\\nbar\\n') == '2\\n2\\n'\nassert solution('3\\nfoo\\nbar\\n') == '2\\n2\\n'\nassert solution('3\\nfoo\\nbar\\n') == '2\\n2\\n'\nassert solution('3\\nfoo\\nbar\\n') == '2\\n2\\n'\n"
    },
    {
        "number": 3305,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3305,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    '''beginning\n1 5\n4 8\n1 9''') == '5'\nassert solution(\n    '''nonsense\n1 4\n2 3\n2 4\n1 2\n4 3\n3 1\n3 2\n1 3\n1 2\n1 4\n2 3''') == '7'\nassert solution(\n    '''a\n1 4\n1 2\n2 3\n2 4\n1 2\n1 4\n1 3\n1 4\n2 4\n2 3\n1 4\n1 3\n1 2\n1 4\n1 2\n1 4\n1 3''') == '7'\nassert solution(\n    '''oh my god\n1 4\n1 2\n2 3\n2 4\n1 2\n1 4\n1 3\n1 4\n2 4\n2 3\n1 4\n1 3\n1 2\n1 4\n1 2\n1 4\n1 3''') == '7'\nassert solution(\n    '''nonsense\n1 4\n1 2\n2 3\n2 4\n1 2\n1 4\n1 3\n1 4\n2 4\n2 3\n1 4\n1 3\n1 2\n1 4\n1 2\n1 4\n1 3''') == '7'\n"
    },
    {
        "number": 3305,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3306,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3306,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 4\n3 1\n2 2\n1 1''') == '2'\nassert solution('''2 3\n1 23\n2 17''') == '23'\nassert solution('''3 4\n3 1\n2 2\n1 1''') == '2'\nassert solution('''2 3\n1 23\n2 17''') == '23'\nassert solution('''3 4\n1 19\n1 21\n2 22\n1 22\n2 19''') == '19'\n"
    },
    {
        "number": 3306,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"3 4\n3 1\n2 2\n1 1\"\"\") == \"2\"\nassert solution(\"\"\"2 3\n1 23\n2 17\"\"\") == \"23\"\nassert solution(\"\"\"2 3\n1 23\n2 17\"\"\") == \"23\"\n\"\"\""
    },
    {
        "number": 3306,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 4\n3 1\n2 2\n1 1''') == \"2\"\n\nassert solution('''2 3\n1 23\n2 17''') == \"23\"\n\nassert solution('''1000000000 1000000000\n1 1''') == \"1\"\n\nassert solution('''1000000000 1000000000\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == \"1\"\n"
    },
    {
        "number": 3306,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3306,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"3 4\n3 1\n2 2\n1 1\n\"\"\") == \"2\"\n\nassert solution(\"\"\"2 3\n1 23\n2 17\n\"\"\") == \"23\"\n\nassert solution(\"\"\"4 5\n1 21\n1 20\n2 20\n3 19\n4 19\n5 19\n5 19\n5 19\n\"\"\") == \"20\"\n\nassert solution(\"\"\"2 5\n1 21\n1 20\n2 19\n3 19\n4 19\n5 19\n5 19\n5 19\n5 19\n\"\"\") == \"19\"\n\nassert solution(\"\"\"3 6\n1 21\n1 20\n2 20\n3 19\n4 19\n5 19\n6 19\n5 19\n5 19\n5 19\n\"\"\") == \"19\""
    },
    {
        "number": 3306,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input('')) == output(input(''))\nprint('Test cases passed')\n'''\n"
    },
    {
        "number": 3306,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 4\\n3 1\\n2 2\\n1 1') == '2'\nassert solution('2 3\\n1 23\\n2 17\\n') == '23'\n\"\"\"\n"
    },
    {
        "number": 3306,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 4\") == \"2\"\nassert solution(\"2 3\") == \"23\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"5 2\") == \"2\"\n"
    },
    {
        "number": 3306,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 4\n3 1\n2 2\n1 1''') == '2'\nassert solution('''3 4\n3 1\n2 2\n1 1''') == '2'\nassert solution('''3 4\n3 1\n2 2\n1 1''') == '2'\nassert solution('''3 4\n3 1\n2 2\n1 1''') == '2'\nassert solution('''3 4\n3 1\n2 2\n1 1''') == '2'\n"
    },
    {
        "number": 3307,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"-1 -1\") == \"\"\nassert solution(\"0 0\") == \"0.0\"\nassert solution(\"2 0\") == \"1.0\"\n"
    },
    {
        "number": 3307,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n0 0\n2 0\n2 2\n0 2\n0 -1 0 3''') == '0.0000000000'\nassert solution('''6\n0 1\n0 4\n3 6\n7 5\n4 2\n7 0\n5 7 2 0''') == '9.476048311178'\nprint(solution('''3\n0 0\n2 0\n2 2\n0 2\n0 -1 0 3'''))\nprint(solution('''6\n0 1\n0 4\n3 6\n7 5\n4 2\n7 0\n5 7 2 0'''))\n'''\n"
    },
    {
        "number": 3307,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\\n') == '0.0000000000'\nassert solution('0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\\n0 1 0 4\\n0 1 0 3\\n') == '9.476048311178'\nassert solution('0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\\n0 1 0 4\\n0 1 0 3\\n0 2 0 4\\n0 2 0 3\\n') == '19.9393939393939'\nassert solution('0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\\n0 1 0 4\\n0 1 0 3\\n0 2 0 4\\n0 2 0 3\\n0 1 0 4\\n0 1 0 3\\n0 1 0 4\\n0 1 0 3\\n0 2 0 4\\n0 2 0 3\\n') == '19.9393939393939'\n"
    },
    {
        "number": 3307,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\\n') == '0.0000000000'\nassert solution('6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\\n') == '9.476048311178'\n\"\"\"\nfrom typing import List"
    },
    {
        "number": 3307,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\\n\") == \"0.0000000000\"\nassert solution(\"6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\\n\") == \"9.476048311178\""
    },
    {
        "number": 3307,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3307,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\\n\") == \"0.0000000000\"\nassert solution(\"4\\n0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\\n\") == \"0.0000000000\"\nassert solution(\"6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\\n\") == \"9.476048311178\"\n"
    },
    {
        "number": 3307,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n0 0\n2 0\n2 2\n0 2\n0 -1 0 3\n''') == '0.0000000000'\nassert solution('''\n2\n0 1\n0 4\n3 6\n7 5\n4 2\n7 0\n5 7 2 0\n''') == '9.476048311178'\nassert solution('''\n6\n0 1\n0 4\n3 6\n7 5\n4 2\n7 0\n5 7 2 0\n''') == '10.390625'\nassert solution('''\n1\n0\n1\n0\n1\n0\n''') == '0.0'\n'''\n\n'''"
    },
    {
        "number": 3307,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input(\"\")) == \"\"\nassert solution(input(\"0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\\n\")) == \"0.0000000000\"\nassert solution(input(\"0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\\n\")) == \"9.476048311178\"\n"
    },
    {
        "number": 3307,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3') == '0.0000000000'\nassert solution('3\\n0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3') == '0.0000000000'\nassert solution('3\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0') == '9.476048311178'\nassert solution('3\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0') == '9.476048311178'\nassert solution('10\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0') == '9.476048311178'\n"
    },
    {
        "number": 3308,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''5\n2 0\n1 1\n0 2\n-2 0\n0 -2'''\n) == '8.0000000000'\nassert solution(\n'''5\n0.2 0.00\n0 -0.2\n0.0 0\n-0.2 0\n0 0.20'''\n) == '0.0200000000'\nassert solution(\n'''3\n0.2 0.00\n0 0.00\n-0.2 0'''\n) == '0.12000'\nassert solution(\n'''9\n0.2 0.00\n0 0.00\n0.2 0.00\n0 -0.2\n0.2 0.00\n0 -0.2\n-0.2 0.00\n0 0.00'''\n) == '0.0000000000'\nassert solution(\n'''10\n0.2 0.00\n0 0.00\n0.2 0.00\n0 -0.2\n0.2 0.00\n0 -0.2\n-0.2 0.00\n0 0.00\n0.2 0.00'''\n) == '0.0000000000'\n"
    },
    {
        "number": 3308,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n5\n2 0\n1 1\n0 2\n-2 0\n0 -2\n''') == '8.0000000000'\n\nassert solution('''\n5\n2 0\n1 1\n0 2\n-2 0\n0 -2\n''') == '8.0000000000'\n\nassert solution('''\n5\n0.2 0.00\n0 -0.2\n0.0 0\n-0.2 0\n0 0.20\n''') == '0.0200000000'\n'''\n"
    },
    {
        "number": 3308,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 0') == 0\nassert solution('2 0') == 0\nassert solution('1 1') == 0\nassert solution('0 2') == 0\nassert solution('-2 0') == 0\n"
    },
    {
        "number": 3308,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"8.0000000000\"\nassert solution(\"2\") == \"0.0200000000\"\nassert solution(\"3\") == \"0.02500000000\"\nassert solution(\"5\") == \"0.062500000000\"\nassert solution(\"6\") == \"0.087500000000\"\n"
    },
    {
        "number": 3308,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\") == \"8.0000000000\"\nassert solution(\"3\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\\n-1 0\") == \"3.2699\"\nassert solution(\"5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\") == \"0.0200000000\"\nassert solution(\"10\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.2\\n-0.2 0\\n0 0.20\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.2\\n-0.2 0\\n0 0.2\\n-0.2 0\") == \"0.4444444444\"\nassert solution(\"15\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.2\\n-0.2 0\\n0 0.2\\n-0.2 0\\n0 0.2\\n-0.2 0\\n0 0.2\\n-0.2 0\\n0 0.2\\n-0.2 0\\n0 0.2\\n-0.2 0\\n0 0.2\\n-0.2 0\\n0 0.2\\n-0.2 0\\n0 0.2\\n-0.2 0\\n0 0.2\\n-0.2 0\") == \"0.7407407407\"\n"
    },
    {
        "number": 3308,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n2 0\n1 1\n0 2\n-2 0\n0 -2''') == '8.0000000000'\nassert solution('''5\n0.2 0.00\n0 -0.2\n0.0 0\n-0.2 0\n0 0.20''') == '0.0200000000'\n"
    },
    {
        "number": 3308,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n2 0\n1 1\n0 2\n-2 0\n0 -2''') == '8.0000000000'\nassert solution('''5\n0.2 0.00\n0 -0.2\n0.0 0\n-0.2 0\n0 0.20\n''') == '0.0200000000'\nassert solution('''7\n0 0\n-1 0\n1 0\n1 -1\n0 -1\n-1 -1\n0 -2\nSample Input 3:\n8\n0.0 0.0\n-1.0 -1.0\n-0.5 0.5\n1.0 1.0\n0.5 1.0\n-0.5 1.0\n-0.5 -1.0\n-0.5 -1.0\nSample Output 3:\n0.18750000\n"
    },
    {
        "number": 3308,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2') == '8.0000000000'\nassert solution('5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20') == '0.0200000000'\nassert solution('5\\n-0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20') == '0.0200000000'\nassert solution('5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\\n0 0.1') == '0.0390625'\nassert solution('5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\\n0 0.1\\n0 0.1') == '0.0390625'\n"
    },
    {
        "number": 3308,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\\n') == '8.0000000000'\nassert solution('5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\\n') == '0.0200000000'\nassert solution('5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\\n') == '8.0000000000'\nassert solution('5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\\n') == '8.0000000000'\nassert solution('5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\\n') == '8.0000000000'\n"
    },
    {
        "number": 3308,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5''') == '8.0000000000'\nassert solution('''2 0''') == '8.0000000000'\nassert solution('''1 1''') == '8.0000000000'\nassert solution('''0 2''') == '8.0000000000'\nassert solution('''-2 0''') == '8.0000000000'\n"
    },
    {
        "number": 3309,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n"
    },
    {
        "number": 3309,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3309,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"9 4 3\\n1 1 9 9 1 6 6 39 9\\n\") == \"2\"\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == \"2\"\nassert solution(\"10 3 1\\n2 2 2 2 2 2 2 2 2 2\\n\") == \"1\"\nassert solution(\"10 3 2\\n2 2 2 2 2 2 2 2 2 2\\n\") == \"1\"\nassert solution(\"10 4 1\\n1 1 1 1 1 1 1 1 1 1\\n\") == \"1\"\n"
    },
    {
        "number": 3309,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3309,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3309,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4 5\") == \"5\"\nassert solution(\"1 1 1\") == \"2\"\nassert solution(\"2 2 2\") == \"2\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1\") == \"1\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"2\"\n"
    },
    {
        "number": 3309,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3309,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3309,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"9 4 3\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"10 2 2\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"100 10 1\"\"\"\n) == \"0\"\n\nassert solution(\n\"\"\"101 100 9\"\"\"\n) == \"1\"\n\nassert solution(\n\"\"\"10 2 3\"\"\"\n) == \"0\""
    },
    {
        "number": 3309,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"9 4 3\\n1 1 9 9 1 6 6 39 9\") == \"2\"\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\") == \"2\"\nassert solution(\"100000000 9 9 9 1 6 6 39 9\") == \"2\"\nassert solution(\"1002 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3310,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3 2\n1 2 3''') == '3.666666667'\nassert solution('''4 11 4\n10 10 10 10''') == '20.000000000'\nassert solution('''6 11 6\n10 10 10 10 10 10''') == '19.000000007'\nassert solution('''1 100 1\n10 10 10 10 10 10''') == '99.99985833333'\nassert solution('''1 1 1\n10 10 10 10 10 10''') == '100.0'\n"
    },
    {
        "number": 3310,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '20.000000000'\n"
    },
    {
        "number": 3310,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 3 2') == '3.666666667'\nassert solution('4 11 4') == '20.000000000'\nassert solution('2 3 4') == '6.666666667'\nassert solution('1 2 3') == '2.5'\nassert solution('2 3 4') == '4.25'\n"
    },
    {
        "number": 3310,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 3 2''') == '3.666666667'\nassert solution('''4 11 4''') == '20.000000000'\nassert solution('''8 5 2''') == '9.6'\nassert solution('''100 200 100''') == '200'\nassert solution('''50 15 50''') == '99.75'\n"
    },
    {
        "number": 3310,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"20.000000000\"\n\nprint(\"Test1 passed.\")\nprint(\"Test2 passed.\")\nprint(\"Test3 passed.\")\nprint(\"Test4 passed.\")\nprint(\"Test5 passed.\")\nprint(\"Test6 passed.\")\nprint(\"Test7 passed.\")\nprint(\"Test8 passed.\")\nprint(\"Test9 passed.\")\nprint(\"Test10 passed.\")\nprint(\"Test11 passed.\")\nprint(\"Test12 passed.\")\nprint(\"Test13 passed.\")\nprint(\"Test14 passed.\")\nprint(\"Test15 passed.\")\nprint(\"Test16 passed.\")\nprint(\"Test17 passed.\")\nprint(\"Test18 passed.\")\nprint(\"Test19 passed.\")\nprint(\"Test20 passed.\")\nprint(\"Test21 passed.\")\nprint(\"Test22 passed.\")\nprint(\"Test23 passed.\")\nprint(\"Test24 passed.\")\nprint(\"Test25 passed.\")\nprint(\"Test26 passed.\")\nprint(\"Test27 passed.\")\nprint(\"Test28 passed.\")\nprint(\"Test29 passed.\")\nprint(\"Test30 passed.\")\nprint(\"Test31 passed.\")\nprint(\"Test32 passed.\")\nprint(\"Test33 passed.\")\nprint(\"Test34 passed.\")\nprint(\"Test35 passed.\")\nprint(\"Test36 passed.\")\nprint(\"Test37 passed.\")\nprint(\"Test38 passed.\")\nprint(\"Test39 passed.\")\nprint(\"Test40 passed.\")\nprint(\"Test41 passed.\")\nprint(\"Test42 passed.\")\nprint(\"Test43 passed.\")\nprint(\"Test44 passed.\")\nprint(\"Test45 passed.\")\nprint(\"Test46 passed.\")\nprint(\"Test47 passed.\")\nprint(\"Test48 passed.\")\nprint(\"Test49 passed.\")\nprint(\"Test50 passed.\")\nprint(\"Test51 passed.\")\nprint(\"Test52 passed.\")\nprint(\"Test53 passed.\")\nprint(\"Test54 passed.\")\nprint(\"Test55 passed.\")\nprint(\"Test56 passed.\")\nprint(\"Test57 passed.\")\nprint(\"Test58 passed.\")\nprint(\"Test59 passed.\")\nprint(\"Test60 passed.\")\nprint(\"Test61 passed.\")\nprint(\"Test62 passed.\")\nprint(\"Test63 passed.\")\nprint(\"Test64 passed.\")\nprint(\"Test65 passed.\")\nprint(\"Test66 passed.\")\nprint(\"Test67 passed.\")\nprint(\"Test68 passed.\")\nprint(\"Test69 passed.\")\nprint(\"Test70 passed.\")\nprint(\"Test71 passed.\")\nprint(\"Test72 passed.\")\nprint(\"Test73 passed.\")\nprint(\"Test74 passed.\")\nprint(\"Test75 passed.\")\nprint(\"Test76 passed.\")\nprint(\"Test77 passed.\")\nprint(\"Test78 passed.\")\nprint(\"Test79 passed.\")\nprint(\"Test80 passed.\")\nprint(\"Test81 passed.\")\nprint(\"Test82 passed.\")\nprint(\"Test83 passed.\")\nprint(\"Test84 passed.\")\nprint(\"Test85 passed.\")\nprint(\"Test86 passed.\")\nprint(\"Test87 passed.\")\nprint(\"Test88 passed.\")\nprint(\"Test89 passed.\")\nprint(\"Test90 passed.\")\nprint(\"Test91 passed.\")\nprint(\"Test92 passed.\")\nprint(\"Test93 passed.\")\nprint(\"Test94 passed.\")\nprint(\"Test95 passed.\")\nprint(\"Test96 passed.\")\nprint(\"Test97 passed.\")\nprint(\"Test98 passed.\")\nprint(\"Test99 passed.\")\nprint(\"Test100 passed.\")\nprint(\"Test101 passed.\")\nprint(\"Test102 passed.\")\nprint(\"Test103 passed.\")\nprint(\"Test104 passed.\")\nprint(\"Test105 passed.\")\nprint(\"Test106 passed.\")\nprint(\"Test107 passed.\")\nprint(\"Test108 passed.\")\nprint(\"Test109 passed.\")\nprint(\"Test110 passed.\")\nprint(\"Test111 passed.\")\nprint(\"Test112 passed.\")\nprint(\"Test113 passed.\")\nprint(\"Test114 passed.\")\nprint(\"Test115 passed.\")\nprint(\"Test116 passed.\")\nprint(\"Test117 passed.\")\nprint(\"Test118 passed.\")\nprint(\"Test119 passed.\")\nprint(\"Test120 passed.\")\nprint(\"Test121 passed.\")\nprint(\"Test122 passed.\")\nprint(\"Test123 passed.\")\nprint(\"Test124 passed.\")\nprint(\"Test125 passed.\")\nprint(\"Test126 passed.\")\nprint(\"Test127 passed.\")\nprint(\"Test128 passed.\")\nprint(\"Test129 passed.\")\nprint(\"Test130 passed.\")\nprint(\"Test131 passed.\")\nprint(\"Test132 passed.\")\nprint(\"Test133 passed.\")\nprint(\"Test134 passed.\")\nprint(\"Test135 passed.\")\nprint(\"Test136 passed.\")\nprint(\"Test137 passed.\")\nprint(\"Test138 passed.\")\nprint(\"Test139 passed.\")\nprint(\"Test140 passed.\")\nprint(\"Test141 passed.\")\nprint(\"Test142 passed.\")\nprint(\"Test143 passed.\")\nprint(\"Test144 passed.\")\nprint(\"Test145 passed.\")\nprint(\"Test146 passed.\")\nprint(\"Test147 passed.\")\nprint(\"Test148 passed.\")\nprint(\"Test149 passed.\")\nprint(\"Test150 passed.\")\nprint(\"Test151 passed.\")\nprint(\"Test152 passed.\")\nprint(\"Test153 passed.\")\nprint(\"Test154 passed.\")\nprint(\"Test155 passed.\")\nprint(\"Test156 passed.\")\nprint(\"Test157 passed.\")\nprint(\"Test158 passed.\")\nprint(\"Test159 passed.\")\nprint(\"Test160 passed.\")\nprint(\"Test161 passed.\")\nprint(\"Test162 passed.\")\nprint(\"Test163 passed.\")\nprint(\"Test164 passed.\")\nprint(\"Test165 passed.\")\nprint(\"Test166 passed.\")\nprint(\"Test167 passed.\")\nprint(\"Test168 passed.\")\nprint(\"Test169 passed.\")\nprint(\"Test170 passed.\")\nprint(\"Test171 passed.\")\nprint(\"Test172 passed.\")\nprint(\"Test173 passed.\")\nprint(\"Test174 passed.\")\nprint(\"Test175 passed.\")\nprint(\"Test176 passed.\")\nprint(\"Test177 passed.\")\nprint(\"Test178 passed.\")\nprint(\"Test179 passed.\")\nprint(\"Test180 passed.\")\nprint(\"Test181 passed.\")\nprint(\"Test182 passed.\")\nprint(\"Test183 passed.\")\nprint(\"Test184 passed.\")\nprint(\"Test185 passed.\")\nprint(\"Test186 passed.\")\nprint(\"Test187 passed.\")\nprint(\"Test188 passed.\")\nprint(\"Test189 passed.\")\nprint(\"Test190 passed.\")\nprint(\"Test191 passed.\")\nprint(\"Test192 passed.\")\nprint(\"Test193 passed.\")\nprint(\"Test194 passed.\")\nprint(\"Test195 passed.\")\nprint(\"Test196 passed.\")\nprint(\"Test197 passed.\")\nprint(\"Test198 passed.\")\nprint(\"Test199 passed.\")\nprint(\"Test200 passed.\")\nprint(\"Test201 passed.\")\nprint(\"Test202 passed.\")\nprint(\"Test203 passed.\")\nprint(\"Test204 passed.\")\nprint(\"Test205 passed.\")\nprint(\"Test"
    },
    {
        "number": 3310,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 2 2''') == '3.666666667'\nassert solution('''4 11 4''') == '20.000000000'\nprint(solution('''7 10 6'''))\nassert solution('''8 10 7''') == '1.1428571429'\nprint('Testcases passed')\n'''\n'''\n"
    },
    {
        "number": 3310,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 3 2\\n1 2 3') == '3.666666667'\nassert solution('3 3 2\\n1 2 3\\n1 2 3\\n1 2 3') == '20.000000000'\nprint(\"All tests past. Click 'Run' to earn sweet rewards!\")"
    },
    {
        "number": 3310,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3\") == \"3.666666667\"\nassert solution(\"2 3 3\") == \"0.7037037037\"\nassert solution(\"3 4 5\") == \"4.5\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 4711 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772 773 774 775 776 777 778 779 780 781 782 783 784 785 786 787 788 789 790 791 792 793 794 795 796 797 798 799 800 801 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 862 863 864 865 866 867 868 869 870 871 872 873 874 875 876 877 878 879 880 901 902 903 904 905 906 907 908 909 910 911 912 913 914 915 916 917 918 919 920 921 922 923 924 925 926 927 928 929 930 931 932 933 934 935 936 937 938 939 940 941 942 943 944 945 946 947 948 949 950 951 952 953 954 955 956 957 958 959 960 961 962 963 964 965 966 967 968 969 970 971 972 973 974 975 976 977 978"
    },
    {
        "number": 3310,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"3 3 2\n1 2 3\n\"\"\") == \"3.666666667\"\nassert solution(\n    \"\"\"4 11 4\n10 10 10 10\n\"\"\") == \"20.000000000\"\n"
    },
    {
        "number": 3310,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 3 3\\n1 2 3\") == '3.666666667'\nassert solution(\"4 10 4\\n10 10 10 10\") == '20.000000000'\nassert solution(\"1 2 3\\n4 5 6\") == '1.5'\nassert solution(\"2 3 3\\n1 2 3\") == '3.3333333333'\nassert solution(\"10 10 10\\n10 10 10 10\") == '200.000000000'\n"
    },
    {
        "number": 3311,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 42\n''') == '2'\nassert solution('''5 123456789\n''') == '16317634'\nassert solution('''9 819 \n''') == '1783'\nassert solution('''5 452 \n''') == '3653'\nassert solution('''3 310\n''') == '3'\n"
    },
    {
        "number": 3311,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3311,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 42') == '2'\nassert solution('5 123456789') == '16317634'\n'''\n'''\n\n'''\n"
    },
    {
        "number": 3311,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 42') == '2'\nassert solution('5 123456789') == '16317634'\nassert solution('5 42') == '0'\nassert solution('3 4') == '5'\nassert solution('3 4 5') == '1'\n"
    },
    {
        "number": 3311,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 42') == '2'\nassert solution('5 123456789') == '16317634'"
    },
    {
        "number": 3311,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '16317634'\n\n'''\n"
    },
    {
        "number": 3311,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 42') == '2'\nassert solution('5 123456789') == '16317634'\nassert solution('1 5') == '0'\nassert solution('10 2') == '4'\nassert solution('3 10') == '9'\n"
    },
    {
        "number": 3311,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 42') == '2'\nassert solution('5 123456789') == '16317634'\nprint('Test cases passed!')\n"
    },
    {
        "number": 3311,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 42') == '2'\nassert solution('5 123456789') == '16317634'\n'''\n\n'''\n"
    },
    {
        "number": 3311,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '16317634'\n\"\"\"\n"
    },
    {
        "number": 3312,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 1 0 0 2\n1 2 2\n1 1 1\n''') == '0'\nassert solution('''3 1 1 1 8\n0 1 1\n1 0 1\n2 1 1\n1 2 1\n1 2 2\n2 2 3\n0 2 5\n1 2 6\n''') == '4'\nassert solution('''3 2 1 0 2\n1 2 2\n1 1 1\n''') == '0'\nassert solution('''3 2 1 1 8\n0 1 1\n1 0 1\n2 1 1\n1 2 1\n1 2 2\n2 2 3\n0 2 5\n1 2 6\n''') == '4'\nassert solution('''3 3 1 1 2\n0 1 1\n1 0 1\n2 1 1\n1 2 1\n1 2 2\n2 2 3\n0 2 5\n1 2 6\n''') == '7'\n"
    },
    {
        "number": 3312,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '4'\n\"\"\"\n"
    },
    {
        "number": 3312,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 1 0 0 2\") == \"0\"\nassert solution(\"3 1 1 1 8\") == \"0\"\nassert solution(\"3 1 1 1 8\") == \"0\"\nassert solution(\"3 1 0 0 2\") == \"0\"\nassert solution(\"3 1 1 1 8\") == \"4\"\n"
    },
    {
        "number": 3312,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 1 0 0 2\\n1 2 2\\n1 1 1\\n2 1 1\") == \"0\"\nassert solution(\"3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\\n\") == \"4\"\n"
    },
    {
        "number": 3312,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n1\\n') == '1'\nassert solution('3\\n1\\n0\\n0 2\\n1 2 2\\n1 1 1\\n') == '0'\nassert solution('3\\n1 1 1\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\\n') == '4'\nprint(solution(stdin))\n"
    },
    {
        "number": 3312,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''3 1 0 0 2\n1 2 2\n1 1 1\n''') == '0'\n\nassert solution(\n'''3 1 1 1 8\n0 1 1\n1 0 1\n2 1 1\n1 2 1\n1 2 2\n2 2 3\n0 2 5\n1 2 6\n''') == '4'\n\nprint(solution(input()))\n"
    },
    {
        "number": 3312,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 1 0 0 2\n1 2 2\n1 1 1\n''') == '0'\nassert solution('''3 1 1 1 8\n0 1 1\n1 0 1\n2 1 1\n1 2 1\n1 2 2\n2 2 3\n0 2 5\n1 2 6\n''') == '4'\nassert solution('''2 1 2 2\n2 1 1\n1 1 1\n2 1 1\n1 2 1\n1 2 2\n2 1 2\n0 1 1\n1 1 1\n2 1 1\n1 2 1\n1 2 2\n2 2 3\n0 2 5\n1 2 6\n''') == '4'\nassert solution('''3 1 1 1 8\n0 1 1\n1 0 1\n2 1 1\n1 2 1\n1 2 2\n2 2 3\n0 2 5\n1 2 6\n''') == '4'\nassert solution('''3 1 1 1 8\n1 1 1\n2 1 1\n1 2 1\n1 2 2\n2 2 3\n0 2 5\n1 2 6\n''') == '4'\n"
    },
    {
        "number": 3312,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 2') == 0\nassert solution('1 1 1') == 0\nassert solution('3 1 0 0 2') == 0\nassert solution('1 2 2') == 0\nassert solution('3 1 1 1 8') == 0\n"
    },
    {
        "number": 3312,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1 1') == '0'\nassert solution('3 1 0 0 2') == '0'\nassert solution('3 1 1 1 8') == '4'\nassert solution('3 1 1 1 8') == '4'\nassert solution('3 1 1 1 8') == '4'\n"
    },
    {
        "number": 3312,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 1 0 0 2\\n1 2 2\\n1 1 1\\n') == '0'\nassert solution('3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\\n') == '4'\n"
    },
    {
        "number": 3313,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '3'"
    },
    {
        "number": 3313,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9') == '3'\nassert solution('5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45') == '3'\nassert solution('5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\\n1 2') == '0'\nassert solution('5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\\n9 9') == '0'\nassert solution('5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45') == '3'\n"
    },
    {
        "number": 3313,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 1 10 10') == '3'\nassert solution('4 1 100 100') == '3'\nassert solution('4 1 0 0') == '1'\nassert solution('4 1 0 0 1') == '1'\nassert solution('4 1 0 0 1 1') == '0'\n"
    },
    {
        "number": 3313,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 1 10 10\") == \"3\"\nassert solution(\"5 1 100 100\") == \"3\"\nassert solution(\"5 1 100 100\\n4 6\\n4 7\\n7 9\\n\") == \"3\"\nassert solution(\"5 1 100 100\\n4 6\\n4 7\\n7 9\\n\\n\") == \"3\"\nassert solution(\"5 1 100 100\\n4 6\\n4 7\\n7 9\\n\\n3\\n\") == \"2\"\n"
    },
    {
        "number": 3313,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 1 10 10\") == \"3\"\nassert solution(\"5 1 100 100\") == \"3\"\nassert solution(\"5 1 100 100\") == \"3\"\nassert solution(\"5 1 100 100\") == \"3\"\nassert solution(\"5 1 100 100\") == \"3\"\n"
    },
    {
        "number": 3313,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1 100 100') == '3'\nassert solution('5 1 100 100') == '3'\nassert solution('5 1 100 100') == '3'\nassert solution('5 1 100 100') == '3'\nassert solution('5 1 100 100') == '3'\n"
    },
    {
        "number": 3313,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('0 0 10 10') == '0'\nassert solution('1 1 10 10') == '0'\nassert solution('10 10 0 10') == '1'\nassert solution('7 4 5 4') == '1'\n"
    },
    {
        "number": 3313,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 1 10 10''') == '3'\nassert solution('''5 1 100 100''') == '3'\nassert solution('''5 1 10 10\n8 8\n5 1\n4 6\n4 7\n7 9\n''') == '3'\n\nassert solution('''5 1 100 100\n27 75\n79 77\n40 93\n62 41\n52 45''') == '3'\n\nassert solution('''3\n2 2\n2 3\n3 3\n''') == '2'"
    },
    {
        "number": 3313,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 1 10 10\n8 8\n5 1\n4 6\n4 7\n7 9''') == '3'\nassert solution('''5 1 100 100\n27 75\n79 77\n40 93\n62 41\n52 45''') == '3'\nassert solution('''5 1 10 10\n8 8\n5 1\n4 6\n4 7\n7 9''') == '3'\nassert solution('''5 1 10 10\n8 8\n5 1\n4 6\n4 7\n7 9\n10 10\n1 1\n4 1\n4 4\n4 5\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n3 1\n3 2\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n4 1\n4 2\n4 3\n4 4\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n5 1\n5 2\n5 3\n5 4\n5 5\n5 6\n5 7\n5 8\n5 9\n5 10\n6 1\n6 2\n6 3\n6 4\n6 5\n6 6\n6 7\n6 8\n6 9\n6 10\n7 1\n7 2\n7 3\n7 4\n7 5\n7 6\n7 7\n7 8\n7 9\n7 10\n8 1\n8 2\n8 3\n8 4\n8 5\n8 6\n8 7\n8 8\n8 9\n8 10\n9 1\n9 2\n9 3\n9 4\n9 5\n9 6\n9 7\n9 8\n9 9\n9 10\n10 1\n10 2\n10 3\n10 4\n10 5\n10 6\n10 7\n10 8\n10 9\n10 10''') == '10'\nassert solution('''5 1 100 100\n27 75\n79 77\n40 93\n62 41\n52 45\n5 1\n4 6\n4 7\n7 9\n8 1\n8 2\n8 3\n8 4\n8 5\n8 6\n8 7\n8 8\n8 9\n8 10\n9 1\n9 2\n9 3\n9 4\n9 5\n9 6\n9 7\n9 8\n9 9\n9 10\n10 1\n10 2\n10 3\n10 4\n10 5\n10 6\n10 7\n10 8\n10 9\n10 10''') == '10'\n"
    },
    {
        "number": 3313,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3314,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"ABBBAAAA\",\n    \"BBBCCCBB\",\n    \"CCCCAAAC\"\n) == 2\n\nassert solution(\n    \"ABC\",\n    \"ABC\",\n    \"ABC\"\n) == 0\n\nassert solution(\n    \"ABBBAAAA\",\n    \"BBBCCCBB\",\n    \"CCCCAAAC\"\n) == -1\n\nassert solution(\n    \"AAABBCCC\",\n    \"ABBCAAAC\",\n    \"BCCABCBA\"\n) == -1\n\nassert solution(\n    \"AAABBCCC\",\n    \"ABBCAAAC\",\n    \"BCCABCBA\"\n) == 3\n\"\"\"\n\nfrom collections import Counter"
    },
    {
        "number": 3314,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''ABC\nABC\nABC''') == '2'\nassert solution('''ABBBAAAA\nBBBCCCBB\nCCCCAAAC''') == '3'\nassert solution('''ABA\nABA\nAAB\nABA\nBAB\nBBA\nBBB\nBBA\nBBA\nBBA\nBBA\nBAB\nBBA\nBBB\nBBA\nBBA\nBBA\nBBA\nBBA\nBBA\nBBA\nBBA\nBBA\nBBA\nBBA\nBBB\nBBB\nBBA\nBBB\nBBB\nBBB\nBBB\nBBA\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBBB\nBB"
    },
    {
        "number": 3314,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(open(\"test_input_01.txt\").read()) == \"2\"\nassert solution(open(\"test_input_02.txt\").read()) == \"3\"\nassert solution(open(\"test_input_03.txt\").read()) == \"0\"\nassert solution(open(\"test_input_04.txt\").read()) == \"-1\"\nassert solution(open(\"test_input_05.txt\").read()) == \"1\"\n"
    },
    {
        "number": 3314,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"ABCABC\") == 0\nassert solution(\"ABBBAAAA\") == 2\nassert solution(\"BBBCCCBB\") == 3\nassert solution(\"CCCCAAAC\") == 3\nassert solution(\"ABCA\") == -1\n"
    },
    {
        "number": 3314,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"ABBBAAAA\") == 2\nassert solution(\"BBBCCCBB\") == 3\nassert solution(\"CCCCAAAC\") == -1\nassert solution(\"ABBBCABB\") == 2\nassert solution(\"ABBCBAAA\") == 3\n"
    },
    {
        "number": 3314,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3314,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''ABBBAAAA\nBBBCCCBB\nCCCCAAAC''') == 2\nassert solution('''ABBBAAAA\nBBBCCCBB\nBBBBCCBB\nBBBBBBBB''') == -1\nassert solution('''CBA\nABC\nCBA\nABC''') == 1\nassert solution('''CBA\nBCA\nCBAA\nBCBA\nCBBA\nBCBA\nCBAB\nBCAB\nCBAB\nBACB\nBCAA\nBAAB\nBAAA\nBCAA\nBCBB\nBCBB\nAAAC\n''') == 9\nassert solution('''ABC\nBCA\nCBA\nBAC\nACB\nBCB\nBAC\nCAB\nCAB\nABA\n''') == 4\n"
    },
    {
        "number": 3314,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''ABC''') == -1\nassert solution('''ABBBAAAA''') == -1\nassert solution('''ABBBAAAA''') == -1\nassert solution('''BBBCCCBB''') == 2\nassert solution('''CCCCAAAC''') == 3\n"
    },
    {
        "number": 3314,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''ABC''') == 2\nassert solution('''ABBBAAAA''') == 3\nassert solution('''BBBCCCBB''') == -1\nassert solution('''CCCCAAAC''') == 3\nassert solution('''ABCB''') == 2\n"
    },
    {
        "number": 3314,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ABC') == 2\nassert solution('ABBBAAAA') == -1\nassert solution('BBBCCCBB') == 3\nassert solution('CCCCAAAC') == 2\nassert solution('ABBBAAAABBBCCCBB') == -1\n"
    },
    {
        "number": 3315,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"ABA\") == 3\nassert solution(\"AAAAAB\") == 3\nassert solution(\"AAAABB\") == 1\nassert solution(\"AAABBA\") == 3\nassert solution(\"ABABABA\") == 4\n"
    },
    {
        "number": 3315,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('A\\nB\\nAA\\nBBB\\nAAA\\n') == '3'\nassert solution('A\\nABA\\nBBB\\nABABA\\nAAAAAB\\n') == '3'\nassert solution('ABC\\nABC\\nABC\\nABC\\nABC\\n') == '1'\n"
    },
    {
        "number": 3315,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\nA\nB\nAA\nBBB\nAAA''') == '3'\nassert solution('''5\nA\nABA\nBBB\nABABA\nAAAAAB''') == '3'\nassert solution('''8\nT\nA\nTT\nAAA\nAAAAAA\nAAAAAA\nAAA\nAAA''') == '3'\nassert solution('''8\nTT\nAAAAAA\nAAAAAA\nAAAAAA\nAAAAAA\nAAAAAA\nAAAAAA''') == '1'\nassert solution('''8\nT\nTT\nAAAAAA\nAAAAAA\nAAAAAA\nAAAAAA\nAAAAAA''') == '1'\n"
    },
    {
        "number": 3315,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('A') == ''\nassert solution('ABC') == 'AB'\nassert solution('ABCABCABC') == 'AB'\nassert solutionn\n-----Solution Excerpt (not complete, missing test cases)-----"
    },
    {
        "number": 3315,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\nA\\nB\\nAA\\nBBB\\nAAA\\n') == '3'\nassert solution('5\\nA\\nABA\\nBBB\\nABABA\\nAAAAAB\\n') == '3'\nassert solution('4\\nA\\nB\\nAA\\nAA\\n') == '1'\nassert solution('1\\nB\\n') == '1'\nassert solution('2\\nAA\\n') == '0'\n"
    },
    {
        "number": 3315,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3315,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\nA\nB\nAA\nBBB\nAAA\n''') == '3'\nassert solution('''5\nA\nABA\nBBB\nABABA\nAAAAAB\n''') == '3'\nassert solution('''3\nA\nB\nAA\n''') == '1'\nassert solution('''1\nA\n''') == '0'\nassert solution('''5\nC\nD\nE\nF\nG\n''') == '2'\n"
    },
    {
        "number": 3315,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\nA\nB\nAA\nBBB\nAAA''') == '3'\nassert solution('''5\nA\nABA\nBBB\nABABA\nAAAAAB''') == '3'\nassert solution('''4\nA\nB\nAA\nBB''') == '2'\nassert solution('''3\nA\nB\nAA''') == '0'\nassert solution('''2\nA\nBB''') == '0'\n"
    },
    {
        "number": 3315,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3315,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\nA\nB\nAA\nBBB\nAAA\n''') == '3'\nassert solution('''5\nA\nABA\nBBB\nABABA\nAAAAAB\n''') == '3'\nassert solution('''10\nA\nB\nAA\nBBB\nABABA\nAAAAAB\nAAAABB\nBAAAB\nAAABB\nABABABA\nABABABB\nABABABAA\nAAAAABAA\n''') == '8'\nassert solution('''2\nA\nAA\n''') == '2'\nassert solution('''3\nA\nAA\nB\nAA\n''') == '3'\n"
    },
    {
        "number": 3316,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '0.1'"
    },
    {
        "number": 3316,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('100 10 2 1\\n') == '0.1'\nassert solution('100 10 2 2\\n') == '0.1909090909'\n"
    },
    {
        "number": 3316,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('100 10 2 1') == '0.1'\nassert solution('100 10 2 2') == '0.1909090909'\nassert solution('100 10 2 3') == '0.314159265358979'\nassert solution('100 10 2 4') == '0.38074639915328334'\nassert solution('100 10 2 5') == '0.4523809523809523'\n"
    },
    {
        "number": 3316,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3316,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"100 10 2 1\") == \"0.1\"\nassert solution(\"100 10 2 2\") == \"0.1909090909\"\nassert solution(\"100 10 2 3\") == \"0.1919191919\"\nassert solution(\"100 10 2 4\") == \"0.1919191919\"\nassert solution(\"100 10 2 5\") == \"0.1919191919\"\n"
    },
    {
        "number": 3316,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n100 10 2 1\n'''\n) == '0.1'\n\nassert solution(\n'''\n100 10 2 2\n'''\n) == '0.1909090909'\n\nassert solution(\n'''\n10000 10 10 100 100\n'''\n) == '0.01'\n\nassert solution(\n'''\n10000 10 100 1 1\n'''\n) == '0.01'\n\nassert solution(\n'''\n10000 10 100 1 1\n'''\n) == '0.01'\n"
    },
    {
        "number": 3316,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('100 10 2 1') == '0.1'\nassert solution('100 10 2 2') == '0.1909090909'\nassert solution('100 10 2 4') == '0.0909090909'\nassert solution('100 10 2 4') == '0.0909090909'\n\"\"\"\nimport sys\n\nn, m, t, p = [int(x) for x in sys.stdin.readline().split()]\n\nprint(1 - (m - p) / (m * t))\n"
    },
    {
        "number": 3316,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1 1 1') == '0.1'\nassert solution('2 2 2 2') == '0.1909090909'\nassert solution
    },
    {
        "number": 3316,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('100 10 2 1') == '0.1'\nassert solution('100 10 2 2') == '0.1909090909'\n\n\"\"\"\n\n\"\"\"\nThis is my version of solution()\n\n\"\"\""
    },
    {
        "number": 3316,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 3 3 2\") == \"0.1\"\nassert solution(\"100 10 2 2\") == \"0.1909090909\"\nassert solution(\"100 10 2 1\") == \"0.1\"\nassert solution(\"100 10 2 1000\") == \"0.1\"\nassert solution(\"100 10 2 1000000\") == \"0.1\"\n"
    },
    {
        "number": 3317,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ABABABcABABAbAbab') == '4'\nassert solution('BBABABcABABAbAbab') == '0'\nassert solution('BBABABcABABAbAbab') == '5'\nassert solution('ABABABbABABAbAbab') == '5'\nassert solution('BABABAbAbab') == '1'\n"
    },
    {
        "number": 3317,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('ABABABcABABAbAbab') == 4\nassert solution('ABC') == 0\nassert solution('ABABABbAB') == 1\nassert solution('ABCBABA') == 2\nassert solution('AAAABBA') == 3\n"
    },
    {
        "number": 3317,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\nABABABcABABAbAbab\n3\n0 2\n1 6\n0 7\n''') == '4\\n0\\n5'\nassert solution(\n'''\nAABABBbAABABbAAAB\n4\n0 1\n0 3\n1 4\n1 2\n''') == '4\\n1\\n1'\nassert solution(\n'''\nAABABBbAABABbAAAB\n3\n1 1\n0 2\n1 3\n''') == '4\\n0\\n0'\nassert solution(\n'''\nAABABBbAABABbAAAB\n3\n0 1\n0 3\n1 4\n1 2\n''') == '4\\n1\\n1'\nassert solution(\n'''\nAAAAABBB\n4\n0 1\n0 3\n1 4\n1 2\n''') == '4\\n0\\n0'\n"
    },
    {
        "number": 3317,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ABABABcABABAbAbab') == '0'\nassert solution('BABABA') == '4'\nassert solution('BABABA') == '4'\nassert solution('AAAAAA') == '1'\nassert solution('AAABBB') == '2'\n"
    },
    {
        "number": 3317,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"ABBABABcABABAbAbab\") == \"4\", '1st example'\nassert solution(\n\"ABABABAbAbab\") == \"4\", '2nd example'\nassert solution(\n\"ABABABABcABABAbAbab\") == \"4\", '3rd example'\nassert solution(\n\"ABAAAAABAAAAAB\") == \"1\", '4th example'\nassert solution(\n\"AABBAAABAAAAAAABBB\") == \"8\", '5th example'\n"
    },
    {
        "number": 3317,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(STDIN) == \"AAAABBBBAABBAAAAAABBA\"\n\"\"\"\n"
    },
    {
        "number": 3317,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('AB') == 'AB'\nassert solution('abc') == 'ab'\nassert solution('ABC') == 'AB'\n"
    },
    {
        "number": 3317,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n\"ABABABcABABAbAbab\"\n3\n0 2\n1 6\n0 7\n\"\"\") == \"0\"\nassert solution(\n\"\"\"\n\"ABABABcABABAbAbab\"\n3\n0 2\n1 6\n0 7\n\"\"\") == \"4\"\nassert solution(\n\"\"\"\n\"ABABABcABABAbAbab\"\n3\n0 2\n1 6\n0 7\n\"\"\") == \"5\"\nassert solution(\n\"\"\"\n\"ABABABcABABAbAbab\"\n3\n0 2\n1 6\n0 7\n\"\"\") == \"5\"\nassert solution(\n\"\"\"\n\"AAAA\"\n1\n0 1\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3317,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output\nprint(solution(input))\n'''\n\nfrom collections import defaultdict\n"
    },
    {
        "number": 3317,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(ABABABcABABAbAbab) == 4\nassert solution(ABABAbAbab) == 0\nassert solution(ABABABbAbab) == 5\nassert solution(ABABABbAbab) == 5\nassert solution(ABABABbAbab) == 5\n"
    },
    {
        "number": 3318,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3\n0\n0\n1\n''') == '2'\nassert solution('''4 3\n0\n1\n1\n''') == '3'\nassert solution('''4 3\n1\n1\n1\n''') == '2'\nassert solution('''4 3\n1\n0\n1\n''') == '2'\nassert solution('''4 3\n0\n1\n0\n''') == '3'\n"
    },
    {
        "number": 3318,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == str(2)\n"
    },
    {
        "number": 3318,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 1\\n0\\n0\\n1') == '2'\nassert solution('3 2\\n0\\n0\\n1') == '2'\nassert solution('3 2\\n0\\n0\\n1') == '2'\nassert solution('7 10\\n0\\n0\\n0\\n0\\n1\\n0\\n0\\n0') == '4'\nassert solution('10 100\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0"
    },
    {
        "number": 3318,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2'\n"
    },
    {
        "number": 3318,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3\\n4 0\\n0 1') == 2\nassert solution('1 2 3\\n4 0\\n0 1\\n2 1\\n0 1') == 4\nassert solution('1 2 3\\n4 0\\n0 1\\n2 1\\n0 1\\n2 1') == 2\nassert solution('2 3 1\\n3 0\\n0 1\\n1 2') == 3\nassert solution('1 2 3\\n4 0\\n0 1\\n2 1\\n0 1\\n2 1\\n2 1') == 2\n"
    },
    {
        "number": 3318,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '2'\n\"\"\"\n"
    },
    {
        "number": 3318,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0\\n0\\n1\\n') == '2'\n\nprint(solution(stdin))\n"
    },
    {
        "number": 3318,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0\\n0\\n0\\n\") == \"2\"\nassert solution(\"0\\n1\\n0\\n\") == \"2\"\nassert solution(\"0\\n2\\n0\\n\") == \"1\"\nassert solution(\"0\\n4\\n0\\n\") == \"2\"\nassert solution(\"0\\n2\\n0\\n\") == \"3\"\n"
    },
    {
        "number": 3318,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 0\\n0\\n1') == '2'\nassert solution('0 0\\n0\\n1\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1') == '4'\nassert solution('2 2\\n0\\n1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1') == '6'\nassert solution('10 10\\n0\\n1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1') == '10'\nassert solution('100 100\\n0\\n1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1\\n11 1\\n12 1\\n13 1\\n14 1\\n15 1\\n16 1\\n17 1\\n18 1\\n19 1\\n20 1\\n21 1\\n22 1\\n23 1\\n24 1\\n25 1\\n26 1\\n27 1\\n28 1\\n29 1\\n30 1\\n31 1\\n32 1\\n33 1\\n34 1\\n35 1\\n36 1\\n37 1\\n38 1\\n39 1\\n40 1\\n41 1\\n42 1\\n43 1\\n44 1\\n45 1\\n46 1\\n47 1\\n48 1\\n49 1\\n50 1\\n51 1\\n52 1\\n53 1\\n54 1\\n55 1\\n56 1\\n57 1\\n58 1\\n59 1\\n60 1\\n61 1\\n62 1\\n63 1\\n64 1\\n65 1\\n66 1\\n67 1\\n68 1\\n69 1\\n70 1\\n71 1\\n72 1\\n73 1\\n74 1\\n75 1\\n76 1\\n77 1\\n78 1\\n79 1\\n80 1\\n81 1\\n82 1\\n83 1\\n84 1\\n85 1\\n86 1\\n87 1\\n88 1\\n89 1\\n90 1\\n91 1\\n92 1\\n93 1\\n94 1\\n95 1\\n96 1\\n97 1\\n98 1\\n99 1') == '6'\n"
    },
    {
        "number": 3318,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 3\\n0\\n0\\n1\\n') == '2'\nassert solution('4 3\\n0\\n0\\n1\\n') == '2'\nassert solution('4 3\\n0\\n0\\n1\\n') == '2'\nassert solution('4 3\\n0\\n0\\n1\\n') == '2'\nassert solution('4 3\\n0\\n0\\n1\\n') == '2'\n"
    },
    {
        "number": 3319,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 8 8 8\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1''') == '1'\nassert solution('''3 4 4 4\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n3 4 4 4 4\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n3 4 4 4 4\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n3 4 4 4 4\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n3 4 4 4 4\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n3 4 4 4 4\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1''') == '0'\nassert solution('''4 4 4 4\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n3 4 4 4 4\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n3 4 4 4 4\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n3 4 4 4 4\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n3 4 4 4 4\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n3 4 4 4 4\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n3 4 4 4 4\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n3 4 4 4 4\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n3 4 4 4 4\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n3 4 4 4 4\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n3 4 4 4 4\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1''') == '3'\n\nassert solution('''2 4 4 4\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n2 4 4 4 4\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n2 4 4 4 4\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n2 4 4 4 4\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n2 4 4 4 4\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n2 4 4 4 4\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n2 4 4 4 4\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n2 4 4 4 4\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n2 4 4 4 4\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n2 4 4 4 4\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n2 4 4 4 4\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n2 4 4 4 4\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n2 4 4 4 4\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n2 4 4 4 4\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1''') == '4'\n\nassert solution('''10 10 10 10\n4 3 4 2 1 0\n1 2 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1''') == '1'"
    },
    {
        "number": 3319,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 8 8 8') == '1'\nassert solution('12 4 1 4 5 3 -2') == 'P0: 22 1 4 2 6 -1 0'\nassert solution('10 1 2 1 8 -6 1') == 'P0: 22 1 4 2 6 -1 0'\n\n'''\n\nimport sys"
    },
    {
        "number": 3319,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == '1'\nassert solution('1 2 3 4\\n2 3 4 5 6\\n6 7 8 9 10\\n1 1 1 1 1') == '3'\nprint('tests passed')\n\n-----\n\n----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----"
    },
    {
        "number": 3319,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == '1\\nP0: 22 1 4 2 6 -1 0'\nassert solution('4 6 6 4\\n12 11 11 12 5 11 -10 10\\n5 6 7 4 9 6 -3 -5 5\\n8 -8 9 -7 7 5 5 -6 -4 -1 -2 0') == '2\\nP0: 22 1 4 2 6 -1 0\\nP1: 22 1 4 2 5 -1 0'\nassert solution('4 5 4 4\\n12 11 11 12 5 11 -10 10\\n5 6 7 4 9 6 -3 -5 5\\n8 -8 9 -7 7 5 5 -6 -4 -1 -2 0') == '2\\nP0: 22 1 4 2 5 -1 0\\nP1: 22 1 4 2 6 -1 0'\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n2 2 2 2 2 -1 2 1 2 -2 -2 1') == '2\\nP0: 22 1 4 2 6 -1 0\\nP1: 22 1 4 2 5 -1 0'\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n1 1 1 1 1 -1 -1 1 1 -1 -1 1\\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1') == '3\\nP0: 22 1 4 2 6 -1 0\\nP1: 22 1 4 2 5 -1 0\\nP2: 22 1 4 2 7 -1 0'\n"
    },
    {
        "number": 3319,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"2 8 8 8\"\"\") == \"1\"\nassert solution(\n\"\"\"12 4 1 4 5 3 -2\"\"\") == \"P0: 22 1 4 2 6 -1 0\"\nassert solution(\n\"\"\"10 1 2 1 8 -6 1\"\"\") == \"P0: 22 1 4 2 6 -1 0\"\nassert solution(\n\"\"\"2 4 4 4 2 -2\"\"\") == \"P0: 22 1 4 2 6 -1 0\"\nassert solution(\n\"\"\"2 10 1 2 1 8 -6 1\"\"\") == \"P0: 22 1 4 2 6 -1 0\"\n"
    },
    {
        "number": 3319,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == '1'\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n2 1 2 1 8 -6 1\\n10 1 2 1 8 -6 1\\n2 1 2 1 8 -6 1') == '0'\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n2 1 2 1 8 -6 1\\n10 1 2 1 8 -6 1\\n2 1 2 1 8 -6 1\\n10 1 2 1 8 -6 1') == '2'\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n2 1 2 1 8 -6 1\\n10 1 2 1 8 -6 1\\n2 1 2 1 8 -6 1\\n10 1 2 1 8 -6 1\\n2 1 2 1 8 -6 1\\n10 1 2 1 8 -6 1') == '0'\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n2 1 2 1 8 -6 1\\n10 1 2 1 8 -6 1\\n2 1 2 1 8 -6 1\\n10 1 2 1 8 -6 1\\n2 1 2 1 8 -6 1\\n10 1 2 1 8 -6 1\\n2 1 2 1 8 -6 1\\n10 1 2 1 8 -6 1') == '2'\n"
    },
    {
        "number": 3319,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 3 2 3\") == \"\"\nassert solution(\"2 3 2 2\") == \"\"\nassert solution(\"2 3 2 1\") == \"\"\nassert solution(\"2 3 2 3\") == \"\"\n"
    },
    {
        "number": 3319,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8 8 8 8') == '1'\nassert solution('2 8 8 8') == '2'\nassert solution('1 2 1 2 1') == '1'\nassert solution('12 4 1 4 5 3 -2') == '1'\nassert solution('10 1 2 1 8 -6 1') == '2'\n"
    },
    {
        "number": 3319,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == '1'\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n2 1 2 1 8 -6 1') == '1'\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n2 1 2 1 8 -6 1\\n12 4 1 4 5 3 -2') == '1'\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n2 1 2 1 8 -6 1\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == '1'\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n2 1 2 1 8 -6 1\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n2 1 2 1 8 -6 1') == '1'\n"
    },
    {
        "number": 3319,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == '1'\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == '1'\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == '1'\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == '1'\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == '1'\n"
    },
    {
        "number": 3320,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\\n2\\n3\\n4\"\nprint(solution(stdin))"
    },
    {
        "number": 3320,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(open(\"test_input_011.txt\").read()) == \"2\"\nassert solution(open(\"test_input_012.txt\").read()) == \"6\"\n"
    },
    {
        "number": 3320,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(open(\"test_file.txt\", \"r\").read()) == \"4\\n\"\nassert solution(open(\"test2_file.txt\", \"r\").read()) == \"1\\n\"\nassert solution(open(\"test3_file.txt\", \"r\").read()) == \"4\\n\"\nassert solution(open(\"test4_file.txt\", \"r\").read()) == \"3\\n\"\nassert solution(open(\"test5_file.txt\", \"r\").read()) == \"2\\n\"\n"
    },
    {
        "number": 3320,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n''') == '3'\n\nassert solution('''4 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n''') == '2'\n\nassert solution('''5 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n2 3\n1 3\n3 4\n''') == '1'\n\nassert solution('''4 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n''') == '3'\n\nassert solution('''4 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n''') == '2'\n"
    },
    {
        "number": 3320,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 7\") == \"1\"\nassert solution(\"4 7\") == \"1\"\nassert solution(\"4 7\") == \"1\"\nassert solution(\"4 7\") == \"1\"\nassert solution(\"4 7\") == \"1\"\n"
    },
    {
        "number": 3320,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n\") == \"2\\n\"\nassert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n\") == \"1\\n\"\nassert solution(\"2 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n3 4\\n\") == \"3\\n\"\nassert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n\") == \"2\\n\"\nassert solution(\"2 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n3 4\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3320,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n''') == '''1\n2\n3\n'''\n\nassert solution('''5 7\n1 2 3\n1 3 4\n1 4 5\n1 5 6\n1 4 4\n1 3 3\n2 4 4\n2 5 5\n3 4 4\n3\n1 2\n1 3\n3 4\n''') == '''2\n1\n3\n'''\n"
    },
    {
        "number": 3320,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n\nprint(\"Success.\")"
    },
    {
        "number": 3320,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 7\") == \"1\"\nassert solution(\"3 4\") == \"2\"\nassert solution(\"4 7\") == \"1\"\nassert solution(\"3 4\") == \"2\"\nassert solution(\"4 7\") == \"1\"\n"
    },
    {
        "number": 3320,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(open('test_input.txt').read()) == '2'\nassert solution(open('test_input_2.txt').read()) == '6'\nassert solution(open('test_input_3.txt').read()) == '8'\nassert solution(open('test_input_4.txt').read()) == '4'\nassert solution(open('test_input_5.txt').read()) == '5'\n"
    },
    {
        "number": 3321,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n') == '2'\n\"\"\"\n"
    },
    {
        "number": 3321,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '1 2 3 4 5 6'\nassert solution(stdin) == '1 2 3 4 5 6'\nassert solution(stdin) == '1 2 3 4 5 6'\nassert solution(stdin) == '1 2 3 4 5 6'\nassert solution(stdin) == '1 2 3 4 5 6'\n"
    },
    {
        "number": 3321,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n6\n1 5 4 3 2 6\n1 2 5 4 3 6\n''') == '2'\n'''\n"
    },
    {
        "number": 3321,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n4\n1 2 3 4 5\n1 3 2 4 5\n''') == '1 2 3 4 5'\nassert solution('''\n4\n1 5 4 3 2\n1 2 5 4 3\n''') == '3 4 1 2'\nassert solution('''\n6\n1 5 4 3 2 6\n1 2 5 4 3 6\n''') == '2 3 4 1 5'\nassert solution('''\n5\n1 2 3 4 5\n1 2 3 4 5\n''') == '1 2 3 4 5'\nassert solution('''\n4\n1 2 3 4\n1 2 3 4\n''') == '3 4 1 2'\n"
    },
    {
        "number": 3321,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\"\n\"\"\"\n"
    },
    {
        "number": 3321,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin[2]\nassert solution(stdin) == stdin[1]\nassert solution(stdin) == stdin[0]\n"
    },
    {
        "number": 3321,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n2\n1 5 4 3 2 6\n1 2 5 4 3 6\n''') == '2'\n\nassert solution('''\n6\n1 5 4 3 2 6\n1 2 5 4 3 6\n''') == '2'\n\nassert solution('''\n7\n1 5 4 3 2 6 7\n1 2 5 4 3 6 7\n''') == '5'\n\nassert solution('''\n8\n1 5 4 3 2 6 7 8\n1 2 5 4 3 6 7 8\n''') == '8'\n\nassert solution('''\n9\n1 5 4 3 2 6 7 8 9\n1 2 5 4 3 6 7 8 9\n''') == '3'"
    },
    {
        "number": 3321,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3321,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3 4 5 6\") == \"\"\nassert solution(\"1 2 3 4 5 6 7 8\") == \"\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"\"\n"
    },
    {
        "number": 3321,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6\n1 5 4 3 2 6\n1 2 5 4 3 6\n''') == '2'\n\nassert solution('''6\n1 5 4 3 2 6\n1 2 5 4 3 6\n1 4 1 3 2 6\n''') == '1'\n\nassert solution('''6\n1 4 1 3 2 6\n1 2 5 4 3 6\n1 4 1 3 2 6\n''') == '1'\n\nassert solution('''6\n1 2 3 4 5 6\n1 2 3 4 5 6\n1 2 3 4 5 6\n''') == '2'\n'''\n"
    },
    {
        "number": 3322,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80'''\n) == \"60\"\nassert solution(\n'''1 4 2\n1 100 1 10\n2 100 3 10'''\n) == \"100\"\nassert solution(\n'''1 4 2\n1 100 1 10\n2 100 3 10'''\n) == \"100\"\nassert solution(\n'''1 4 2\n1 100 1 10\n2 100 3 10'''\n) == \"100\"\nassert solution(\n'''1 4 2\n1 100 1 10\n2 100 3 10'''\n) == \"100\"\n"
    },
    {
        "number": 3322,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '60'\n\"\"\""
    },
    {
        "number": 3322,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '60'\n"
    },
    {
        "number": 3322,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"60\"\n'''\n"
    },
    {
        "number": 3322,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3\\n4') == '60'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7') == '-1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12') == '-1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30') == '-1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316"
    },
    {
        "number": 3322,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80''') == '60'\nassert solution('''4 3 2\n1 35 2 90\n2 30 3 30\n3 45 1 65\n4 45 2 70\n''') == '-1'\nassert solution('''2 1 2\n1 30 2 50\n2 70 3 10\n''') == '60'\nassert solution('''2 1 2\n1 45 2 60\n2 70 3 10\n''') == '-1'\nassert solution('''1 1 2\n1 30 2 50\n2 70 3 10\n''') == '-1'\n"
    },
    {
        "number": 3322,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80''') == '60'\nassert solution(\n'''2 2 1\n1 30 2 50\n2 70 3 10''') == '-1'\nassert solution(\n'''1 1 1\n1 30 2 50\n2 70 3 10''') == '-1'\nassert solution(\n'''1 1 1\n1 30 2 50\n2 70 3 10\n1 30 2 50\n2 70 3 10''') == '-1'\nassert solution(\n'''1 1 1\n1 30 2 50\n1 70 3 10\n2 70 3 10\n1 30 2 50\n2 70 3 10''') == '-1'\n"
    },
    {
        "number": 3322,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    \"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\"\n) == \"60\"\n'''\n"
    },
    {
        "number": 3322,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80''') == '60'\nassert solution('''3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80''') == '60'\nassert solution('''3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80''') == '60'\nassert solution('''3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80''') == '60'\nassert solution('''3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80''') == '60'\n"
    },
    {
        "number": 3322,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80''') == '60'\nassert solution('''3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80''') == '60'\nassert solution('''3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80''') == '60'\nassert solution('''3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80''') == '60'\nassert solution('''3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80''') == '60'\n"
    },
    {
        "number": 3323,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 3323,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1\n1 1 1''') == 'Case #1: 1'\nassert solution('''2\n1 1 1\n1 1 1\n2 1 1''') == 'Case #1: 1\\nCase #2: 2'\nassert solution('''3\n1 1 1\n1 1 1\n1 1 1\n2 1 1\n2 1 1\n2 1 1''') == 'Case #1: 1\\nCase #2: 2\\nCase #3: 1'\nassert solution('''4\n2\n1 1 1\n1 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1''') == 'Case #1: 1\\nCase #2: 2\\nCase #3: 1\\nCase #4: 1'\nassert solution('''5\n1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n2 1 1\n2 1 1''') == 'Case #1: 1\\nCase #2: 2\\nCase #3: 1\\nCase #4: 1\\nCase #5: 1'\n"
    },
    {
        "number": 3323,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n3\n10000 0 0\n0 10000 0\n0 0 10000''') == '''Case #1: 1\nCase #2: 2'''\n\nassert solution('''1\n2\n2 2 2\n2 2 2''') == '''Case #1: 1\nCase #2: 1'''\n\nassert solution('''1\n1\n2 1 2\n2 1 2''') == '''Case #1: 1\nCase #2: 1'''\n\nassert solution('''1\n2\n0 0 0\n2 1 2\n2 1 2''') == '''Case #1: 1\nCase #2: 1'''\n\nassert solution('''2\n1\n1000 0 0\n1 100 1\n1 1 1000\n1 1 1000''') == '''Case #1: 1\nCase #2: 1\nCase #3: 2'''"
    },
    {
        "number": 3323,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\n3\n10000 0 0\n0 10000 0\n0 0 10000\n3\n5000 0 0\n0 2000 0\n0 0 4000''') == 'Case #1: 1\\nCase #2: 2'\n'''\nimport sys"
    },
    {
        "number": 3323,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == 'Case #1: 1'\nassert solution('1\\n1\\n1') == 'Case #1: 1'\nassert solution('1\\n1\\n1\\n1') == 'Case #1: 1'\nassert solution('1\\n1\\n1\\n1\\n1') == 'Case #1: 1'\nassert solution('2\\n3\\n2000 0 0') == 'Case #1: 1\\nCase #2: 2'\n"
    },
    {
        "number": 3323,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3323,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2') == 'Case #1: 1\\nCase #2: 2'\nassert solution('2\\n3\\n10000 0 0\\n0 10000 0\\n0 0 10000') == 'Case #1: 1\\nCase #2: 2\\nCase #3: 3'\nassert solution('2\\n3\\n5000 0 0\\n0 2000 0\\n0 0 4000') == 'Case #1: 1\\nCase #2: 2\\nCase #3: 3'\nassert solution('10\\n1000000000 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n"
    },
    {
        "number": 3323,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n3\\n10000 0 0\\n0 10000 0\\n0 0 10000') == 'Case #1: 1\\nCase #2: 2'\nassert solution('5\\n10\\n4000 0 0\\n2000 0 0\\n0 2000 0\\n100 0 0\\n0 0 4000') == 'Case #1: 3\\nCase #2: 2\\nCase #3: 2\\nCase #4: 1\\nCase #5: 1'\n'''\n\nfrom collections import Counter"
    },
    {
        "number": 3323,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n3\n10000 0 0\n0 10000 0\n0 0 10000\n3\n5000 0 0\n0 2000 0\n0 0 4000''') == \"\"\"Case #1: 1\nCase #2: 2\n\"\"\"\n\nassert solution('''5\n1\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0"
    },
    {
        "number": 3323,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n2\n3\n10000 0 0\n0 10000 0\n0 0 10000\n3\n5000 0 0\n0 2000 0\n0 0 4000\n''') == 'Case #1: 1\\nCase #2: 2'\nassert solution('''\n3\n4\n1 1 1\n0 0 0\n0 0 0\n2\n0 0 0\n0 0 0\n0 0 0\n''') == 'Case #1: 2\\nCase #2: 1\\nCase #3: 2'\n'''\n'''"
    },
    {
        "number": 3324,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0') == '6 6 6 1'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 3 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 3 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 3 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 3 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 3 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 3 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 3 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0') == '18 48 96 72 384'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 3 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 3 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 3 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 3 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 3 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 3 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 3 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 3 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 3 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 3 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 3 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 3 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 3 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 3 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 3 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\"
    },
    {
        "number": 3324,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '6 6 6 1'\nassert solution(\n'''+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n-1 2 H 2 O 1\n+1 2 H 2 O 1\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '6 6 6 1'\nassert solution(\n'''+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n-1 2 H 2 O 1\n+1 2 H 2 O 1\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n-1 2 H 2 O 1\n+1 2 H 2 O 1\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '6 6 6 1'\nassert solution(\n'''+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n-1 2 H 2 O 1\n+1 2 H 2 O 1\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n-1 2 H 2 O 1\n+1 2 H 2 O 1\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '6 6 6 1'\nassert solution(\n'''+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n-1 2 H 2 O 1\n+1 2 H 2 O 1\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n-1 2 H 2 O 1\n+1 2 H 2 O 1\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '6 6 6 1'\n"
    },
    {
        "number": 3324,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\") == \"6 6 6 1\"\nassert solution(\"+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n-1 1 O 2\\n+1 2 H 2 O 1\") == \"6 6 6 1\"\nassert solution(\"+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n-1 1 O 2\\n+1 2 H 2 O 1\\n+1 2 C 1 O 2\") == \"6 6 6 1\"\nassert solution(\"+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n-1 1 O 2\\n+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\") == \"6 6 6 1\"\nassert solution(\"+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n-1 1 O 2\\n+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\") == \"6 6 6 1\"\n"
    },
    {
        "number": 3324,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\") == \"6 6 6 1\"\nassert solution(\"+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n\") == \"6 6 6 1\"\nassert solution(\"+1 1 O2\\n+1 1 H2\\n-1 1 O1\\n-1 1 H1\\n0 0\\n\") == \"1 1 1 0\"\nassert solution(\"+1 1 O2\\n+1 1 H2\\n-1 1 O1\\n-1 1 H1\\n0 0\\n\") == \"1 1 1 0\"\nassert solution(\"+1 1 O2\\n+1 1 H2\\n-1 1 O1\\n-1 1 H1\\n0 0\\n\") == \"1 1 1 0\"\n"
    },
    {
        "number": 3324,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0') == '6 6 6 1'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0') == '6 6 6 1'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0') == '6 6 6 1'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0') == '6 6 6 1'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0') == '6 6 6 1'\n"
    },
    {
        "number": 3324,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0') == '6 6 6 1'\n\nprint(solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0'))\n\n'''\n\nimport sys"
    },
    {
        "number": 3324,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '6 6 6 1'\nassert solution('''+1 6 C 1 H 5 C 1 O 1 O 1 H 1\n-1 6 C 2 H 6 O 2\n+1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '6 6 6 1'\nassert solution('''+1 6 C 1 H 5 C 1 O 1 O 1 H 1\n-1 6 C 2 H 6 O 2\n+1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '6 6 6 1'\nassert solution('''+1 6 C 1 H 5 C 1 O 1 O 1 H 1\n-1 6 C 2 H 6 O 2\n+1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '6 6 6 1'\nassert solution('''+1 6 C 1 H 5 C 1 O 1 O 1 H 1\n-1 6 C 2 H 6 O 2\n+1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '6 6 6 1'\n"
    },
    {
        "number": 3324,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0') == '6 6 6 1'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0') == '6 6 6 1'\n\"\"\"\n"
    },
    {
        "number": 3324,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"+1 2 H 2 O 1\") == \"6 6 6 1\"\nassert solution(\"+1 2 C 1 O 2\") == \"6 6 6 1\"\nassert solution(\"-1 1 O 2\") == \"3 3 3 1\"\nassert solution(\"-1 3 C 6 H 12 O 6\") == \"1 3 1 2 3 6 1\"\nassert solution(\"0 0\") == \"0 0\"\n"
    },
    {
        "number": 3324,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''+1 6 C 1 H 5 C 1 O 1 O 1 H 1'''\n'''+1 2 C 1 O 2'''\n'''-1 1 O 2'''\n'''-1 3 C 6 H 12 O 6'''\n'''0 0''') == '6 6 6 1'\n\nassert solution(\n'''+1 2 H 2 O 1\n+1 2 C 1 O 2'''\n'''-1 1 O 2'''\n'''-1 3 C 6 H 12 O 6'''\n'''0 0''') == '6 6 6 1'\n\nassert solution(\n'''+1 6 C 1 H 5 C 1 O 1 O 1 H 1'''\n'''+1 2 C 1 O 2'''\n'''-1 1 O 2'''\n'''-1 3 C 6 H 12 O 6'''\n'''0 0''') == '6 6 6 1'\n\nassert solution(\n'''+1 2 H 2 O 1\n+1 2 C 1 O 2'''\n'''-1 1 O 2'''\n'''-1 3 C 6 H 12 O 6'''\n'''0 0''') == '6 6 6 1'\n\nassert solution(\n'''+1 2 H 2 O 1\n+1 2 C 1 O 2'''\n'''-1 1 O 2'''\n'''-1 3 C 6 H 12 O 6'''\n'''0 0''') == '6 6 6 1'"
    },
    {
        "number": 3325,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(sample_input_0) == \"20.83\"\nassert solution(sample_input_1) == \"29.04\"\nassert solution(sample_input_2) == \"28.64\"\nassert solution(sample_input_3) == \"20.83\"\nassert solution(sample_input_4) == \"29.04\"\n"
    },
    {
        "number": 3325,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40') == '20.83'\nassert solution('1\\n15 17') == '9.5'\nassert solution('1\\n10 17') == '11.5'\nassert solution('1\\n15 17\\n0 0') == '10.5'\nassert solution('1\\n15 17\\n0 0\\n0 0') == '9.5'\n"
    },
    {
        "number": 3325,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n10 0\n0 0\n0 0\n10 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n"
    },
    {
        "number": 3325,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(dedent(\"\"\"\n    30 50\n    20 0\n    100 0\n    100 40\n    20 40\n\"\"\")) == \"20.83\"\n\nassert solution(dedent(\"\"\"\n    3\n    10 0\n    20 0\n    50 0\n\"\"\")) == \"10.00\"\n\nassert solution(dedent(\"\"\"\n    3\n    10 100\n    20 40\n    50 40\n\"\"\")) == \"60.00\"\n\nassert solution(dedent(\"\"\"\n    2\n    40 40\n    40 40\n\"\"\")) == \"40.00\"\n\nassert solution(dedent(\"\"\"\n    7\n    40 40\n    10 0\n    50 40\n    20 0\n    30 50\n    40 40\n\"\"\")) == \"120.00\""
    },
    {
        "number": 3325,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '20.83'"
    },
    {
        "number": 3325,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 10\\n1 10\\n1 10\\n1 10\\n1 10') == '0.0'\nassert solution('1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10') == '0.0'\nassert solution('3 10\\n1 10\\n1 10\\n1 10') == '0.0'\nassert solution('1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10') == '0.0'\nassert solution('3 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10') == '0.0'\n"
    },
    {
        "number": 3325,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input1) == output1\nprint(\"Correct solution passed.\")\n\nassert solution(input2) == output2\nprint(\"Correct solution passed.\")\n\nassert solution(input3) == output3\nprint(\"Correct solution passed.\")\n\nassert solution(input4) == output4\nprint(\"Correct solution passed.\")\n\nassert solution(input5) == output5\nprint(\"Correct solution passed.\")"
    },
    {
        "number": 3325,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(INPUT_01) == OUTPUT_01\nassert solution(INPUT_02) == OUTPUT_02\nassert solution(INPUT_03) == OUTPUT_03\nassert solution(INPUT_04) == OUTPUT_04\nassert solution(INPUT_05) == OUTPUT_05\n"
    },
    {
        "number": 3325,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    '''4\n    30 50\n    20 0\n    100 0\n    100 40\n    20 40''') == '20.83'\nassert solution(\n    '''5\n    -1 -1\n    0 0\n    1 1\n    3 1\n    5 -1''') == '-1.6'\nassert solution('''5\n    -1 -1\n    0 0\n    1 1\n    3 1\n    5 -1''') == '-1.6'\nassert solution('''3\n    1 1\n    2 1\n    3 1''') == '0'\nassert solution('''3\n    1 1\n    2 1\n    3 0''') == '-1'\n"
    },
    {
        "number": 3325,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '20.83'\n"
    },
    {
        "number": 3326,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3\\n7 6 5') == '1'\nassert solution('2 2 3\\n1 1 1\\n2 2 2') == '4'\nassert solution('3 3 3\\n2 2 2\\n2 2 2\\n2 2 2') == '6'\nassert solution('2 3 2\\n2 1 1\\n1 1 1\\n1 1 1') == '9'\nassert solution('5 5 4\\n5 5 5\\n5 5 5\\n5 5 5') == '1'\n"
    },
    {
        "number": 3326,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"49\"\nassert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\") == \"49\"\nassert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\") == \"49\"\nassert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\") == \"49\"\nassert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\") == \"49\"\n"
    },
    {
        "number": 3326,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 3\n1 2 5\n7 6 4\n9 8 3''') == '49'\nassert solution('''6 3\n1 2 5\n7 6 4\n9 8 3\n4 1 5\n6 7 8\n1 2 3''') == '49'\nassert solution('''4 2\n1 2 5\n7 6 4\n9 8 3''') == '1'\nassert solution('''10 10\n1 2 5\n7 6 4\n9 8 3\n4 1 5\n6 7 8\n1 2 3\n9 7 8\n6 5 4\n3 2 1''') == '1'\nassert solution('''15 15\n1 2 5\n7 6 4\n9 8 3\n4 1 5\n6 7 8\n1 2 3\n9 7 8\n6 5 4\n3 2 1''') == '1'\n"
    },
    {
        "number": 3326,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 2 5''') == '49'\nassert solution('''3 3\n1 2 5\n7 6 4\n9 8 3''') == '49'\nassert solution('''4 5\n1 2 3 4\n5 6 7 8\n9 10 11 12\n13 14 15 16''') == '289'\nassert solution('''2 4\n1 2 3 4\n5 6 7 8''') == '0'\nassert solution('''1 1\n1''') == '1'\n"
    },
    {
        "number": 3326,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 5\\n7 6 4\\n9 8 3') == '49'\n'''\n\nimport sys"
    },
    {
        "number": 3326,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '49'\n"
    },
    {
        "number": 3326,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 5') == '49'\nassert solution('3 3') == '49'\nassert solution('3 4') == '3'\nassert solution('1 4 1') == '3'\nassert solution('2 4 1') == '0'\n"
    },
    {
        "number": 3326,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 3\n1 2 5\n7 6 4\n9 8 3''') == '49'\nassert solution('''2 2\n1 1\n1 1''') == '1'\nassert solution('''2 3\n1 1 2\n3 2 1''') == '2'\nassert solution('''4 4\n1 1 1 1\n1 2 2 2\n1 3 3 3\n4 4 4 4''') == '0'\nassert solution('''2 4\n1 1 1 1\n1 2 2 2\n1 3 3 3''') == '8'\n"
    },
    {
        "number": 3326,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 5\\n7 6 4\\n9 8 3') == '49'"
    },
    {
        "number": 3326,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 1\n2 2\n5 5''') == '49'\nassert solution('''1 2\n7 6\n5 4''') == '49'\nassert solution('''1 1\n2 2\n5 5\n9 9\n8 8\n3 3''') == '49'\nassert solution('''1 1\n1 2\n3 4\n3 5\n2 1\n4 3\n5 6\n6 7\n7 8''') == '48'\nassert solution('''1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n3 1\n3 2\n3 3''') == '48'\n"
    },
    {
        "number": 3327,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 15') == '1CROSSWORD2'\nassert solution('2 10') == '1CROSSWORD2'\nassert solution('7 15') == '1CROSSWORD2'\nassert solution('7 12') == '1CROSSWORD2'\nassert solution('20 15') == '1CROSSWORD2'\n"
    },
    {
        "number": 3327,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input_stream(\"\".join([\n    \"1 15\",\n    \"##.........####\",\n    \"1\",\n    \"CROSSWORD\",\n]))) == \"\".join([\n    \"##CROSSWORD####\",\n])\nassert solution(input_stream(\"\".join([\n    \"1 15\",\n    \"##.........####\",\n    \"1\",\n    \"CROSSWORD\",\n]))) == \"\".join([\n    \"##CROSSWORD####\",\n])\nassert solution(input_stream(\"\".join([\n    \"1 15\",\n    \"##.........####\",\n    \"1\",\n    \"CROSSWORD\",\n]))) == \"\".join([\n    \"##CROSSWORD####\",\n])\nassert solution(input_stream(\"\".join([\n    \"1 15\",\n    \"##.........####\",\n    \"1\",\n    \"CROSSWORD\",\n]))) == \"\".join([\n    \"##CROSSWORD####\",\n])\nassert solution(input_stream(\"\".join([\n    \"1 15\",\n    \"##.........####\",\n    \"1\",\n    \"CROSSWORD\",\n]))) == \"\".join([\n    \"##CROSSWORD####\",\n])\n"
    },
    {
        "number": 3327,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3327,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 15\n##.........####\n1\nCROSSWORD''') == '''##CROSSWORD####'''\n\nassert solution('''1 15\n##.........####\n1\nCROSSWORD\n\n1\nCROSSWORD''') == '''##CROSSWORD####'''\n\nassert solution('''1 15\n##.........####\n1\nCROSSWORD\n\n1\nCROSSWORD\n\n1\nCROSSWORD''') == '''CROSSWORD####'''\n\nassert solution('''1 15\n##.........####\n1\nCROSSWORD\n\n1\nCROSSWORD\n\n1\nCROSSWORD\n\n1\nCROSSWORD''') == '''CROSSWORD####'''\n\nassert solution('''1 15\n##.........####\n1\nCROSSWORD\n\n1\nCROSSWORD\n\n1\nCROSSWORD\n\n1\nCROSSWORD\n\n1\nCROSSWORD\n\n1\nCROSSWORD\n\n1\nCROSSWORD''') == '''CROSSWORD####'''"
    },
    {
        "number": 3327,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 15\n##.........####\n1\nCROSSWORD''') == '''##CROSSWORD####'''\n\nassert solution('''1 15\n##.........####\n1\nCROSSWORD''') == '''CROSSWORD####'''\n\nassert solution('''1 15\n##.........####\n1\nCROSSWORD''') == '''CROSSWORD####'''\n\nassert solution('''1 15\n##.........####\n1\nCROSSWORD''') == '''CROSSWORD####'''\n\nassert solution('''1 15\n##.........####\n1\nCROSSWORD''') == '''CROSSWORD####'''"
    },
    {
        "number": 3327,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\nassert solution(stdin) == stdin\n\"\"\"\n\nR, C = map(int, stdin.split())\ngrid = [stdin[i:i+C] for i in range(0, R*C, C)]\nN = int(stdin.split()[0])\nword_list = [stdin[i:i+2] for i in range(0, N*2, 2)]"
    },
    {
        "number": 3327,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 15\n##.........####\n1\nCROSSWORD\n''') == '''##CROSSWORD####'''\nassert solution('''1 15\n##.........####\n1\nCROSSWORD\n''') == '''##CROSSWORD####'''\nassert solution('''1 15\n##.........####\n1\nCROSSWORD\n''') == '''##CROSSWORD####'''\nassert solution('''1 15\n##.........####\n1\nCROSSWORD\n''') == '''##CROSSWORD####'''\nassert solution('''1 15\n##.........####\n1\nCROSSWORD\n''') == '''##CROSSWORD####'''\n"
    },
    {
        "number": 3327,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 15\\n##.........####\\n1\\nCROSSWORD') == '##CROSSWORD####'\nassert solution('1 15\\n##.........####\\n1\\nCROSSWORD') == '##CROSSWORD####'\nassert solution('1 15\\n##.........####\\n1\\nCROSSWORD') == '##CROSSWORD####'\nassert solution('1 15\\n##.........####\\n1\\nCROSSWORD') == '##CROSSWORD####'\nassert solution('1 15\\n##.........####\\n1\\nCROSSWORD') == '##CROSSWORD####'\n"
    },
    {
        "number": 3327,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 15\n##.........####\n1\nCROSSWORD''') == '''##CROSSWORD####'''\nassert solution('''1 15\n##.........####\n1\nCROSSWORD''') == '''##CROSSWORD####'''\nassert solution('''1 19\n###.....###.####\n1\nCROSSWORD\n''') == '''CROSSWORD'''\nassert solution('''1 19\n###.....###.####\n1\nCROSSWORD''') == '''CROSSWORD'''\nassert solution('''1 19\n###.....###.####\n1\nCROSSWORD''') == '''CROSSWORD'''\n"
    },
    {
        "number": 3327,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 15\n##.........####\n1\nCROSSWORD\n''') == '''##CROSSWORD####'''\nassert solution('''1 3\n.#...###.####\n.#...###.####\n"
    },
    {
        "number": 3328,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 1\n2 7 6\n9 5 1\n4 3 8''') == '31'\nassert solution('''5 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1''') == '6'\nassert solution('''10 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1''') == '51'\nassert solution('''4 1\n4 4 4 4\n4 4 4 4\n4 4 4 4\n4 4 4 4''') == '16'\nassert solution('''6 1\n6 6 6 6 6\n6 6 6 6 6\n6 6 6 6 6\n6 6 6 6 6\n6 6 6 6 6''') == '0'\n"
    },
    {
        "number": 3328,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 1\n2 7 6\n9 5 1\n4 3 8''') == '31'\n'''\n\nimport sys"
    },
    {
        "number": 3328,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 1\n2 7 6\n9 5 1\n4 3 8''') == '31'\nassert solution('''3 2\n1 2 3\n2 5 5\n3 3 3''') == '36'\nassert solution('''3 3\n1 1 1\n2 2 2\n3 3 3''') == '39'\nassert solution('''4 2\n1 1 1 1\n1 2 2 2\n1 3 3 3\n1 4 4 4''') == '37'\nassert solution('''5 1\n1 1 1 1 1''') == '50'\n"
    },
    {
        "number": 3328,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\nassert solution(\"3 1\\n2 7 6\\n9 5 1\\n4 3 8\") == \"31\\n\"\n\"\"\"\n\nfrom functools import lru_cache\n\nN, K = map(int, input().split())\n\ntable = [list(map(int, input().split())) for _ in range(N)]\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 3328,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 1\n2 7 6\n9 5 1\n4 3 8''') == '31'\n'''\nN, K = map(int, stdin.split())\nT = [list(map(int, stdin.split())) for _ in range(N)]\n\nmin_sum = None\nfor i in range(N):\n    for j in range(N):\n        if min_sum is None or min_sum > T[i][j]:\n            min_sum = T[i][j]\nfor i in range(N):\n    for j in range(N):\n        if T[i][j] > min_sum:\n            T[i][j] -= min_sum\n\nprint(sum(map(sum, T)))\n'''\n"
    },
    {
        "number": 3328,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3\\n4 5 6') == '31'\nassert solution('3 1\\n2 7 6\\n9 5 1') == '31'\nassert solution('2 3\\n4 5 6\\n7 8 9') == '18'\nassert solution('1 2\\n3 4') == '6'\nassert solution('4 3\\n2 1 3\\n4 1') == '4'\n"
    },
    {
        "number": 3328,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 1\n2 7 6\n9 5 1\n4 3 8''') == '31'\nassert solution('''3 1\n2 7 6\n9 5 1\n4 3 8\n5 9 2\n4 2 3\n''') == '21'\nassert solution('''3 2\n1 1 1\n1 1 1\n2 2 2\n2 2 2\n1 1 1\n1 1 1\n''') == '8'\nassert solution('''3 1\n2 7 6\n9 5 1\n4 3 8\n5 9 2\n4 2 3\n''') == '31'\nassert solution('''6 1\n2 7 6\n9 5 1\n4 3 8\n5 9 2\n4 2 3\n5 2 1\n''') == '24'\n"
    },
    {
        "number": 3328,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2\\n3 4') == \"3\"\nassert solution('1 1\\n2 2') == \"2\"\nassert solution('3 3\\n2 4 5\\n4 3 5') == \"3\"\nassert solution('1 2\\n3 4\\n5 6\\n7 8') == \"5\"\nassert solution('2 2\\n7 8') == \"7\"\n"
    },
    {
        "number": 3328,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n1') == '0'\nassert solution('2\\n2') == '2'\nassert solution('1\\n1') == '0'\nassert solution('2\\n1') == '1'\n"
    },
    {
        "number": 3328,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 1\n2 7 6\n9 5 1\n4 3 8''') == '31'\nassert solution('''3 1\n2 7 6\n9 5 1\n4 3 8''') == '31'\nassert solution('''5 4\n1 3 2 4 6\n3 1 3 4 7\n2 1 4 8 9\n6 7 4 5 8\n5 1 8 9 10''') == '27'\nassert solution('''5 4\n1 3 2 4 6\n3 1 3 4 7\n2 1 4 8 9\n6 7 4 5 8\n5 1 8 9 10''') == '27'\nassert solution('''5 4\n1 3 2 4 6\n3 1 3 4 7\n2 1 4 8 9\n6 7 4 5 8\n5 1 8 9 10''') == '27'\n"
    },
    {
        "number": 3329,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('BBW') == 2\nassert solution('WWWWBW') == 1\nassert solution('BBWWBW') == 2\nassert solution('WWWBBWWW') == 3\nassert solution
    },
    {
        "number": 3329,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"BBW\") == \"2\"\nassert solution(\"WWW\") == \"2\"\nassert solution(\"WWWWWW\") == \"4\"\nassert solution(\"WWWWWWWWWW\") == \"8\"\nassert solution(\"WWWWWWWWWWWW\") == \"16\"\n\"\"\"\nfrom sys import stdin\nfrom collections import Counter"
    },
    {
        "number": 3329,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"BBW\") == \"BBWWWW\"\nassert solution(\"WWWWBBWWW\") == \"WWWWWWWWW\"\nassert solution
    },
    {
        "number": 3329,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('BBW\\nWWBBBW') == '2'\nassert solution('BBWWBW\\nWWWWBBWWBBWW') == '8'\nassert solution
    },
    {
        "number": 3329,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 1\nBBW''') == '2'\nassert solution('''3 1\n
    },
    {
        "number": 3329,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"BBW\") == \"2\"\nassert solution(\"BWBBWB\") == \"3\"\nassert solution(\"WWBBBW\") == \"4\"\nassert solution(\"WWWWWWW\") == \"4\"\nassert solution(\"WWWWWWWW\") == \"4\"\n"
    },
    {
        "number": 3329,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"BBW\", \"BBWWBW\", 3, 1) == \"2\"\nassert solution(\"BWBBWW\", \"WWBBWBW\", 2, 1) == \"2\"\nassert solution
    },
    {
        "number": 3329,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"BBW\") == \"2\"\nassert solution(\"WWWWBBWBBBBWWWWWWWBBWBBBWWWWWWWWWWWWBBWWWWWWWWWWWWWWWWBBWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW"
    },
    {
        "number": 3329,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n3 1\nBBW\n''') == '2'\nassert solution('''\n5 1\nWBBWW\n''') == '2'\nassert solution('''\n20 1\n
    },
    {
        "number": 3329,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3\\nBBW\\n\") == \"2\"\nassert solution(\"3\\nBBWWBW\\n\") == \"1\"\nassert solution(\"10\\nWWWWWWWWWWWWWWWBBBWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWBBBWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\\nWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWBBBWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\\nWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWBBBWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\\nWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWBBBWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\\nWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWBBBWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\") == \"1\"\nassert solution(\"4\\nBBBBWBBBB\\nBBBBWBBBB\\nBBBBWBBBB\\nBBBBWBBBB\\n\") == \"0\"\nassert solution(\"4\\nWBBBBWBBW\\nWBBBBWBBW\\nWBBBBWBBW\\nWBBBBWBBW\\n\") == \"2\"\n"
    },
    {
        "number": 3330,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '0.556'\n\"\"\"\n"
    },
    {
        "number": 3330,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 1\\n1 2 1\\n1 1') == '0.556'\nassert solution('0 1\\n1 2 1\\n1 1') == '0.556'\nassert solution('3 1\\n3 2 1\\n1 2 3\\n1 1') == '0.556'\nassert solution('3 1\\n3 2 1\\n1 2 3\\n1 1') == '0.556'\nassert solution('3 1\\n3 2 1\\n1 2 3\\n1 1') == '0.556'\n"
    },
    {
        "number": 3330,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == \"0.556\"\nassert solution(input()) == \"1.000\"\nassert solution(input()) == \"0.333\"\nassert solution(input()) == \"0.555\"\nassert solution(input()) == \"0.556\"\n\n\"\"\"\n\nn, l = map(int, input().split())\na = list(map(int, input().split()))\nc = list(map(int, input().split()))\n\na_sum = sum(a)\nc_sum = sum(c)\n"
    },
    {
        "number": 3330,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '0.556'\n"
    },
    {
        "number": 3330,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 1\n3 2 1\n1 2 3''') == '0.556'\nassert solution('''3 5\n3 2 1\n1 2 3''') == '0.125'\nassert solution('''3 3\n3 2 1\n1 2 3''') == '0.333'\nassert solution('''3 6\n3 2 1\n1 2 3''') == '0.5'\nassert solution('''3 2\n3 2 1\n1 2 3''') == '0.3333333333333333'\n"
    },
    {
        "number": 3330,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n3\\n1 2 3\") == \"0.556\"\n\n---29.31min"
    },
    {
        "number": 3330,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0.556\"\n"
    },
    {
        "number": 3330,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 1') == '0.556'\nassert solution('3 3 3') == '0.5'\nassert solution('3 2 1') == '0.556'\nassert solution('1 2 3') == '0.5'\nassert solution('2 1 2') == '0.5'\n"
    },
    {
        "number": 3330,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0.556\"\nassert solution(stdin) == \"0.556\"\n\nassert solution(stdin) == \"0.110\"\nassert solution(stdin) == \"0.110\"\n\nassert solution(stdin) == \"0.221\"\n"
    },
    {
        "number": 3330,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n3 2 1\\n1 2 3\") == \"0.556\"\nassert solution(\"2 5\\n1 1 5 5\\n5 5 1 1 5\") == \"10.0\"\nassert solution(\"2 3\\n1 3 2\\n5 5 3\") == \"0.667\"\nassert solution(\"3 7\\n2 1 4 1\\n5 4 3 3\\n1 1 2 2\") == \"30.0\"\nassert solution(\"2 2\\n1 1 2\\n1 2 1\") == \"0.5\"\n"
    },
    {
        "number": 3331,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 4 3 2''') == '3'\nassert solution('''5 4 2 3''') == '1'\nassert solution('''5 4 2 4''') == '1'\nassert solution('''5 5 2 3''') == '3'\nassert solution('''5 5 3 2''') == '2'\n"
    },
    {
        "number": 3331,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 3\n\"\"\"\n"
    },
    {
        "number": 3331,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5 4 3 2\") == \"3\"\nassert solution(\"5 5 5 5\") == \"5\"\nassert solution(\"5 5 5 5 5\") == \"5\"\nassert solution(\"5 5 5 5 5 5\") == \"5\"\nassert solution(\"5 5 5 5 5 5 5\") == \"5\"\n"
    },
    {
        "number": 3331,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n5 4 3 2\n''') == '3'\nassert solution('''\n5 4 3 2\n''') == '3'\nassert solution('''\n5 4 3 2\n''') == '3'\nassert solution('''\n5 4 3 2\n''') == '3'\nassert solution('''\n5 4 3 2\n''') == '3'\n"
    },
    {
        "number": 3331,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 4 3 2\") == \"3\"\n"
    },
    {
        "number": 3331,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 4 3 2') == '3'\nassert solution('4 3 2 1') == '1'\nassert solution('0 0 0 0') == '0'\nassert solution('1 0 0 1') == '1'\nassert solution('0 0 0 0') == '0'\n"
    },
    {
        "number": 3331,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 4 3 2\") == 3\nassert solution(\"5 4 3 1\") == 1\nassert solution(\"3 5 3 5\") == 0\nassert solution(\"0 1 1 1\") == 3\nassert solution(\"1 1 1 1\") == 1\n"
    },
    {
        "number": 3331,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5 4 3 2\") == \"3\"\n\"\"\"\n"
    },
    {
        "number": 3331,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 4 3 2''') == \"3\"\nassert solution('''0 4 1 2''') == \"0\"\nassert solution('''5 4 3 2''') == \"3\"\nassert solution('''5 4 3 2''') == \"3\"\nassert solution('''0 4 1 2''') == \"0\"\n"
    },
    {
        "number": 3331,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 3\n"
    },
    {
        "number": 3332,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(fileread(\"data/test_4.txt\")) == \"13\"\nassert solution(fileread(\"data/test_2.txt\")) == \"3\"\nassert solution(fileread(\"data/test_3.txt\")) == \"4\"\nassert solution(fileread(\"data/test_1.txt\")) == \"9\"\nprint(\"You're good to go!\")\n\"\"\""
    },
    {
        "number": 3332,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(TEST_INPUT) == TEST_EXPECT\n\nprint(solution(sys.stdin.read().strip()))\n"
    },
    {
        "number": 3332,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"13\"\n"
    },
    {
        "number": 3332,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"5\"\n\n\"\"\"\n\nimport sys\nfrom typing import List"
    },
    {
        "number": 3332,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == str(13)\n\n---\n\n## Testcases\n\n![](https://s3-us-west-2.amazonaws.com/web-assets/testcases/data/data/data-20.png)\n\n![](https://s3-us-west-2.amazonaws.com/web-assets/testcases/data/data/data-21.png)\n\n![](https://s3-us-west-2.amazonaws.com/web-assets/testcases/data/data/data-22.png)\n\n![](https://s3-us-west-2.amazonaws.com/web-assets/testcases/data/data/data-23.png)\n\n![](https://s3-us-west-2.amazonaws.com/web-assets/testcases/data/data/data-24.png)\n\n![](https://s3-us-west-2.amazonaws.com/web-assets/testcases/data/data/data-25.png)\n\n![](https://s3-us-west-2.amazonaws.com/web-assets/testcases/data/data/data-26.png)\n\n![](https://s3-us-west-2.amazonaws.com/web-assets/testcases/data/data/data-27.png)\n\n![](https://s3-us-west-2.amazonaws.com/web-assets/testcases/data/data/data-28.png)\n\n![](https://s3-us-west-2.amazonaws.com/web-assets/testcases/data/data/data-29.png)\n\n![](https://s3-us-west-2.amazonaws.com/web-assets/testcases/data/data/data-30.png)\n\n![](https://s3-us-west-2.amazonaws.com/web-assets/testcases/data/data/data-31.png)\n\n![](https://s3-us-west-2.amazonaws.com/web-assets/testcases/data/data/data-32.png)\n\n![](https://s3-us-west-2.amazonaws.com/web-assets/testcases/data/data/data-33.png)\n\n![](https://s3-us-west-2.amazonaws.com/web-assets/testcases/data/data/data-34.png)\n\n![](https://s3-us-west-2.amazonaws.com/web-assets/testcases/data/data/data-35.png)\n\n![](https://s3-us-west-2.amazonaws.com/web-assets/testcases/data/data/data-36.png)\n\n![](https://s3-us-west-2.amazonaws.com/web-assets/testcases/data/data/data-37.png)\n\n![](https://s3-us-west-2.amazonaws.com/web-assets/testcases/data/data/data-38.png)\n\n![](https://s3-us-west-2.amazonaws.com/web-assets/testcases/data/data/data-39.png)\n\n![](https://s3-us-west-2.amazonaws.com/web-assets/testcases/data/data/data-40.png)\n\n![](https://s3-us-west-2.amazonaws.com/web-assets/testcases/data/data/data-41.png)\n\n![](https://s3-us-west-2.amazonaws.com/web-assets/testcases/data/data/data-42.png)\n\n![](https://s3-us-west-2.amazonaws.com/web-assets/testcases/data/data/data-43.png)\n\n![](https://s3-us-west-2.amazonaws.com/web-assets/testcases/data/data/data-44.png)\n\n![](https://s3-us-west-2.amazonaws.com/web-assets/testcases/data/data/data-45.png)\n\n![](https://s3-us-west-2.amazonaws.com/web-assets/testcases/data/data/data-46.png)\n\n![](https://s3-us-west-2.amazonaws.com/web-assets/testcases/data/data/data-47.png)\n\n![](https://s3-us-west-2.amazonaws.com/web-assets/testcases/data/data/data-48.png)\n\n![](https://s3-us-west-2.amazonaws.com/web-assets/testcases/data/data/data-49.png)\n\n![](https://s3-us-west-2.amazonaws.com/web-assets/testcases/data/data/data-50.png)\n\n![](https://s3-us-west-2.amazonaws.com/web-assets/testcases/data/data/data-51.png)\n\n![](https://s3-us-west-2.amazonaws.com/web-assets/testcases/data/data/data-52.png)\n\n![](https://s3-us-west-2.amazonaws.com/web-assets/testcases/data/data/data-53.png)\n\n![](https://s3-us-west-2.amazonaws.com/web-assets/test"
    },
    {
        "number": 3332,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n2\\n3\") == \"1\"\nassert solution(\"1\\n2\\n3\\n3\") == \"3\"\nassert solution(\"1\\n2\\n3\\n4\") == \"5\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"6\"\n"
    },
    {
        "number": 3332,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\n1 2 1\n1 4 1\n2 4 1''') == \"2\"\nassert solution('''2\n1 2 1\n1 4 1\n2 4 1''') == \"7\"\nassert solution('''1\n1 1 1''') == \"1\"\nassert solution('''3\n1 2 1\n1 4 1\n1 2 1''') == \"1\"\nassert solution('''4\n1 1 1\n1 1 1\n1 1 1\n1 1 1''') == \"3\"\n"
    },
    {
        "number": 3332,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom collections import deque\nfrom sys import stdin, stdout\n\nfrom termcolor import colored\n"
    },
    {
        "number": 3332,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"13\"\n\n\"\"\"\n\nfrom typing import List\n\n\"\"\"\n(1) Sort by priority\n(2) Make groups of streams (priority)\n(3) If length of the group is 1, add to solution\n\"\"\""
    },
    {
        "number": 3332,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"13\"\n\"\"\""
    },
    {
        "number": 3333,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n13.141593 20.123456\\n\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n13.141593 19.123456\\n\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n1\\n13.141593 19.123456\\n19.123456 19.123456\\n\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n1\\n13.141593 19.123456\\n19.123456 19.123456\\n19.123456 19.123456\\n\") == \"3.141593\"\n"
    },
    {
        "number": 3333,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10.000000 20.123456\n1\n13.141593 20.123456''') == \"3.141593\"\nassert solution('''10.000000 20.123456\n2\n13.141593 20.123456\n13.141593 20.123456\n13.141593 20.123456\n13.141593 20.123456\n13.141593 20.123456''') == \"6.00000000\"\nassert solution('''10.000000 20.123456\n2\n30.141593 19.123456\n30.141593 19.123456\n30.141593 19.123456\n30.141593 19.123456\n30.141593 19.123456''') == \"7.204744\"\nassert solution('''10.000000 20.123456\n2\n30.141593 19.123456\n30.141593 19.123456\n30.141593 19.123456\n30.141593 19.123456\n30.141593 19.123456''') == \"6.00000000\"\nassert solution('''10.000000 20.123456\n3\n30.141593 19.123456\n30.141593 19.123456\n30.141593 19.123456\n30.141593 19.123456\n30.141593 19.123456\n30.141593 19.123456\n30.141593 19.123456\n30.141593 19.123456\n30.141593 19.123456\n30.141593 19.123456''') == \"5.649769\"\n"
    },
    {
        "number": 3333,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n10.000000 20.123456\n1\n13.141593 20.123456\n''') == '3.141593'\nassert solution('''\n10.000000 20.123456\n1\n13.141593 20.123456\n\n13.141593 22.012345\n''') == '0.00000000'\nassert solution('''\n10.000000 22.012345\n1\n13.141593 22.012345\n''') == '1.0'\nassert solution('''\n10.000000 22.012345\n1\n13.141593 22.012345\n\n13.141593 22.012345\n''') == '0.00000000'\nassert solution('''\n10.000000 22.012345\n1\n13.141593 22.012345\n\n13.141593 22.012345\n''') == '0.00000000'\n"
    },
    {
        "number": 3333,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n10.000000 20.123456\n1\n13.141593 20.123456\n''') == \"3.141593\"\n\nassert solution('''\n10.000000 0.001459\n1\n13.141593 0.001459\n''') == \"3.141593\"\n\nassert solution('''\n10.000000 10.000000\n1\n13.141593 10.000000\n''') == \"2.857143\"\n\nassert solution('''\n10.000000 10.000000\n1\n10.000000 10.000000\n''') == \"3.141593\"\n\nassert solution('''\n10.000000 10.000000\n2\n3.141593 10.000000\n7.141593 10.000000\n14.1593 10.000000\n''') == \"1.141593\""
    },
    {
        "number": 3333,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10.000000 20.123456\\n1\\n13.141593 20.123456\\n') == '3.141593'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 3333,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10.000000 20.123456\\n1\\n13.141593 20.123456\\n') == '3.141593'\n\"\"\""
    },
    {
        "number": 3333,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''10.000000 20.123456\n1\n13.141593 20.123456''') == '3.141593'\nassert solution('''10.000000 20.123456\n2\n2.000000 21.000000\n2.000000 22.000000\n2.000000 22.000000\n2.000000 22.000000''') == '1.000000'\nassert solution('''10.000000 20.123456\n3\n9.000000 20.123456\n0.000000 22.000000\n5.000000 22.000000\n5.000000 22.000000''') == '3.141593'\nassert solution('''10.000000 20.123456\n4\n2.000000 21.000000\n5.000000 22.000000\n9.000000 22.000000\n8.000000 22.000000''') == '0.000000'\nassert solution('''10.000000 20.123456\n5\n0.000000 22.000000\n0.000000 22.000000\n0.000000 22.000000\n0.000000 22.000000\n0.000000 22.000000''') == '0.000000'\n"
    },
    {
        "number": 3333,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input) == '3.141593'\n"
    },
    {
        "number": 3333,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10.000000 20.123456\\n1\\n13.141593 20.123456\\n') == '3.141593'\nassert solution('2.000000 2.000000\\n1\\n2.00000 2.00000\\n') == '1.00000'\nassert solution('1.000000 1.000000\\n1\\n1.0000 1.0000\\n') == '0.0000'\nassert solution('1.000000 1.000000\\n1\\n1.0001 1.0001\\n') == '0.0000'\nassert solution('1.000000 1.000000\\n1\\n1.001 1.001\\n') == '0.000'\n"
    },
    {
        "number": 3333,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 3334,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4\\n4\\n2\\n4\\n2\\n1\") == \"impossible\"\nassert solution(\"4\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 3334,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == '2.13333333333333'\nassert solution('2\\n1\\n2\\n3') == 'impossible'\nassert solution('3\\n3\\n3\\n3') == '2.20000000000000'\nassert solution('4\\n6\\n4\\n3\\n5\\n5\\n6\\n7\\n6') == 'impossible'\nassert solution('4\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == 'impossible'\n"
    },
    {
        "number": 3334,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n4\\n2\\n1\\n3\\n3\\n4\\n1\\n2\\n2\\n3\\n4\\n1\\n2\\n1\\n2\\n1\\n3\\n1\\n3\\n4\\n2\\n1\\n3\\n2\\n4\\n3\\n2\\n2\\n1\\n3\\n2\\n4\\n1\\n2\\n1\\n2\\n1\\n3\\n1\\n2\\n1\\n1\\n2\\n1\\n4\\n1\\n2\\n1\\n3\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n3\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n3\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n3\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n3\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1"
    },
    {
        "number": 3334,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n4 4\n2\n''') == '2.13333333333333'\nassert solution('''3\n3 2\n2\n1\n''') == 'impossible'\n'''\n"
    },
    {
        "number": 3334,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1\n3\n3 3\n1''') == '2.13333333333333'\nassert solution('''1\n3\n3 4\n1''') == 'impossible'\nassert solution('''1\n2\n1\n1''') == 'impossible'\nassert solution('''1\n1\n2\n1\n1''') == 'impossible'\nassert solution('''3\n4\n3 2\n1 1\n3 4\n3 3\n2 3\n1 3\n1 2\n2 4\n1 3\n3 3\n3 3\n3 3\n1 3\n2 2\n1 1\n1 1\n1 1\n2 3\n1 2\n2 1\n2 2\n1 2\n1 1\n2 4\n1 2\n2 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n2 3\n1 2\n2 1\n2 2\n1 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n"
    },
    {
        "number": 3334,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"impossible\"\nassert solution(\"1\\n2\\n3\\n4\") == \"2.13333333333333\"\nassert solution(\"1\\n2\\n3\\n3\\n4\") == \"impossible\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"impossible\"\nassert solution(\"2\\n3\\n4\\n4\\n5\") == \"impossible\"\n"
    },
    {
        "number": 3334,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '2.13333333333333'\n\"\"\"\n\nimport sys\n\nT = int(sys.stdin.readline())"
    },
    {
        "number": 3334,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n4 4\n2''') == '2.13333333333333'\nassert solution('''4\n4 4\n2\n3\n6\n5\n6''') == 'impossible'\n'''\n"
    },
    {
        "number": 3334,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n1') == '2.13333333333333'\nassert solution('3\\n3\\n2\\n1\\n2') == 'impossible'\nassert solution('1\\n3\\n4\\n1\\n2\\n2') == 'impossible'\nassert solution('2\\n1\\n1\\n1\\n1') == 'impossible'\nassert solution('2\\n2\\n1\\n2') == 'impossible'\n"
    },
    {
        "number": 3334,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n4\\n4\\n4\\n4') == '2.13333333333333'\nassert solution('3\\n5\\n5\\n5\\n5') == 'impossible'\nassert solution('4\\n4\\n1\\n1\\n4\\n1\\n1\\n1\\n4') == '6.666666666666668'\nassert solution('4\\n4\\n1\\n1\\n4\\n1\\n1\\n1\\n4') == '6.666666666666668'\nassert solution('2\\n4\\n4\\n4\\n4') == '2.13333333333333'\n"
    },
    {
        "number": 3335,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(7) == 18\nassert solution(100) == 210\nassert solution(10000) == 43800\nassert solution(100000) == 998400"
    },
    {
        "number": 3335,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7') == '18'\nassert solution('10') == '45'\nassert solution('100') == '2516'\nassert solution('1000') == '105832'\nassert solution('10000') == '142913828922'\n"
    },
    {
        "number": 3335,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7') == 18\nassert solution('10000') == 9592\nassert solution('1000000') == 8552000\nassert solution('12000000') == 616000\nassert solution('2000000') == 4304000\n"
    },
    {
        "number": 3335,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7''') == 18\nassert solution('''44''') == 28\nassert solution('''10''') == 14\nassert solution('''123456789''') == 282601440\n'''\n"
    },
    {
        "number": 3335,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(7) == 18\nassert solution(123) == 36\nassert solution(1000) == 1670\nassert solution(5000) == 2775\nassert solution(4999) == 2628\n\"\"\""
    },
    {
        "number": 3335,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''7''') == 18\n'''\n"
    },
    {
        "number": 3335,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(7) == 18\nassert solution(10) == 6\nassert solution(5) == 1\nassert solution(1000) == 985\nassert solution(100000) == 9725\n"
    },
    {
        "number": 3335,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7') == 18\nassert solution('14') == 84\nassert solution('30') == 318\nassert solution('5000') == 379920\nassert solution('10000') == 7121370\n"
    },
    {
        "number": 3335,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') is None\nassert solution('7') == 18\nassert solution('5') == 30\nassert solution('20') == 220\nassert solution('50') == 18390\n"
    },
    {
        "number": 3335,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"18\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3336,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n35 M classicism programming\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer''') == '3'\nassert solution('''2\n0 M baroque skiing\n43 M baroque chess''') == '1'\nassert solution('''3\n35 M classicism programming\n0 M baroque skiing\n43 M baroque chess''') == '2'\nassert solution('''1\n35 M classicism programming\n0 M baroque skiing''') == '0'\nassert solution('''1\n35 M classicism programming\n0 M baroque skiing\n43 M baroque chess''') == '2'\n"
    },
    {
        "number": 3336,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"4\"\n    \"35 M classicism programming\"\n    \"0 M baroque skiing\"\n    \"43 M baroque chess\"\n    \"30 F baroque soccer\"\n) == \"3\"\n\n\nassert solution(\n    \"4\"\n    \"35 M classicism programming\"\n    \"0 M baroque skiing\"\n    \"43 M baroque chess\"\n    \"30 F baroque soccer\"\n) == \"3\"\n\nassert solution(\n    \"4\"\n    \"35 M classicism programming\"\n    \"0 M baroque skiing\"\n    \"43 M baroque chess\"\n    \"30 F baroque soccer\"\n) == \"3\"\n\nassert solution(\n    \"4\"\n    \"35 M classicism programming\"\n    \"0 M baroque skiing\"\n    \"43 M baroque chess\"\n    \"30 F baroque soccer\"\n) == \"3\"\n\nassert solution(\n    \"4\"\n    \"35 M classicism programming\"\n    \"0 M baroque skiing\"\n    \"43 M baroque chess\"\n    \"30 F baroque soccer\"\n) == \"3\""
    },
    {
        "number": 3336,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(open(\"test_input_1.txt\", \"r\").read()) == \"3\"\nassert solution(open(\"test_input_2.txt\", \"r\").read()) == \"3\"\nassert solution(open(\"test_input_3.txt\", \"r\").read()) == \"3\"\nassert solution(open(\"test_input_4.txt\", \"r\").read()) == \"3\"\nassert solution(open(\"test_input_5.txt\", \"r\").read()) == \"5\"\n"
    },
    {
        "number": 3336,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 0 F classicism programming\\n0 0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n0 0 classicism programming\\n0 0 baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n0 0 baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n0 0 baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n0 0 baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n0 0 baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n0 0 baroque skiing\\n43 M baroque chess\\n30 F baroque soccer') == '3'\nassert solution('4\\n0 0 F classicism programming\\n0 0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n0 0 classicism programming\\n0 0 baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n0 0 baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n0 0 baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n0 0 baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n0 0 baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n0 0 baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n0 0 baroque skiing\\n43 M baroque chess\\n30 F baroque soccer') == '7'\nassert solution('5\\n0 0 M classicism programming\\n0 0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n0 0 classicism programming\\n0 0 baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n0 0 baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n0 0 baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n0 0 baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n0 0 baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n0 0 baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n0 0 baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n0 0 baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n0 0 baroque skiing\\n43 M baroque chess\\n30 F baroque soccer') == '7'\nassert solution('5\\n35 M\\n0 M\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M\\n30 F\\n0 0\\n43 M"
    },
    {
        "number": 3336,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n'''\n"
    },
    {
        "number": 3336,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '3'\nassert solution(stdin) == '3'\nassert solution(stdin) == '3'\nassert solution(stdin) == '3'\nassert solution(stdin) == '3'\n"
    },
    {
        "number": 3336,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n35 M classicism programming\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer''') == '3'\nassert solution('''4\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer\n35 M classicism programming''') == '3'\nassert solution('''4\n35 M classicism programming\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer\n1 A typical programming\n1 M baroque chess''') == '1'\nassert solution('''4\n35 M classicism programming\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer\n1 A typical programming\n1 M baroque chess\n1 M programming''') == '2'\nassert solution('''4\n35 M classicism programming\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer\n1 A typical programming\n1 M baroque chess\n1 M programming\n1 M gym\n1 M coding''') == '3'\n"
    },
    {
        "number": 3336,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n35 M classicism programming\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer''') == \"3\"\nassert solution('''8\n61 M jazz\n70 M classical\n59 M classical\n60 F jaywalk\n60 F jaywalk\n58 M jazz\n49 M classical''') == \"7\"\nassert solution('''10\n100 M jazz\n105 M classical\n108 M classical\n111 M jazz\n113 M classical\n107 M classical\n104 M jazz\n100 M classical\n99 M classical\n98 M jazz\n100 M classical\n95 M classical''') == \"9\"\nassert solution('''20\n57 M jazz\n39 M classical\n64 M classical\n35 M jazz\n26 M classical\n38 M classical\n65 M jazz\n46 M classical\n42 M classical\n42 M classical\n56 M jazz\n64 M classical\n44 M classical\n49 M classical\n65 M jazz\n42 M classical\n39 M classical\n56 M jazz\n47 M classical\n40 M classical\n42 M classical\n55 M jazz\n56 M classical\n44 M classical\n50 M classical\n53 M classical\n48 M classical\n49 M classical\n52 M jazz\n57 M classical\n50 M classical\n53 M classical\n60 M classical\n53 M classical\n55 M classical\n58 M jazz\n60 M classical\n54 M classical\n55 M classical\n52 M classical\n49 M classical\n58 M jazz\n61 M classical\n55 M classical\n56 M classical\n53 M classical\n54 M classical\n55 M classical\n56 M jazz\n54 M classical\n53 M classical\n55 M classical\n55 M classical\n57 M jazz\n50 M classical\n47 M classical\n47 M classical\n53 M classical\n51 M classical\n49 M classical\n53 M classical\n53 M classical\n49 M classical\n49 M classical\n49 M classical\n56 M jazz\n52 M classical\n52 M classical\n51 M classical\n57 M jazz\n52 M classical\n51 M classical\n50 M classical\n54 M classical\n53 M classical\n54 M classical\n57 M jazz\n58 M classical\n53 M classical\n53 M classical\n53 M classical\n49 M classical\n54 M classical\n54 M classical\n58 M jazz\n58 M classical\n59 M classical\n60 M classical\n58 M classical\n58 M classical\n60 M classical\n60 M classical\n59 M classical\n62 M jazz\n64 M classical\n64 M classical\n64 M classical\n64 M classical\n64 M classical\n64 M classical\n65 M jazz\n66 M classical\n66 M classical\n66 M classical\n66 M classical\n66 M classical\n67 M jazz\n66 M classical\n67 M classical\n67 M classical\n67 M classical\n67 M classical\n68 M jazz\n66 M classical\n66 M classical\n64 M classical\n64 M classical\n64 M classical\n64 M classical\n64 M classical\n66 M classical\n66 M classical\n66 M classical\n66 M classical\n65 M classical\n66 M classical\n67 M classical\n67 M classical\n68 M classical\n68 M classical\n68 M classical\n68 M classical\n69 M jazz\n70 M classical\n70 M classical\n70 M classical\n70 M classical\n70 M classical\n70 M classical\n71 M jazz\n72 M classical\n72 M classical\n72 M classical\n72 M classical\n72 M classical\n73 M jazz\n72 M classical\n72 M classical\n71 M classical\n70 M classical\n69 M classical\n68 M classical\n68 M classical\n69 M classical\n69 M classical\n69 M classical\n70 M classical\n69 M classical\n68 M classical\n68 M classical\n67 M classical\n67 M classical\n66 M classical\n65 M classical\n64 M classical\n63 M classical\n62 M classical\n61 M classical\n60 M classical\n59 M classical\n59 M classical\n59 M classical\n59 M classical\n58 M jazz\n56 M classical\n55 M classical\n54 M classical\n54 M classical\n54 M classical\n53 M classical\n52 M classical\n51 M classical\n49 M classical\n49 M classical\n49 M classical\n50 M classical\n50 M classical\n50 M classical\n50 M classical\n50 M classical\n50 M classical\n51 M classical\n49 M classical\n49 M classical\n49 M classical\n51 M classical\n54 M classical\n54 M classical\n54 M classical\n55 M classical\n56 M classical\n56 M classical\n56 M classical\n56 M classical\n55 M classical\n55 M classical\n55 M classical\n55 M classical\n56 M classical\n55 M classical\n55 M classical\n56 M classical\n56 M classical\n57 M jazz\n57 M classical\n58 M classical\n59 M classical\n60 M classical\n60 M classical\n60 M classical\n61 M classical\n61 M classical\n61 M classical\n61 M classical\n61 M classical\n61 M classical\n61 M classical\n61 M classical\n61 M classical\n61 M classical\n61 M classical\n61 M classical\n61 M classical\n61 M classical\n61 M classical\n61 M classical\n61 M classical\n61 M classical\n62 M jazz\n62 M classical\n62 M classical\n62 M classical\n62 M classical\n62 M classical\n62 M classical\n62 M classical\n62 M classical\n62 M classical\n62 M classical\n63 M jazz\n62 M classical\n62 M classical\n62 M classical\n62 M classical\n62 M classical\n62 M classical\n62 M classical\n62 M classical\n62 M classical\n62 M classical\n62 M classical\n63 M jazz\n62 M classical\n62 M classical\n62 M classical\n62 M classical\n62 M classical\n62 M classical\n62 M classical\n62 M classical\n62 M classical\n62 M classical\n62 M classical\n62 M classical\n62 M classical\n62 M classical\n62 M classical\n61 M classical\n61 M classical\n61 M classical\n60 M classical\n59 M classical\n59 M classical\n59 M classical\n58 M classical\n58 M classical\n58 M classical\n57 M classical\n57 M classical\n57 M classical\n56 M classical\n55 M classical\n55 M classical\n54 M classical\n54 M classical\n54 M classical\n54 M classical\n53 M classical\n52 M classical\n51 M classical\n51 M classical\n51 M classical\n51 M classical\n50 M classical\n50 M classical\n50 M classical\n50 M classical\n50 M classical\n50 M classical\n50 M classical\n50 M classical\n50 M classical\n50 M classical\n50 M classical\n50 M classical\n50 M classical\n50 M classical\n49 M classical\n49 M classical\n49 M classical\n49 M classical\n49 M classical\n49 M classical\n49 M classical\n49 M classical\n48 M classical\n48 M classical\n48 M classical\n48 M classical\n48 M classical\n48 M classical\n48 M classical\n48 M classical\n47 M classical\n47 M classical\n47 M classical\n47 M classical\n47 M classical\n47 M classical\n47 M classical\n47 M classical\n47 M classical\n47 M classical\n47 M classical\n47 M classical\n47 M classical\n47 M classical\n46 M classical\n46 M classical\n46 M classical\n46 M classical\n46 M classical\n46 M classical\n46 M classical\n46 M classical\n46 M classical\n46 M classical\n46 M classical\n46 M classical\n46 M classical\n46 M classical\n45 M classical\n45 M classical\n45 M classical\n45 M classical\n45 M classical\n45 M classical\n45 M classical\n45 M"
    },
    {
        "number": 3336,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4') == '3'\n\n\"\"\""
    },
    {
        "number": 3336,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 3337,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"2\\n1\\n2\\n1\\n1\"\nassert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\") == \"2\\n1\\n2\\n1\\n1\"\nassert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\na 4\\nb 2\\nc 4\") == \"2\\n1\\n2\\n1\\n1\\n1\\n2\\n2\\n1\"\nassert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\na 4\\nb 2\\nc 4\\na 0\\nb 2\\nc 0\") == \"2\\n1\\n2\\n1\\n1\\n1\\n2\\n2\\n1\"\nassert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\na 4\\nb 2\\nc 4\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na 0\\nb 2\\nc 0\\na"
    },
    {
        "number": 3337,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"5\"\n) == \"2\"\nassert solution(\n\"1 1 2 1 2\"\n) == \"1\"\nassert solution(\n\"0 0 2 1 2\"\n) == \"1\"\nassert solution(\n\"1 2\"\n) == \"0\"\nassert solution(\n\"1 1 2 1 2\"\n) == \"1\"\n"
    },
    {
        "number": 3337,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\na 0\na 1\nb 2\nc 2 3\nb 4\n''') == '2\\n1\\n2'\nassert solution('''4\nb 2\nc 2 3\na 1\nb 1\n''') == '2\\n1\\n1'\nassert solution('''3\nb 2\nc 2 3\na 1\nb 1\n''') == '1\\n1\\n1'\nassert solution('''3\na 0\na 1\nb 2\nc 2 3\nb 4\n''') == '1\\n1\\n2'\nassert solution('''5\na 0\na 1\nb 2\nc 2 3\nb 4\n''') == '2\\n1\\n1\\n2\\n1'\n"
    },
    {
        "number": 3337,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n\") == \"1\\n1\\n1\\n2\\n2\"\nassert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n4 1\") == \"1\\n1\\n1\\n2\\n2\"\nassert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n4 1 2\") == \"2\\n2\\n2\\n2\\n1\\n1\"\n\"\"\""
    },
    {
        "number": 3337,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n5\na 0\na 1\nb 2\nc 2 3\nb 4\n''') == '''\n2\n1\n2\n'''\n\nassert solution('''\n7\na 0\na 1\nb 2\nc 2 3\nb 4\nb 0\nc 3\n''') == '''\n4\n1\n1\n2\n'''\n\nassert solution('''\n7\na 0\na 1\nb 2\nc 2 3\nb 4\nb 0\nc 3\n''') == '''\n4\n2\n2\n1\n'''\n"
    },
    {
        "number": 3337,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"2\\n1\\n2\\n1\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"0\"\n"
    },
    {
        "number": 3337,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5') == '2\\n1\\n2\\n2\\n2\\n2'\nassert solution('5\\n1\\n1\\n1\\n1\\n1') == '1\\n2\\n1\\n1\\n1\\n1'\nassert solution('5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n') == '2\\n1\\n2\\n2\\n2\\n2'\nassert solution('5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n2\\n2\\n') == '2\\n1\\n2\\n2\\n2\\n2'\nassert solution('5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n"
    },
    {
        "number": 3337,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\na 0\na 1\nb 2\nc 2 3\nb 4''') == '2\\n1\\n2\\n2'\nassert solution('''3\na 0\na 1\nb 2\nc 3\na 3\nb 0''') == '3\\n1\\n1'\nassert solution('''5\na 0\na 1\nb 2\nc 2 3\nb 4''') == '2\\n1\\n2'\nassert solution('''5\na 0\na 1\nb 2\nc 2 3\nb 4\na 1\nb 3\nc 4\nb 1\nb 2\na 2\na 0\nb 3\nc 4\nb 1\nb 2\na 2\na 3\nc 1\na 3\nb 0\nb 4\na 1\na 4\nb 3\nb 1\nb 2\na 3\nb 3\na 2\nb 4''') == '2\\n1\\n2\\n3\\n1\\n2\\n2\\n1\\n2'\nassert solution('''3\na 0\na 1\nb 2\nc 3\na 3\nb 0''') == '3\\n1\\n1'\n"
    },
    {
        "number": 3337,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0') == ''\nassert solution('a') == 'a'\nassert solution('ab') == 'ab'\nassert solution('a0') == 'a0'\nassert solution('a1') == 'a1'\n"
    },
    {
        "number": 3337,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\na 0\na 1\nb 2\nc 2 3\nb 4''') == '2\\n1\\n2\\n2\\n'\nassert solution('''2\na 0\na 1\nb 0\nb 1\nc 0\nc 1\n''') == '1\\n1\\n'\nassert solution('''1\na 0\na 1\nb 0\nb 1\nc 0\nc 1\n''') == '1\\n1\\n'\nassert solution('''2\na 0\na 1\nb 0\nb 1\nb 2\nc 0\nc 1\n''') == '2\\n0\\n'\nassert solution('''3\na 0\na 1\na 2\nb 0\nb 1\nb 2\nc 0\nc 1\nc 2\n''') == '3\\n0\\n0\\n'\n"
    },
    {
        "number": 3338,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8 6') == '5'\nassert solution('1 2 1 3') == '1'\nassert solution('1 1 1 1') == '1'\nassert solution('10 4 0 0') == '4'\nassert solution('3 3 1 1') == '2'\n"
    },
    {
        "number": 3338,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3\"\nstdin = '''7 2\n76 93 99 91\n65 94 99 94\n75 99 88 99\n90 99 92 99\n82 99 76 95\n80 99 77 95\n85 99 76 94\n'''\nassert solution(stdin) == \"3\"\nstdin = '''6 3\n5 0 0\n1 0 0\n2 0 0\n4 0 0\n6 0 0\n3 0 0\n'''\nassert solution(stdin) == \"2\"\nstdin = '''8 3\n76 93 99 91\n65 94 99 94\n75 99 88 99\n90 99 91 90\n82 99 76 95\n80 99 77 95\n85 99 76 94\n'''\nassert solution(stdin) == \"3\"\nstdin = '''9 4\n1 0 0\n2 0 0\n3 0 0\n4 0 0\n5 0 0\n6 0 0\n7 0 0\n8 0 0\n9 0 0\n'''\nassert solution(stdin) == \"2\"\nstdin = '''9 4\n7 0 0\n6 0 0\n5 0 0\n4 0 0\n3 0 0\n2 0 0\n1 0 0\n0 0 0\n'''\n"
    },
    {
        "number": 3338,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3338,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6 1\n78 61 88 71\n80 80 90 90\n70 90 80 100\n90 70 0 0\n80 67 0 0\n90 63 0 0''') == '5'\nassert solution('''4 2\n12 10 0 0\n16 11 0 0\n9 8 0 0\n10 10 0 0\n11 11 0 0\nSample Output:\n6''') == '6'\nassert solution('''6 1\n14 5 0 0\n15 6 0 0\n15 5 0 0\n15 6 0 0\n15 5 0 0\n14 6 0 0\nSample Output:\n5''') == '5'\nassert solution('''5 4\n10 1 1 1\n10 2 2 2\n10 3 3 3\n10 4 4 4\n10 5 5 5\n10 6 6 6\nSample Output:\n4''') == '4'\nassert solution('''7 7\n6 0 1 0\n6 1 2 1\n6 2 3 1\n6 3 4 1\n6 4 5 1\n6 5 6 1\n6 6 7 1\nSample Output:\n6''') == '6'\n"
    },
    {
        "number": 3338,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0'\n) == '5'\n\nassert solution(\n    '6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0'\n) == '5'\n\nassert solution(\n    '10 2\\n
    },
    {
        "number": 3338,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3338,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\nprint(expected)\n\"\"\"\n"
    },
    {
        "number": 3338,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 3338,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6 1\n78 61 88 71\n80 80 90 90\n70 90 80 100\n90 70 0 0\n80 67 0 0\n90 63 0 0''') == '5'\n\nassert solution('''6 1\n78 61 88 71\n80 80 90 90\n70 90 80 100\n90 70 0 0\n80 67 0 0\n90 63 0 0''') == '5'\n\nassert solution('''6 1\n78 61 88 71\n80 80 90 90\n70 90 80 100\n90 70 0 0\n80 67 0 0\n90 63 0 0''') == '5'\n\nassert solution('''4 2\n10 10 10 10\n1 1 1 1\n''') == '0'\n\nassert solution('''3 3\n10 10 10 10\n10 10 10 10\n10 10 10 10\n''') == '4'"
    },
    {
        "number": 3338,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"5\"\n\"\"\"\n\nfrom __future__ import annotations\n\n__all__ = [\"solution\"]\n\nfrom itertools import combinations\nfrom collections import defaultdict"
    },
    {
        "number": 3339,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n4 5\n1 2\n1 3\n1 4\n2 3\n2 4\n''') == \"4\"\nassert solution('''\n5 3\n1 2\n1 3\n2 3\n3 4\n4 5\n''') == \"4\"\nassert solution('''\n5 3\n1 2\n1 3\n2 3\n2 4\n3 4\n''') == \"2\"\nassert solution('''\n5 4\n1 2\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n''') == \"4\"\nassert solution('''\n5 5\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n''') == \"0\"\n\n'''\n"
    },
    {
        "number": 3339,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"4\"\nassert solution(\"2 4\") == \"3\"\nassert solution(\"3 4\") == \"2\"\nassert solution(\"5 5\") == \"7\"\nassert solution(\"7 5\") == \"1\"\n"
    },
    {
        "number": 3339,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n1 3\\n1 4\\n2 3\\n2 4\") == \"4\"\nassert solution(\"1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\") == \"4\"\nassert solution(\"1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n4 5\") == \"1\"\nassert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\") == \"4\"\nassert solution(\"2 2\\n1 2\\n2 2\") == \"0\"\n"
    },
    {
        "number": 3339,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == '4'\nassert solution('2\\n2\\n3\\n3\\n3\\n4\\n4\\n5\\n5\\n5\\n5\\n5\\n5\\n5') == '1'\nassert solution('3\\n3\\n3\\n3\\n3\\n4\\n4\\n4\\n4\\n5\\n5\\n5\\n5\\n5\\n5\\n5') == '1'\nassert solution('3\\n3\\n4\\n4\\n4\\n4\\n4\\n5\\n5\\n5\\n5\\n5\\n5\\n5') == '2'\nassert solution('4\\n4\\n4\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5') == '2'\n"
    },
    {
        "number": 3339,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"4\"\n\n-----\n\nimport unittest\n\n\nclass Test(unittest.TestCase):\n    def test(self):\n        self.assertEqual(solution(stdin), \"4\")\n"
    },
    {
        "number": 3339,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input_str) == expected_output_str\n'''\n"
    },
    {
        "number": 3339,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 5') == '4'\nassert solution('2 3') == '4'\nassert solution('1 2') == '2'\nassert solution('1 3') == '1'\nassert solution('1 4') == '2'\n"
    },
    {
        "number": 3339,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n\") == \"4\"\nassert solution(\"3 2\\n1 2\\n1 3\\n2 3\\n\") == \"1\"\nassert solution(\"5 4\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n\") == \"2\"\nassert solution(\"2 4\\n1 2\\n1 3\\n2 3\\n\") == \"0\"\nassert solution(\"3 4\\n1 2\\n1 3\\n2 3\\n\") == \"1\"\n"
    },
    {
        "number": 3339,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n') == '4'\nassert solution('2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\"
    },
    {
        "number": 3339,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3340,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3340,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"4\n1 2\n2 3\n3 4\"\"\") == \"\"\"2\n3 4\n2 4\n\"\"\"\n"
    },
    {
        "number": 3340,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n-----\n\n\"\"\""
    },
    {
        "number": 3340,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4\") == \"\"\nassert solution(\"4\\n4\\n4\\n4\") == \"\"\nassert solution(\"4\\n1 2\\n1 2\") == \"\"\nassert solution(\"4\\n4 2\\n2 3\\n2 3\") == \"\"\n"
    },
    {
        "number": 3340,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(INPUT) == EXPECTED\n"
    },
    {
        "number": 3340,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4\\n') == '2\\n3 4\\n2 4'\nassert solution('2\\n1 2\\n') == '2 1'\nassert solution('2\\n1 2\\n1 3\\n') == '2 1'\nassert solution('4\\n1 2\\n2 3\\n3 4\\n') == '2\\n3 4\\n2 4'\nassert solution('4\\n1 2\\n2 3\\n3 4\\n2 3\\n') == '2 3'\n"
    },
    {
        "number": 3340,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"2 1\") == \"\"\nassert solution(\"3 2\") == \"\"\n"
    },
    {
        "number": 3340,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n1 2\n2 3\n3 4''') == '2\\n3 4\\n2 4'\nassert solution('''2\n1 2\n2 3''') == '1\\n2'\nassert solution('''3\n1 2\n2 3\n3 4''') == '1\\n2\\n2'\nassert solution('''3\n1 2\n1 3\n2 4\n2 3''') == '2\\n2\\n1'\nassert solution('''4\n1 2\n2 3\n3 4\n4 1''') == '1\\n3 4\\n2 1'\n"
    },
    {
        "number": 3340,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    '''\n    3\n    1 2\n    2 3\n    1 2\n    3 4\n    ''') == '2 3'\n\nassert solution(\n    '''\n    3\n    1 2\n    2 3\n    3 4\n    4 5\n    1 3\n    2 3\n    1 2\n    3 4\n    2 4\n    1 3\n    ''') == '1 2'\n\nassert solution(\n    '''\n    4\n    1 2\n    2 3\n    1 2\n    3 4\n    2 3\n    ''') == '2 3'\n'''\n"
    },
    {
        "number": 3340,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3341,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n1 3\\n2 1\\n3 5\") == \"5\"\nassert solution(\"1 1\\n1 2\\n2 2\\n3 3\") == \"0\"\nassert solution(\"2 1\\n1 2\\n2 2\\n3 3\") == \"4\"\nassert solution(\"3 1\\n1 2\\n1 2\\n3 5\") == \"5\"\nassert solution(\"1 1\\n1 2\\n2 2\\n3 3\") == \"4\"\n"
    },
    {
        "number": 3341,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '5'\nprint(\"Passed\")\n\n'''"
    },
    {
        "number": 3341,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n3\n2 1\n3 5\n7 2''') == \"5\"\nassert solution('''1\n1\n3\n7\n2''') == \"0\"\nassert solution('''4\n6\n5 4\n2 1\n3 6\n3 7\n3 5\n6 1\n4 2\n2 3\n1 4\n5 3\n1 5\n3 4\n5 2\n4 6\n1 2\n3 4\n1 5\n2 3\n3 2\n5 4\n5 3\n5 1\n3 1\n4 2\n1 2\n2 1\n1 3\n2 3\n1 4\n4 1\n3 4\n2 1\n4 2\n1 4\n2 1\n1 3\n1 2\n3 2\n1 4\n1 2\n3 4\n2 3\n1 5\n1 5\n3 4\n2 3\n1 4\n1 5\n2 2\n1 4\n2 4\n2 1\n1 4\n1 3\n1 1\n2 2\n3 2\n1 4\n1 2\n3 2\n1 4\n1 2\n1 3\n3 2\n1 4\n1 2\n3 2\n1 4\n3 4\n1 2\n3 2\n1 4\n1 2\n1 3\n2 2\n1 4\n1 2\n1 1\n2 3\n1 4\n1 2\n1 3\n1 4\n1 3\n1 2\n1 2\n1 4\n2 1\n1 4\n1 3\n1 2\n1 4\n1 2\n3 2\n1 4\n1 2\n1 3\n3 2\n1 4\n1 2\n1 3\n1 4\n1 3\n1 2\n1 2\n1 4\n1 4\n1 2\n3 2\n1 4\n1 2\n1 3\n1 4\n1 3\n1 2\n1 2\n1 4\n1 4\n1 2\n3 2\n1 4\n1 2\n1 3\n1 4\n1 3\n1 2\n1 2\n1 4\n1 4\n1 2\n3 2\n1 4\n1 2\n1 3\n1 4\n1 3\n1 2\n1 2\n1 4\n1 4\n1 2\n3 2\n1 4\n1 2\n1 3\n1 4\n1 3\n1 2\n1 2\n1 4\n1 4\n1 2\n3 2\n1 4\n1 2\n1 3\n1 4\n1 3\n1 2\n1 2\n1 4\n1 4\n1 2\n3 2\n1 4\n1 2\n1 3\n1 4\n1 3\n1 2\n1 2\n1 4\n1 4\n1 2\n3 2\n1 4\n1 2\n1 3\n1 4\n1 3\n1 2\n1 2\n1 4\n1 4\n1 2\n3 2\n1 4\n1 2\n1 3\n1 4\n1 3\n1 2\n1 2\n1 4\n1 4\n1 2\n3 2\n1 4\n1 2\n1 3\n1 4\n1 3\n1 2\n1 2\n1 4\n1 4\n1 2\n3 2\n1 4\n1 2\n1 3\n1 4\n1 3\n1 2\n1 2\n1 4\n1 4\n1 2\n3 2\n1 4\n1 2\n1 3\n1 4\n1 3\n1 2\n1 2\n1 4\n1 4\n1 2\n3 2\n1 4\n1 2\n1 3\n1 4\n1 3\n1 2\n1 2\n1 4\n1 4\n1 2\n3 2\n1 4\n1 2\n1 3\n1 4\n1 3\n1 2\n1 2\n1 4\n1 4\n1 2\n3 2\n1 4\n1 2\n1 3\n1 4\n1 3\n1 2\n1 2\n1 4\n1 4\n1 2\n3 2\n1 4\n1 2\n1 3\n1 4\n1 3\n1 2\n1 2\n1 4\n1 4\n1 2\n3 2\n1 4\n1 2\n1 3\n1 4\n1 3\n1 2\n1 2\n1 4\n1 4\n1 2\n3 2\n1 4\n1 2\n1 3\n1 4\n1 3\n1 2\n1 2\n1 4\n1 4\n1 2\n3 2\n1 4\n1 2\n1 3\n1 4\n1 3\n1 2\n1 2\n1 4\n1 4\n1 2\n3 2\n1 4\n1 2\n1 3\n1 4\n1 3\n1 2\n1 2\n1 4\n1 4\n1 2\n3 2\n1 4\n1 2\n1 3\n1 4\n1 3\n1 2\n1 2\n1 4\n1 4\n1 2\n3 2\n1 4\n1 2\n1 3\n1 4\n1 3\n1 2\n1 2\n1 4\n1 4\n1 2\n3 2\n1 4\n1 2\n1 3\n1 4\n1 3\n1 2\n1 2\n1 4\n1 4\n1 2\n3 2\n1 4\n1 2\n1 3\n1 4\n1 3\n1 2\n1 2\n1 4\n1 4\n1 2\n3 2\n1 4\n1 2\n1 3\n1 4\n1 3\n1 2\n1 2\n1 4\n1 4\n1 2\n3 2\n1 4\n1 2\n1 3\n1 4\n1 3\n1 2\n1 2\n1 4\n1 4\n1 2\n3 2\n1 4\n1 2\n1 3\n1 4\n1 3\n1 2\n1 2\n1 4\n1 4\n1 2\n3 2\n1 4\n1 2\n1 3\n1 4\n1 3\n1 2\n1 2\n1 4\n1 4\n1 2\n3 2\n1 4\n1 2\n1 3\n1 4\n1 3\n1 2\n1 2\n1 4\n1 4\n1 2\n3 2\n1 4\n1 2\n1 3\n1 4\n1 3\n1 2\n1 2\n1 4\n1 4\n1 2\n3 2\n1 4\n1 2\n1 3\n1 4\n1 3\n1 2\n1 2\n1 4\n1 4\n1 2\n3 2\n1 4\n1 2\n1 3\n1 4\n1 3\n1 2\n1 2\n1 4\n1 4\n1 2\n3 2\n1 4\n1 2\n1 3\n1 4\n1 3\n1 2\n1 2\n1 4\n1 4\n1 2\n3 2\n1 4\n1 2\n1 3\n1 4\n1 3\n1 2\n1 2\n1 4\n1 4\n1 2\n3 2\n1 4\n1 2\n1 3\n1 4\n1 3\n1 2"
    },
    {
        "number": 3341,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n1 3\\n2 1\\n3 5\") == 5\nassert solution(\"1 1\\n1 1\") == 0\nassert solution(\"2 2\\n1 1\\n2 1\") == 0\nassert solution(\"3 3\\n2 2\\n2 2\\n2 2\") == 0\nassert solution(\"3 3\\n2 2\\n2 2\\n2 2\") == 0\n"
    },
    {
        "number": 3341,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 2\") == \"0\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"2 5\") == \"0\"\nassert solution(\"5 1\") == \"0\"\nassert solution(\"2 2\") == \"0\"\n"
    },
    {
        "number": 3341,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n2 2\n1 3\n2 1\n3 5\n7 2\n''') == '5'\n"
    },
    {
        "number": 3341,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 3\\n2 1\\n3 5\\n7 2\") == \"5\"\nassert solution(\"1 3\\n2 1\\n3 5\\n7 2\") == \"5\"\nassert solution(\"1 3\\n2 1\\n3 5\\n7 2\") == \"5\"\nassert solution(\"1 3\\n2 1\\n3 5\\n7 2\") == \"5\"\nassert solution(\"1 3\\n2 1\\n3 5\\n7 2\") == \"5\"\n"
    },
    {
        "number": 3341,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"1\n2\n1 2\n2 1\n3 5\n7 2\"\"\"\n    ) == \"0\"\n\nassert solution(\n\"\"\"1\n1\n1 1\n1 1\n2 1\n3 1\n4 1\n5 1\"\"\"\n    ) == \"10\"\n\nassert solution(\n\"\"\"1\n1\n2 2\n1 1\n3 1\"\"\"\n    ) == \"5\"\n\nassert solution(\n\"\"\"1\n1\n2 2\n1 1\n3 1\"\"\"\n    ) == \"3\"\n\nassert solution(\n\"\"\"1\n1\n1 1\n1 1\n2 1\n3 1\"\"\"\n    ) == \"3\""
    },
    {
        "number": 3341,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 2\\n1 3\\n2 1') == '5'\nassert solution('3 2\\n1 3\\n2 1') == '0'\nassert solution('2 2\\n1 3\\n2 5') == '5'\nassert solution('2 2\\n1 3\\n2 5\\n7 2') == '8'\nassert solution('2 1\\n2 2') == '0'\n"
    },
    {
        "number": 3341,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == str(5)\n'''\n\nclass Solution:\n    def __init__(self):\n        self.m = None\n        self.n = None\n\n    def solve(self, stdin: str) -> str:\n        self.m, self.n = map(int, stdin.split())\n        self.WidgetsProducerCompanies = []\n        self.WidgetsConsumerCompanies = []\n        for i in range(self.m):\n            p, d = map(int, stdin.split())\n            self.WidgetsProducerCompanies.append((i, p, d))\n        for i in range(self.n):\n            q, e = map(int, stdin.split())\n            self.WidgetsConsumerCompanies.append((i, q, e))\n\n        self.WidgetsProducerCompanies.sort(key=lambda x: x[2])\n        self.WidgetsConsumerCompanies.sort(key=lambda x: x[2])\n\n        max_profit = 0\n        for i in range(self.m):\n            for j in range(self.n):\n                if i > 0:\n                    if self.WidgetsProducerCompanies[i][2] < self.WidgetsProducerCompanies[i - 1][2]:\n                        continue\n                if j > 0:\n                    if self.WidgetsConsumerCompanies[j][2] < self.WidgetsConsumerCompanies[j - 1][2]:\n                        continue\n                profit = self.WidgetsProducerCompanies[i][1] - self.WidgetsConsumerCompanies[j][1]\n                if profit > max_profit:\n                    max_profit = profit\n        return str(max_profit)\n"
    },
    {
        "number": 3342,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0'''\n    ) == 2\n\nassert solution(\n'''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0'''\n    ) == 2\n\nassert solution(\n'''5 4 3\n1 1\n0 2\n0 3\n0 4\n1 5\n0 1'''\n    ) == 4\n\nassert solution(\n'''3 6 2\n0 0\n0 3\n1 4\n0 5\n0 6\n3 0'''\n    ) == 2\n\nassert solution(\n'''3 4 4\n0 0\n0 2\n0 3\n0 4\n1 4\n0 0\n1 2\n0 4\n2 4\n1 2'''\n    ) == 2"
    },
    {
        "number": 3342,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input1) == 3\nassert solution(input2) == 2\nassert solution(input3) == 1\nassert solution(input4) == 1\nassert solution(input5) == 0\n"
    },
    {
        "number": 3342,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0''') == '2'\nassert solution('''3 6 1\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0''') == '2'\nassert solution('''3 6 5\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0''') == '3'\nassert solution('''3 6 5\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0''') == '3'\nassert solution('''3 6 5\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n1 1''') == '2'\n"
    },
    {
        "number": 3342,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '3'\n'''\n"
    },
    {
        "number": 3342,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n\") == \"2\"\nassert solution(\"3 5 2\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n\") == \"1\"\nassert solution(\"1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n\") == \"1\"\nassert solution(\"3 4 3\\n1 0\\n1 1\\n2 1\\n2 2\\n3 0\\n0 0\\n0 2\\n2 3\\n3 2\\n2 1\\n3 1\\n1 3\\n\") == \"2\"\nassert solution(\"1 1\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n\") == \"1\"\n"
    },
    {
        "number": 3342,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n''') == '2'\nassert solution('''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n''') == '2'\nassert solution('''2 2 3\n0 0\n0 3\n1 4\n2 3\n2 0\n3 1\n3 2\n''') == '3'\nassert solution('''10 10 10\n0 0\n0 9\n9 0\n9 9\n5 5\n5 0\n0 0\n0 9\n9 0\n9 9\n5 5\n5 0\n''') == '3'\nassert solution('''10 10 10\n0 0\n0 9\n9 0\n9 9\n5 5\n5 0\n0 0\n0 9\n9 0\n9 9\n5 5\n5 0\n''') == '5'\n"
    },
    {
        "number": 3342,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0''') == '2'\nassert solution('''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0''') == '2'\nassert solution('''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n0 0\n0 3\n1 4\n3 3''') == '3'\nassert solution('''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3''') == '4'\nassert solution('''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n0 0\n0 3\n1 4\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n0 0\n0 3\n1 4\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n0 0\n0 3\n1 4\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 3\n0 0\n0 3\n1 4\n3 3\n3"
    },
    {
        "number": 3342,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '2'\n\"\"\""
    },
    {
        "number": 3342,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0''') == '2'\nassert solution('''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n2 1\n0 0''') == '2'\nassert solution('''3 5 3\n0 1\n0 2\n1 3\n1 4\n2 3\n2 4\n3 4\n3 0\n3 1\n0 0\n0 3\n1 4\n3 3\n3 0''') == '3'\nassert solution('''3 5 3\n0 1\n0 2\n1 3\n1 4\n2 3\n2 4\n3 4\n3 0\n3 1\n0 0\n0 3\n1 4\n3 3\n3 0\n2 1\n0 0''') == '3'\nassert solution('''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n3 1\n0 0\n0 3\n1 4\n3 3\n3 0\n2 1\n0 0''') == '3'\n"
    },
    {
        "number": 3342,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0''') == '2'\nassert solution('''2 3 4\n0 1\n0 2\n1 0\n1 1\n1 2\n1 3''') == '3'\nassert solution('''2 5 4\n1 1\n1 2\n0 1\n0 2\n1 0\n1 1\n1 2\n0 3\n1 4\n1 5\n1 6\n2 0\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 0\n3 1\n3 2\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n3 11\n3 12\n3 13\n3 14\n3 15\n3 16\n3 17\n3 18\n3 19\n3 20\n3 21\n3 22\n3 23\n3 24\n3 25\n3 26\n3 27\n3 28\n3 29\n3 30\n3 31\n3 32\n3 33\n3 34\n3 35\n3 36\n3 37\n3 38\n3 39\n3 40\n3 41\n3 42\n3 43\n3 44\n3 45\n3 46\n3 47\n3 48\n3 49\n3 50\n3 51\n3 52\n3 53\n3 54\n3 55\n3 56\n3 57\n3 58\n3 59\n3 60\n3 61\n3 62\n3 63\n3 64\n3 65\n3 66\n3 67\n3 68\n3 69\n3 70\n3 71\n3 72\n3 73\n3 74\n3 75\n3 76\n3 77\n3 78\n3 79\n3 80\n3 81\n3 82\n3 83\n3 84\n3 85\n3 86\n3 87\n3 88\n3 89\n3 90\n3 91\n3 92\n3 93\n3 94\n3 95\n3 96\n3 97\n3 98\n3 99\n3 100\n3 101\n3 102\n3 103\n3 104\n3 105\n3 106\n3 107\n3 108\n3 109\n3 110\n3 111\n3 112\n3 113\n3 114\n3 115\n3 116\n3 117\n3 118\n3 119\n3 120\n3 121\n3 122\n3 123\n3 124\n3 125\n3 126\n3 127\n3 128\n3 129\n3 130\n3 131\n3 132\n3 133\n3 134\n3 135\n3 136\n3 137\n3 138\n3 139\n3 140\n3 141\n3 142\n3 143\n3 144\n3 145\n3 146\n3 147\n3 148\n3 149\n3 150\n3 151\n3 152\n3 153\n3 154\n3 155\n3 156\n3 157\n3 158\n3 159\n3 160\n3 161\n3 162\n3 163\n3 164\n3 165\n3 166\n3 167\n3 168\n3 169\n3 170\n3 171\n3 172\n3 173\n3 174\n3 175\n3 176\n3 177\n3 178\n3 179\n3 180\n3 181\n3 182\n3 183\n3 184\n3 185\n3 186\n3 187\n3 188\n3 189\n3 190\n3 191\n3 192\n3 193\n3 194\n3 195\n3 196\n3 197\n3 198\n3 199\n3 200\n3 201\n3 202\n3 203\n3 204\n3 205\n3 206\n3 207\n3 208\n3 209\n3 210\n3 211\n3 212\n3 213\n3 214\n3 215\n3 216\n3 217\n3 218\n3 219\n3 220\n3 221\n3 222\n3 223\n3 224\n3 225\n3 226\n3 227\n3 228\n3 229\n3 230\n3 231\n3 232\n3 233\n3 234\n3 235\n3 236\n3 237\n3 238\n3 239\n3 240\n3 241\n3 242\n3 243\n3 244\n3 245\n3 246\n3 247\n3 248\n3 249\n3 250\n3 251\n3 252\n3 253\n3 254\n3 255\n3 256\n3 257\n3 258\n3 259\n3 260\n3 261\n3 262\n3 263\n3 264\n3 265\n3 266\n3 267\n3 268\n3 269\n3 270\n3 271\n3 272\n3 273\n3 274\n3 275\n3 276\n3 277\n3 278\n3 279\n3 280\n3 281\n3 282\n3 283\n3 284\n3 285\n3 286\n3 287\n3 288\n3 289\n3 290\n3 291\n3 292\n3 293\n3 294\n3 295\n3 296\n3 297\n3 298\n3 299\n3 300\n3 301\n3 302\n3 303\n3 304\n3 305\n3 306\n3 307\n3 308\n3 309\n3 310\n3 311\n3 312\n3 313\n3 314\n3 315\n3 316\n3 317\n3 318\n3 319\n3 320\n3 321\n3 322\n3 323\n3 324\n3 325\n3 326\n3 327\n3 328\n3 329\n3 330\n3 331\n3 332\n3 333\n3 334\n3 335\n3 336\n3 337\n3 338\n3 339\n3 340\n3 341\n3 342\n3 343\n3 344\n3 345\n3 346\n3 347\n3 348\n3 349\n3 350\n3 351\n3 352\n3 353\n3 354\n3 355\n3 356\n3 357\n3 358\n3 359\n3 360\n3 361\n3 362\n3 363\n3 364\n3 365\n3 366\n3 367\n3 368\n3 369\n3 370\n3 371\n3 372\n3 373\n3 374\n3 375\n3 376\n3 377\n3 378\n3 379\n3 380\n3 381\n3 382\n3 383\n3 384\n3 385\n3 386\n3 387\n3 388\n3 389\n3 390\n3 391\n3 392\n3 393\n3 394\n3 395\n3 396\n3 397\n3 398\n3 399\n3 400\n3 401\n3 402\n3 403\n3 404\n3 405\n3 406\n3 407\n3 408\n3 409\n3 410\n3 411\n3 412\n3 413\n3 414\n3 415\n3 416\n3 417\n3 418\n3 419\n3 420\n3 421\n3 422\n3 423\n3 424\n3 425\n3 426\n3 427\n3 428\n3 429\n3 430\n3 431\n3 432\n3 433\n3 434\n3 435\n3 436\n3 437\n3 438\n3 439\n3 440\n3 441\n3 442\n3 443\n3 444\n3 445\n3 446\n3 447\n3 448\n3 449\n3 450\n3 451\n3 45"
    },
    {
        "number": 3343,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 3\\n3 C\\n2 C\\n1 C') == 'GHOST'\nassert solution('4 3\\n3 W\\n2 W\\n1 W') == 'GHOST'\nassert solution('4 3\\n3 W\\n2 W\\n1 W') == 'GHOST'\nassert solution('4 3\\n3 W\\n2 W\\n1 W') == 'GHOST'\nassert solution('4 3\\n3 W\\n2 W\\n1 W') == 'GHOST'\n"
    },
    {
        "number": 3343,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 3\\n3 C\\n2 C\\n1 C') == 'GHOST'\nassert solution('4 3\\n3 C\\n2 C\\n1 C\\n0 0\\n0 1\\n0 2\\n1 2\\n2 2\\n2 3\\n3 3') == 'SAFE'\nassert solution('5 4\\n3 C\\n3 C\\n1 C\\n2 C\\n3 C\\n1 C\\n2 C\\n4 C\\n3 C\\n1 C\\n3 C\\n1 C\\n2 C\\n2 C\\n2 C\\n3 C\\n1 C\\n2 C\\n2 C\\n3 C\\n3 C') == 'SAFE'\n'''\n"
    },
    {
        "number": 3343,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 3\n3 C\n2 C\n1 C''') == 'GHOST'\nassert solution('''4 5\n0 C\n1 C\n2 C\n3 C\n4 C\n5 C\n6 C\n7 C\n8 C''') == 'SAFE'\nassert solution('''4 3\n0 C\n1 C\n2 C\n3 C\nSample Input:\n3 3\n0 C\n1 C\n2 C\nSample Output:\nGHOST\nassert solution('''3 3\n0 C\n1 C\n2 C\nSample Input:\n4 5\n0 C\n1 C\n2 C\n3 C\n4 C\n5 C\n6 C\n7 C\n8 C\nSample Output:\nSAFE\nassert solution('''4 5\n0 C\n1 C\n2 C\n3 C\n4 C\n5 C\n6 C\n7 C\n8 C''') == 'SAFE'\n"
    },
    {
        "number": 3343,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == \"GHOST\"\n\"\"\"\n"
    },
    {
        "number": 3343,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 3\\n1 C\\n2 C\\n3 C\\n4 C') == 'GHOST'\nassert solution('5 4\\n0 1 C\\n2 C\\n3 C\\n4 C') == 'GHOST'\nassert solution('4 5\\n0 1 C\\n1 C\\n2 C\\n3 C') == 'GHOST'\nassert solution('5 5\\n0 1 C\\n1 C\\n2 C\\n3 C\\n4 C') == 'GHOST'\nassert solution('4 4\\n0 1 C\\n2 C\\n3 C\\n4 C') == 'SAFE'\n"
    },
    {
        "number": 3343,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'GHOST'\n\"\"\"\n"
    },
    {
        "number": 3343,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 3\\n3 C\\n2 C\\n1 C') == 'GHOST'\nassert solution('5 2\\n5 W\\n3 W\\n3 C\\n3 W\\n4 W\\n4 W\\n3 W\\n4 W\\n5 W\\n5 W') == 'SAFE'\nassert solution('4 2\\n2 C\\n1 W') == 'SAFE'\nassert solution('4 1\\n1 W') == 'SAFE'\nassert solution('4 1\\n1 C') == 'GHOST'\n"
    },
    {
        "number": 3343,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3343,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"GHOST\"\nassert solution(\"2 3\") == \"GHOST\"\nassert solution(\"3 3\") == \"GHOST\"\nassert solution(\"1 1\") == \"GHOST\"\nassert solution(\"1 2\") == \"GHOST\"\n"
    },
    {
        "number": 3343,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 3\n3 C\n2 C\n1 C\n''') == 'GHOST'\nassert solution('''5 10\n2 C\n4 C\n5 C\n6 C\n7 C\n''') == 'SAFE'\nassert solution('''10 10\n1 C\n2 C\n3 C\n4 C\n5 C\n6 C\n7 C\n8 C\n9 C\n10 C\n''') == 'SAFE'\nassert solution('''2 10\n1 C\n2 C\n''') == 'GHOST'\n'''\n-----Alternate Solutions-----\n"
    },
    {
        "number": 3344,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3\n0.00 2.00''') == '2'\nassert solution('''2 3\n2.00 2.00''') == '2'\nassert solution('''5 4\n2.00 2.00 2.00 2.00 2.00''') == '0.1'\nassert solution('''5 4\n0.00 2.00 2.00 2.00 2.00''') == '1'\nassert solution('''5 4\n0.00 2.00 2.00 2.00 2.00''') == '2'\n"
    },
    {
        "number": 3344,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 3\n0.00 2.00''') == '2'\nassert solution('''2 3\n0.00 2.00\n1.01 1.00''') == '1'\nassert solution('''2 3\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0.00 2.00\n0"
    },
    {
        "number": 3344,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0.00 2.00\") == \"2\"\nassert solution(\"0.01 2.00\") == \"2\"\nassert solution(\"0.02 2.00\") == \"2\"\nassert solution(\"0.03 2.00\") == \"0.1\"\nassert solution(\"0.04 2.00\") == \"0.1\"\n"
    },
    {
        "number": 3344,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0.00 2.00') == '2'\nassert solution('0.1 2.0') == '2'\nassert solution('0.001 2.0') == '2'\nassert solution('0.01 2.0') == '2'\nassert solution('0.01 2.0') == '0.01'\n"
    },
    {
        "number": 3344,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0.00 2.00') == '2'\nassert solution('0.30 0.60') == '1'\nassert solution('0.03 0.17') == '0.5'\nassert solution('0.10 0.50') == '1'\nassert solution('0.70 0.20') == '0.5'\n"
    },
    {
        "number": 3344,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n0 0\n0.00 0.10 0.20 0.30 0.40 0.50 0.60 0.70 0.80 0.90 0.99\n\"\"\") == '2'\nassert solution(\n\"\"\"\n4 2\n0.00 1.00 1.10 1.20\n1.00 1.10 1.20 1.30\n1.10 1.20 1.30 1.40\n1.20 1.30 1.40 1.50\n1.30 1.40 1.50 1.60\n1.40 1.50 1.60 1.70\n1.50 1.60 1.70 1.80\n1.60 1.70 1.80 1.90\n1.70 1.80 1.90 1.99\n\"\"\") == '10'\nassert solution(\n\"\"\"\n2 2\n0.00 1.00\n1.00 1.10\n1.10 1.20\n1.20 1.30\n1.30 1.40\n1.40 1.50\n1.50 1.60\n1.60 1.70\n1.70 1.80\n1.80 1.90\n1.90 1.99\n\"\"\") == '5'\nassert solution(\n\"\"\"\n4 4\n0.00 0.10 0.20 0.30 0.40 0.50 0.60 0.70 0.80 0.90 0.99\n1.00 1.10 1.20 1.30 1.40 1.50 1.60 1.70 1.80 1.90 1.99\n\"\"\") == '5'\n"
    },
    {
        "number": 3344,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 3\n0.00 2.00''') == '2'\nassert solution('''2 3\n0.2 2.2\n''') == '2'\nassert solution('''1 4\n0.00 0.00\n0.00 0.01\n0.00 0.02\n0.00 0.03\n0.00 0.04\n0.00 0.05\n0.00 0.06\n0.00 0.07\n0.00 0.08\n0.00 0.09\n0.00 0.10\n0.00 0.11\n0.00 0.12\n0.00 0.13\n0.00 0.14\n0.00 0.15\n0.00 0.16\n0.00 0.17\n0.00 0.18\n0.00 0.19\n0.00 0.20\n0.00 0.21\n0.00 0.22\n0.00 0.23\n0.00 0.24\n0.00 0.25\n0.00 0.26\n0.00 0.27\n0.00 0.28\n0.00 0.29\n0.00 0.30\n0.00 0.31\n0.00 0.32\n0.00 0.33\n0.00 0.34\n0.00 0.35\n0.00 0.36\n0.00 0.37\n0.00 0.38\n0.00 0.39\n0.00 0.40\n0.00 0.41\n0.00 0.42\n0.00 0.43\n0.00 0.44\n0.00 0.45\n0.00 0.46\n0.00 0.47\n0.00 0.48\n0.00 0.49\n0.00 0.50\n0.00 0.51\n0.00 0.52\n0.00 0.53\n0.00 0.54\n0.00 0.55\n0.00 0.56\n0.00 0.57\n0.00 0.58\n0.00 0.59\n0.00 0.60\n0.00 0.61\n0.00 0.62\n0.00 0.63\n0.00 0.64\n0.00 0.65\n0.00 0.66\n0.00 0.67\n0.00 0.68\n0.00 0.69\n0.00 0.70\n0.00 0.71\n0.00 0.72\n0.00 0.73\n0.00 0.74\n0.00 0.75\n0.00 0.76\n0.00 0.77\n0.00 0.78\n0.00 0.79\n0.00 0.80\n0.00 0.81\n0.00 0.82\n0.00 0.83\n0.00 0.84\n0.00 0.85\n0.00 0.86\n0.00 0.87\n0.00 0.88\n0.00 0.89\n0.00 0.90\n0.00 0.91\n0.00 0.92\n0.00 0.93\n0.00 0.94\n0.00 0.95\n0.00 0.96\n0.00 0.97\n0.00 0.98\n0.00 0.99\n0.00 1.00\n0.00 2.00\n0.00 3.00\n0.00 4.00\n0.00 5.00\n0.00 6.00\n0.00 7.00\n0.00 8.00\n0.00 9.00\n0.00 10.00\n0.00 11.00\n0.00 12.00\n0.00 13.00\n0.00 14.00\n0.00 15.00\n0.00 16.00\n0.00 17.00\n0.00 18.00\n0.00 19.00\n0.00 20.00\n0.00 21.00\n0.00 22.00\n0.00 23.00\n0.00 24.00\n0.00 25.00\n0.00 26.00\n0.00 27.00\n0.00 28.00\n0.00 29.00\n0.00 30.00\n0.00 31.00\n0.00 32.00\n0.00 33.00\n0.00 34.00\n0.00 35.00\n0.00 36.00\n0.00 37.00\n0.00 38.00\n0.00 39.00\n0.00 40.00\n0.00 41.00\n0.00 42.00\n0.00 43.00\n0.00 44.00\n0.00 45.00\n0.00 46.00\n0.00 47.00\n0.00 48.00\n0.00 49.00\n0.00 50.00\n0.00 51.00\n0.00 52.00\n0.00 53.00\n0.00 54.00\n0.00 55.00\n0.00 56.00\n0.00 57.00\n0.00 58.00\n0.00 59.00\n0.00 60.00\n0.00 61.00\n0.00 62.00\n0.00 63.00\n0.00 64.00\n0.00 65.00\n0.00 66.00\n0.00 67.00\n0.00 68.00\n0.00 69.00\n0.00 70.00\n0.00 71.00\n0.00 72.00\n0.00 73.00\n0.00 74.00\n0.00 75.00\n0.00 76.00\n0.00 77.00\n0.00 78.00\n0.00 79.00\n0.00 80.00\n0.00 81.00\n0.00 82.00\n0.00 83.00\n0.00 84.00\n0.00 85.00\n0.00 86.00\n0.00 87.00\n0.00 88.00\n0.00 89.00\n0.00 90.00\n0.00 91.00\n0.00 92.00\n0.00 93.00\n0.00 94.00\n0.00 95.00\n0.00 96.00\n0.00 97.00\n0.00 98.00\n0.00 99.00\n0.00 100.00\n0.00 101.00\n0.00 102.00\n0.00 103.00\n0.00 104.00\n0.00 105.00\n0.00 106.00\n0.00 107.00\n0.00 108.00\n0.00 109.00\n0.00 110.00\n"
    },
    {
        "number": 3344,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"2\"\nassert solution(\"0.00 2.00\") == \"2\"\nassert solution(\"0.01 2.00\") == \"1.00\"\nassert solution(\"0.01 2.01\") == \"0.01\"\nassert solution(\"0.10 1.00\") == \"2.00\"\n"
    },
    {
        "number": 3344,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0.00 2.00\n''') == '2'\nassert solution('''1.00 2.00\n''') == '2'\nassert solution('''0.00 1.99\n''') == '2'\nassert solution('''0.00 1.9\n''') == '1.9'\nassert solution('''0.00 1.8\n''') == '1.8'\n"
    },
    {
        "number": 3344,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0.00 2.00\\n0.1\") == \"2\"\nassert solution(\"0.1 2.3\\n0.5\") == \"no fika\"\nassert solution(\"1 1\\n0.1\\n2.1\\n2.0\\n1.9\\n1.8\\n1.7\\n1.6\\n1.5\\n1.4\\n1.3\\n1.2\\n1.1\\n1.0\\n0.9\\n0.8\\n0.7\\n0.6\\n0.5\\n0.4\\n0.3\\n0.2\\n0.1\\n0.0\\n-0.1\\n-0.2\\n-0.3\\n-0.4\\n-0.5\\n-0.6\\n-0.7\\n-0.8\\n-0.9\\n1.0\\n1.1\\n1.2\\n1.3\\n1.4\\n1.5\\n1.6\\n1.7\\n1.8\\n1.9\\n2.0\\n2.1\\n2.2\\n2.3\\n2.4\\n2.5\\n2.6\\n2.7\\n2.8\\n2.9\\n3.0\\n3.1\\n3.2\\n3.3\\n3.4\\n3.5\\n3.6\\n3.7\\n3.8\\n3.9\\n4.0\\n4.1\\n4.2\\n4.3\\n4.4\\n4.5\\n4.6\\n4.7\\n4.8\\n4.9\\n5.0\\n5.1\\n5.2\\n5.3\\n5.4\\n5.5\\n5.6\\n5.7\\n5.8\\n5.9\\n6.0\\n6.1\\n6.2\\n6.3\\n6.4\\n6.5\\n6.6\\n6.7\\n6.8\\n6.9\\n7.0\\n7.1\\n7.2\\n7.3\\n7.4\\n7.5\\n7.6\\n7.7\\n7.8\\n7.9\\n8.0\\n8.1\\n8.2\\n8.3\\n8.4\\n8.5\\n8.6\\n8.7\\n8.8\\n8.9\\n9.0\\n9.1\\n9.2\\n9.3\\n9.4\\n9.5\\n9.6\\n9.7\\n9.8\\n9.9\\n10.0\\n10.1\\n10.2\\n10.3\\n10.4\\n10.5\\n10.6\\n10.7\\n10.8\\n10.9\\n11.0\\n11.1\\n11.2\\n11.3\\n11.4\\n11.5\\n11.6\\n11.7\\n11.8\\n11.9\\n12.0\\n12.1\\n12.2\\n12.3\\n12.4\\n12.5\\n12.6\\n12.7\\n12.8\\n12.9\\n13.0\\n13.1\\n13.2\\n13.3\\n13.4\\n13.5\\n13.6\\n13.7\\n13.8\\n13.9\\n14.0\\n14.1\\n14.2\\n14.3\\n14.4\\n14.5\\n14.6\\n14.7\\n14.8\\n14.9\\n15.0\\n15.1\\n15.2\\n15.3\\n15.4\\n15.5\\n15.6\\n15.7\\n15.8\\n15.9\\n16.0\\n16.1\\n16.2\\n16.3\\n16.4\\n16.5\\n16.6\\n16.7\\n16.8\\n16.9\\n17.0\\n17.1\\n17.2\\n17.3\\n17.4\\n17.5\\n17.6\\n17.7\\n17.8\\n17.9\\n18.0\\n18.1\\n18.2\\n18.3\\n18.4\\n18.5\\n18.6\\n18.7\\n18.8\\n18.9\\n19.0\\n19.1\\n19.2\\n19.3\\n19.4\\n19.5\\n19.6\\n19.7\\n19.8\\n19.9\\n20.0\\n20.1\\n20.2\\n20.3\\n20.4\\n20.5\\n20.6\\n20.7\\n20.8\\n20.9\\n21.0\\n21.1\\n21.2\\n21.3\\n21.4\\n21.5\\n21.6\\n21.7\\n21.8\\n21.9\\n22.0\\n22.1\\n22.2\\n22.3\\n22.4\\n22.5\\n22.6\\n22.7\\n22.8\\n22.9\\n23.0\\n23.1\\n23.2\\n23.3\\n23.4\\n23.5\\n23.6\\n23.7\\n23.8\\n23.9\\n24.0\\n24.1\\n24.2\\n24.3\\n24.4\\n24.5\\n24.6\\n24.7\\n24.8\\n24.9\\n25.0\\n25.1\\n25.2\\n25.3\\n25.4\\n25.5\\n25.6\\n25.7\\n25.8\\n25.9\\n26.0\\n26.1\\n26.2\\n26.3\\n26.4\\n26.5\\n26.6\\n26.7\\n26.8\\n26.9\\n27.0"
    },
    {
        "number": 3345,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"0\\n0\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2"
    },
    {
        "number": 3345,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0 0\n2 0\n10 0\n2 30 0\n15 0\n''') == '10'\nassert solution('''0 0\n2 0\n10 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n15 0\n3 0\n20 0\n2 0\n2 30 0\n"
    },
    {
        "number": 3345,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"0 0\n10 0\n2\n30 0\n15 0\"\"\") == '10'\nassert solution(\n    \"\"\"1\n0 0\n2\n0 0\n3\n0 0\n4\n0 0\"\"\") == '0'\nassert solution(\n    \"\"\"1\n0 0\n2\n0 0\n5\n0 0\n8\n0 0\n6\n0 0\n9\n0 0\"\"\") == '2'\nassert solution(\n    \"\"\"1\n0 0\n2\n0 0\n3\n0 0\n4\n0 0\n5\n0 0\n6\n0 0\n7\n0 0\n8\n0 0\n9\n0 0\n10\n0 0\n11\n0 0\n12\n0 0\n13\n0 0\n14\n0 0\n15\n0 0\n16\n0 0\n17\n0 0\n18\n0 0\n19\n0 0\n20\n0 0\n21\n0 0\n22\n0 0\n23\n0 0\n24\n0 0\n25\n0 0\n26\n0 0\n27\n0 0\n28\n0 0\n29\n0 0\n30\n0 0\n31\n0 0\n32\n0 0\n33\n0 0\n34\n0 0\n35\n0 0\n36\n0 0\n37\n0 0\n38\n0 0\n39\n0 0\n40\n0 0\n41\n0 0\n42\n0 0\n43\n0 0\n44\n0 0\n45\n0 0\n46\n0 0\n47\n0 0\n48\n0 0\n49\n0 0\n50\n0 0\n51\n0 0\n52\n0 0\n53\n0 0\n54\n0 0\n55\n0 0\n56\n0 0\n57\n0 0\n58\n0 0\n59\n0 0\n60\n0 0\n61\n0 0\n62\n0 0\n63\n0 0\n64\n0 0\n65\n0 0\n66\n0 0\n67\n0 0\n68\n0 0\n69\n0 0\n70\n0 0\n71\n0 0\n72\n0 0\n73\n0 0\n74\n0 0\n75\n0 0\n76\n0 0\n77\n0 0\n78\n0 0\n79\n0 0\n80\n0 0\n81\n0 0\n82\n0 0\n83\n0 0\n84\n0 0\n85\n0 0\n86\n0 0\n87\n0 0\n88\n0 0\n89\n0 0\n90\n0 0\n91\n0 0\n92\n0 0\n93\n0 0\n94\n0 0\n95\n0 0\n96\n0 0\n97\n0 0\n98\n0 0\n99\n0 0\"\"\") == '2'\nassert solution(\n    \"\"\"0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n"
    },
    {
        "number": 3345,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''0 0\n10 0\n2\n30 0\n15 0''') == '10'\nassert solution('''0 0\n10 0\n2\n30 0\n15 0\n2\n30 0\n15 0''') == '10'\nassert solution('''0 0\n10 0\n2\n30 0\n15 0\n2\n30 0\n15 0\n2\n30 0\n15 0''') == '10'\nassert solution('''0 0\n10 0\n2\n30 0\n15 0\n2\n30 0\n15 0\n2\n30 0\n15 0''') == '10'\nassert solution('''0 0\n10 0\n2\n30 0\n15 0\n2\n30 0\n15 0\n2\n30 0\n15 0\n2\n30 0\n15 0''') == '10'\n"
    },
    {
        "number": 3345,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n0 0\n10 0\n2\n30 0\n15 0\n\"\"\") == '10'\nassert solution(\n\"\"\"\n0 0\n2\n15 0\n-2\n-15\n\"\"\") == '1'\nassert solution(\n\"\"\"\n0 0\n2\n15 0\n3\n3\n\"\"\") == '4'\nassert solution(\n\"\"\"\n3\n-1\n2\n1\n3\n\"\"\") == '2'\nassert solution(\n\"\"\"\n3\n-1\n2\n1\n-2\n\"\"\") == '1'\n"
    },
    {
        "number": 3345,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 0') == '10'\nassert solution('0 0\\n0 0\\n0 0') == '10'\nassert solution('0 0\\n0 0\\n0 0\\n0 0') == '10'\nassert solution('2\\n0 0\\n0 0\\n0 0\\n0 0') == '0'\nassert solution('2\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0') == '0'\n"
    },
    {
        "number": 3345,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0 0\n10 0\n2\n30 0\n15 0''') == \"10\"\n\nassert solution('''0 0\n2\n30 0\n15 0''') == \"2\"\n\nassert solution('''0 0\n2\n30 0\n15 0''') == \"10\"\n\nassert solution('''0 0\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0\n2\n30 0\n15 0\n5\n10 0"
    },
    {
        "number": 3345,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''0 0\n10 0\n2\n30 0\n15 0''') == \"10\"\nassert solution('''0 0\n10 0\n2\n30 0\n15 0\n0 0\n10 0\n2\n30 0\n15 0''') == \"10\"\nassert solution('''0 0\n0 0\n2\n30 0\n15 0\n0 0\n10 0\n2\n30 0\n15 0\n0 0\n10 0\n2\n30 0\n15 0''') == \"10\"\nassert solution('''0 0\n0 0\n2\n30 0\n15 0\n0 0\n10 0\n2\n30 0\n15 0\n0 0\n10 0\n2\n30 0\n15 0''') == \"10\"\nassert solution('''0 0\n0 0\n2\n30 0\n15 0\n0 0\n10 0\n2\n30 0\n15 0\n0 0\n10 0\n2\n30 0\n15 0\n0 0\n10 0\n2\n30 0\n15 0''') == \"10\"\n"
    },
    {
        "number": 3345,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0 0\n2 0\n30 0\n15 0''') == \"10\"\nassert solution('''0 0\n0 0\n2 0\n30 0\n15 0''') == \"10\"\nassert solution('''0 0\n1 2\n0 0\n1 1''') == \"2\"\nassert solution('''0 0\n0 0\n2 0\n30 0\n15 0''') == \"10\"\nassert solution('''0 0\n0 0\n2 0\n30 0\n15 0\n5 0''') == \"2\"\n"
    },
    {
        "number": 3345,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '0'\nassert stdin == '2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\\n'\n"
    },
    {
        "number": 3346,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin[13:36]\n"
    },
    {
        "number": 3346,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8 3') == '0'\nassert solution('10 3') == '0'\nassert solution('4 2') == '0'\nassert solution('10 2') == '0'\nassert solution('4 4') == '1'\n"
    },
    {
        "number": 3346,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '0'\n"
    },
    {
        "number": 3346,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n8 3\nW 10 0\nW 10 3\nE 17 4\n''') == '0'\nassert solution('''\n8 4\nE 10 0\nW 10 3\nE 17 4\n''') == '1'\nassert solution('''\n8 4\nE 10 0\nE 17 4\n''') == '2'\nassert solution('''\n8 4\nE 10 0\nE 17 4\nW 10 3\nE 17 4\n''') == '3'\nassert solution('''\n8 4\nE 10 0\nE 17 4\nE 17 4\n''') == '2'\n"
    },
    {
        "number": 3346,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\\\n8 4\nE 8 2\nW 8 10\nE 17 4\n''') == '0'\nassert solution('''\\\n8 3\nW 10 0\nW 10 3\nE 17 4\n''') == '2'\nassert solution('''\\\n8 3\nW 10 0\nW 10 3\nE 17 4\nW 10 0\nE 17 4\n''') == '1'\nassert solution('''\\\n8 3\nE 8 2\nW 8 10\nE 17 4\nW 10 0\nE 17 4\n''') == '2'\nassert solution('''\\\n8 3\nW 10 0\nW 10 3\nE 17 4\nW 10 0\nE 17 4\n''') == '1'\n"
    },
    {
        "number": 3346,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(SAMPLE_INPUT) == \"2\"\nprint(solution(INPUT))\n\"\"\"\n\nfrom collections import defaultdict\nfrom typing import List, DefaultDict\n\nclass Cars:\n    def __init__(self, t: int, n: int) -> None:\n        self.t = t\n        self.n = n\n\n        self.arrivals: DefaultDict[int, List[int]] = defaultdict(list)\n\n    def add_arrivals(self, d: int, a: int, r: int) -> None:\n        self.arrivals[d].append(a)\n        self.arrivals[d].append(r)\n        self.arrivals[d].sort()\n\n    def get_arrivals(self, d: int) -> List[int]:\n        return self.arrivals[d]\n\n    def get_next_arrival(self, d: int) -> int:\n        if not self.arrivals[d]:\n            return float('inf')\n\n        r = self.arrivals[d].pop(0)\n        self.arrivals[d].sort()\n        return r\n\n    def has_arrivals(self, d: int) -> bool:\n        return len(self.arrivals[d]) > 0\n\n    def __str__(self) -> str:\n        return \"\".join([\n            \"Cars(t={}, n={})\".format(self.t, self.n)\n        ])\n\n    __repr__ = __str__"
    },
    {
        "number": 3346,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '0'\n\"\"\"\n"
    },
    {
        "number": 3346,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"8 3\") == \"0\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\\n\") == \"0\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\\n\") == \"0\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\\n\") == \"0\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\\n\") == \"0\"\n"
    },
    {
        "number": 3346,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8 3') == '0'\nassert solution('5 2') == '0'\nassert solution('8 4') == '1'\nassert solution('4 6') == '1'\nassert solution('5 2') == '0'\n"
    },
    {
        "number": 3346,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''W 10 0\nW 10 3\nE 17 4'''\n) == '0'\nassert solution(\n'''W 10 0\nW 10 3\nE 17 4\nW 16 1\nE 17 4\nW 16 2\nE 17 4'''\n) == '2'\nassert solution(\n'''W 10 0\nW 10 3\nE 17 4\nW 10 4\nE 17 4\nW 10 6\nE 17 4'''\n) == '2'\nassert solution(\n'''W 10 0\nW 10 3\nE 17 4\nW 10 4\nE 17 4\nW 10 6\nE 17 4\nW 16 1\nE 17 4'''\n) == '2'\nassert solution(\n'''W 10 0\nW 10 3\nE 17 4\nW 10 4\nE 17 4\nW 10 6\nE 17 4\nW 16 1\nE 17 4\nW 16 2\nE 17 4\nW 16 3\nE 17 4'''\n) == '2'\n"
    },
    {
        "number": 3347,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10') == '3'\nassert solution('5\\n5 8\\n5 6\\n3 4\\n6 6') == '1'\nassert solution('4\\n1 1\\n3 3\\n4 4') == '4'\nassert solution('6\\n9 9\\n6 6\\n5 5\\n8 8\\n9 9') == '5'\nassert solution('7\\n5 5\\n3 3\\n5 5\\n8 8\\n10 10') == '2'\n"
    },
    {
        "number": 3347,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n5 8\n5 6\n3 4\n5 13\n6 10''') == '3'\nassert solution('''3\n1 1\n2 1\n3 1\n4 1\n5 1\n6 1\n7 1\n8 1\n9 1\n10 1\n11 1\n12 1\n13 1\n14 1\n15 1\n16 1\n17 1\n18 1\n19 1\n20 1\n21 1\n22 1\n23 1\n24 1\n25 1\n26 1\n27 1\n28 1\n29 1\n30 1\n31 1\n32 1\n33 1\n34 1\n35 1\n36 1\n37 1\n38 1\n39 1\n40 1\n41 1\n42 1\n43 1\n44 1\n45 1\n46 1\n47 1\n48 1\n49 1\n50 1\n51 1\n52 1\n53 1\n54 1\n55 1\n56 1\n57 1\n58 1\n59 1\n60 1\n61 1\n62 1\n63 1\n64 1\n65 1\n66 1\n67 1\n68 1\n69 1\n70 1\n71 1\n72 1\n73 1\n74 1\n75 1\n76 1\n77 1\n78 1\n79 1\n80 1\n81 1\n82 1\n83 1\n84 1\n85 1\n86 1\n87 1\n88 1\n89 1\n90 1\n91 1\n92 1\n93 1\n94 1\n95 1\n96 1\n97 1\n98 1\n99 1\n100 1\n101 1\n102 1\n103 1\n104 1\n105 1\n106 1\n107 1\n108 1\n109 1\n110 1\n111 1\n112 1\n113 1\n114 1\n115 1\n116 1\n117 1\n118 1\n119 1\n120 1\n121 1\n122 1\n123 1\n124 1\n125 1\n126 1\n127 1\n128 1\n129 1\n130 1\n131 1\n132 1\n133 1\n134 1\n135 1\n136 1\n137 1\n138 1\n139 1\n140 1\n141 1\n142 1\n143 1\n144 1\n145 1\n146 1\n147 1\n148 1\n149 1\n150 1\n151 1\n152 1\n153 1\n154 1\n155 1\n156 1\n157 1\n158 1\n159 1\n160 1\n161 1\n162 1\n163 1\n164 1\n165 1\n166 1\n167 1\n168 1\n169 1\n170 1\n171 1\n172 1\n173 1\n174 1\n175 1\n176 1\n177 1\n178 1\n179 1\n180 1\n181 1\n182 1\n183 1\n184 1\n185 1\n186 1\n187 1\n188 1\n189 1\n190 1\n191 1\n192 1\n193 1\n194 1\n195 1\n196 1\n197 1\n198 1\n199 1\n200 1\n201 1\n202 1\n203 1\n204 1\n205 1\n206 1\n207 1\n208 1\n209 1\n210 1\n211 1\n212 1\n213 1\n214 1\n215 1\n216 1\n217 1\n218 1\n219 1\n220 1\n221 1\n222 1\n223 1\n224 1\n225 1\n226 1\n227 1\n228 1\n229 1\n230 1\n231 1\n232 1\n233 1\n234 1\n235 1\n236 1\n237 1\n238 1\n239 1\n240 1\n241 1\n242 1\n243 1\n244 1\n245 1\n246 1\n247 1\n248 1\n249 1\n250 1\n251 1\n252 1\n253 1\n254 1\n255 1\n256 1\n257 1\n258 1\n259 1\n260 1\n261 1\n262 1\n263 1\n264 1\n265 1\n266 1\n267 1\n268 1\n269 1\n270 1\n271 1\n272 1\n273 1\n274 1\n275 1\n276 1\n277 1\n278 1\n279 1\n280 1\n281 1\n282 1\n283 1\n284 1\n285 1\n286 1\n287 1\n288 1\n289 1\n290 1\n291 1\n292 1\n293 1\n294 1\n295 1\n296 1\n297 1\n298 1\n299 1\n300 1\n301 1\n302 1\n303 1\n304 1\n305 1\n306 1\n307 1\n308 1\n309 1\n310 1\n311 1\n312 1\n313 1\n314 1\n315 1\n316 1\n317 1\n318 1\n319 1\n320 1\n321 1\n322 1\n323 1\n324 1\n325 1\n326 1\n327 1\n328 1\n329 1\n330 1\n331 1\n332 1\n333 1\n334 1\n335 1\n336 1\n337 1\n338 1\n339 1\n340 1\n341 1\n342 1\n343 1\n344 1\n345 1\n346 1\n347 1\n348 1\n349 1\n350 1\n351 1\n352 1\n353 1\n354 1\n355 1\n356 1\n357 1\n358 1\n359 1\n360 1\n361 1\n362 1\n363 1\n364 1\n365 1\n366 1\n367 1\n368 1\n369 1\n370 1\n371 1\n372 1\n373 1\n374 1\n375 1\n376 1\n377 1\n378 1\n379 1\n380 1\n381 1\n382 1\n383 1\n384 1\n385 1\n386 1\n387 1\n388 1\n389 1\n390 1\n391 1\n392 1\n393 1\n394 1\n395 1\n396 1\n397 1\n398 1\n399 1\n400 1\n401 1\n402 1\n403 1\n404 1\n405 1\n406 1\n407 1\n408 1\n409 1\n410 1\n411 1\n412 1\n413 1\n414 1\n415 1\n416 1\n417 1\n418 1\n419 1\n420 1\n421 1\n422 1\n423 1\n424 1\n425 1\n426 1\n427 1\n428 1\n429 1\n430 1\n431 1\n432 1\n433 1\n434 1\n435 1\n436 1\n437 1\n438 1\n439 1\n440 1\n441 1\n442 1\n443 1\n444 1\n445 1\n446 1\n447 1\n448 1\n449 1\n450 1\n451 1\n452 1\n453 1\n454 1\n455 1\n456 1\n457 1\n458 1\n459 1\n460 1\n461 1\n462 1\n463 1\n464 1\n465 1\n466 1\n467 1\n468 1\n469 1\n470 1\n471 1\n472 1\n473 1\n474 1\n475 1\n476 1\n477 1\n478 1\n479 1\n480 1\n481 1\n482 1\n483 1\n484 1\n485 1\n486 1\n487 1\n488 1\n489 1\n490 1\n491"
    },
    {
        "number": 3347,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n5\n5 8\n5 6\n3 4\n5 13\n6 10\n''') == '3'\n\nassert solution(\n'''\n4\n2 1\n3 2\n4 3\n5 4\n1 3\n2 4\n3 5\n''') == '4'\n\nassert solution(\n'''\n1\n1 1\n''') == '1'\n\nassert solution(\n'''\n2\n3 3\n5 5\n4 4\n3 3\n1 2\n2 1\n''') == '3'\n\nassert solution(\n'''\n10\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '9'"
    },
    {
        "number": 3347,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\n"
    },
    {
        "number": 3347,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\") == \"3\"\nassert solution(\"5\\n5 6\\n3 4\\n5 13\\n6 10\") == \"3\"\nassert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\") == \"3\"\nassert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\") == \"3\"\nassert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\") == \"3\"\n"
    },
    {
        "number": 3347,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\") == \"3\"\nassert solution(\"10\\n3 8\\n5 6\\n7 10\\n9 4\\n2 10\\n1 3\\n5 3\\n6 4\\n7 9\\n8 5\\n9 8\\n2 7\\n3 6\\n4 5\\n5 7\\n6 9\\n7 2\\n8 3\\n9 8\\n2 7\\n3 6\\n4 5\\n5 7\\n6 9\\n7 2\\n8 3\\n9 8\\n2 7\\n3 6\\n4 5\\n5 7\\n6 9\\n7 2\\n8 3\\n9 8\\n2 7\\n3 6\\n4 5\\n5 7\\n6 9\\n7 2\\n8 3\\n9 8\") == \"12\"\nassert solution(\"10\\n3 8\\n5 6\\n7 10\\n9 4\\n2 10\\n1 3\\n5 3\\n6 4\\n7 9\\n8 5\\n9 8\\n2 7\\n3 6\\n4 5\\n5 7\\n6 9\\n7 2\\n8 3\\n9 8\\n2 7\\n3 6\\n4 5\\n5 7\\n6 9\\n7 2\\n8 3\\n9 8\\n2 7\\n3 6\\n4 5\\n5 7\\n6 9\\n7 2\\n8 3\\n9 8\\n2 7\\n3 6\\n4 5\\n5 7\\n6 9\\n7 2\\n8 3\\n9 8\") == \"12\"\nassert solution(\"10\\n3 8\\n5 6\\n7 10\\n9 4\\n2 10\\n1 3\\n5 3\\n6 4\\n7 9\\n8 5\\n9 8\\n2 7\\n3 6\\n4 5\\n5 7\\n6 9\\n7 2\\n8 3\\n9 8\\n2 7\\n3 6\\n4 5\\n5 7\\n6 9\\n7 2\\n8 3\\n9 8\\n2 7\\n3 6\\n4 5\\n5 7\\n6 9\\n7 2\\n8 3\\n9 8\\n2 7\\n3 6\\n4 5\\n5 7\\n6 9\\n7 2\\n8 3\\n9 8\\n2 7\\n3 6\\n4 5\\n5 7\\n6 9\\n7 2\\n8 3\\n9 8\") == \"12\"\nassert solution(\"10\\n3 8\\n5 6\\n7 10\\n9 4\\n2 10\\n1 3\\n5 3\\n6 4\\n7 9\\n8 5\\n9 8\\n2 7\\n3 6\\n4 5\\n5 7\\n6 9\\n7 2\\n8 3\\n9 8\\n2 7\\n3 6\\n4 5\\n5 7\\n6 9\\n7 2\\n8 3\\n9 8\\n2 7\\n3 6\\n4 5\\n5 7\\n6 9\\n7 2\\n8 3\\n9 8\\n2 7\\n3 6\\n4 5\\n5 7\\n6 9\\n7 2\\n8 3\\n9 8\") == \"12\"\n"
    },
    {
        "number": 3347,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n5 8\n5 6\n3 4\n5 13\n6 10''') == '3'\n'''\n"
    },
    {
        "number": 3347,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n1 3\") == \"2\"\nassert solution(\"2 3\\n2 1\\n3 1\") == \"2\"\nassert solution(\"1 1\\n1 1\") == \"0\"\nassert solution(\"1 1\\n1 1\\n1 1\") == \"1\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\") == \"1\"\n"
    },
    {
        "number": 3347,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n5\n5 8\n5 6\n3 4\n5 13\n6 10\n''') == '3'\n\nassert solution('''\n5\n5 8\n5 6\n3 4\n5 13\n6 10\n1 1\n2 4\n4 5\n6 5\n''') == '1'\n\nassert solution('''\n10\n10 13\n10 1\n3 4\n5 13\n6 10\n7 9\n8 6\n9 5\n10 4\n11 3\n12 2\n13 1\n''') == '2'\n"
    },
    {
        "number": 3347,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n5\n5 8\n5 6\n3 4\n5 13\n6 10\n''') == \"3\"\n\nassert solution('''\n6\n5 8\n5 6\n3 4\n5 13\n6 10\n''') == \"2\"\n\nassert solution('''\n7\n7 7\n7 6\n7 4\n7 3\n7 2\n7 1\n7 0\n6 5\n6 4\n6 3\n6 2\n6 1\n6 0\n''') == \"4\"\n\nassert solution('''\n8\n8 8\n8 7\n8 6\n8 5\n8 4\n8 3\n8 2\n8 1\n8 0\n7 7\n7 6\n7 5\n7 4\n7 3\n7 2\n7 1\n7 0\n''') == \"5\"\n\nassert solution('''\n10\n10 8\n10 7\n10 6\n10 5\n10 4\n10 3\n10 2\n10 1\n10 0\n9 9\n9 8\n9 7\n9 6\n9 5\n9 4\n9 3\n9 2\n9 1\n9 0\n''') == \"9\""
    },
    {
        "number": 3348,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4\n10 3 3''') == 'impossible'\nassert solution('''4 2\n3 3 1''') == 'impossible'\nassert solution('''4 2\n6 4 1''') == 'impossible'\nassert solution('''4 2\n1 3 2''') == 'impossible'\nassert solution('''4 2\n1 4 1''') == 'impossible'\n"
    },
    {
        "number": 3348,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n1 0 1\\n\") == \"impossible\"\nassert solution(\"4 4\\n10 3 3\\n\") == \"impossible\"\nassert solution(\"4 4\\n5 4 2\\n2 0 1\\n\") == \"impossible\"\nassert solution(\"4 4\\n7 4 3\\n3 3 1\\n\") == \"impossible\"\nassert solution(\"4 4\\n8 4 4\\n2 0 1\\n\") == \"impossible\"\n"
    },
    {
        "number": 3348,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 4\n10 3 3''') == '''impossible\n'''\nassert solution('''2 2\n4 2 2''') == '''impossible\n'''\nassert solution('''2 2\n3 2 3''') == '''impossible\n'''\nassert solution('''2 2\n8 2 5''') == '''impossible\n'''\nassert solution('''2 2\n1 1 1''') == '''impossible\n'''\n"
    },
    {
        "number": 3348,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 4\n10 3 3''') == ''\nassert solution('''4 4\n10 3 3\nn''') == '''impossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimp"
    },
    {
        "number": 3348,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 3348,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\\n0 1 2\\n0 1 2\\n0 1 2\") == \"impossible\"\nassert solution(\"1 2 3\\n0 1 2\\n0 1 2\\n0 1 2\\n0 1 2\") == \"impossible\"\nassert solution(\"1 2 3\\n0 1 2\\n0 1 2\\n0 1 2\\n0 1 2\\n0 1 2\\n0 1 2\") == \"impossible\"\nassert solution(\"4 6\\n1 2 1\\n1 1 1\\n1 1 2\\n1 2 2\\n2 2 1\\n2 1 1\\n2 2 2\") == \"impossible\"\nassert solution(\"4 6\\n1 2 1\\n1 1 1\\n1 1 2\\n1 2 2\\n2 2 1\\n2 1 1\\n2 1 2\\n1 2 2\") == \"impossible\"\n"
    },
    {
        "number": 3348,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 4\n10 3 3''') == 'impossible'\nassert solution('''4 4\n10 3 2''') == 'impossible'\nassert solution('''3 3\n1 2 3''') == 'impossible'\nassert solution('''3 3\n10 3 2''') == 'impossible'\nassert solution('''3 3\n5 3 2''') == 'impossible'\n"
    },
    {
        "number": 3348,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n10 3 3\\n\") == \"impossible\"\nassert solution(\"4 2\\n2 1 1\\n\") == \"2 2 1 1 1 2 1 1 1 1\"\nassert solution(\"4 4\\n1 1 1\\n1 2 3\\n1 1 1\\n1 1 1\\n2 3 3\\n2 2 2\\n3 3 3\\n3 3 3\") == \"impossible\"\nassert solution(\"4 3\\n2 3 1\\n2 3 1\\n2 3 1\\n3 3 1\\n3 3 1\\n3 3 1\\n3 3 1\\n3 3 1\\n3 3 1\\n3 3 1\\n3 3 1\\n3 3 1\\n3 3 1\") == \"impossible\"\nassert solution(\"4 2\\n2 3 1\\n2 3 1\\n2 3 1\\n3 3 1\\n3 3 1\\n3 3 1\\n3 3 1\\n3 3 1\\n3 3 1\\n3 3 1\\n3 3 1\\n3 3 1\\n3 3 1\\n3 3 1\\n3 3 1\") == \"impossible\"\n"
    },
    {
        "number": 3348,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''4 4\n10 3 3'''\n) == 'impossible'\n\nassert solution(\n'''4 4\n10 3 2'''\n) == 'impossible'\n\nassert solution(\n'''2 2\n10 3 3'''\n) == 'impossible'\n\nassert solution(\n'''2 2\n10 3 2'''\n) == 'A B A'\n\nassert solution(\n'''4 4\n2 3 1\n1 4 2'''\n) == 'B A A'"
    },
    {
        "number": 3348,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 4\n10 3 3''') == '''impossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible"
    },
    {
        "number": 3349,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('    ') =='   '\nassert solution('BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nassert solution('BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nassert solution('A BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION') == 'A BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n"
    },
    {
        "number": 3349,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\n"
    },
    {
        "number": 3349,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('a b c d e f g h i j k l m n o p q r s t u v w x y z') == 'a b c d e f g h i j k l m n o p q r s t u v w x y z'\nassert solution('BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nassert solution('BEETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nassert solution('BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION    ') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n"
    },
    {
        "number": 3349,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n'''\nsolution('BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nassert solution('''11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n'''\n"
    },
    {
        "number": 3349,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7\nHELLO\nWORLD\nHOLA\nHALLO\nLOL\nLAMBDA\n''') == 'HELLO WORLD HALLO LAMBDA'\nassert solution('''7\n\nWELLD\nWOLLD\nWHOLD\nWHOLLD\nWOOLLD\nWOOLL\nWOLL\n\n''') == 'WELLD WOLLD WHOLLD WHOLLD WOLLD WOOLL'\nassert solution('''7\n\nOBJECTIVE\n\nMATHEMATICS\n\nINTERMEDIATE\n\nLEVELING\n\n''') == 'MATHEMATICS INTERMEDIATE LEVELING'\nassert solution('''7\n\nBETWEEN\n\nSUBTLE\n\nSHADING\n\nAND\n\nTHE\n\nABSENCE\n\nOF\n\nLIGHT\n\nLIES\n\nNUANCE\n\nIQLUSION\n\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n\n''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n\nassert solution('''14\n\nTHIS\n\nIS\n\nA\n\nSHIT\n\nTHIS\n\nIS\n\nAN\n\nEXCEPTION\n\nTHAT\n\nIS\n\nFOR\n\nME\n\nAND\n\nYOU\n\n''') == 'THIS IS AN EXCEPTION THAT IS FOR ME AND YOU'\n"
    },
    {
        "number": 3349,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('a b c d e f g h i j k l m n o p q r s t u v w x y z') == 'a b c d e f g h i j k l m n o p q r s t u v w x y z'\nassert solution('a b c d e f g h i j k l m n o p q r s t u v w x y z') == 'a b c d e f g h i j k l m n o p q r s t u v w x y z'\nassert solution('a b c d e f g h i j k l m n o p q r s t u v w x y z') == 'a b c d e f g h i j k l m n o p q r s t u v w x y z'\nassert solution('a b c d e f g h i j k l m n o p q r s t u v w x y z') == 'a b c d e f g h i j k l m n o p q r s t u v w x y z'\n"
    },
    {
        "number": 3349,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n\nassert solution('''\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n\nassert solution('''\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n\nassert solution('''\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n\nassert solution('''\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'"
    },
    {
        "number": 3349,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nassert solution('''11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nassert solution('''11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n'''Sample Input:\n9\nGOLD\nWAX\nNICKEL\nNICKEL\nNICKEL\nDURATION\nNICKEL\nNICKEL\nNICKEL\nNICKEL\nSample Output:\nGOLD WAX NICKEL NICKEL NICKEL DURATION NICKEL NICKEL NICKEL'''\n"
    },
    {
        "number": 3349,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('a') == ''\nassert solution('a b') == ''\nassert solution('a b c') == ''\nassert solution('a b c d') == ''\n"
    },
    {
        "number": 3349,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\nhello\\n') == 'hello'\nassert solution('2\\nabcde\\n') == 'abcde'\nassert solution('2\\nabcdef\\n') == 'abcdef'\nassert solution('2\\nacbdef\\n') == 'acbdef'\nassert solution('2\\nacbdefg\\n') == 'acbdefg'\n"
    },
    {
        "number": 3350,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abrahellehhelleh') == 12\nprint('test success')\n"
    },
    {
        "number": 3350,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''abrahellehhelleh''') == 12\nassert solution('''rachelhellabracadabra''') == 0\nassert solution('''abrahellehhellehabrahellabrahlehabrahlehabrahellabrahlehabrahellabrahlehabrahlehabrahlehabrahlehabrahlehabrahleh''') == 12\nassert solution('''abracadabra''') == 0\nassert solution('''abracadabraa''') == 0\n"
    },
    {
        "number": 3350,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 0\nassert solution('a') == 1\nassert solution('abra') == 0\nassert solution('abradbr') == 1\nassert solution('abrahelleh') == 12\n"
    },
    {
        "number": 3350,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('abrahellehhelleh') == '12'\nassert solution('rachelhellabracadabra') == '0'\nassert solution('abbbcddd') == '8'\nassert solution('aaaaaa') == '0'\nassert solution('rbaaaaaa') == '4'\n"
    },
    {
        "number": 3350,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '12'\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 3350,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 0\nassert solution('abrahellehhelleh') == 0\nassert solution('abrahellehhellehabrahelleh') == 0\nassert solution('abrahellehhellehabrahellehabrahelleh') == 0\nassert solution('abrahellehhellehabrahellehabrahellehabrahelleh') == 0\n"
    },
    {
        "number": 3350,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == 0\nassert solution('abrahellehhelleh') == 12\nassert solution('rachelhellabracadabra') == 0\nassert solution('abracadabra') == 0\nassert solution('abracadabraabracadabra') == 0\n"
    },
    {
        "number": 3350,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"abrahellehhelleh\") == \"12\"\nassert solution(\"rachelhellabracadabra\") == \"0\"\nassert solution(\"aaaa\") == \"0\"\nassert solution(\"aaaaa\") == \"0\"\nassert solution(\"aaaaaaaaa\") == \"0\"\n"
    },
    {
        "number": 3350,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abrahellehhelleh') == 12\n\"\"\"\n"
    },
    {
        "number": 3350,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"abrahellehhelleh\n\"\"\") == 12\n"
    },
    {
        "number": 3351,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n' * 100) == '70'\n\n\"\"\""
    },
    {
        "number": 3351,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''65\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == \"70\"\nassert solution('''10\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == \"40\"\nassert solution('''5\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n''') == \"30\"\nassert solution('''10\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n''')"
    },
    {
        "number": 3351,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''65\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == '70'\n\nassert solution('''65\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == '70'\n\nassert solution('''65\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == '70'\n\nassert solution('''65\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == '70'\n\nassert solution('''65\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1"
    },
    {
        "number": 3351,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\n\"\"\"\n\nimport sys\nfrom collections import defaultdict\nfrom functools import lru_cache\n"
    },
    {
        "number": 3351,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''65\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == '70'\nassert solution('''30\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9"
    },
    {
        "number": 3351,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n') == '70'\nassert solution('1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n') == '70'\nassert solution('65') == '70'\nassert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n') == '70'\nassert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1"
    },
    {
        "number": 3351,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n') == '70'"
    },
    {
        "number": 3351,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n66\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1"
    },
    {
        "number": 3351,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''65''') == '70'\nassert solution('''65\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == '70'\n\n-----Write Your Code Here-----"
    },
    {
        "number": 3351,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3352,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin.strip()\n"
    },
    {
        "number": 3352,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 5\n1 2 3 4 5\n1 2 3 4 5\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1"
    },
    {
        "number": 3352,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '10\\n7\\n8\\n7\\n8'\n\nassert solution('''10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '10\\n8'\n\nassert solution('''10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '9'\n\nassert solution('''10 10\n2 1 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '3'\n\nassert solution('''10 10\n2 1 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '0'"
    },
    {
        "number": 3352,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"1 2 3 4\") == \"\"\n"
    },
    {
        "number": 3352,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3352,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3352,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4"
    },
    {
        "number": 3352,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '10'\nassert solution('''10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '7'\nassert solution('''10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '8'\nassert solution('''10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '7'\nassert solution('''10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '8'\n"
    },
    {
        "number": 3352,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n1 2 3 4 5 6 7 8 9\n1 2 3 4 5 6 7 8 9\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4''') == '''10\n7\n8\n7\n8\n7\n7\n8\n7\n8\n7\n8\n8\n7\n'''\n"
    },
    {
        "number": 3352,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3353,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 4 7') == '6'\nassert solution('2 4 0') == '2'\nassert solution('2 0 4') == '2'\nassert solution('1 3 3') == '4'\nassert solution('1 2 1') == '2'\n"
    },
    {
        "number": 3353,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1''') == '6'\nassert solution(\n'''2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\n4 -2\n2 4\n2 4\n-1 0\n-1 0''') == '2'\nassert solution(\n'''2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\n4 -2\n4 -2\n4 -2\n-1 0\n-1 0''') == '3'\nassert solution(\n'''2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\n4 -2\n5 -2\n4 5\n5 4\n4 4\n4 -2\n4 -2\n3 -2\n4 -2\n-1 0\n-1 0''') == '4'\nassert solution(\n'''2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\n4 -2\n5 -2\n4 5\n5 4\n4 4\n4 -2\n4 -2\n3 -2\n4 -2\n-1 0\n-1 0''') == '2'\n"
    },
    {
        "number": 3353,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3353,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1'''\n    ) == '6'\n\nassert solution(\n'''3 5 3\n-2 1 1\n0 1 0\n-1 1 -1\n1 -2 0\n2 -1 1\n2 -3 0\n3 -1 -1'''\n    ) == '4'\n\nassert solution(\n'''2 3 3\n-2 1 1\n0 1 0\n-1 1 -1\n1 -2 0\n2 -1 1\n2 -3 0\n3 -1 -1'''\n    ) == '2'\n\nassert solution(\n'''2 3 4\n-2 1 1\n0 1 0\n-1 1 -1\n1 -2 0\n2 -1 1\n2 -3 0\n3 -1 -1'''\n    ) == '3'\n"
    },
    {
        "number": 3353,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1''') == \"6\"\n\nassert solution('''3 3 3\n0 1 2\n1 2 3\n2 3 4\n2 1 0\n1 3 1\n1 3 0\n0 3 2\n2 3 1''') == \"9\"\n\nassert solution('''3 2 4\n-2 0\n0 1 2\n1 2 3\n2 3 4''') == \"6\"\n\nassert solution('''3 2 2\n-2 0\n0 1 2\n1 2 3\n2 3 4\n2 1 0\n1 3 1\n1 3 0\n0 3 2''') == \"3\"\n\nassert solution('''7 8 1\n-2 0\n0 1 2\n1 2 3\n2 3 4\n3 4 5\n4 5 6\n4 5 7\n5 6 7\n5 4 0\n6 7 2\n7 8 3\n8 1 4''') == \"9\""
    },
    {
        "number": 3353,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1''') == '6'\nassert solution('''1 2\n0 -1''') == '1'\nassert solution('''1 1\n1 0''') == '0'\nassert solution('''1 2\n0 -1\n1 0''') == '0'\nassert solution('''1 2\n-1 -1\n1 0''') == '1'\n"
    },
    {
        "number": 3353,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 4 7') == '6'\nassert solution('2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1') == '6'\n\nassert solution('2 4 7\\n-2 1\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1') == '2'\nassert solution('2 4 7\\n-2 1\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\\n4 4\\n4 -1') == '2'\nassert solution('2 4 7\\n-2 1\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\\n4 4\\n4 -1\\n5 4\\n5 -1\\n6 4\\n6 -1') == '2'\n"
    },
    {
        "number": 3353,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1') == '6'\nassert solution('2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\\n-2 2\\n0 -1\\n1 1') == '6'\nassert solution('2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\\n-2 2\\n0 -1\\n1 1\\n1 2\\n1 3') == '6'\nassert solution('3 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\\n-2 2\\n0 -1\\n1 1\\n1 2\\n1 3\\n1 4') == '9'\nassert solution('3 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\\n-2 2\\n0 -1\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n1 16\\n1 17\\n1 18\\n1 19\\n1 20\\n1 21\\n1 22\\n1 23\\n1 24\\n1 25') == '9'\n"
    },
    {
        "number": 3353,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1''') == '6'\nassert solution(\n'''5 6 9\n-5 -1\n0 -1\n-1 -1\n-1 -1\n1 -1''') == '6'\nassert solution(\n'''3 7 12\n0 -1\n-1 -1\n-1 -1\n-1 -1\n1 -1\n2 1\n3 0\n1 1\n2 2\n3 3\n4 1''') == '9'\nassert solution(\n'''1 3 9\n-5 -1\n0 -1\n-1 -1\n-1 -1\n1 -1\n2 1\n3 0\n1 1\n2 2\n3 3\n4 1''') == '6'\nassert solution(\n'''6 8 10\n-5 -1\n0 -1\n-1 -1\n-1 -1\n1 -1\n2 1\n3 0\n1 1\n2 2\n3 3\n4 1''') == '7'\n"
    },
    {
        "number": 3353,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1''') == '6'\nassert solution('''2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\n2 1\n3 0\n4 -1\n0 0\n1 0''') == '1'\nassert solution('''2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\n2 1\n3 0\n4 -1\n0 0\n1 0\n0 0''') == '0'\nassert solution('''2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\n2 1\n3 0\n4 -1\n0 0\n1 0\n0 0\n0 0''') == '0'\nassert solution('''2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\n2 1\n3 0\n4 -1\n0 0\n1 0\n1 0\n0 0''') == '0'\n"
    },
    {
        "number": 3354,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 3354,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 1 4 40') == '3'\nassert solution('3 2 4 40') == '3'\nassert solution('3 3 4 40') == '3'\nassert solution('3 4 4 40') == '3'\nassert solution('3 4 5 40') == '3'\n"
    },
    {
        "number": 3354,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3354,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 1 4 40') == '3'\nassert solution('3 1 4 40') == '3'\nassert solution('3 1 4 40') == '3'\nassert solution('3 1 4 40') == '3'\nassert solution('3 1 4 40') == '3'\n"
    },
    {
        "number": 3354,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 1 4 40\n5 1 3 60''') == '3'\nassert solution('''3 1 4 40\n5 1 3 60''') == '3'\nassert solution('''3 1 4 40\n4 1 6 60''') == '5'\nassert solution('''3 1 4 40\n3 1 3 60''') == '3'\nassert solution('''3 1 4 40\n7 1 4 60''') == '7'\n"
    },
    {
        "number": 3354,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 1 4 40') == '3'\nassert solution('3 1 4 40') == '3'\nassert solution('3 1 4 40') == '3'\nassert solution('3 1 4 40') == '3'\nassert solution('3 1 4 40') == '3'\n"
    },
    {
        "number": 3354,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3354,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 1 4 40') == '3'\nassert solution('3 1 4 30') == '2'\nassert solution('3 1 4 90') == '5'\nassert solution('3 1 4 15') == '0'\nassert solution('3 1 4 8') == '0'\n"
    },
    {
        "number": 3354,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1 4 4') == '3'\nassert solution('2 1 4 10') == '0'\nassert solution('1 2 4 5') == '2'\nassert solution('1 2 4 10') == '0'\nassert solution('1 1 1 1') == '1'\n"
    },
    {
        "number": 3354,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 3 4 40\") == \"3\"\nassert solution(\"2 4 4 40\") == \"1\"\nassert solution(\"3 3 5 10\") == \"3\"\nassert solution(\"4 4 7 100\") == \"2\"\nassert solution(\"5 5 10 100\") == \"3\"\n"
    },
    {
        "number": 3355,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"99\\n3\\n\"\nassert solution(\"5 20\\n-1\\n0 0 0 0 0\") == \"0\\n\"\nassert solution(\"2 100\\n49 70 18\\n11 100 82\\n99 92 56\") == \"99\\n5\\n\"\nassert solution(\"4 2\\n0 -1 2 2\\n2 1 -1 3\\n2 2 -1 3\\n2 -1 -1 3\\n1 2 3 2\\n1 1 1 0\\n2 -1 -1 2\") == \"2\\n4 3\\n\"\nassert solution(\"6 7\\n1 2 3 4 5 6\\n-1 -1 -1 -1 -1 -1\") == \"0\\n\"\n"
    },
    {
        "number": 3355,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"99\"\nprint(solution(stdin))\n\n\"\"\""
    },
    {
        "number": 3355,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0''') == '99'\nassert solution('''3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n0 0 0 0 0''') == '0'\nassert solution('''2 0\n3 0\n1 0''') == '0'\nassert solution('''2 100000\n0 0\n1 0''') == '0'\nassert solution('''1 100000\n1 0''') == '0'\n"
    },
    {
        "number": 3355,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n''') == '99'\n\nassert solution('''\n3 356\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n''') == '0'\n\nassert solution('''\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1"
    },
    {
        "number": 3355,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == ''"
    },
    {
        "number": 3355,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0''') == '99'\nassert solution('''1 2 3\n1 2 -3\n1 2 0''') == '0'\nassert solution('''4 3\n10 -1\n9 -1\n8 0\n7 1''') == '7'\nassert solution('''2 3\n1 -1\n0 -1''') == '0'\nassert solution('''3 1\n1 -1\n0 -1\n2 -1''') == '2'\n"
    },
    {
        "number": 3355,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n') == '99\\n3\\n'\nassert solution('3 352\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n') == '0\\n'\nassert solution('3 212\\n5 46 6\\n6 54 76\\n77 68 70\\n79 70 78\\n79 78 73\\n79 79 74\\n79 79 75\\n79 79 76\\n79 79 77\\n79 79 78\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79 76\\n79 79 77\\n79 79"
    },
    {
        "number": 3355,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == solution(string_to_test)\nsolution = lambda stdin: int(stdin)\nassert solution(string_to_test) == 647\nstring_to_test = \"\"\"3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\"\"\"\nstring_to_test = \"\"\"3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\"\"\"\n\n\"\"\"\nd = []\nn = 3\nm = 3\nfor i in range(n):\n    row = list(map(int,input().split()))\n    d.append(row)\n\"\"\"\n\nt = int(input())\n\nfor _ in range(t):\n    n,t = list(map(int,input().split()))\n    if n == 1:\n        print(0)\n        continue\n    a = []\n    for i in range(n):\n        a.append(list(map(int,input().split())))\n    a.sort()\n    index = []\n    i = 0\n    j = 0\n    while j < n-1:\n        a[j][0] += a[j][1]\n        a[j][1] += a[j][2]\n        a[j][2] += a[j][3]\n        j += 1\n    print(a)\n    if a[-1][0] <= t:\n        print(a[-1][0])\n        continue\n    else:\n        print(0)\n"
    },
    {
        "number": 3355,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '99'\n\"\"\""
    },
    {
        "number": 3355,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\n\"\"\""
    },
    {
        "number": 3356,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2 3 4 2\"\nprint(\"Passed.\")\n\"\"\""
    },
    {
        "number": 3356,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output\nprint(f\"Input: {solution(stdin)}\")\n\"\"\""
    },
    {
        "number": 3356,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n4\n1 2\n2 3\n3 4\n''') == '2\\n3 4\\n4 2\\n'\nassert solution('''\n4\n1 2\n2 3\n3 4\n1 4\n1 2\n''') == '2\\n1 4\\n1 2\\n'\nassert solution('''\n4\n1 2\n2 3\n3 4\n1 2\n2 4\n1 2\n2 3\n''') == '2\\n1 2\\n2 4\\n1 2\\n'\nassert solution('''\n5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 4\n1 3\n2 4\n1 3\n''') == '3\\n1 3\\n2 4\\n1 3\\n'\nassert solution('''\n4\n1 2\n2 3\n3 4\n1 2\n1 2\n2 3\n''') == '2\\n1 2\\n2 3\\n'\n"
    },
    {
        "number": 3356,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(open(\"test/06-small_input.txt\", \"r\").read()) == open(\"test/06-small_output.txt\").read()\nassert solution(open(\"test/06-large_input.txt\", \"r\").read()) == open(\"test/06-large_output.txt\").read()\n"
    },
    {
        "number": 3356,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 3356,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"4 2 3\""
    },
    {
        "number": 3356,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(open(\"test_1.txt\").read()) == \"2 3 4 1\"\nassert solution(open(\"test_2.txt\").read()) == \"1 2 4 3\"\nassert solution(open(\"test_3.txt\").read()) == \"3 1 4 2\"\nassert solution(open(\"test_4.txt\").read()) == \"1 2 3\"\nassert solution(open(\"test_5.txt\").read()) == \"1 3 5 2\"\n"
    },
    {
        "number": 3356,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n4\n1 2\n2 3\n3 4\n\"\"\") == \"\"\"\n2\n3 4\n4 2\n\"\"\"\nassert solution(\n\"\"\"\n7\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n\"\"\") == \"\"\"\n4\n3 4\n6 7\n\"\"\"\nassert solution(\n\"\"\"\n5\n1 2\n2 3\n3 4\n4 5\n5 6\n\"\"\") == \"\"\"\n2\n1 2\n4 5\n3 4\n6 5\n5 2\n4 3\n6 1\n\"\"\"\nassert solution(\n\"\"\"\n6\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n\"\"\") == \"\"\"\n4\n5 6\n1 2\n2 3\n3 4\n4 5\n\"\"\"\nassert solution(\n\"\"\"\n7\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 1\n\"\"\") == \"\"\"\n5\n6 7\n1 2\n2 3\n3 4\n4 5\n5 6\n\"\"\"\n"
    },
    {
        "number": 3356,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n1 2') == '1 2'\nassert solution('2\\n1 2\\n3 4') == '1 2 3 4'\nassert solution('2\\n1 2\\n3 4\\n5 6') == '1 2 3 4 5 6'\nassert solution('2\\n1 2\\n2 3') == '1 2 3'\nassert solution('4\\n1 2\\n3 4\\n5 6\\n7 8') == '1 2 3 4 5 6 7 8'\n"
    },
    {
        "number": 3356,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_stdout\n\"\"\"\nfrom sys import stdin, stdout\n\nN = int(stdin.readline())\nrooms = [int(x) for x in stdin.readline().split()]\nrooms.sort()\n\nl = rooms[0]\nr = rooms[-1]\n\nfarthest = 0"
    },
    {
        "number": 3357,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"1\n1 1\n2 2\n3 2\n4 1\"\"\"\n) == \"9.0000\\n12\\n12.00000\\n9.0\"\n\nassert solution(\n\"\"\"1\n1 1\n2 2\n3 2\n4 1\"\"\"\n) == \"9.0000\\n12\\n12.00000\\n9.0\"\n\nassert solution(\n\"\"\"5\n1 1\n2 2\n3 2\n4 1\n1 1\"\"\"\n) == \"10.0\"\n\nassert solution(\n\"\"\"1\n1 1\n2 2\n3 2\n4 1\n1 1\"\"\"\n) == \"10.0\"\n\nassert solution(\n\"\"\"2\n1 1\n1 1\"\"\"\n) == \"10.0\""
    },
    {
        "number": 3357,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1') == '9.0000'\nassert solution('2 2') == '12'\nassert solution('3 2') == '12.00000'\nassert solution('4 1') == '9.0'\nassert solution('4 1 2 2 2 1') == '9.0'\n"
    },
    {
        "number": 3357,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n1 1\n2 2\n3 2\n4 1''') == '9.0000\\n12\\n12.00000\\n9.0'\nassert solution('''9\n1 1\n2 2\n3 2\n4 1\n5 2\n6 3\n7 3\n8 4\n9 4\n10 1''') == '9.0000\\n12\\n12.00000\\n9.0'\nassert solution('''3\n1 2\n3 4\n5 6''') == '6.00000\\n9.0\\n9.0'\nassert solution('''13\n1 11\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n11 11\n12 12''') == '20.00000\\n12.00000\\n12.00000\\n12.00000\\n12.00000\\n12.00000\\n12.00000'\nassert solution('''12\n1 100\n2 200\n3 300\n4 400\n5 500\n6 600\n7 700\n8 800\n9 900\n10 1000\n11 1100\n12 1200''') == '100.00000\\n100.00000\\n100.00000\\n100.00000\\n100.00000\\n100.00000\\n100.00000'\n'''\n'''\n"
    },
    {
        "number": 3357,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n1 1\\n2 2\\n3 2\\n4 1') == '9.0000\\n12\\n12.00000\\n9.0\\n'\nassert solution('2\\n1 2\\n2 3') == '10\\n6\\n6\\n3\\n'\nassert solution('2\\n1 2\\n2 3') == '10\\n6\\n6\\n3\\n'\nassert solution('8\\n1 8\\n2 7\\n3 6\\n4 5\\n5 4\\n6 3\\n7 2\\n8 1') == '1\\n3\\n6\\n8\\n10\\n15\\n20\\n30\\n40\\n50\\n60\\n70\\n80\\n'\n"
    },
    {
        "number": 3357,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n1 1\\n2 2\\n3 2\\n4 1') == '9.0000\\n12\\n12.00000\\n9.0\\n'\nassert solution('4\\n1 3\\n2 3\\n3 2\\n4 1') == '3.4142\\n6\\n6.00000\\n3.0\\n'\nassert solution('4\\n1 3\\n2 3\\n3 1\\n4 1') == '3.4142\\n6\\n6.00000\\n3.0\\n'\nassert solution('4\\n1 3\\n2 1\\n3 2\\n4 1') == '3.4142\\n2\\n2.00000\\n1.0\\n'\nassert solution('4\\n1 3\\n2 3\\n3 1\\n4 1') == '3.4142\\n2\\n2.00000\\n1.0\\n'\n"
    },
    {
        "number": 3357,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''4\n1 1\n2 2\n3 2\n4 1''') == '9.0000\\n12\\n12.00000\\n9.0'\nassert solution(\n'''5\n1 1\n2 2\n3 2\n4 1\n5 1''') == '11.6106\\n12\\n12.00000\\n11.6106\\n9.0'\n\nprint(solution(input()))"
    },
    {
        "number": 3357,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"4\") == \"9.0000\"\nassert solution(\"4\\n1 2\\n2 1\\n3 2\\n4 1\") == \"9.0000\"\nassert solution(\"2\\n1 2\\n2 1\") == \"12\"\n"
    },
    {
        "number": 3357,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n4\n1 1\n2 2\n3 2\n4 1\n''') == '9.0000\\n12\\n12.00000\\n9.0'\nassert solution('''\n1\n5\n3\n5\n4\n5\n''') == '0.0000\\n1\\n1.0000\\n0.0'\nassert solution('''\n4\n1 1\n2 2\n3 2\n4 1\n''') == '9.0000\\n12\\n12.00000\\n9.0'\nassert solution('''\n9\n1 1\n2 2\n3 2\n4 1\n5 1\n6 1\n7 1\n8 1\n9 1\n''') == '9.0000\\n72\\n72.00000\\n72.0'\nassert solution('''\n10\n9 9\n8 8\n7 7\n6 6\n5 5\n4 4\n3 3\n2 2\n1 1\n''') == '0.0000\\n0\\n0.0000\\n0.0'\n"
    },
    {
        "number": 3357,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('4') == '5'\nassert solution('10') == '8'\nassert solution('11') == '9'\n"
    },
    {
        "number": 3357,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n1 1\n2 2\n3 2\n4 1''') == '9.0000\\n12\\n12.00000\\n9.0'\nassert solution('''2\n1 3\n2 4''') == '2\\n5.00000\\n10.0'\nassert solution('''6\n1 6\n2 3\n3 4\n4 5\n5 6\n6 7''') == '45\\n55.00000\\n50.0'\n'''\nNotes:\nAs the number of buildings increases, the peak needs to be bathed in sunlight in fewer hours.\n'''\n"
    },
    {
        "number": 3358,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\"\nassert solution(\"12\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\"\nassert solution(\"42\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\"\nassert solution(\"-12\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\"\nassert solution(\"1234\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\"\n"
    },
    {
        "number": 3358,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"STA\"\nassert solution(\"4\") == \"STY\"\nassert solution(\"5\") == \"STX\"\nassert solution(\"6\") == \"STA\"\nassert solution(\"7\") == \"STX\"\n"
    },
    {
        "number": 3358,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\"\nassert solution(\"3\") == \"ST A\\nST X\\nST Y\\nPH A\\nPH X\\nST B\\nPL Y\\nDI Y\"\nassert solution(\"4\") == \"ST A\\nST X\\nST Y\\nST Z\\nPH A\\nPH X\\nST B\\nPL Y\\nDI Z\\nST D\\nPL Z\\nDI D\"\nassert solution(\"5\") == \"ST A\\nST X\\nST Y\\nST Z\\nST D\\nPH A\\nPH X\\nST B\\nPL Y\\nDI Z\\nST D\\nPH A\\nPH X\\nST B\\nPL Y\\nST Z\\nST D\\nDI D\"\nassert solution(\"0\") == \"ST A\\nST X\\nST Y\\nST Z\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST D\\nST"
    },
    {
        "number": 3358,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(2) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\"\nassert solution(3) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST B\\nST C\\nPL D\\nAD\\nST D\\nPL E\\nST F\\nST G\\nPL H\\nST I\\nPL J\\nST K\\nAD\\nPL L\\nST M\\nAD\\nST N\\nPL O\\nST Q\\nST R\\nPL T\\nPL U\\nST V\\nST W\\nAD\\nST X\\nPL Y\\nST Z\\nPL A\\nPH A\\nPL X\\nDI A\\nDI X\\nDI A\\nDI X\\nDI A\\nDI X\\nDI A\\nDI X\\nDI A\\nDI X\\nST A\\nST X\\nST A\\nST X\\nST A\\nST X\""
    },
    {
        "number": 3358,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2') == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y'\nassert solution('0') == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y'\nassert solution('255') == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y'\nassert solution('256') == 'ST A\\nST X\\nST Y\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y'\nassert solution('257') == 'ST A\\nST X\\nST Y\\nST Z\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y'\n"
    },
    {
        "number": 3358,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1') == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n'\nassert solution('2') == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n'\nassert solution('3') == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n'\nassert solution('4') == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\"
    },
    {
        "number": 3358,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\"\nassert solution(\"4\") == \"ST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nPL A\\nPL Y\\nPH A\\nPL Z\\nAD\\nST A\\nST X\\nPL A\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nDI Z\\nST A\\nST X\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\nAD\\nPL A\\nPL X\\nPL Z\\n"
    },
    {
        "number": 3358,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2') == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n'\nassert solution('4') == 'ST A\\nST X\\nST Y\\nST A\\nPL X\\nPL Y\\nPL A\\nDI Y\\n'\nassert solution('4') == 'ST A\\nST X\\nST Y\\nST A\\nPL X\\nPL Y\\nPL A\\nDI Y\\n'\nassert solution('3') == 'ST A\\nST X\\nST Y\\nST A\\nPL X\\nPL Y\\nPL A\\nDI A\\n'\nassert solution('5') == 'ST A\\nST X\\nST Y\\nST A\\nPL X\\nPL Y\\nPL A\\nDI A\\nST X\\nST Y\\nST A\\nPL A\\nPL A\\nPL A\\nDI A\\n'\n"
    },
    {
        "number": 3358,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2') == 'ST X\\nST A\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y'\nassert solution('3') == 'ST A\\nST X\\nST Y\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y'\nassert solution('8') == 'ST X\\nST A\\nST Y\\nST Z\\nST R\\nST T\\nST I\\nST N\\nST D\\nPH A\\nPH X\\nPL Y\\nPL Z\\nPL R\\nPL T\\nPL I\\nPL N\\nAD\\nAD\\nAD\\nAD\\nAD\\nDI Y\\nDI N'\nassert solution('0') == 'ST X\\nST A\\nST Y\\nST Z\\nST R\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N\\nST D\\nST C\\nST B\\nST A\\nST T\\nST I\\nST N"
    },
    {
        "number": 3358,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"ST 2\\nST A\\nPL A\\nST X\\nPH A\\nPL X\\nAD\\nPL Y\\nDI Y\"\nassert solution(\"1234\") == \"ST 1234\\nST 3\\nPL 1234\\nAD\\nST 3\\nPL 3\\nPL 1234\\nST 3\\nPL 3\\nPL 1234\\nST 3\\nPL 3\\nPL 1234\\nAD\\nST 3\\nPL 3\\nPL 1234\\nST 3\\nPL 3\\nPL 1234\\nDI Y\"\nassert solution(\"1234123412341234\") == \"ST 123412341234\\nST 3\\nPL 123412341234\\nAD\\nST 3\\nPL 3\\nPL 123412341234\\nST 3\\nPL 3\\nPL 123412341234\\nST 3\\nPL 3\\nPL 123412341234\\nAD\\nST 3\\nPL 3\\nPL 123412341234\\nDI Y\"\nassert solution(\"12341234123412341234\") == \"ST 123412341234\\nST 3\\nPL 123412341234\\nAD\\nST 3\\nPL 3\\nPL 123412341234\\nST 3\\nPL 3\\nPL 123412341234\\nST 3\\nPL 3\\nPL 123412341234\\nAD\\nST 3\\nPL 3\\nPL 123412341234\\nDI Y\"\nassert solution(\"555555555555555555555555\") == \"ST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\nST 5\\n"
    },
    {
        "number": 3359,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 5 6\nFFFF FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000\n''') == '2'\nassert solution('''1 5 6\nFFF FFFF FF FFFF FF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFF\nFFFF FF FFFF FFF\nFFFF FFF FF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\nFF\n"
    },
    {
        "number": 3359,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"1 4 1\\n\"\n    \"FFFF FFBB\"\n    \"FFFFFFFFFFFFFFF\"\n    \"FFFFFFFFFFFFFFF\"\n    \"FFFFFFFFFFFFFFF\"\n    \"FFFFFFFFFFFFFFF\"\n    \"FFFFFFFFFFFFFFF\"\n    \"FFFFFFFFFFFFFFF\"\n    \"FFFFFFFFFFFFFFF\"\n    \"FFFFFF\"\n) == \"2\"\n\nassert solution(\n    \"2 4 1\\n\"\n    \"FFFFFFFFFFFFFFF\"\n    \"FFFFFFFFFFFFFFF\"\n    \"FFFFFFFFFFFFFFF\"\n    \"FFFFFFFFFFFFFFF\"\n    \"FFFFFFFFFFFFFFF\"\n    \"FFFFFFFFFFFFFFF\"\n    \"FFFFFFFFFFFFFFF\"\n    \"FFFFFFFFFFFFFFF\"\n    \"FFFFFF\"\n) == \"1\"\n\nassert solution(\n    \"5 5 6\\n\"\n    \"FFFFFFFFFFFFFFF\"\n    \"FFFFFFFFFFFFFFF\"\n    \"FFFFFFFFFFFFFFF\"\n    \"FFFFFFFFFFFFFFF\"\n    \"FFFFFFFFFFFFFFF\"\n    \"FFFFFFFFFFFFFFF\"\n    \"FFFFFFFFFFFFFFF\"\n    \"FFFFFFFFFFFFFFF\"\n    \"FFFFFF\"\n) == \"1\"\n\nassert solution(\n    \"3 2 1\\n\"\n    \"1111111111111111\"\n    \"1111111111111111\"\n    \"1111111111111111\"\n    \"1111111111111111\"\n    \"1111111111111111\"\n    \"1111111111111111\"\n    \"1111111111111111\"\n    \"1111111111111111\"\n    \"111111\"\n) == \"4\"\n\nassert solution(\n    \"8 5 1\\n\"\n    \"FFFFFFFFFFFFFFFFF\"\n    \"FFFFFFFFFFFFFFFFF\"\n    \"FFFFFFFFFFFFFFFFF\"\n    \"FFFFFFFFFFFFFFFFF\"\n    \"FFFFFFFFFFFFFFF\"\n    \"FFFFFFFFFFFFFFF\"\n    \"FFFFFFFFFF\"\n    \"FFFFFFFFFFF\"\n    \"FFFFFFFFFFF\"\n    \"FFFFFFF\"\n) == \"4\""
    },
    {
        "number": 3359,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 5 6') == '2'\n\"\"\"\n"
    },
    {
        "number": 3359,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 5 6') == '2'\nassert solution('5 3 6') == '1'\nassert solution('3 1 4') == '1'\nassert solution('10 9 10') == '2'\nassert solution('10 6 10') == '1'\n"
    },
    {
        "number": 3359,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 5 6\\n0000 FFFF 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\\n') == '2'\nassert solution('1 5 6\\nFFFF FFFF FFFF FFFF\\nFFFF FFFF FFFF FFFF\\nFFFF FFFF FFFF FFFF\\nFFF2 FFFF FFFF FFFF\\nFFFF FFFF FFFF FFFF\\nFFFFFFFFF FFFF FFFF FFFF\\n') == '0'\nassert solution('1 5 6\\nFFFFFFFFF FFFF FFFF FFFF\\nFFFF FFFF FFFF FFFF\\nFFFF FFFF FFFF FFFF\\nFFFF FFFF FFFF FFFF\\nFFF2 FFFF FFFF FFFF\\nFFFF FFFF FFFF FFFF\\n') == '4'\nassert solution('1 5 6\\nFFFFFFFFF FFFF FFFF FFFF\\nFFFF FFFF FFFF FFFF\\nFFFF FFFF FFFF FFFF\\nFFFF FFFF FFFF FFFF\\nFFF2 FFFF FFFF FFFF\\nFFFF FFFF FFFF FFFF\\n') == '5'\nassert solution('1 5 6\\nFFFFFFFFF FFFF FFFF FFFF\\nFFFF FFFF FFFF FFFF\\nFFFF FFFF FFFF FFFF\\nFFFF FFFF FFFF FFFF\\nFFF2 FFFF FFFF FFFF\\nFFFF FFFF FFFF FFFF\\n') == '0'\n"
    },
    {
        "number": 3359,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 5 6''') == '2'\nassert solution('''1 2 3''') == '0'\nassert solution('''2 4 6''') == '4'\nassert solution('''2 6 6''') == '6'\nassert solution('''1 10001''') == '1'\n"
    },
    {
        "number": 3359,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(test_stdin) == test_out\nprint(solution(stdin))\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3359,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 1 2\\n3 4 5') == '2'\nassert solution('2 1 2\\n0 4 1\\n0 3 1\\n0 1 2\\n0 0 0\\n0 1 0') == '2'\nassert solution('2 1 2\\n0 0 0\\n1 1 1\\n0 0 0\\n0 0 0\\n0 0 0') == '4'\nassert solution('3 2 3\\n0 0 0\\n1 1 0\\n2 0 1\\n2 1 2') == '4'\nassert solution('3 2 3\\n0 0 0\\n1 1 0\\n2 0 1\\n1 0 1\\n1 0 1') == '4'\n"
    },
    {
        "number": 3359,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 6 6'\n'FFFF FFFF 0000 FFFF 0000'\n'0000 0000 0000 0000'\n'0000 FFFF FFFF FFFF 0000'\n'0000 0000 0000 FFFF 0000'\n'0000 FFFF FFFF FFFF FFFF'\n'0000 0000 0000 0000'\n'1 5 6') == '2'\nassert solution('1 3 5'\n'FFFF FFFF FFFF'\n'FFFF FFFF FFFF'\n'FFFF FFFF FFFF') == '2'\nassert solution('1 1 1'\n'F') == '0'\nassert solution('1 1 1'\n'F'\n'F'\n'F') == '0'\nassert solution('1 1 1'\n'F'\n'F'\n'F') == '0'\n"
    },
    {
        "number": 3359,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 5 6\n0000 FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000\n''') == '2'\nassert solution('''1 5 6\nFFF1FFFF0000FFFFFFFFFF\nFFFFFFFFFFFFFFF1FFF\nFFFFFF1FFF1FFFFFFFFFF\nFFFFFF1FFF1FFFFFFFFFF\nFFFFFFFFFFFFFFFFFF\nFFFFFF1FFF1FFFFFFFFFF\nFFFFFF1FFF1FFFFFFFFFF\nFFFFFFFFFFFFFFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFF1FFFFFFFFFFFFFFFFFF\nFFFFFFFFFFFFFFF1FFF\nFFFFFF1FFF1FFFFFFFFFF\nFFFFFF1FFF1FFFFFFFFFF\nFFFFFFFFFFF1FFF1FFFFFF\nFFFFFF1FFF1FFFFFFFFFF\nFFFFFF1FFF1FFFFFFFFFF\nFFFFFFFFFFFFFFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFFFFFFFFFF1FFF1FFFFFF\nFFFFFF1FFF1FFFFFFFFFF\nFFFFFF1FFF1FFFFFFFFFF\nFFFFFFFFFFF1FFF1FFFFFF\nFFFFFF1FFF1FFFFFFFFFF\nFFFFFF1FFF1FFFFFFFFFF\nFFFFFFFFFFF1FFF1FFFFFF\nFFFFFF1FFF1FFFFFFFFFF\nFFFFFF1FFF1FFFFFFFFFF\nFFFFFFFFFFF1FFF1FFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFFFFFFFFFF1FFF1FFFFFF\nFFFFFF1FFF1FFFFFFFFFF\nFFFFFF1FFF1FFFFFFFFFF\nFFFFFFFFFFF1FFF1FFFFFF\nFFFFFF1FFF1FFFFFFFFFF\nFFFFFF1FFF1FFFFFFFFFF\nFFFFFFFFFFF1FFF1FFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFFFFFFFFFF1FFF1FFFFFF\nFFFFFF1FFF1FFFFFFFFFF\nFFFFFF1FFF1FFFFFFFFFF\nFFFFFFFFFFF1FFF1FFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFFFFFFFFFF1FFF1FFFFFF\nFFFFFF1FFF1FFFFFFFFFF\nFFFFFF1FFF1FFFFFFFFFF\nFFFFFFFFFFF1FFF1FFFFFF\nFFFFFF1FFF1FFFFFFFFFF\nFFFFFF1FFF1FFFFFFFFFF\nFFFFFFFFFFF1FFF1FFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFFFFFFFFFF1FFF1FFFFFF\nFFFFFF1FFF1FFFFFFFFFF\nFFFFFF1FFF1FFFFFFFFFF\nFFFFFFFFFFF1FFF1FFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFFFFFFFFFF1FFF1FFFFFF\nFFFFFF1FFF1FFFFFFFFFF\nFFFFFF1FFF1FFFFFFFFFF\nFFFFFFFFFFF1FFF1FFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFFFFFFFFFF1FFF1FFFFFF\nFFFFFF1FFF1FFFFFFFFFF\nFFFFFF1FFF1FFFFFFFFFF\nFFFFFFFFFFF1FFF1FFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFFFFFFFFFF1FFF1FFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFFFFFFFFFF1FFF1FFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFFFFFFFFFF1FFF1FFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFFFFFFFFFF1FFF1FFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFFFFFFFFFF1FFF1FFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFFFFFFFFFF1FFF1FFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFFFFFFFFFF1FFF1FFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFFFFFFFFFF1FFF1FFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFFFFFFFFFF1FFF1FFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFFFFFFFFFF1FFF1FFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFFFFFFFFFF1FFF1FFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFFFFFFFFFF1FFF1FFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFFFFFFFFFF1FFF1FFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFFFFFFFFFF1FFF1FFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFFFFFFFFFF1FFF1FFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFFFFFFFFFF1FFF1FFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFFFFFFFFFF1FFF1FFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFFFFFFFFFF1FFF1FFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFFFFFFFFFF1FFF1FFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFFFFFFFFFF1FFF1FFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFF1FFFFFFF1FFFFFFFFFF\nFFFFFFFFFFF1FFF1"
    },
    {
        "number": 3360,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5\\n5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\n\") == \"abaaba\"\nassert solution(\"6\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\n\") == \"none\"\nassert solution(\"1\\nS -> aS\\nS -> \\n\") == \"aS\"\nassert solution(\"100\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS\\nS -> ab\\nS -> abS"
    },
    {
        "number": 3360,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''S -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome''') == \"abbbbbbbbbbbbbbbbba\"\nassert solution('''S -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome''') == \"abbbbbbbbbbbbbbbbba\"\nassert solution('''S -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome''') == \"abbbbbbbbbbbbbbbbba\"\nassert solution('''S -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome''') == \"abbbbbbbbbbbbbbbbba\"\nassert solution('''S -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome''') == \"abbbbbbbbbbbbbbbbba\"\n"
    },
    {
        "number": 3360,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\nnone on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\\neven a single a or b is a palindrome') == 'abaaba'\nassert solution('2\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\nnone on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\\neven a single a or b is a palindrome') == 'a'\nassert solution('2\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\nnone on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\\neven a single a or b is a palindrome') == 'b'\nassert solution('1\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\nnone on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\\neven a single a or b is a palindrome') == 'NONE'\nassert solution('1\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\nnone on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\\neven a single a or b is a palindrome') == 'NONE'\n"
    },
    {
        "number": 3360,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('S -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\none on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\\neven a single a or b is a palindrome') == 'abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\\n'\nassert solution('S -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\none on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\\neven a single a or b is a palindrome') == 'a\\n'\nassert solution('S -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\none on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\\neven a single a or b is a palindrome') == 'a\\n'\nassert solution('S -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\none on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\\neven a single a or b is a palindrome') == 'a\\n'\nassert solution('S -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\none on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\\neven a single a or b is a palindrome') == 'a\\n'\n"
    },
    {
        "number": 3360,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('none on this line\\n') == 'NONE'\nassert solution('S -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\n') == 'abaaba'\nassert solution('S -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\n') == 'abbbbbbbbbbbbbbbbba'\nassert solution('S -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> aaaaaaabbbbbbbbbbbbbbbbba\\nS -> aaaaaaabbbbbbbbbbbbbbbbba\\n') == 'a'\nassert solution('S -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> aaaaaaabbbbbbbbbbbbbbbbba\\nS -> aaaaaaabbbbbbbbbbbbbbbbba\\n') == 'abbbbbbbbbbbbbbbbba'\n"
    },
    {
        "number": 3360,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"S -> a\") == \"\"\nassert solution(\"S -> aS\") == \"\"\nassert solution(\"S -> ab\") == \"\"\nassert solution(\"S -> aSB\") == \"b\"\n"
    },
    {
        "number": 3360,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome\n''') == \"abbbbbbbbbbbbbbbbba\"\n\nassert solution(\n'''\n5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome\n''') == \"abbbbbbbbbbbbbbbbba\"\n\nassert solution(\n'''\n5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome\n''') == \"abbbbbbbbbbbbbbbbba\"\n\nassert solution(\n'''\n5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome\n''') == \"abbbbbbbbbbbbbbbbba\"\n\nassert solution(\n'''\n5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome\n''') == \"abbbbbbbbbbbbbbbbba\""
    },
    {
        "number": 3360,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0\") == \"NONE\"\nassert solution(\"1\") == \"NONE\"\nassert solution(\"2\") == \"NONE\"\nassert solution(\"3\") == \"NONE\"\nassert solution(\"4\") == \"NONE\"\n"
    },
    {
        "number": 3360,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"S -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome\"\"\") == \"abaaba\"\nassert solution(\n\"\"\"S -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome\"\"\") == \"abbbbbbbbbbbbbbbbba\"\nassert solution(\n\"\"\"S -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome\"\"\") == \"aaaaaaabbbbbbbbbbbbbbbbba\"\nassert solution(\n\"\"\"S -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome\"\"\") == \"aaaaaaabbbbbbbbbbbbbbbbba\"\nassert solution(\n\"\"\"S -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome\"\"\") == \"aaaaaaabbbbbbbbbbbbbbbbba\"\n"
    },
    {
        "number": 3360,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"STDIN\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"a\") == \"a\"\nassert solution(\"abba\") == \"abba\"\nassert solution(\"aba\") == \"aba\"\n"
    },
    {
        "number": 3361,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '4'\n"
    },
    {
        "number": 3361,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5\\n4 5 0 2\\n1 3 7\\n2 0\\n4\\n\") == \"4\"\nassert solution(\"5\\n4 5 0 2\\n1 3 7\\n2 0\\n4\\n4 5 0 2\\n1 3 7\\n2 0\\n4\\n4 5 0 2\\n1 3 7\\n2 0\\n4\\n\") == \"12\"\nassert solution(\"5\\n4 5 0 2\\n1 3 7\\n2 0\\n4\\n5 4 0 2\\n1 3 7\\n2 0\\n4\\n5 4 0 2\\n1 3 7\\n2 0\\n4\\n\") == \"12\"\nassert solution(\"5\\n4 5 0 2\\n1 3 7\\n2 0\\n4\\n5 4 0 2\\n1 3 7\\n2 0\\n4\\n5 4 0 2\\n1 3 7\\n2 0\\n4\\n5 4 0 2\\n1 3 7\\n2 0\\n4\\n\") == \"12\"\nassert solution(\"5\\n4 5 0 2\\n1 3 7\\n2 0\\n4\\n5 4 0 2\\n1 3 7\\n2 0\\n4\\n5 4 0 2\\n1 3 7\\n2 0\\n4\\n5 4 0 2\\n1 3 7\\n2 0\\n4\\n\") == \"12\"\n"
    },
    {
        "number": 3361,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6\\n2 1 5\\n7 1 4\\n1 3 2\\n2 2 4') == '0'\nassert solution('8\\n0 0\\n2 1 1\\n2 2 4\\n3 2 5\\n3 3 5\\n3 4 2\\n4 4 0') == '2'\nassert solution('4\\n1 1 1\\n1 1 1\\n1 1 1') == '0'\nassert solution('10\\n3 0\\n1 2 1\\n1 3 3\\n1 3 4\\n2 1 1\\n2 2 4\\n2 3 2\\n2 3 4\\n3 1 1\\n3 2 4\\n3 2 5\\n3 3 5') == '2'\nassert solution('15\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1') == '0'\n"
    },
    {
        "number": 3361,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n4\\n4\\n2\\n0\\n2\\n2\\n2\\n0\\n2') == '4'\nassert solution('5\\n4\\n2\\n0\\n0\\n0\\n0\\n0\\n2\\n2\\n2') == '2'\nassert solution('3\\n1\\n3\\n1\\n2\\n0\\n2\\n0\\n2') == '1'\nassert solution('10\\n2\\n6\\n1\\n4\\n0\\n5\\n1\\n8\\n0\\n5\\n0\\n2\\n0\\n7\\n0\\n4\\n0\\n1\\n0') == '11'\nassert solution('10\\n4\\n5\\n1\\n2\\n3\\n4\\n0\\n6\\n7\\n8\\n9\\n10\\n0') == '0'\n"
    },
    {
        "number": 3361,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n4 5 0 2\n1 3 7\n2 0\n4\n''') == \"4\"\nassert solution('''5\n4 5 0 2\n1 3 7\n2 0\n4\n''') == \"4\"\nassert solution('''5\n4 5 0 2\n1 3 7\n2 0\n4\n''') == \"4\"\nassert solution('''5\n4 5 0 2\n1 3 7\n2 0\n4\n''') == \"4\"\nassert solution('''5\n4 5 0 2\n1 3 7\n2 0\n4\n''') == \"4\"\n"
    },
    {
        "number": 3361,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\\nb\\naa\\nab\\naab\") == \"bab\"\nassert solution(\"a\\naa\\naab\") == \"aab\"\nassert solution(\"a\\naa\\naab\\naab\") == \"aab\"\nassert solution(\"a\\naa\\naab\\naab\") == \"aab\"\n"
    },
    {
        "number": 3361,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '5'\n\n\"\"\""
    },
    {
        "number": 3361,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"2\\n1\\n1\\n1\\n1\") == \"2\"\nassert solution(\"2\\n1\\n1\\n1\\n1\") == \"2\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"2\"\nassert solution(\"2\\n1\\n1\\n1\\n1\") == \"2\"\n"
    },
    {
        "number": 3361,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 4 5\") == \"6\"\nassert solution(\"3 3 3 3 3 3\") == \"1\"\nassert solution(\"1 2 2 2 2 2\") == \"0\"\nassert solution(\"1 1 2 2 2\") == \"1\"\nassert solution(\"1 1 1 1 1 1\") == \"0\"\n"
    },
    {
        "number": 3361,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n3\\n7\\n0\\n4') == '4'\nassert solution('2\\n1\\n0\\n4') == '0'\nassert solution('3\\n1\\n2\\n0') == '2'\nassert solution('6\\n1\\n2\\n0\\n5\\n3') == '4'\nassert solution('7\\n1\\n2\\n0\\n5\\n3\\n4') == '5'\n"
    },
    {
        "number": 3362,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == 'GO FOR IT'\nassert solution(input()) == 'SUCCESS'\n\nassert solution(input()) == 'NO CHANCE'\nassert solution(input()) == 'NO WAY'\n\nassert solution(input()) == 'NO WAY'\n"
    },
    {
        "number": 3362,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 2\n4 4\nWWWW\nWSBB\nWWWW\nWBWG''') == 'GO FOR IT'\nassert solution('''2 2\n4 4\nWWWW\nWSBB\nWWWW\nWBWG''') == 'NO WAY'\nassert solution('''2 2\n4 4\nWWWW\nWSBB\nWWWW\nWBWG\nWWWW''') == 'GO FOR IT'\nassert solution('''2 2\n4 4\nWWWW\nWSBB\nWWWW\nWBWG\nWWWW''') == 'NO WAY'\nassert solution('''2 2\n4 4\nWWWW\nWSBB\nWWWW\nWBWG\nWWWW\nWWWW\nWBWG''') == 'NO WAY'\n"
    },
    {
        "number": 3362,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"GO FOR IT\"\nassert solution(\"2 2\") == \"NO WAY\"\nassert solution(\"2 4\") == \"GO FOR IT\"\nassert solution(\"2 5\") == \"NO WAY\"\nassert solution(\"2 6\") == \"NO WAY\"\n"
    },
    {
        "number": 3362,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 3'\n                 '4 4'\n                 'WWWW'\n                 'WSBB'\n                 'WWWW'\n                 'WBWG'\n                 ) == 'GO FOR IT'\n\nassert solution('4 4'\n                 '3 3'\n                 'WWWW'\n                 'WSBB'\n                 'WWWW'\n                 'WBWG'\n                 ) == 'NO WAY'\n\nassert solution('2 3'\n                 '3 3'\n                 'WWWW'\n                 'WSBB'\n                 'WWWW'\n                 'WBWG'\n                 ) == 'GO FOR IT'\n'''\n"
    },
    {
        "number": 3362,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG') == 'GO FOR IT'\nassert solution('2 3\\n4 4\\nWWWWWW\\nWSBBG\\nWWWWWW\\nWBWBG') == 'NO WAY'\nassert solution('2 3\\n4 4\\nWWWWWW\\nWSBBG\\nWWWWWW\\nWBWBG') == 'NO WAY'\nassert solution('2 3\\n4 4\\nWWWWWW\\nWSBBG\\nWWWWWW\\nWBWBG') == 'GO FOR IT'\nassert solution('2 3\\n4 4\\nWWWWWW\\nWSBBG\\nWWWWWW\\nWBWBG') == 'GO FOR IT'\n"
    },
    {
        "number": 3362,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3') == 'GO FOR IT'\nassert solution('3 1') == 'NO WAY'\nassert solution('3 7') == 'SUCCESS'\nassert solution('1 100') == 'NO WAY'\nassert solution('1 101') == 'NO WAY'\n"
    },
    {
        "number": 3362,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"GO FOR IT\"\nassert solution(stdin) == \"SUCCESS\"\nassert solution(stdin) == \"NO WAY\"\nassert solution(stdin) == \"NO CHANCE\"\nassert solution(stdin) == \"NO WAY\"\n"
    },
    {
        "number": 3362,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2\\n3 4\\n3 2') == 'GO FOR IT'\nassert solution('1 3\\n4 4\\n3 2') == 'GO FOR IT'\nassert solution('1 3\\n4 4\\n3 2\\n2 1') == 'NO WAY'\nassert solution('1 3\\n4 4\\n3 2\\n2 1\\n1 1') == 'NO WAY'\nassert solution('1 2\\n3 4\\n3 2') == 'GO FOR IT'\n"
    },
    {
        "number": 3362,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 3\n4 4\nWWWW\nWSBB\nWWWW\nWBWG''') == 'GO FOR IT'\nassert solution('''2 1\n3 2\n
    },
    {
        "number": 3362,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n') == 'GO FOR IT'\nassert solution('2 3\\n2 3\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n') == 'NO WAY'\nassert solution('1 1\\n2 2\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n') == 'NO WAY'\n\"\"\"\n\nimport sys\nfrom collections import defaultdict\n"
    },
    {
        "number": 3363,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 900\n800 700 400 300 200''') == \"2243\"\nassert solution('''2 1\n4''') == \"1\"\nassert solution('''5 4\n1 2 3 4 5''') == \"5\"\nassert solution('''7 10\n3 2 6 1 4 5 6''') == \"6\"\nassert solution('''7 11\n3 2 6 1 4 5 6 7''') == \"7\"\n"
    },
    {
        "number": 3363,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 901''') == \"2243\"\nassert solution('''5 703''') == \"2243\"\nassert solution('''5 902''') == \"2252\"\nassert solution('''5 903''') == \"2243\"\nassert solution('''5 904''') == \"2243\"\n"
    },
    {
        "number": 3363,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 4') == '0'\nassert solution('5 3') == '60'\nassert solution('10 9') == '155'\nassert solution('15 12') == '300'\nassert solution('14 15') == '365'\n"
    },
    {
        "number": 3363,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 900\n800 700 400 300 200''') == '2243'\nassert solution('''5 100\n50 50 50 50 50''') == '8'\nassert solution('''5 5\n40 40 40 40 40''') == '0'\nassert solution('''10 3\n5 5 5 5 5 5 5 5 5 5 5 5 5''') == '2'\n'''\n"
    },
    {
        "number": 3363,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2243\"\n\"\"\"\n\nfrom sys import stdin,stdout\nn,m=map(int,stdin.readline().split())\nc=[int(stdin.readline().strip()) for i in range(n)]\nfor i in range(n):\n    c[i]+=i\n    if i%2==1:\n        c[i]*=2\n    c[i]//=2\n    c[i]-=i\nstdout.write(str(max(c)))\n"
    },
    {
        "number": 3363,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 900\n800 700 400 300 200''') == '2243'\nassert solution('''5 1000\n300 400 300 400 400''') == '700'\nassert solution('''3 100\n1000 1000 1000 1000''') == '1000'\nassert solution('''3 1000\n100 100 100 100''') == '1000'\nassert solution('''3 1000\n100 1000 100''') == '1000'\n"
    },
    {
        "number": 3363,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2243\"\n"
    },
    {
        "number": 3363,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2243\"\nprint(\"tests: passed\")\n\"\"\"\n"
    },
    {
        "number": 3363,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 900\n800 700 400 300 200''') == \"2243\"\nassert solution('''5 100\n1''') == \"1\"\nassert solution('''10 1000\n250 40 10 10 10 10 10 10 10 10 10 10''') == \"5100\"\nassert solution('''10 1000\n
    },
    {
        "number": 3363,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 900\\n800 700 400 300 200\\n') == '2243'\nassert solution('3 100\\n200 200 50 50\\n50 100 20 10\\n') == '210'\nassert solution('2 3\\n1 2 2\\n') == '2'\nassert solution('10 10\\n
    },
    {
        "number": 3364,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n10 4\n? 1 3\n= 1 8\n= 3 8\n? 1 3\n\"\"\") == \"\"\"\nno\nyes\n\"\"\"\nassert solution(\n\"\"\"\n4 1\n? 0 3\n? 3 3\n? 3 0\n? 2 1\n? 2 2\n? 1 3\n? 3 3\n? 1 2\n? 2 0\n? 3 3\n? 2 1\n? 1 2\n? 3 0\n? 0 3\n? 2 3\n? 1 2\n? 1 3\n\"\"\") == \"\"\"\nno\nyes\n\"\"\"\n"
    },
    {
        "number": 3364,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\n\"\"\"\n\nfrom bisect import bisect_left\nfrom typing import List, Tuple\n"
    },
    {
        "number": 3364,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''10 4\n? 1 3\n= 1 8\n= 3 8\n? 1 3\n''') == 'no\\nyes\\n'\n'''"
    },
    {
        "number": 3364,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n10 4\n? 1 3\n= 1 8\n= 3 8\n? 1 3\n''') == 'no\\nyes\\nno\\n'\nassert solution('''\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 3364,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"yes\"\n"
    },
    {
        "number": 3364,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10 4\n? 1 3\n= 1 8\n= 3 8\n? 1 3\n''') == 'yes'\nassert solution('''10 4\n? 1 3\n= 1 8\n= 3 8\n? 1 3\n? 2 6\n? 1 3\n? 4 8\n? 3 2\n? 4 8\n''') == 'no'\nassert solution('''4 4\n? 1 3\n? 1 3\n? 2 3\n? 1 3\n? 1 3\n? 2 3\n? 2 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 2 3\n? 1 3\n? 1 3\n? 2 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 2 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n? 1"
    },
    {
        "number": 3364,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n-----\n-----\n\"\"\""
    },
    {
        "number": 3364,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 3364,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 3364,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 10') == 'yes'\nassert solution('5 3') == 'yes'\nassert solution('5 4') == 'no'\nassert solution('2 3') == 'yes'\nassert solution('2 2') == 'yes'\n"
    },
    {
        "number": 3365,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 5 4 8 3') == '2'\nassert solution('5 3') == '2'\nassert solution('5 4 2 2 3') == '2'\nassert solution('7 3') == '2'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 3365,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '2'\n\n\"\"\""
    },
    {
        "number": 3365,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 1\") == \"0\"\nassert solution(\"10 1\") == \"0\"\nassert solution(\"10 5 4 8 3\") == \"2\"\nassert solution(\"10 11 10 10 10\") == \"2\"\nassert solution(\"10 2 3 4 5 6 7 8 9 10\") == \"2\"\n"
    },
    {
        "number": 3365,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 2') == 0\nassert solution('2 3') == 1\nassert solution('1 1') == 1\nassert solution('4 3') == 1\nassert solution('3 4') == 1\n"
    },
    {
        "number": 3365,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n10 5 4 8 3\") == \"2\"\nassert solution(\"5 2\\n10 10 2\") == \"0\"\nassert solution(\"5 2\\n10 10 4 4\") == \"1\"\nassert solution(\"5 2\\n10 10 8 1\") == \"1\"\nassert solution(\"5 2\\n10 10 3 3\") == \"0\"\n"
    },
    {
        "number": 3365,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3 4 5\") == \"\"\nassert solution(\"2 3 4 5 6\") == \"\"\nassert solution(\"3 5 4 6 7\") == \"\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"\"\n"
    },
    {
        "number": 3365,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 3\") == 2"
    },
    {
        "number": 3365,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == ''"
    },
    {
        "number": 3365,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 3\n10 5 4 8 3''') == '2'\n\nassert solution('''5 3\n3 4 4 8 2''') == '2'\n\nassert solution('''5 3\n3 4 4 5 1''') == '0'\n\nassert solution('''5 3\n1 2 3 4 5''') == '0'\n\nassert solution('''5 3\n1 2 3 4 5''') == '0'"
    },
    {
        "number": 3365,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') is None\nassert solution('1') == 1\nassert solution('1 2') == 2\nassert solution('1 1 1') == 1\nassert solution('1 1 2 1') == 2\n"
    },
    {
        "number": 3366,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 1083\n"
    },
    {
        "number": 3366,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\n-----Notes-----\nThe solution can be computed in O(log N) time, where N is the number of digits in $L$.\n\nHint:\n\nThink about how many times you can divide or multiply a number until you reach the single digit one. The number of iterations can be computed as the number of multiplications or divisions of the original number.\n\nIn order to compute the sum, we need to track the current digits sum and the number of iterations.\n\n\"\"\"\n"
    },
    {
        "number": 3366,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 32''') == 1083\nassert solution('''1 127''') == 1083\nassert solution('''1 1''') == 0\nassert solution('''1 2''') == 1\nassert solution('''1 123456789''') == 123456789\n"
    },
    {
        "number": 3366,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 127') == 1083\nassert solution('100 998') == 10083\nassert solution('1 0') == 2\nassert solution('4 5') == 9\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3366,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 127') == '1083'\nassert solution('1 10') == '9'\nassert solution('1 100000000') == '9'\nassert solution('1 1000000000') == '10'\nassert solution('1 1000000000000000000000000000000000000000000000000000000000000000000000000000000000') == '10'\n"
    },
    {
        "number": 3366,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 127') == 1083\nassert solution('1 100') == 10\nassert solution('1 1000') == 9\nassert solution('1 10000') == 8\nassert solution('1 100000') == 7\n"
    },
    {
        "number": 3366,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1083\"\n\"\"\"\nfrom math import log\nstdin = input()\nl,r = map(int,stdin.split(' '))"
    },
    {
        "number": 3366,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 127') == 1083\nassert solution('1 1') == 1\nassert solution('1 1000000000') == 1083\nassert solution('1 1000000000 1') == 1\nassert solution('1 10') == 1\n"
    },
    {
        "number": 3366,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '1083'\n\n'''\n"
    },
    {
        "number": 3366,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 127\") == \"1083\"\nassert solution(\"1 100\") == \"18\"\nassert solution(\"1 10\") == \"8\"\nassert solution(\"1 10\") == \"8\"\nassert solution(\"1 10\") == \"8\"\n"
    },
    {
        "number": 3367,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n4 4\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably\nWhat is the air speed velocity of an unladen swallow? African?\n''') == '2.0000000000'\nassert solution('''\n4 1\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably\nWhat is the air speed velocity of an unladen swallow? African?\n''') == '0.000000000'\n'''\nimport sys\n"
    },
    {
        "number": 3367,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 4\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably\nWhat is the air speed velocity of an unladen swallow? African?\n''') == \"2.0000000000\"\nassert solution('''4 4\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably\nWhat is the air speed velocity of an unladen swallow? African?\n''') == \"2.0000000000\"\nassert solution('''4 4\nI have no idea what I am thinking\nWhat is the air speed velocity of an unladen swallow? African?\n''') == \"2.0000000000\"\nassert solution('''4 4\nWhat is the air speed velocity of an unladen swallow? African?\n''') == \"2.0000000000\"\nassert solution('''4 4\nWhat is the air speed velocity of an unladen swallow? African?\n''') == \"2.0000000000\"\n"
    },
    {
        "number": 3367,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3367,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 4\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably\nWhat is the air speed velocity of an unladen swallow? African?''') == '2.0000000000'\nassert solution('''5 4\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably\nWhat is the air speed velocity of an unladen swallow? African?\nIs there intelligent life on Earth? Probably''') == '1.60000000000'\nassert solution('''3 3\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably\nWhat is the air speed velocity of an unladen swallow? African?''') == '0.6666666667'\nassert solution('''4 4\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably\nWhat is the air speed velocity of an unladen swallow? African?\nIs there intelligent life on Earth? Probably''') == '0.6666666667'\nassert solution('''10 10\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably\nWhat is the air speed velocity of an unladen swallow? African?\nIs there intelligent life on Earth? Probably''') == '0.0'\n"
    },
    {
        "number": 3367,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\\n') == '2.0000000000'\nassert solution('2 3\\nHow much is 6 times 9? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\\n') == '0.6666666667'\nassert solution('2 2\\nHow much is 6 times 9? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\\n') == '1.000000000'\nassert solution('2 1\\nHow much is 6 times 9? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\\n') == '0.5'\nassert solution('2 2\\nHow much is 6 times 9? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\\n') == '0.5'\n"
    },
    {
        "number": 3367,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2.0000000000\"\n\n\"\"\"\n\n\"\"\"\n\nGiven a set of numbers, return a list containing the numbers in descending order,\nwhere the list size is the number of numbers.\n\n\"\"\"\n"
    },
    {
        "number": 3367,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\\n') == '2.0000000000'\nassert solution('4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\\n') == '2.0000000000'\nassert solution('2 1\\nWhat is the air speed velocity of an unladen swallow? African?\\n') == '0.3333333333'\nassert solution('2 1\\nWhat is the air speed velocity of an unladen swallow? African?\\n') == '0.3333333333'\nassert solution('2 1\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\\n') == '2.0000000000'\n"
    },
    {
        "number": 3367,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 4\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably\nWhat is the air speed velocity of an unladen swallow? African?''') == '2.0000000000'\n'''\n"
    },
    {
        "number": 3367,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(open(\"test_input.txt\").read()) == \"0.33333333333\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3367,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1.3333333333\"\nassert solution(stdin) == \"2.000000000\"\nassert solution(stdin) == \"0.166667\"\nassert solution(stdin) == \"0.166667\"\nassert solution(stdin) == \"0.166667\"\n"
    },
    {
        "number": 3368,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\npenguin 1 monkey''') == 'POSSIBLE'\nassert solution('''3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\npenguin 1 monkey\n''') == 'FALSE ALARM'\nassert solution('''3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\npenguin 1 monkey\n''') == 'POSSIBLE'\nassert solution('''3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\npenguin 1 monkey\n''') == 'IMPOSSIBLE'\nassert solution('''3 4\nabc abc abc abc\n''') == 'POSSIBLE'\n"
    },
    {
        "number": 3368,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 1 dog\") == \"IMPOSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 1 dog\\nlion 3 dog\\npenguin 1 dog\") == \"IMPOSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 1 dog\\nlion 3 dog\\npenguin 1 dog\\npenguin 1 dog\") == \"FALSE ALARM\"\nassert solution(\"4 3\\ndog 1 dog\\ndog 2 dog\\ndog 3 dog\\ndog 4 dog\\ndog 1 dog\\ndog 2 dog\\ndog 3 dog\\ndog 4 dog\") == \"POSSIBLE\"\n"
    },
    {
        "number": 3368,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == None\n"
    },
    {
        "number": 3368,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\npenguin 1 monkey\n''') == 'POSSIBLE'\n\nassert solution('''5 4\nrabbit rabbit rabbit rabbit rabbit rabbit\nrabbit rabbit rabbit rabbit rabbit rabbit\nrabbit rabbit rabbit rabbit rabbit rabbit\nrabbit rabbit rabbit rabbit rabbit rabbit\nrabbit rabbit rabbit rabbit rabbit rabbit\n''') == 'POSSIBLE'\n\nassert solution('''6 2\nrabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit rabbit"
    },
    {
        "number": 3368,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n'''\n"
    },
    {
        "number": 3368,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2') == 'POSSIBLE'\nassert solution('1 3') == 'POSSIBLE'\nassert solution('2 3') == 'POSSIBLE'\nassert solution('3 4') == 'POSSIBLE'\nassert solution('2 5') == 'POSSIBLE'\n"
    },
    {
        "number": 3368,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\npenguin 1 monkey''') == 'POSSIBLE'\nassert solution('''3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\npenguin 1 monkey\n2 monkey''') == 'POSSIBLE'\nassert solution('''3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\npenguin 1 monkey\n1 monkey''') == 'POSSIBLE'\nassert solution('''3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\npenguin 1 monkey\nlion 2 monkey''') == 'IMPOSSIBLE'\nassert solution('''3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\npenguin 1 monkey\nlion 2 monkey\nmonkey 1 monkey''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3368,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 6\") == \"POSSIBLE\"\nassert solution(\"3 6\") == \"POSSIBLE\"\nassert solution(\"3 6\") == \"POSSIBLE\"\nassert solution(\"3 6\") == \"POSSIBLE\"\nassert solution(\"3 6\") == \"POSSIBLE\"\n"
    },
    {
        "number": 3368,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(sample_input) == 'POSSIBLE'\nassert solution(sample_input2) == 'IMPOSSIBLE'\n\"\"\"\nfrom itertools import combinations\n\nN, M = tuple(int(n) for n in input().split())\nstart = [input().split() for _ in range(N)]\n\nstart_1, start_2 = zip(*start)\n\nfor index in range(1, N+1):\n    if index not in start_1 and index not in start_2:\n        print('POSSIBLE')\n        exit()\n    if index not in start_1 and index in start_2:\n        print('IMPOSSIBLE')\n        exit()\n    if index in start_1 and index not in start_2:\n        print('IMPOSSIBLE')\n        exit()\n    if index in start_2 and index not in start_1:\n        print('IMPOSSIBLE')\n        exit()\n\nprint('FALSE ALARM')\n"
    },
    {
        "number": 3368,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == ''\n\"\"\"\nimport sys\nfrom collections import Counter"
    },
    {
        "number": 3369,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''100\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n''') == 'triple correlation 4(1)4(3)3 found'\nassert solution('''100\n5 3 2 6 8 3 2 6 9 4 8 3 2 6 6 8 5 2 5 1 2 7\n2 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n''') == 'triple correlation 3(2)4(1)3 found'\nassert solution('''100\n8 3 7 9 7 8 3 7 8 3 7 7 9 7 9 8 3 7 7 9\n7 9 7 9 9 7 8 3 7 7 8 3 7 7 8 3 7 7 7 9\n7 9 7 9 8 3 7 7 8 3 7 7 7 9 7 9 8 3 7 7\n7 7 7 9 8 3 7 7 8 3 7 7 7 9 7 9 8 3 7 7\n7 7 7 9 7 9 7 8 3 7 7 7 9 7 9 8 3 7 7 7\n7 7 7 8 3 7 7 8 3 7 7 7 9 7 9 8 3 7 7 7\n7 7 7 9 7 9 7 8 3 7 7 7 9 7 9 8 3 7 7 7\n7 7 7 8 3 7 7 7 9 7 9 7 8 3 7 7 7 7 7\n7 7 7 9 7 9 7 8 3 7 7 7 9 7 9 8 3 7 7 7\n7 7 7 8 3 7 7 7 9 7 9 7 8 3 7 7 7 7 7\n7 7 7 8 3 7 7 7 9 7 9 7 8 3 7 7 7 7 7\n7 7 7 9 7 9 7 8 3 7 7 7 9 7 9 8 3 7 7 7\n7 7 7 9 7 9 7 8 3 7 7 7 9 7 9 8 3 7 7 7\n7 7 7 9 7 9 7 8 3 7 7 7 9 7 9 8 3 7 7 7\n7 7 7 9 7 9 7 8 3 7 7 7 9 7 9 8 3 7 7 7\n7 7 7 9 7 9 7 8 3 7 7 7 9 7 9 8 3 7 7 7\n7 7 7 9 7 9 7 8 3 7 7 7 9 7 9 8 3 7 7 7\n7 7 7 9 7 9 7 8 3 7 7 7 9 7 9 8 3 7 7 7\n7 7 7 9 7 9 7 8 3 7 7 7 9 7 9 8 3 7 7 7\n7 7 7 9 7 9 7 8 3 7 7 7 9 7 9 8 3 7 7 7\n7 7 7 9 7 9 7 8 3 7 7 7 9 7 9 8 3 7 7 7\n7 7 7 9 7 9 7 8 3 7 7 7 9 7 9 8 3 7 7 7\n7 7 7 9 7 9 7 8 3 7 7 7 9 7 9 8 3 7 7 7\n7 7 7 9 7 9 7 8 3 7 7 7 9 7 9 8 3 7 7 7\n7 7 7 9 7 9 7 8 3 7 7 7 9 7 9 8 3 7 7 7\n7 7 7 9 7 9 7 8 3 7 7 7 9 7 9 8 3 7 7 7\n7 7 7 9 7 9 7 8 3 7 7 7 9 7 9 8 3 7 7 7\n7 7 7 9 7 9 7 8 3 7 7 7 9 7 9 8 3 7 7 7\n7 7 7 9 7 9 7 8 3 7 7 7 9 7 9 8 3 7 7 7\n7 7 7 9 7 9 7 8 3 7 7 7 9 7 9 8 3 7 7 7\n7 7 7 9 7 9 7 8 3 7 7 7 9 7 9 8 3 7 7 7\n7 7 7 9 7 9 7 8 3 7 7 7 9 7 9 8 3 7 7 7\n7 7 7 9 7 9 7 8 3 7 7 7 9 7 9 8 3 7 7 7\n7 7 7 9 7 9 7 8 3 7 7 7 9 7 9 8 3 7 7 7\n7 7 7 9 7 9 7 8 3 7 7 7 9 7 9 8 3 7 7 7\n7 7 7 9 7 9 7 8 3 7 7 7 9 7 9 8 3 7 7 7\n7 7 7 9 7 9 7 8 3 7 7 7 9 7 9 8 3 7 7 7\n7 7 7 9 7 9 7 8 3 7 7 7 9 7 9 8 3 7 7 7\n7 7 7 9 7 9 7 8 3 7 7 7 9 7 9 8 3 7 7 7\n7 7 7 9 7 9 7 8 3 7 7 7 9 7 9 8 3 7 7 7\n7 7 7 9 7 9 7 8 3 7 7 7 9 7 9 8 3 7 7 7\n7 7 7 9 7 9 7 8 3 7 7 7 9 7 9 8 3 7 7 7\n7 7 7 9 7 9 7 8 3 7 7 7 9 7 9 8 3 7 7 7\n7 7 7 9 7 9 7"
    },
    {
        "number": 3369,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(sample_input) == expected_output\nprint(solution(stdin))\n"
    },
    {
        "number": 3369,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9') == 'triple correlation 4(1)4(3)3 found'\nassert solution('1000\\n' + ''.join(str(random.randint(0, 9)) for _ in range(1000)) + '\\n' + ''.join(str(random.randint(0, 9)) for _ in range(1000)) + '\\n' + ''.join(str(random.randint(0, 9)) for _ in range(1000)) + '\\n' + ''.join(str(random.randint(0, 9)) for _ in range(1000)) + '\\n' + ''.join(str(random.randint(0, 9)) for _ in range(1000)) + '\\n' + ''.join(str(random.randint(0, 9)) for _ in range(1000)) + '\\n' + ''.join(str(random.randint(0, 9)) for _ in range(1000)) + '\\n' + ''.join(str(random.randint(0, 9)) for _ in range(1000)) + '\\n' + ''.join(str(random.randint(0, 9)) for _ in range(1000)) + '\\n' + ''.join(str(random.randint(0, 9)) for _ in range(1000))) == 'random sequence'\n\"\"\"\n\n\"\"\"\nDescription:\n\n---\n\nGiven a positive integer $n$, find the smallest number of steps it takes to move $n$ into the $n$-th fibonacci number.\n\nA step consists of taking one of the first three numbers in the fibonacci sequence, adding the two and taking the third.\n\nIt is not always possible to take all the three numbers in the fibonacci sequence, for example, it is not possible to take three $1$s to reach the first $4$, as $1$ is not a valid value.\n\nHere we will assume that the third value is always in the sequence, and we will not consider any stepping on the last three numbers.\n\nThe order of the values in the sequence is given below.\n\n$0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811, 514229, 832040, 1346269, 2178309, 3524578, 5702887, 9227465, 14930352, 24157817, 39088169, 63245986, 102334155, 165580141, 267914296, 433494437, 701408733, 1134903170, 1836311903, 2971215073, 4807526976, 7778742049, 12586269025, 20365011074, 32951280099, 53316291173, 86267571272, 139583862445, 225851433717, 365435296162, 591286729879, 956722026041, 1548008755920, 2504730781961, 4052739538229, 6489987474324, 1061020985778, 1716768017493, 2884373655349, 4489602324597, 7278211306761, 1287447579233, 2083663987456, 3178111012291, 51422925541699, 83204059448242, 13462697948509, 2178309173684, 3524578790035, 57028876915502, 92274657958984, 149303522449901, 24157817694924, 39088169597967, 63245986147844, 10233415510497, 16558014150765, 2679142961635, 43349443700199, 70140873310599, 11349031705565, 18363119030099, 29712150736840, 48075269757605, 77787420497651, 125862690252525, 203650110123, 329512800934973, 533162911731711, 86267571272177, 139583862449955, 225851433717167, 36543529616399, 591286729879103, 9567220260411901, 154800875592101, 2504730781961, 405273953822939, 64899874743243, 10610209857739, 17167680174937, 28843736"
    },
    {
        "number": 3369,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n') == 'triple correlation 4(1)4(3)3 found'\nassert solution('4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n') == 'random sequence'\nassert solution('4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n') == 'triple correlation 4(1)4(3)3 found'\nassert solution('4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n') == 'random sequence'\nassert solution('4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n') == 'triple correlation 4(1)4(3)3 found'\n"
    },
    {
        "number": 3369,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 4(1)4(3)3 found\"\nassert solution(\"100\\n5 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 4(1)4(3)3 found\"\nassert solution(\"100\\n5 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"random sequence\"\nassert solution(\"100\\n5 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"random sequence\"\nassert solution(\"100\\n5 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"random sequence\"\n"
    },
    {
        "number": 3369,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n1\n1 2 3 4\n1 2 3 4\n''') == \"triple correlation 4(1)4(3)3 found\"\nassert solution('''\n10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n''') == \"random sequence\"\nassert solution('''\n2\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1"
    },
    {
        "number": 3369,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3369,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 'random sequence'\nassert solution('abcd') == 'random sequence'\nassert solution('2 1 2 3') == 'triple correlation 1(2)1(3)2 found'\nassert solution('2 1 2 3 4') == 'triple correlation 2(1)2(3)1 found'\nassert solution('1 2 3 4 5') == 'triple correlation 2(1)2(3)1 found'\n"
    },
    {
        "number": 3369,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n100\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n''') == 'triple correlation 4(1)4(3)3 found'\nassert solution('''\n0\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4"
    },
    {
        "number": 3369,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 3370,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '40.5'\n\nassert stdin == '3 1\\n39\\n10\\n40\\n'\n\nprint(stdin)\n\nprint(solution(stdin))\n\nprint(solution(stdin) == '40.5')\n\nassert stdin == '3 1\\n39\\n10\\n40\\n'\n\nprint(solution(stdin) == '40.5')\n\nassert stdin == '3 1\\n39\\n10\\n40\\n'\n\nprint(solution(stdin) == '40.5')\n\nassert stdin == '3 1\\n39\\n10\\n40\\n'\n\nprint(solution(stdin) == '40.5')"
    },
    {
        "number": 3370,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 1\n39\n10\n40''') == '40.5'\nassert solution('''3 1\n2.4\n10\n5.4''') == '5.0'\nassert solution('''3 1\n2.0\n10\n5.0''') == '5.0'\nassert solution('''3 1\n2.0\n10\n5.1''') == '6.0'\nassert solution('''3 1\n2.2\n10\n5.5''') == '6.0'\n"
    },
    {
        "number": 3370,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == 40.5\n"
    },
    {
        "number": 3370,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1') == '40.5'\nassert solution('2 2') == '25.0'\nassert solution('3 3') == '49.0'\nassert solution('4 4') == '81.0'\nassert solution('5 5') == '104.5'\n"
    },
    {
        "number": 3370,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 1\n39\n10\n40''') == '40.5'\nassert solution('''3 1\n39\n10\n100000''') == '100000'\n'''\nprint(solution(stdin))\n"
    },
    {
        "number": 3370,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n39\\n10\\n40\\n') == '40.5'\nassert solution('1\\n39\\n10\\n40\\n') == '40.5'\nassert solution('1\\n1\\n10\\n40\\n') == '10.5'\nassert solution('1\\n1\\n10\\n40\\n') == '10.5'\nassert solution('1\\n1\\n10\\n40\\n') == '10.5'\n"
    },
    {
        "number": 3370,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '40.5'\nassert solution(stdin) == '40.5'\nassert solution(stdin) == '40.5'\nassert solution(stdin) == '40.5'\nassert solution(stdin) == '40.5'\n"
    },
    {
        "number": 3370,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 1') == '40.5'\nassert solution('1 2') == '40.5'\nassert solution('2 2') == '39.5'\nassert solution('2 3') == '41.5'\nassert solution('3 1') == '40.5'\n"
    },
    {
        "number": 3370,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '40.5'\nassert solution('2 10') == '11'\nassert solution('3 1') == '11'\nassert solution('5 10') == '10'\nassert solution('1 0') == '1'\n"
    },
    {
        "number": 3370,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input_) == output\n"
    },
    {
        "number": 3371,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Impossible\"\n"
    },
    {
        "number": 3371,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n\") == \"1\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n\") == \"Impossible\"\nassert solution(\"1\\n1\\n\") == \"1\"\nassert solution(\"10 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1"
    },
    {
        "number": 3371,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'Impossible'\n\nassert solution('2 1 2 1987\\n1 1 1 1987\\n2 2 2 1988') == '1952'\nassert solution('3 3 2 1987\\n1 2 2 1987\\n2 3 3 1987\\n2 3 1 1987\\n2 1 3 1987\\n3 3 1 1987') == '1952'\nassert solution('4 3 2 1987\\n1 2 2 1987\\n2 3 3 1987\\n2 3 1 1987\\n2 1 3 1987\\n3 3 1 1987\\n1 3 1 1987') == '1952'\nassert solution('3 4 2 1987\\n1 2 2 1987\\n2 3 3 1987\\n2 3 1 1987\\n2 1 3 1987\\n3 4 1 1987') == '1952'\n"
    },
    {
        "number": 3371,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    4 6\n    1 2 1987\n    2 3 1987\n    1 3 1987\n    2 4 1987\n    1 4 1987\n    3 4 1987\n    \"\"\"\n) == 'Impossible'\n\"\"\"\nassert solution(\n    \"\"\"\n    3 3\n    1 2 3\n    2 3 1\n    1 3 2\n    1 3 1\n    2 3 2\n    3 1 3\n    \"\"\"\n) == '1948'\n\"\"\"\nassert solution(\n    \"\"\"\n    6 1\n    5 1\n    1 2 2\n    4 3 4\n    1 5 5\n    3 3 4\n    \"\"\"\n) == '1948'\n\"\"\"\nassert solution(\n    \"\"\"\n    7 2\n    1 2 3\n    1 3 4\n    2 1 3\n    3 4 1\n    3 4 2\n    4 1 2\n    4 2 3\n    5 4 2\n    \"\"\"\n) == '1948'\n\"\"\"\nassert solution(\n    \"\"\"\n    9 3\n    1 2 4\n    1 3 5\n    1 4 7\n    1 5 9\n    2 4 8\n    2 5 7\n    3 4 6\n    3 5 5\n    3 6 8\n    4 4 5\n    4 5 6\n    4 6 7\n    4 7 8\n    4 8 9\n    4 9 1\n    \"\"\"\n) == '1948'\n\"\"\"\n"
    },
    {
        "number": 3371,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n4 6\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987\n''') == 'Impossible'\n\nassert solution('''\n2 4\n1 2 3\n2 3 4\n1 3 4\n2 3 4\n1 3 4\n2 3 4\n1 3 4\n2 3 4\n1 3 4\n2 3 4\n1 3 4\n2 3 4\n1 3 4\n2 3 4\n''') == '2'\n\nassert solution('''\n2 2\n2 1\n1 2\n''') == '2'\n\nassert solution('''\n1 1\n1 1\n''') == 'Impossible'\n\nassert solution('''\n2 2\n1 1\n''') == '2'"
    },
    {
        "number": 3371,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n') == 'Impossible'\nassert solution('3 4\\n1 2 0\\n2 3 0\\n1 3 0\\n2 4 0\\n1 4 0\\n2 3 0\\n') == '1948'\nassert solution('4 5\\n1 2 0\\n2 3 0\\n1 3 0\\n2 4 0\\n1 4 0\\n2 3 0\\n') == '1948'\nassert solution('4 5\\n1 2 0\\n2 3 0\\n1 3 0\\n2 4 0\\n1 4 0\\n2 3 0\\n') == '1948'\nassert solution('4 6\\n1 2 0\\n2 3 0\\n1 3 0\\n2 4 0\\n1 4 0\\n2 3 0\\n') == '1948'\n"
    },
    {
        "number": 3371,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987') == 'Impossible'\nassert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n1 2 1988\\n2 4 1988\\n3 4 1988\\n1 4 1988') == '1988'\nassert solution('4 6\\n1 2 1987\\n2 3 1988\\n1 3 1987\\n2 4 1988\\n1 4 1987\\n3 4 1987\\n1 2 1987\\n2 4 1987\\n1 4 1987') == '1988'\nassert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n1 2 1988\\n2 4 1988\\n3 4 1988\\n1 4 1988') == '1988'\nassert solution('4 6\\n1 2 1987\\n2 3 1988\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n1 2 1987\\n2 4 1987\\n1 4 1987') == '1988'\n"
    },
    {
        "number": 3371,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('3 4 2') == '3'\nassert solution('1 3 2') == '3'\nassert solution('1 2 3 4') == '3'\nassert solution('1 2 3 4') == '3'\n"
    },
    {
        "number": 3371,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 6\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987''') == 'Impossible'\nassert solution('''2 4\n2 4\n1 3\n2 4''') == '1988'\nassert solution('''3 4\n1 2\n2 3\n1 3''') == '1987'\nassert solution('''2 4\n2 4\n1 2\n2 4''') == '1988'\nassert solution('''4 4\n1 2\n2 3\n1 3\n1 4\n1 5\n2 3\n2 4\n2 5\n2 6\n1 3\n3 4\n1 4\n1 5\n1 6\n2 3\n2 4\n2 5\n2 6\n3 4\n3 5\n3 6\n3 7\n1 4\n3 4\n1 5\n3 5\n1 6\n3 6\n1 7\n3 7\n2 4\n2 5\n2 6\n2 7\n1 4\n3 4\n1 5\n3 5\n1 6\n3 6\n1 7\n3 7\n2 4\n2 5\n2 6\n2 7\n1 4\n3 4\n1 5\n3 5\n1 6\n3 6\n1 7\n3 7\n2 4\n2 5\n2 6\n2 7\n1 4\n3 4\n1 5\n3 5\n1 6\n3 6\n1 7\n3 7\n2 4\n2 5\n2 6\n2 7''') == '1988'\n"
    },
    {
        "number": 3371,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''4 6\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987''') == '1987'\n\nassert solution(\n'''4 6\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987''') == '1987'\n\nassert solution(\n'''4 6\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n1 2 1982\n2 3 1982\n1 3 1982\n2 4 1982\n1 4 1982\n3 4 1982\nSample Output:\n2008\n''') == '2008'\n\nassert solution(\n'''4 6\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987\n1 2 1983\n2 3 1983\n1 3 1983\n2 4 1983\n1 4 1983\n3 4 1983\nSample Output:\nImpossible\n''') == 'Impossible'\n"
    },
    {
        "number": 3372,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"impossible\"\nassert solution(\"4 0 1\") == \"impossible\"\nassert solution(\"4 0 1\") == \"impossible\"\nassert solution(\"0 0 2\") == \"impossible\"\nassert solution(\"0 0 2\") == \"impossible\"\n"
    },
    {
        "number": 3372,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1''') == \"impossible\"\n\nassert solution(\n'''2 0 2\nN 1 2\nC 1 2\nN 1 3\nC 1 1''') == \"3\"\n\nassert solution(\n'''2 0 2\nN 1 2\nC 1 2\nN 1 3\nC 1 1''') == \"2\"\n\nassert solution(\n'''3 0 1\nN 2 3\nN 1 1\nC 1 2\nN 1 3\nC 1 1''') == \"impossible\"\n\nassert solution(\n'''3 0 1\nN 2 3\nN 1 1\nC 1 2\nN 1 3\nC 1 1''') == \"impossible\""
    },
    {
        "number": 3372,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\\n\") == \"impossible\"\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\\n\") == \"3\"\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\\n\") == \"3\"\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\\n\") == \"3\"\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\\n\") == \"3\"\n"
    },
    {
        "number": 3372,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\") == \"impossible\"\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\\n5 1 3\") == \"5\"\nassert solution(\"5 3 4\\nC 3 2\\nC 1 2\\nN 3 1\\nC 3 4\") == \"3\"\nassert solution(\"4 0 1\\nN 1 2\\nN 1 3\\nN 1 4\\nN 1 5\") == \"2\"\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nN 1 4\\nN 1 5\\nN 1 6\") == \"2\"\n"
    },
    {
        "number": 3372,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1''') == 'impossible'\nassert solution('''4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1''') == 3\nassert solution('''5 0 2\nC 0 2\nC 0 1\nC 0 3\nC 1 2\nC 2 3\nN 1 3\nN 2 4\nC 1 2\nC 1 3\nN 1 4\nN 2 3''') == 7\nassert solution('''6 0 2\nC 0 2\nC 0 1\nC 0 3\nC 1 2\nC 2 3\nC 3 4\nC 4 5\nC 5 6\nN 1 2\nN 2 3\nN 3 4\nN 4 5\nN 5 6\nN 6 7\nN 7 8\nN 8 9\nN 9 10\nN 10 11\nN 11 12\nN 12 13\nN 13 14\nN 14 15\nN 15 16\nN 16 17\nC 1 2\nC 1 3\nC 1 4\nC 1 5\nC 1 6\nC 1 7\nC 1 8\nC 1 9\nC 1 10\nC 1 11\nC 1 12\nC 1 13\nC 1 14\nC 1 15\nC 1 16\nC 1 17\nC 2 3\nC 2 4\nC 2 5\nC 2 6\nC 2 7\nC 2 8\nC 2 9\nC 2 10\nC 2 11\nC 2 12\nC 2 13\nC 2 14\nC 2 15\nC 2 16\nC 2 17\nC 3 4\nC 3 5\nC 3 6\nC 3 7\nC 3 8\nC 3 9\nC 3 10\nC 3 11\nC 3 12\nC 3 13\nC 3 14\nC 3 15\nC 3 16\nC 3 17\nC 4 5\nC 4 6\nC 4 7\nC 4 8\nC 4 9\nC 4 10\nC 4 11\nC 4 12\nC 4 13\nC 4 14\nC 4 15\nC 4 16\nC 4 17\nC 5 6\nC 5 7\nC 5 8\nC 5 9\nC 5 10\nC 5 11\nC 5 12\nC 5 13\nC 5 14\nC 5 15\nC 5 16\nC 5 17\nC 6 7\nC 6 8\nC 6 9\nC 6 10\nC 6 11\nC 6 12\nC 6 13\nC 6 14\nC 6 15\nC 6 16\nC 6 17\nC 7 8\nC 7 9\nC 7 10\nC 7 11\nC 7 12\nC 7 13\nC 7 14\nC 7 15\nC 7 16\nC 7 17\nC 8 9\nC 8 10\nC 8 11\nC 8 12\nC 8 13\nC 8 14\nC 8 15\nC 8 16\nC 8 17\nC 9 10\nC 9 11\nC 9 12\nC 9 13\nC 9 14\nC 9 15\nC 9 16\nC 9 17\nC 10 11\nC 10 12\nC 10 13\nC 10 14\nC 10 15\nC 10 16\nC 10 17\nC 11 12\nC 11 13\nC 11 14\nC 11 15\nC 11 16\nC 11 17\nC 12 13\nC 12 14\nC 12 15\nC 12 16\nC 12 17\nC 13 14\nC 13 15\nC 13 16\nC 13 17\nC 14 15\nC 14 16\nC 14 17\nC 15 16\nC 15 17\nC 16 17\nC 17 17\n''') == 7\nassert solution('''6 0 2\nC 0 2\nC 0 1\nC 0 3\nC 1 2\nC 2 3\nC 3 4\nC 4 5\nC 5 6\nN 1 2\nN 2 3\nN 3 4\nN 4 5\nN 5 6\nN 6 7\nN 7 8\nN 8 9\nN 9 10\nN 10 11\nN 11 12\nN 12 13\nN 13 14\nN 14 15\nN 15 16\nN 16 17\nN 17 18\nN 18 19\nN 19 20\nN 20 21\nN 21 22\nN 22 23\nN 23 24\nN 24 25\nC 1 2\nC 1 3\nC 1 4\nC 1 5\nC 1 6\nC 1 7\nC 1 8\nC 1 9\nC 1 10\nC 1 11\nC 1 12\nC 1 13\nC 1 14\nC 1 15\nC 1 16\nC 1 17\nC 1 18\nC 1 19\nC 1 20\nC 1 21\nC 1 22\nC 1 23\nC 1 24\nC 1 25\nC 2 3\nC 2 4\nC 2 5\nC 2 6\nC 2 7\nC 2 8\nC 2 9\nC 2 10\nC 2 11\nC 2 12\nC 2 13\nC 2 14\nC 2 15\nC 2 16\nC 2 17\nC 2 18\nC 2 19\nC 2 20\nC 2 21\nC 2 22\nC 2 23\nC 2 24\nC 2 25\nC 3 4\nC 3 5\nC 3 6\nC 3 7\nC 3 8\nC 3 9\nC 3 10\nC 3 11\nC 3 12\nC 3 13\nC 3 14\nC 3 15\nC 3 16\nC 3 17\nC 3 18\nC 3 19\nC 3 20\nC 3 21\nC 3 22\nC 3 23\nC 3 24\nC 3 25\nC 4 5\nC 4 6\nC 4 7\nC 4 8\nC 4 9\nC 4 10\nC 4 11\nC 4 12\nC 4 13\nC 4 14\nC 4 15\nC 4 16\nC 4 17\nC 4 18\nC 4 19\nC 4 20\nC 4 21\nC 4 22\nC 4 23\nC 4 24\nC 4 25\nC 5 6\nC 5 7\nC 5 8\nC 5 9\nC 5"
    },
    {
        "number": 3372,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 0 1') == 'impossible'\nassert solution('4 2 1') == '3'\nassert solution('4 0 1\\nN 2 2\\nC 1 1') == 'impossible'\nassert solution('4 0 1\\nN 1 2\\nC 1 2') == '3'\nassert solution('4 2 1\\nN 2 2\\nC 1 2') == 'impossible'\n"
    },
    {
        "number": 3372,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1\n''') == 'impossible'\n\nassert solution(\n'''\n4 2 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1\n''') == '3'\n\nassert solution(\n'''\n4 0 1\nN 1 2\nN 1 3\nN 1 4\nC 1 2\nN 1 4\nC 1 1\nN 1 3\nC 1 2\nN 1 3\nC 1 2\nN 1 3\nC 1 2\nN 1 3\nC 1 2\nN 1 3\nC 1 2\n''') == '4'\n\nassert solution(\n'''\n4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1\nN 1 3\nC 1 1\nN 1 3\nC 1 2\nN 1 3\nC 1 2\nN 1 3\nC 1 2\nN 1 3\nC 1 2\nN 1 3\nC 1 2\nN 1 3\nC 1 2\nN 1 3\nC 1 2\nN 1 3\nC 1 2\n''') == '4'\n\nassert solution(\n'''\n4 0 1\nN 1 2\nN 1 3\nN 1 4\nC 1 2\nN 1 4\nC 1 1\nN 1 3\nC 1 2\nN 1 3\nC 1 2\nN 1 3\nC 1 2\nN 1 3\nC 1 2\nN 1 3\nC 1 2\nN 1 3\nC 1 2\nN 1 3\nC 1 2\nN 1 3\nC 1 2\nN 1 3\nC 1 2\nN 1 3\nC 1 2\nN 1 3\nC 1 2\nN 1 3\nC 1 2\n''') == '3'"
    },
    {
        "number": 3372,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1''') == \"impossible\"\nassert solution('''1 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1''') == \"3\"\nassert solution('''1 0 1\nN 1 2\nC 1 2\nN 1 3\nC 0 0''') == \"1\"\nassert solution('''0 0 1\nN 1 2\nC 1 2\nN 1 3\nC 0 0''') == \"impossible\"\nassert solution('''4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1''') == \"3\"\n"
    },
    {
        "number": 3372,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 0 1''') == 'impossible'\nassert solution('''4 2 3''') == 3\nassert solution('''4 2 3''') == 'impossible'\nassert solution('''1 0 1''') == 'impossible'\nassert solution('''1 1 1''') == 'impossible'\n"
    },
    {
        "number": 3372,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(open('test_1').read()) == \"impossible\"\nassert solution(open('test_2').read()) == \"3\"\nassert solution(open('test_3').read()) == \"1\"\nassert solution(open('test_4').read()) == \"1\"\nassert solution(open('test_5').read()) == \"3\"\n"
    },
    {
        "number": 3373,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 10\n"
    },
    {
        "number": 3373,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('((()')) == 10\nassert solution('())') == 2\nassert solution('()()') == 6\nassert solution('((()()')) == 22\nassert solution('()()()')) == 12\n"
    },
    {
        "number": 3373,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('(()') == '()'\nassert solution('())(())') == '(()())'\nassert solution('()()') == '()()'\nassert solution('()()()') == '(()())'\nassert solution('()())((()))') == '(()()())'\n"
    },
    {
        "number": 3373,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('()()') == '()()'\nassert solution('())') == '()()'\nassert solution('())()') == '()()'\nassert solution('((()' == '()()()')\nassert solution('((())') == '()()()'\n"
    },
    {
        "number": 3373,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('()') == ''\nassert solution('((()))') == '()()()'\nassert solution('((()')) == '()()()'\nassert solution('()())') == '()()()'\nassert solution('((()))') == '()()()'\n"
    },
    {
        "number": 3373,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(')()') == ')'\nassert solution('()(()())') == '()()()'\nassert solution('()())()') == '()()()'\nassert solution('()()') == '()()'\nassert solution('()') == '()'\n"
    },
    {
        "number": 3373,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"(()())()\") == 6\nassert solution(\"()\") == 2\nassert solution(\"(((())))\") == 12\nassert solution(\"((()\")) == 4\nassert solution(\"(()()\") == 4\n"
    },
    {
        "number": 3373,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''()\n((()\n)()\n''') == '10'\nassert solution('''()\n())(\n''') == '7'\nassert solution('''(())\n''') == '2'\nassert solution('''()()\n((()\n()()\n(((()\n()))\n())(\n''') == '42'\nassert solution('''()\n()()\n((()\n))\n())(\n''') == '36'\n"
    },
    {
        "number": 3373,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''()''') == 2\nassert solution('''((()\n)()\n)()''') == 4\nassert solution('''()()()()()''') == 10\nassert solution('''((())\n())(())''') == 6\nassert solution('''((())\n(()))''') == 6\n"
    },
    {
        "number": 3373,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == ')(((()'\n\"\"\""
    },
    {
        "number": 3374,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 2\\n1 4\") == \"\"\nassert solution(\"377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\") == \"2570\"\nassert solution(\"377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 6\\n4 7\\n4 9"
    },
    {
        "number": 3374,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"8\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n\") == \"85293\"\n"
    },
    {
        "number": 3374,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''9\n377 a\n455 h\n180 a\n211 a\n134 a\n46 h\n111 h\n213 h\n17 a\n15''') == '85293'\nassert solution('''9\n1864 a\n1701 h\n1431 a\n1514 a\n1513 h\n1410 a\n1764 h\n1414 a\n1411 h\n1562 h\n1765 h\n1548 a\n1624 h\n1766 h\n1543 a\n1461 h\n1451 h\n1562 h\n1758 h\n1439 a\n1432 h\n1632 h\n1423 a\n1424 h\n1628 h\n1416 a\n1768 h\n1415 a\n1710 h\n1671 h\n1417 a\n1410 h\n1701 h\n1401 h\n1405 a\n1773 h\n1414 a\n1703 h\n1412 h\n1581 h\n1412 a\n1572 h\n1572 a\n1734 h\n1415 a\n1619 h\n1741 h\n1573 a\n1420 h\n1576 h\n1643 h\n1417 a\n1419 h\n1732 h\n1731 h\n1730 h\n1570 h\n1570 a\n1570 a\n1476 h\n1676 h\n1570 a\n1562 h\n1566 h\n1569 a\n1571 h\n1715 h\n1716 h\n1570 a\n1566 a\n1564 h\n1664 h\n1561 a\n1563 h\n1737 h\n1738 h\n1561 a\n1559 h\n1559 a\n1559 a\n1559 h\n1562 a\n1558 h\n1639 h\n1559 a\n1561 h\n1562 h\n1725 h\n1562 a\n1559 h\n1563 h\n1722 h\n1564 a\n1560 h\n1564 a\n1561 h\n1560 a\n1559 h\n1559 a\n1559 h\n1648 h\n1715 h\n1559 a\n1561 h\n1562 h\n1710 h\n1711 h\n1561 a\n1558 h\n1558 a\n1557 h\n1557 a\n1557 a\n1557 h\n1557 h\n1557 a\n1557 h\n1558 a\n1556 h\n1555 h\n1555 a\n1555 h\n1555 h\n1556 h\n1554 h\n1554 a\n1554 h\n1554 h\n1554 h\n1554 a\n1554 h\n1555 h\n1553 h\n1553 a\n1553 h\n1553 h\n1553 h\n1553 a\n1553 h\n1554 h\n1552 h\n1552 a\n1552 h\n1552 h\n1552 h\n1552 a\n1552 h\n1553 h\n1551 h\n1551 a\n1551 h\n1551 h\n1551 h\n1551 a\n1551 h\n1552 h\n1550 h\n1550 a\n1550 h\n1550 h\n1550 h\n1550 a\n1550 h\n1551 h\n1548 h\n1548 a\n1548 h\n1548 h\n1548 h\n1548 a\n1548 h\n1549 h\n1547 h\n1547 a\n1547 h\n1547 h\n1547 h\n1547 a\n1547 h\n1548 h\n1546 h\n1546 a\n1546 h\n1546 h\n1546 h\n1546 a\n1546 h\n1547 h\n1545 h\n1545 a\n1545 h\n1545 h\n1545 h\n1545 a\n1545 h\n1546 h\n1543 h\n1543 a\n1543 h\n1543 h\n1543 h\n1543 a\n1543 h\n1544 h\n1542 h\n1542 a\n1542 h\n1542 h\n1542 h\n1542 a\n1542 h\n1543 h\n1541 h\n1541 a\n1541 h\n1541 h\n1541 h\n1541 a\n1541"
    },
    {
        "number": 3374,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n9\n377 a\n455 h\n180 a\n211 a\n134 a\n46 h\n111 h\n213 h\n17 a\n15\n1 2\n1 4\n1 6\n2 3\n2 4\n2 5\n3 5\n4 6\n4 7\n4 9\n5 7\n5 8\n6 9\n7 9\n7 8\n''') == '85293'\n\nassert solution('''\n10\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2"
    },
    {
        "number": 3374,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15'\n) == '85293'\n\nassert solution(\n    '2\\n1\\n1\\n1\\n1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2"
    },
    {
        "number": 3374,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('1 1') == '1'\nassert solution('1 2') == '1'\nassert solution('1 2 3') == '6'\nassert solution('1 2 3 4') == '20'\n"
    },
    {
        "number": 3374,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15') == '85293'\nassert solution('3 7\\n2 1\\n2 5\\n1 4\\n1 3\\n1 1\\n2 2\\n1 4\\n1 2\\n2 3\\n2 4\\n2 5\\n3 1\\n2 5\\n2 4\\n1 3\\n1 2\\n2 1\\n2 3\\n3 1\\n3 2\\n2 4\\n1 3\\n1 2\\n2 1\\n2 3\\n3 1\\n1 2\\n2 1\\n2 3\\n3 1\\n3 2\\n2 4\\n1 3\\n1 2\\n2 1\\n2 3\\n3 1\\n3 2\\n2 4\\n1 3\\n1 2\\n2 1\\n2 3\\n3 1\\n3 2\\n2 4\\n1 3\\n1 2\\n2 1\\n2 3\\n3 1\\n3 2\\n2 4\\n1 3\\n1 2\\n2 1\\n2 3\\n3 1\\n3 2\\n2 4\\n1 3\\n1 2\\n2 1\\n2 3\\n3 1\\n3 2\\n2 4\\n1 3\\n1 2\\n2 1\\n2 3\\n3 1\\n3 2\\n2 4\\n1 3\\n1 2\\n2 1\\n2 3\\n3 1\\n3 2\\n2 4\\n1 3\\n1 2\\n2 1\\n2 3\\n3 1\\n3 2\\n2 4\\n1 3\\n1 2\\n2 1\\n2 3\\n3 1\\n3 2\\n2 4\\n1 3\\n1 2\\n2 1\\n2 3\\n3 1\\n3 2\\n2 4\\n1 3\\n1 2\\n2 1\\n2 3\\n3 1\\n3 2\\n2 4\\n1 3\\n1 2\\n2 1\\n2 3\\n3 1\\n3 2\\n2 4\\n1 3\\n1 2\\n2 1\\n2 3\\n3 1\\n3 2\\n2 4\\n1 3\\n1 2\\n2 1\\n2 3\\n3 1\\n3 2\\n2 4\\n1 3\\n1 2\\n2 1\\n2 3\\n3 1\\n3 2\\n2 4\\n1 3\\n1 2\\n2 1\\n2 3\\n3 1\\n3 2\\n2 4\\n1 3\\n1 2\\n2 1\\n2 3\\n3 1\\n3 2\\n2 4\\n1 3\\n1 2\\n2 1\\n2 3\\n3 1\\n3 2\\n2 4\\n1 3\\n1 2\\n2 1\\n2 3\\n3 1\\n3 2\\n2 4\\n1 3\\n1 2\\n2 1\\n2 3\\n3 1\\n3 2\\n2 4\\n1 3\\n1 2\\n2 1\\n2 3\\n3 1\\n3 2\\n2 4\\n1 3\\n1 2\\n2 1\\n2 3\\n3 1\\n3 2\\n2 4\\n1 3\\n1 2\\n2 1\\n2 3\\n3 1\\n3 2\\n2 4\\n1 3\\n1 2\\n2 1\\n2 3\\n3 1\\n3 2\\n2 4\\n1 3\\n1 2\\n2 1\\n2 3\\n3 1\\n3 2\\n2 4\\n1 3\\n1 2\\n2 1\\n2 3\\n3 1\\n3 2\\n2 4\\n1 3\\n1 2\\n2 1\\n2 3"
    },
    {
        "number": 3374,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '85293'"
    },
    {
        "number": 3374,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution
    },
    {
        "number": 3374,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n9\n377 a\n455 h\n180 a\n211 a\n134 a\n46 h\n111 h\n213 h\n17 a\n15\n1 2\n1 4\n1 6\n2 3\n2 4\n2 5\n3 5\n4 6\n4 7\n4 9\n5 7\n5 8\n6 9\n7 9\n7 8\n''') == '85293'\nassert solution('''\n5\n1 1\n1 2\n1 3\n1 4\n1 5\n2 4\n2 5\n3 4\n3 5\n4 5\n''') == '0'\nassert solution('''\n8\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n2 8\n2 7\n3 7\n3 6\n3 5\n4 5\n4 6\n4 7\n4 8\n5 7\n5 8\n5 9\n6 9\n6 8\n6 7\n7 8\n7 9\n7 10\n8 9\n8 10\n8 11\n8 12\n8 13\n8 14\n9 10\n9 11\n9 12\n9 13\n9 14\n9 15\n10 15\n10 14\n10 13\n11 12\n11 13\n11 14\n11 15\n12 14\n12 15\n12 13\n13 14\n13 15\n13 16\n14 15\n14 16\n14 17\n14 18\n14 19\n15 17\n15 18\n15 19\n16 17\n16 18\n16 19\n16 20\n17 19\n17 20\n17 21\n17 22\n17 23\n18 21\n18 22\n18 23\n18 24\n18 25\n19 22\n19 23\n19 24\n19 25\n19 26\n20 25\n20 26\n20 27\n20 28\n20 29\n20 30\n21 29\n21 30\n21 31\n21 32\n21 33\n22 31\n22 32\n22 33\n22 34\n22 35\n23 34\n23 35\n23 36\n23 37\n24 35\n24 36\n24 37\n24 38\n24 39\n25 34\n25 35\n25 36\n25 37\n25 38\n25 39\n25 40\n25 41\n26 37\n26 38\n26 39\n26 40\n26 41\n26 42\n27 37\n27 38\n27 39\n27 40\n27 41\n27 42\n27 43\n27 44\n27 45\n28 37\n28 38\n28 39\n28 40\n28 41\n28 42\n28 43\n28 44\n28 45\n28 46\n28 47\n28 48\n28 49\n28 50\n28 51\n29 50\n29 51\n29 52\n29 53\n29 54\n29 55\n30 54\n30 55\n30 56\n30 57\n31 56\n31 57\n31 58\n31 59\n31 60\n32 56\n32 57\n32 58\n32 59\n32 60\n32 61\n32 62\n32 63\n32 64\n32 65\n32 66\n32 67\n32 68\n32 69\n32 70\n32 71\n32 72\n32 73\n32 74\n32 75\n32 76\n32 77\n32 78\n32 79\n32 80\n32 81\n32 82\n32 83\n32 84\n32 85\n32 86\n32 87\n32 88\n32 89\n32 90\n32 91\n32 92\n32 93\n32 94\n32 95\n32 96\n32 97\n32 98\n32 99\n32 100\n33 99\n33 100\n33 101\n33 102\n33 103\n33 104\n34 101\n34 102\n34 103\n34 104\n34 105\n34 106\n34 107\n35 107\n35 106\n35 105\n36 104\n36 105\n36 106\n36 107\n36 108\n36 109\n36 110\n37 109\n37 110\n37 111\n37 112\n38 112\n38 113\n38 114\n39 113\n39 114\n39 115\n39 116\n39 117\n39 118\n39 119\n39 120\n39 121\n39 122\n39 123\n39 124\n39 125\n39 126\n39 127\n39 128\n39 129\n39 130\n39 131\n39 132\n39 133\n39 134\n39 135\n39 136\n39 137\n39 138\n39 139\n39 140\n39 141\n39"
    },
    {
        "number": 3375,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 5\n1 2\n1 3\n2 3\n1 4\n2 4''') == '5'\nassert solution('''4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4''') == '2'\nassert solution('''6 6\n1 2\n1 3\n1 4\n1 5\n1 6\n2 3\n2 4\n2 5\n2 6\n3 4\n3 5\n3 6\n4 5\n4 6\n5 6''') == '2'\nassert solution('''6 6\n1 2\n1 3\n1 4\n1 5\n1 6\n2 3\n2 4\n2 5\n2 6\n3 4\n3 5\n3 6\n4 5\n4 6\n5 6''') == '1'\nassert solution('''6 6\n1 2\n1 3\n1 4\n1 5\n1 6\n2 3\n2 4\n2 5\n2 6\n3 4\n3 5\n3 6\n4 5\n4 6\n5 6''') == '0'\n"
    },
    {
        "number": 3375,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '5'\nassert stdin == '4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n'\nprint(\"The test passed\")\n"
    },
    {
        "number": 3375,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 5\n1 2\n1 3\n2 3\n1 4\n2 4''') == '5'\nassert solution('''7 9\n1 2\n1 3\n2 3\n2 4\n3 4\n3 5\n4 5\n4 6\n5 6\n5 7\n6 7\n''') == '1'\nassert solution('''15 14\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n3 11\n3 12\n3 13\n3 14\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n4 11\n4 12\n4 13\n4 14\n5 6\n5 7\n5 8\n5 9\n5 10\n5 11\n5 12\n5 13\n5 14\n6 7\n6 8\n6 9\n6 10\n6 11\n6 12\n6 13\n6 14\n7 8\n7 9\n7 10\n7 11\n7 12\n7 13\n7 14\n8 9\n8 10\n8 11\n8 12\n8 13\n8 14\n9 10\n9 11\n9 12\n9 13\n9 14\n10 11\n10 12\n10 13\n10 14\n11 12\n11 13\n11 14\n12 13\n12 14\n13 14\n''') == '1'\nprint('All tests passed successfully!')\n"
    },
    {
        "number": 3375,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n3 4\\n4 5\\n5 4\") == \"5\"\nassert solution(\"1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n3 4\\n4 5\\n5 4\\n4 3\\n4 2\") == \"0\"\nassert solution(\"1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n3 4\\n4 5\\n5 4\\n4 3\\n5 4\\n4 5\\n5 4\") == \"1\"\nassert solution(\"1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n3 4\\n4 5\\n5 4\\n4 3\\n5 4\\n4 5\\n5 4\") == \"0\"\n"
    },
    {
        "number": 3375,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 5\n1 2\n1 3\n2 3\n1 4\n2 4''') == '5'\nassert solution('''3 2\n1 2\n1 3\n2 3''') == '0'\nassert solution('''10 5\n1 2\n1 3\n2 3\n1 4\n2 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17''') == '1'\nassert solution('''10 9\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9''') == '0'\nassert solution('''4 5\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9''') == '5'\n"
    },
    {
        "number": 3375,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''4 5\n1 2\n1 3\n2 3\n1 4\n2 4'''\n) == '5'\nassert solution(\n'''3 4\n1 2\n1 3\n2 3'''\n) == '2'\nassert solution(\n'''3 4\n1 2\n1 3\n2 3'''\n) == '1'\nassert solution(\n'''5 4\n1 2\n1 3\n2 3\n1 4\n2 4'''\n) == '3'\nassert solution(\n'''5 4\n1 2\n2 4\n3 4\n1 5'''\n) == '2'\n"
    },
    {
        "number": 3375,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 5\n1 2\n1 3\n2 3\n1 4\n2 4''') == '5'\nassert solution('''10 10\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n4 5\n4 6\n4 7\n4 8\n4 9\n5 6\n5 7\n5 8\n5 9\n6 7\n6 8\n6 9\n7 8\n7 9\n8 9\n9''') == '8'\nassert solution('''4 5\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n4 5\n4 6\n4 7\n4 8\n4 9\n5 6\n5 7\n5 8\n5 9\n6 7\n6 8\n6 9\n7 8\n7 9\n8 9\n9''') == '8'\nassert solution('''4 5\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n4 5\n4 6\n4 7\n4 8\n4 9\n5 6\n5 7\n5 8\n5 9\n6 7\n6 8\n6 9\n7 8\n7 9\n8 9\n9''') == '8'\nassert solution('''3 4\n1 2\n1 3\n2 4\n3 4\n2 3\n3 1\n2 1\n1 3''') == '1'\n"
    },
    {
        "number": 3375,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''4 5\n1 2\n1 3\n2 3\n1 4\n2 4''') == 5\nassert solution(\n'''4 5\n1 2\n2 3\n1 4\n2 4''') == 5\nassert solution(\n'''4 4\n1 2\n1 3\n2 3\n1 4\n2 4''') == 1\nassert solution(\n'''4 5\n1 2\n1 3\n2 3\n1 4\n2 4\n1 5\n1 6\n1 7\n2 5\n2 6\n2 7\n2 8\n1 9\n2 10\n1 11\n2 12\n1 13\n2 14\n2 15\n1 16\n2 17\n1 18\n2 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n2 30\n1 31\n2 32\n2 33\n1 34\n1 35\n2 36\n1 37\n2 38\n1 39\n1 40\n1 41\n1 42\n1 43\n2 44\n1 45\n2 46\n1 47\n1 48\n1 49\n1 50\n1 51\n1 52\n1 53\n1 54\n1 55\n1 56\n1 57\n1 58\n1 59\n2 60\n2 61\n1 62\n1 63\n2 64\n1 65\n2 66\n1 67\n2 68\n2 69\n1 70\n1 71\n1 72\n1 73\n1 74\n1 75\n1 76\n1 77\n1 78\n1 79\n1 80\n1 81\n1 82\n1 83\n1 84\n1 85\n1 86\n1 87\n1 88\n1 89\n2 90\n2 91\n2 92\n1 93\n2 94\n1 95\n1 96\n1 97\n1 98\n1 99\n2 100\n2 101\n2 102\n2 103\n2 104\n2 105\n2 106\n2 107\n2 108\n1 109\n2 110\n1 111\n1 112\n1 113\n1 114\n1 115\n1 116\n2 117\n1 118\n2 119\n2 120\n2 121\n1 122\n2 123\n1 124\n2 125\n1 126\n2 127\n1 128\n2 129\n1 130\n2 131\n1 132\n1 133\n2 134\n1 135\n2 136\n2 137\n1 138\n2 139\n1 140\n1 141\n1 142\n1 143\n1 144\n1 145\n1 146\n1 147\n1 148\n1 149\n1 150\n1 151\n1 152\n1 153\n1 154\n1 155\n1 156\n1 157\n1 158\n1 159\n2 160\n1 161\n2 162\n1 163\n2 164\n1 165\n1 166\n1 167\n1 168\n1 169\n2 170\n1 171\n2 172\n1 173\n2 174\n1 175\n1 176\n1 177\n1 178\n1 179\n1 180\n1 181\n2 182\n2 183\n2 184\n1 185\n1 186\n1 187\n2 188\n1 189\n2 190\n1 191\n1 192\n1 193\n1 194\n1 195\n1 196\n1 197\n1 198\n1 199\n2 200\n1 201\n2 202\n1 203\n1 204\n1 205\n1 206\n1 207\n1 208\n1 209\n1 210\n1 211\n1 212\n1 213\n1 214\n1 215\n1 216\n1 217\n1 218\n1 219\n1 220\n1 221\n1 222\n1 223\n1 224\n1 225\n1 226\n1 227\n1 228\n1 229\n1 230\n1 231\n1 232\n1 233\n1 234\n1 235\n1 236\n1 237\n1 238\n1 239\n1 240\n1 241\n1 242\n1 243\n1 244\n1 245\n1 246\n1 247\n1 248\n1 249\n1 250\n1 251\n1 252\n1 253\n1 254\n1 255\n2 256\n1 257\n1 258\n1 259\n1 260\n1 261\n1 262\n1 263\n1 264\n1 265\n1 266\n1 267\n1 268\n1 269\n1 270\n1 271\n1 272\n1 273\n1 274\n1 275\n1 276\n1 277\n1 278\n1 279\n1 280\n1 281\n1 282\n1 283\n1 284\n1 285\n1 286\n1 287\n1 288\n1 289\n1 290\n1 291\n1 292\n1 293\n1 294\n1 295\n1 296\n1 297\n1 298\n1 299\n1 300\n1 301\n1 302\n1 303\n1 304\n1 305\n1 306\n1 307\n1 308\n1 309\n1 310\n1 311\n1 312\n1 313\n1 314\n1 315\n1 316\n1 317\n1 318\n1 319\n1 320\n1 321\n1 322\n1 323\n1 324\n1 325\n1 326\n1 327\n1 328\n1 329\n1 330\n1 331\n1 332\n1 333\n1 334\n1 335\n1 336\n1 337\n1 338\n1 339\n1 340\n1 341\n1 342\n1 343\n1 344\n1 345\n1 346\n1 347\n1 348\n1 349\n1 350\n1 351\n1 352\n1 353\n1 354\n1 355\n1 356\n1 357\n1 358\n1 359\n1 360\n1 361\n1 362\n1 363\n1 364\n1 365\n1 366\n1 367\n1 368\n1 369\n1 370\n1 371\n1 372\n1 373\n1 374\n1 375\n1 376\n1 377\n1 378\n1 379\n1 380\n1 381\n1 382\n1 383\n1 384\n1 385\n1 386\n1 387\n1 388\n1 389\n1 390\n1 391\n1 392\n1 393\n1 394\n1 395\n1 396\n1 397\n1 398\n1 399\n1 400\n1 401\n1 402\n1 403\n1 404\n1 405\n1 406\n1 407\n1 408\n1 409\n1 410\n1 411\n1 412\n1 413\n1 414\n1 415\n1 416\n1 417\n1 418\n1 419\n1 420\n1 421\n1 422\n1 423\n1 424\n1 425\n1 426\n1 427\n1 428\n1 429\n1 430\n1 431\n1 432\n1 433\n1 434\n1 435\n1 436\n1 437\n1 438\n1 439\n1 440\n1 441\n1 442\n1 443\n1 444\n1 445\n1 446\n1 447\n1 448\n1 449\n1 450\n1 451\n1 452\n1 453\n1 454\n1 455\n1 456\n1 457\n1 458\n1 459\n1 460\n1 461\n1 462\n1 463\n1 464\n1 465\n1 466\n1 467\n1 468\n1 469\n1 470\n1 471\n1 472\n1 473\n1 474\n1 475\n1 476\n1 477\n1 478\n1 479\n1 480\n1 481\n1 482\n1 483\n1 484\n1 485\n1 486\n1 487\n1 488\n1 489\n1 490\n1 491\n1 492\n1 493\n1 494\n1 495\n1 496\n1 497\n1 498\n1 499\n1 500\n1 501\n1 502\n1 503\n1 504\n1 505\n1 506\n1 507\n1 508\n1 509\n1 510\n1 511\n1 512\n1 513\n1 514\n1 515\n1 516\n1 517\n1 518\n1 519\n1 520\n"
    },
    {
        "number": 3375,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 5\n1 2\n1 3\n2 3\n1 4\n2 4''') == '5'\nassert solution('''5 6\n1 2\n1 3\n2 3\n1 4\n1 5\n2 4\n2 5\n3 4\n3 5\n4 5''') == '6'\n'''\n\n2 3\n1 2\n3 4\n5 1\n1 4\n2 5\n1 5\n3 5\n3 4\n5 4\n'''\n"
    },
    {
        "number": 3375,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"5\"\n'''\n"
    },
    {
        "number": 3376,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5100'\n\nassert solution('''2\n2 caterpillar 3 pupa 7 butterfly\n2 dove 3 pigeon 7 aaabaaajss\n2 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '2350'\n\nassert solution('''6\n6 caterpillar 3 pupa 7 butterfly\n6 dove 3 pigeon 7 aaabaaajss\n6 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '12000'\n\nassert solution('''9\n9 caterpillar 3 pupa 7 butterfly\n9 dove 3 pigeon 7 aaabaaajss\n9 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '25000'\n\nassert solution('''4\n4 caterpillar 3 pupa 7 butterfly\n4 dove 3 pigeon 7 aaabaaajss\n4 mouse 1 electromouse 5 rat\n4\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '34300'"
    },
    {
        "number": 3376,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\\n') == '5100'\n'''"
    },
    {
        "number": 3376,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(open(\"test_input_1.txt\", \"r\").read()) == \"5100\"\nassert solution(open(\"test_input_2.txt\", \"r\").read()) == \"10035\"\nassert solution(open(\"test_input_3.txt\", \"r\").read()) == \"49900\"\n\n----Answer: 5100\n'''\n\nfrom collections import defaultdict\nfrom collections import namedtuple"
    },
    {
        "number": 3376,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n\"\"\") == \"5100\"\n\"\"\"\n\ncat:3    caterpillar:3    pupa:7    butterfly:3\ndove:3    dove:3    pigeon:7    aaabaaajss:7\nmouse:1    mouse:1    electromouse:5    rat:7\n\nelectromouse:1    electromouse:1    electromouse:5    rat:7\nelectromouse:1    electromouse:1    electromouse:5    rat:7\nelectromouse:1    electromouse:1    electromouse:5    rat:7\n\n5000    electromouse:1    electromouse:1    electromouse:5    rat:7\n5000    electromouse:1    electromouse:1    electromouse:5    rat:7\n5000    electromouse:1    electromouse:1    electromouse:5    rat:7\n5000    electromouse:1    electromouse:1    electromouse:5    rat:7\n5000    electromouse:1    electromouse:1    electromouse:5    rat:7\n5000    electromouse:1    electromouse:1    electromouse:5    rat:7\n5000    electromouse:1    electromouse:1    electromouse:5    rat:7\n5000    electromouse:1    electromouse:1    electromouse:5    rat:7\n5000    electromouse:1    electromouse:1    electromouse:5    rat:7\n5000    electromouse:1    electromouse:1    electromouse:5    rat:7\n5000    electromouse:1    electromouse:1    electromouse:5    rat:7\n5000    electromouse:1    electromouse:1    electromouse:5    rat:7\n5000    electromouse:1    electromouse:1    electromouse:5    rat:7\n5000    electromouse:1    electromouse:1    electromouse:5    rat:7\n5000    electromouse:1    electromouse:1    electromouse:5    rat:7\n5000    electromouse:1    electromouse:1    electromouse:5    rat:7\n5000    electromouse:1    electromouse:1    electromouse:5    rat:7\n5000    electromouse:1    electromouse:1    electromouse:5    rat:7\n5000    electromouse:1    electromouse:1    electromouse:5    rat:7\n5000    electromouse:1    electromouse:1    electromouse:5    rat:7\n5000    electromouse:1    electromouse:1    electromouse:5    rat:7\n5000    electromouse:1    electromouse:1    electromouse:5    rat:7\n5000    electromouse:1    electromouse:1    electromouse:5    rat:7\n5000    electromouse:1    electromouse:1    electromouse:5    rat:7\n5000    electromouse:1    electromouse:1    electromouse:5    rat:7\n5000    electromouse:1    electromouse:1    electromouse:5    rat:7\n5000    electromouse:1    electromouse:1    electromouse:"
    },
    {
        "number": 3376,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly''') == '5100'\n\nprint(solution('''3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly'''))"
    },
    {
        "number": 3376,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5100'\nassert solution('''3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5100'\nassert solution('''4\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '6205'\nassert solution('''3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '6205'\nassert solution('''2\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5770'\n"
    },
    {
        "number": 3376,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n2\\n1\\n0\\n0\\n1\\n0\\n1\\n1\\n0\\n0\\n0\\n0\\n1\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\"
    },
    {
        "number": 3376,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5100'\nassert solution('''3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5100'\nassert solution('''3\n4 cat\n4 dog\n3 mouse\n7 bear\n2 zebra\n4 fox\n1 rabbit\n2 horse\n1 lion\n''') == '5010'\n'''\n'''\n"
    },
    {
        "number": 3376,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5100'\n'''\nassert solution('''3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5100'\nassert solution('''3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5100'\nassert solution('''3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5100'\nassert solution('''3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5100'\n"
    },
    {
        "number": 3376,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5100'\nassert solution(\n'''3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 elephant\n500 ele\n1000 elephant\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5625'\nassert solution(\n'''3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 elephant\n500 ele\n1000 elephant\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5625'\nassert solution(\n'''3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 rabbit\n500 rabbit\n1000 rabbit\n1500 rabbit\n2000 aaabaaajss\n2500 rabbit\n3000 rabbit\n''') == '105625'\nassert solution(\n'''3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 rabbit\n500 rabbit\n1000 rabbit\n1500 rabbit\n2000 aaabaaajss\n2500 rabbit\n3000 rabbit\n''') == '105625'\n"
    },
    {
        "number": 3377,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(dedent(\"\"\"\n    5\n    0\n    1 1\n    1 1\n    2 2 3\n    1 4\n    8\n    1\n    2\n    3\n    1\n    4\n    2\n    3\n    5\n\"\"\")) == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\"\nassert solution(dedent(\"\"\"\n    5\n    0\n    1 1\n    1 1\n    2 2 3\n    1 4\n    8\n    1\n    2\n    3\n    1\n    4\n    2\n\"\"\")) == \"4\\n1\\n2\\n3\\n1\\n4\\n\"\n\n\"\"\"\nFor the test cases, we will test the following scenarios:\n    1. n=1: $0$\n    2. n=2: $0$\n    3. n=3: $0$\n    4. n=4: $0$\n    5. n=5: $0$\n    6. n=6: $0$\n    7. n=7: $0$\n    8. n=8: $0$\n    9. n=9: $0$\n    10. n=10: $0$\n    11. n=11: $0$\n    12. n=12: $0$\n    13. n=13: $0$\n    14. n=14: $0$\n    15. n=15: $0$\n    16. n=16: $0$\n    17. n=17: $0$\n    18. n=18: $0$\n    19. n=19: $0$\n    20. n=20: $0$\n    21. n=21: $0$\n    22. n=22: $0$\n    23. n=23: $0$\n    24. n=24: $0$\n    25. n=25: $0$\n    26. n=26: $0$\n    27. n=27: $0$\n    28. n=28: $0$\n    29. n=29: $0$\n    30. n=30: $0$\n    31. n=31: $0$\n    32. n=32: $0$\n    33. n=33: $0$\n    34. n=34: $0$\n    35. n=35: $0$\n    36. n=36: $0$\n    37. n=37: $0$\n    38. n=38: $0$\n    39. n=39: $0$\n    40. n=40: $0$\n    41. n=41: $0$\n    42. n=42: $0$\n    43. n=43: $0$\n    44. n=44: $0$\n    45. n=45: $0$\n    46. n=46: $0$\n    47. n=47: $0$\n    48. n=48: $0$\n    49. n=49: $0$\n    50. n=50: $0$\n    51. n=51: $0$\n    52. n=52: $0$\n    53. n=53: $0$\n    54. n=54: $0$\n    55. n=55: $0$\n    56. n=56: $0$\n    57. n=57: $0$\n    58. n=58: $0$\n    59. n=59: $0$\n    60. n=60: $0$\n    61. n=61: $0$\n    62. n=62: $0$\n    63. n=63: $0$\n    64. n=64: $0$\n    65. n=65: $0$\n    66. n=66: $0$\n    67. n=67: $0$\n    68. n=68: $0$\n    69. n=69: $0$\n    70. n=70: $0$\n    71. n=71: $0$\n    72. n=72: $0$\n    73. n=73: $0$\n    74. n=74: $0$\n    75. n=75: $0$\n    76. n=76: $0$\n    77. n=77: $0$\n    78. n=78: $0$\n    79. n=79: $0$\n    80. n=80: $0$\n    81. n=81: $0$\n    82. n=82: $0$\n    83. n=83: $0$\n    84. n=84: $0$\n    85. n=85: $"
    },
    {
        "number": 3377,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(test0) == test0out\nassert solution(test1) == test1out\nassert solution(test2) == test2out\nassert solution(test3) == test3out\nassert solution(test4) == test4out\n"
    },
    {
        "number": 3377,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n0\n1 1\n1 1\n2 2 3\n1 4\n8''') == '6\\n1\\n2\\n3\\n1\\n4\\n5\\n'\nassert solution('''2\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2''') == '-1\\n'\nassert solution('''4\n1\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1"
    },
    {
        "number": 3377,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 3377,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\"
    },
    {
        "number": 3377,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5''') == '6\\n1\\n2\\n3\\n1\\n4\\n5'\nassert solution('''4\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n4\n3\n2\n1\n0\n1\n2\n1\n3\n2\n''') == '2\\n1\\n2\\n1\\n4\\n3'\nassert solution('''4\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n4\n3\n2\n1\n0\n1\n2\n1\n3\n2\n''') == '2\\n1\\n2\\n1\\n4\\n3'\nassert solution('''5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n4\n3\n2\n1\n0\n1\n2\n1\n3\n2\n''') == '6\\n1\\n2\\n3\\n1\\n4\\n5'\nassert solution('''4\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n4\n3\n2\n1\n0\n1\n2\n1\n3\n2\n''') == '2\\n1\\n2\\n1\\n4\\n3'\n"
    },
    {
        "number": 3377,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(open(\"test\").read()) == \"6\"\nassert solution(open(\"test1\").read()) == \"3\"\nassert solution(open(\"test2\").read()) == \"6\"\nassert solution(open(\"test3\").read()) == \"1\"\nassert solution(open(\"test4\").read()) == \"6\"\n"
    },
    {
        "number": 3377,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\"\"\") == \"\"\"6\n1\n2\n3\n1\n4\n5\"\"\"\n"
    },
    {
        "number": 3377,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\") == \"-1\"\nassert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\") == \"-1\"\nassert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\") == \"-1\"\nassert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\") == \"-1\"\nassert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\") == \"-1\"\n"
    },
    {
        "number": 3377,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(SAMPLE_INPUT) == EXPECTED_RESULT\nprint(solution(open(\"input/b.in\").read()))\n"
    },
    {
        "number": 3378,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 1 2 1\\n4\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5') == '10'\nassert solution('2 4\\n1 1 O 2\\n2 1 O 1\\n1 1 R 3\\n2 2 O 3\\n1 1 R 2\\n2 2 O 1\\n1 1 O 1\\n2 2 R 1\\n2 2 O 2') == '4'\nassert solution('2 4\\n1 1 O 2\\n2 1 O 1\\n1 1 R 3\\n2 2 O 3\\n1 1 R 2\\n2 2 O 1\\n1 1 O 1\\n2 2 R 1\\n2 2 O 2') == '3'\nassert solution('3 4\\n1 1 O 2\\n2 1 O 1\\n1 1 R 3\\n2 2 O 3\\n1 1 R 2\\n2 2 O 1\\n1 1 O 1\\n2 2 R 1\\n2 2 O 2') == '5'\nassert solution('3 4\\n1 1 O 2\\n2 1 O 1\\n1 1 R 3\\n2 2 O 3\\n1 1 R 2\\n2 2 O 1\\n1 1 O 1\\n2 2 R 1\\n2 2 O 2') == '6'\n"
    },
    {
        "number": 3378,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(open('test_files/Y11R5P1/A.in').read()) == open('test_files/Y11R5P1/A.out').read()\n'''"
    },
    {
        "number": 3378,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input1) == input2\n\"\"\"\n\nimport sys\n\nclass Airfare:\n    def __init__(self, origin: int, destination: int, type: str, price: int) -> None:\n        self.origin = origin\n        self.destination = destination\n        self.type = type\n        self.price = price"
    },
    {
        "number": 3378,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"6\"\n\"\"\"\n"
    },
    {
        "number": 3378,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 5\n1 2 1 2 1\n4\n1 2 R 6\n1 2 O 3\n2 1 O 3\n1 2 R 5''') == '10'\nassert solution('''2 5\n1 2 1 2 1\n4\n1 2 R 6\n1 2 O 3\n2 1 O 3\n1 2 R 5''') == '10'\nassert solution('''2 4\n1 2 1 2 1\n4\n1 2 R 6\n1 2 O 3\n2 1 O 3\n1 2 R 5''') == '17'\nassert solution('''4 4\n1 2 1 2 1\n4\n1 2 R 6\n1 2 O 3\n2 1 O 3\n1 2 R 5''') == '7'\nassert solution('''8 8\n1 2 1 2 1\n4\n1 2 R 6\n1 2 O 3\n2 1 O 3\n1 2 R 5\n1 2 R 5\n1 2 R 5\n1 2 R 5''') == '21'\n"
    },
    {
        "number": 3378,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\\\n2 5\n1 2 1 2 1\n4\n1 2 R 6\n1 2 O 3\n2 1 O 3\n1 2 R 5\n''') == \"10\"\n\nassert solution('''\\\n2 5\n1 2 1 2 1\n4\n1 2 R 6\n1 2 O 3\n2 1 O 3\n1 2 R 5\n''') == \"35\"\n\nassert solution('''\\\n2 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2"
    },
    {
        "number": 3378,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 5\n1 2 1 2 1\n4\n1 2 R 6\n1 2 O 3\n2 1 O 3\n1 2 R 5\n''') == '10'\nassert solution('''1 2 3\n1 2 2 1\n3\n1 2 O 3\n2 1 O 3\n1 2 R 4\n''') == '9'\nassert solution('''1 2 3\n1 2 2 1\n3\n1 2 O 3\n2 1 O 3\n1 2 R 4\n''') == '7'\nassert solution('''1 2 3\n1 2 2 1\n3\n1 2 O 3\n2 1 O 3\n1 2 R 4\n''') == '4'\nassert solution('''1 2 3\n1 2 2 1\n3\n1 2 O 3\n2 1 O 3\n1 2 R 4\n''') == '5'\n"
    },
    {
        "number": 3378,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys\n\nn, d = map(int, sys.stdin.readline().split())\nt = list(map(int, sys.stdin.readline().split()))\nl = int(sys.stdin.readline())\nl = list(map(int, sys.stdin.readline().split()))"
    },
    {
        "number": 3378,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''5 3\n1 2 1 2 1''') == '10'\n\nassert solution(\n'''5 3\n1 2 1 2 1''') == '10'\n\nassert solution(\n'''3 3\n1 2 R 1\n1 3 O 1\n1 4 R 1\n2 1 R 2\n2 3 O 1''') == '6'\n\nassert solution(\n'''3 3\n1 2 R 1\n1 3 O 1\n1 4 R 1\n2 1 R 2\n2 3 O 1''') == '6'\n\nassert solution(\n'''3 3\n1 2 R 1\n1 3 O 1\n1 4 R 1\n2 1 R 2\n2 3 O 1''') == '6'"
    },
    {
        "number": 3378,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 5\n1 2 1 2 1\n4\n1 2 R 6\n1 2 O 3\n2 1 O 3\n1 2 R 5''') == '10'\n'''\n"
    },
    {
        "number": 3379,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == str(4)\nassert stdin == '4 3\\n0 1\\n1 2\\n2 3'\n\nassert solution(stdin) == str(2)\nassert stdin == '4 3\\n0 1\\n1 3'\n\nassert solution(stdin) == str(0)\n"
    },
    {
        "number": 3379,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '1'\n\"\"\"\n\n\"\"\"\n------\nThe language is not so simple, so many things have to be taken into account. \n\nThe goal is to output the largest possible size of $S$ at the beginning of any iteration of Step\u00a0$1$.\n\nThe following is a list of rules:\n - a node can be a source node if it has no incoming edges;\n - a node can be a sink node if it has no outgoing edges;\n - a node can be an intermediary node if it is neither a source nor a sink node, but has at least one outgoing edge;\n - an intermediary node can never be a sink node;\n - the number of nodes of the graph is less or equal to 50,000.\n\nI don't really understand the algorithm. It can be divided into three stages:\n1. Build the graph as directed graph;\n2. Topological sorting of the graph;\n3. Output the size of $S$ at the beginning of any iteration of Step\u00a0$1$ of Kahn\u2019s algorithm.\n\nAfter the first stage, each node is visited only once. In the second stage, each node is visited in each order of its topological sort.\n\nTaken the graph in step 1, we can build the graph as directed graph. The graph has no cycles, since each node has no incoming edges.\n\nIn the third stage, we consider a node as a sink node if it has no outgoing edges, because we have to output its size.\n\nSince in Step 2, we have already sorted the nodes according to their topological sort, we can simply output the sizes in order.\n\nStep 3 is a bit harder, since we don't know how many times the nodes in Step 2 were visited. We need to count them.\n\nThis is a rather difficult problem, so I don't think I've come up with a solution myself.\n\nI think this is what I was looking for, since it's a bit complex and I don't know how to solve it.\n\nThis is the algorithm:\n1. Create a directed graph with all the nodes and edges in the graph.\n2. Topologically sort the graph and output the sizes in order.\n3. The solution is the size of the graph in Step 3.\n\nI didn't come up with this solution in a while, but this is what I found.\n\n-----\n\"\"\""
    },
    {
        "number": 3379,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''0 1\n1 2\n2 3''') == '1'\nassert solution('''1 2\n0 2\n0 1''') == '0'\nassert solution('''2 3\n3 0\n0 1''') == '3'\nassert solution('''0 1\n1 2\n0 2''') == '1'\nassert solution('''0 1\n0 2\n2 3''') == '1'\n"
    },
    {
        "number": 3379,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\\n\") == \"1\"\nassert solution(\"5 3\\n0 1\\n1 2\\n2 3\\n3 4\\n\") == \"3\"\nassert solution(\"4 3\\n0 1\\n1 3\\n2 3\\n\") == \"1\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\\n3 4\\n\") == \"1\"\n"
    },
    {
        "number": 3379,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 3\\n1 2\\n2 3') == '1'\nassert solution('2 3\\n0 1\\n1 2') == '2'\nassert solution('2 3\\n0 1\\n2 1') == '1'\nassert solution('3 3\\n0 1\\n0 2\\n2 1') == '2'\nassert solution('3 3\\n1 2\\n2 1') == '2'\n"
    },
    {
        "number": 3379,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n0 1\\n1 2\") == \"1\"\nassert solution(\"3 4\\n0 1\\n2 0\\n2 1\\n3 0\") == \"2\"\nassert solution(\"5 6\\n0 1\\n1 2\\n2 3\\n4 5\\n0 3\\n1 4\\n3 4\\n4 5\\n0 3\\n3 4\") == \"5\"\nassert solution(\"6 7\\n0 1\\n1 2\\n2 3\\n4 5\\n0 3\\n1 4\\n3 4\\n4 5\\n0 3\\n3 4\") == \"6\"\nassert solution(\"7 8\\n0 1\\n1 2\\n2 3\\n4 5\\n0 3\\n1 4\\n3 4\\n4 5\\n0 3\\n3 4\") == \"7\"\n"
    },
    {
        "number": 3379,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0 1\\n1 2\\n2 3\") == \"1\"\nassert solution(\"1 2\\n2 3\") == \"1\"\nassert solution(\"0 1\\n1 2\\n3 4\") == \"1\"\nassert solution(\"0 1\\n1 3\\n2 4\") == \"1\"\nassert solution(\"0 1\\n2 3\\n2 4\") == \"2\"\n"
    },
    {
        "number": 3379,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\"\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----"
    },
    {
        "number": 3379,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '1'\nassert solution('0 1') == '1'\nassert solution('1 2\\n0 1') == '1'\nassert solution('1 2\\n2 1') == '2'\nassert solution('1 2\\n1 2') == '2'\n"
    },
    {
        "number": 3379,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n0 1\\n1 2\\n2 3\") == \"1\"\nassert solution(\"6 4\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\") == \"3\"\nassert solution(\"6 4\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\") == \"3\"\nassert solution(\"6 4\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\") == \"2\"\nassert solution(\"6 4\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\") == \"2\"\n"
    },
    {
        "number": 3380,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '0'\nassert solution('2') == '1.0'\nassert solution('3') == '0.5'\nassert solution('4') == '0.166666666666667'\n"
    },
    {
        "number": 3380,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3') == '0.81666666666667'\nassert solution('4') == '0.166666666666667'\nassert solution('5') == '0.166666666666667'\nassert solution('6') == '0.166666666666667'\nassert solution('7') == '0.166666666666667'\n"
    },
    {
        "number": 3380,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n4\n\"\"\") == \"0.96296296296\"\n\nassert solution(\n\"\"\"\n5\n\"\"\") == \"0.0434782608696\"\n\nassert solution(\n\"\"\"\n4\n\"\"\") == \"0.96296296296\"\n\nassert solution(\n\"\"\"\n6\n\"\"\") == \"0.048696291086\"\n\nassert solution(\n\"\"\"\n7\n\"\"\") == \"0.0495830302278\""
    },
    {
        "number": 3380,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n4') == '0.962962962963'\nassert solution('5\\n6') == '0.02380952380952381'\nassert solution('1000\\n1000') == '1.0'\nassert solution('1000\\n5000') == '0.0428571428571429'\nassert solution('1000\\n10000') == '0.0001'\n\"\"\"\n\nfrom fractions import Fraction\nfrom sys import maxsize\nfrom random import randint"
    },
    {
        "number": 3380,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4') == '0.962962962963'\nassert solution('5') == '0.962962962963'\nassert solution('6') == '0.962962962963'\nassert solution('7') == '0.962962962963'\nassert solution('8') == '0.962962962963'\n"
    },
    {
        "number": 3380,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '0.962962962963'\nassert solution(stdin) == '0.897959183673469'\nassert solution(stdin) == '0.9735099642493'\nassert solution(stdin) == '0.9735099642493'\nassert solution(stdin) == '0.9735099642493'\n"
    },
    {
        "number": 3380,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"0.96296296296\"\nassert solution(\"10\") == \"0.099180327868\"\nassert solution(\"100\") == \"0.99481803278\"\nassert solution(\"1000\") == \"0.99998879\"\nassert solution(\"10000\") == \"0.999999998\"\n"
    },
    {
        "number": 3380,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2''') == '0.962962962963'\nassert solution('''3''') == '0.972972972973'\nassert solution('''4''') == '0.97050505050505'\nassert solution('''5''') == '0.986486486486487'\nassert solution('''6''') == '0.994594594594595'\n"
    },
    {
        "number": 3380,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n' +\n                '1 2\\n' +\n                '2 3\\n' +\n                '3 4') == '0.962962962963'\nassert solution('2\\n' +\n                '1 2\\n' +\n                '2 3\\n') == '0.0'\nassert solution('6\\n' +\n                '1 2\\n' +\n                '2 3\\n' +\n                '3 4\\n' +\n                '4 5\\n' +\n                '5 6') == '0.090909090909'\nassert solution('3\\n' +\n                '1 2\\n' +\n                '2 3\\n') == '0.0'\nassert solution('6\\n' +\n                '1 2\\n' +\n                '2 3\\n' +\n                '3 4\\n' +\n                '4 5\\n' +\n                '5 6') == '0.090909090909'\n"
    },
    {
        "number": 3380,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4''') == '0.962962962963'\nassert solution('''5''') == '0.962962962963'\nassert solution('''6''') == '0.9642857142857'\nassert solution('''7''') == '0.962962962963'\nassert solution('''8''') == '0.9642857142857'\n"
    },
    {
        "number": 3381,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0 0\\n40000000 0\\n0 40000000\"\n"
    },
    {
        "number": 3381,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') is None\nassert solution('a') == '0 0'\nassert solution('b') == '0 1'\nassert solution('ab') == '0 0'\nassert solution('aba') == '0 1'\n"
    },
    {
        "number": 3381,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3381,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''0\n3\n3''') == '0 0\\n40000000 0\\n0 40000000\\n'\nassert solution('''0\n1\n1''') == '0 0\\n'\nassert solution('''0\n4\n4''') == '0 0\\n0 4\\n0 4\\n'\nassert solution('''0\n5\n5''') == '0 0\\n0 4\\n0 4\\n0 4\\n'\nassert solution('''0\n6\n6''') == '0 0\\n0 4\\n0 4\\n0 4\\n0 4\\n'\n"
    },
    {
        "number": 3381,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3''') == '''0 0\n40000000 0\n0 40000000'''\nassert solution('''3\n1''') == '''0 0\n0 40000000\n40000000 0'''\nassert solution('''3\n2\n2''') == '''0 0\n0 40000000\n40000000 0\n0 0\n0 40000000\n40000000 0\n40000000 0'''\nassert solution('''3\n3\n1 1 1\n0 1 1\n0 0 0\n2 1 1\n0 1 1\n0 0 0\n1 1 1\n1 0 1\n1 0 1\n2 1 1\n0 1 1\n0 0 0\n1 1 1\n1 0 1\n1 0 1\n2 1 1\n0 1 1\n0 0 0\n1 1 1\n1 0 1\n1 0 1\n2 1 1\n0 1 1\n0 0 0\n1 1 1\n1 0 1\n1 0 1\n2 1 1\n0 1 1\n0 0 0\n1 1 1\n1 0 1\n1 0 1\n2 1 1\n0 1 1\n0 0 0\n1 1 1\n1 0 1\n1 0 1\n2 1 1\n0 1 1\n0 0 0\n1 1 1\n1 0 1\n1 0 1\n2 1 1\n0 1 1\n0 0 0\n1 1 1\n1 0 1\n1 0 1\n2 1 1''')\nassert solution('''5\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 3381,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\nfrom functools import lru_cache"
    },
    {
        "number": 3381,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3') == '0 0\\n40000000 0\\n0 40000000'\nassert solution('10') == '0 0\\n80000000 0\\n0 80000000'\nassert solution('100') == '0 0\\n160000000 0\\n0 160000000'\nassert solution('1000') == '0 0\\n320000000 0\\n0 320000000'\nassert solution('10000') == '0 0\\n480000000 0\\n0 480000000'\n"
    },
    {
        "number": 3381,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3''') == '''0 0\n40000000 0\n0 40000000'''\nassert solution('''4''') == '''0 0\n0 40000000\n40000000 0\n0 0'''\nassert solution('''6''') == '''0 0\n0 40000000\n40000000 0\n0 0\n0 40000000\n40000000 0\n0 40000000'''\nassert solution('''800000''') == '''0 0\n0 40000000\n40000000 0\n0 0\n40000000 0\n0 40000000\n0 0\n0 40000000\n40000000 0\n40000000 0\n0 0\n40000000 0\n0 40000000\n0 40000000\n0 40000000\n40000000 0\n0 40000000\n0 40000000\n0 40000000\n0 40000000'''\nassert solution('''900000''') == '''0 0\n0 40000000\n40000000 0\n0 0\n40000000 0\n0 40000000\n0 0\n0 40000000\n40000000 0\n40000000 0\n0 0\n40000000 0\n0 40000000\n0 40000000\n0 40000000\n40000000 0\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 0\n40000000 0\n0 40000000\n40000000 0\n0 0\n0 40000000\n0 40000000\n40000000 0\n0 0\n0 40000000\n0 40000000\n0 40000000\n40000000 0\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 0\n40000000 0\n0 40000000\n40000000 0\n0 0\n0 40000000\n0 40000000\n0 40000000\n40000000 0\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n40000000 0\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 0\n40000000 0\n0 40000000\n40000000 0\n0 0\n0 40000000\n0 40000000\n0 40000000\n40000000 0\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 0\n40000000 0\n0 40000000\n40000000 0\n0 0\n0 40000000\n0 40000000\n0 40000000\n40000000 0\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 0\n40000000 0\n0 40000000\n40000000 0\n0 0\n0 40000000\n0 40000000\n0 40000000\n40000000 0\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 0\n40000000 0\n0 40000000\n40000000 0\n0 0\n0 40000000\n0 40000000\n0 40000000\n40000000 0\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 0\n40000000 0\n0 40000000\n40000000 0\n0 0\n0 40000000\n0 40000000\n0 40000000\n40000000 0\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 0\n40000000 0\n0 40000000\n40000000 0\n0 0\n0 40000000\n0 40000000\n0 40000000\n40000000 0\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 0\n40000000 0\n0 40000000\n40000000 0\n0 0\n0 40000000\n0 40000000\n0 40000000\n40000000 0\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 0\n40000000 0\n0 40000000\n40000000 0\n0 0\n0 40000000\n0 40000000\n0 40000000\n40000000 0\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 0\n40000000 0\n0 40000000\n40000000 0\n0 0\n0 40000000\n0 40000000\n0 40000000\n40000000 0\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 0\n40000000 0\n0 40000000\n40000000 0\n0 0\n0 40000000\n0 40000000\n0 40000000\n40000000 0\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 0\n40000000 0\n0 40000000\n40000000 0\n0 0\n0 40000000\n0 40000000\n0 40000000\n40000000 0\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 0\n40000000 0\n0 40000000\n40000000 0\n0 0\n0 40000000\n0 40000000\n0 40000000\n40000000 0\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 0\n40000000 0\n0 40000000\n40000000 0\n0 0\n0 40000000\n0 40000000\n0 40000000\n40000000 0\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 0\n40000000 0\n0 40000000\n40000000 0\n0 0\n0 40000000\n0 40000000\n0 40000000\n40000000 0\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 0\n40000000 0\n0 40000000\n40000000 0\n0 0\n0 40000000\n0 40000000\n0 40000000\n40000000 0\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 0\n40000000 0\n0 40000000\n40000000 0\n0 0\n0 40000000\n0 40000000\n0 40000000\n40000000 0\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 40000000\n0 0\n40000000 0\n0 40000000\n40000000 0\n0 0\n0 40000000"
    },
    {
        "number": 3381,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"1 2 3 4\") == \"\"\n"
    },
    {
        "number": 3381,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''0''') == '0 0'\nassert solution('''1''') == '0 0'\nassert solution('''2''') == '0 0'\nassert solution('''3''') == '0 0'\nassert solution('''4''') == '0 0'\n"
    },
    {
        "number": 3382,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\n\n\"\"\"\n"
    },
    {
        "number": 3382,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 5 5 2') == '1'\nassert solution('1 1 1 1') == 'impossible'\nassert solution('1 2 3 4') == '2'\nassert solution('1 2 3 4') == 'impossible'\nassert solution('1 2 3 4') == 'impossible'\n"
    },
    {
        "number": 3382,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 4\") == \"0\"\nassert solution(\"1 2 3 4 5\") == \"1\"\nassert solution(\"2 3 4 5 6 7\") == \"2\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"2\"\nassert solution(\"3 4 5 6 7 8 9 10\") == \"3\"\n"
    },
    {
        "number": 3382,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 5 5 2') == '1'\nassert solution('3 5 5 2') == '1'\nassert solution('3 5 5 2') == '1'\nassert solution('3 5 5 2') == '1'\nassert solution('3 5 5 2') == '1'\n"
    },
    {
        "number": 3382,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3382,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 5 5 2') == '1'\nassert solution('3 3 3 2') == '2'\nassert solution('3 3 3 2') == '2'\nassert solution('3 1 1 2') == '2'\nassert solution('3 3 1 2') == '2'\n"
    },
    {
        "number": 3382,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 5 5 2') == '1'\nassert solution('3 2 1 2') == '2'\nassert solution('3 4 3 2') == '2'\nassert solution('3 4 1 1') == '3'\nassert solution('3 2 3 1') == '3'\n"
    },
    {
        "number": 3382,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 5 5 2') == '1'\nassert solution('5 5 5 2') == '1'\nassert solution('9 9 9 9') == '1'\nassert solution('2 2 2 2') == '2'\nassert solution('4 4 4 4') == '2'\n"
    },
    {
        "number": 3382,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 5 5 2') == '1'\nassert solution('3 5 5 2') == '1'\nassert solution('3 5 5 2') == '1'\nassert solution('3 5 5 2') == '1'\nassert solution('3 5 5 2') == '1'\n"
    },
    {
        "number": 3382,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3383,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3383,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\\\n20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0''') == '2'\nassert solution('''\\\n20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0''') == '0'\nassert solution('''\\\n4 4 1 1\n5 2 3 1\n1 2 3 3\n2 3 4 2\n3 4 5 1\n0 0 0\n0 -10 0\n-1 0 0\n0 0 0''') == '0.9'\nassert solution('''\\\n1 1 1 1\n1 2 2 2\n1 3 3 3\n1 4 4 4\n1 5 5 5\n0 0 0\n0 -10 0\n0 0 0''') == '1.0'\nassert solution('''\\\n1 1 1 1\n1 2 2 2\n1 3 3 3\n1 4 4 4\n1 5 5 5\n0 0 0\n0 -10 0\n-1 0 0\n0 0 0''') == '0.9'\n"
    },
    {
        "number": 3383,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"20 3 5 5\") == \"0\"\nassert solution(\"20 3 5 5\") == \"2\"\nassert solution(\"20 3 5 5\") == \"2\"\nassert solution(\"20 3 5 5\") == \"2\"\nassert solution(\"20 3 5 5\") == \"2\"\n"
    },
    {
        "number": 3383,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2'\n\n-----Note-----\nTest cases contain large numbers, and therefore may take a long time to run.\n\n-----Binary Search-----\nWe start with $low = 1$ and $high = 200$. We compute the cost of a scoop of ice cream for each number of scoops we need to buy. If the cost is less than the total cost of a scoop of ice cream with $n$ scoops, we reduce $high$ to $n$. If the cost is greater than the total cost of a scoop of ice cream with $n$ scoops, we reduce $low$ to $n$. We stop when $low = high - 1$ (as $low = high$ is not feasible).\n\nThe maximum number of scoops we can buy is given by $low + 1$, while the minimum number of scoops is given by $high - 1$.\n\n\"\"\"\n"
    },
    {
        "number": 3383,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '0.2'\n\"\"\"\n\nfrom sys import stdin, stdout\n\nk, a, b = map(int, stdin.readline().split())\n\nt = tuple(map(int, stdin.readline().split()))\n\ncosts = [a, b]\n\nfor _ in range(k):\n    additional = tuple(map(int, stdin.readline().split()))\n    costs.extend(additional)\n\ncosts.sort(reverse=True)\n\nt_total = 0\n\nfor i in range(1, len(costs)):\n    t_total += (costs[i-1] * t[i-1]) / (costs[i] * t[i])\n\nstdout.write('%.6f' % t_total)\n"
    },
    {
        "number": 3383,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4 5\") == \"0\"\nassert solution(\"2 3 4 5\") == \"0\"\nassert solution(\"1 2 3 4 5\") == \"0\"\nassert solution(\"1 3 4 5\") == \"0\"\nassert solution(\"-3 1 4 5\") == \"-0.00037\"\n"
    },
    {
        "number": 3383,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 10 5 3') == '2'\nassert solution('3 10 5 3') == '2'\nassert solution('3 10 5 3') == '2'\nassert solution('3 10 5 3') == '2'\nassert solution('3 10 5 3') == '2'\n"
    },
    {
        "number": 3383,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 3383,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0''') == '2'\n\nassert solution('''20 3 5 5\n-1 -1 1 1\n0 0 0\n0 -10 0\n30 0 0\n0 0 0''') == '0'\n\nassert solution('''20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0''') == '2'\n\nassert solution('''20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0\n-1 -1 1 1\n0 0 0\n0 -10 0\n30 0 0\n0 0 0''') == '0'\n\nassert solution('''20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0\n-1 -1 1 1\n0 0 0\n0 -10 0\n30 0 0\n0 0 0''') == '0'"
    },
    {
        "number": 3383,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '''20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0''') == '2'\nassert solution('''10 2 3 4\n6 -2 3 8\n-2 -2 -5\n5 -5 0\n-3 -3 -3\n2 -3 -2\n2 0 0\n3 -2 -2\n-5 -3 -2\n2 3 0\n-4 -2 -1\n-1 -2 -1\n2 -2 -2''') == '0'\nassert solution('''15 3 3 3\n5 2 -1 -1\n-5 2 -1 -1\n2 2 -1 -1\n-2 1 1 -1\n-3 1 1 -1\n2 1 1 -1\n2 1 1 -1\n-1 1 1 -1\n-1 1 1 -1\n-1 1 1 -1\n-1 1 1 -1\n-1 1 1 -1''') == '0'\nassert solution('''5 3 3 3\n-2 1 1 -1\n-3 1 1 -1\n2 1 1 -1\n-2 1 1 -1\n-3 1 1 -1''') == '0'\nassert solution('''5 3 3 3\n2 1 1 -1\n2 1 1 -1\n2 1 1 -1\n-2 1 1 -1\n-2 1 1 -1\n-2 1 1 -1''') == '0'\n"
    },
    {
        "number": 3384,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('12') == '12'\nassert solution('1234') == '1234'\nassert solution('1235') == '1235'\nassert solution('123345') == '12345'\nassert solution('12334567') == '1234567'\n"
    },
    {
        "number": 3384,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('13') == '12 14'\nassert solution('14') == '13'\nassert solution('1') == '2'\nassert solution('12') == '12'\nassert solution('11') == '22'\n"
    },
    {
        "number": 3384,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"13\") == \"12 14\"\nassert solution(\"12\") == \"12\"\nassert solution(\"1234567891011121314151617181920211222232425262728293031\") == \"1234567891011121314151617181920211222232425262728293031\"\nassert solution(\"1\") == \"1\"\nassert solution(\"111\") == \"1 1\"\n"
    },
    {
        "number": 3384,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('13') == '12 14'\nassert solution('123456789') == '12 345 6789'\nassert solution('0123456789') == '01234 56789'\nassert solution('999') == '998 1'\nassert solution('12345678910') == '12 345 6789 10'\n"
    },
    {
        "number": 3384,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('13') == '12 14'\nassert solution('10213') == '102 14'\nassert solution('24') == '22 11'\nassert solution('12') == '12'\nassert solution('10214') == '102 14'\n"
    },
    {
        "number": 3384,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1') == '2'\nassert solution('12') == '21'\nassert solution('13') == '12'\nassert solution('123') == '321'\nassert solution('1234') == '4321'\n"
    },
    {
        "number": 3384,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == '12 14'\nassert solution(input()) == '12 8'\nassert solution(input()) == '12 2'\nassert solution(input()) == '12 13'\nassert solution(input()) == '12 3'\n"
    },
    {
        "number": 3384,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n123\n'''\n) == \"12 14\"\n\nassert solution(\n'''\n10\n'''\n) == \"12\"\n\nassert solution(\n'''\n13\n'''\n) == \"13\"\n\nassert solution(\n'''\n15\n'''\n) == \"12 13\"\n\nassert solution(\n'''\n17\n'''\n) == \"12 13\""
    },
    {
        "number": 3384,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(1234) == '1234'\nassert solution(2934) == '1235'\nassert solution(1232) == '1234'\nassert solution(1243) == '1234'\nassert solution(1452) == '1234'\n"
    },
    {
        "number": 3384,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('13') == '12 14'\nassert solution('123') == '12 12'\nassert solution('1234') == '12 3'\nassert solution('12345') == '123 2'\nassert solution('123456') == '123 2'\n"
    },
    {
        "number": 3385,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '3'\n\n'''\n\n'''\n"
    },
    {
        "number": 3385,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5') == 0\nassert solution('1') == 1\nassert solution('2') == 1\nassert solution('3') == 3\nassert solution('4') == 5\n"
    },
    {
        "number": 3385,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n\") == \"0\"\nassert solution(\"5\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n\") == \"0\"\nassert solution(\"4\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n\") == \"0\"\nassert solution(\"5\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n\") == \"1\"\nassert solution(\"5\\n1 0 0\\n3 0 1\\n3 0 0\\n3 0 1\\n\") == \"0\"\n"
    },
    {
        "number": 3385,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 1 1\") == \"\"\nassert solution(\"2 1 1\") == \"\"\nassert solution(\"1 2 1\") == \"\"\n"
    },
    {
        "number": 3385,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3385,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 3385,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"3 1 0\") == \"\"\nassert solution(\"5 1 0\") == \"\"\n"
    },
    {
        "number": 3385,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5''') == '0'\nassert solution('''6''') == '0'\nassert solution('''7''') == '0'\nassert solution('''20''') == '0'\nassert solution('''21''') == '0'\n"
    },
    {
        "number": 3385,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n1 0 0\n1 0 1\n3 0 1\n3 0 0\n3 0 1''') == '0'\nassert solution('''5\n1 0 0\n1 0 1\n4 0 1\n4 0 0\n4 0 1''') == '6'\nassert solution('''5\n1 0 0\n1 0 1\n5 0 1\n5 0 0\n5 0 1''') == '0'\nassert solution('''5\n1 0 0\n1 0 1\n3 0 1\n3 0 0\n3 0 1''') == '1'\nassert solution('''7\n1 0 0\n1 0 1\n3 0 1\n3 0 0\n3 0 1\n4 0 1\n4 0 0\n4 0 1''') == '1'\n'''\n\"\"\"\n"
    },
    {
        "number": 3385,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\\\n5\n1 0 0\n1 0 1\n3 0 1\n3 0 0\n3 0 1\n''') == '0'\nassert solution('''\\\n4\n1 0 0\n1 0 1\n1 0 2\n3 0 1\nSample Output:\n1\nassert solution('''\\\n4\n1 0 0\n1 0 1\n1 0 2\n1 0 3\nSample Output:\n0\nassert solution('''\\\n4\n1 0 0\n1 0 1\n1 0 2\n2 0 1\nSample Output:\n1\nassert solution('''\\\n5\n1 0 0\n1 0 1\n1 0 2\n1 0 3\n1 0 4\nSample Output:\n1\n"
    },
    {
        "number": 3386,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 3386,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n'''\n"
    },
    {
        "number": 3386,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3\\n4 5 6') == '1 1\\n1 2\\n1 3\\n2 1\\n2 3\\n2 1'\nassert solution('1 2 3 4 5 6\\n7 8 9 10 11 12\\n13 14 15 16 17 18 19\\n20 21 22 23 24 25 26\\n27 28 29 30 31 32\\n33 34 35 36 37 38\\n39 40 41 42 43 44\\n45 46 47 48 49 50') == '1 1\\n1 2\\n1 3\\n2 1\\n2 3\\n2 1\\n2 3\\n2 1\\n2 3\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3 2\\n3 1\\n3"
    },
    {
        "number": 3386,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 3''') == '''1 1\n2 2\n1 3\n2 1\n1 2\n2 3'''\nassert solution('''1 2''') == '''1 2\n2 1'''\nassert solution('''4 5''') == '''1 1\n2 2\n3 3\n4 4\n5 1'''\nassert solution('''100 200''') == '''1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 1\n9 1\n10 1\n11 1\n12 1\n13 2\n14 2\n15 3\n16 3\n17 4\n18 4\n19 5\n20 5\n21 6\n22 6\n23 7\n24 7\n25 8\n26 8\n27 9\n28 9\n29 10\n30 10\n31 11\n32 11\n33 12\n34 12\n35 13\n36 13\n37 14\n38 14\n39 15\n40 15\n41 16\n42 16\n43 17\n44 17\n45 18\n46 18\n47 19\n48 19\n49 20\n50 20\n51 21\n52 21\n53 22\n54 22\n55 23\n56 23\n57 24\n58 24\n59 25\n60 25\n61 26\n62 26\n63 27\n64 27\n65 28\n66 28\n67 29\n68 29\n69 30\n70 30\n71 31\n72 31\n73 32\n74 32\n75 33\n76 33\n77 34\n78 34\n79 35\n80 35\n81 36\n82 36\n83 37\n84 37\n85 38\n86 38\n87 39\n88 39\n89 40\n90 40\n91 41\n92 41\n93 42\n94 42\n95 43\n96 43\n97 44\n98 44\n99 45\n100 45\n101 46\n102 46\n103 47\n104 47\n105 48\n106 48\n107 49\n108 49\n109 50\n110 50\n111 51\n112 51\n113 52\n114 52\n115 53\n116 53\n117 54\n118 54\n119 55\n120 55\n121 56\n122 56\n123 57\n124 57\n125 58\n126 58\n127 59\n128 59\n129 60\n130 60\n131 61\n132 61\n133 62\n134 62\n135 63\n136 63\n137 64\n138 64\n139 65\n140 65\n141 66\n142 66\n143 67\n144 67\n145 68\n146 68\n147 69\n148 69\n149 70\n150 70\n151 71\n152 71\n153 72\n154 72\n155 73\n156 73\n157 74\n158 74\n159 75\n160 75\n161 76\n162 76\n163 77\n164 77\n165 78\n166 78\n167 79\n168 79\n169 80\n170 80\n171 81\n172 81\n173 82\n174 82\n175 83\n176 83\n177 84\n178 84\n179 85\n180 85\n181 86\n182 86\n183 87\n184 87\n185 88\n186 88\n187 89\n188 89\n189 90\n190 90\n191 91\n192 91\n193 92\n194 92\n195 93\n196 93\n197 94\n198 94\n199 95\n200 95\n201 96\n202 96\n203 97\n204 97\n205 98\n206 98\n207 99\n208 99\n209 100\n210 100\n211 101\n212 101\n213 102\n214 102\n215 103\n216 103\n217 104\n218 104\n219 105\n220 105\n221 106\n222 106\n223 107\n224 107\n225 108\n226 108\n227 109\n228 109\n229 110\n230 110\n231 111\n232 111\n233 112\n234 112\n235 113\n236 113\n237 114\n238 114\n239 115\n240 115\n241 116\n242 116\n243 117\n244 117\n245 118\n246 118\n247 119\n248 119\n249 120\n250 120\n251 121\n252 121\n253 122\n254 122\n255 123\n256 123\n257 124\n258 124\n259 125\n260 125\n261 126\n262 126\n263 127\n264 127\n265 128\n266 128\n267 129\n268 129\n269 130\n270 130\n271 131\n272 131\n273 132\n274 132\n275 133\n276 133\n277 134\n278 134\n279 135\n280 135\n281 136\n282 136\n283 137\n284 137\n285 138\n286 138\n287 139\n288 139\n289 140\n290 140\n291 141\n292 141\n293 142\n294 142\n295 143\n296 143\n297 144\n298 144\n299 145\n300 145\n301 146\n302 146\n303 147\n304 147\n305 148\n306 148\n307 149\n308 149\n309 150\n310 150\n311 151\n312 151\n313 152\n314 152\n315 153\n316 153\n317 154\n318 154\n319 155\n320 155\n321 156\n322 156\n323 157\n324 157\n325 158\n326 158\n327 159\n328 159\n329 160\n330 160\n331 161\n332 161\n333 162\n334 162\n335 163\n336 163\n337 164\n338 164\n339 165\n340 165\n341 166\n342 166\n343 167\n344 167\n345 168\n346 168\n347 169\n348 169\n349 170\n350 170\n351 171\n352 171\n353 172\n354 172\n355 173\n356 173\n357 174\n358 174\n359 175\n360 175\n361 176\n362 176\n363 177\n364 177\n365 178\n366 178\n367 179\n368 179\n369 180\n370 180\n371 181\n372 181\n373 182\n374 182\n375 183\n376 183\n377 184\n378 184\n379 185\n380 185\n381 186\n382 186\n383 187\n384 187\n385 188\n386 188\n387 189\n388 189\n389 190\n390 190\n391 191\n392 191\n393 192\n394 192\n395 193\n396 193\n397 194\n398 194\n399 195\n400 195\n401 196\n402 196\n403 197\n404 197\n405 198\n406 198\n407 199\n408 199\n409 200\n410 200\n411 201\n412 201\n413 202\n414 202\n415 203\n416 203\n417 204\n418 204\n419 205\n420 205\n421 206\n422 206\n423 207\n424 207\n425 208\n426 208\n427 209\n428 209\n429 210\n430 210\n431 211\n432 211\n433 212\n434 213\n435 214\n436 215\n437 216\n438 216\n439 217\n440 217\n441 218\n442 218\n443 219\n444 219\n445 220\n446 220\n447 221\n448 221\n449 222\n450 222\n451 223\n452 223\n453 224\n454 224\n455 225\n456 225\n457 226\n458 226\n459 227\n460 227\n461 228\n462 228\n463 229\n464 229\n465 230\n466 230\n467 231\n468 231\n469 232\n470 232\n471 233\n472 233\n473 234\n474 234\n475 235\n476 235\n477 236\n478 236\n479 237\n480 237\n481 238\n482 238\n483 239\n484 239\n485 240\n486 240\n487 241\n488 241\n489 242\n490 242\n491 243\n492 243\n493 244\n494 244\n495 245\n496 245\n497 246\n498 246\n499 247\n500 247\n501 248\n502 248\n503 249\n504 249\n505 250\n506 250\n507 251\n508 251\n509 252\n510 252\n511 253\n512 253\n"
    },
    {
        "number": 3386,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 2\n2 3''') == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\"\nassert solution('''2 2\n1 3\n2 1''') == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\"\nassert solution('''1 3\n3 1''') == \"-1\"\nassert solution('''3 1\n2 3\n3 2\n1 2''') == \"1 1\\n1 3\\n2 2\\n1 2\\n1 3\\n2 3\"\nassert solution('''10 10\n2 7\n2 5\n3 4\n5 7\n5 6\n7 5\n4 8\n8 9\n9 10''') == \"1 1\\n1 3\\n1 2\\n2 1\\n2 3\\n2 2\\n3 1\\n3 2\\n3 3\\n4 1\\n4 3\\n4 2\\n5 1\\n5 3\\n5 2\\n6 1\\n6 3\\n6 2\\n7 1\\n7 3\\n7 2\\n8 1\\n8 3\\n8 2\\n9 1\\n9 3\\n9 2\"\n"
    },
    {
        "number": 3386,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1') == '1 1'\nassert solution('2 3') == '1 1\\n1 2\\n2 1\\n2 3'\nassert solution('2 4') == '1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n3 1\\n3 2\\n3 3'\nassert solution('5 6') == '1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n3 1\\n3 2\\n3 3\\n3 4\\n3 5\\n4 1\\n4 2\\n4 3\\n4 4\\n4 5\\n5 1\\n5 2\\n5 3\\n5 4\\n5 5'\nassert solution('5 6') == '1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n3 1\\n3 2\\n3 3\\n3 4\\n3 5\\n4 1\\n4 2\\n4 3\\n4 4\\n4 5\\n5 1\\n5 2\\n5 3\\n5 4\\n5 5'\n"
    },
    {
        "number": 3386,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == None\nassert solution('3 2') == -1\nassert solution('2 3') == -1\nassert solution('1 3') == -1\nassert solution('1 3') == -1\n"
    },
    {
        "number": 3386,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == -1\nassert solution('1') == -1\nassert solution('2 2') == -1\nassert solution('2 3') == -1\nassert solution('1 2') == -1\n"
    },
    {
        "number": 3386,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n'''\n"
    },
    {
        "number": 3386,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 3''') == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3'\n'''\n2 3\n'''\n\nassert solution('''4 3\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 1 1 1\n2 2 2\n3 3 3"
    },
    {
        "number": 3387,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\nSample Input:\n3 10\n1 1 2\n1 1 2\n1 1 2\nSample Output:\n1.0\n1.0\n1.0\nassert solution(stdin) == stdout\nSample Input:\n4 10\n0 10 1 2\n0 10 1 2\n0 10 1 2\n0 10 1 2\nSample Output:\n0.0\n0.0\n0.0\n1.0\nassert solution(stdin) == stdout\nSample Input:\n3 10\n1 1 2\n1 1 2\n1 1 2\nSample Output:\n3.33333333\n3.33333333\n3.33333333\nassert solution(stdin) == stdout\nSample Input:\n5 10\n0 10 1 2 3 4\n0 10 1 2 3 4\n0 10 1 2 3 4\n0 10 1 2 3 4\n0 10 1 2 3 4\nSample Output:\n0.0\n0.0\n0.0\n0.0\n0.0\nassert solution(stdin) == stdout\nSample Input:\n3 10\n0 10 1\n0 10 1\n0 10 1\nSample Output:\n1.0\n1.0\n1.0\n"
    },
    {
        "number": 3387,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''1 10\n0 10 1\n0 10 1\n0 10 1'''\n    ) == '3.333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333"
    },
    {
        "number": 3387,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 10') == '3.33333333'\nassert solution('10 2') == '1.5'\nassert solution('5 3 2 1') == '3.33333333'\nassert solution('1 10') == '3.33333333'\nassert solution('10 2') == '1.5'\n"
    },
    {
        "number": 3387,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''0 10 1\n0 10 1\n0 10 1\n''') == '3.33333333\\n3.33333333\\n3.33333333'\nassert solution('''1 1 1\n0 10 1\n0 10 1\n0 10 1\n''') == '3.33333333\\n3.33333333\\n3.33333333'\nassert solution('''0 10 1\n0 10 1\n0 10 1\n''') == '3.33333333\\n3.33333333\\n3.33333333'\nassert solution('''1 1 1\n0 10 1\n0 10 1\n0 10 1\n''') == '3.33333333\\n3.33333333\\n3.33333333'\nassert solution('''1 1 1\n1 1 1\n0 10 1\n0 10 1\n0 10 1\n''') == '0.5'\n"
    },
    {
        "number": 3387,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3387,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 10\n0 10 1\n0 10 1\n0 10 1''') == '3.33333333'\nassert solution('''3 10\n0 10 1\n0 10 1\n0 10 1''') == '3.33333333'\nassert solution('''3 10\n0 10 1\n0 10 1\n0 10 1\n0 10 1\n0 10 1''') == '3.33333333'\n\n'''\n"
    },
    {
        "number": 3387,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 10\\n0 10 1\\n0 10 1\\n0 10 1') == \"3.33333333\"\nassert solution('3 10\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1') == \"3.33333333\"\nassert solution('3 10\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1') == \"3.33333333\"\nassert solution('3 10\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1') == \"3.33333333\"\nassert solution('3 10\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1') == \"3.33333333\"\n"
    },
    {
        "number": 3387,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3387,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 3\\n0 10 1\\n0 10 1\\n0 10 1\\n') == '3.33333333'\nassert solution('2 3\\n0 10 1\\n0 10 1\\n0 10 1\\n') == '3.33333333'\nassert solution('3 3\\n0 10 1\\n0 10 1\\n0 10 1\\n') == '3.33333333'\nassert solution('4 4\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n') == '3.33333333'\nassert solution('4 4\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10"
    },
    {
        "number": 3387,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 10\n0 10 1\n0 10 1\n0 10 1''') == '3.33333333\\n3.33333333\\n3.33333333'\nassert solution('''3 10\n0 10 1\n0 10 1\n0 10 1''') == '3.33333333\\n3.33333333\\n3.33333333'\nassert solution('''3 10\n2 1 4\n2 1 4\n2 1 4''') == '2.929999999999999\\n2.929999999999999\\n2.929999999999999'\nassert solution('''3 10\n1 0 1\n1 0 1\n1 0 1''') == '0.90000000000000002\\n0.90000000000000002\\n0.90000000000000002'\nassert solution('''3 10\n1 0 1\n1 1 1\n1 0 1''') == '0.9\\n1.0\\n0.9'\n"
    },
    {
        "number": 3388,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(open(\"problem_13_test_1\").read()) == \"0\"\nassert solution(open(\"problem_13_test_2\").read()) == \"1\"\nassert solution(open(\"problem_13_test_3\").read()) == \"1\"\nassert solution(open(\"problem_13_test_4\").read()) == \"2\"\nassert solution(open(\"problem_13_test_5\").read()) == \"2\"\nprint(solution(open(\"problem_13_1.txt\").read()))\nprint(solution(open(\"problem_13_2.txt\").read()))\nprint(solution(open(\"problem_13_3.txt\").read()))\nprint(solution(open(\"problem_13_4.txt\").read()))\nprint(solution(open(\"problem_13_5.txt\").read()))\n\"\"\"\n\nfrom collections import Counter\n"
    },
    {
        "number": 3388,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3388,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('inputs/test_guess_the_number_1.txt') == '1'\nassert solution('inputs/test_guess_the_number_2.txt') == '2'\nassert solution('inputs/test_guess_the_number_3.txt') == '1'\nassert solution('inputs/test_guess_the_number_4.txt') == '2'\nassert solution('inputs/test_guess_the_number_5.txt') == '4'\n"
    },
    {
        "number": 3388,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2 3 2\") == \"1\"\nassert solution(\"3\\n1 2 3\") == \"0\"\nassert solution(\"3\\n0 0 0\") == \"1\"\nassert solution(\"3\\n1 1 1\") == \"0\"\nassert solution(\"2\\n0 0\") == \"0\"\n"
    },
    {
        "number": 3388,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n3 3 2') == '1'\nassert solution('3\\n3 3 2\\n2 3 2') == '0'\nassert solution('3\\n3 3 2\\n2 3 2\\n1 3 2') == '1'\nassert solution('3\\n3 3 2\\n2 3 2\\n1 3 2\\n2 3 2') == '2'\nassert solution('3\\n3 3 2\\n2 3 2\\n1 3 2\\n2 3 2\\n2 3 2') == '1'\n"
    },
    {
        "number": 3388,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"2 1\") == \"0\"\n"
    },
    {
        "number": 3388,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(SAMPLE_INPUT_1) == SAMPLE_OUTPUT_1\nassert solution(SAMPLE_INPUT_2) == SAMPLE_OUTPUT_2\nprint(\"Well done! Click on 'Check' to earn sweet rewards!\")\n\"\"\"\n"
    },
    {
        "number": 3388,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3388,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(open(\"test_1\").read()) == \"1\"\nassert solution(open(\"test_2\").read()) == \"1\"\nassert solution(open(\"test_3\").read()) == \"2\"\nprint(solution(open(\"input\").read()))"
    },
    {
        "number": 3388,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n3 3 2''') == '1'\nassert solution('''4\n5 4 3 2\n0''') == '3'\nassert solution('''5\n3 3 2 1 4\n0''') == '2'\nassert solution('''3\n4 1 3\n0''') == '0'\nassert solution('''5\n5 5 5 5 5\n0''') == '2'\n"
    },
    {
        "number": 3389,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"abacaba\") == \"2\"\nassert solution(\"aab\") == \"2\"\nassert solution(\"baabb\") == \"3\"\nassert solution(\"abab\") == \"2\"\nassert solution(\"abba\") == \"2\"\n"
    },
    {
        "number": 3389,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(solution) == \"1\"\n\"\"\"\n\n\nfrom collections import deque"
    },
    {
        "number": 3389,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abb') == '2'\nassert solution('aa') == '0'\nassert solution('aab') == '1'\nassert solution('aabc') == '2'\nassert solution('aabcbc') == '2'\n"
    },
    {
        "number": 3389,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''abba\n''') == '2'\nassert solution('''abcd\n''') == '-1'\nassert solution('''abc\n''') == '3'\nassert solution('''a\n''') == '-1'\nassert solution('''abc\n''') == '3'\n"
    },
    {
        "number": 3389,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\nabbba\") == \"3\"\nassert solution(\"1 2\\na\") == \"1\"\nassert solution(\"2 4\\naba\") == \"4\"\nassert solution(\"3 5\\nbbaa\") == \"3\"\nassert solution(\"2 3\\nbab\") == \"4\"\n"
    },
    {
        "number": 3389,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '2'\n\n'''\n"
    },
    {
        "number": 3389,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''abba\n\n''') == '2'\nassert solution('''aabb\n\n''') == '1'\nassert solution('''baa\n\n''') == '1'\nassert solution('''abbb\n\n''') == '2'\nassert solution('''abaa\n\n''') == '1'\n"
    },
    {
        "number": 3389,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''abba\n''') == '2'\nassert solution('''abba\n''') == '2'\nassert solution('''abba\n''') == '2'\nassert solution('''aaaa\n''') == '1'\nassert solution('''aaaa\n''') == '1'\n"
    },
    {
        "number": 3389,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3389,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"abba\nbbba\nabcd\nabcd\nabce\nabcd\ncdef\nbcdf\ncdef\"\"\".strip()) == \"3\"\nassert solution(\n    \"\"\"aaa\naab\naac\naad\naae\naaf\naag\naah\naai\naak\naal\naam\naan\naao\naap\naar\naas\naba\nabab\nabac\nabae\naaba\nabab\nabac\nabaf\nabag\nabah\nabai\nabak\nabal\nabam\naban\nabao\nabap\nabar\nabas\nabat\nabau\nabau\nabbb\nabbc\nabbd\nabbe\nabbf\nabbg\nabbh\nabbi\nabbj\nabbk\nabbl\nabbm\nabbn\nabbp\nabbq\nabbt\nabbu\nabca\nabcb\nabcc\nabcd\nabce\nabcf\nabdg\nabdh\nabdi\nabdj\nabdu\nabea\nabec\nabef\nabeh\nabei\nabej\nabek\nabel\nabel\nabell\nabelp\nabelq\nabelr\nabels\nabelt\nabelu\nabelv\naben\naben\naber\naberr\nabet\nabett\nabetv\nabetx\nabey\nabie\nabigail\nabil\nabil\nabile\nabili\nabiln\nabino\nabint\nabir\nabiru\nabish\nabitt\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz\nabitz"
    },
    {
        "number": 3390,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 3\n\"\"\"\n"
    },
    {
        "number": 3390,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1') == 0\nassert solution('1 2') == 1\nassert solution('1 2 3') == 2\nassert solution('1 2 3 4') == 3\nassert solution('1 2 3 4 5') == 4\n"
    },
    {
        "number": 3390,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2\\n2 3\\n2 4') == 3\nassert solution('2 3\\n1 2\\n2 3') == 3\nassert solution('2 3\\n1 2\\n2 3') == 3\nassert solution('1 3\\n2 3') == 2\nassert solution('2 3\\n1 2') == 2\n"
    },
    {
        "number": 3390,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n2 4\") == \"3\"\nassert solution(\"4 2\\n1 2\\n2 1\") == \"2\"\nassert solution(\"4 3\\n1 2\\n2 3\\n2 4\") == \"3\"\nassert solution(\"4 3\\n1 2\\n2 3\\n2 4\\n1 2\\n2 1\") == \"2\"\nassert solution(\"4 3\\n1 2\\n2 3\\n2 4\\n1 3\\n2 4\") == \"3\"\n"
    },
    {
        "number": 3390,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 3\n1 2\n2 3\n2 4\n''') == '3'\nassert solution('''3 3\n1 2\n2 3\n2 4\n''') == '2'\nassert solution('''7 9\n1 2\n2 3\n2 4\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n''') == '4'\nassert solution('''4 4\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n''') == '2'\nassert solution('''4 4\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n''') == '2'\n"
    },
    {
        "number": 3390,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1\n2\n1 2\n2 3\n2 4\n''') == '3'\nassert solution('''1\n2\n2 1\n''') == '2'\nassert solution('''1\n2\n1 2\n1 1\n''') == '2'\nassert solution('''3\n1 2\n2 1\n2 3\n2 4\n2 5\n3 4\n3 5\n4 5\n5 4\n''') == '4'\nassert solution('''3\n1 2\n2 3\n1 2\n1 3\n2 3\n2 4\n2 5\n3 4\n3 5\n4 5\n5 4\n''') == '5'\n"
    },
    {
        "number": 3390,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n2 3\\n2 4\") == \"3\"\nassert solution(\"1 5\\n1 2\\n2 3\\n3 4\\n4 5\") == \"5\"\nassert solution(\"2 4\\n1 2\\n2 3\\n3 4\\n4 5\") == \"5\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\") == \"2\"\nassert solution(\"4 4\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\") == \"2\"\n"
    },
    {
        "number": 3390,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n2 4\") == 3\nassert solution(\"4 3\\n1 2\\n2 3\\n2 3\") == 3\nassert solution(\"5 4\\n2 3\\n2 3\\n3 4\") == 4\nassert solution(\"5 4\\n2 3\\n2 3\\n3 4\\n1 4\") == 2\nassert solution(\"5 4\\n2 3\\n2 3\\n3 4\\n3 4\") == 2\n"
    },
    {
        "number": 3390,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 3\n1 2\n2 3\n2 4\n''') == '3'\nassert solution('''4 3\n1 2\n2 3\n2 4\n1 1\n''') == '4'\nassert solution('''4 3\n1 2\n1 3\n2 4\n1 3\n2 4\n''') == '5'\n'''\n"
    },
    {
        "number": 3390,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 3\\n2 3\") == \"3\"\nassert solution(\"1 3\\n2 3\\n3 3\") == \"3\"\nassert solution(\"1 3\\n2 3\\n3 3\\n4 3\") == \"3\"\nassert solution(\"2 3\\n2 3\\n3 3\\n4 3\") == \"3\"\nassert solution(\"1 3\\n2 3\\n3 3\\n4 3\\n5 3\") == \"3\"\n"
    },
    {
        "number": 3391,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n3 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n''') == '1\\n0\\n'\nassert solution('''\n3 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n''') == '1\\n0\\n'\nassert solution('''\n3 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n''') == '1\\n0\\n'\nassert solution('''\n3 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n''') == '1\\n0\\n'\nassert solution('''\n3 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n''') == '1\\n0\\n'\n"
    },
    {
        "number": 3391,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"2 3\") == \"\"\nassert solution(\"3 1\") == \"\"\nassert solution(\"3 2\") == \"\"\n"
    },
    {
        "number": 3391,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n') == '1'\nassert solution('2\\n2\\n') == '2'\nassert solution('5 3\\n1 2\\n2 3\\n3 4\\n4 5\\n3 3\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5') == '2'\nassert solution('1\\n1\\n') == '1'\nassert solution('5\\n3\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1') == '2'\n"
    },
    {
        "number": 3391,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3391,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 2\n1 0\n0 1\n1000 1\n1 3\n2 3''') == '1\\n0\\n'\nassert solution('''3 2\n1 0\n0 1\n1000 1\n1 3\n2 3''') == '1\\n0\\n'\nassert solution('''2 2\n1 0\n0 1\n1000 1\n1 3\n2 3''') == '0\\n'\nassert solution('''2 2\n1 0\n0 1\n1000 1\n1 3\n2 3''') == '0\\n'\nassert solution('''2 2\n1 0\n1 3\n1000 1\n1 3\n2 3''') == '2\\n'\n"
    },
    {
        "number": 3391,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\n'''\n"
    },
    {
        "number": 3391,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 2\n1 0\n0 1\n1000 1\n1 3\n2 3''') == '1'\nassert solution('''3 2\n1 0\n0 1\n1000 1\n1 3\n2 3''') == '0'\nassert solution('''3 2\n2 3\n1 3\n1 2\n1 3''') == '1'\nassert solution('''3 2\n1 0\n0 1\n1000 1\n1 3\n2 3''') == '0'\nassert solution('''3 2\n1 0\n0 1\n1000 1\n1 3\n2 3''') == '1'\n"
    },
    {
        "number": 3391,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 2\n1 0\n0 1\n1000 1\n1 3\n2 3''') == '1\\n0\\n'\n\nassert solution('''3 2\n1 0\n0 1\n1000 1\n1 3\n2 3''') == '0\\n'\n\nassert solution('''3 2\n1 0\n0 1\n1000 1\n1 3\n2 3''') == '1\\n'\n\nassert solution('''3 2\n1 0\n0 1\n1000 1\n1 3\n2 3''') == '0\\n'\n\nassert solution('''3 2\n1 0\n0 1\n1000 1\n1 3\n2 3''') == '1\\n'"
    },
    {
        "number": 3391,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 2\n1 0\n0 1\n1000 1\n1 3\n2 3''') == '1\\n0\\n'\nassert solution('''3 2\n1 0\n0 1\n1000 1\n1 3\n2 3''') == '1\\n0\\n'\nassert solution('''3 2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n1 30\n1 31\n1 32\n1 33\n1 34\n1 35\n1 36\n1 37\n1 38\n1 39\n1 40\n1 41\n1 42\n1 43\n1 44\n1 45\n1 46\n1 47\n1 48\n1 49\n1 50\n1 51\n1 52\n1 53\n1 54\n1 55\n1 56\n1 57\n1 58\n1 59\n1 60\n1 61\n1 62\n1 63\n1 64\n1 65\n1 66\n1 67\n1 68\n1 69\n1 70\n1 71\n1 72\n1 73\n1 74\n1 75\n1 76\n1 77\n1 78\n1 79\n1 80\n1 81\n1 82\n1 83\n1 84\n1 85\n1 86\n1 87\n1 88\n1 89\n1 90\n1 91\n1 92\n1 93\n1 94\n1 95\n1 96\n1 97\n1 98\n1 99\n1 100\n1 101\n1 102\n1 103\n1 104\n1 105\n1 106\n1 107\n1 108\n1 109\n1 110\n1 111\n1 112\n1 113\n1 114\n1 115\n1 116\n1 117\n1 118\n1 119\n1 120\n1 121\n1 122\n1 123\n1 124\n1 125\n1 126\n1 127\n1 128\n1 129\n1 130\n1 131\n1 132\n1 133\n1 134\n1 135\n1 136\n1 137\n1 138\n1 139\n1 140\n1 141\n1 142\n1 143\n1 144\n1 145\n1 146\n1 147\n1 148\n1 149\n1 150\n1 151\n1 152\n1 153\n1 154\n1 155\n1 156\n1 157\n1 158\n1 159\n1 160\n1 161\n1 162\n1 163\n1 164\n1 165\n1 166\n1 167\n1 168\n1 169\n1 170\n1 171\n1 172\n1 173\n1 174\n1 175\n1 176\n1 177\n1 178\n1 179\n1 180\n1 181\n1 182\n1 183\n1 184\n1 185\n1 186\n1 187\n1 188\n1 189\n1 190\n1 191\n1 192\n1 193\n1 194\n1 195\n1 196\n1 197\n1 198\n1 199\n1 200\n1 201\n1 202\n1 203\n1 204\n1 205\n1 206\n1 207\n1 208\n1 209\n1 210\n1 211\n1 212\n1 213\n1 214\n1 215\n1 216\n1 217\n1 218\n1 219\n1 220\n1 221\n1 222\n1 223\n1 224\n1 225\n1 226\n1 227\n1 228\n1 229\n1 230\n1 231\n1 232\n1 233\n1 234\n1 235\n1 236\n1 237\n1 238\n1 239\n1 240\n1 241\n1 242\n1 243\n1 244\n1 245\n1 246\n1 247\n1 248\n1 249\n1 250\n1 251\n1 252\n1 253\n1 254\n1 255\n1 256\n1 257\n1 258\n1 259\n1 260\n1 261\n1 262\n1 263\n1 264\n1 265\n1 266\n1 267\n1 268\n1 269\n1 270\n1 271\n1 272\n1 273\n1 274\n1 275\n1 276\n1 277\n1 278\n1 279\n1 280\n1 281\n1 282\n1 283\n1 284\n1 285\n1 286\n1 287\n1 288\n1 289\n1 290\n1 291\n1 292\n1 293\n1 294\n1 295\n1 296\n1 297\n1 298\n1 299\n1 300\n1 301\n1 302\n1 303\n1 304\n1 305\n1 306\n1 307\n1 308\n1 309\n1 310\n1 311\n1 312\n1 313\n1 314\n1 315\n1 316\n1 317\n1 318\n1 319\n1 320\n1 321\n1 322\n1 323\n1 324\n1 325\n1 326\n1 327\n1 328\n1 329\n1 330\n1 331\n1 332\n1 333\n1 334\n1 335\n1 336\n1 337\n1 338\n1 339\n1 340\n1 341\n1 342\n1 343\n1 344\n1 345\n1 346\n1 347\n1 348\n1 349\n1 350\n1 351\n1 352\n1 353\n1 354\n1 355\n1 356\n1 357\n1 358\n1 359\n1 360\n1 361\n1 362\n1 363\n1 364\n1 365\n1 366\n1 367\n1 368\n1 369\n1 370\n1 371\n1 372\n1 373\n1 374\n1 375\n1 376\n1 377\n1 378\n1 379\n1 380\n1 381\n1 382\n1 383\n1 384\n1 385\n1 386\n1 387\n1 388\n1 389\n1 390\n1 391\n1 392\n1 393\n1 394\n1 395\n1 396\n1 397\n1 398\n1 399\n1 400\n1 401\n1 402\n1 403\n1 404\n1 405\n1 406\n1 407\n1 408\n1 409\n1 410\n1 411\n1 412\n1 413\n1 414\n1 415\n1 416\n1 417\n1 418\n1 419\n1 420\n1 421\n1 422\n1 423\n1 424\n1 425\n1 426\n1 427\n1 428\n1 429\n1 430\n1 431\n1 432\n1 433\n1 434\n1 435\n1 436\n1 437\n1 438\n1 439\n1 440\n1 441\n1 442\n1 443\n1 444\n1 445\n1 446\n1 447\n1 448\n1 449\n1 450\n1 451\n1 452\n1 453\n1 454\n1 455\n1 456\n1 457\n1 458\n1 459\n1 460\n1 461\n1 462\n1 463\n1 464\n1 465\n1 466\n1 467\n1 468"
    },
    {
        "number": 3391,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 2\n1 0\n0 1\n1000 1\n1 3\n2 3''') == '1'\nassert solution('''3 2\n1 0\n0 1\n1000 1\n1 3\n2 3''') == '0'\nassert solution('''3 3\n1 0\n0 1\n1000 1\n1 3\n2 3\n2 2''') == '0'\nassert solution('''4 3\n1 0\n0 1\n1000 1\n1 3\n2 3\n2 2\n1 2\n''') == '1'\nassert solution('''4 3\n1 0\n0 1\n1000 1\n1 3\n2 3\n2 2\n1 2\n3 4\n''') == '0'\n"
    },
    {
        "number": 3392,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"7\"\nassert solution(\"3\\n1 2 3\") == \"7\"\nassert solution(\"3\\n3 2 2\\n5 2 1\") == \"7\"\nassert solution(\"3\\n3 2 2\\n5 2 1\\n3 2 1\\n1 2 1\") == \"7\"\nassert solution(\"3\\n3 2 2\\n5 2 1\\n3 2 1\\n1 2 3\") == \"7\"\n"
    },
    {
        "number": 3392,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n3\n1 2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3\n''') == \"7\"\n'''\n\nassert solution(\n'''\n10\n1 2 3 4 5 6 7 8 9 10\n10 9 8 7 6 5 4 3 2 1\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n''') == \"29\"\n"
    },
    {
        "number": 3392,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1\\n2') == '3'\nassert solution('2\\n3') == '5'\nassert solution('3\\n2\\n1') == '7'\nassert solution('3\\n2\\n1\\n1') == '7'\n"
    },
    {
        "number": 3392,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\n\nassert solution(\"\\n1 2 3\\n3 2 2\\n5 2 1\\n3 2 1\\n1 2 1\\n1 2 3\\n\") == \"7\"\nassert solution(\"\\n1 2 3\\n3 2 2\\n5 2 1\\n3 2 1\\n1 2 1\\n1 2 3\\n\") == \"7\"\nassert solution(\"\\n1 2 3\\n3 2 2\\n5 2 1\\n3 2 1\\n1 2 1\\n1 2 3\\n\") == \"7\"\n"
    },
    {
        "number": 3392,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3\\n') == '7'\nassert solution('1\\n2\\n3\\n') == '7'\nassert solution('1\\n2\\n3\\n') == '7'\nassert solution('1\\n2\\n3\\n') == '7'\nassert solution('1\\n2\\n3\\n') == '7'\n"
    },
    {
        "number": 3392,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"7\"\nassert solution(\"2 3\\n2 2\\n5 2 1\") == \"7\"\nassert solution(\"1 2\\n2 3\\n2 2\\n5 2 1\") == \"7\"\nassert solution(\"1 2\\n2 3\\n2 2\\n5 2 1\\n1 2 1\\n1 2 3\") == \"7\"\n"
    },
    {
        "number": 3392,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1\n2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3''') == '7'\nassert solution('''1\n2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3''') == '7'\nassert solution('''1\n2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3''') == '7'\nassert solution('''1\n2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3''') == '7'\nassert solution('''1\n2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3''') == '7'\n"
    },
    {
        "number": 3392,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3''') == \"7\"\n'''\n\n\nfrom typing import List\nfrom collections import defaultdict\n"
    },
    {
        "number": 3392,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"1\n2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3\n\"\"\") == \"7\"\nassert solution(\"\"\"\n3\n1 2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3\n\"\"\") == \"7\"\nassert solution(\"\"\"\n3\n1 2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3\n\"\"\") == \"7\"\nassert solution(\"\"\"\n3\n2 1 2\n2 2 1\n2 1 2\n2 1 2\n\"\"\") == \"4\"\n\"\"\"\n    tree_matrix = [list(map(int, stdin.rstrip().split())) for _ in range(int(stdin.readline().rstrip()))]\n    mirko = [i for i, row in enumerate(tree_matrix) for j, _ in enumerate(row) if row[j] == 1]\n    if not mirko:\n        return \"0\"\n    height = [0 for i in range(len(tree_matrix))]\n    for i in mirko:\n        for j in range(len(tree_matrix)):\n            height[j] = max(height[j], tree_matrix[i][j])\n    return str(len([i for i, row in enumerate(tree_matrix) for j, _ in enumerate(row) if row[j] == 1 and height[j] == i]))\n    \nprint(solution(\"\"\"3\n1 2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3\n\"\"\"), \"7\")\nprint(solution(\"\"\"\n3\n2 1 2\n2 2 1\n2 1 2\n2 1 2\n\"\"\"), \"4\")\nprint(solution(\"\"\"\n3\n1 2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3\n\"\"\"), \"7\")\n\"\"\"\n\n\"\"\""
    },
    {
        "number": 3392,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6\n7''') == '7'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n"
    },
    {
        "number": 3393,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"5 2\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100\"\"\") == \"20\"\nassert solution(\"\"\"6 6\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100\nelectricalengineering1 50\nelectricalengineering2 100\"\"\") == \"25\"\nassert solution(\"\"\"4 3\nelectricalengineering1 50\nelectricalengineering2 100\nlinearalgebra10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100\"\"\") == \"25\"\nassert solution(\"\"\"3 1\nelectricalengineering1 50\nelectricalengineering2 100\nlinearalgebra10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100\"\"\") == \"30\"\nassert solution(\"\"\"2 1\nelectricalengineering1 50\nelectricalengineering2 100\nlinearalgebra10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100\"\"\") == \"30\"\n"
    },
    {
        "number": 3393,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 2\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100''') == '20'\n'''\n"
    },
    {
        "number": 3393,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3393,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n5 2\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100\n''') == \"20\"\n\nassert solution(\n'''\n3 2\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\n''') == \"10\"\n\nassert solution(\n'''\n4 3\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\n''') == \"30\"\n\nassert solution(\n'''\n5 3\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\nlinearalgebra1 10\n''') == \"30\"\n\nassert solution(\n'''\n5 3\nlinearalgebra10\ncalculus1 10\ncalculus220\nhonorsanalysis150\nlinearalgebra1 10\n''') == \"30\""
    },
    {
        "number": 3393,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"10\"\nprint(\"Passed\")\n'''\n\n'''\nA multi-line comment.\n'''\n"
    },
    {
        "number": 3393,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '20'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3393,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"20\"\nassert solution(stdin) == \"10\"\nassert solution(stdin) == \"10\"\nassert solution(stdin) == \"10\"\nassert solution(stdin) == \"50\"\n"
    },
    {
        "number": 3393,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 2') == '20'\nassert solution('5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100') == '20'\nassert solution('1 2\\nA 10\\nB 100') == '10'\nassert solution('1 2\\nA 10\\nB 100\\nE 5\\nD 20\\nC 10\\nB 50\\nA 3\\nD 5\\nC 20\\nA 10') == '45'\n"
    },
    {
        "number": 3393,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 2\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100''') == '20'\nassert solution('''4 2\nlinearalgebra 10\ncalculus1 10\ncalculus2 10\nhonorsanalysis1 50\nhonorsanalysis2 50''') == '0'\nassert solution('''4 2\nlinearalgebra 10\ncalculus1 10\ncalculus2 10\nhonorsanalysis1 50\nhonorsanalysis2 60''') == '40'\nassert solution('''3 2\nlinearalgebra 10\ncalculus1 10\ncalculus2 10\nhonorsanalysis1 50\nhonorsanalysis2 100''') == '10'\nassert solution('''3 2\nlinearalgebra 10\ncalculus1 10\ncalculus2 10\nhonorsanalysis1 100\nhonorsanalysis2 100''') == '0'\n"
    },
    {
        "number": 3393,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 2\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100''') == '20'\nassert solution('''1\nlinearalgebra 1\ncalculus1 1\ncalculus2 1\nhonorsanalysis1 1\nhonorsanalysis2 1''') == '0'\nassert solution('''1\nlinearalgebra 1\ncalculus1 1\ncalculus2 1\nhonorsanalysis1 1\nhonorsanalysis2 1\nlinearalgebra 1\ncalculus1 1\ncalculus2 1\nhonorsanalysis1 1\nhonorsanalysis2 1\nlinearalgebra 1\ncalculus1 1\ncalculus2 1\nhonorsanalysis1 1\nhonorsanalysis2 1\nlinearalgebra 1\ncalculus1 1\ncalculus2 1\nhonorsanalysis1 1\nhonorsanalysis2 1\nlinearalgebra 1\ncalculus1 1\ncalculus2 1\nhonorsanalysis1 1\nhonorsanalysis2 1\nlinearalgebra 1\ncalculus1 1\ncalculus2 1\nhonorsanalysis1 1\nhonorsanalysis2 1''') == '0'\nassert solution('''1\nlinearalgebra 1\ncalculus1 1\ncalculus2 1\nhonorsanalysis1 1\nhonorsanalysis2 1\nlinearalgebra 1\ncalculus1 1\ncalculus2 1\nhonorsanalysis1 1\nhonorsanalysis2 1\nlinearalgebra 1\ncalculus1 1\ncalculus2 1\nhonorsanalysis1 1\nhonorsanalysis2 1\nlinearalgebra 1\ncalculus1 1\ncalculus2 1\nhonorsanalysis1 1\nhonorsanalysis2 1\nlinearalgebra 1\ncalculus1 1\ncalculus2 1\nhonorsanalysis1 1\nhonorsanalysis2 1\nlinearalgebra 1\ncalculus1 1\ncalculus2 1\nhonorsanalysis1 1\nhonorsanalysis2 1\nlinearalgebra 1\ncalculus1 1\ncalculus2 1\nhonorsanalysis1 1\nhonorsanalysis2 1''') == '0'\nassert solution('''1\nlinearalgebra 1\ncalculus1 1\ncalculus2 1\nhonorsanalysis1 1\nhonorsanalysis2 1\nlinearalgebra 1\ncalculus1 1\ncalculus2 1\nhonorsanalysis1 1\nhonorsanalysis2 1\nlinearalgebra 1\ncalculus1 1\ncalculus2 1\nhonorsanalysis1 1\nhonorsanalysis2 1\nlinearalgebra 1\ncalculus1 1\ncalculus2 1\nhonorsanalysis1 1\nhonorsanalysis2 1\nlinearalgebra 1\ncalculus1 1\ncalculus2 1\nhonorsanalysis1 1\nhonorsanalysis2 1\nlinearalgebra 1\ncalculus1 1\ncalculus2 1\nhonorsanalysis1 1\nhonorsanalysis2 1''') == '0'\n"
    },
    {
        "number": 3394,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6''') == '6'\nassert solution('''2 2\n1 1 1\n1 1 2\n1 1 3\n2 1 1\n1 1 1\n2 1 2\n2 1 3''') == '6'\nassert solution('''2 2\n1 1 1\n1 1 1\n2 1 2\n2 1 3''') == '3'\nassert solution('''2 3\n1 1 1\n1 1 2\n1 1 3\n2 1 1\n1 1 1\n2 1 2\n2 1 3''') == '5'\nassert solution('''2 3\n1 1 1\n1 1 1\n2 1 2\n2 1 3''') == '3'\n"
    },
    {
        "number": 3394,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n4\\n1 1 2\\n3 3 4\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\") == \"6\"\nassert solution(\"1\\n4\\n1 1 2\\n3 3 4\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\") == \"6\"\nassert solution(\"2\\n4\\n1 1 2\\n3 3 4\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\") == \"6\"\nassert solution(\"3\\n4\\n1 1 2\\n3 3 4\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\") == \"6\"\nassert solution(\"4\\n4\\n1 1 2\\n3 3 4\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\") == \"6\"\n"
    },
    {
        "number": 3394,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"6\"\n\n\"\"\""
    },
    {
        "number": 3394,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"4 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6\"\"\"\n) == '6'\n\nassert solution(\n\"\"\"4 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6\"\"\"\n) == '6'\n"
    },
    {
        "number": 3394,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6''') == '6'\nassert solution('''4 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6''') == '6'\nassert solution('''1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1"
    },
    {
        "number": 3394,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"6\"\n\n\"\"\""
    },
    {
        "number": 3394,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 1 2\") == \"\"\nassert solution(\"1 2 2\") == \"\"\nassert solution(\"2 3 4\") == \"\"\nassert solution(\"2 3 4 1\") == \"\"\n"
    },
    {
        "number": 3394,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6''') == '6'\n'''\nassert solution('''2 2\n1 2 2\n2 3 4\n3 4 1''') == '1'\n'''\nassert solution('''2 2\n1 2 2\n1 2 2\n3 4 4\n4 1 2\n1 2 2\n2 3 4\n3 4 1''') == '1'\n'''\nassert solution('''2 2\n1 1 1\n1 1 1\n2 2 2\n2 3 4\n3 4 1''') == '1'\n'''\nassert solution('''2 2\n1 1 1\n1 1 1\n2 1 1\n1 2 2\n1 2 2\n2 3 4\n3 4 1''') == '1'\n"
    },
    {
        "number": 3394,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n' +\n    '3 1 2\\n' +\n    '2 3 4\\n' +\n    '3 4 1\\n' +\n    '4 1 2\\n' +\n    '3\\n' +\n    '1 4 2\\n' +\n    '3 3 3\\n' +\n    '4 3 6') == '6'\n\nassert solution('2\\n' +\n    '1 1 1\\n' +\n    '2 2 2\\n' +\n    '3 3 3\\n' +\n    '4 4 4\\n' +\n    '3') == '0'\n\nassert solution('2\\n' +\n    '1 1 1\\n' +\n    '1 2 2\\n' +\n    '2 3 3\\n' +\n    '3 4 4\\n' +\n    '3') == '2'\n\nassert solution('3\\n' +\n    '1 1 1\\n' +\n    '2 2 2\\n' +\n    '3 3 3\\n' +\n    '4 4 4\\n' +\n    '3') == '0'\n\nassert solution('3\\n' +\n    '1 1 1\\n' +\n    '1 2 2\\n' +\n    '2 3 3\\n' +\n    '3 4 4\\n' +\n    '3') == '1'"
    },
    {
        "number": 3394,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n4 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6\n''') == '6'\n\nassert solution(\n'''\n4 2\n2 1 3\n3 2 4\n4 3 1\n1 3 3\n3 4 1\n''') == '2'\n\nassert solution(\n'''\n4 3\n1 3 2\n3 1 1\n1 2 4\n1 3 2\n2 1 3\n3 4 1\n4 1 2\n3\n1 3 3\n4 3 6\n''') == '2'\n\nassert solution(\n'''\n4 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6\n''') == '1'\n\nassert solution(\n'''\n2 2\n1 1 1\n1 1 1\n''') == '0'"
    },
    {
        "number": 3395,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n''') == '2'\nassert solution('''4 1 2\n2\n3\n1 2\n2 3 1\n1 1\n''') == 'impossible'\nassert solution('''4 1 2\n2\n2\n2\n1 2\n1 1\n''') == '2'\nassert solution('''1 1 1\n1\n1\n1\n1\n1\n1\n''') == 'impossible'\nassert solution('''4 1 2\n1\n1\n1\n1\n1\n1\n''') == 'impossible'\n"
    },
    {
        "number": 3395,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n2 2 2\n2\n2\n2\n2\n\"\"\") == \"impossible\"\n\nassert solution(\n\"\"\"\n5 3 2\n1 3\n3 2\n4\n1 2 3 4\n3 4\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n6 3 2\n1 3\n3 2\n4\n1 2 3 4\n5\n1 1 5\n\"\"\") == \"impossible\"\n\nassert solution(\n\"\"\"\n5 3 2\n1 3\n3 2\n4\n1 2 3 4\n5\n1 1 5\n\"\"\") == \"2\""
    },
    {
        "number": 3395,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 1 1') == '2'\nassert solution('3 1 1\\n2\\n3\\n1 2\\n2 3 1') == '2'\nassert solution('3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1') == '2'\nassert solution('3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n1 1\\n1 1') == '2'\nassert solution('3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1') == '2'\n"
    },
    {
        "number": 3395,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 3 2\") == \"impossible\"\nassert solution(\"3 1 1\") == \"2\"\nassert solution(\"3 3 2\") == \"impossible\"\nassert solution(\"3 1 2\") == \"impossible\"\nassert solution(\"3 2 3\") == \"impossible\"\n"
    },
    {
        "number": 3395,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 3 3\\n1\\n3\\n2 3 1\\n2\\n1') == 'impossible'\nassert solution('3 3 3\\n1\\n3\\n2 3 1\\n2\\n1') == '2'\nassert solution('3 3 3\\n1\\n3\\n2 3 1\\n2\\n1') == '2'\nassert solution('3 3 3\\n1\\n3\\n2 3 1\\n2\\n1') == '2'\nassert solution('3 3 3\\n1\\n3\\n2 3 1\\n2\\n1') == '2'\n"
    },
    {
        "number": 3395,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"impossible\"\n\n\"\"\"\n"
    },
    {
        "number": 3395,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n''') == '2'\nassert solution('''\n3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n''') == 'impossible'\nassert solution('''\n3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n''') == '2'\nassert solution('''\n3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n''') == 'impossible'\nassert solution('''\n3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n3\n1 2\n2 3 1\n1 1\n''') == 'impossible'\n"
    },
    {
        "number": 3395,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 1 1\n2\n3\n1 2\n2 3 1\n1 1''') == '2'\nassert solution('''3 1 1\n2\n3\n1 2\n2 3 1\n1 1''') == 'impossible'\nassert solution('''3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2\n3\n2\n2"
    },
    {
        "number": 3395,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 1 1\n2\n3\n1 2\n2 3 1\n1 1''') == '2'\nassert solution('''4 3 2\n2\n3\n1 2\n3 4 1\n1 2''') == 'impossible'\nassert solution('''2 2 2\n2\n2\n1 2\n2 1 2''') == 'impossible'\nassert solution('''5 3 1\n2\n3\n1 2\n3 4 1\n2 3 1\n1 2''') == '3'\nassert solution('''1 1 1\n1\n1\n1\n1''') == '1'\n"
    },
    {
        "number": 3395,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 5 5\") == \"2\"\nassert solution(\"4 2 2\") == \"impossible\"\nassert solution(\"2 2 2\") == \"impossible\"\nassert solution(\"1 1 1\") == \"impossible\"\nassert solution(\"2 2\") == \"impossible\"\n"
    },
    {
        "number": 3396,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n250 250\n250 750''') == '500.00'\nassert solution('''5\n250 250\n250 750\n750 750\n500 750\n750 500''') == '1000.00'\nassert solution('''6\n250 250\n250 750\n750 750\n500 750\n750 500\n750 500''') == '1000.00'\nassert solution('''7\n250 250\n250 750\n750 750\n500 750\n750 500\n750 500\n500 500''') == '1000.00'\nassert solution('''8\n250 250\n250 750\n750 750\n500 750\n750 500\n750 500\n500 500\n750 500''') == '1000.00'\n"
    },
    {
        "number": 3396,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2\\n250 250\\n250 750\\n2\") == 500.0\nassert solution(\"2\\n100 1000\\n100 1000\\n2\") == 10000.0\nassert solution(\"10\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0 1000\\n0"
    },
    {
        "number": 3396,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\\\n2\n250 250\n250 750\n\"\"\") == \"500.00\"\nassert solution(\n\"\"\"\\\n3\n0 10\n0 20\n5 10\n\"\"\") == \"10.00\"\nassert solution(\n\"\"\"\\\n5\n0 1000\n20 500\n1000 1500\n2000 1000\n4000 1000\n\"\"\") == \"2000.00\"\nassert solution(\n\"\"\"\\\n8\n0 800\n200 800\n2000 2000\n2050 2000\n2000 2000\n2050 2000\n2000 2000\n2050 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n2000 2000\n"
    },
    {
        "number": 3396,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n') == '500.00'\nassert solution('2\\n') == '1000.00'\nassert solution('3\\n') == '2000.00'\nassert solution('5\\n') == '5000.00'\nassert solution('1000\\n') == '10000.00'\n"
    },
    {
        "number": 3396,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(sample0) == '500.00'\nassert solution(sample1) == '500.00'\nassert solution(sample2) == '500.00'\nassert solution(sample3) == '1000.00'\n\nprint(solution(read_input(read_file(path))))\n"
    },
    {
        "number": 3396,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n250 250\n250 750''') == '500.00'\nassert solution('''3\n250 250\n250 750\n750 750''') == '750.00'\nassert solution('''7\n250 250\n250 750\n750 750\n1000 1000\n250 250\n250 750''') == '1000.00'\nassert solution('''9\n250 250\n250 750\n750 750\n1000 1000\n250 250\n250 750\n750 750\n1000 1000''') == '750.00'\nassert solution('''10\n250 250\n250 750\n750 750\n1000 1000\n250 250\n250 750\n750 750\n1000 1000\n250 250\n250 750''') == '1000.00'\n"
    },
    {
        "number": 3396,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n1\n250 250\n250 750\n\"\"\"\n) == \"500.00\"\n"
    },
    {
        "number": 3396,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3396,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n250 250\n250 750''') == \"500.00\"\n'''\n"
    },
    {
        "number": 3396,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2\n250 750\n250 750''') == '500.00'\nassert solution('''2\n0 250\n0 750''') == '500.00'\nassert solution('''2\n0 250\n250 750''') == '500.00'\nassert solution('''2\n250 750\n1000 1000''') == '500.00'\nassert solution('''2\n500 750\n500 750''') == '500.00'\n"
    },
    {
        "number": 3397,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == ''\n'''\n"
    },
    {
        "number": 3397,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 2\n2 3\n1 2 3''') == '0'\nassert solution('''5 10\n5 8 2 3 4 1\n7 8 5 3 4 1\n8 1 2 3 4 1\n1 3 3 2 4 1\n9 9 1 1 1 9''') == '1'\nassert solution('''2 2\n1 1\n3 1\n1 2 1\n2 1 2''') == '1'\nassert solution('''6 4\n4 3 2 1 4 1\n3 1 1 3 1 2\n2 2 1 2 1 2\n1 1 1 3 1 1\n1 1 1 2 1 1\n1 1 1 2 1 1''') == '8'\nassert solution('''2 1\n1 2\n3 4\n1 2 1\n2 1 1''') == '0'\n"
    },
    {
        "number": 3397,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n2 3\n2 100 10\n100 1 10\n''') == '0'\n'''\n\nN, M = map(int, stdin.readline().split())\n\nd = [list(map(int, stdin.readline().split())) for _ in range(N)]\n\nt = [min(map(int, stdin.readline().split())) for _ in range(N)]\n\nprint(sum(t) - max(t))"
    },
    {
        "number": 3397,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0\"\n\nassert solution(\"1\\n2\\n1\") == \"0\"\n\nassert solution(\"1\\n2\\n1\\n2\\n1\") == \"0\"\n\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"0\"\n\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\") == \"0\""
    },
    {
        "number": 3397,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 3\n2 100 10\n100 1 10''') == '0'\nassert solution('''4 2\n2 100 10\n100 1 10\n5 4\n3 3 1 5''') == '3'\nassert solution('''1 1\n0 0''') == '0'\nassert solution('''2 2\n1 0\n2 2''') == '2'\nassert solution('''2 2\n1 0\n2 2''') == '2'\n"
    },
    {
        "number": 3397,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 3\n2 100 10\n100 1 10''') == '0'\nassert solution('''10 10\nn1000\n10000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n"
    },
    {
        "number": 3397,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 3\n2 100 10\n100 1 10''') == '0'\nassert solution('''3 3\n1 5 10\n2 1 10\n3 1 10''') == '0'\nassert solution('''4 3\n1 5 10\n2 1 10\n3 1 10\n4 1 10''') == '0'\nassert solution('''2 2\n1 1\n1 2''') == '2'\nassert solution('''3 3\n1 5 10\n2 1 10\n3 1 10\n4 1 10''') == '0'\n"
    },
    {
        "number": 3397,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == 0\nassert solution(\"2 3\\n2 100 10\\n100 1 10\") == 0\nassert solution(\"5 7\\n1 2 10\\n3 4 15\\n2 1 1\\n3 3 5\\n5 4 6\\n4 3 2\\n3 2 1\") == 1\nassert solution(\"5 7\\n1 2 10\\n3 4 15\\n2 1 1\\n3 3 5\\n5 4 6\\n4 3 2\\n3 2 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == 0\nassert solution(\"1 1\\n1 1\") == 0\n"
    },
    {
        "number": 3397,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 3\n1 100 10\n100 1 10\n1 1 10''') == '0'\nassert solution('''2 2\n1 100 10\n100 1 10''') == '0'\nassert solution('''4 4\n1 10 100 10\n1 1 10 100\n1 100 1 10\n1 1 100 100''') == '0'\nassert solution('''4 2\n1 10 100 10\n1 1 10 100\n1 100 1 10\n1 1 100 100''') == '0'\nassert solution('''10 4\n1 10 100 10\n1 1 10 100\n1 100 1 10\n1 1 100 100\n1 10 1 100\n1 1 100 100\n1 100 1 10\n1 1 100 100\n1 10 1 100\n1 1 100 100''') == '0'\n"
    },
    {
        "number": 3397,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n3 4\n10 100 10\n100 1 10\n100 2 100\n\"\"\"\n) == \"0\"\nassert solution(\n\"\"\"\n3 2\n10 100 10\n100 1 10\n100 2 100\n\"\"\"\n) == \"0\"\nassert solution(\n\"\"\"\n3 2\n1 10 10\n100 1 10\n100 2 100\n\"\"\"\n) == \"0\"\n"
    },
    {
        "number": 3398,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"20\") == \"\"\nassert solution(\"0 0\") == \"\"\nassert solution(\"0 0 1\") == \"\"\nassert solution(\"0 0 1 2\") == \"\"\n"
    },
    {
        "number": 3398,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\"\n'''\n\nfrom sys import stdin\n"
    },
    {
        "number": 3398,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(open(\"test_data/sample_input_delete.txt\", \"r\").read()) == \"1\"\nassert solution(open(\"test_data/sample_input_delete_2.txt\", \"r\").read()) == \"0\"\nassert solution(open(\"test_data/sample_input_delete_3.txt\", \"r\").read()) == \"3\"\nassert solution(open(\"test_data/sample_input_delete_4.txt\", \"r\").read()) == \"6\"\n\"\"\"\n"
    },
    {
        "number": 3398,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('80 50 3 2') == '2'\n\"\"\"\n"
    },
    {
        "number": 3398,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"80 50 3 2\") == \"2\"\nassert solution(\"80 50 3 2\") == \"2\"\nassert solution(\"50 50 3 2\") == \"2\"\nassert solution(\"50 50 3 2\") == \"2\"\nassert solution(\"20 50 3 2\") == \"2\"\n"
    },
    {
        "number": 3398,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '2'\nassert solution('9 7 14') == '4'\nassert solution('7 7 14') == '3'\nassert solution('7 7 7 14') == '0'\nassert solution('4 7 14') == '1'\n"
    },
    {
        "number": 3398,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\n---\n\nFirst, get familiar with how to iterate over a list in Python\n\nn=int(stdin.readline())\npairs=stdin.readline().split()\nx,y,r,c=map(int,pairs)\n\nSecond, copy the code from your test cases to this function"
    },
    {
        "number": 3398,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4') == '4'\nassert solution('5 6 7 8') == '8'\nassert solution('1 2 3 4 5 6 7 8') == '1'\nassert solution('5 6 7 8 9 10 11 12 13') == '2'\nassert solution('1 1 1 1 1 1 1 1 1') == '1'\n"
    },
    {
        "number": 3398,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n80 50 3 2\n75 5 25 20 50 35\n50 5 25 35\n''') == '2'\nassert solution('''\n80 50 3 2\n75 5 25 20 50 35\n50 5 25 35\n''') == '2'\nassert solution('''\n80 50 3 2\n75 5 25 20 50 35\n50 5 25 35\n''') == '2'\nassert solution('''\n80 50 3 2\n75 5 25 20 50 35\n50 5 25 35\n''') == '2'\nassert solution('''\n80 50 3 2\n75 5 25 20 50 35\n50 5 25 35\n''') == '2'\n"
    },
    {
        "number": 3398,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n80 50 3 2\n75 5 25 20 50 35\n50 5 25 35\n\"\"\") == '2'\nassert solution(\n\"\"\"\n40 45 3 2\n30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30"
    },
    {
        "number": 3399,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 4\n2211\n1112\n1112\n''') == 'AAAA\\nBB...\\nCCCC\\n'\nassert solution('''3 4\n1112\n1112\n1112\n''') == 'impossible\\nimpossible\\nimpossible\\n'\nassert solution('''3 3\n1112\n1112\n1112\n''') == 'impossible\\nimpossible\\nimpossible\\n'\nassert solution('''4 4\n1112\n1112\n1112\n1112\n''') == 'AAAA\\nBBBB\\nAAAA\\nCCC\\n'\nassert solution('''7 8\n111111111111\n11111\n11111111111\n11111\n1111111111\n1111111\n1111111\n11111\n11111\n''') == 'AAAAAAAAA\\nBBBBBBBBBB\\nAAAAA\\nBBBBBBBBBB\\nBBBBBBBBBB\\nBBBBBBBBBB\\nBBBBBBBBBB\\nBBBBBBBBBB\\n'\n"
    },
    {
        "number": 3399,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3399,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == None"
    },
    {
        "number": 3399,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 4') == 'impossible'\nassert solution('5 6') == 'impossible'\nassert solution('4 6') == 'impossible'\nassert solution('4 5') == 'AAAABB'\nassert solution('6 6') == 'BBBBBC'\n"
    },
    {
        "number": 3399,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 4\\n2211\\n1112\\n1112\\n') == 'AAAA\\n...A\\n....\\n'\n\nassert solution('5 5\\n10111\\n11110\\n00000\\n00000\\n00000\\n00000') == 'ABABABABA\\nBBABABABA\\nBABABABAB\\nBBBBBBBBB\\nAAAAABBBB\\nBABABABAB\\nBBBBBBBBB\\nAAAAABABA\\nBBBBBBBBB\\n'\n\nassert solution('6 4\\n111000\\n110100\\n111000\\n111000\\n110100\\n111000\\n110100') == 'ABABABABA\\nBBABABABA\\nBABABABAB\\nBBBBBBBBB\\nAAAAABBBB\\nBABABABAB\\nBBBBBBBBB\\nAAAAABABA\\nBBBBBBBBB\\n'\n\nassert solution('6 4\\n111000\\n110100\\n111000\\n111000\\n110100\\n111000\\n110100') == 'impossible'\n"
    },
    {
        "number": 3399,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 4\n2211\n1112\n1112''') == '''AAAA\n..A\n.BB\nBBBB\n....\n....\n...C\nCCCC'''\n\nassert solution('''5 4\n2211\n1112\n1112\n1112\n1112''') == '''BB..\nBBBB\n...B\n....\n....\n...C\nCCCC'''\n\nassert solution('''10 10\n1111111111111111111111111111111111\n111010101101010101101010101010101010101\n11010101010101010101010101010101010101\n11010101010101010101010101010101010101\n11111101010101010101010101010101010101\n111010101010101010101010101010101010101\n11010101010101010101010101010101010101\n11010101010101010101010101010101010101\n11010101010101010101010101010101010101\n11010101010101010101010101010101010101\n11111101010101010101010101010101010101\n111010101010101010101010101010101010101\n11010101010101010101010101010101010101\n11010101010101010101010101010101010101\n11010101010101010101010101010101010101\n111010101010101010101010101010101010101\n11010101010101010101010101010101010101\n111010101010101010101010101010101010101\n11010101010101010101010101010101010101\n111010101010101010101010101010101010101\n11010101010101010101010101010101010101\n111010101010101010101010101010101010101\n11010101010101010101010101010101010101\n111010101010101010101010101010101010101\n11010101010101010101010101010101010101\n111010101010101010101010101010101010101\n11010101010101010101010101010101010101\n111010101010101010101010101010101010101\n11010101010101010101010101010101010101\n111010101010101010101010101010101010101\n11010101010101010101010101010101010101\n111010101010101010101010101010101010101\n11010101010101010101010101010101010101\n111010101010101010101010101010101010101\n11010101010101010101010101010101010101\n111010101010101010101010101010101010101\n11010101010101010101010101010101010101\n111010101010101010101010101010101010101\n11010101010101010101010101010101010101\n111010101010101010101010101010101010101\n11010101010101010101010101010101010101\n111010101010101010101010101010101010101\n11010101010101010101010101010101010101\n111010101010101010101010101010101010101\n11010101010101010101010101010101010101\n111010101010101010101010101010101010101\n11010101010101010101010101010101010101\n111010101010101010101010101010101010101\n11010101010101010101010101010101010101\n111010101010101010101010101010101010101\n11010101010101010101010101010101010101\n111010101010101010101010101010101010101\n11010101010101010101010101010101010101\n111010101010101010101010101010101010101\n11010101010101010101010101010101010101\n111010101010101010101010101010101010101\n11010101010101010101010101010101010101\n111010101010101010101010101010101010101\n11010101010101010101010101010101010101\n111010101010101010101010101010101010101\n11010101010101010101010101010101010101\n111010101010101010101010101010101010101\n11010101010101010101010101010101010101\n111010101010101010101010101010101010101\n11010101010101010101010101010101010101\n111010101010101010101010101010101010101\n11010101010101010101010101010101010101\n11101010101"
    },
    {
        "number": 3399,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3399,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n3 4\n2211\n1112\n1112\n'''\n) == 'AAAA\\nBBBB\\n....\\nCCCC'\n\nassert solution(\n'''\n4 5\n1120\n1212\n1212\n1212\n'''\n) == 'impossible'\n"
    },
    {
        "number": 3399,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output\n"
    },
    {
        "number": 3399,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3400,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 1 3 3') == '9'\nassert solution('3 4 1 2 3 2') == '3'\nassert solution('4 3 1 2 1') == '2'\nassert solution('1 4 1 2 1 3') == '2'\nassert solution('1 2 3 4') == '3'\n"
    },
    {
        "number": 3400,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\\n') == '9'\nassert solution('3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\\n') == '9'\nassert solution('3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\\n') == '9'\nassert solution('3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\\n') == '9'\nassert solution('3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\\n') == '9'\n"
    },
    {
        "number": 3400,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\\n\") == \"9\"\nassert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\\n\") == \"9\"\nassert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\\n\") == \"9\"\nassert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\\n\") == \"9\"\nassert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\\n\") == \"9\"\n"
    },
    {
        "number": 3400,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 1 3 3') == '9'\nassert solution('3 4 1 2 3 2') == '30'\nassert solution('4 3 1 2 1') == '31'\nassert solution('1 4 1 2 1 3') == '31'\nassert solution('6 1 4 2 1 3 3 1') == '70'\n"
    },
    {
        "number": 3400,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 1 3 3\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3\n''') == '9'\nassert solution('''3 1 3 3\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3\n''') == '9'\nassert solution('''3 1 3 3\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3\n''') == '9'\nassert solution('''4 1 1 1\n4 2 1 2 1\n4 3 1 2 1\n4 4 1 2 1 2\n''') == '8'\nassert solution('''4 1 1 1\n4 2 1 2 1\n4 3 1 2 1\n4 4 1 2 1 2\n''') == '8'\n"
    },
    {
        "number": 3400,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 1 3 3\") == \"9\"\nassert solution(\"3 4 1 2 3 2\") == \"6\"\nassert solution(\"4 3 1 2 1\") == \"3\"\nassert solution(\"1 4 1 2 1 3\") == \"3\"\nassert solution(\"2 1 2 3\") == \"6\"\n"
    },
    {
        "number": 3400,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 1 3 3\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3\n''') == '9'\n\nassert solution('''3 3 3 1\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3\n''') == '6'\n\nassert solution('''3 1 1 2 2 3 1 1\n3 2 1 2 1 3 1 1\n1 3 1 2 1 3 1 1\n1 3 1 2 1 3 1 1\n''') == '7'\n\nassert solution('''2 4 1 4 4 4 1 4 1 4 1 1\n1 1 1 2 4 4 1 4 4 1 4 1 1 1 1 1\n2 1 2 1 1 2 4 4 1 4 4 1 4 1 1 1\n1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n4 1 4 1 4 4 1 4 4 1 4 1 4 1 4 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n4 1 4 1 4 4 1 4 4 1 4 1 4 1 4 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1"
    },
    {
        "number": 3400,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3400,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\\n') == '9'\nassert solution('4 3 1 2 1\\n3 4 1 2 1 2\\n1 4 1 2 1 1\\n4 3 1 2 1 2 1\\n') == '5'\nassert solution('2 2 2 2\\n2 2 2 1\\n1 2 1 2\\n2 2 1 2 2\\n') == '4'\nassert solution('1 2 1 2\\n1 1 1 1\\n2 1 2 2 1\\n') == '3'\nassert solution('3 2 1 1\\n3 2 1 2\\n3 2 1 2\\n3 2 1 2\\n') == '6'\n"
    },
    {
        "number": 3400,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"3 1 3 3\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3\n3 3 4 1 2 1\n1 1 1 1 1 1\n\"\"\") == \"9\"\nassert solution(\n\"\"\"5 1 1 1 1 1\n5 5 1 2 1 5 1\n1 5 1 2 2 2\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n\"\"\") == \"2\"\nassert solution(\n\"\"\"3 2 2 2\n3 3 2 1 2\n3 1 1 2\n1 2 2 3\n2 3 2 3\n2 3 2 3\n2 2 2 1\n1 1 1 1\n\"\"\") == \"7\"\nassert solution(\n\"\"\"4 4\n4 3 1 2 3\n4 4 1 2 3 2\n3 1 1 2 2 2\n1 2 1 2 1 1\n4 4 1 2 3 3\n3 1 1 2 1 2\n1 1 1 1 1 1\n\"\"\") == \"7\"\nassert solution(\n\"\"\"5 5\n5 4 1 2 3 4\n5 5 1 2 1 5 4\n4 3 1 2 1 3 3\n3 2 1 1 1 1 2\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3401,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == \"20.396078\"\nassert solution(\"2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2 2 3\\n0 0 0\\n2"
    },
    {
        "number": 3401,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3401,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6 2 2 8\n0 0 6\n3 4 7\n0 8 8\n6 8 8\n6 0 6\n6 4 8\n3 4\n1 5''') == '20.396078'\nassert solution('''3 2 3 4\n1 5\n1 2\n3 4\n3 2\n1 4\n2 3\n3 1\n3 4\n1 2''') == 'IMPOSSIBLE'\n'''"
    },
    {
        "number": 3401,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '20.396078'\n"
    },
    {
        "number": 3401,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(open(\"input/22.txt\").read()))\n"
    },
    {
        "number": 3401,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"20.396078\"\n\nstdin = \"\"\"3 3 2 8\n0 0 6\n3 4 7\n0 8 8\n6 8 8\n6 0 6\n6 4 8\n3 4\n1 5\n1 0\n1 2\n1 2\n1 5\n1 5\n1 2\n1 5\n1 2\n1 0\n1 0\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 5\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5\n1 2\n1 5"
    },
    {
        "number": 3401,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(open(\"test_files/Y11R5P1/A.in\").read()) == \"0.00000\"\n\"\"\""
    },
    {
        "number": 3401,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6 2 2 8''') == '20.396078'\nassert solution('''0 0 6''') == 'IMPOSSIBLE'\nassert solution('''3 4 7''') == '20.396078'\nassert solution('''0 8 8''') == 'IMPOSSIBLE'\nassert solution('''6 8 8''') == '20.396078'\n"
    },
    {
        "number": 3401,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n6 2 2 8\n0 0 6\n3 4 7\n0 8 8\n6 8 8\n6 0 6\n6 4 8\n3 4\n1 5\n\"\"\".strip()) == \"20.396078\"\nassert solution(\n\"\"\"\n2 1 1 4\n0 0 1\n1 1 1\n0 1 1\n\"\"\".strip()) == \"IMPOSSIBLE\"\nassert solution(\n\"\"\"\n2 1 1 4\n0 0 1\n1 1 1\n0 1 1\n\"\"\".strip()) == \"4.24683349609375\"\nassert solution(\n\"\"\"\n2 1 1 4\n0 0 1\n1 1 1\n0 1 1\n\"\"\".strip()) == \"9.845753838757316\"\nassert solution(\n\"\"\"\n8 5 4 10\n0 1 1\n0 2 2\n0 3 3\n0 4 4\n0 5 5\n0 6 6\n0 7 7\n0 8 8\n\"\"\".strip()) == \"24.8025082640916\"\n"
    },
    {
        "number": 3401,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6 2 2 8\n0 0 6\n3 4 7\n0 8 8\n6 8 8\n6 0 6\n6 4 8\n3 4\n1 5\n''') == '20.396078'\n'''\nAll fields are integers, no need to check for exceptions.\nThe height of any hill on which a spring can be found must be less than or equal to the height of the hill on which the town can be found.\nNo two hills can be on the same mountain.\nEach town can only have one hill.\nNo two towns can be on the same mountain.\nNo two hills can be on the same mountain.\nTwo towns cannot be on the same mountain.\nNo two heights can be the same.\nWe are allowed to use an unlimited amount of water to build aqueducts, but the length of each aqueduct must be limited.\nAll rivers are connected, and so are all lakes.\nThe fields of the input are separated by a single newline character.\n'''\n"
    },
    {
        "number": 3402,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(test_input) == test_output\n\nprint(solution(input()))\n"
    },
    {
        "number": 3402,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\") == \"c\"\nassert solution(\"nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"e\"\nassert solution(\"1\") == \"e\"\nassert solution(\"2\") == \"f\"\n"
    },
    {
        "number": 3402,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n1 8\n''') == 'bccdefgjhiglm'\n\nassert solution('''abc\ncba\ncbd\n''') == 'cb'\n\nassert solution('''abc\ncba\ncbd\n''') == 'cb'\n\nassert solution('''abc\ncba\ncbd\n''') == 'cb'\n\nassert solution('''abc\ncba\ncbd\n''') == 'cb'"
    },
    {
        "number": 3402,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('abca') == 'b'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm') == 'c'\nassert solution('nn oo pp qq rr ss tt uu vv ww xx yy zz') == 'def'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('abcdefghijklmnopqrstuvwxyz0123456789') == 'abcdefghijklmnopqrstuvwxyz'\n"
    },
    {
        "number": 3402,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 3402,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n1 8\n\"\"\") == \"bccd\"\n"
    },
    {
        "number": 3402,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n1 8''') == \"bc\"\n\nassert solution('''abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n2\n1 8\n1 2\n2 1\n1 8''') == \"b\"\n\nassert solution('''abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n3\n1 8\n1 2\n1 3\n2 1\n2 4''') == \"cd\"\n\nassert solution('''abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n4\n1 8\n1 2\n1 3\n1 4\n2 1\n2 4''') == \"e\"\n\nassert solution('''abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n5\n1 8\n1 2\n1 3\n1 4\n1 5\n2 1\n2 4''') == \"d\""
    },
    {
        "number": 3402,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abca') == 'b'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm') == 'c'\nassert solution('nn oo pp qq rr ss tt uu vv ww xx yy zz') == 'e'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'defghijklmnopqrstuvwxyz'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'defghijklmnopqrstuvwxyz'\n"
    },
    {
        "number": 3402,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input_) == output_\n\nprint(solution(input_))\n\"\"\"\n\ninput_ = \"\"\"\nabca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n1 8\n\"\"\"\n\noutput_ = \"\"\"\nb\nc\n"
    },
    {
        "number": 3402,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n1 8\n''') == 'bccdefghij'\nassert solution('''abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n4\n3\n6 9\n''') == 'bc'\nassert solution('''abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n2\n6\n1 2 4 7 9 8\n''') == 'bc'\nassert solution('''abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n7\n1\n4 3 2 1 6\n''') == 'b'\nassert solution('''abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n4\n7\n1 2 3 4 5 6 7 8 9 10\n''') == 'b'\n"
    },
    {
        "number": 3403,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n5\nrobot\nhobotnica\nhobi\nhobit\nrobi\n''') == '12'\nassert solution('''\n5\nrobot\nrobi\nhobi\nhobit\nrobi\n''') == '10'\nassert solution('''\n5\nhobotnica\nrobot\nhobi\nhobit\nrobi\n''') == '16'\nassert solution('''\n5\nhobotnica\nrobot\nhobi\nhobit\nrobi\n''') == '7'\nassert solution('''\n5\nrobot\nrobi\nhobi\nhobit\nrobi\n''') == '7'\n"
    },
    {
        "number": 3403,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\nprint(\"Passed\")\n\"\"\""
    },
    {
        "number": 3403,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\nhobotnica\nrobot\nhobi\nhobit\nrobi\n4\nrobi\nhobi\nhobit\nrakija''') == \"12\\n10\\n16\\n7\\n\"\nassert solution('''3\nhobotnica\nrobot\nhobi\nhobit\nrobi\n4\nrobi\nhobi\nhobit\nrakija''') == \"12\\n10\\n16\\n7\\n\"\nassert solution('''6\nhobotnica\nrobot\nhobi\nhobit\nrobi\nrakija\n4\nrobi\nhobi\nhobit\nrobi\nrobi\n4\nrobi\nhobi\nhobit\nhobit\n4\nhobotnica\nrobot\nhobi\nhobit\nrobi\nrobi\nrobi\nhobi\nrobi\nrobi\nhobotnica\nhobotnica\nrobot\nhobi\nhobit\nrobi\nhobit\nrobi\nhobit\nhobotnica\nrobi\nrobi\nhobi\nhobit\nrobi\nhobit\nrobi\nhobotnica\nhobotnica\nrobot\nhobi\nhobit\nrobi\nrobi\nrobi\nhobi\nrobi\nhobit\nhobit\nrobi\nhobit\nrobi\nhobotnica\nhobotnica\nrobot\nhobi\nhobit\nrobi\nrobi\nrobi\nhobi\nrobi\nhobit\nhobit\nrobi\nhobit\nrobi\nhobotnica\nhobotnica\nrobot\nhobi\nhobit\nrobi\nrobi\nrobi\nhobi\nrobi\nhobit\nhobit\nrobi\nhobit\nrobi\nhobotnica\nhobotnica\nrobot\nhobi\nhobit\nrobi\nrobi\nrobi\nhobi\nrobi\nhobit\nhobit\nrobi\nhobit\nrobi\nhobotnica\nhobotnica\nrobot\nhobi\nhobit\nrobi\nrobi\nrobi\nhobi\nrobi\nhobit\nhobit\nrobi\nhobit\nrobi\nhobotnica\nhobotnica\nrobot\nhobi\nhobit\nrobi\nrobi\nrobi\nhobi\nrobi\nhobit\nhobit\nrobi\nhobit\nrobi\nhobotnica\nhobotnica\nrobot\nhobi\nhobit\nrobi\nrobi\nrobi\nhobi\nrobi\nhobit\nhobit\nrobi\nhobit\nrobi\nhobotnica\nhobotnica\nrobot\nhobi\nhobit\nrobi\nrobi\nrobi\nhobi\nrobi\nhobit\nhobit\nrobi\nhobit\nrobi\nhobotnica\nhobotnica\nrobot\nhobi\nhobit\nrobi\nrobi\nrobi\nhobi\nrobi\nhobit\nhobit\nrobi\nhobit\nrobi\nhobotnica\nhobotnica\nrobot\nhobi\nhobit\nrobi\nrobi\nrobi\nhobi\nrobi\nhobit\nhobit\nrobi\nhobit\nrobi\nhobotnica\nhobotnica\nrobot\nhobi\nhobit\nrobi\nrobi\nrobi\nhobi\nrobi\nhobit\nhobit\nrobi\nhobit\nrobi\nhobotnica\nhobotnica\nrobot\nhobi\nhobit\nrobi\nrobi\nrobi\nhobi\nrobi\nhobit\nhobit\nrobi\nhobit\nrobi\nhobotnica\nhobotnica\nrobot\nhobi\nhobit\nrobi\nrobi\nrobi\nhobi\nrobi\nhobit\nhobit\nrobi\nhobit\nrobi\nhobotnica\nhobotnica\nrobot\nhobi\nhobit\nrobi\nrobi\nrobi\nhobi\nrobi\nhobit\nhobit\nrobi\nhobit\nrobi\nhobotnica\nhobotnica\nrobot\nhobi\nhobit\nrobi\nrobi\nrobi\nhobi\nrobi\nhobit\nhobit\nrobi\nhobit\nrobi\nhobotnica\nhobotnica\nrobot\nhobi\nhobit\nrobi\nrobi\nrobi\nhobi\nrobi\nhobit\nhobit\nrobi\nhobit\nrobi\nhobotnica\nhobotnica\nrobot\nhobi\nhobit\nrobi\nrobi\nrobi\nhobi\nrobi\nhobit\nhobit\nrobi\nhobit\nrobi\nhobotnica\nhobotnica\nrobot\nhobi\nhobit\nrobi\nrobi\nrobi\nhobi\nrobi\nhobit\nhobit\nrobi\nhobit\nrobi\nhobotnica\nhobotnica\nrobot\nhobi\nhobit\nrobi\nrobi\nrobi\nhobi\nrobi\nhobit\nhobit\nrobi\nhobit\nrobi\nhobotnica\nhobotnica\nrobot\nhobi\nhobit\nrobi\nrobi\nrobi\nhobi\nrobi\nhobit\nhobit\nrobi\nhobit\nrobi\nhobotnica\nhobotnica\nrobot\nhobi\nhobit\nrobi\nrobi\nrobi\nhobi\nrobi\nhobit\nhobit\nrobi\nhobit\nrobi\nhobotnica\nhobotnica\nrobot\nhobi\nhobit\nrobi\nrobi\nrobi\nhobi\nrobi\nhobit\nhobit\nrobi\nhobit\nrobi\nhobotnica\nhobotnica\nrobot\nhobi\nhobit\nrobi\nrobi\nrobi\nhobi\nrobi\nhobit\nhobit\nrobi\nhobit\nrobi\nhob"
    },
    {
        "number": 3403,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(open(\"test_files/Y11R5P1/A.in\").read()) == \"0 6 9\"\nassert solution(open(\"test_files/Y11R5P1/B.in\").read()) == \"1 2\"\nassert solution(open(\"test_files/Y11R5P1/C.in\").read()) == \"0\"\nassert solution(open(\"test_files/Y11R5P1/D.in\").read()) == \"0\"\nassert solution(open(\"test_files/Y11R5P1/E.in\").read()) == \"1 3\"\n"
    },
    {
        "number": 3403,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 3403,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('test_input.txt') == '12\\n10\\n16\\n7'\nassert solution('test_input2.txt') == '12\\n10\\n16\\n7'\nassert solution('test_input3.txt') == '15\\n8\\n13\\n5'\nassert solution('test_input4.txt') == '12\\n10\\n16\\n7'\nassert solution('test_input5.txt') == '12\\n10\\n16\\n7'\n"
    },
    {
        "number": 3403,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 3403,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3403,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"robot\") == \"robot\"\nassert solution(\"robi\") == \"robi\"\nassert solution(\"robi\") == \"robi\"\nassert solution(\"robot\") == \"robot\"\n"
    },
    {
        "number": 3403,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\nhobotnica\nrobot\nhobi\nhobit\nrobi\n''') == '''\n12\n10\n16\n7\n'''\n\nassert solution('''\nhobotnica\nrobot\nhobi\nhobit\nrobi\n''') == '''\n12\n10\n16\n7\n'''\n\nassert solution('''\n3\nrobot\nhobotnica\nhobi\nhobit\n''') == '''\n8\n5\n8\n7\n'''\n\nassert solution('''\n3\nrobot\nhobotnica\nhobi\nhobit\n''') == '''\n8\n5\n8\n7\n'''\n\nassert solution('''\n3\nrobot\nhobotnica\nhobi\nhobit\n''') == '''\n8\n5\n8\n7\n'''"
    },
    {
        "number": 3404,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\nstdin = '''14 4\nJQ IRKEYFG EXQ'''\nprint(solution(stdin))\nassert solution(stdin) == stdin\n\nstdin = '''40 20\nCZKLAYJORXSGAIS YHITLKXUTWHFZVNMYCXIXSBAFACZIFKXJ\n'''\nprint(solution(stdin))\nassert solution(stdin) == stdin\n\nstdin = '''20 16\nFVY JGKGZLXVHXZKLJEYHEHMYZYZFZFEBFTJYZYFDWYXGOHZ\n'''\nprint(solution(stdin))\nassert solution(stdin) == stdin\n\nstdin = '''15 10\nDHKLCXSXYDHXZPQZTXZHXYHXZHPZDKFZCXHX\n'''\nprint(solution(stdin))\nassert solution(stdin) == stdin\n\nstdin = '''10 21\nJHK HZR\n'''\nprint(solution(stdin))\n"
    },
    {
        "number": 3404,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n\"\"\"\n"
    },
    {
        "number": 3404,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'THIS IS A TEST'\n"
    },
    {
        "number": 3404,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('14 4', 'JQ IRKEYFG EXQ') == 'THIS IS A TEST'\nassert solution('1000 1000', 'JQ IRKEYFG EXQ') == 'THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG'\nassert solution('10000 1001', 'JQ IRKEYFG EXQ') == 'THIN TREE CAN WEETE A DIFFERENTIAL RANGE'\nassert solution('10000 1001', 'JQ IRKEYFG EXQ') == 'THIN TREE CAN WEETE A DIFFERENTIAL RANGE'\nassert solution('100000 100001', 'JQ IRKEYFG EXQ') == 'THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG'\n"
    },
    {
        "number": 3404,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'THIS IS A TEST'\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 3404,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('JQ IRKEYFG EXQ') == 'THIS IS A TEST'\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint(solution('JQ IRKEYFG EXQ'))\n\nprint"
    },
    {
        "number": 3404,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == ''\nassert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('4') == '11'\nassert solution('5') == '22'\n"
    },
    {
        "number": 3404,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\\n\") == \"THIS IS A TEST\"\n\nprint(\"Successfully ran! Go Check Problems #117-118\")\n"
    },
    {
        "number": 3404,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3404,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('JQ IRKEYFG EXQ') == 'THIS IS A TEST'\nassert solution('JQIRKEYFGEXQ') == 'THIS IS A TEST'\nassert solution('JQIRKEYFGEXQ   ') == 'THIS IS A TEST'\nassert solution('JQIRKEYFGEXQ   TEST') == 'THIS IS A TEST'\n"
    },
    {
        "number": 3405,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2.6\") == \"135\\n270\\n135135\\n270270\"\nassert solution(\"1.5\") == \"No solution\"\nassert solution(\"4.5\") == \"No solution\"\nassert solution(\"9.5\") == \"No solution\"\nassert solution(\"0.5\") == \"No solution\"\n\"\"\"\n"
    },
    {
        "number": 3405,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2.6\") == \"135\"\nassert solution(\"2.5\") == \"\"\nassert solution(\"3.1\") == \"\"\nassert solution(\"2.75\") == \"135\"\nassert solution(\"2.76\") == \"270\"\n"
    },
    {
        "number": 3405,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2.6') == '135'\nassert solution('5.5') == '135135'\nassert solution('333.3') == '135135135135'\nassert solution
    },
    {
        "number": 3405,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(1) == []\nassert solution(2.2) == []\nassert solution(10) == []\nassert solution(1000) == ['1000']\nassert solution(2) == ['135135', '270270']\n"
    },
    {
        "number": 3405,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\nassert solution('2.6') == '135135'\nassert solution('1.5') == 'No solution'\nassert solution('1.0') == 'No solution'\nassert solution('0.7') == 'No solution'\n"
    },
    {
        "number": 3405,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2.6') == '135'\nassert solution('20.000') == '270'\nassert solution('0.25') == '270'\nassert solution('4.5') == '135135'\nassert solution('5.000000') == '270270'\n"
    },
    {
        "number": 3405,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2.6') == '135'\nassert solution('6.3') == '135135'\nassert solution('100') == 'No solution'\nassert solution('957.2') == 'No solution'\nassert solution('0.8') == 'No solution'\n"
    },
    {
        "number": 3405,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2.6') == '135'\nassert solution('3.45') == '135135'\nassert solution('2.5') == '135135135'\nassert solution('1.65') == '135135135135'\nassert solution('5.55') == '135135135135135'\n"
    },
    {
        "number": 3405,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(2.6) == \"135\"\nassert solution(5.6) == \"135135\"\nassert solution(13.6) == \"135135135\"\nassert solution(27.6) == \"135135135135\"\nassert solution(35.6) == \"135135135135135\""
    },
    {
        "number": 3405,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\u201c2.6\u201d) == \u201c135\u201d\nassert solution(\u201c1.6\u201d) == \u201c135\u201d\nassert solution(\u201c5.6\u201d) == \u201c135135\u201d\nassert solution(\u201c6.6\u201d) == \u201c135135135\u201d\nassert solution(\u201c7.6\u201d) == \u201c135135135135\u201d\n"
    },
    {
        "number": 3406,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 3406,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == \"4\"\nassert solution('''\n6\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == \"4\"\nassert solution('''\n10\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == \"4\"\nassert solution('''\n10\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == \"4\"\nassert solution('''\n2\n0 1\n2 2\n''') == \"0\"\n"
    },
    {
        "number": 3406,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3''') == '4'\nassert solution('''4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n4\n3\n2\n1''') == '0'\nassert solution('''1\n0 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n11 11\n12 12\n13 13\n14 14\n15 15\n16 16\n17 17\n18 18\n19 19\n20 20\n21 21\n22 22\n23 23\n24 24\n25 25\n26 26\n27 27\n28 28\n29 29\n30 30\n31 31\n32 32\n33 33\n34 34\n35 35\n36 36\n37 37\n38 38\n39 39\n40 40\n41 41\n42 42\n43 43\n44 44\n45 45\n46 46\n47 47\n48 48\n49 49\n50 50\n51 51\n52 52\n53 53\n54 54\n55 55\n56 56\n57 57\n58 58\n59 59\n60 60\n61 61\n62 62\n63 63\n64 64\n65 65\n66 66\n67 67\n68 68\n69 69\n70 70\n71 71\n72 72\n73 73\n74 74\n75 75\n76 76\n77 77\n78 78\n79 79\n80 80\n81 81\n82 82\n83 83\n84 84\n85 85\n86 86\n87 87\n88 88\n89 89\n90 90\n91 91\n92 92\n93 93\n94 94\n95 95\n96 96\n97 97\n98 98\n99 99\n100 100\n101 101\n102 102\n103 103\n104 104\n105 105\n106 106\n107 107\n108 108\n109 109\n110 110\n111 111\n112 112\n113 113\n114 114\n115 115\n116 116\n117 117\n118 118\n119 119\n120 120\n121 121\n122 122\n123 123\n124 124\n125 125\n126 126\n127 127\n128 128\n129 129\n130 130\n131 131\n132 132\n133 133\n134 134\n135 135\n136 136\n137 137\n138 138\n139 139\n140 140\n141 141\n142 142\n143 143\n144 144\n145 145\n146 146\n147 147\n148 148\n149 149\n150 150\n151 151\n152 152\n153 153\n154 154\n155 155\n156 156\n157 157\n158 158\n159 159\n160 160\n161 161\n162 162\n163 163\n164 164\n165 165\n166 166\n167 167\n168 168\n169 169\n170 170\n171 171\n172 172\n173 173\n174 174\n175 175\n176 176\n177 177\n178 178\n179 179\n180 180\n181 181\n182 182\n183 183\n184 184\n185 185\n186 186\n187 187\n188 188\n189 189\n190 190\n191 191\n192 192\n193 193\n194 194\n195 195\n196 196\n197 197\n198 198\n199 199\n200 200\n201 201\n202 202\n203 203\n204 204\n205 205\n206 206\n207 207\n208 208\n209 209\n210 210\n211 211\n212 212\n213 213\n214 214\n215 215\n216 216\n217 217\n218 218\n219 219\n220 220\n221 221\n222 222\n223 223\n224 224\n225 225\n226 226\n227 227\n228 228\n229 229\n230 230\n231 231\n232 232\n233 233\n234 234\n235 235\n236 236\n237 237\n238 238\n239 239\n240 240\n241 241\n242 242\n243 243\n244 244\n245 245\n246 246\n247 247\n248 248\n249 249\n250 250\n251 251\n252 252\n253 253\n254 254\n255 255\n256 256\n257 257\n258 258\n259 259\n260 260\n261 261\n262 262\n263 263\n264 264\n265 265\n266 266\n267 267\n268 268\n269 269\n270 270\n271 271\n272 272\n273 273\n274 274\n275 275\n276 276\n277 277\n278 278\n279 279\n280 280\n281 281\n282 282\n283 283\n284 284\n285 285\n286 286\n287 287\n288 288\n289 289\n290 290\n291 291\n292 292\n293 293\n294 294\n295 295\n296 296\n297 297\n298 298\n299 299\n300 300\n301 301\n302 302\n303 303\n304 304\n305 305\n306 306\n307 307\n308 308\n309 309\n310 310\n311 311\n312 312\n313 313\n314 314\n315 315\n316 316\n317 317\n318 318\n319 319\n320 320\n321 321\n322 322\n323 323\n324 324\n325 325\n326 326\n327 327\n328 328\n329 329\n330 330\n331 331\n332 332\n333 333\n334 334\n335 335\n336 336\n337 337\n338 338\n339 339\n340 340\n341 341\n342 342\n343 343\n344 344\n345 345\n346 346\n347 347\n348 348\n349 349\n350 350\n351 351\n352 352\n353 353\n354 354\n355 355\n356 356\n357 357\n358 358\n359 359\n360 360\n361 361\n362 362\n363 363\n364 364\n365 365\n366 366\n367 367\n368 368\n369 369\n370 370\n371 371\n372 372\n373 373\n374 374\n375 375\n376 376\n377 377\n378 378\n379 379\n380 380\n381 381\n382 382\n383 383\n384 384\n385 385\n386 386\n387 387\n388 388\n389 389\n390 390\n391 391\n392 392\n393 393\n394 394\n395 395\n396 396\n397 397\n398 398\n399 399\n400 400\n401 401\n402 402\n403 403\n404 404\n405 405\n406 406\n407 407\n408 408\n409 409\n410 410\n411 411\n412 412\n413 413\n414 414\n415 415\n416 416\n417 417"
    },
    {
        "number": 3406,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(open(\"input.txt\").read()))\n"
    },
    {
        "number": 3406,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3''') == '4'\nassert solution('''4\n0 1\n1 2\n2 3\n3 4\n1 5\n1 6\n2 7\n3 8\n4 5\n5 6\n6 7\n6 8\n5 9\n6 10\n7 11\n8 9\n7 11\n8 10\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n2 11\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n3 11\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n4 11\n5 6\n5 7\n5 8\n5 9\n5 10\n5 11\n6 7\n6 8\n6 9\n6 10\n6 11\n7 8\n7 9\n7 10\n7 11\n8 9\n8 10\n8 11\n9 10\n9 11\n10 11\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n2 11\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n3 11\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n4 11\n5 6\n5 7\n5 8\n5 9\n5 10\n5 11\n6 7\n6 8\n6 9\n6 10\n6 11\n7 8\n7 9\n7 10\n7 11\n8 9\n8 10\n8 11\n9 10\n9 11\n10 11\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n2 11\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n3 11\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n4 11\n5 6\n5 7\n5 8\n5 9\n5 10\n5 11\n6 7\n6 8\n6 9\n6 10\n6 11\n7 8\n7 9\n7 10\n7 11\n8 9\n8 10\n8 11\n9 10\n9 11\n10 11\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n2 11\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n3 11\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n4 11\n5 6\n5 7\n5 8\n5 9\n5 10\n5 11\n6 7\n6 8\n6 9\n6 10\n6 11\n7 8\n7 9\n7 10\n7 11\n8 9\n8 10\n8 11\n9 10\n9 11\n10 11\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n2 11\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n3 11\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n4 11\n5 6\n5 7\n5 8\n5 9\n5 10\n5 11\n6 7\n6 8\n6 9\n6 10\n6 11\n7 8\n7 9\n7 10\n7 11\n8 9\n8 10\n8 11\n9 10\n9 11\n10 11\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n2 11\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n3 11\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n4 11\n5 6\n5 7\n5 8\n5 9\n5 10\n5 11\n6 7\n6 8\n6 9\n6 10\n6 11\n7 8\n7 9\n7 10\n7 11\n8 9\n8 10\n8 11\n9 10\n9 11\n10 11\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n2 11\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n3 11\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n4 11\n5 6\n5 7\n5 8\n5 9\n5 10\n5 11\n6 7\n6 8\n6 9\n6 10\n6 11\n7 8\n7 9\n7 10\n7 11\n8 9\n8 10\n8 11\n9 10\n9 11\n10 11\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n2 11\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n3 11\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n4 11\n5 6\n5 7\n5 8"
    },
    {
        "number": 3406,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3''') == '4'\nassert solution('''3\n2\n1\n3\n2\n3\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2"
    },
    {
        "number": 3406,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin[2:6]\n\n\"\"\""
    },
    {
        "number": 3406,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3') == '4'\nassert solution('1\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3') == '4'\nassert solution('2\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3') == '0'\nassert solution('2\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3') == '0'\nassert solution('5\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3') == '0'\n"
    },
    {
        "number": 3406,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '4'\nassert solution('''\n4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '0'\nassert solution('''\n4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '1'\nassert solution('''\n4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '2'\nassert solution('''\n4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '3'\n"
    },
    {
        "number": 3406,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n\n\n\n\n\n'''\n\nimport unittest"
    },
    {
        "number": 3407,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2\n1 3\n1 4\n1 5\n''') == '''0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n'''\nassert solution('''10\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 4\n2 6\n2 8\n2 9\n3 5\n3 7\n3 9\n4 6\n4 8\n5 7\n5 9\n6 8\n7 9\n7 10\n8 9\n8 10\n9 10\n''') == '''0.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n1.0000000 1.0000000\n-1.0000000 -1.0000000\n0.0000000 0.0000000\n1.0000000 -1.0000000\n-1.0000000 1.0000000\n'''\nassert solution('''100\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n1 30\n1 31\n1 32\n1 33\n1 34\n1 35\n1 36\n1 37\n1 38\n1 39\n1 40\n1 41\n1 42\n1 43\n1 44\n1 45\n1 46\n1 47\n1 48\n1 49\n1 50\n1 51\n1 52\n1 53\n1 54\n1 55\n1 56\n1 57\n1 58\n1 59\n1 60\n1 61\n1 62\n1 63\n1 64\n1 65\n1 66\n1 67\n1 68\n1 69\n1 70\n1 71\n1 72\n1 73\n1 74\n1 75\n1 76\n1 77\n1 78\n1 79\n1 80\n1 81\n1 82\n1 83\n1 84\n1 85\n1 86\n1 87\n1 88\n1 89\n1 90\n1 91\n1 92\n1 93\n1 94\n1 95\n1 96\n1 97\n1 98\n1 99\n1 100\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n2 11\n2 12\n2 13\n2 14\n2 15\n2 16\n2 17\n2 18\n2 19\n2 20\n2 21\n2 22\n2 23\n2 24\n2 25\n2 26\n2 27\n2 28\n2 29\n2 30\n2 31\n2 32\n2 33\n2 34\n2 35\n2 36\n2 37\n2 38\n2 39\n2 40\n2 41\n2 42\n2 43\n2 44\n2 45\n2 46\n2 47\n2 48\n2 49\n2 50\n2 51\n2 52\n2 53\n2 54\n2 55\n2 56\n2 57\n2 58\n2 59\n2 60\n2 61\n2 62\n2 63\n2 64\n2 65\n2 66\n2 67\n2 68\n2 69\n2 70\n2 71\n2 72\n2 73\n2 74\n2 75\n2 76\n2 77\n2 78\n2 79\n2 80\n2 81\n2 82\n2 83\n2 84\n2 85\n2 86\n2 87\n2 88\n2 89\n2 90\n2 91\n2 92\n2 93\n2 94\n2 95\n2 96\n2 97\n2 98\n2 99\n2 100\n3 1\n3 2\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n3 11\n3 12\n3 13\n3 14\n3 15\n3 16\n3 17\n3 18\n3 19\n3 20\n3 21\n3 22\n3 23\n3 24\n3 25\n3 26\n3 27\n3 28\n3 29\n3 30\n3 31\n3 32\n3 33\n3 34\n3 35\n3 36\n3 37\n3 38\n3 39\n3 40\n3 41\n3 42\n3 43\n3 44\n3 45\n3 46\n3 47\n3 48\n3 49\n3 50\n3 51\n3 52\n3 53\n3 54\n3 55\n3 56\n3 57\n3 58\n3 59\n3 60\n3 61\n3 62\n3 63\n3 64\n3 65\n3 66\n3 67\n3 68\n3 69\n3 70\n3 71\n3 72\n3 73\n3 74\n3 75\n3 76\n3 77\n3 78\n3 79\n3 80\n3 81\n3 82\n3 83\n3 84\n3 85\n3 86\n3 87\n3 88\n3 89\n3 90\n3 91\n3 92\n3 93\n3 94\n3 95\n3 96\n3 97\n3 98\n3 99\n3 100\n4 1\n4 2\n4 3\n4 4\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n4 11\n4 12\n4 13\n4 14\n4 15\n4 16\n4 17\n4 18\n4 19\n4 20\n4 21\n4 22\n4 23\n4 24\n4 25\n4 26\n4 27\n4 28\n4 29\n4 30\n4 31\n4 32\n4 33\n4 34\n4 35\n4 36\n4 37\n4 38\n4 39\n4 40\n4 41\n4 42\n4 43\n4 44\n4 45\n4 46\n4 47\n4 48\n4 49\n4 50\n4 51\n4 52\n4 53\n4 54\n4 55\n4 56\n4 57\n4 58\n4 59\n4 60\n4 61\n4 62\n4 63\n4 64\n4 65\n4 66\n4 67\n4 68\n4 69\n4 70\n4 71\n4 72\n4 73\n4 74\n4 75\n4 76\n4 77\n4 78\n4 79\n4 80\n4 81\n4 82\n4 83\n4 84\n4 85\n4 86\n4 87\n4 88\n4 89\n4 90\n4 91\n4 92\n4 93\n4 94\n4 95\n4"
    },
    {
        "number": 3407,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n1 2\n1 3\n1 4\n1 5\n''') == '''0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n'''\n\nassert solution('''6\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n''') == '''0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n0.0000000 0.0000000\n'''\n\nassert solution('''2\n1 2\n2 1\n''') == '''0.0000000 0.0000000\n0.0000000 1.0000000\n'''\n\nassert solution('''3\n1 2\n1 3\n2 1\n2 3\n''') == '''0.0000000 0.0000000\n1.0000000 0.0000000\n0.0000000 1.0000000\n'''\n\nassert solution('''6\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n''') == '''0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n0.0000000 0.0000000\n'''"
    },
    {
        "number": 3407,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\\n\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\n\"\"\"\n\nimport sys\nfrom math import sqrt\nfrom math import ceil\n"
    },
    {
        "number": 3407,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n1 2\n1 3\n1 4\n1 5\n''') == '''0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000'''\n\nassert solution('''2\n1 2\n2 4\n''') == '''0.0000000 0.0000000\n1.0000000 0.0000000\n0.0000000 1.0000000'''\n\nassert solution('''3\n1 2\n2 3\n1 3\n''') == '''0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n0.0000000 0.0000000'''\n\nassert solution('''4\n1 2\n2 3\n2 4\n1 3\n''') == '''0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n0.0000000 0.0000000'''\n\nassert solution('''6\n1 2\n1 3\n1 4\n2 3\n3 4\n4 5\n''') == '''0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n0.0000000 0.0000000\n0.0000000 0.0000000'''"
    },
    {
        "number": 3407,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\nassert solution(\"2\\n1 2\\n1 3\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\"\nassert solution(\"3\\n1 2\\n1 3\\n2 3\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n0.0000000 1.0000000\"\nassert solution(\"3\\n1 2\\n1 3\\n2 3\\n1 3\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\n"
    },
    {
        "number": 3407,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n1 2\n1 3\n1 4\n1 5\n''') == '0.000000 0.000000\\n1.000000 0.000000\\n-1.000000 0.000000\\n0.000000 1.000000\\n0.000000 -1.000000'\nassert solution('''4\n1 2\n1 3\n1 4\n1 5\n''') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'\nassert solution('''4\n1 2\n2 3\n1 4\n1 5\n''') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'\nassert solution('''6\n1 2\n2 3\n1 4\n1 5\n2 4\n2 5\n''') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n0.0000000 0.0000000'\nassert solution('''7\n1 2\n2 3\n1 4\n1 5\n2 4\n2 5\n3 4\n1 5\n''') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n0.0000000 0.0000000\\n0.0000000 0.0000000'\n"
    },
    {
        "number": 3407,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n1 2\n1 3\n1 4\n1 5\n3 4\n3 5''') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'\nassert solution('''8\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 3\n2 4\n2 6\n2 7\n4 5\n5 6\n5 7\n6 7''') == '0.0000000 0.0000000\\n0.0000000 0.0000000\\n0.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n0.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'\nassert solution('''7\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 3\n2 6\n3 4\n3 5\n3 6\n4 5\n5 6\n6 7''') == '0.0000000 0.0000000\\n0.0000000 0.0000000\\n0.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n0.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'\nassert solution('''7\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 3\n2 6\n3 4\n3 5\n3 6\n3 7\n3 8\n4 5\n5 6\n5 7\n6 7\n7 8\n7 9\n8 9\n9 10\n10 11\n10 12\n11 12''') == '0.0000000 0.0000000\\n0.0000000 0.0000000\\n0.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n0.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'\nassert solution('''10\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n2 11\n2 12\n2 13\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n3 11\n3 12\n3 13\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n4 11\n4 12\n4 13\n5 6\n5 7\n5 8\n5 9\n5 10\n5 11\n5 12\n5 13\n6 7\n6 8\n6 9\n6 10\n6 11\n6 12\n6 13\n7 8\n7 9\n7 10\n7 11\n7 12\n7 13\n8 9\n8 10\n8 11\n8 12\n8 13\n9 10\n9 11\n9 12\n9 13\n10 11\n10 12\n10 13\n11 12\n11 13\n12 13''') == '0.0000000 0.0000000\\n0.0000000 0.0000000\\n0.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n0.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'\n"
    },
    {
        "number": 3407,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 2 2\") == \"\"\n"
    },
    {
        "number": 3407,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n1 2\n1 3\n1 4\n1 5''') == '''0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000'''\n\nassert solution('''10\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 11\n3 12\n4 13\n5 14\n6 15\n7 16\n8 17\n9 18''') == '''0.0000000 0.0000000\n0.9999997 0.0000000\n0.0000000 0.9999997\n0.0000000 -0.9999997\n0.0000000 0.00000001\n0.9999998 0.00000001\n-0.9999998 0.00000001\n0.00000001 0.9999998\n0.00000001 0.0000000\n0.9999998 0.0000000\n-0.00000001 0.0000000\n0.0000000 0.9999998\n0.0000000 -0.00000001\n0.9999998 0.00000001\n-0.00000001 0.9999998'''\n\nassert solution('''14\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n2 15\n3 16\n4 17\n5 18\n6 19\n7 20\n8 21\n9 22\n10 23\n11 24\n12 25\n13 26\n14 27\n15 28\n16 29\n17 30\n18 31\n19 32\n20 33\n21 34\n22 35\n23 36\n24 37\n25 38\n26 39\n27 40\n28 41\n29 42\n30 43\n31 44\n32 45\n33 46\n34 47\n35 48\n36 49\n37 50\n38 51\n39 52\n40 53\n41 54\n42 55\n43 56\n44 57\n45 58\n46 59\n47 60\n48 61\n49 62\n50 63\n51 64\n52 65\n53 66\n54 67\n55 68\n56 69\n57 70\n58 71\n59 72\n60 73\n61 74\n62 75\n63 76\n64 77\n65 78\n66 79\n67 80\n68 81\n69 82\n70 83\n71 84\n72 85\n73 86\n74 87\n75 88\n76 89\n77 90\n78 91\n79 92\n80 93\n81 94\n82 95\n83 96\n84 97\n85 98\n86 99\n87 100\n88 101\n89 102\n90 103\n91 104\n92 105\n93 106\n94 107\n95 108\n96 109\n97 110\n98 111\n99 112\n100 113\n101 114\n102 115\n103 116\n104 117\n105 118\n106 119\n107 120\n108 121\n109 122\n110 123\n111 124\n112 125\n113 126\n114 127\n115 128\n116 129\n117 130\n118 131\n119 132\n120 133\n121 134\n122 135\n123 136\n124 137\n125 138\n126 139\n127 140\n128 141\n129 142\n130 143\n131 144\n132 145\n133 146\n134 147\n135 148\n136 149\n137 150\n138 151\n139 152\n140 153\n141 154\n142 155\n143 156\n144 157\n145 158\n146 159\n147 160\n148 161\n149 162\n150 163\n151 164\n152 165\n153 166\n154 167\n155 168\n156 169\n157 170\n158 171\n159 172\n160 173\n161 174\n162 175\n163 176\n164 177\n165 178\n166 179\n167 180\n168 181\n169 182\n170 183\n171 184\n172 185\n173 186\n174 187\n175 188\n176 189\n177 190\n178 191\n179 192\n180 193\n181 194\n182 195\n179 196\n178 197\n177 198\n176 199\n174 200\n173 201\n172 202\n171 203\n170 204\n169 205\n166 206\n165 207\n164 208\n163 209\n162 210\n161 211\n160 212\n159 213\n158 214\n157 215\n156 216\n155 217\n154 218\n153 219\n152 220\n151 221\n150 222\n149 223\n148 224\n147 225\n146 226\n145 227\n144 228\n143 229\n142 230\n141 231\n140 232\n139 233\n138 234\n137 235\n136 236\n135 237\n134 238\n133 239\n132 240\n131 241\n130 242\n129 243\n128 244\n127 245\n126 246\n125 247\n124 248\n123 249\n122 250\n121 251\n120 252\n119 253\n118 254\n117 255\n116 256\n115 257\n114 258\n113 259\n112 260\n111 261\n110 262\n109 263\n108 264\n107 265\n106 266\n105 267\n104 268\n103 269\n102 270\n101 271\n100 272\n99 273\n98 274\n97 275\n96 276\n95 277\n94 278\n93 279\n92 280\n91 281\n90 282\n89 283\n88 284\n87 285\n86 286\n85 287\n84 288\n83 289\n82 290\n81 291\n80 292\n79 293\n78 294\n77 295\n76 296\n75 297\n74 298\n73 299\n72 300\n71 301\n70 302\n69 303\n68 304\n67 305\n66 306\n65 307\n64 308\n63 309\n62 310\n61 311\n60 312\n59 313\n58 314\n57 315\n56 316\n55 317\n54 318\n53 319\n52 320\n51 321\n50 322\n49 323\n48 324\n47 325\n46 326\n45 327\n44 328\n43 329\n42 330\n41 331\n40 332\n39 333\n38 334\n37 335\n36 336\n35 337\n34 338\n33 339\n32 340\n31 341\n30 342\n29 343\n28 344\n27 345\n26 346\n25 347\n24 348\n23 349\n22 350\n21 351\n20 352\n19 353\n18 354\n17 355\n16 356\n15 357\n14 358\n13 359\n12 360\n11 361\n10 362\n9 363\n8 364\n7 365\n6 366\n5 367\n4 368\n3 369\n2 370\n1 371\n0 372\n\"\"\")\n"
    },
    {
        "number": 3407,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\n1 2\\n1 3\\n1 4\\n1 5\\n1 2\\n1 3\\n1 4\\n1 5\\n1 2\\n1 3\\n1 4\\n1 5\\n1 2\\n1 3\\n1 4\\n1 5\\n1 2\\n1 3\\n1 4\\n1 5\\n1 2\\n1 3\\n1 4\\n1 5') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'\n'''"
    },
    {
        "number": 3408,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 2\\n*\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa"
    },
    {
        "number": 3408,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 3\naaa\nabc\naba\na*a\naaa*\n*aaa''') == '''2\n1\n1\n'''\n"
    },
    {
        "number": 3408,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\naaa\nabc\naba\na*a\naaa*\n*aaa''') == '''2\n1\n1\n'''\n"
    },
    {
        "number": 3408,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 3\naaa\nabc\naba\na*a\naaa*\n*aaa''') == '''2\n1\n1\n1'''\n\nassert solution('''7 7\na\nb\nc\nd\ne\nf\ng\nh\ni\nj\nk''') == '''0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0"
    },
    {
        "number": 3408,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 3\naaa\nabc\naba\na*a\naaa*''') == '''2\n1\n1\n'''\n"
    },
    {
        "number": 3408,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 3\naaa\nabc\naba\na*a\naaa*\n*aaa\nSample Output:\n2\n1\n1''') == '''2\n1\n1'''\n"
    },
    {
        "number": 3408,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3408,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 3\naaa\nabc\naba\na*a\naaa*\n*aaa''') == '''2\n1\n1\n'''\n\nassert solution('''3 3\naaa\nabc\naba\na*a\naaa*\n*aaa''') == '''2\n1\n1\n'''\n\nassert solution('''3 3\na\nb\na\n*''') == '''1\n2\n2\n'''\n\nassert solution('''3 3\naa\na*\nab\n*''') == '''2\n1\n2\n'''\n"
    },
    {
        "number": 3408,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''3 3\naaa\nabc\naba\na*a\naaa*\n*aaa''') == '''2\n1\n1\n'''\n"
    },
    {
        "number": 3408,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3409,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\nO O\\nO X\\nX O\\nX O\\n\") == \"1\"\nassert solution(\"6 5\\nXOOO\\nXXOX\\nXOOOO\\nXXOOO\\nXXOXX\\nXOOXO\\nXOOOOO\\nXOXOOO\\n\") == \"0\"\nassert solution(\"8 7\\nXXXXX\\nXXXXX\\nXOOXXX\\nXOXOXO\\nXOXOXX\\nXOXXOX\\nXOOXOO\\nXXXXXXO\\n\") == \"0\"\nassert solution(\"5 8\\nOXOXO\\nOXOXO\\nOXOXX\\nOXOXXX\\nXOOXOO\\nXOOXOO\\nXOOOOO\\nXOOOOX\\n\") == \"1\"\nassert solution(\"8 5\\nOXXXO\\nOXOXO\\nOXOXO\\nOXOXX\\nXOOXOO\\nXOOXOO\\nXOOOOO\\nXOOOOX\\n\") == \"0\"\n"
    },
    {
        "number": 3409,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 2\nXO\nOX\nXO\nOX''') == '1'\nassert solution('''5 5\nXOOO\nOXXX\nXOOOO\nOXXOO\nXOOOX\nXOOOO''') == '1'\nassert solution('''4 4\nXXXO\nXOOO\nXOXO\nXOXO''') == '0'\nassert solution('''8 8\nOOOOOOO\nOOOOOOO\nOOOOOOO\nOOOOOOO\nOOOOOOO\nOOOOOOO\nOOOOOOO\nOOOOOOO''') == '1'\nassert solution('''8 8\nOOOXXOO\nOOOOOOO\nOOOOOOO\nOOOOOOO\nOOOOOOO\nOOOOOOO\nOOOOOOO\nOOOOOOO''') == '0'\n"
    },
    {
        "number": 3409,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == 1\nassert solution(\"2 3\") == 1\nassert solution(\"1 1\") == 0\nassert solution(\"2 2\") == 0\nassert solution(\"3 1\") == 0\n"
    },
    {
        "number": 3409,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 2\nXO\nOX\nXO\nOX\nOX\nOO\nXO\nOO\n''') == '1'\nassert solution('''4 2\nXO\nOX\nXO\nOX\nOX\nOX\nXO\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX"
    },
    {
        "number": 3409,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\"\nassert stdin == \"\"\"4 2\nXO\nOX\nXO\nOX\nOX\nOO\nXO\nOO\n\"\"\"\n\nassert solution(stdin) == \"0\"\nassert stdin == \"\"\"4 4\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO\nOXO"
    },
    {
        "number": 3409,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"4 2\nXO\nOX\nXO\nOX\nOX\nOO\nXO\nOO\n\"\"\") == \"1\"\nassert solution(\n\"\"\"4 2\nXO\nOX\nXO\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\n"
    },
    {
        "number": 3409,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 2\n    XO\n    OX\n    XO\n    OX\n    OX\n    OO\n    XO\n    OO\n    ''') == '1'\nassert solution('''5 2\n    XXX\n    OXO\n    OXX\n    OXO\n    OXO\n    OXO\n    OXO\n    OXO\n    ''') == '1'\nassert solution('''4 1\n    XO\n    OX\n    XO\n    OX\n    OX\n    ''') == '0'\nassert solution('''4 5\n    XOXO\n    XOXO\n    OXOXO\n    XOXO\n    OXOXO\n    XOXO\n    XOXO\n    XOXO\n    ''') == '0'\nassert solution('''5 1\n    XOXO\n    XOXO\n    OXOXO\n    XOXO\n    OXOXO\n    XOXO\n    XOXO\n    XOXO\n    ''') == '0'\n"
    },
    {
        "number": 3409,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('XO\\nXO') == '1'\nassert solution('XO\\nXO') == '1'\nassert solution('XO\\nXO') == '1'\nassert solution('XO\\nXO') == '1'\nassert solution('XO\\nXO') == '1'\n"
    },
    {
        "number": 3409,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 2\nXO\nOX\nXO\nOX\nOX\nOO\nXO\nOO\n''') == \"1\"\nassert solution('''4 2\nXX\nOX\nXO\nOX\nOX\nOX\nOX\nOX\nXO\nXO\nOX\nXO\nXO\nOX\nXO\n''') == \"0\"\nassert solution('''4 2\nXO\nOX\nXO\nOX\nOX\nOX\nOX\nOX\nOX\nXO\nXO\nOX\nOX\nXO\nOX\nXO\nOX\nXO\n''') == \"1\"\nassert solution('''8 8\nXXXXXXXX\nXOXOOOOX\nOXOOOOOX\nXOXOOOXO\nOXOOOOXO\nXOXXXXXX\nXOXXXXXX\nXOOXXXOO\nXOXXXXXX\nXOOXXXOO\nXOXXXXXX\nXOXXXXXX\nXOXXXXXX\n''') == \"1\"\nassert solution('''8 8\nXOXOOOOX\nOXOOOOOX\nXOXOOOXO\nOXOOOOXO\nXOXXXXXX\nXOXXXXXX\nXOOXXXOO\nXOXXXXXX\nXOOXXXOO\nXOXXXXXX\nXOXXXXXX\nXOXXXXXX\n''') == \"0\"\n"
    },
    {
        "number": 3409,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 2\") == \"1\"\nassert solution(\"5 5\") == \"0\"\nassert solution(\"5 5\\nOOO\\nXO\\nOXO\\nOOOO\\nOXO\\nXOO\\nOXO\\nOXO\\nOXX\\nOXX\\nOXX\") == \"0\"\nassert solution(\"5 5\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\") == \"0\"\nassert solution(\"5 5\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\") == \"0\"\n"
    },
    {
        "number": 3410,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n0 0\n0 2\n-2 0\n0 -2''') == '16'\nassert solution('''5\n2 0\n0 2\n-2 0\n0 -2\n-2 -2\n-2 0''') == '66'\nassert solution('''6\n3 0\n-3 0\n-1 0\n2 0\n3 0\n1 -3\nSample Output:\n26\nassert solution('''6\n-3 0\n2 0\n3 0\n1 -3\n1 -3\n1 -3''') == '26'\nassert solution('''7\n-10 10\n0 -20\n0 0\n-5 -5\n0 -4\n0 0\n-4 -3\n0 -3\n0 -2\n0 -1\n0 0\n0 -1\n0 -2\n0 -3\n0 -4\n0 -5\n0 -6\nSample Output:\n105\n"
    },
    {
        "number": 3410,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\n0 0\n-2 0\n0 -2\n2 2''') == \"16\"\nassert solution('''3\n1 0\n2 1\n2 -2\n2 -1\n2 2\n2 -2\n-1 2\n0 2\n1 -2\n-2 1\n2 -1\n0 -1\n-1 -2\n0 -2\n0 -1\n2 0\n-2 1\n-2 -1\n2 1\n-2 -1\n1 -2\n-2 -2\n0 -2\n1 -1\n-2 -2\n0 -1\n-1 -1\n1 0\n0 1\n2 0\n1 -1\n1 1\n-1 1\n1 -1\n-1 -1\n2 1\n1 1\n1 -1\n1 -1\n-1 -1\n1 -1\n-1 1\n0 -1\n0 1\n2 0\n-1 -1\n-1 -1\n1 -1\n-1 1\n-2 -2\n-2 -1\n1 -1\n-1 -2\n0 -2\n1 -1\n-2 1\n-2 1\n-1 -2\n0 -1\n-1 1\n1 1\n1 -1\n0 1\n-1 1\n1 -1\n0 -1\n-1 -1\n2 0\n0 2\n0 -2\n-2 2\n0 -2\n-2 -2\n-2 1\n0 2\n0 1\n-2 1\n0 1\n-2 -1\n2 1\n-1 -1\n1 -1\n-1 1\n0 1\n-1 1\n1 -1\n1 1\n0 1\n1 -1\n-1 1\n-1 1\n-1 -1\n1 1\n-1 -1\n0 -1\n-1 -1\n-1 -1\n1 -1\n0 -1\n0 1\n2 0\n0 -2\n0 -2\n-2 -2\n0 -2\n-2 1\n1 -2\n-2 -2\n0 -2\n1 -2\n-2 -1\n-1 -2\n0 -2\n1 -2\n-2 -1\n0 -2\n-1 -2\n0 -2\n0 -2\n-2 0\n0 -2\n-2 1\n-2 -1\n1 -2\n-1 -2\n-2 -2\n-2 -1\n1 -2\n0 -2\n-2 -2\n0 -1\n-2 -2\n-2 -1\n0 -2\n-1 -2\n-2 -1\n1 -2\n-1 -2\n-2 -1\n1 -1\n-1 -2\n0 -2\n1 -2\n-2 1\n1 -2\n-2 -2\n0 -2\n1 -2\n-2 -2\n-1 -2\n-2 -1\n1 -2\n-1 -2\n-2 -1\n1 -2\n-1 -2\n0 -2\n-1 -2\n0 -1\n-1 -2\n0 -2\n1 -2\n-2 1\n1 -2\n-1 -2\n-2 -1\n1 -2\n0 -2\n1 -2\n-2 -2\n-2 -1\n1 -2\n-1 -2\n0 -2\n1 -2\n-2 1\n0 -2\n1 -2\n-1 -2\n1 -1\n0 -2\n-1 -2\n-2 -1\n1 -2\n-1 -2\n1 -2\n-1 -2\n1 -1\n0 -1\n-1 -1\n0 -1\n1 -1\n-1 -1\n1 -1\n-1 1\n1 -1\n1 -1\n-1 1\n1 -1\n0 -1\n-1 1\n1 -1\n-1 -1\n1 -1\n-1 1\n1 1\n1 -1\n1 -1\n-1 1\n1 1\n-1 -1\n1 -1\n0 -1\n1 -1\n-1 -1\n1 -1\n-1 1\n2 0\n1 2\n1 -2\n1 -2\n0 2\n0 -2\n0 -2\n0 2\n-1 2\n-1 -2\n-1 2\n0 2\n-1 -2\n-1 2\n0 2\n-1 -2\n0 -2\n0 -2\n0 2\n-1 2\n0 2\n-1 -2\n0 2\n0 2\n-1 2\n0 2\n-1 -2\n0 2\n-1 2\n-1 -2\n0 2\n1 2\n-1 -2\n1 2\n0 2\n1 -2\n1 2\n0 2\n-1 2\n1 2\n0 2\n1 -2\n0 2\n-1 2\n0 2\n0 2\n-1 2\n1 2\n0 2\n-1 -2\n-1 2\n1 2\n0 2\n1 2\n0 2\n0 2\n0 2\n-1 2\n1 2\n0 2\n0 2\n-1 2\n0 2\n-1 2\n0 2\n0 2\n0 2\n-1 2\n-1 2\n1 2\n0 2\n-1 2\n-1 2\n1 2\n0 2\n0 2\n0 2\n-1 2\n0 2\n0 2\n0 2\n0 2\n0 2\n-1 2\n-1 2\n1 2\n0 2\n-1 2\n1 2\n1 2\n0 2\n-1 2\n0 2\n0 2\n-1 2\n-1 2\n-1 2\n-1 2\n1 2\n0 2\n1 2\n0 2\n-1 2\n0 2\n-1 2\n-1 2\n1 2\n0 2\n-1 2\n-1 2\n-1 2\n0 2\n-1 2\n-1 2\n-1 2\n1 2\n0 2\n-1 2\n1 2\n0 2\n0 2\n1 2\n0 2\n-1 2\n-1 2\n1 2\n0 2\n"
    },
    {
        "number": 3410,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n0 0\n0 2\n-2 0\n0 -2''') == \"16\"\nassert solution('''1\n0 0\n''') == \"0\"\nassert solution('''1\n1 0\n''') == \"1\"\nassert solution('''10\n-5 -4\n-5 -3\n-5 -2\n-5 -1\n-5 0\n-5 1\n-5 2\n-5 3\n-5 4\n-5 5\n0 0\n5 5\n5 4\n5 3\n5 2\n5 1\n5 0\n-5 -5\n-5 -4\n-5 -3\n-5 -2\n-5 -1\n-5 0\n-5 1\n-5 2\n-5 3\n-5 4\n-5 5\n''') == \"960006\"\n'''\n'''\n"
    },
    {
        "number": 3410,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\n0 0\n0 2\n-2 0\n0 -2''') == '16'\nassert solution('''4\n2 0\n0 2\n-2 0\n0 -2''') == '8'\nassert solution('''8\n2 0\n0 2\n-2 0\n0 -2\n-2 0\n-2 0\n0 -2\n-2 0''') == '64'\nassert solution('''8\n2 0\n0 2\n-2 0\n0 -2\n-2 0\n-2 0\n0 -2\n-2 0''') == '64'\nassert solution('''8\n2 0\n0 2\n2 0\n-2 0\n2 0\n2 0\n-2 0\n2 0''') == '64'\n"
    },
    {
        "number": 3410,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n0 0\n-2 0\n0 -2''') == \"16\"\nassert solution('''4\n0 0\n0 2\n2 0\n-2 0''') == \"16\"\nassert solution('''4\n0 -1\n-1 1\n1 -1\n1 1''') == \"16\"\nassert solution('''4\n-1 0\n1 0\n0 -1\n-1 -1''') == \"16\"\nassert solution('''5\n-10 -10\n-8 -5\n-7 -3\n-6 -2\n-5 -1\n-4 0\n-3 2\n-2 4\n-1 6''') == \"59\"\n"
    },
    {
        "number": 3410,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n0 0\n0 2\n-2 0\n0 -2''') == '16'\nassert solution('''5\n2 0\n0 2\n-2 0\n0 -2\n-1 1\n-2 1\n-1 -1''') == '3'\nassert solution('''200\n-100\n100\n-100\n-100\n-100\n-100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n-100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100\n-100\n-100\n100"
    },
    {
        "number": 3410,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 0\n0 2\n-2 0\n0 -2''') == '16'\nassert solution('''4\n2 0\n0 2\n-2 0\n0 -2''') == '30'\nassert solution('''6\n2 0\n0 2\n-2 0\n0 -2\n-2 0\n0 2\n''') == '46'\nassert solution('''8\n-2 0\n0 2\n-2 0\n0 -2\n-2 0\n2 0\n0 -2\n0 2\n''') == '58'\nassert solution('''14\n2 0\n0 2\n-2 0\n0 -2\n-2 0\n0 2\n0 -2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2\n0 2"
    },
    {
        "number": 3410,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n0 0\n-2 0\n0 -2''') == '16'\nassert solution('''1\n0 0\n0 -2''') == '0'\nassert solution('''1\n1 0\n1 -2''') == '0'\nassert solution('''1\n-1 -1\n-1 -2''') == '0'\nassert solution('''1\n1 0\n-1 -2''') == '0'\n"
    },
    {
        "number": 3410,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 0\n0 2\n-2 0\n0 -2''') == '16'\nassert solution('''2\n0 2\n0 2''') == '4'\nassert solution('''2\n0 2\n0 2\n-2 0\n0 -2''') == '16'\nassert solution('''3\n-2 0\n0 0\n0 2\n2 0\n2 0\n0 0\n0 2\n1 0\n2 0\n0 -2\n2 0\n0 0\n0 -2\n2 0\n0 0\n0 2\n-2 0\n0 0\n0 0\n2 0\n0 0\n-2 0\n1 0\n2 0\n0 -2\n2 0\n0 0\n0 -2\n2 0\n0 0\n0 2\n-2 0\n0 0\n0 0\n0 2\n2 0\n0 0\n-2 0\n1 0\n2 0\n0 -2\n2 0\n0 0\n0 -2\n2 0\n0 0\n0 0\n0 2\n-2 0\n0 0\n0 0\n0 2\n2 0\n0 0\n-2 0\n1 0\n2 0\n0 -2\n2 0\n0 0\n0 -2\n2 0\n0 0\n0 0\n0 2\n2 0\n0 0\n-2 0\n1 0\n2 0\n0 -2\n2 0\n0 0\n0 -2\n2 0\n0 0\n0 0\n0 2\n-2 0\n0 0\n0 0\n0 2\n2 0\n0 0\n-2 0\n1 0\n2 0\n0 -2\n2 0\n0 0\n0 -2\n2 0\n0 0\n0 0\n0 2\n-2 0\n0 0\n0 0\n0 2\n2 0\n0 0\n-2 0\n1 0\n2 0\n0 -2\n2 0\n0 0\n0 -2\n2 0\n0 0\n0 0\n0 2\n-2 0\n0 0\n0 0\n0 2\n2 0\n0 0\n-2 0\n1 0\n2 0\n0 -2\n2 0\n0 0\n0 -2\n2 0\n0 0\n0 0\n0 2\n-2 0\n0 0\n0 0\n0 2\n2 0\n0 0\n-2 0\n1 0\n2 0\n0 -2\n2 0\n0 0\n0 -2\n2 0\n0 0\n0 0\n0 2\n-2 0\n0 0\n0 0\n0 2\n2 0\n0 0\n-2 0\n1 0\n2 0\n0 -2\n2 0\n0 0\n0 -2\n2 0\n0 0\n0 0\n0 2\n-2 0\n0 0\n0 0\n0 2\n2 0\n0 0\n-2 0\n1 0\n2 0\n0 -2\n2 0\n0 0\n0 -2\n2 0\n0 0\n0 0\n0 2\n-2 0\n0 0\n0 0\n0 2\n2 0\n0 0\n-2 0\n1 0\n2 0\n0 -2\n2 0\n0 0\n0 -2\n2 0\n0 0\n0 0\n0 2\n-2 0\n0 0\n0 0\n0 2\n2 0\n0 0\n-2 0\n1 0\n2 0\n0 -2\n2 0\n0 0\n0 -2\n2 0\n0 0\n0 0\n0 2\n-2 0\n0 0\n0 0\n0 2\n2 0\n0 0\n-2 0\n1 0\n2 0\n0 -2\n2 0\n0 0\n0 -2\n2 0\n0 0\n0 0\n0 2\n-2 0\n0 0\n0 0\n0 2\n2 0\n0 0\n-2 0\n1 0\n2 0\n0 -2\n2 0\n0 0\n0 -2\n2 0\n0 0\n0 0\n0 2\n-2 0\n0 0\n0 0\n0 2\n2 0\n0 0\n-2 0\n1 0\n2 0\n0 -2\n2 0\n0 0\n0 -2\n2 0\n0 0\n0 0\n0 2\n-2 0\n0 0\n0 0\n0 2\n2 0\n0 0\n-2 0\n1 0\n2 0\n0 -2\n2 0\n0 0\n0 -2\n2 0\n0 0\n0 0\n0 2\n-2 0\n0 0\n0 0\n0 2\n2 0\n0 0\n-2 0\n1 0\n2 0\n0 -2\n2 0\n0 0\n0 -2\n2 0\n0 0\n0 0\n0 2\n-2 0\n0 0\n0 0\n0 2\n2 0\n0 0\n-2 0\n1 0\n2 0\n0 -2\n2 0\n0 0\n0 -2\n2 0\n0 0\n0 0\n0 2\n-2 0\n0 0\n0 0\n0 2\n2 0\n0 0\n-2 0\n1 0\n2 0\n0 -2\n2 0\n0 0\n0 -2\n2 0\n0 0\n0 0\n0 2\n-2 0\n0 0\n0 0\n0 2\n2 0\n0 0\n-2 0\n1 0\n2 0\n0 -2\n2 0\n0 0\n0 -2\n2 0\n0 0\n0 0\n0 2\n-2 0\n0 0\n0 0\n0 2\n2 0\n0 0\n-2 0\n1 0\n2 0\n0 -2\n2 0\n0 0\n0 -2\n2 0\n0 0\n0 0\n0 2\n-2 0\n0 0\n0 0\n0 2\n2 0\n0 0\n-2 0\n1 0\n2 0\n0 -2\n2 0\n0 0\n0 -2\n2 0\n0 0\n0 0\n0 2\n-2 0\n0 0\n0 0\n0 2\n2 0\n0 0\n-2 0\n1 0\n2 0\n0 -2\n2 0\n0 0\n0 -2\n2 0\n0 0\n0 0\n0 2\n-2 0\n"
    },
    {
        "number": 3410,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 0') == '0'\nassert solution('-1 0') == '-1'\nassert solution('0 -1') == '-1'\nassert solution('0 0 0') == '0'\nassert solution('-1 0 0') == '-1'\n"
    },
    {
        "number": 3411,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 10 50\n8 8 2 -2''') == '80'\nassert solution('''10 10 100\n
    },
    {
        "number": 3411,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"80\"\n'''\n"
    },
    {
        "number": 3411,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 10 50\\n8 8 2 -2') == '80'\n\"\"\"\n\n\nfrom math import ceil"
    },
    {
        "number": 3411,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''4 10 50\n8 8 2 -2'''\n) == '80'\nassert solution(\n'''4 10 50\n1 1 1 1'''\n) == '10'\nassert solution(\n'''4 10 50\n0 0 0 0'''\n) == '100'\nassert solution(\n'''4 10 50\n1 -1 -1 1'''\n) == '101'\nassert solution(\n'''4 10 50\n1 -1 -1 1'''\n) == '101'\n"
    },
    {
        "number": 3411,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 10 50\n8 8 2 -2''') == \"80\"\nassert solution('''4 10 50\n7 -2 1\n''') == \"60\"\nassert solution('''4 10 50\n8 -2 1\n''') == \"60\"\nassert solution('''4 10 50\n-1 2 3 4\n''') == \"60\"\n'''\n'''\n"
    },
    {
        "number": 3411,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 10 50\n8 8 2 -2''') == '80'\nassert solution('''5 10 100\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3''') == '872'\n'''\n    n, c, r = [int(x) for x in stdin.strip().split(' ')]\n    scores = [int(x) for x in stdin.strip().split(' ')]\n    # If there's only 1 comment, it can't be alternating\n    if len(scores) == 1:\n        return str(0)\n    # Find max and min values for the scores\n    max_val = max(scores)\n    min_val = min(scores)\n    # Find max and min positive and negative values\n    max_pos = sum([1 for x in scores if x > 0])\n    max_neg = sum([1 for x in scores if x < 0])\n    # If we've gone all the way around, we're done\n    if max_pos > max_neg:\n        return str(0)\n    # If we haven't gone all the way around, we need to find a way to reduce the score\n    # If we reduce the max value, there's a chance we'll need to reduce the max_pos value\n    # If we reduce the min value, there's a chance we'll need to reduce the max_neg value\n    # We're done if we have 0 positive or negative values\n    if max_pos == 0 and max_neg == 0:\n        return str(0)\n    # We have to find a way to reduce the score\n    # If we have a max value that's 0 or less, we're done\n    # If we have a min value that's 0 or more, we have to reduce the min value\n    if max_val <= 0:\n        return str(0)\n    if min_val >= 0:\n        return str(0)\n    # We can reduce the min value\n    reduced_scores = [x if x > 0 else -x for x in scores]\n    # We can reduce the max value\n    reduced_scores = [x if x < 0 else -x for x in reduced_scores]\n    # If we're done with this chain, we're done\n    if max(reduced_scores) <= 0 and min(reduced_scores) >= 0:\n        return str(0)\n    # Otherwise, we have to reduce the max value\n    reduced_scores = [x if x < 0 else -x for x in reduced_scores]\n    # We can reduce the min value\n    reduced_scores = [x if x > 0 else -x for x in reduced_scores]\n    # If we're done with this chain, we're done\n    if max(reduced_scores) <= 0 and min(reduced_scores) >= 0:\n        return str(0)\n    # We can reduce the max value\n    reduced_scores = [x if x < 0 else -x for x in reduced_scores]\n    # We can reduce the min value\n    reduced_scores = [x if x > 0 else -x for x in reduced_scores]\n    # If we're done with this chain, we're done\n    if max(reduced_scores) <= 0 and min(reduced_scores) >= 0:\n        return str(0)\n    # If we're done with this chain, we're done\n    if max(reduced_scores) <= 0 and min(reduced_scores) >= 0:\n        return str(0)\n    # Otherwise, we can reduce the max value\n    reduced_scores = [x if x < 0 else -x for x in reduced_scores]\n    # We can reduce the min value\n    reduced_scores = [x if x > 0 else -x for x in reduced_scores]\n    # If we're done with this chain, we're done\n    if max(reduced_scores) <= 0 and min(reduced_scores) >= 0:\n        return str(0)\n    # We can reduce the max value\n    reduced_scores = [x if x < 0 else -x for x in reduced_scores]\n    # We can reduce the min value\n    reduced_scores = [x if x > 0 else -x for x in reduced_scores]\n    # If we're done with this chain, we're done\n    if max(reduced_scores) <= 0 and min(reduced_scores) >= 0:\n        return str(0)\n    # Otherwise, we can reduce the max value\n    reduced_scores = [x if x < 0 else -x for x in reduced_scores]\n    # We can reduce the min value\n    reduced_scores = [x if x > 0 else -x for x in reduced_scores]\n    # If we're done with this chain, we're done\n    if max(reduced_scores) <= 0 and min(reduced_scores) >= 0:\n        return str(0)\n    # Otherwise, we can reduce the max value\n    reduced_scores = [x if x < 0 else -x for x in reduced_scores]\n    # We can reduce the min value\n    reduced_scores = [x if x > 0 else -x for x in reduced_scores]\n    # If we're done with this chain, we're done\n    if max(reduced_scores) <= 0 and"
    },
    {
        "number": 3411,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 10 50\n8 8 2 -2''') == '80'\n'''\n4 10 50\n8 8 2 -2\n'''\nassert solution('''4 10 50\n8 -8 2 -2''') == '40'\n'''\n4 10 50\n8 -8 2 -2\n'''\nassert solution('''3 10 50\n0 0 0\n-1 -1 1\n0 0 0\n1 -1 1\n''') == '45'\n'''\n3 10 50\n0 0 0\n-1 -1 1\n0 0 0\n1 -1 1\n'''\nassert solution('''4 10 50\n8 -8 2 -2\n1 -1 1\n''') == '45'\n'''\n4 10 50\n8 -8 2 -2\n1 -1 1\n'''\nassert solution('''6 10 50\n3 4 0\n2 -1 2\n-1 -1 1\n-1 -1 1\n-1 -1 1\n-1 -1 1\n''') == '138'\n'''\n6 10 50\n3 4 0\n2 -1 2\n-1 -1 1\n-1 -1 1\n-1 -1 1\n-1 -1 1\n'''\n"
    },
    {
        "number": 3411,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 10 50\n8 8 2 -2''') == '80'\nassert solution('''8 10 50\n8 8 2 -2''') == '80'\nassert solution('''8 100 50\n8 8 2 -2''') == '60'\nassert solution('''8 10 50\n8 8 2 -2''') == '80'\nassert solution('''8 100 50\n8 8 2 -2''') == '60'\n"
    },
    {
        "number": 3411,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 10 50\\n8 8 2 -2\\n\") == \"80\"\nassert solution(\"3 10 10\\n1 1 1\\n9 9 -9\\n\") == \"55\"\nassert solution(\"4 10 25\\n-9 -9 1 1\\n-8 -8 -8\\n-7 -7 -7\\n-6 -6 -6\\n-5 -5 -5\\n-4 -4 -4\\n-3 -3 -3\\n-2 -2 -2\\n-1 -1 -1\\n0 0 0\\n1 1 1\\n2 2 2\\n3 3 3\\n4 4 4\\n5 5 5\\n6 6 6\\n7 7 7\\n8 8 8\\n9 9 9\\n10 10 10\\n11 11 11\\n12 12 12\\n13 13 13\\n14 14 14\\n15 15 15\\n16 16 16\\n17 17 17\\n18 18 18 18\\n19 19 19 19\\n20 20 20 20\\n21 21 21 21\\n22 22 22 22\\n23 23 23 23\\n24 24 24 24\\n25 25 25 25\\n26 26 26 26\\n27 27 27 27\\n28 28 28 28\\n29 29 29 29\\n30 30 30 30\\n31 31 31 31\\n32 32 32 32\\n33 33 33 33\\n34 34 34 34\\n35 35 35 35\\n36 36 36 36\\n37 37 37 37\\n38 38 38 38\\n39 39 39 39\\n40 40 40 40\\n41 41 41 41\\n42 42 42 42\\n43 43 43 43\\n44 44 44 44\\n45 45 45 45\\n46 46 46 46\\n47 47 47 47\\n48 48 48 48\\n49 49 49 49\\n50 50 50 50\\n\") == \"55\"\nassert solution(\"2 2 1\\n1 1 1\\n-1 -1\\n\") == \"5\"\nassert solution(\"1 1 1\\n-1 -1\\n\") == \"5\"\n"
    },
    {
        "number": 3411,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 10 50''') == '80'\nassert solution('''5 7 3''') == '32'\nassert solution('''10 9 7''') == '36'\nassert solution('''1 1 1''') == '0'\nassert solution('''8 8 2''') == '32'\n"
    },
    {
        "number": 3412,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == '3.000000000'\n'''"
    },
    {
        "number": 3412,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n\"\"\") == '3.000000000'\n\nassert solution(\n\"\"\"1 2\n1 2\n\"\"\") == '1.000000000'\n\nassert solution(\n\"\"\"1 2\n1 2\n\"\"\") == '1.000000000'\n\nassert solution(\n\"\"\"1 0\n0 0\n\"\"\") == '0.000000000'\n\nassert solution(\n\"\"\"1 0\n0 0\n\"\"\") == '0.000000000'"
    },
    {
        "number": 3412,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 8\") == \"3.000000000\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3412,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 0 10 10') == '0.000000000'\nassert solution('1 8') == '1.000000000'\nassert solution('0 0 10 10') == '0.000000000'\nassert solution('5 1') == '2.00000000'\nassert solution('5 9') == '8.000000000'\n"
    },
    {
        "number": 3412,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 8\") == \"3.000000000\"\nassert solution(\"0 0 10 10\") == \"2.000000000\"\nassert solution(\"5 1\") == \"1.000000000\"\nassert solution(\"5 9\") == \"4.000000000\"\nassert solution(\"3\") == \"2.000000000\"\n"
    },
    {
        "number": 3412,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 8\") == \"3.000000000\"\nassert solution(\"1 8\") == \"3.000000000\"\nassert solution(\"1 8\") == \"3.000000000\"\nassert solution(\"1 8\") == \"3.000000000\"\nassert solution(\"1 8\") == \"3.000000000\"\n"
    },
    {
        "number": 3412,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n') == '3.000000000'\n"
    },
    {
        "number": 3412,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6'''\n) == '3.000000000'\n\nassert solution(\n'''1 1\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6'''\n) == '1.000000000'\n\nassert solution(\n'''1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n5 7\n5 9\n3\n5 8\n2 2\n9 6'''\n) == '1.000000000'\n\nassert solution(\n'''1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n5 7\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6'''\n) == '2.000000000'\n\nassert solution(\n'''1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2\n9 6\n5 6\n5 9\n3\n5 8\n2 2"
    },
    {
        "number": 3412,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n\") == \"3.000000000\"\n\"\"\"\n"
    },
    {
        "number": 3412,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6''') == '3.000000000'\nassert solution('''1 8\n1 1 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6''') == '7.00000000'\nassert solution('''1 8\n1 1 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n6 8\n3 7\n2 1\n5 4\n1 7\n8 9\n6 8\n5 5\n4 5\n1 7\n2 1\n5 8\n3 4\n4 8\n2 4\n5 8\n1 6\n2 3\n3 4\n4 6\n1 7\n2 6\n3 7\n4 7\n1 8\n2 7\n3 6\n4 7\n1 5\n2 6\n3 6\n4 7\n1 8\n2 8\n3 7\n4 6\n1 6\n2 5\n3 6\n4 7\n1 8\n2 6\n3 6\n4 7\n1 5\n2 7\n3 7\n4 8\n1 6\n2 7\n3 6\n4 7\n1 5\n2 7\n3 7\n4 7\n1 5\n2 7\n3 6\n4 6\n1 7\n2 7\n3 5\n4 7\n1 8\n2 7\n3 6\n4 7\n1 5\n2 7\n3 6\n4 7\n1 5\n2 7\n3 6\n4 7\n1 6\n2 7\n3 6\n4 7\n1 6\n2 7\n3 7\n4 7\n1 5\n2 7\n3 7\n4 7\n1 5\n2 7\n3 7\n4 7\n1 5\n2 7\n3 6\n4 6\n1 6\n2 6\n3 6\n4 7\n1 6\n2 7\n3 6\n4 7\n1 6\n2 7\n3 6\n4 7\n1 6\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 6\n2 7\n3 6\n4 7\n1 6\n2 7\n3 6\n4 7\n1 6\n2 7\n3 6\n4 7\n1 6\n2 7\n3 7\n4 7\n1 6\n2 7\n3 6\n4 7\n1 6\n2 7\n3 6\n4 7\n1 6\n2 7\n3 6\n4 7\n1 6\n2 7\n3 6\n4 7\n1 6\n2 7\n3 6\n4 7\n1 6\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 7\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 7\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 7\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 7\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2 7\n3 6\n4 7\n1 7\n2"
    },
    {
        "number": 3413,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3\n0 1 0 0\n1 2\n2 3\n2 4''') == '1'\nassert solution('''4 4\n0 1 0 0\n1 2\n2 3\n2 4\n1 2''') == '2'\nassert solution('''4 4\n0 1 0 0\n1 2\n2 3\n2 4\n0 1''') == '1'\nassert solution('''7 5\n0 1 1 1 0 0\n1 2\n2 3\n2 4\n3 4\n3 5\n4 5\n5 6\n5 7\n6 7\n''') == '2'\nassert solution('''7 6\n0 1 1 1 0 0\n1 2\n2 3\n2 4\n3 4\n3 5\n4 5\n5 6\n5 7\n6 7\n''') == '2'\n"
    },
    {
        "number": 3413,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\""
    },
    {
        "number": 3413,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\\n0 1 0 0\\n1 2\\n2 3\\n2 4') == '1'\nassert solution('4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\\n1 1') == '0'\nassert solution('3 4\\n0 1 0 0\\n1 2\\n2 3\\n2 1\\n0 1') == '3'\nassert solution('4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\\n1 1') == '1'\nassert solution('4 5\\n0 1 0 0\\n1 2\\n2 3\\n2 4\\n3 4\\n4 5\\n4 3\\n4 2\\n2 5\\n5 3\\n3 5\\n5 1\\n5 2\\n1 4') == '2'\n"
    },
    {
        "number": 3413,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''0 1 0 0\n1 2\n2 3\n2 4''') == '1'\nassert solution('''4 3\n0 1 0 0\n1 2\n2 3\n2 4''') == '1'\nassert solution('''4 3\n0 1 0 0\n1 2\n2 3\n2 4''') == '1'\nassert solution('''4 3\n0 1 0 0\n1 2\n1 3\n1 4\n2 3\n2 4''') == '2'\nassert solution('''4 3\n0 1 0 0\n1 2\n2 3\n2 4\n2 5\n2 6\n3 4\n3 5\n3 6\n4 5\n4 6''') == '2'\n"
    },
    {
        "number": 3413,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n4 3\n0 1 0 0\n1 2\n2 3\n2 4\n''') == '1'\n'''\n\n\nassert solution('''\n4 3\n0 1 0 0\n1 2\n2 3\n2 4\n''') == '1'\n'''\n\n\nassert solution('''\n3 4\n0 1 0 0\n1 2\n0 2\n''') == '2'\n'''\n\n\nassert solution('''\n4 4\n0 1 0 0\n1 2\n0 2\n0 3\n2 3\n''') == '3'\n'''\n\n\nassert solution('''\n6 3\n0 1 0 0\n1 2\n0 2\n0 3\n0 4\n1 5\n1 6\n2 3\n2 4\n3 4\n4 5\n4 6\n''') == '4'\n'''\n"
    },
    {
        "number": 3413,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0 2\\n1 2\\n0 3\\n1 3\\n0 4\\n1 4\\n0 5\\n1 5\\n0 6\\n1 6\\n0 7\\n1 7\\n0 8\\n1 8\") == \"1\"\nassert solution(\"5 2\\n1 2\\n2 4\\n2 3\\n0 1\\n0 2\\n2 4\\n3 5\\n1 4\\n2 5\\n0 3\\n0 4\\n2 4\\n0 5\\n0 6\\n0 7\\n0 8\\n0 9\\n1 2\\n1 3\\n1 4\\n2 4\\n3 4\\n4 5\\n1 2\\n1 3\\n1 4\\n2 4\\n2 3\\n3 5\\n4 5\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\\n0 6\\n0 7\\n0 8\\n0 9\\n0 10\\n1 2\\n1 3\\n1 4\\n2 4\\n2 3\\n3 5\\n4 5\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\\n0 6\\n0 7\\n0 8\\n0 9\\n0 10\\n0 11\\n0 12\\n0 13\\n0 14\\n0 15\\n1 2\\n1 3\\n1 4\\n2 4\\n2 3\\n3 5\\n4 5\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\\n0 6\\n0 7\\n0 8\\n0 9\\n0 10\\n0 11\\n0 12\\n0 13\\n0 14\\n0 15\\n0 16\\n0 17\\n0 18\\n0 19\\n0 20\\n0 21\\n0 22\\n0 23\\n0 24\\n0 25\\n0 26\\n0 27\\n0 28\\n0 29\\n0 30\\n0 31\\n0 32\\n0 33\\n0 34\\n0 35\\n0 36\\n0 37\\n0 38\\n0 39\\n0 40\\n0 41\\n0 42\\n0 43\\n0 44\\n0 45\\n0 46\\n0 47\\n0 48\\n0 49\\n0 50\\n0 51\\n0 52\\n0 53\\n0 54\\n0 55\\n0 56\\n0 57\\n0 58\\n0 59\\n0 60\\n0 61\\n0 62\\n0 63\\n0 64\\n0 65\\n0 66\\n0 67\\n0 68\\n0 69\\n0 70\\n0 71\\n0 72\\n0 73\\n0 74\\n0 75\\n0 76\\n0 77\\n0 78\\n0 79\\n0 80\\n0 81\\n0 82\\n0 83\\n0 84\\n0 85\\n0 86\\n0 87\\n0 88\\n0 89\\n0 90\\n0 91\\n0 92\\n0 93\\n0 94\\n0 95\\n0 96\\n0 97\\n0 98\\n0 99\\n0 100\\n0 101\\n0 102\\n0 103\\n0 104\\n0 105\\n0 106\\n0 107\\n0 108\\n0 109\\n0 110\\n0 111\\n0 112\\n0 113\\n0 114\\n0 115\\n0 116\\n0 117\\n0 118\\n0 119\\n0 120\\n0 121\\n0 122\\n0 123\\n0 124\\n0 125\\n0 126\\n0 127\\n0 128\\n0 129\\n0 130\\n0 131\\n0 132\\n0 133\\n0 134\\n0 135\\n0 136\\n0 137\\n0 138\\n0 139\\n0 140\\n0 141\\n0 142\\n0 143\\n0 144\\n0 145\\n0 146\\n0 147\\n0 148\\n0 149\\n0 150\\n0 151\\n0 152\\n0 153\\n0 154\\n0 155\\n0 156\\n0 157\\n0 158\\n0 159\\n0 160\\n0 161\\n0 162\\n0 163\\n0 164\\n0 165\\n0 166\\n0 167\\n0 168\\n0 169\\n0 170\\n0 171\\n0 172\\n0 173\\n0 174\\n0 175\\n0 176\\n0 177\\n0 178\\n0 179\\n0 180\\n0 181\\n0 182\\n0 183\\n0 184\\n0 185\\n0 186\\n0 187\\n0 188\\n0 189\\n0 190\\n0 191\\n0 192\\n0 193\\n0 194\\n0 195\\n0 196\\n0 197\\n0 198\\n0 199\\n0 200\\n0 201\\n0 202\\n0 203\\n0 204\\n0 205\\n0 206\\n0 207\\n0 208\\n0 209\\n0 210\\n0 211\\n0 212\\n0 213\\n0 214\\n0 215\\n0 216\\n0 217\\n0 218\\n0 219\\n0 220\\n0 221\\n0 222\\n0 223\\n0 224\\n0 225\\n0 226\\n0 227\\n0 228\\n0 229\\n0 230\\n0 231\\n0 232\\n0 233\\n0 234\\n0 235\\n0 236\\n0 237\\n0 238\\n0 239\\n0 240\\n0 241\\n0 242\\n0 243\\n0 244\\n0 245\\n0 246\\n0 247\\n0 248\\n0 249\\n0 250\\n0 251\\n0 252\\n0 253\\n0 254\\n0 255\\n0 256\\n0 257\\n0 258\\n0 259\\n0 260\\n0 261\\n0 262\\n"
    },
    {
        "number": 3413,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '1'\n\nstdin = '''2 2\n0 1 0 0\n1 2\n0 1 0 1\n1 2\n'''\nassert solution(stdin) == '2'\n\nstdin = '''2 4\n1 0 1 0 0\n1 2\n0 1 1 1\n1 2\n0 1 1 1\n1 2\n'''\nassert solution(stdin) == '3'\n\nstdin = '''2 7\n1 0 1 1 1 1 1 1\n1 2\n1 3\n0 1 1 1\n1 4\n1 5\n1 6\n1 7\n0 1 1 1\n1 2\n0 1 1 1\n1 3\n0 1 1 1\n1 4\n1 5\n1 6\n1 7\n'''\nassert solution(stdin) == '6'\n\n'''\n\nHint:\n\nSome ideas:\n\n1) If all the inputs are valid, then all the outputs will be valid.\n2) Can you make a test case that is invalid? What should you do to test this case?\n3) How to count the number of times a dictionary value appears in a dictionary?\n4) Can you write a function that will test whether a number is in a list?\n5) What are the minimum number of steps required to convert \"one\" to \"two\"?\n6) Can you use a hash table?\n7) Can you use a bit vector?\n8) Can you use a double-ended queue?\n9) What's the Pythonic way to test for equality or inequality?\n10) What's the Pythonic way to test for length?\n\n'''\n"
    },
    {
        "number": 3413,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 1 0 0\\n1 2\\n2 3\\n2 4') == 1\nassert solution('1 2\\n2 3\\n3 4\\n4 5') == 2\nassert solution('0 0\\n0 0\\n0 0\\n0 0') == 0\nassert solution('0 1\\n1 0\\n0 0\\n0 0') == 1\nassert solution('0 0\\n0 0\\n0 0\\n0 0') == 0\n"
    },
    {
        "number": 3413,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\\n1 2\\n1 3\\n0 2\") == \"1\"\nassert solution(\"6 4\\n0 1 0 0 0 1\\n1 2\\n2 3\\n2 4\\n3 4\\n3 5\\n4 5\\n0 4\\n0 5\\n1 4\\n0 5\\n1 5\\n0 5\") == \"3\"\nassert solution(\"6 5\\n0 1 0 0 0 1\\n1 2\\n2 3\\n2 4\\n3 4\\n3 5\\n4 5\\n4 5\\n4 5\\n0 4\\n0 5\\n1 4\\n0 5\\n1 5\\n0 5\") == \"6\"\nassert solution(\"6 5\\n0 1 0 0 0 1\\n1 2\\n2 3\\n2 4\\n3 4\\n3 5\\n4 5\\n4 5\\n4 5\\n4 5\\n0 4\\n0 5\\n1 4\\n0 5\\n1 5\\n0 5\") == \"0\"\nassert solution(\"6 5\\n0 1 0 0 0 1\\n1 2\\n2 3\\n2 4\\n3 4\\n3 5\\n4 5\\n4 5\\n4 5\\n4 5\\n0 4\\n0 5\\n1 4\\n0 5\\n1 5\\n0 5\") == \"1\"\n"
    },
    {
        "number": 3413,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3414,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n0 0\n0 1\n1 0\n0 1\n0 2\n1 2''') == '6.283185'\nassert solution('''3 3\n0 0\n0 1\n1 0\n1 1\n1 2\n2 1\n2 2\n2 3\n3 2\n3 3''') == '0.7853981633974483'\nassert solution('''2 2\n0 0\n1 1''') == '0.0'\nassert solution('''3 3\n0 0\n0 1\n1 0\n1 1\n1 2\n2 1\n2 2\n2 3\n3 2\n3 3''') == '0.0'\nassert solution('''5 5\n0 0\n0 1\n1 0\n0 1\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4''') == '0.0'\n"
    },
    {
        "number": 3414,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0 1\n1 2\n2 3\n3 0''') == '6.283185'\nassert solution('''0 1\n0 2\n1 2\n2 3''') == '2.13379'\nassert solution('''0 1\n0 2\n1 2\n2 3\n3 0''') == '2.13379'\nassert solution('''0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 0''') == '7.85398'\nassert solution('''0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 0''') == '7.85398'\n"
    },
    {
        "number": 3414,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''0 0\n0 1\n1 0\n0 1\n0 2\n1 2''') == '6.283185'\nassert solution('''3 3\n0 0\n0 1\n1 0\n0 1\n0 2\n1 2\n0 2\n1 2''') == '0.0'\n'''\n    pass\n"
    },
    {
        "number": 3414,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(open('test_input.txt').read()) == '6.283185'\n'''\n"
    },
    {
        "number": 3414,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\\n0 1') == '6.283185'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 3414,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"0 0\n0 1\n1 0\n0 1\n0 2\n1 2\"\"\") == \"6.283185\"\nassert solution(\"\"\"3 3\n0 0\n0 1\n1 0\n0 1\n0 2\n1 2\"\"\") == \"3.14159\"\nassert solution(\"\"\"0 1\n1 0\n2 0\n0 1\n0 2\n0 3\n1 3\n1 2\n2 3\"\"\") == \"0.78260687073779\"\n\"\"\"\n\n\"\"\""
    },
    {
        "number": 3414,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 3\n0 0\n0 1\n1 0\n0 1\n0 2\n1 2''') == \"6.283185\"\nassert solution('''0 0\n0 1\n1 0\n0 1\n0 2\n1 2\n2 3\n3 0\n''') == \"4.72359\"\nassert solution('''0 1\n0 2\n1 2\n1 3\n2 4\n3 4\n''') == \"0.78539\"\nassert solution('''0 1\n0 2\n0 3\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n4 5\n''') == \"0.52359\"\nassert solution('''0 1\n0 2\n0 3\n1 2\n1 3\n1 4\n2 3\n3 4\n3 5\n4 5\n4 6\n5 6\n''') == \"0.2546\"\n"
    },
    {
        "number": 3414,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\\n0 1') == '6.283185'\nassert solution('2 2\\n0 0\\n0 1\\n1 0\\n1 1\\n0 1') == '0.0'\nassert solution('2 2\\n0 0\\n0 1\\n1 1\\n1 1\\n0 1') == '0.7853982'\nassert solution('3 3\\n0 0\\n0 1\\n1 0\\n0 2\\n1 2\\n2 0') == '3.14159265'\nassert solution('10 10\\n0 0\\n0 1\\n1 0\\n0 2\\n1 2\\n2 0\\n3 0\\n4 0\\n5 0\\n6 0\\n7 0\\n8 0\\n9 0') == '0.0'\n"
    },
    {
        "number": 3414,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 1\\n1 0') == '6.283185'\n"
    },
    {
        "number": 3414,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 3\n0 0\n0 1\n1 0\n0 1\n0 2\n1 2''') == '6.283185'\nassert solution('''10 10\n0 0\n0 1\n1 0\n0 1\n0 2\n1 2\n0 3\n1 3\n0 4\n1 4\n0 5\n1 5\n0 6\n1 6\n0 7\n1 7\n0 8\n1 8\n0 9\n1 9''') == '1.1102230246251565e-16'\nassert solution('''4 5\n0 0\n0 1\n0 2\n0 3\n1 1\n1 2\n1 3\n2 2\n2 3\n3 3''') == '0.9999999999999999'\nassert solution('''1 1\n0 0\n0 1\n1 0\n0 1\n0 2\n1 2\n0 3\n1 3\n0 4\n1 4\n0 5\n1 5\n0 6\n1 6\n0 7\n1 7\n0 8\n1 8\n0 9\n1 9''') == '6.283185'\nassert solution('''4 5\n0 0\n0 1\n0 2\n0 3\n1 1\n1 2\n1 3\n2 2\n2 3\n3 3''') == '0.9999999999999999'\n"
    },
    {
        "number": 3415,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2''') == '1 2 3'\nassert solution('''3''') == '1 2 3'\nassert solution('''4''') == '1 2 3 4'\nassert solution('''5''') == '1 2 3 4 5'\nassert solution('''6''') == '1 2 3 4 5 6'\n'''\n    \n"
    },
    {
        "number": 3415,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    '2'\n) == '1 2 3'\n'''\n"
    },
    {
        "number": 3415,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2') == '1 2'\nassert solution('3') == '1 2 3'\nassert solution('4') == '1 2 3 4'\nassert solution('5') == '1 2 3 4 5'\nassert solution('6') == '1 2 3 4 5 6'\n"
    },
    {
        "number": 3415,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n') == '1 2 3'\nassert solution('1\\n2\\n') == '1 2 3'\n'''"
    },
    {
        "number": 3415,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"10\"\nassert solution(\"3\") == \"100\"\n"
    },
    {
        "number": 3415,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3''') == '1 2 3'\nassert solution('''4''') == '1 2 3 4'\nassert solution('''8''') == '1 2 3 4 5 6 7 8'\nassert solution('''15''') == '1 2 3 4 5 6 7 8 9 10 11 12 13 14 15'\n'''\nimport sys\n"
    },
    {
        "number": 3415,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5''') == '1 2 3 4 5'\nassert solution('''2''') == '1 2'\nassert solution('''10''') == '1 2 3 4 5 6 7 8 9 10'\nassert solution('''15''') == '1 2 3 4 5 6 7 8 9 10 11 12 13 14 15'\nassert solution('''20''') == '1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20'\n'''\n"
    },
    {
        "number": 3415,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2''') == '1 2 3'\nassert solution('''5''') == '1 2 3 4 5 6 7 8 9 10 11 12 13 14 15'\nassert solution('''3''') == '1 2 3'\nassert solution('''4''') == '1 2 3 4'\nassert solution('''6''') == '1 2 3 4 5 6'\n"
    },
    {
        "number": 3415,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3''') == \"1 2 3\"\nassert solution('''6''') == \"1 2 3 4 5 6 7 8\"\nassert solution('''15''') == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\"\nassert solution('''16''') == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\"\nassert solution('''21''') == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\"\n"
    },
    {
        "number": 3415,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2') == '1 2 3'\nassert solution('3') == '1 2 3'\nassert solution('5') == '1 2 3 4 5'\nassert solution('7') == '1 2 3 4 5 6 7'\nassert solution('10') == '1 2 3 4 5 6 7 8 9 10'\n"
    },
    {
        "number": 3416,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4\n1 2\n1 3\n2 4\n3 4''') == '1'\nassert solution('''5 5\n1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n2 5\n3 4\n3 5\n4 5''') == '1'\nassert solution('''3 4\n1 2\n2 3\n1 3''') == '2'\nassert solution('''4 5\n1 2\n1 3\n2 4\n1 4\n1 3\n2 4\n2 3\n3 4''') == '1 2 3 4'\nassert solution('''3 3\n1 2\n2 3\n1 3\n1 2\n1 3''') == '1'\n"
    },
    {
        "number": 3416,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2') == '1 2'\nassert solution('2 4') == '1 2 3 4'\nassert solution('4 4') == '1 2 3 4'\nassert solution('2 1') == '1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 3416,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\""
    },
    {
        "number": 3416,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 4\n1 2\n1 3\n2 4''') == '1\\n1 2 3 4'\nassert solution('''3 4\n1 2\n2 3\n3 4\n1 3\n1 2\n2 3\n3 4\n1 3\n1 2\n2 3\n3 4''') == '1\\n1 2 3 4'\nassert solution('''3 3\n1 2\n2 3\n3 4\n1 3\n2 1\n1 4\n1 4\n2 3\n2 1\n1 3\n2 1\n1 4\n2 3\n2 1\n1 3\n2 1\n1 4\n1 4\n1 3\n1 4\n1 3\n2 1\n2 3\n3 4\n2 1\n2 3\n1 4\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n2 3\n3 4\n1 4\n1 3\n2 1\n2 3\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n2 3\n3 4\n2 1\n2 3\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n2 3\n3 4\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n2 3\n3 4\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n2 3\n3 4\n2 1\n2 3\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n2 3\n3 4\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n2 3\n3 4\n2 1\n2 3\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n2 3\n3 4\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n2 3\n3 4\n2 1\n2 3\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n2 3\n3 4\n2 1\n2 3\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n2 3\n3 4\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n2 3\n3 4\n2 1\n2 3\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n2 3\n3 4\n2 1\n2 3\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n2 3\n3 4\n2 1\n2 3\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n2 3\n3 4\n2 1\n2 3\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1\n1 4\n1 3\n2 1"
    },
    {
        "number": 3416,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 4\n1 2\n1 3\n2 4''') == '1\\n1 2 3 4\\n'\nassert solution('''4 5\n1 2\n1 3\n2 4\n3 4\n4 1''') == '1\\n1 2 3 4\\n'\nassert solution('''1 1\n1 2\n2 1\n2 3''') == '1\\n1 2\\n'\nassert solution('''7 6\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n4 5\n5 6\n6 7''') == '1\\n1 2 3 4 5 6\\n'\nassert solution('''7 7\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n4 5\n5 6\n6 7''') == '1\\n1 2 3 4 5 6 7\\n'\n"
    },
    {
        "number": 3416,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(TEST_INPUT) == TEST_OUTPUT\n\nprint(solution(STDIN_INPUT))\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 3416,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"1 1\n1 2\n1 3\n2 4\n3 4\n\"\"\"\n    ) == '1\\n1 2 3 4'\n\nassert solution(\n\"\"\"2 3\n1 2\n2 3\n3 4\n1 2\n3 4\n1 2\n\"\"\"\n    ) == '1\\n1 2 3 4'\n\nassert solution(\n\"\"\"3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n1 2\n\"\"\"\n    ) == '1\\n1 2 3 4'\n\nassert solution(\n\"\"\"4 4\n1 2\n1 3\n2 4\n3 4\n1 2\n1 3\n1 4\n3 4\n1 2\n2 3\n1 2\n\"\"\"\n    ) == '1\\n1 2 3 4'\n\nassert solution(\n\"\"\"1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n1 30\n1 31\n1 32\n1 33\n1 34\n1 35\n1 36\n1 37\n1 38\n1 39\n1 40\n1 41\n1 42\n1 43\n1 44\n1 45\n1 46\n1 47\n1 48\n1 49\n1 50\n1 51\n1 52\n1 53\n1 54\n1 55\n1 56\n1 57\n1 58\n1 59\n1 60\n1 61\n1 62\n1 63\n1 64\n1 65\n1 66\n1 67\n1 68\n1 69\n1 70\n1 71\n1 72\n1 73\n1 74\n1 75\n1 76\n1 77\n1 78\n1 79\n1 80\n1 81\n1 82\n1 83\n1 84\n1 85\n1 86\n1 87\n1 88\n1 89\n1 90\n1 91\n1 92\n1 93\n1 94\n1 95\n1 96\n1 97\n1 98\n1 99\n1 100\n1 101\n1 102\n1 103\n1 104\n1 105\n1 106\n1 107\n1 108\n1 109\n1 110\n1 111\n1 112\n1 113\n1 114\n1 115\n1 116\n1 117\n1 118\n1 119\n1 120\n1 121\n1 122\n1 123\n1 124\n1 125\n1 126\n1 127\n1 128\n1 129\n1 130\n1 131\n1 132\n1 133\n1 134\n1 135\n1 136\n1 137\n1 138\n1 139\n1 140\n1 141\n1 142\n1 143\n1 144\n1 145\n1 146\n1 147\n1 148\n1 149\n1 150\n1 151\n1 152\n1 153\n1 154\n1 155\n1 156\n1 157\n1 158\n1 159\n1 160\n1 161\n1 162\n1 163\n1 164\n1 165\n1 166\n1 167\n1 168\n1 169\n1 170\n1 171\n1 172\n1 173\n1 174\n1 175\n1 176\n1 177\n1 178\n1 179\n1 180\n1 181\n1 182\n1 183\n1 184\n1 185\n1 186\n1 187\n1 188\n1 189\n1 190\n1 191\n1 192\n1 193\n1 194\n1 195\n1 196\n1 197\n1 198\n1 199\n1 200\n1 201\n1 202\n1 203\n1 204\n1 205\n1 206\n1 207\n1 208\n1 209\n1 210\n1 211\n1 212\n1 213\n1 214\n1 215\n1 216\n1 217\n1 218\n1 219\n1 220\n1 221\n1 222\n1 223\n1 224\n1 225\n1 226\n1 227\n1 228\n1 229\n1 230\n1 231\n1 232\n1 233\n1 234\n1 235\n1 236\n1 237\n1 238\n1 239\n1 240\n1 241\n1 242\n1 243\n1 244\n1 245\n1 246\n1 247\n1 248\n1 249\n1 250\n1 251\n1 252\n1 253\n1 254\n1 255\n1 256\n1 257\n1 258\n1 259\n1 260\n1 261\n1 262\n1 263\n1 264\n1 265\n1 266\n1 267\n1 268\n1 269\n1 270\n1 271\n1 272\n1 273\n1 274\n1 275\n1 276\n1 277\n1 278\n1 279\n1 280\n1 281\n1 282\n1 283\n1 284\n1 285\n1 286\n1 287\n1 288\n1 289\n1 290\n1 291\n1 292\n1 293\n1 294\n1 295\n1 296\n1 297\n1 298\n1 299\n1 300\n1 301\n1 302\n1 303\n1 304\n1 305\n1 306\n1 307\n1 308\n1 309\n1 310\n1 311\n1 312\n1 313\n1 314\n1 315\n1 316\n1 317\n1 318\n1 319\n1 320\n1 321\n1 322\n1 323\n1 324\n1 325\n1 326\n1 327\n1 328\n1 329\n1 330\n1 331\n1 332\n1 333\n1 334\n1 335\n1 336\n1 337\n1 338\n1 339\n1 340\n1 341\n1 342\n1 343\n1 344\n1 345\n1 346\n1 347\n1 348\n1 349\n1 350\n1 351\n1 352\n1 353\n1 354\n1 355\n1 356\n1 357\n1 358\n1 359\n1 360\n"
    },
    {
        "number": 3416,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 4\n1 2\n1 3\n2 4\n3 4''') == '1\\n1 2 3 4'\nassert solution('''10 10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10''') == '0\\n'\nassert solution('''2 1\n1 2''') == '0\\n'\nassert solution('''4 2\n1 2\n1 3\n2 4\n3 4''') == '1\\n1 2'\nassert solution('''4 2\n1 2\n1 3\n1 4\n1 5''') == '1\\n1 2'\n"
    },
    {
        "number": 3416,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 2\\n2 3\") == \"\"\nassert solution(\"1 2\\n2 3\\n3 4\") == \"\"\nassert solution(\"1 2\\n2 3\\n3 4\\n4 5\") == \"\"\n"
    },
    {
        "number": 3416,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 4\n1 2\n1 3\n2 4\n3 4''') == '1\\n1 2 3 4'\nassert solution('''3 3\n1 2\n1 3\n2 3\n1 3''') == '\\n'\nassert solution('''4 5\n1 2\n2 3\n3 4\n4 5\n1 3\n2 4\n3 4''') == '\\n'\nassert solution('''3 3\n1 2\n1 3\n2 3\n1 3''') == '1\\n1 2 3'\nassert solution('''6 5\n1 2\n2 3\n3 4\n4 5\n5 6\n6 1\n2 4\n3 4\n1 5\n3 4\n1 5\n2 4\n3 4''') == '1\\n1 2 3 4 5 6'\n"
    },
    {
        "number": 3417,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n1 3\") == \"1\"\nassert solution(\"1 2\\n2 3\") == \"2\"\nassert solution(\"1 2\\n3 4\") == \"3\"\nassert solution(\"4 1\\n1 2\\n2 3\\n3 4\") == \"4\"\nassert solution(\"2 2\\n1 2\\n2 3\") == \"2\"\n"
    },
    {
        "number": 3417,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\"\n'''\n"
    },
    {
        "number": 3417,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2\\n1 2') == 1\nassert solution('2 3\\n1 2\\n2 3\\n1 3\\n1 3') == 3\nassert solution('2 4\\n1 2\\n2 3\\n1 3\\n3 4\\n1 4\\n3 4\\n1 4\\n4 5\\n1 5\\n2 5\\n1 5\\n2 5') == 4\n'''"
    },
    {
        "number": 3417,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 1\n'''\n"
    },
    {
        "number": 3417,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2"
    },
    {
        "number": 3417,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 2\n1 2\n2 3''') == '1'\nassert solution('''3 4\n1 2\n2 3\n3 4\n1 4''') == '2'\nassert solution('''4 5\n1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n3 4\n4 5''') == '3'\nassert solution('''5 6\n1 2\n1 3\n1 4\n1 5\n1 6\n2 3\n2 4\n2 5\n3 4\n3 5\n4 5\n5 6''') == '4'\nassert solution('''3 3\n1 2\n2 3\n1 3''') == '2'\n"
    },
    {
        "number": 3417,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n1 2\") == \"1\"\nassert solution(\"1 2\\n2 1\") == \"2\"\nassert solution(\"1 2\\n2 2\") == \"0\"\nassert solution(\"1 2\\n2 3\\n1 3\") == \"2\"\nassert solution(\"1 2\\n2 3\\n3 1\") == \"0\"\n"
    },
    {
        "number": 3417,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"2 1\\n2 1\") == \"2\"\nassert solution(\"1 2\\n2 1\") == \"2\"\nassert solution(\"1 2\\n1 2\") == \"1\"\n"
    },
    {
        "number": 3417,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 1\n1 2''') == '1'\nassert solution('''2 2\n1 2\n2 4\n1 3\n2 3\n3 4''') == '4'\nassert solution('''2 5\n1 2\n2 4\n1 3\n2 3\n3 4\n1 4\n2 4\n4 5''') == '4'\n'''"
    },
    {
        "number": 3417,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 1\n1 2\n2 3\n2 4\n3 4\n4 5\n5 6''') == '6'\nassert solution('''1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n2 3\n2 4\n3 4\n3 5\n4 5\n5 6\n6 7\n7 8\n7 9\n7 10\n8 9\n9 10\n''') == '7'\nassert solution('''1 1\n1 2\n2 3\n2 4\n3 4\n4 5\n4 6\n5 6\n6 7\n7 8\n7 9\n7 10\n8 9\n9 10\n9 11\n9 12\n11 12\n''') == '8'\nassert solution('''1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n2 3\n2 4\n3 4\n3 5\n4 5\n4 6\n4 7\n5 6\n6 7\n6 8\n6 9\n6 10\n6 11\n6 12\n6 13\n6 14\n6 15\n7 8\n7 9\n7 10\n7 11\n7 12\n7 13\n7 14\n7 15\n7 16\n8 9\n8 10\n8 11\n8 12\n8 13\n8 14\n8 15\n8 16\n8 17\n9 10\n9 11\n9 12\n9 13\n9 14\n9 15\n9 16\n9 17\n10 11\n10 12\n10 13\n10 14\n10 15\n10 16\n10 17\n10 18\n11 12\n11 13\n11 14\n11 15\n11 16\n11 17\n11 18\n11 19\n12 13\n12 14\n12 15\n12 16\n12 17\n12 18\n12 19\n12 20\n12 21\n13 14\n13 15\n13 16\n13 17\n13 18\n13 19\n13 20\n13 21\n13 22\n13 23\n14 15\n14 16\n14 17\n14 18\n14 19\n14 20\n14 21\n14 22\n14 23\n14 24\n15 16\n15 17\n15 18\n15 19\n15 20\n15 21\n15 22\n15 23\n15 24\n15 25\n16 17\n16 18\n16 19\n16 20\n16 21\n16 22\n16 23\n16 24\n16 25\n16 26\n17 18\n17 19\n17 20\n17 21\n17 22\n17 23\n17 24\n17 25\n17 26\n17 27\n18 19\n18 20\n18 21\n18 22\n18 23\n18 24\n18 25\n18 26\n18 27\n18 28\n19 20\n19 21\n19 22\n19 23\n19 24\n19 25\n19 26\n19 27\n19 28\n20 21\n20 22\n20 23\n20 24\n20 25\n20 26\n20 27\n20 28\n20 29\n21 22\n21 23\n21 24\n21 25\n21 26\n21 27\n21 28\n21 29\n21 30\n22 23\n22 24\n22 25\n22 26\n22 27\n22 28\n22 29\n22 30\n22 31\n23 24\n23 25\n23 26\n23 27\n23 28\n23 29\n23 30\n23 31\n23 32\n24 25\n24 26\n24 27\n24 28\n24 29\n24 30\n24 31\n24 32\n24 33\n25 26\n25 27\n25 28\n25 29\n25 30\n25 31\n25 32\n25 33\n25 34\n26 27\n26 28\n26 29\n26 30\n26 31\n26 32\n26 33\n26 34\n26 35\n27 28\n27 29\n27 30\n27 31\n27 32\n27 33\n27 34\n27 35\n27 36\n28 29\n28 30\n28 31\n28 32\n28 33\n28 34\n28 35\n28 36\n28 37\n29 30\n29 31\n29 32\n29 33\n29 34\n29 35\n29 36\n29 37\n29 38\n30 31\n30 32\n30 33\n30 34\n30 35\n30 36\n30 37\n30 38\n30 39\n31 32\n31 33\n31 34\n31 35\n31 36\n31 37\n31 38\n31 39\n32 33\n32 34\n32 35\n32 36\n32 37\n32 38\n32 39\n32 40\n33 34\n33 35\n33 36\n33 37\n33 38\n33 39\n33 40\n33 41\n34 35\n34 36\n34 37\n34 38\n34 39\n34 40\n34 41\n34 42\n35 36\n35 37\n35 38\n35 39\n35 40\n35 41\n35 42\n35 43\n36 37\n36 38\n36 39\n36 40\n36 41\n36 42\n36 43\n36 44\n37 38\n37 39\n37 40\n37 41\n37 42\n37 43\n37 44\n37 45\n38 39\n38 40\n38 41\n38 42\n38 43\n38 44\n38 45\n38 46\n39 40\n39 41\n39 42\n39 43\n39 44\n39 45\n39 46\n39 47\n40 41\n40 42\n40 43\n40 44\n40 45\n40 46\n40 47\n40 48\n41 42\n41 43\n41 44\n41 45\n41 46\n41 47\n41 48\n41 49\n42 43\n42 44\n42 45\n42 46\n42 47\n42 48\n42 49\n42 50\n43 44\n43 45\n43 46\n43 47\n43 48\n43 49\n43 50\n43 51\n44 45\n44 46\n44 47\n44 48\n44 49\n44 50\n44 51\n44 52\n45 46\n45 47\n45 48\n45 49\n45 50\n45 51\n45 52\n45 53\n46 47\n46 48\n46 49\n46 50\n46 51\n46 52\n46 53\n46 54\n47 48\n47 49\n47 50\n47 51\n47 52\n47 53\n47 54\n47 55\n48 49\n48 50\n48 51\n48 52\n48 53\n48 54\n48 55\n49 50\n49 51\n49 52\n49 53\n49 54\n49 55\n49 56\n50 51\n50 52\n50 53\n50 54\n50 55\n50 56\n50 57\n51 52\n51 53\n51 54\n51 55\n51 56\n51 57\n51 58\n52 53\n52 54\n52 55\n52 56\n52 57\n52 58\n52 59\n53 54\n53 55\n53 56\n53 57\n53 58\n53 59\n53 60\n54 55\n54 56\n54 57\n54 58\n54 59\n54 60\n54 61\n55 56\n55 57\n55 58\n55 59\n55 60\n55 61\n55 62\n56 57\n56 58\n56 59\n56 60\n56 61\n56 62\n56 63\n57 58\n57 59\n57 60\n57 61\n57 62\n57 63\n57 64\n58 59\n58 60\n58 61\n58 62\n58 63\n58 64\n58 65\n59 60\n59 61\n59 62\n59 63\n59 64\n59 65\n59 66\n60 61\n60 62\n60 63\n60 64\n60 65\n60 66\n60 67\n61 62\n61 63\n61 64\n61 65\n61 66\n61 67\n61 68\n62 63\n62 64\n62 65\n62 66\n62 67\n62 68\n62 69\n63 64\n63 65\n63 66\n63 67\n63 68\n63 69\n63 70\n64 65\n64 66\n64 67\n64 68\n64 69\n64 70\n64 71\n65 66\n65 67\n65 68\n65 69\n65 70\n65 71\n65 72\n66 67\n66 68\n66 69\n66 70\n66 71\n66 72\n66 73\n67 68\n67 69\n67 70\n67 71\n"
    },
    {
        "number": 3418,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(2) == 45\nassert solution(3) == 110\nassert solution(4) == 243\nassert solution(5) == 866\nassert solution(10) == 10075\n"
    },
    {
        "number": 3418,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(2) == \"45\"\nassert solution(3) == \"55\"\nassert solution(4) == \"45\"\nassert solution(5) == \"45\"\nassert solution(6) == \"45\"\n"
    },
    {
        "number": 3418,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(2) == 45\nassert solution(5) == 945\nassert solution(100) == 945\nassert solution(1000) == 1000145\n'''"
    },
    {
        "number": 3418,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('2') == 45\nassert solution('5') == 210\nassert solution('1000') == 4304\nassert solution('4') == 70\n"
    },
    {
        "number": 3418,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(2) == 45\nassert solution(3) == 360\nassert solution(4) == 840\nassert solution(5) == 2160\nassert solution(10) == 69060\n"
    },
    {
        "number": 3418,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(2) == 45\nassert solution(3) == 120\nassert solution(4) == 456\nassert solution(5) == 784\nassert solution(6) == 1344\n"
    },
    {
        "number": 3418,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(2) == \"45\"\nassert solution(3) == \"243\"\nassert solution(4) == \"24345\"\nassert solution(5) == \"2434567\"\nassert solution(6) == \"243456789\"\n"
    },
    {
        "number": 3418,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2') == 45\nassert solution('3') == 900\nassert solution('4') == 49200\nassert solution('5') == 98640\nassert solution('6') == 93120\n"
    },
    {
        "number": 3418,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2') == '45'\nassert solution('5') == '4'\nassert solution('7') == '4'\nassert solution('10') == '4'\nassert solution('13') == '4'\n"
    },
    {
        "number": 3418,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2') == 45\nassert solution('1') == 1\nassert solution('5') == 125\nassert solution('6') == 216\nassert solution('7') == 343\n"
    },
    {
        "number": 3419,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1 1 1') == '1'\nassert solution('1 1 10') == '1'\nassert solution('1 1 1000') == '1'\nassert solution('1 10 1000') == '1'\n"
    },
    {
        "number": 3419,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 20 20''') == '4'\nassert solution('''5 21 20''') == '4'\nassert solution('''5 21 21''') == '2'\nassert solution('''5 21 21 2''') == '2'\nassert solution('''5 21 21 2 11''') == '4'\n"
    },
    {
        "number": 3419,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 20 20\n7 11 9 12 2''') == '4'\nassert solution('''5 20 20\n3 1 1 1 1\n1 1 1 1 1''') == '4'\nassert solution('''5 10 10\n9 8 7 6 5\n5 3 2 1 1''') == '3'\nassert solution('''5 10 10\n9 8 7 6 5\n6 4 5 3 2''') == '3'\nassert solution('''5 10 10\n9 8 7 6 5\n9 8 7 6 5''') == '5'\n"
    },
    {
        "number": 3419,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 20 20\\n7 11 9 12 2') == 4\n\"\"\"\n"
    },
    {
        "number": 3419,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"5\"\n\n\"\"\"\n"
    },
    {
        "number": 3419,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\" +\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\" +\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\" +\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\" +\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\" +\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\" +\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\" +\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\" +\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == '4'\nassert solution(\"2 5 10\" +\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\" +\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\" +\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\" +\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\" +\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\" +\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\" +\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\" +\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\" +\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == '4'\nassert solution(\"3 4 2\" +\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\" +\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\" +\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\" +\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\" +\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\" +\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\" +\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\" +\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\" +\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == '8'\nassert solution(\"2 2 2\" +\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\" +\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\" +\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\" +\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\" +\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\" +\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\" +\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\" +\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\" +\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == '8'\nassert solution(\"1 2 1\" +\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\" +\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\" +\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\" +\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\" +\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\" +\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\" +\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\" +\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\" +\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\" +\n\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == '8'\n"
    },
    {
        "number": 3419,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''5 20 20\n7 11 9 12 2''') == '4'\n\nassert solution(\n'''5 10 10\n7 11 9 12 2''') == '4'\n\nassert solution(\n'''5 10 10\n7 11 9 12 2''') == '4'\n\nassert solution(\n'''5 10 10\n7 11 9 12''') == '4'\n\nassert solution(\n'''5 10 10\n7 11 9 12''') == '4'"
    },
    {
        "number": 3419,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''5 20 20\n7 11 9 12 2''') == '4'\n\nassert solution(\n'''5 9 3\n1 2 3 4 5''') == '2'\n\nassert solution(\n'''8 8 8\n3 1 1 1 1 1 1''') == '2'\n\nassert solution(\n'''8 8 8\n1 1 1 1 1 1 1''') == '2'\n\nassert solution(\n'''8 8 8\n1 1 1 1 1 1 1''') == '2'"
    },
    {
        "number": 3419,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n'''\n'''\n"
    },
    {
        "number": 3419,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 20 20\\n7 11 9 12 2') == '4'\n\nprint(solution(input()))\n"
    },
    {
        "number": 3420,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2\\n1 2\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\"
    },
    {
        "number": 3420,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\"\n'''\n"
    },
    {
        "number": 3420,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3420,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\nassert solution(stdin) == stdin"
    },
    {
        "number": 3420,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"1 1\\n1 1\") == \"1\"\nassert solution(\"1 1\\n1 1\\n1 1\") == \"1\"\nassert solution(\"2\\n2\") == \"2\"\n"
    },
    {
        "number": 3420,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings') == '2'\nassert solution('2\\n2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings') == '2'\nassert solution('3\\n3\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings') == '3'\nassert solution('2\\n3\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings') == '3'\nassert solution('2\\n3\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings') == '3'\n"
    },
    {
        "number": 3420,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3420,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3420,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\n"
    },
    {
        "number": 3420,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n\") == \"2\"\nassert solution(\"4 4\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n\") == \"1\"\nassert solution(\"1 1\\na1 a\\na1 a\\na1 a\\n\") == \"2\"\nassert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n\") == \"1\"\nassert solution(\"1 2\\na1 a\\na1 a\\na1 a\\na1 a\\n\") == \"3\"\n"
    },
    {
        "number": 3421,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('01\\n01') == '1 2'\nassert solution('01\\n0101') == '1 2'\nassert solution('01\\n001') == '1 2'\nassert solution('01\\n0001') == '1 2'\nassert solution('01\\n010101') == '1 2'\n"
    },
    {
        "number": 3421,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"0 1\") == \"\"\nassert solution(\"0 1 0\") == \"\"\nassert solution(\"1 0 0\") == \"\"\n"
    },
    {
        "number": 3421,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n0\n
    },
    {
        "number": 3421,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') is None\nassert solution('0 0 0') is None\nassert solution('1 1 1') is None\nassert solution('1 0 1 1 0') == '2 1'\nassert solution('1 0 1 1 0 0 0 0') == '2 1'\n"
    },
    {
        "number": 3421,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3421,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('0 0 1 0 0') == '2 1'\nassert solution('1 1 1 0 0') == '1 1'\nassert solution('0 0 1 1 1') == '2 2'\nassert solution('1 0 1 0 1') == '2 1'\n"
    },
    {
        "number": 3421,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"01\") == \"2 1\"\nassert solution(\"0011\") == \"1 2\"\nassert solution(\"0001\") == \"0 2\"\nassert solution(\"101\") == \"0 1\"\nassert solution(\"10101010\") == \"0 10\"\n"
    },
    {
        "number": 3421,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('0 1') == ''\nassert solution('0 0') == ''\nassert solution('0 1 1') == ''\n"
    },
    {
        "number": 3421,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('0101') == '1'\nassert solution('01010000') == '1'\nassert solution('010100010') == '2'\nassert solution('0101000001000010') == '3'\n"
    },
    {
        "number": 3421,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2 1\"\n\nassert solution(input()) == \"2 2\"\n\nassert solution(input()) == \"1 0\"\n\nassert solution(input()) == \"0 1\"\n\nassert solution(input()) == \"0 2\""
    },
    {
        "number": 3422,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n4 1\n2123\n2 2\n21\n10\n2 2\n23\n12''') == '4 3'\nassert solution('''3\n4 1\n2123\n2 2\n21\n10\n2 2\n23\n12''') == '4 3'\nassert solution('''3\n3 1\n23\n10\n12\n1\n1\n2\n1''') == '3 1'\nassert solution('''2\n2 2\n23\n10\n12\n1\n1\n1''') == '2 2'\nassert solution('''2\n2 2\n23\n10\n12\n1\n1\n1''') == '2 2'\n"
    },
    {
        "number": 3422,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(INPUT))\n"
    },
    {
        "number": 3422,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''3\n4 1\n2123\n2 2\n21\n10\n2 2\n23\n12'''\n    ) == '4 3\\n2123\\n1012\\n2123\\n2233\\n2233\\n1111'\n\nassert solution(\n'''3\n4 1\n2123\n2 2\n21\n10\n2 2\n23\n12'''\n    ) == '4 3\\n2123\\n1012\\n2123\\n2233\\n2233\\n1111'\n\nassert solution(\n'''3\n4 1\n2123\n2 2\n21\n10\n2 2\n23\n12'''\n    ) == '4 3\\n2123\\n1012\\n2123\\n2233\\n2233\\n1111'\n"
    },
    {
        "number": 3422,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n4 1\n2123\n2 2\n21\n10\n2 2\n23\n12''') == '4 3'\nassert solution('''3\n4 1\n2123\n2 2\n21\n10\n2 2\n23\n12''') == '4 3'\nassert solution('''4\n4 1\n2123\n2 2\n21\n10\n2 2\n23\n12''') == '4 3'\nassert solution('''8\n8 4\n88888\n888888\n888888\n888888\n888888\n888888\n888888\n888888\n''') == '4 3'\nassert solution('''8\n4 1\n1 2\n4 4\n14\n4 4\n14\n14\n14\n14\n''') == '4 3'\n"
    },
    {
        "number": 3422,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\\n\") == \"4 3\\n2123\\n1012\\n2123\\n2233\\n2233\\n1111\"\nassert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\\n\") == \"4 3\\n2123\\n1012\\n2123\\n2233\\n2233\\n1111\"\nassert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\\n\") == \"4 3\\n2123\\n1012\\n2123\\n2233\\n2233\\n1111\"\nassert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\\n\") == \"4 3\\n2123\\n1012\\n2123\\n2233\\n2233\\n1111\"\nassert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\\n\") == \"4 3\\n2123\\n1012\\n2123\\n2233\\n2233\\n1111\"\n"
    },
    {
        "number": 3422,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n2 2\n''') == '2-1'\nassert solution('''2\n3 2\n1 2\n''') == '2-2'\nassert solution('''1\n10\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n10\n1 1\n''') == '1-3'\nassert solution('''1\n10\n1000\n1001\n1002\n1003\n1004\n1005\n1006\n1007\n1008\n1009\n10\n1 1\n''') == '10-1'\nassert solution('''2\n3 2\n101\n100\n102\n101\n102\n102\n103\n103\n103\n104\n104\n104\n105\n105\n105\n106\n106\n107\n107\n107\n108\n108\n108\n109\n109\n10\n1 1\n''') == '10-2'\n"
    },
    {
        "number": 3422,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n----\\n2233\\n2233\\n1111\\n\"\nprint('Passed!')\n\"\"\""
    },
    {
        "number": 3422,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n2\n4 1\n2123\n2 2\n21\n10\n2 2\n23\n12\n''') == '4 3\\n2123\\n1012\\n2123\\n'\nassert solution('''\n3\n4 1\n2123\n2 2\n21\n10\n2 2\n23\n12\n''') == '4 3\\n2123\\n1012\\n2123\\n'\nassert solution('''\n4\n4 1\n2123\n2 2\n21\n10\n2 2\n23\n12\n''') == '4 3\\n2123\\n1012\\n2123\\n'\nassert solution('''\n5\n4 1\n2123\n2 2\n21\n10\n2 2\n23\n12\n''') == '4 3\\n2123\\n1012\\n2123\\n'\nassert solution('''\n6\n4 1\n2123\n2 2\n21\n10\n2 2\n23\n12\n''') == '4 3\\n2123\\n1012\\n2123\\n'\n"
    },
    {
        "number": 3422,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n4 1\n2123\n2 2\n21\n10\n2 2\n23\n12''') == '4 3\\n2123\\n1012\\n2123\\n----\\n2233\\n2233\\n1111'\nassert solution('''3\n4 1\n2123\n2 2\n21\n10\n2 2\n23\n12''') == '4 3\\n2123\\n1012\\n2123\\n----\\n2233\\n2233\\n1111'\nassert solution('''4\n4 1\n2123\n2 2\n21\n10\n2 2\n23\n12''') == '4 3\\n2123\\n1012\\n2123\\n----\\n2233\\n2233\\n1111'\nassert solution('''8\n4 1\n2123\n2 2\n21\n10\n2 2\n23\n12''') == '4 3\\n2123\\n1012\\n2123\\n----\\n2233\\n2233\\n1111'\nassert solution('''2\n8 2\n2999999\n99999\n9999\n99999\n99999\n9999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n99999\n"
    },
    {
        "number": 3422,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\\n') == '4 3\\n2123\\n1012\\n2123\\n2233\\n2233\\n1111'\nassert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n') == '2233\\n2233\\n1111\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n2233\\n22"
    },
    {
        "number": 3423,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\n\nprint(solution(open(\"input.txt\").read()))\n"
    },
    {
        "number": 3423,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\nlibattr\\nlibattr\\n') == 'atk'\nassert solution('14\\nlibattr\\nlibattr\\nlibattr\\nvim-X11\\nvim-common\\ngtk2\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr"
    },
    {
        "number": 3423,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('libattr\\nvim-X11 vim-common gtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2 libtiff libjpeg\\n atk\\npango xorg-x11-libs freetype glib2\\nglib2\\nzlib libjpeg\\nxorg-x11-libs grep freetype\\ngrep pcre\\npcre\\nfreetype\\n3\\nemacs xorg-x11 lisp\\nxorg-x11\\nlisp emacs\\n0\\n') == 'atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\ntiff\\ngtk2\\nvim-X11'\nassert solution('libattr\\nvim-X11 vim-common gtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2\\nlibtiff libjpeg\\n atk\\npango xorg-x11-libs freetype glib2\\nglib2\\nzlib libjpeg\\nxorg-x11-libs grep freetype\\ngrep pcre\\npcre\\nfreetype\\n3\\nemacs xorg-x11 lisp\\nxorg-x11\\nlisp emacs\\n0\\n') == 'atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\ntiff\\ngtk2\\nvim-X11'\nassert solution('libattr\\nvim-X11 vim-common gtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2\\nlibtiff libjpeg\\n atk\\npango xorg-x11-libs freetype glib2\\nglib2\\nzlib libjpeg\\nxorg-x11-libs grep freetype\\ngrep pcre\\npcre\\nfreetype\\n3\\nemacs xorg-x11 lisp\\nxorg-x11\\nlisp emacs\\n0\\n') == 'atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\ntiff\\ngtk2\\nvim-X11'\nassert solution('libattr\\nvim-X11 vim-common gtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2\\nlibtiff libjpeg\\n atk\\npango xorg-x11-libs freetype glib2\\nglib2\\nzlib libjpeg\\nxorg-x11-libs grep freetype\\ngrep pcre\\npcre\\nfreetype\\n3\\nemacs xorg-x11 lisp\\nxorg-x11\\nlisp emacs\\n0\\n') == 'atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\ntiff\\ngtk2\\nvim-X11'\nassert solution('libattr\\nvim-X11 vim-common gtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2\\nlibtiff libjpeg\\n atk\\npango xorg-x11-libs freetype glib2\\nglib2\\nzlib libjpeg\\nxorg-x11-libs grep freetype\\ngrep pcre\\npcre\\nfreetype\\n3\\nemacs xorg-x11 lisp\\nxorg-x11\\nlisp emacs\\n0\\n') == 'atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\ntiff\\ngtk2\\nvim-X11'\n"
    },
    {
        "number": 3423,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('libattr\\nvim-X11 vim-common gtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2\\nlibtiff zlib libjpeg\\natk\\npango xorg-x11-libs freetype glib2\\nglib2\\nzlib\\nlibjpeg\\nxorg-x11-libs grep freetype\\ngrep pcre\\npcre\\nfreetype\\n3\\nemacs xorg-x11 lisp\\nxorg-x11\\nlisp emacs') == 'atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2\\nvim-X11'\nassert solution('libattr\\nvim-X11 vim-common gtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2\\nlibtiff zlib libjpeg\\natk\\npango xorg-x11-libs freetype glib2\\nglib2\\nzlib\\nlibjpeg\\nxorg-x11-libs grep freetype\\ngrep pcre\\npcre\\nfreetype\\n3\\nemacs xorg-x11 lisp\\nxorg-x11\\nlisp emacs') == 'atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2\\nvim-X11'\nassert solution('libattr\\nvim-X11 vim-common gtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2\\nlibtiff zlib libjpeg\\natk\\npango xorg-x11-libs freetype glib2\\nglib2\\nzlib\\nlibjpeg\\nxorg-x11-libs grep freetype\\ngrep pcre\\npcre\\nfreetype\\n3\\nemacs xorg-x11 lisp\\nxorg-x11\\nlisp emacs') == 'atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2\\nvim-X11'\nassert solution('libattr\\nvim-X11 vim-common gtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2\\nlibtiff zlib libjpeg\\natk\\npango xorg-x11-libs freetype glib2\\nglib2\\nzlib\\nlibjpeg\\nxorg-x11-libs grep freetype\\ngrep pcre\\npcre\\nfreetype\\n3\\nemacs xorg-x11 lisp\\nxorg-x11\\nlisp emacs') == 'atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2\\nvim-X11'\nassert solution('libattr\\nvim-X11 vim-common gtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2\\nlibtiff zlib libjpeg\\natk\\npango xorg-x11-libs freetype glib2\\nglib2\\nzlib\\nlibjpeg\\nxorg-x11-libs grep freetype\\ngrep pcre\\npcre\\nfreetype\\n3\\nemacs xorg-x11 lisp\\nxorg-x11\\nlisp emacs') == 'atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2\\nvim-X11'\n"
    },
    {
        "number": 3423,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n14\nlibattr\nvim-X11 vim-common gtk2 libattr\nvim-common\ngtk2 libtiff atk pango glib2\nlibtiff zlib libjpeg\natk\npango xorg-x11-libs freetype glib2\nglib2\nzlib\nlibjpeg\nxorg-x11-libs grep freetype\ngrep pcre\npcre\nfreetype\n3\nemacs xorg-x11 lisp\nxorg-x11\nlisp emacs\n0\n''') == '''\natk\nfreetype\nglib2\nlibattr\nlibjpeg\npcre\ngrep\nvim-common\nxorg-x11-libs\npango\nzlib\nlibtiff\ngtk2\nvim-X11\n'''\n\nassert solution('''\n14\nlibattr\nvim-X11 vim-common gtk2 libattr\nvim-common\ngtk2 libtiff atk pango glib2\nlibtiff zlib libjpeg\natk\npango xorg-x11-libs freetype glib2\nglib2\nzlib\nlibjpeg\nxorg-x11-libs grep freetype\ngrep pcre\npcre\nfreetype\n3\nemacs xorg-x11 lisp\nxorg-x11\nlisp emacs\n0\n''') == '''\nlibattr\nfreetype\nglib2\nlibattr\nlibjpeg\npcre\ngrep\nvim-common\nxorg-x11-libs\npango\nzlib\nlibtiff\ngtk2\nvim-X11\n'''\n\nassert solution('''\n14\nlibattr\nvim-X11 vim-common gtk2 libattr\nvim-common\ngtk2 libtiff atk pango glib2\nlibtiff zlib libjpeg\natk\npango xorg-x11-libs freetype glib2\nglib2\nzlib\nlibjpeg\nxorg-x11-libs grep freetype\ngrep pcre\npcre\nfreetype\n3\nemacs xorg-x11 lisp\nxorg-x11\nlisp emacs\n0\n''') == '''\nvim-X11\ngtk2\nfreetype\nlibattr\nlibjpeg\nglib2\npcre\nlibtiff\nemacs\nlibtiff\nglib2\npango\nxorg-x11-libs\nzlib\nlibattr\nzlib\natk\nfreetype\ngrep\n'''\n\nassert solution('''\n14\nlibattr\nvim-X11 vim-common gtk2 libattr\nvim-common\ngtk2 libtiff atk pango glib2\nlibtiff zlib libjpeg\natk\npango xorg-x11-libs freetype glib2\nglib2\nzlib\nlibjpeg\nxorg-x11-libs grep freetype\ngrep pcre\npcre\nfreetype\n3\nemacs xorg-x11 lisp\nxorg-x11\nlisp emacs\n0\n''') == '''\npcre\ngtk2\nfreetype\nlibattr\nlibjpeg\nglib2\npango\nzlib\nlibtiff\natk\nemacs\nlibtiff\nglib2\nlibattr\nzlib\nvim-X11\n'''\n\nassert solution('''\n14\nlibattr\nvim-X11 vim-common gtk2 libattr\nvim-common\ngtk2 libtiff atk pango glib2\nlibtiff zlib libjpeg\natk\npango xorg-x11-libs freetype glib2\nglib2\nzlib\nlibjpeg\nxorg-x11-libs grep freetype\ngrep pcre\npcre\nfreetype\n3\nemacs xorg-x11 lisp\nxorg-x11\nlisp emacs\n0\n''') == '''\ngtk2\nlibattr\nlibjpeg\nglib2\nlibtiff\npcre\nfreetype\nemacs\nlibtiff\nglib2\npango\nzlib\nvim-X11\n'''"
    },
    {
        "number": 3423,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('12\\n0\\n1\\n2\\n0\\n2\\n2\\n1\\n0\\n0\\n0\\n2\\n1\\n2\\n1\\n1\\n0\\n0\\n0\\n1\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n"
    },
    {
        "number": 3423,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('\\t') == 'cannot be ordered'\nassert solution('a\\n\\n') == 'cannot be ordered'\nassert solution('a\\n\\n\\t\\t\\t\\t\\n') == 'cannot be ordered'\nassert solution('a\\n\\n\\t\\t\\t\\n\\n') == 'cannot be ordered'\n"
    },
    {
        "number": 3423,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(sys.stdin.read()))\n\n\"\"\"\n\n\n\n\"\"\"\n\nGiven two strings s and t of equal length, the Hamming distance between s and t, denoted dH(s,t), is the number of corresponding symbols that differ in s and t. See Figure 2.\n\nGiven: Two DNA strings s and t of equal length (not exceeding 1 kbp).\nReturn: The Hamming distance dH(s,t).\n\nSample Dataset:\nGATTACA\nTGTTACG\n\nSample Output:\n1\n\"\"\""
    },
    {
        "number": 3423,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"1\nlibattr\nvim-X11 vim-common gtk2 libattr\nvim-common\ngtk2 libtiff atk pango glib2\nlibtiff zlib libjpeg\natk\npango xorg-x11-libs freetype glib2\nglib2\nzlib libjpeg\nlibjpeg\nxorg-x11-libs grep freetype\ngrep pcre\npcre\nfreetype\n3\nemacs xorg-x11 lisp\nxorg-x11\nlisp emacs\n0\n\"\"\") == \"\"\"atk\nfreetype\nglib2\nlibattr\nlibjpeg\npcre\ngrep\nvim-common\nxorg-x11-libs\npango\nzlib\nlibtiff\ngtk2\nvim-X11\n\"\"\"\nassert solution(\"\"\"\n8\nlibattr\nvim-X11 vim-common gtk2 libattr\nvim-common\ngtk2 libtiff atk pango glib2\nlibtiff zlib libjpeg\natk\npango xorg-x11-libs freetype glib2\nglib2\nzlib libjpeg\nlibjpeg\nxorg-x11-libs grep freetype\ngrep pcre\npcre\nfreetype\n3\nemacs xorg-x11 lisp\nxorg-x11\nlisp emacs\n0\n\"\"\") == \"\"\"libattr\nvim-common\ngtk2\nlibtiff\nglib2\nlibjpeg\nzlib\nlibjpeg\npcre\nfreetype\nxorg-x11-libs\npango\ngrep\nemacs\nlisp\ngrep\nlibtiff\nemacs\natk\nxorg-x11\n0\n\"\"\"\nassert solution(\"\"\"\n0\n\"\"\") == \"\"\"cannot be ordered\n\"\"\"\nassert solution(\"\"\"\n1\nvim-X11 vim-common gtk2 libattr\nvim-common\ngtk2 libtiff atk pango glib2\nlibtiff zlib libjpeg\natk\npango xorg-x11-libs freetype glib2\nglib2\nzlib libjpeg\nlibjpeg\nxorg-x11-libs grep freetype\ngrep pcre\npcre\nfreetype\n3\nemacs xorg-x11 lisp\nxorg-x11\nlisp emacs\n0\n\"\"\") == \"\"\"libattr\nvim-common\ngtk2\nlibtiff\nglib2\nlibjpeg\nzlib\nlibjpeg\npcre\nfreetype\nxorg-x11-libs\npango\ngrep\nemacs\nlisp\ngrep\nlibtiff\nemacs\natk\nxorg-x11\n0\n\"\"\""
    },
    {
        "number": 3423,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n3\nlibattr\nvim-X11 vim-common gtk2 libattr\nvim-common\ngtk2 libtiff atk pango glib2\nlibtiff zlib libjpeg\natk\npango xorg-x11-libs freetype glib2\nglib2\nzlib\nlibjpeg\nxorg-x11-libs grep freetype\ngrep pcre\npcre\nfreetype\n3\nemacs xorg-x11 lisp\nxorg-x11\nlisp emacs\n0\n''') == '''\natk\nfreetype\nglib2\nlibattr\nlibjpeg\npcre\ngrep\nvim-common\nxorg-x11-libs\npango\nzlib\nlibtiff\ngtk2\nvim-X11\n'''\n\nassert solution('''\n1\nlibx\n''') == 'libx'\nassert solution('''\n3\nlibx\nliby\nlibz\n''') == 'cannot be ordered'\nassert solution('''\n1\nlibx\n''') == 'cannot be ordered'\nassert solution('''\n1\nlibx\n''') == 'cannot be ordered'\n"
    },
    {
        "number": 3424,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"32 20\") == \"16\"\nassert solution(\"16 32\") == \"16\"\nassert solution(\"15 32\") == \"16\"\nassert solution(\"16 15\") == \"16\"\nassert solution(\"10 20\") == \"16\"\n"
    },
    {
        "number": 3424,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"32 20\") == \"16\"\nassert solution(\"32 300\") == \"16\"\nassert solution(\"15 1\") == \"16\"\nassert solution(\"10 2\") == \"16\"\nassert solution(\"9 1\") == \"16\"\n"
    },
    {
        "number": 3424,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('32 20') == '16'"
    },
    {
        "number": 3424,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 3424,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('32 20') == '16'\n"
    },
    {
        "number": 3424,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"16\"\n\n--- OR ----\n\nassert \"16\" == solution(stdin)"
    },
    {
        "number": 3424,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == None\nassert solution('a') == None\nassert solution('1 1') == None\nassert solution('1 1 2') == None\nassert solution('2 2 3') == None\n"
    },
    {
        "number": 3424,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"16\"\nassert solution(\"20 22\") == \"16\"\nassert solution(\"7 100\") == \"7\"\nassert solution(\"7 101\") == \"7\"\nassert solution(\"7 111\") == \"7\"\n"
    },
    {
        "number": 3424,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == '16'\n\"\"\""
    },
    {
        "number": 3424,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('32 20') == '16'\nassert solution('60 100') == '16'\nassert solution('512 100') == '16'\nassert solution('10000000 100') == '16'\nassert solution('10000000') == '2'\n"
    },
    {
        "number": 3425,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3\n..\n..''') == '5'\nassert solution('''3 4\n"
    },
    {
        "number": 3425,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 4\n....\n.#.#\n....''') == '5 13'\n\nassert solution('''5 1\n.......''') == '5 1'\n\nassert solution('''3 5\n.##...\n"
    },
    {
        "number": 3425,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n3 4\n....\n.#.#\n....\n''') == '5 13'\nassert solution('''\n3 4\n..#.#\n.#.#.\n.#.#.\n''') == '6 1'\nassert solution('''\n5 5\n...#.\n....#\n....#\n....#\n...#.\n''') == '5 13'\nassert solution('''\n3 5\n....#\n.#...\n.#...\n.#...\n''') == '7 6'\nassert solution('''\n3 5\n.##.#\n.#.#.\n.#.#.\n.#.#.\n.#.#.\n''') == '8 2'\n"
    },
    {
        "number": 3425,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 4\n....\n.#.#\n....\n''') == '5 13'\nassert solution('''5 1\n"
    },
    {
        "number": 3425,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 4\") == \"5 13\"\nassert solution(\"3 1\") == \"5 0\"\nassert solution(\"2 4\") == \"2 4\"\nassert solution(\"2 2\") == \"0 1\"\nassert solution(\"2 2\") == \"0 1\"\n"
    },
    {
        "number": 3425,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 4\\n....\\n.#.#\\n....') == '5 13'\nassert solution('2 1\\n#') == '0 1'\nassert solution('1 1\\n#') == '0 0'\nassert solution('1 2\\n#') == '0 1'\nassert solution('2 2\\n###') == '2 1'\n"
    },
    {
        "number": 3425,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n5 4\n....\n.#.#\n....\n''') == '5 13'\nassert solution('''\n5 3\n...\n...\n...\n''') == '0 1'\nassert solution('''\n5 3\n.###\n...#\n"
    },
    {
        "number": 3425,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8 4') == '5 13'\nassert solution('4 4') == '3 9'\nassert solution('3 5') == '3 6'\nassert solution('4 1') == '3 9'\nassert solution('4 4') == '5 13'\n"
    },
    {
        "number": 3425,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n....\\n.#.#\\n....\") == \"5 13\"\nassert solution(\"4 4\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n...."
    },
    {
        "number": 3425,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 3\n....\n.#.#\n....''') == \"5 13\"\nassert solution('''3 4\n...\n.#.\n...''') == \"5 13\"\nassert solution('''3 4\n....\n.###\n...#''') == \"5 13\"\nassert solution('''3 4\n....\n.#.#\n....''') == \"5 13\"\nassert solution('''3 4\n....\n...#\n...#''') == \"5 13\"\n"
    },
    {
        "number": 3426,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0') == '5'\n\"\"\""
    },
    {
        "number": 3426,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\n\"\"\"\n\nMy Analysis\n\n\"\"\""
    },
    {
        "number": 3426,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n3 3\n1 2 5 1\n2 3 3 1\n3 1? 0\n\"\"\"\n) == '5'\n\nassert solution(\n\"\"\"\n6 6\n1 2 4 7 3 6\n2 3 4 6 5 6\n3 4 5 6 6 5\n4 5 6 7 5 6\n5 6 7 5 6 7\n6 7? 5?\n\"\"\"\n) == '21'\n\nassert solution(\n\"\"\"\n10 10\n1 2 4 7 3 6 8 9 10\n2 3 4 6 5 6 7 8 9 10\n3 4 5 6 6 7 8 9 10 1\n4 5 6 7 6 8 9 10 1 2\n5 6 7 8 7 9 10 1 2 3\n6 7 8 9 9 10 1 2 3 4\n7 8 9 10 1 2 3 4 5 6\n8 9 10 1 2 3 4 5 6 7\n9 10 1 2 3 4 5 6 7 8\n10 1 2 3 4 5 6 7 8 9\n\"\"\"\n) == '28'\n"
    },
    {
        "number": 3426,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0') == '5'\nassert solution('5\\n3\\n2 1 3 1\\n2 3 1? 0\\n3 1? 0\\n3 2 1 1\\n3 3 1 1\\n4 1? 0\\n4 2 1 1\\n5 1? 0\\n5 2 1 1\\n') == '6'\nassert solution('6\\n4\\n1 2 3 4 1\\n2 3 3 4 1\\n3 1? 0\\n3 4 1? 0\\n4 1? 0\\n4 5 1? 0\\n5 1? 0\\n5 5 1? 0\\n5 6 1? 0') == '7'\nassert solution('6\\n4\\n1 2 3 4 1\\n2 3 3 4 1\\n3 1? 0\\n3 4 1? 0\\n4 1? 0\\n4 5 1? 0\\n5 1? 0\\n5 5 1? 0\\n5 6 1? 0\\n6 1? 0') == '8'\nassert solution('6\\n4\\n1 2 3 4 1\\n2 3 3 4 1\\n3 1? 0\\n3 4 1? 0\\n4 1? 0\\n4 5 1? 0\\n5 1? 0\\n5 5 1? 0\\n5 6 1? 0\\n6 1? 0\\n6 5 1? 0') == '8'\n"
    },
    {
        "number": 3426,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(SAMPLE_INPUT_1) == SAMPLE_OUTPUT_1\nassert solution(SAMPLE_INPUT_2) == SAMPLE_OUTPUT_2\nassert solution(SAMPLE_INPUT_3) == SAMPLE_OUTPUT_3\nassert solution(SAMPLE_INPUT_4) == SAMPLE_OUTPUT_4\nassert solution(SAMPLE_INPUT_5) == SAMPLE_OUTPUT_5\n"
    },
    {
        "number": 3426,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(open('tests/05').read()) == '5'\n\"\"\"\n"
    },
    {
        "number": 3426,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(''.join(map(str, [3, 3]))) == ''.join(map(str, [5]))\nassert solution(''.join(map(str, [3, 5, 3, 5]))) == ''.join(map(str, [5, 5, 5, 5]))\nassert solution(''.join(map(str, [3, 1, 3, 3, 3]))) == ''.join(map(str, [2, 3, 2, 3, 2]))\nassert solution(''.join(map(str, [3, 1, 2, 1, 2, 1, 2, 1, 2, 1]))) == ''.join(map(str, [4, 3, 4, 4, 4, 4, 4, 4, 4, 4]))\nassert solution(''.join(map(str, [3, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1]))) == ''.join(map(str, [4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]))\n"
    },
    {
        "number": 3426,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n'\n'1 2 5 1\\n'\n'2 3 3 1\\n'\n'3 1? 0\\n'\n'4 5??\\n'\n'5???\\n'\n'6 7??\\n'\n'7???\\n'\n'8 9??\\n'\n'9???\\n'\n'10 11??\\n'\n'11???\\n') == '5\\n'\nassert solution('2\\n'\n'1 2 1\\n'\n'2 1 1\\n') == '1\\n'\n\"\"\"\n\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 3426,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(dedent(\"\"\"\n    4 4\n    1 2 3 4\n    2 3 4 3\n    3 4 2 1\n    4? 0\n    \"\"\").strip()) == dedent(\"\"\"\n    5\n    \"\"\").strip()\n\nassert solution(dedent(\"\"\"\n    3 4\n    1 2 3 4\n    2 3 4 3\n    3 4 2 1\n    4? 0\n    \"\"\").strip()) == dedent(\"\"\"\n    6\n    \"\"\").strip()\n\nassert solution(dedent(\"\"\"\n    4 4\n    1 2 3 4\n    2 3 4 3\n    3 4 2 1\n    4? 0\n    \"\"\").strip()) == dedent(\"\"\"\n    5\n    \"\"\").strip()\n\nassert solution(dedent(\"\"\"\n    3 3\n    1 2 3 4\n    2 3 4 3\n    3 4 2 1\n    4? 0\n    \"\"\").strip()) == dedent(\"\"\"\n    5\n    \"\"\").strip()\n\nassert solution(dedent(\"\"\"\n    4 4\n    1 2 3 4\n    2 3 4 3\n    3 4 2 1\n    4? 0\n    \"\"\").strip()) == dedent(\"\"\"\n    5\n    \"\"\").strip()"
    },
    {
        "number": 3426,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '5'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3427,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 2\\n-1 1\\n-1 0\\n0 1\\n-1 -1') == '3'\nassert solution('1 2\\n-1 -1\\n0 1\\n-1 -1\\n0 2\\n-1 0') == '2'\nassert solution('2 3\\n-1 -1\\n-1 -1\\n-1 -1') == '3'\nassert solution('3 4\\n-1 -1\\n-1 -1\\n-1 -1') == '3'\nassert solution('2 3\\n-1 -1\\n-1 -1\\n-1 -1') == '3'\n"
    },
    {
        "number": 3427,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2') == 0\nassert solution('3 4') == 1\nassert solution('-1 -1') == 1\nassert solution('0 1') == 1\nassert solution('1 2') == 1\n"
    },
    {
        "number": 3427,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 3\n-1 0\n-1 1\n0 1\n''') == '0'\nassert solution('''4 2\n1 2\n1 3\n2 3\n''') == '2'\nassert solution('''5 2\n0 1\n1 2\n2 3\n3 4\n4 5\n''') == '4'\nassert solution('''5 3\n1 2\n1 3\n2 3\n3 4\n4 5\n5 6\n''') == '2'\nassert solution('''7 5\n-1 0\n0 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 3\n3 4\n4 5\n''') == '4'\n"
    },
    {
        "number": 3427,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 3427,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(open(\"input.txt\").read()))\n\n-----Note-----\nFor a description of the problem, please refer to the README.md file of this repository.\n\n-----Time Limit-----\n1 second\n\n-----Memory Limit-----\n64 MB\n\n-----Difficulty-----\nMedium\n\n-----URL-----\nhttps://www.codewars.com/kata/5597b9e2f7eea3d73c0001b0\n\"\"\""
    },
    {
        "number": 3427,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 1\\n-1 2\\n-1 0') == '0'\nassert solution('3 4\\n-1 2\\n-1 1\\n0 1') == '3'\nassert solution('10 10\\n-1 3\\n-1 2\\n-1 6\\n-1 5\\n-1 4\\n-1 7\\n-1 8\\n-1 9\\n-1 10\\n-1 11\\n-1 12\\n-1 13\\n-1 14\\n-1 15\\n-1 16\\n-1 17\\n-1 18\\n-1 19\\n-1 20\\n-1 21\\n-1 22\\n-1 23\\n-1 24\\n-1 25\\n-1 26\\n-1 27\\n-1 28\\n-1 29\\n-1 30\\n-1 31\\n-1 32\\n-1 33\\n-1 34\\n-1 35\\n-1 36\\n-1 37\\n-1 38\\n-1 39\\n-1 40\\n-1 41\\n-1 42\\n-1 43\\n-1 44\\n-1 45\\n-1 46\\n-1 47\\n-1 48\\n-1 49\\n-1 50\\n-1 51\\n-1 52\\n-1 53\\n-1 54\\n-1 55\\n-1 56\\n-1 57\\n-1 58\\n-1 59\\n-1 60\\n-1 61\\n-1 62\\n-1 63\\n-1 64\\n-1 65\\n-1 66\\n-1 67\\n-1 68\\n-1 69\\n-1 70\\n-1 71\\n-1 72\\n-1 73\\n-1 74\\n-1 75\\n-1 76\\n-1 77\\n-1 78\\n-1 79\\n-1 80\\n-1 81\\n-1 82\\n-1 83\\n-1 84\\n-1 85\\n-1 86\\n-1 87\\n-1 88\\n-1 89\\n-1 90\\n-1 91\\n-1 92\\n-1 93\\n-1 94\\n-1 95\\n-1 96\\n-1 97\\n-1 98\\n-1 99\\n-1 100\\n-1 101\\n-1 102\\n-1 103\\n-1 104\\n-1 105\\n-1 106\\n-1 107\\n-1 108\\n-1 109\\n-1 110\\n-1 111\\n-1 112\\n-1 113\\n-1 114\\n-1 115\\n-1 116\\n-1 117\\n-1 118\\n-1 119\\n-1 120\\n-1 121\\n-1 122\\n-1 123\\n-1 124\\n-1 125\\n-1 126\\n-1 127\\n-1 128\\n-1 129\\n-1 130\\n-1 131\\n-1 132\\n-1 133\\n-1 134\\n-1 135\\n-1 136\\n-1 137\\n-1 138\\n-1 139\\n-1 140\\n-1 141\\n-1 142\\n-1 143\\n-1 144\\n-1 145\\n-1 146\\n-1 147\\n-1 148\\n-1 149\\n-1 150\\n-1 151\\n-1 152\\n-1 153\\n-1 154\\n-1 155\\n-1 156\\n-1 157\\n-1 158\\n-1 159\\n-1 160\\n-1 161\\n-1 162\\n-1 163\\n-1 164\\n-1 165\\n-1 166\\n-1 167\\n-1 168\\n-1 169\\n-1 170\\n-1 171\\n-1 172\\n-1 173\\n-1 174\\n-1 175\\n-1 176\\n-1 177\\n-1 178\\n-1 179\\n-1 180\\n-1 181\\n-1 182\\n-1 183\\n-1 184\\n-1 185\\n-1 186\\n-1 187\\n-1 188\\n-1 189\\n-1 190\\n-1 191\\n-1 192\\n-1 193\\n-1 194\\n-1 195\\n-1 196\\n-1 197\\n-1 198\\n-1 199\\n-1 200\\n-1 201\\n-1 202\\n-1 203\\n-1 204\\n-1 205\\n-1 206\\n-1 207\\n-1 208\\n-1 209\\n-1 210\\n-1 211\\n-1 212\\n-1 213\\n-1 214\\n-1 215\\n-1 216\\n-1 217\\n-1 218\\n-1 219\\n-1 220\\n-1 221\\n-1 222\\n-1 223\\n-1 224\\n-1 225\\n-1 226\\n-1 227\\n-1 228\\n-1 229\\n-1 230\\n-1 231\\n-1 232\\n-1 233\\n-1 234\\n-1 235\\n-1 236\\n-1 237\\n-1 238\\n-1 239\\n-1 240\\n-1 241\\n-1 242\\n-1 243\\n-1 244\\n-1 245\\n-1 246\\n-1 247\\n-1 248\\n-1 249\\n-1 250\\n-1 251\\n-1 252\\n-1 253\\n-1 254\\n-1 255\\n-1 256\\n-1 257\\n-1 258\\n-1 259\\n-1 260\\n-1 261\\n-1 262\\n-1 263\\n-1 264\\n-1 265\\n-1 266\\n-1 267\\n-1 268"
    },
    {
        "number": 3427,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0 0\") == 0\nassert solution(\"1 2\") == 1\nassert solution(\"-1 1\") == 2\nassert solution(\"2 1\") == 3\nassert solution(\"2 2\") == 1\n"
    },
    {
        "number": 3427,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 3\n-1 0\n-1 1\n0 1\n''') == '3'\nassert solution('''5 10\n1 2\n2 3\n3 4\n4 5\n4 6\n''') == '0'\nassert solution('''5 3\n1 2\n2 3\n3 4\n4 5\n''') == '4'\nassert solution('''3 3\n-1 0\n-1 1\n0 1\n''') == '0'\nassert solution('''9 6\n-1 0\n-1 1\n-1 2\n-1 3\n-1 4\n-1 5\n-1 6\n-1 7\n-1 8\n-1 9\n''') == '8'\n"
    },
    {
        "number": 3427,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 0') == '0'\nassert solution('2 3') == '0'\nassert solution('2 3') == '0'\nassert solution('5 4') == '0'\nassert solution('1 2') == '1'\n"
    },
    {
        "number": 3427,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(open(\"test_1\").read()) == '0'\nassert solution(open(\"test_2\").read()) == '3'\nassert solution(open(\"test_3\").read()) == '2'\n\n-----Binary Search-----\nNote that the order of the rooms in the input does not matter.\n\n-----Idea-----\n\nLet us say we have a door that connects room $u$ and room $v$. We can safely replace the door with another door such that the maximum number of rooms that can be reached from outside the building is maximized if we replace that door with a door that connects room $u$ and room $v$. Let $w$ be the maximum number of rooms that can be reached from outside the building if we replace this door with a door that connects room $u$ and room $v$. Then $w \\le \\max\\{u,v}$ and $w \\ge \\min\\{u,v\\}$.\n\nIf $w$ is the maximum number of rooms that can be reached from outside the building, then the maximum number of rooms that can be protected by a single high-security door is the maximum number of rooms that can be reached from outside the building if we replace the door between room $u$ and room $v$ with a door that connects room $u$ and room $v$.\n\n----Algorithm----\n\n1. Find the maximum number of rooms that can be reached from outside the building by replacing a door with a door that connects room $u$ and room $v$.\n2. Now, find the maximum number of rooms that can be reached from outside the building by replacing a door with a door that connects room $u$ and room $v$.\n3. Repeat the above process until the above two values become equal.\n4. If the number of rooms that can be reached from outside the building is greater than the previous value, then the answer is the new value.\n5. Repeat the above process until the above two values become equal.\n\n-----Complexity Analysis-----\n\nTime Complexity:\n\nSince the algorithm runs in the worst case for each of the $N$ rooms to be connected to the outside of the building, the time complexity is linear, O(N).\n\nSpace Complexity:\n\nThe space complexity of this algorithm is linear, O(N).\n\"\"\"\n"
    },
    {
        "number": 3428,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('9 6 2 4\\n') == '6'\nassert solution
    },
    {
        "number": 3428,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n9 6 2 4') == '6'\n\"\"\"\n"
    },
    {
        "number": 3428,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n9 6 2 4') == '6'\nassert solution('8\\n0 2 2 2 1') == '0'\nassert solution('9\\n9 9 9 9 9 9 9') == '1'\nassert solution('10\\n0 2 2 2 1 1 1 1 1 1 1 1') == '1'\nassert solution('11\\n1 1 1 1 1 1 1 1 1 1 1 1 1') == '2'\n"
    },
    {
        "number": 3428,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"6\"\n'''\n"
    },
    {
        "number": 3428,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n4\n9 6 2 4\n''') == '6'\nassert solution('''\n2\n1\nSample Output:\n1\n''') == '1'\nassert solution('''\n5\n11 3 5 2\n''') == '3'\nassert solution('''\n5\n2 1 1 1 1\n''') == '5'\nassert solution('''\n5\n3 3 1 1\n''') == '6'\n"
    },
    {
        "number": 3428,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n4 6 2 4') == '6'\n\"\"\"\n\nfrom functools import reduce"
    },
    {
        "number": 3428,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n9 6 2 4''') == '6'\nassert solution('''5\n2 4 3 1 5''') == '5'\nassert solution('''6\n5 4 3 2 1''') == '6'\nassert solution('''7\n3 1 1 3 1 1''') == '5'\nassert solution('''8\n2 2 4 3 2 2''') == '7'\n"
    },
    {
        "number": 3428,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"6\"\nassert solution(\"1\\n1\") == \"1\"\n\"\"\"\n\n\"\"\"\nhint: gcd(a,b) = gcd(b, a%b)\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))\ni, j = 0, n-1\nfrom fractions import gcd\n\nwhile i<j:\n    if gcd(a[i], a[j])!= 1:\n        print(gcd(a[i], a[j]))\n        break\n    i, j = i+1, j-1\nelse:\n    print(2)"
    },
    {
        "number": 3428,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n9\\n6\\n2\\n4') == '6'\nassert solution('2\\n9\\n6\\n2\\n4') == '6'\nassert solution('3\\n9\\n6\\n2\\n4') == '6'\nassert solution('4\\n9\\n6\\n2\\n4') == '6'\nassert solution('5\\n9\\n6\\n2\\n4') == '6'\n"
    },
    {
        "number": 3428,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1\") == \"1\\n\"\nassert solution(\"2\\n2\") == \"2\\n\"\nassert solution(\"3\\n1\") == \"3\\n\"\nassert solution(\"3\\n2\") == \"1\\n\"\nassert solution(\"4\\n1\") == \"2\\n\"\n"
    },
    {
        "number": 3429,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1 1 1 3 2\\n2 5 1\") == \"2.000000\"\nassert solution(\"1\\n1 1 1 3 2\\n2 2 1\") == \"0.000000\"\nassert solution(\"1\\n1 1 1 3 2\\n2 3 1\") == \"0.000000\"\nassert solution(\"1\\n1 1 1 3 2\\n2 4 1\") == \"0.000000\"\nassert solution(\"1\\n1 1 1 3 2\\n2 6 1\") == \"0.000000\"\n"
    },
    {
        "number": 3429,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"2 1 1 3 2\"\"\") == \"2.000000\"\nassert solution(\n\"\"\"2 5 1\"\"\") == \"2.000000\"\nassert solution(\n\"\"\"2 1 1\"\"\") == \"1.000000\"\nassert solution(\n\"\"\"10 10 1\"\"\") == \"1.000000\"\nassert solution(\n\"\"\"100000 1000000 1\"\"\") == \"100.000000\"\n"
    },
    {
        "number": 3429,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '2.000000'\n\"\"\"\n\n\"\"\"\nTried:\n1.\n"
    },
    {
        "number": 3429,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 1 1 3 2\n2 5 1''') == '2.000000'\nassert solution('''4 4 4 4 4\n2 4 4 4 4\n4 2 4 4 4''') == '0.500000'\nassert solution('''2 2 1 1 3 2\n2 5 1''') == '0.500000'\nassert solution('''2 1 1 3 2\n4 1 1 4 1\n4 2 1 1 4''') == '2.000000'\nassert solution('''2 1 1 3 2\n2 5 1''') == '1.000000'\n"
    },
    {
        "number": 3429,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 1 1 3 2''') == '2.000000'\nassert solution('''2 5 1''') == '2.000000'\nassert solution('''2 2 3 4 4 5 5 5 5 5 5''') == '0.000000'\nassert solution
    },
    {
        "number": 3429,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 1 1 3 2\n2 5 1''') == '2.000000'\n\nassert solution('''4 2 1 3 2\n2 5 1\n''') == '0.500000'\n\nassert solution('''4 3 1 3 2\n2 5 1\n''') == '0.000000'\n\nassert solution('''4 4 1 3 2\n2 5 1\n''') == '0.666667'\n\nassert solution('''1 1 1 1 1\n2 5 1\n''') == '0.000000'"
    },
    {
        "number": 3429,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3429,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '2.000000'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3429,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2.000000\"\nprint(solution(stdin))\n"
    },
    {
        "number": 3429,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 1 1 3 2''') == \"2.000000\"\nassert solution('''2 5 1''') == \"2.000000\"\nassert solution('''2 1 1''') == \"0.000000\"\nassert solution('''1 1 1''') == \"0.000000\"\nassert solution('''0 1 1''') == \"0.000000\"\n"
    },
    {
        "number": 3430,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '96'\nassert solution('''3\n1 2\n2 3\n4\n1 2''') == '96'\nassert solution('''3\n1 2\n2 3\n4\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9''') == '112'\n\nassert solution('''6\n1 2\n2 3\n3 4\n4 5\n5 6\n1 6''') == '688'\nassert solution('''3\n1 2\n1 3\n1 4\n1 5\n2 3''') == '44'\n"
    },
    {
        "number": 3430,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n3\n1 2\n2 3\n4\n1 2\n1 3\n1 4\n''') == '96'\nassert solution('''\n6\n1 2\n1 3\n1 4\n1 5\n1 6\n2 3\n2 4\n2 5\n2 6\n3 4\n3 5\n3 6\n4 5\n4 6\n''') == '160'\nassert solution('''\n6\n1 2\n1 3\n1 4\n1 5\n1 6\n2 3\n2 4\n2 5\n2 6\n3 4\n3 5\n3 6\n4 5\n4 6\n''') == '160'\nassert solution('''\n4\n1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n2 5\n2 6\n3 4\n3 5\n3 6\n4 5\n4 6\n''') == '128'\nassert solution('''\n6\n1 2\n1 3\n1 4\n1 5\n1 6\n2 3\n2 4\n2 5\n2 6\n3 4\n3 5\n3 6\n4 5\n4 6\n''') == '128'\n"
    },
    {
        "number": 3430,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n3\n1 2\n2 3\n4\n1 2\n1 3\n1 4\n'''\n) == '96'\n\nassert solution(\n'''\n3\n1 2\n2 3\n4\n3 4\n1 2\n1 3\n1 4\n'''\n) == '8'\n\nassert solution(\n'''\n6\n1 2\n3 4\n5 6\n7\n1 2\n1 3\n1 4\n2 3\n3 4\n4 5\n'''\n) == '12'\n\nassert solution(\n'''\n5\n1 2\n2 3\n3 4\n4 5\n1 2\n1 3\n1 4\n2 3\n3 4\n4 5\n'''\n) == '8'\n\nassert solution(\n'''\n4\n1 2\n2 3\n4\n2 4\n'''\n) == '8'"
    },
    {
        "number": 3430,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3''') == '96'\nassert solution('''3\n1 2\n2 3\n4\n1 2''') == '96'\nassert solution('''3\n1 2\n2 3\n4\n3 2''') == '144'\nassert solution('''3\n1 2\n2 3\n4\n1 3\n1 4\n1 5\n1 6''') == '108'\nassert solution('''3\n1 2\n2 3\n4\n1 2\n2 3\n4\n1 2''') == '96'\n"
    },
    {
        "number": 3430,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n1 2\\n2 3\\n4\\n1 2\\n1 3\\n1 4') == '96'\nassert solution('3\\n1 2\\n2 3\\n4\\n1 3\\n1 4') == '18'\nassert solution('3\\n1 2\\n2 3\\n4\\n1 3\\n1 5') == '56'\nassert solution('3\\n1 2\\n2 3\\n4\\n1 2\\n1 3\\n1 4\\n1 5') == '18'\nassert solution('5\\n1 2\\n2 3\\n4\\n5 6\\n5 7\\n5 8\\n5 9\\n1 9') == '37'\n"
    },
    {
        "number": 3430,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n1 2\\n2 3\\n4') == 96\nassert solution('3\\n1 2\\n2 3\\n4\\n1 3\\n1 4\\n1 2') == 240\nassert solution('3\\n1 2\\n2 3\\n4\\n1 3\\n1 4\\n1 2\\n1 3\\n1 4\\n1 2\\n1 3\\n1 4') == 240\nassert solution('3\\n1 2\\n2 3\\n4\\n1 3\\n1 4\\n1 2\\n1 3\\n1 4\\n1 2\\n1 3\\n1 4\\n1 2') == 240\nassert solution('3\\n1 2\\n2 3\\n4\\n1 3\\n1 4\\n1 2\\n1 3\\n1 4\\n1 2\\n1 3\\n1 4\\n1 2\\n1 3\\n1 4\\n1 2\\n1 3\\n1 4') == 240\n"
    },
    {
        "number": 3430,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n1 2\n2 3\n4\n1 2''') == \"96\"\nassert solution('''3\n1 2\n2 3\n4\n4 3\n1 3\n1 2''') == \"96\"\nassert solution('''3\n1 2\n2 3\n4\n1 3\n1 2''') == \"96\"\nassert solution('''4\n1 2\n2 3\n4\n4 3\n1 3\n1 2''') == \"96\"\nassert solution('''3\n2 3\n1 2\n4\n4 3\n1 3\n1 2''') == \"96\"\n"
    },
    {
        "number": 3430,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n1 2\n2 3\n4\n1 2\n1 3\n1 4''') == '96'\nassert solution('''3\n1 2\n2 3\n4\n1 4\n1 2''') == '40'\nassert solution('''3\n1 2\n2 3\n4\n1 4\n1 3''') == '42'\nassert solution('''3\n1 2\n2 3\n4\n1 3\n1 2''') == '16'\nassert solution('''3\n1 2\n2 3\n4\n1 3\n1 2''') == '16'\n"
    },
    {
        "number": 3430,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2\\n2 3\\n4\\n1 2\\n1 3\\n1 4\\n\") == \"96\"\nassert solution(\"3\\n1 2\\n2 3\\n4\\n1 2\\n1 3\\n1 4\\n\") == \"96\"\nassert solution(\"3\\n1 2\\n2 3\\n4\\n1 2\\n1 3\\n1 4\\n\") == \"96\"\nassert solution(\"3\\n1 2\\n2 3\\n4\\n1 2\\n1 3\\n1 4\\n\") == \"96\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\\n1 2\\n1 3\\n1 4\\n\") == \"32\"\n"
    },
    {
        "number": 3430,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2\\n2 3\\n4\\n1 2\\n1 3\\n1 4') == '96'\nassert solution('2\\n1 2\\n2 3\\n4\\n1 2\\n1 3\\n1 4') == '32'\nassert solution('4\\n1 2\\n2 3\\n3 4\\n1 2\\n1 3\\n1 4') == '72'\nassert solution('1\\n1') == '0'\nassert solution('5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4') == '274'\n"
    },
    {
        "number": 3431,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n\n\"\"\""
    },
    {
        "number": 3431,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n0 0\n0 1\n1 0\n1 1''') == '3'\nassert solution('''4\n0 0\n0 1\n1 0\n1 1''') == '3'\nassert solution('''4\n0 0\n0 1\n3 0\n3 1''') == '4'\nassert solution('''7\n0 0\n0 1\n0 2\n0 3\n1 1\n1 2\n1 3\n2 3\n3 4\n4 5''') == '4'\nassert solution('''6\n0 0\n0 1\n0 2\n0 3\n0 4\n0 5\n1 1\n1 2\n1 3\n1 4\n1 5''') == '4'\n"
    },
    {
        "number": 3431,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n1 1\") == \"3\"\nassert solution(\"1\\n1\\n2\\n2\") == \"3\"\nassert solution(\"1\\n1\\n1\\n1\") == \"2\"\nassert solution(\"0 0\\n0 1\\n1 0\\n1 1\") == \"2\"\nassert solution(\"0 0\\n0 1\\n1 1\\n2 2\") == \"2\"\n"
    },
    {
        "number": 3431,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''0 0\n0 1\n1 0\n1 1''') == '3'\nassert solution('''1\n0 0\n0 1\n1 0\n1 1''') == '3'\nassert solution('''4\n0 0\n0 1\n1 0\n1 1''') == '3'\nassert solution('''4\n0 0\n0 1\n1 1\n2 0\n2 2''') == '4'\nassert solution('''4\n0 0\n0 1\n1 0\n1 1\n2 0\n2 2''') == '4'\n"
    },
    {
        "number": 3431,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n0 0\n0 1\n1 0\n1 1''') == '3'\nassert solution('''6\n0 0\n0 1\n1 0\n1 1\n3 0\n3 1''') == '6'\nassert solution('''9\n0 0\n0 1\n1 0\n1 1\n2 0\n2 1\n3 0\n3 1\n4 0\n4 1''') == '9'\nassert solution('''15\n0 0\n0 1\n1 0\n1 1\n2 0\n2 1\n3 0\n3 1\n4 0\n4 1\n5 0\n5 1\n6 0\n6 1\n7 0\n7 1\n8 0\n8 1\n9 0\n9 1\n10 0\n10 1''') == '15'\nassert solution('''20\n0 0\n0 1\n1 0\n1 1\n2 0\n2 1\n3 0\n3 1\n4 0\n4 1\n5 0\n5 1\n6 0\n6 1\n7 0\n7 1\n8 0\n8 1\n9 0\n9 1\n10 0\n10 1\n11 0\n11 1\n12 0\n12 1\n13 0\n13 1\n14 0\n14 1\n15 0\n15 1\n16 0\n16 1\n17 0\n17 1\n18 0\n18 1\n19 0\n19 1''') == '17'\n"
    },
    {
        "number": 3431,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 0\\n0 1\\n1 0\\n1 1\\n') == '3'\nassert solution('1 2\\n0 0\\n0 1\\n1 0\\n1 1\\n') == '4'\nassert solution('1\\n0\\n0\\n0\\n1\\n0\\n1\\n0\\n0\\n0\\n0\\n1\\n1\\n1\\n0\\n1\\n0\\n0\\n1\\n0\\n0\\n0\\n0\\n0\\n1\\n0\\n1\\n0\\n0\\n0\\n0\\n0\\n1\\n1\\n0\\n0\\n0\\n0\\n0\\n1\\n1\\n0\\n1\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n1\\n1\\n0\\n0\\n0\\n0\\n0\\n0\\n1\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0"
    },
    {
        "number": 3431,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '3'\nassert solution('0 0\\n0 1\\n1 0\\n1 1\\n') == '3'\nassert solution('2\\n0 0\\n0 1\\n1 0\\n1 1\\n') == '5'\nassert solution('4\\n0 0\\n0 1\\n1 0\\n1 1\\n') == '6'\nassert solution('4\\n0 0\\n0 1\\n1 0\\n1 1\\n') == '7'\n"
    },
    {
        "number": 3431,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 0\\n0 1\\n1 0\\n1 1') == '3'\nassert solution('1 1\\n0 0\\n1 1\\n1 0') == '2'\nassert solution('1 1\\n0 0\\n1 1\\n1 0\\n0 0') == '1'\nassert solution('0 0\\n0 1\\n1 0\\n0 0') == '0'\nassert solution('1 1\\n0 0\\n0 0\\n1 1') == '1'\n"
    },
    {
        "number": 3431,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1\n0 0\n0 1\n1 0\n1 1''') == '3'"
    },
    {
        "number": 3431,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '3'\n'''\n"
    },
    {
        "number": 3432,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n8\\n3 1\\n1 4\\n') == '10\\n10\\n9'\nassert solution('2\\n4\\n2 3\\n1 3\\n') == '10\\n4\\n0'\nassert solution('2\\n3\\n2 1\\n1 1\\n') == '2\\n2\\n0'\nassert solution('2\\n3\\n1 2\\n1 1\\n') == '2\\n2\\n0'\nassert solution('3\\n5\\n5 2\\n1 1\\n2 4\\n') == '10\\n9\\n5'\n"
    },
    {
        "number": 3432,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n2 8\n3 1\n1 4''') == '10\\n10\\n9'\nassert solution('''5\n1 3\n2 5\n3 4\n4 1\n5 2''') == '10\\n10\\n10\\n9\\n8'\nassert solution('''4\n1 2\n2 1\n2 1\n2 1''') == '1\\n1\\n0\\n0'\nassert solution('''6\n4 2\n3 1\n1 4\n2 4\n1 3\n2 2''') == '4\\n3\\n3\\n4\\n3\\n5'\n"
    },
    {
        "number": 3432,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '10\\n10\\n9'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3432,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1\\n') == '9'\nassert solution('2\\n1\\n2\\n') == '9'\nassert solution('2\\n3\\n2\\n') == '12'\nassert solution('2\\n1\\n2\\n') == '10'\nassert solution('3\\n2\\n3\\n') == '12'\n"
    },
    {
        "number": 3432,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n2 8\n3 1\n1 4''') == '10\\n10\\n9\\n'\nassert solution('''7\n11 1\n2 4\n3 9\n5 8\n6 2\n10 6\n8 7\n''') == '48\\n84\\n72\\n'\nassert solution('''10\n2 4\n3 9\n5 8\n6 2\n10 6\n8 7\n''') == '48\\n84\\n72\\n'\nassert solution('''1\n2\n3\n''') == '0\\n'\nassert solution('''9\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n''') == '45\\n'\n"
    },
    {
        "number": 3432,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n2 8\n3 1\n1 4''') == '10'\nassert solution('''2\n3 3\n1 2\n2 3''') == '8'\nassert solution('''2\n7 1\n1 2\n2 3''') == '3'\nassert solution('''3\n2 3\n3 2\n1 2\n2 1\n3 1''') == '5'\nassert solution('''2\n3\n3 2\n1 2\n2 1''') == '5'\n"
    },
    {
        "number": 3432,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n5 7\n2 4\n1 2\n2 3\n3 4\n3 5''') == '10 10 9'\n'''"
    },
    {
        "number": 3432,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3432,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n2 8''') == '10'\nassert solution('''3\n2 1\n1 4\n3 5\n''') == '10'\nassert solution('''4\n2 1\n1 4\n5 6\n4 7\n''') == '10'\nassert solution('''5\n2 1\n1 4\n5 6\n4 7\n4 8\n''') == '10'\nassert solution('''6\n2 1\n1 4\n5 6\n4 7\n4 8\n4 9\n''') == '10'\n"
    },
    {
        "number": 3432,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n2 8\n3 1\n1 4\n''') == '10\\n10\\n9'\n'''\nassert solution('''10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n''') == '55'\n'''\nassert solution('''5\n1\n2\n3\n4\n5\n''') == '15'\n'''\nassert solution('''5\n1\n3\n5\n7\n9\n''') == '30'\n'''\nassert solution('''4\n1\n2\n3\n4\n''') == '10'\n'''\n"
    },
    {
        "number": 3433,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n####\n"
    },
    {
        "number": 3433,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 3\n"
    },
    {
        "number": 3433,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\n"
    },
    {
        "number": 3433,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 4\\n####\\n#JF#\\n#..#\\n#..#\\n') == '3'\nassert solution('8 5\\n######\\n#.#.F#\\n#F##F#\\n#F#.F#\\n#F#.F#\\n#F#.F#\\n#.F.#\\n') == 'IMPOSSIBLE'\nassert solution('5 5\\n#######\\n#F.F.F#\\n#F#.F.F#\\n#F.F.F#\\n#.F.#.F#\\n#.F.F.F#\\n#.F.F.F#\\n') == '2'\nassert solution('7 8\\n#######\\n#F.F.F#\\n#F.F.F#\\n#F.F.F#\\n#F.F.F#\\n#F.F.F#\\n#.F.F.#\\n#.F.F.F#\\n') == 'IMPOSSIBLE'\nassert solution('7 8\\n#######\\n#F.F.F#\\n#F.F.F#\\n#F.F.F#\\n#F.F.F#\\n#F.F.F#\\n#.F.F.#\\n#.F.F.F#\\n') == '2'\n"
    },
    {
        "number": 3433,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"4 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\n\"4 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"IMPOSSIBLE\"\nassert solution(\n\"3 3\\n###\\n#J#\\n#.#\\n\") == \"4\"\nassert solution(\n\"2 3\\n#.#\\n#.#\\n#.#\\n\") == \"3\"\nassert solution(\n\"2 3\\n#.#\\n#.#\\n#.#\\n\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3433,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 4\n####\n"
    },
    {
        "number": 3433,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 4\\n####\\n#J.#\\n#.#.\\n#.#.\\n') == '3'\nassert solution('4 3\\n####\\n#J.#\\n#.#.\\n#.#.\\n') == 'IMPOSSIBLE'\nassert solution('10 10\\nJ....\\n...#\\n#.#.#\\n...#\\n#.#.#\\n....#\\n#.#.#\\n#.#.#\\n') == '15'\nassert solution('10 10\\nJ....\\n...#\\n#.#.#\\n...#\\n#.#.#\\n....#\\n#.#.#\\n#.#.#\\n') == 'IMPOSSIBLE'\nassert solution('2 3\\n.####\\n#.#..\\n#.#..\\n#.#..\\n#.#..\\n#.#..\\n#.#..\\n#.#..\\n') == '2'\n"
    },
    {
        "number": 3433,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\\n##.\\n##.\") == \"3\"\n\"\"\"\n\nimport sys\nfrom queue import Queue\n\nclass Solver:\n    \"\"\"docstring for Solver\"\"\"\n\n    def __init__(self, N, M, T, board):\n        self.N = N\n        self.M = M\n        self.T = T\n        self.board = board\n\n    def update_fire(self, new_board):\n        for r in range(self.N):\n            for c in range(self.M):\n                if new_board[r][c] == '#':\n                    self.board[r][c] = '#'\n                elif new_board[r][c] == 'F':\n                    self.board[r][c] = '*'\n\n    def move(self, row, col, r, c):\n        if row < 0 or row >= self.N:\n            return False\n        if col < 0 or col >= self.M:\n            return False\n        if self.board[row][col] == '*':\n            return False\n        if self.board[r][c] == '*':\n            return False\n        if self.board[r][c] == '#':\n            return False\n        self.board[row][col] = '*'\n        self.board[r][c] = '#'\n        return True\n\n    def fire_escape(self, r, c):\n        if r < 0 or r >= self.N:\n            return False\n        if c < 0 or c >= self.M:\n            return False\n        if self.board[r][c] == '*':\n            return True\n        return False\n\n    def solve(self):\n        q = Queue()\n        q.put((0, 0, 0))\n        dist = {}\n        dist[(0, 0)] = 0\n\n        while not q.empty():\n            curr_row, curr_col, step = q.get()\n            curr_dist = dist[(curr_row, curr_col)]\n            if self.board[curr_row][curr_col] == 'J':\n                return curr_dist\n            for row_shift in [-1, 0, 1]:\n                for col_shift in [-1, 0, 1]:\n                    if self.move(curr_row, curr_col, curr_row + row_shift, curr_col + col_shift):\n                        new_dist = curr_dist + 1\n                        if (curr_row + row_shift, curr_col + col_shift) in dist:\n                            if dist[(curr_row + row_shift, curr_col + col_shift)] < new_dist:\n                                continue\n                        dist[(curr_row + row_shift, curr_col + col_shift)] = new_dist\n                        q.put((curr_row + row_shift, curr_col + col_shift, step + 1))\n            if self.fire_escape(curr_row, curr_col):\n                self.update_fire(self.board)\n                return -1\n        return -1\n"
    },
    {
        "number": 3433,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '3'\n\n'''"
    },
    {
        "number": 3433,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 4\") == \"3\"\nassert solution(\"4 4\") == \"3\"\nassert solution(\"4 4\") == \"3\"\nassert solution(\"4 4\") == \"3\"\nassert solution(\"4 4\") == \"3\"\n"
    },
    {
        "number": 3434,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 2 2''') == '0.3333333333'\nassert solution('''2\n1 1''') == '0.3333333333'\nassert solution('''3\n2\n1 2 3\n3\n2 1''') == '1.0'\nassert solution('''3\n2\n1 2 3\n3\n2 1''') == '0.16666667'\nassert solution('''3\n2\n1 2 3\n3\n2 2''') == '0.0'\n"
    },
    {
        "number": 3434,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 2 2\\n1 1 1\\n2\\n1 1\") == \"0.3333333333\"\nassert solution(\"1 2 2\\n2\\n1 1\") == \"0.0\"\nassert solution(\"1 1 1\\n1\\n1\") == \"1.0\"\nassert solution(\"2 2 2\\n1 1 1\\n1\\n1\") == \"0.0\"\n\"\"\"\n"
    },
    {
        "number": 3434,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 2 2''') == '0.3333333333'\nassert solution('''1 1 1''') == '0.08333333333333333'\nassert solution('''2 3 2''') == '0.3333333333333333'\nassert solution('''1 1 1''') == '0.08333333333333333'\nassert solution('''2 2 2''') == '0.08333333333333333'\n"
    },
    {
        "number": 3434,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3434,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 2') == '0.3333333333'\n\"\"\"\n"
    },
    {
        "number": 3434,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 3434,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') is None\nassert solution('0 1 2') == '0.333333333333'\nassert solution('1 1 3') == '0.333333333333'\nassert solution('2 2 1') == '0.166666666667'\nassert solution('6 7 8') == '0.166666666667'\n"
    },
    {
        "number": 3434,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3434,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_out\n\"\"\"\n\nimport sys\nsys.setrecursionlimit(100000)\nfrom fractions import Fraction\nfrom collections import defaultdict\nfrom functools import lru_cache"
    },
    {
        "number": 3434,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''1 2 2'''\n) == '0.3333333333'\n\nassert solution(\n'''2 5 4'''\n) == '0.20935064475080299'\n"
    },
    {
        "number": 3435,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\"\"\""
    },
    {
        "number": 3435,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    10\n    01*1\n    \"\"\") == 1023\n\nassert solution(\n    \"\"\"\n    1\n    1\n    \"\"\") == 1\n\nassert solution(\n    \"\"\"\n    2\n    1\n    \"\"\") == 2\n\nassert solution(\n    \"\"\"\n    3\n    1\n    \"\"\") == 3\n\nassert solution(\n    \"\"\"\n    10\n    00*01\n    \"\"\") == 1023"
    },
    {
        "number": 3435,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1023\""
    },
    {
        "number": 3435,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n10\n1\n''') == '1023'\nassert solution(\n'''\n5\n111\n''') == '5'\nassert solution(\n'''\n5\n1111\n''') == '1'\nassert solution(\n'''\n50\n11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
    },
    {
        "number": 3435,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5') == '1010'\nassert solution('1') == '1'\nassert solution('101') == '1010101'\nassert solution('1010') == '1010101'\nassert solution('101001') == '1010101'\n"
    },
    {
        "number": 3435,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1011') == '1023'\nassert solution('110111') == '1023'\nassert solution('1100010') == '0'\nassert solution('011111') == '0'\nassert solution('1') == '1023'\n"
    },
    {
        "number": 3435,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n10\n1*1\n''') == '1023'\nassert solution('''\n3\n1*1\n111\n2*0\n''') == '1023'\nassert solution('''\n3\n1*1\n111\n0*1\n''') == '0'\nassert solution('''\n2\n1*1\n1\n2*0\n''') == '0'\nassert solution('''\n3\n1*1\n111\n0*1\n''') == '1023'\n"
    },
    {
        "number": 3435,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('1*1') == '1'\nassert solution('1*1*1*1*1') == '1'\nassert solution('1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1"
    },
    {
        "number": 3435,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('*') == ''\nassert solution('0') == '0'\nassert solution('0101') == '11'\nassert solution('01010101') == '11'\n"
    },
    {
        "number": 3435,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n1') == '1'\nassert solution('3\\n0110') == '1024'\nassert solution('10\\n101') == '9609'\nassert solution('6\\n1101') == '8'\nassert solution('11\\n110111') == '7'\n"
    },
    {
        "number": 3436,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6\"\n\"\"\"\n"
    },
    {
        "number": 3436,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2') == '6'\nassert solution('2 3') == '9'\nassert solution('3 1') == '8'\nassert solution('3 2') == '6'\nassert solution('3 4') == '13'\n"
    },
    {
        "number": 3436,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == 6\n"
    },
    {
        "number": 3436,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2') == '6'\nassert solution('5 5') == '120'\nassert solution('2 1') == '1'\nassert solution('3 4') == '10'\nassert solution('2 3') == '3'\n"
    },
    {
        "number": 3436,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2') == 6\nassert solution('1 1') == 1\nassert solution('1 5') == 5\nassert solution('2 4') == 3\nassert solution('10001 2') == 623\n"
    },
    {
        "number": 3436,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 6\n\nassert solution(stdin='''0 0''') == 0\nassert solution(stdin='''0 1''') == 1\nassert solution(stdin='''1 0''') == 1\nassert solution(stdin='''2 0''') == 0\n"
    },
    {
        "number": 3436,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2') == '6'\nassert solution('2 1') == '6'\nassert solution('2 3') == '3'\nassert solution('3 2') == '3'\nassert solution('3 4') == '3'\n"
    },
    {
        "number": 3436,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"6\"\n\nassert solution(\"1 0\") == \"1\"\n\nassert solution(\"1 1\") == \"2\"\n\nassert solution(\"2 2\") == \"6\"\n\nassert solution(\"1 1\") == \"2\""
    },
    {
        "number": 3436,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 2''') == '6'\nassert solution('''1 2''') == '3'\nassert solution('''2 3''') == '3'\nassert solution('''3 4''') == '6'\nassert solution('''1 1''') == '2'\n"
    },
    {
        "number": 3436,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"6\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"3 1\") == \"2\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"2 2\") == \"2\"\n"
    },
    {
        "number": 3437,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500''') == '2930'\nassert solution('''200 1000 200\n400\n500\n550\n1000\n1400\n1500''') == 'Impossible'\nassert solution('''1000 2000 7\n100\n400\n500\n550\n1000\n1400\n1500''') == '2930'\nassert solution('''1000 2000 7\n100\n500\n550\n1000\n1400\n1500''') == '2930'\nassert solution('''1000 2000 7\n100\n500\n550\n1000\n1400\n1500''') == '2930'\n"
    },
    {
        "number": 3437,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500''') == '2930'\nassert solution('''500\n100\n480\n500\n550\n1000\n1400\n1500''') == 'Impossible'\n'''\n"
    },
    {
        "number": 3437,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n') == '2930'\nassert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n') == 'Impossible'\nassert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n') == '2930'\nassert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n') == '2930'\nassert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n') == 'Impossible'\n"
    },
    {
        "number": 3437,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2930\"\n\nimport sys\nsys.setrecursionlimit(2000)\nprint(solution(sys.stdin.read()))"
    },
    {
        "number": 3437,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500''') == '2930'\nassert solution('''1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500\n''') == 'Impossible'\n'''\nassert solution('''1000 2000 7\n100\n480\n500\n550\n1000\n1400\n''') == '2930'\nassert solution('''1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500\n''') == 'Impossible'\nassert solution('''1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500\n''') == '2930'\n"
    },
    {
        "number": 3437,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1000 2000 7\") == \"2930\"\nassert solution(\"1 2 3\") == \"Impossible\"\nassert solution(\"4 5 6\") == \"6\"\n\"\"\"\n\nl1, l2, n = int(input()), int(input()), int(input())\nlst = [int(input()) for _ in range(n)]\nlst.sort()\nmax1, max2 = 0, 0\nfor i in range(n-3):\n    for j in range(i+1, n-2):\n        max1 += lst[i] + lst[j]\n        max2 = max(max2, lst[i] + lst[j] + lst[-1] + lst[-2])\n"
    },
    {
        "number": 3437,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1000 2000 7') == \"2930\"\nassert solution('100') == 'Impossible'\nassert solution('480') == '2930'\nassert solution('500') == '2930'\nassert solution('550') == '2930'\n"
    },
    {
        "number": 3437,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n') == '2930'\nassert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n') == 'Impossible'\nassert solution('1000 2000 7\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\"
    },
    {
        "number": 3437,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '2930'\nprint('Passed')\n-----\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 3437,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1000 2000 7\") == \"2930\"\nassert solution(\"1000 2000 7\") == \"Impossible\"\nassert solution(\"1 2 3\") == \"Impossible\"\nassert solution(\"1 2 3\") == \"Impossible\"\nassert solution(\"0 0 0\") == \"Impossible\"\n"
    },
    {
        "number": 3438,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\\n0\\n0\\n1\\n\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\\n\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\\n\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\\n\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\\n\") == \"2\"\n"
    },
    {
        "number": 3438,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\nstdin = '''1 2 3\n1\n0\n1\n3\n1\n1\n2\n1\n1\n0\n1\n0\n1\n0\n1\n2\n1\n2\n2\n2\n0\n1\n1\n0\n1\n1\n1\n0\n1\n0\n0\n1\n0\n1\n0\n1\n1\n1\n1\n2\n1\n2\n2\n1\n1\n2\n0\n1\n1\n0\n1\n1\n2\n0\n1\n2\n2\n2\n0\n1\n1\n2\n2\n2\n2\n2\n1\n0\n1\n1\n1\n1\n1\n1\n0\n1\n0\n1\n1\n0\n0\n2\n1\n1\n1\n2\n1\n0\n0\n1\n0\n1\n1\n1\n2\n1\n0\n0\n1\n0\n1\n1\n1\n1\n2\n1\n2\n2\n1\n1\n2\n0\n1\n1\n1\n1\n1\n0\n0\n1\n2\n2\n2\n1\n2\n0\n1\n0\n1\n1\n1\n0\n2\n1\n0\n1\n1\n0\n1\n1\n2\n2\n0\n0\n1\n1\n1\n1\n1\n1\n1\n1\n2\n0\n1\n0\n1\n0\n1\n0\n1\n1\n0\n2\n1\n0\n1\n1\n1\n0\n1\n1\n1\n2\n1\n1\n1\n2\n1\n1\n2\n0\n1\n1\n0\n0\n1\n0\n1\n0\n1\n2\n1\n1\n0\n1\n1\n1\n1\n1\n1\n2\n0\n0\n1\n0\n1\n0\n0\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n0\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n1\n0\n1\n1\n1\n1\n0\n1\n0\n1\n1\n1\n0\n1\n1\n1\n1\n0\n1\n1\n1\n0\n0\n1\n1\n0\n1\n1\n1\n1\n0\n1\n1\n1\n0\n1\n1\n1\n1\n1\n0\n1\n1\n0\n1\n0\n1\n0\n1\n0\n1\n1\n1\n0\n1\n1\n0\n1\n1\n1\n1\n1\n0\n1\n1\n0\n1\n1\n1\n0\n1\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n1\n0\n1\n1\n1\n0\n0\n1\n1\n1\n0\n0\n1\n1\n1\n0\n0\n1\n1\n0\n0\n1\n1\n1\n0\n0\n0\n1\n0\n1\n0\n1\n1\n1\n0\n0\n0\n1\n1\n0\n1\n1\n0\n1\n0\n1\n1\n1\n0\n0\n1\n0\n0\n1\n0\n0\n1\n0\n1\n1\n0\n0\n0\n1\n0\n0\n0\n1\n1\n0\n1\n1\n1\n0\n0\n1\n0\n0\n0\n1\n1\n0\n1\n0\n1\n0\n1\n1\n1\n0\n1\n0\n0\n1\n1\n1\n0\n1\n0\n1\n0\n0\n1\n1\n1\n0\n1\n1\n1\n1\n0\n1\n0\n0\n1\n0\n1\n0\n0\n1\n0\n1\n0\n1\n0\n0\n1\n1\n0\n0\n1\n1\n0\n0\n1\n0\n0\n1\n1\n1\n0\n1\n1\n0\n0\n1\n1\n1\n0\n0\n1\n0\n0\n0\n0\n1\n0\n1\n0\n0\n1\n1\n1\n1\n1\n1\n1\n1\n0\n0\n0\n1\n1\n0\n0\n1\n0\n0\n1\n1\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0"
    },
    {
        "number": 3438,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    '1 2 3'\n) == 2\nassert solution(\n    '1 2 3'\n) == 2\nassert solution(\n    '1 2 3'\n) == 2\nassert solution(\n    '2 4 2'\n) == 3\nassert solution(\n    '1 2 3'\n) == 2\n"
    },
    {
        "number": 3438,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 2 3\n0\n0\n1''') == '2'\n\nassert solution('''1 2 3\n1\n0\n0\n2''') == '1'\n\nassert solution('''1 2 3\n1\n0\n0\n1\n0\n0\n0\n2\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n"
    },
    {
        "number": 3438,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('2 2 3') == '2'\nassert solution('1 1 3') == '2'\nassert solution('2 2 3') == '2'\nassert solution('1 2 3 4') == '3'\n"
    },
    {
        "number": 3438,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 2 3\n0\n0\n1''') == '2'\nassert solution('''1 2 3\n0\n1\n0\n1\n0\n0\n0\n0\n0\n0''') == '3'\nassert solution('''1 2 3\n0\n2\n1\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n"
    },
    {
        "number": 3438,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\"\n\"\"\""
    },
    {
        "number": 3438,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 2 3\n0\n0\n1''') == '2'\nassert solution('''1 2 3\n0\n0\n2''') == '1'\nassert solution('''1 2 3\n0\n1\n2''') == '1'\nassert solution('''1 2 3\n0\n2\n3''') == '1'\nassert solution('''1 2 3\n0\n1\n1\n2\n2\n3''') == '1'\n"
    },
    {
        "number": 3438,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 3438,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\"\n\"\"\""
    },
    {
        "number": 3439,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2') == '10'\nassert solution('-10 0 -5\\n-1 -2 -1\\n5 4 -5\\n2 2') == '10'\nassert solution('-10 0 -5\\n-1 -2 -1\\n5 4 -5\\n2 1') == '9'\nassert solution('-10 0 -5\\n-1 -2 -1\\n5 4 -5\\n2 2') == '9'\nassert solution('-10 0 -5\\n-1 -2 -1\\n5 4 -5\\n3 3') == '16'\n"
    },
    {
        "number": 3439,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3') == '6'\nassert solution('-1\\n1\\n1') == '1'\nassert solution('-2\\n1\\n1') == '2'\nassert solution('-3\\n1\\n1') == '3'\nassert solution('2\\n3\\n2') == '5'\n"
    },
    {
        "number": 3439,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 3\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2''') == \"10\"\nassert solution('''5 3\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2''') == \"15\"\nassert solution('''2 2\n0 0 0\n0 1 1\n-1 -2 -1\n1 1 -2''') == \"16\"\nassert solution('''1 1\n0 0 0\n0 1 1\n-1 -2 -1\n1 1 -2''') == \"10\"\nassert solution('''2 2\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2''') == \"15\"\n"
    },
    {
        "number": 3439,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 3\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2''') == '10'\nassert solution('''10 10\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1"
    },
    {
        "number": 3439,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '0'\nassert solution(stdin) == '1'\nassert solution(stdin) == '2'\nassert solution(stdin) == '3'\nassert solution(stdin) == '3'\n"
    },
    {
        "number": 3439,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 3439,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2''') == '10'\nassert solution('''3 3\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2''') == '10'\nassert solution('''3 3\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2''') == '10'\nassert solution('''-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2''') == '10'\nassert solution('''3 3\n-5 2 -5\n-1 -2 -1\n-5 -1 -5\n2 2''') == '0'\n"
    },
    {
        "number": 3439,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 2\") == \"10\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"2 2\") == \"0\"\n"
    },
    {
        "number": 3439,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(dedent(\"\"\"\\\n    3 3\n    -5 2 -5\n    -1 -2 -1\n    5 4 -5\n    2 2\n    \"\"\")) == \"10\"\n\nassert solution(dedent(\"\"\"\\\n    5 5\n    2 3 -1\n    -4 2 -1\n    -3 -2 1\n    5 -2 -1\n    5 4\n    \"\"\")) == \"16\"\n\nassert solution(dedent(\"\"\"\\\n    3 3\n    -5 5 -5\n    -1 1 -1\n    5 5 -5\n    2 2\n    \"\"\")) == \"25\"\n\nassert solution(dedent(\"\"\"\\\n    2 2\n    -1 -1\n    -1 -1\n    \"\"\")) == \"0\"\n\nassert solution(dedent(\"\"\"\\\n    5 5\n    2 3 -1\n    -4 2 -1\n    -3 -2 1\n    5 -2 -1\n    5 4\n    \"\"\")) == \"16\""
    },
    {
        "number": 3439,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2\n\"\"\".strip()) == \"10\"\nassert solution(\n\"\"\"\n5 3\n-10 -5 -10\n1 -1 -1\n1 1 1\n-2 -3 -4\n-5 1 -1\n\"\"\".strip()) == \"0\"\nassert solution(\n\"\"\"\n5 4\n-10 -5 -10\n1 -1 -1\n1 1 1\n-2 -3 -4\n-5 1 -1\n\"\"\".strip()) == \"20\"\nassert solution(\n\"\"\"\n5 5\n-10 -5 -10\n1 -1 -1\n1 1 1\n-2 -3 -4\n-5 1 -1\n\"\"\".strip()) == \"10\"\nassert solution(\n\"\"\"\n4 1\n1\n\"\"\".strip()) == \"0\"\n"
    },
    {
        "number": 3440,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300') == '3100'\nassert solution('5 4\\n1 2 1000\\n2 3 1000\\n3 4 1000\\n4 5 1000\\n2\\n1 4 300\\n2 5 100\\n3 4 500\\n4 5 100') == '4800'\nassert solution('3 4\\n1 2 1\\n2 3 1\\n3 4 1\\n4 5 1\\n2\\n1 4 2\\n2 5 1\\n3 4 1') == '18'\nassert solution('4 4\\n1 2 1\\n2 3 1\\n3 4 1\\n4 5 1\\n2\\n1 4 2\\n2 5 1\\n3 4 1') == '24'\nassert solution('5 5\\n1 2 1\\n2 3 1\\n3 4 1\\n4 5 1\\n5 6 1\\n6 7 1\\n7 8 1\\n8 9 1\\n9 10 1\\n10 11 1\\n11 12 1\\n12 13 1\\n13 14 1\\n14 15 1\\n15 16 1\\n16 17 1\\n17 18 1\\n18 19 1\\n19 20 1\\n20 21 1\\n21 22 1\\n22 23 1\\n23 24 1\\n24 25 1\\n25 26 1\\n26 27 1\\n27 28 1\\n28 29 1\\n29 30 1\\n30 31 1\\n31 32 1\\n32 33 1\\n33 34 1\\n34 35 1\\n35 36 1\\n36 37 1\\n37 38 1\\n38 39 1\\n39 40 1\\n40 41 1\\n41 42 1\\n42 43 1\\n43 44 1\\n44 45 1\\n45 46 1\\n46 47 1\\n47 48 1\\n48 49 1\\n49 50 1\\n50 51 1\\n51 52 1\\n52 53 1\\n53 54 1\\n54 55 1\\n55 56 1\\n56 57 1\\n57 58 1\\n58 59 1\\n59 60 1\\n60 61 1\\n61 62 1\\n62 63 1\\n63 64 1\\n64 65 1\\n65 66 1\\n66 67 1\\n67 68 1\\n68 69 1\\n69 70 1\\n70 71 1\\n71 72 1\\n72 73 1\\n73 74 1\\n74 75 1\\n75 76 1\\n76 77 1\\n77 78 1\\n78 79 1\\n79 80 1\\n80 81 1\\n81 82 1\\n82 83 1\\n83 84 1\\n84 85 1\\n85 86 1\\n86 87 1\\n87 88 1\\n88 89 1\\n89 90 1\\n90 91 1\\n91 92 1\\n92 93 1\\n93 94 1\\n94 95 1\\n95 96 1\\n96 97 1\\n97 98 1\\n98 99 1\\n99 100 1\\n100 101 1\\n101 102 1\\n102 103 1\\n103 104 1\\n104 105 1\\n105 106 1\\n106 107 1\\n107 108 1\\n108 109 1\\n109 110 1\\n110 111 1\\n111 112 1\\n112 113 1\\n113 114 1\\n114 115 1\\n115 116 1\\n116 117 1\\n117 118 1\\n118 119 1\\n119 120 1\\n120 121 1\\n121 122 1\\n122 123 1\\n123 124 1\\n124 125 1\\n125 126 1\\n126 127 1\\n127 128 1\\n128 129 1\\n129 130 1\\n130 131 1\\n131 132 1\\n132 133 1\\n133 134 1\\n134 135 1\\n135 136 1\\n136 137 1\\n137 138 1\\n138 139 1\\n139 140 1\\n140 141 1\\n141 142 1\\n142 143 1\\n143 144 1\\n144 145 1\\n145 146 1\\n146 147 1\\n147 148 1\\n148 149 1\\n149 150 1\\n150 151 1\\n151 152 1\\n152 153 1\\n153 154 1\\n154 155 1\\n155 156 1\\n156 157 1\\n157 158 1\\n158 159 1\\n159 160 1\\n160 161 1\\n161 162 1\\n162 163 1\\n163 164 1\\n164 165 1\\n165 166 1\\n166 167 1\\n167 168 1\\n168 169 1\\n169 170 1\\n170 171 1\\n171 172 1\\n172 173 1\\n173 174 1\\n174 175 1\\n175 176 1\\n176 177 1\\n177 178 1\\n178 179 1\\n179 180 1\\n180 181 1\\n181 182 1\\n182 183 1\\n183 184 1\\n184 185 1\\n185 186 1\\n186 187 1\\n187 188 1\\n188 189 1\\n189 190 1\\n190 191 1\\n191 192 1\\n192 193 1\\n193 194 1\\n194 195 1\\n195 196 1\\n196 197 1\\n197 198 1\\n198 199 1\\n199 200 1\\n200 201 1\\n201 202 1\\n202 203 1\\n203 204 1\\n204 205 1\\n205 206 1\\n206 207 1\\n207 208 1\\n208 209 1\\n209 210 1\\n210 211 1\\n211 212 1\\n212 213 1\\n213 214 1\\n214 215 1\\n215 216 1\\n216 217 1\\n217 218 1\\n218 219 1\\n219 220 1\\n220 221 1\\n221 222 1\\n222 223 1\\n223 224 1\\n224 225 1\\n225 226 1\\n226 227 1\\n227 228 1\\n228 229 1\\n229 230 1\\n230 231 1\\n231 232 1\\n232 233 1\\n"
    },
    {
        "number": 3440,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 1000\") == \"3100\"\nassert solution(\"1 2 1000 3 4 500\") == \"5200\"\nassert solution(\"1 2 1000 3 4 500 5 6 7 1000\") == \"5500\"\nassert solution(\"1 2 1000 3 4 500 5 6 7 1000 8 9 1000\") == \"5100\"\nassert solution(\"1 2 1000 3 4 500 5 6 7 1000 8 9 1000 10 11 1000\") == \"5500\"\n"
    },
    {
        "number": 3440,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 5\\n1 4 300\\n3 5 300\") == \"3100\"\nassert solution(\"3 5\\n1 2 1000\\n2 3 1000\\n4 5 500\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300\\n4 5 500\") == \"3100\"\nassert solution(\"5 4\\n1 2 1000\\n2 3 1000\\n4 5 500\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300\\n4 5 500\") == \"3750\"\nassert solution(\"4 5\\n1 2 1000\\n2 3 1000\\n3 4 1500\\n1 4 300\\n2 5 500\\n4\\n1 4 300\\n2 5 500\\n3 4 1500\") == \"3750\"\nassert solution(\"4 5\\n1 2 1000\\n2 3 1000\\n3 4 1500\\n1 4 300\\n2 5 500\\n4\\n1 4 300\\n2 5 500\\n3 4 1500\\n4\\n1 4 300\\n2 5 500\\n3 4 1500\") == \"3750\"\n"
    },
    {
        "number": 3440,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"3100\""
    },
    {
        "number": 3440,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n2') == '100'\nassert solution('3\\n2\\n2') == '1000'\nassert solution('5\\n2\\n2\\n2\\n2') == '9100'\nassert solution('5\\n2\\n2\\n2\\n2') == '9100'\nassert solution('6\\n2\\n2\\n2\\n2') == '9050'\n"
    },
    {
        "number": 3440,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300') == '3100'\nassert solution('1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300') == '3850'\nassert solution('1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 5 300\\n4 5 500\\n2\\n1 4"
    },
    {
        "number": 3440,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(dedent(\"\"\"\n    5 3\n    1 2 1000\n    2 3 1000\n    4 5 500\n    2\n    1 4 300\n    3 5 300\n    \"\"\")) == \"3100\"\n\"\"\"\n\nfrida is a writer for Cosmopolitan who writes restaurant reviews. She enjoys it a lot, but it seems that, throughout the years, she has reviewed all the restaurants on Earth. It\u2019s now time to move one level up; she is going to review the food served by the airlines, so that the readers can make better decisions on which flights to take.\n\nFrida\u2019s boss gave her a list of flight connections that she needs to review for the upcoming issue of Cosmopolitan. She knows that they serve the same food in both directions of every flight, so she only needs to take it once. She realized that she can not make all the reviews using only flights in the list from her boss. Therefore she did some quick research and made a list of additional flights which she might take. She will not review the food on these flights; they will only be used so that she can make all the reviews.\n\nFrida\u2019s goal is to make all the reviews while spending the least money on flight tickets. She\u2019s office is in Stockholm, so she starts and ends her journey there. Each flight is both ways between two cities and has a fixed price in both directions. You can assume that it is possible to make all the reviews using some of the additional flights.\n\nFor the purposes of this problem we ignore the price Frida\u2019s boss has to pay for accommodation and we also ignore the departure and arrival times of flights by assuming that every flight is very often and reasonably short. We only focus on the total price of the flights.\n\n-----Input-----\nThe first line contains $2$ space separated integers $N, R, (2\\leq N\\leq 13, 0\\leq R\\leq 78)$, where $N$ is the number of airports mentioned in the input and $R$ is the number of flights to review. The airports are numbered $1, \\dots, N$ and Stockholm has number $1$.\n\nThe next $R$ lines describe the $R$ flights to review. Each line contains 3 space separated integers $a, b, c, (1\\leq a, b\\leq N, 1\\leq c\\leq 10000)$, where $a, b$ denote 2 distinct airports and $c$ is the cost of the flight in Swedish kronor in both directions. No pair of $2$ cities is listed twice.\n\nThe next line contains an integer $F$, $(0\\leq F\\leq 200)$, the number of additional flights available. The next $F$ lines contain descriptions of flights in the same format as above. There may be more flights between a pair of cities. You may assume that it is possible to make all the reviews using some of these additional flights.\n\n-----Output-----\nOutput one line with one integer \u2013 the lowest total cost of flight tickets, such that Frida can make all the reviews and return back to Stockholm.\n\n-----Examples-----\nSample Input:\n5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\nSample Output:\n3100\n\"\"\""
    },
    {
        "number": 3440,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n"
    },
    {
        "number": 3440,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300''') == '3100'\n'''\n"
    },
    {
        "number": 3440,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n5\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2\\n1\\n4\\n1\\n3\\n1\\n2"
    },
    {
        "number": 3441,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1') == 0\nassert solution('2 2') == 2\nassert solution('2 2 3 4') == 3\nassert solution('2 2 3') == 2\nassert solution('2 2 2') == 1\n"
    },
    {
        "number": 3441,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 1\n0 1\n''') == '0'\nassert solution('''2 1\n0 1\n1 2\n''') == '1'\nassert solution('''2 1\n0 1\n0 1\n''') == '2'\nassert solution('''2 2\n0 1\n0 1\n1 2\n0 2\n''') == '2'\nassert solution('''2 1\n0 1\n1 2\n1 2\n''') == '1'\n"
    },
    {
        "number": 3441,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 1\n0 1''') == '0'\nassert solution('''2 1\n1 1''') == '2'\nassert solution('''2 1\n0 1\n1 1''') == '0'\nassert solution('''2 10\n2 1\n1 2\n0 1\n2 2\n2 3\n0 3\n1 3\n3 4\n1 4\n3 5\n2 5\n2 6\n3 6\n3 7\n1 7\n6 8\n2 8\n7 8\n7 9\n8 9\n7 10\n1 10\n6 11\n3 11\n4 11\n2 12\n12 12\n12 13\n2 13\n3 13\n4 13\n4 14\n2 14\n2 15\n3 15\n6 15\n3 16\n4 16\n4 17\n2 17\n12 17\n4 18\n12 18\n6 19\n3 19\n4 19\n2 20\n12 20\n6 21\n3 21\n4 21\n2 22\n12 22\n6 22\n3 23\n4 23\n2 24\n2 25\n12 25\n12 26\n2 26\n4 26\n2 27\n4 27\n2 28\n12 28\n12 29\n2 29\n4 29\n2 30\n12 30\n6 31\n3 31\n4 31\n2 32\n6 32\n2 33\n4 33\n12 33\n2 34\n4 34\n2 35\n4 35\n12 35\n2 36\n6 36\n2 37\n4 37\n12 37\n4 38\n12 38\n6 38\n3 39\n4 39\n12 39\n2 40\n6 40\n2 41\n4 41\n12 41\n6 41\n3 42\n4 42\n12 42\n2 42\n2 43\n4 43\n12 43\n6 43\n3 44\n4 44\n12 44\n2 44\n2 45\n4 45\n12 45\n6 45\n3 46\n4 46\n12 46\n6 46\n3 47\n4 47\n12 47\n6 47\n3 48\n4 48\n12 48\n6 48\n3 49\n4 49\n12 49\n6 49\n3 50\n4 50\n12 50\n6 50\n3 51\n4 51\n12 51\n6 51\n3 52\n4 52\n12 52\n6 52\n3 53\n4 53\n12 53\n6 53\n3 54\n4 54\n12 54\n6 54\n3 55\n4 55\n12 55\n6 55\n3 56\n4 56\n12 56\n6 56\n3 57\n4 57\n12 57\n6 57\n3 58\n4 58\n12 58\n6 58\n3 59\n4 59\n12 59\n6 59\n3 60\n4 60\n12 60\n6 60\n3 61\n4 61\n12 61\n6 61\n3 62\n4 62\n12 62\n6 62\n3 63\n4 63\n12 63\n6 63\n3 64\n4 64\n12 64\n6 64\n3 65\n4 65\n12 65\n6 65\n3 66\n4 66\n12 66\n6 66\n3 67\n4 67\n12 67\n6 67\n3 68\n4 68\n12 68\n6 68\n3 69\n4 69\n12 69\n6 69\n3 70\n4 70\n12 70\n6 70\n3 71\n4 71\n12 71\n6 71\n3 72\n4 72\n12 72\n6 72\n3 73\n4 73\n12 73\n6 73\n3 74\n4 74\n12 74\n6 74\n3 75\n4 75\n12 75\n6 75\n3 76\n4 76\n12 76\n6 76\n3 77\n4 77\n12 77\n6 77\n3 78\n4 78\n12 78\n6 78\n3 79\n4 79\n12 79\n6 79\n3 80\n4 80\n12 80\n6 80\n3 81\n4 81\n12 81\n6 81\n3 82\n4 82\n12 82\n6 82\n3 83\n4 83\n12 83\n6 83\n3 84\n4 84\n12 84\n6 84\n3 85\n4 85\n12 85\n6 85\n3 86\n4 86\n12 86\n6 86\n3 87\n4 87\n12 87\n6 87\n3 88\n4 88\n12 88\n6 88\n3 89\n4 89\n12 89\n6 89\n3 90\n4 90\n12"
    },
    {
        "number": 3441,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\n\"\"\"\n"
    },
    {
        "number": 3441,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == str(1)\n'''\n"
    },
    {
        "number": 3441,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 0\n\n-----Testcases-----\nInput:\n5 3\n0 1\n1 4\n3 4\n4 0\n0 2\n2 3\n2 4\nOutput:\n0\nInput:\n2 4\n0 1\n0 2\nOutput:\n2\n'''\n"
    },
    {
        "number": 3441,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3441,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n"
    },
    {
        "number": 3441,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(INPUT) == OUTPUT\n\"\"\"\n"
    },
    {
        "number": 3441,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"2 1\n0 1\n0 1\"\"\") == '0'\nassert solution(\n    \"\"\"3 2\n0 1\n0 2\n1 2\"\"\") == '3'\nassert solution(\n    \"\"\"5 2\n0 1\n0 2\n0 3\n1 2\n2 3\n0 4\n2 4\n3 4\n1 2\n1 3\n2 3\n3 4\n4 4\n0 4\n0 1\n0 3\n1 2\n0 2\n2 4\n2 1\n3 4\n1 4\n2 3\n3 1\"\"\") == '8'\nassert solution(\n    \"\"\"10 5\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n0 8\n0 9\n0 10\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n5 6\n5 7\n5 8\n5 9\n5 10\n6 7\n6 8\n6 9\n6 10\n7 8\n7 9\n7 10\n8 9\n8 10\n9 10\n0 10\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n5 6\n5 7\n5 8\n5 9\n5 10\n6 7\n6 8\n6 9\n6 10\n7 8\n7 9\n7 10\n8 9\n8 10\n9 10\n0 10\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n5 6\n5 7\n5 8\n5 9\n5 10\n6 7\n6 8\n6 9\n6 10\n7 8\n7 9\n7 10\n8 9\n8 10\n9 10\n0 10\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n5 6\n5 7\n5 8\n5 9\n5 10\n6 7\n6 8\n6 9\n6 10\n7 8\n7 9\n7 10\n8 9\n8 10\n9 10\n0 10\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n5 6\n5 7\n5 8\n5 9\n5 10\n6 7\n6 8\n6 9\n6 10\n7 8\n7 9\n7 10\n8 9\n8 10\n9 10\n0 10\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n4 5\n4 6\n4 7\n4 8\n4 9\n"
    },
    {
        "number": 3442,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 10') == '10'\nassert solution('10 1') == '10'\n\nassert solution('15 10') == '0'\nassert solution('10 15') == '10'\n\nassert solution('3 4') == '2'\n"
    },
    {
        "number": 3442,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 1') == '0'\nassert solution('0 1') == '1'\nassert solution('1 1') == '2'\nassert solution('10 2') == '1'\nassert solution('4 3') == '3'\n"
    },
    {
        "number": 3442,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 4''') == '10'\nassert solution('''100 100''') == '0'\nassert solution('''4 5''') == '5'\nassert solution('''3 2''') == '0'\nassert solution('''3 3''') == '2'\n"
    },
    {
        "number": 3442,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 10''') == '10'\nassert solution('''0 1''') == '0'\nassert solution('''0 2''') == '1'\nassert solution('''1 0''') == '1'\nassert solution('''0 1 2''') == '3'\n"
    },
    {
        "number": 3442,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 10') == '10'\nassert solution('1 100') == '0'\nassert solution('2 2') == '0'\nassert solution('-1 1') == '-1'\nassert solution('-2 2') == '-1'\n"
    },
    {
        "number": 3442,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 10') == '10'\nassert solution('10 0') == '0'\nassert solution('1 0') == '0'\nassert solution('0 1') == '0'\nassert solution('0 0') == '0'\n"
    },
    {
        "number": 3442,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    '1 10') == '10'\nassert solution(\n    '1 1000000') == ''\nassert solution(\n    '1 10000000') == ''\nassert solution(\n    '1 10000000000') == ''\nassert solution(\n    '1 1000000000000000000') == ''\n"
    },
    {
        "number": 3442,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 10') == '10'\nassert solution('2 13') == '16'\nassert solution('5 4') == '16'\nassert solution('10 1') == '10'\nassert solution('5 2') == '25'\n"
    },
    {
        "number": 3442,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10 10') == '10'\nassert solution('1 10') == '10'\nassert solution('1 1000000000') == '0'\nassert solution('100 200') == '0'\nassert solution('0 1') == '0'\n"
    },
    {
        "number": 3442,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 10') == '10'\nassert solution('-1 -10') == '-10'\nassert solution('-1 -5') == '0'\nassert solution('0 2') == '0'\nassert solution('0 1000') == '1'\n"
    },
    {
        "number": 3443,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 0\n1000 0\n0 1000\n1000 1000''') == '0'\nassert solution('''2\n1000 1000\n0 1000\n1000 0''') == '0'\nassert solution('''4\n0 0\n1 1\n0 1\n1 0''') == '2'\nassert solution('''7\n0 0\n1 1\n0 1\n1 0\n0 1\n-1 1\n1 1''') == '3'\nassert solution('''5\n0 0\n0 1\n0 2\n0 3\n0 4''') == '3'\n"
    },
    {
        "number": 3443,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0 0\n1000 0\n0 1000\n1000 1000''') == \"0\"\nassert solution('''2\n-1 1\n0 0\n3 0\n5 -1\n-1 2\n2 2\n4 -2\n0 0\n1 -2\n3 3\n5 -3''') == \"3\"\n'''"
    },
    {
        "number": 3443,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == 0\n\"\"\"\n"
    },
    {
        "number": 3443,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\""
    },
    {
        "number": 3443,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 0\\n1000 0\\n0 1000\\n1000 1000\\n') == '0'\nassert solution('3\\n0 0\\n100 100\\n0 100\\n100 1000\\n') == '0'\nassert solution('2\\n0 0\\n100 100\\n') == '1'\nassert solution('3\\n0 0\\n100 100\\n0 100\\n100 1000\\n') == '1'\nassert solution('5\\n0 0\\n100 100\\n0 100\\n100 1000\\n0 100\\n1000 1000\\n') == '2'\n"
    },
    {
        "number": 3443,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0 0\") == \"0\"\nassert solution(\"1000 0\") == \"0\"\nassert solution(\"0 1000\") == \"0\"\nassert solution(\"1000 1000\") == \"0\"\n\nassert solution(\"1 1\") == \"0\"\n"
    },
    {
        "number": 3443,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n0 0\\n1000 0\\n0 1000\\n1000 1000') == 0\nassert solution('4\\n0 0\\n1000 0\\n0 1000\\n1000 1000\\n0 0') == 0\nassert solution('5\\n0 0\\n1000 0\\n0 1000\\n1000 1000\\n1000 0') == 2\nassert solution('1\\n-20000 -20000\\n-20000 0\\n0 -20000\\n0 0') == 1\nassert solution('2\\n-2 -2\\n2 -2\\n2 2\\n2 2\\n0 0') == 2\n"
    },
    {
        "number": 3443,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''0 0\n1000 0\n0 1000\n1000 1000''') == 0\nassert solution('''1\n0 0\n100000 0\n0 100000''') == 1\nassert solution('''10\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10''') == 1\nassert solution('''2\n0 0\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n11 11''') == 2\nassert solution('''3\n0 0\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n11 11''') == 1\n"
    },
    {
        "number": 3443,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1\n0 0\n1000 0\n0 1000\n1000 1000\n''') == '0'\nassert solution('''4\n0 0\n1000 0\n0 1000\n1000 1000\n''') == '0'\nassert solution('''3\n0 0\n1000 0\n0 1000\n1000 1000\n''') == '2'\nassert solution('''5\n0 0\n1000 0\n0 1000\n1000 1000\n0 0\n1000 0\n''') == '3'\nassert solution('''10\n0 0\n1000 0\n0 1000\n1000 1000\n0 0\n1000 0\n0 1000\n1000 1000\n0 0\n1000 0\n''') == '4'\n"
    },
    {
        "number": 3443,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''4\n0 0\n1000 0\n0 1000\n1000 1000'''\n) == '0'\n\nassert solution(\n'''1\n0 0\n1000 0'''\n) == '1'\n\nassert solution(\n'''1\n0 0\n1000 0'''\n) == '0'\n\nassert solution(\n'''8\n0 0\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7'''\n) == '2'\n\nassert solution(\n'''8\n0 0\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7'''\n) == '1'"
    },
    {
        "number": 3444,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 1\n0 1 0.5\n''') == '0.500000000 1.000000000'\nassert solution('''3 2\n0 2 1 1\n2 1 0 0.5\n1 1 0 1\n1 1 1 0.5\n0 1 1 1\n0 1 0 0.5\n1 2 0 1\n1 2 1 1\n2 2 1 0.5\n''') == '-1.000000001 0.5000000001 0.5000000001'\nassert solution('''2 2\n0 2 1 1\n2 1 0 0.5\n1 1 0 1\n1 1 1 0.5\n0 1 1 1\n0 1 0 0.5\n1 2 0 1\n1 2 1 1\n2 2 1 0.5\n''') == '0.5000000001 0.5000000001 0.5000000001'\nassert solution('''5 3\n0 4 3 2 1\n3 4 1 1 1\n4 2 1 0 1\n4 3 1 1 1\n4 4 2 1 1\n''') == '-1.000000001'\nassert solution('''5 5\n0 5 4 4 3 2\n5 4 3 2 1 1\n4 3 1 1 1 1\n3 2 1 0 1 1\n2 1 1 1 1 1\n1 1 1 1 1 1\n''') == '-1.000000001'\n"
    },
    {
        "number": 3444,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 1\n0 1 0.5\n1 1 0.2\n1 1 0.1\n0 0 0.7''') == '0.500000000 1.000000000'\nassert solution('''2 2\n0 1 0.5\n1 1 0.5\n1 1 0.5\n0 0 0.7''') == '0.500000000 1.000000000'\nassert solution('''3 3\n0 1 0.5\n1 1 0.5\n1 1 0.5\n0 0 0.7''') == '0.500000000 1.000000000'\nassert solution('''4 4\n0 1 0.5\n1 1 0.5\n1 1 0.5\n0 0 0.7''') == '0.500000000 1.000000000'\nassert solution('''5 5\n0 1 0.5\n1 1 0.5\n1 1 0.5\n0 0 0.7\n0 0 0.4''') == '0.500000000 1.000000000'\n"
    },
    {
        "number": 3444,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '0.500000000 1.000000000'\nassert solution(stdin) == '0.500000000 1.000000000'\nassert solution(stdin) == '0.500000000 1.000000000'\nassert solution(stdin) == '0.500000000 1.000000000'\nassert solution(stdin) == '0.500000000 1.000000000'\n"
    },
    {
        "number": 3444,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 1\n0 1 0.5\n''') == '0.500000000 1.000000000'\nassert solution('''2 2\n0 1 0.5\n0 2 0.75\n''') == '0.7500000000 0.2500000000'\nassert solution('''2 3\n0 1 0.5\n0 2 0.75\n1 2 0.25\n1 3 0.125\n''') == '0.600000000 0.1500000000 0.12500000000'\nassert solution('''2 4\n0 1 0.5\n0 2 0.75\n1 2 0.25\n1 3 0.125\n2 3 0.0625\n2 4 0.03125\n''') == '0.12500000000 0.062500000000 0.0312500000000'\nassert solution('''4 4\n0 1 0.5\n0 2 0.75\n1 2 0.25\n1 3 0.125\n2 3 0.0625\n2 4 0.03125\n3 4 0.015625\n''') == '0.12500000000 0.01562500000000 0.01562500000000'\n"
    },
    {
        "number": 3444,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 1\") == \"0.500000000 1.000000000\"\nassert solution(\"2 2\") == \"0.0\"\nassert solution(\"5 3\") == \"-1.000000000\"\nassert solution(\"4 1\") == \"-1.000000000\"\nassert solution(\"8 1\") == \"-1.000000000\"\n"
    },
    {
        "number": 3444,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 1\\n0 1 0.5') == '0.500000000 1.000000000'\nassert solution('1 1\\n0 1 0.5') == '0.500000000 1.000000000'\nassert solution('0 1\\n1 1 1') == '0.500000000 1.000000000'\nassert solution('2 2\\n0 1 0.5\\n1 1 1') == '0.500000000 1.000000000'\nassert solution('2 2\\n0 1 0.5\\n1 1 1') == '0.500000000 1.000000000'\n"
    },
    {
        "number": 3444,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 1''') == '0.500000000 1.000000000'\n'''\n2 2\n0 1 0.5\n1 2 0.5\n'''\nassert solution('''2 2''') == '0.500000000 1.000000000'\n'''\n2 3\n0 1 0.5\n1 2 0.5\n2 3 0.5\n'''\nassert solution('''2 3''') == '0.500000000 1.000000000'\n'''\n2 4\n0 1 0.5\n1 2 0.5\n2 3 0.5\n3 4 0.5\n'''\nassert solution('''2 4''') == '0.500000000 1.000000000'\n'''\n2 5\n0 1 0.5\n1 2 0.5\n2 3 0.5\n3 4 0.5\n4 5 0.5\n'''\nassert solution('''2 5''') == '0.500000000 1.000000000'\n'''\n2 6\n0 1 0.5\n1 2 0.5\n2 3 0.5\n3 4 0.5\n4 5 0.5\n5 6 0.5\n'''\n"
    },
    {
        "number": 3444,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''0\n1\n0.5''') == '0.500000000 1.000000000'\nassert solution('''1\n2\n0.5\n0.5\n0.5''') == '0.500000000 1.000000000'\nassert solution('''2\n4\n0.5\n0.5\n0.5\n0.5''') == '0.25 0.75 0.25 0.75'\nassert solution('''10\n100\n0.1\n0.1\n0.1\n0.1\n0.1\n0.1\n0.1\n0.1\n0.1\n0.1''') == '0.01 0.11 0.01 0.11'\nassert solution('''20\n40\n0.2\n0.2\n0.2\n0.2\n0.2\n0.2\n0.2\n0.2\n0.2''') == '0.10000000000000002 0.10000000000000002 0.10000000000000002 0.10000000000000002'\n"
    },
    {
        "number": 3444,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 1\n0 1 0.5\n''') == '0.500000000 1.000000000'\nassert solution('''5 4\n0 1 0.5\n1 1 0.5\n2 2 0.5\n3 2 0.5\n4 2 0.5\n2 3 1.0\n0 3 0.5\n4 3 0.5\n1 4 0.5\n3 4 0.5\n2 4 0.5\n1 3 1.0\n0 3 0.5\n2 3 0.5\n0 4 0.5\n4 4 0.5\n1 4 0.5\n3 4 0.5\n2 4 0.5\n1 3 1.0\n0 3 0.5\n2 3 0.5\n0 4 0.5\n4 4 0.5\n1 4 0.5\n3 4 0.5\n2 4 0.5\n1 3 1.0\n0 3 0.5\n2 3 0.5\n0 4 0.5\n4 4 0.5\n1 4 0.5\n3 4 0.5\n2 4 0.5\n1 3 1.0\n0 3 0.5\n2 3 0.5\n0 4 0.5\n4 4 0.5\n1 4 0.5\n3 4 0.5\n2 4 0.5\n1 3 1.0\n0 3 0.5\n2 3 0.5\n0 4 0.5\n4 4 0.5\n1 4 0.5\n3 4 0.5\n2 4 0.5\n1 3 1.0\n0 3 0.5\n2 3 0.5\n0 4 0.5\n4 4 0.5\n1 4 0.5\n3 4 0.5\n2 4 0.5\n1 3 1.0\n0 3 0.5\n2 3 0.5\n0 4 0.5\n4 4 0.5\n1 4 0.5\n3 4 0.5\n2 4 0.5\n1 3 1.0\n0 3 0.5\n2 3 0.5\n0 4 0.5\n4 4 0.5\n1 4 0.5\n3 4 0.5\n2 4 0.5\n1 3 1.0\n0 3 0.5\n2 3 0.5\n0 4 0.5\n4 4 0.5\n1 4 0.5\n3 4 0.5\n2 4 0.5\n1 3 1.0\n0 3 0.5\n2 3 0.5\n0 4 0.5\n4 4 0.5\n1 4 0.5\n3 4 0.5\n2 4 0.5\n1 3 1.0\n0 3 0.5\n2 3 0.5\n0 4 0.5\n4 4 0.5\n1 4 0.5\n3 4 0.5\n2 4 0.5\n1 3 1.0\n0 3 0.5\n2 3 0.5\n0 4 0.5\n4 4 0.5\n1 4 0.5\n3 4 0.5\n2 4 0.5\n1 3 1.0\n0 3 0.5\n2 3 0.5\n0 4 0.5\n4 4 0.5\n1 4 0.5\n3 4 0.5\n2 4 0.5\n1 3 1.0\n0 3 0.5\n2 3 0.5\n0 4 0.5\n4 4 0.5\n1 4 0.5\n3 4 0.5\n2 4 0.5\n1 3 1.0\n0 3 0.5\n2 3 0.5\n0 4 0.5\n4 4 0.5\n1 4 0.5\n3 4 0.5\n2 4 0.5\n1 3 1.0\n0 3 0.5\n2 3 0.5\n0 4 0.5\n4 4 0.5\n1 4 0.5\n3 4 0.5\n2 4 0.5\n1 3 1.0\n0 3 0.5\n2 3 0.5\n0 4 0.5\n4 4 0.5\n1 4 0.5\n3 4 0.5\n2 4 0.5\n1 3 1.0\n0 3 0.5\n2 3 0.5\n0 4 0.5\n4 4 0.5\n1 4 0.5\n3 4 0.5\n2 4 0.5\n1 3 1.0\n0 3 0.5\n2 3 0.5\n0 4 0.5\n4 4 0.5\n1 4 0.5\n3 4 0.5\n2 4 0.5\n1 3 1.0\n0 3 0.5\n2 3 0.5\n0 4 0.5\n4 4 0.5\n1 4 0.5\n3 4 0.5\n2 4 0.5\n1 3 1.0\n0 3 0.5\n2 3 0.5\n0 4 0.5\n4 4 0.5\n1 4 0.5\n3 4 0.5\n2 4 0.5\n1 3 1.0\n0 3 0.5\n2 3 0.5\n0 4 0.5\n4 4 0.5\n1 4 0.5\n3 4 0.5\n2 4 0.5\n1 3 1.0\n0 3 0.5\n2 3 0.5\n0 4 0.5\n4 4 0.5\n1 4 0.5\n3 4 0.5\n2 4 0.5\n1 3 1.0\n0 3 0.5\n2 3 0.5\n0 4 0.5\n4 4 0.5\n1 4 0.5\n3 4 0.5\n2 4 0.5\n1 3 1.0\n0 3 0.5\n2 3 0.5\n0 4 0.5\n4 4 0.5\n1 4 0.5\n3 4 0.5\n2 4 0.5\n1 3 1.0\n0 3 0.5\n2 3 0.5\n0 4 0.5\n4 4 0."
    },
    {
        "number": 3444,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input(\"\")) == \"0.500000000 1.000000000\"\nassert solution(input(\"\")) == \"0.500000000 1.000000000\"\nassert solution(input(\"\")) == \"0.500000000 1.000000000\"\nassert solution(input(\"\")) == \"0.500000000 1.000000000\"\nassert solution(input(\"\")) == \"0.500000000 1.000000000\"\n"
    },
    {
        "number": 3445,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(open(\"test_data\", \"r\").read()) == \"7\"\nassert solution(open(\"data\", \"r\").read()) == \"20\"\n"
    },
    {
        "number": 3445,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''6\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10\n'''\n) == '7'\n\nassert solution(\n'''3\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10\n'''\n) == '8'\n\nassert solution(\n'''4\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10\n'''\n) == '8'\n\nassert solution(\n'''2\n1 1\n10 10\n'''\n) == '10'\n\nassert solution(\n'''5\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10\n'''\n) == '8'"
    },
    {
        "number": 3445,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '7'\nassert solution(stdin) == '7'\nassert solution(stdin) == '7'\nassert solution(stdin) == '7'\nassert solution(stdin) == '7'\n"
    },
    {
        "number": 3445,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(SAMPLE_INPUT_1) == SAMPLE_OUTPUT_1\nassert solution(SAMPLE_INPUT_2) == SAMPLE_OUTPUT_2\nassert solution(SAMPLE_INPUT_3) == SAMPLE_OUTPUT_3\nassert solution(SAMPLE_INPUT_4) == SAMPLE_OUTPUT_4\nassert solution(SAMPLE_INPUT_5) == SAMPLE_OUTPUT_5\n"
    },
    {
        "number": 3445,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n6\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10\n''') == '7'\n'''\nfrom sys import stdin"
    },
    {
        "number": 3445,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10''') == '7'\nassert solution('''9\n1 1\n3 1\n6 1\n9 1\n8 1\n7 1\n4 1\n2 1''') == '7'\nassert solution('''6\n0 1\n2 1\n3 1\n5 1\n9 1\n10 1''') == '6'\nassert solution('''5\n0 1\n1 1\n2 1\n3 1\n4 1''') == '5'\nassert solution('''3\n1 1\n2 1\n3 1''') == '2'\n"
    },
    {
        "number": 3445,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10''') == '7'\nassert solution('''10\n5 5\n7 7\n2 2\n5 4\n6 3\n5 2\n7 2\n3 3\n1 1\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10''') == '7'\nassert solution('''10\n5 5\n7 7\n2 2\n5 4\n6 3\n5 2\n7 2\n3 3\n1 1\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10''') == '7'\nassert solution('''10\n5 5\n7 7\n2 2\n5 4\n6 3\n5 2\n7 2\n3 3\n1 1\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10''') == '7'\nassert solution('''10\n5 5\n7 7\n2 2\n5 4\n6 3\n5 2\n7 2\n3 3\n1 1\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10''') == '7'\n"
    },
    {
        "number": 3445,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10\n''') == \"7\"\nassert solution('''10\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10\n5 2\n5 4\n4 4\n3 3\n2 2\n1 1\n''') == \"9\"\nassert solution('''1\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10\n5 2\n5 4\n4 4\n3 3\n2 2\n1 1\n''') == \"1\"\nassert solution('''2\n2 2\n1 1\n1 1\n''') == \"2\"\nassert solution('''1\n1 1\n1 1\n1 1\n''') == \"1\"\n"
    },
    {
        "number": 3445,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1\\n1\\n2') == '1'\nassert solution('3\\n1\\n1\\n2\\n2\\n2') == '3'\nassert solution('4\\n1\\n1\\n2\\n3\\n3\\n3') == '6'\nassert solution('5\\n1\\n1\\n2\\n3\\n4\\n4') == '5'\n"
    },
    {
        "number": 3445,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\"\"\n\"\"\") == \"\"\n\nassert solution(\"\"\"\n6\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10\n\"\"\") == \"7\"\nassert solution(\"\"\"\n7\n7\n7\n7\n7\n7\n7\n\"\"\") == \"7\"\nassert solution(\"\"\"\n10\n2\n8\n10\n5\n9\n3\n5\n7\n2\n8\n1\n7\n2\n1\n4\n8\n3\n3\n3\n3\n7\n3\n2\n3\n1\n4\n6\n5\n5\n4\n3\n3\n2\n2\n1\n1\n4\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 3446,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"a b\") == \"9-b\"\nassert solution(\"a b\") == \"9-b\"\nassert solution(\"a b\") == \"9-b\"\nassert solution(\"a b\") == \"9-b\"\nassert solution(\"a b\") == \"9-b\"\n"
    },
    {
        "number": 3446,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '9-b'\nassert solution(stdin) == '8-a'\nprint(\"Tests passed.\")\n"
    },
    {
        "number": 3446,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\\n') == '9-b\\n8-a'\n\"\"\"\n"
    },
    {
        "number": 3446,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n0\n''') == \"9-b\\n8-a\\n\"\nassert solution('''2\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n1\n''') == \"9-b\\n8-a\\n\"\nassert solution('''2\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n1\n''') == \"9-b\\n8-a\\n\"\nassert solution('''2\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n2\n''') == \"9-b\\n8-a\\n\"\nassert solution('''2\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n2\n''') == \"9-b\\n8-a\\n\"\n"
    },
    {
        "number": 3446,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\\n\"\n    \"a b\\n\"\n    \"3-b 5-b\\n\"\n    \"6-a 2-b\\n\"\n    \"2\\n\"\n    \"aba\\n\"\n    \"bba\\n\"\n    \"0\\n\") == \"9-b\\n8-a\\n\"\n\nassert solution(\"3\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    \"a\\n\"\n    \"b\\n\"\n    "
    },
    {
        "number": 3446,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''a b\n3-b 5-b\n6-a 2-b\n2\naba\nbba''') == '9-b\\n8-a'\nassert solution('''a b\n3-b 5-b\n6-a 2-b\n2\nbaa\nbbb\n0''') == '8-a\\n8-b'\nassert solution('''a b\n3-b 5-b\n6-a 2-b\n2\nbaa\nbbb\n0''') == '8-a\\n8-b'\nassert solution('''a b\n3-b 5-b\n6-a 2-b\n2\nbba\nbbb\n0''') == '8-b\\n8-a'\nassert solution('''a b\n3-b 5-b\n6-a 2-b\n2\nbbb\nbba\n0''') == '8-b\\n8-a'\n"
    },
    {
        "number": 3446,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''a b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n0\n''') == '8-a\\n9-b'\nassert solution('''a b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n1\n''') == '9-a\\n8-b'\nassert solution('''a b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n3\n''') == '5-a\\n9-b'\nassert solution('''a b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n4\n''') == '5-a\\n8-b'\nassert solution('''a b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n4\n''') == '9-a\\n8-b'\n"
    },
    {
        "number": 3446,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('a b') == '9-b'\nassert solution('c b') == '8-a'\nassert solution('b a') == '9-b'\nassert solution('b b') == '9-b'\nassert solution('a a') == '9-b'\n"
    },
    {
        "number": 3446,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('a b\\n3-b 5-b\\n6-a 2-b') == '9-b'\nassert solution('a b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba') == '8-a'\nassert solution('a b\\n3-b 5-b\\n6-a 2-b\\n2\\nbaa\\nbaa') == '8-a'\nassert solution('a b\\n3-b 5-b\\n6-a 2-b\\n2\\nbaa\\naa') == '8-a'\n\"\"\"\n\nfrom collections import defaultdict\n"
    },
    {
        "number": 3446,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(open(\"test_solution_3.txt\").read()) == \"6-a\"\nassert solution(open(\"test_solution_2.txt\").read()) == \"8-a\"\n\"\"\"\n"
    },
    {
        "number": 3447,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''1\necho\n1\nechoecho\n'''\n) == '3246R3246'\n\nassert solution(\n'''4\nabcdefg\nghijklm\nnopqrst\nuvwxyz\n'''\n) == 'RDD'\n\nassert solution(\n'''1\naeiou\naiou\no\n'''\n) == 'DDR'\n\nassert solution(\n'''5\nafcrx\nabxcfy\nxqc\nxqx\n'''\n) == 'DDRDDR'\n\nassert solution(\n'''15\nabcdefghijklmnopqrstuvwxyz\nabcdefghijklmnopqrstuvwxyz\nabcdefghijklmnopqrstuvwxyz\nabcdefghijklmnopqrstuvwxyz\n'''\n) == 'DRURURDUUDRDURURDUUDRURDUUU'"
    },
    {
        "number": 3447,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == '3246R3246'\nassert solution('2\\n1') == '8654U8654'\nassert solution('2\\n3') == '8654U8654'\nassert solution('2\\n5') == '54321U54321'\nassert solution('2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 3447,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n1\\necho\\n1\\necho\\n') == '3246R3246'\nassert solution('2\\n1\\necho\\n1\\necho\\n2\\n') == '3246U3246'\nassert solution('2\\n1\\necho\\n1\\necho\\n3\\n') == '3246U3246'\nassert solution('2\\n1\\necho\\n1\\necho\\n2\\n1\\necho\\n') == '3246R3246'\nassert solution('2\\n1\\necho\\n1\\necho\\n2\\n1\\necho\\n3\\n') == '3246U3246'\n"
    },
    {
        "number": 3447,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"3246\"\nassert solution(\"2\") == \"3246\"\nassert solution(\"3\") == \"3246\"\nassert solution(\"4\") == \"3246\"\nassert solution(\"5\") == \"3246\"\n"
    },
    {
        "number": 3447,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == ''\ninput = '3\\necho\\necho\\n1'\nassert solution(input) == '123456789'\ninput = '5\\n12345'\nassert solution(input) == '12345'\ninput = '3\\n111\\n111\\n111'\nassert solution(input) == '9'\ninput = '1\\n11'\nassert solution(input) == 'U2'\ninput = '2\\n101'\n"
    },
    {
        "number": 3447,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\\necho\\necho\\necho\\necho\\necho\\necho\") == \"RDDD\"\nassert solution(\"1\\necho\\necho\\necho\\necho\\necho\\necho\") == \"DDDD\"\nassert solution(\"3\\necho\\necho\\necho\\necho\\necho\\necho\") == \"UUDU\"\nassert solution(\"2\\necho\\necho\\necho\\necho\\necho\\necho\") == \"DDDD\"\n"
    },
    {
        "number": 3447,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\n3\nabc\nde\n3\nb\n''') == '634R'\nassert solution('''2\n1\nb\n2\nc\n''') == '34'\nassert solution('''1\n2\n''') == '24'\nassert solution('''2\n1\n1\n2\n2\n''') == 'U1D2'\nassert solution('''2\n2\n1\n2\n2\n''') == 'DRDU'\n"
    },
    {
        "number": 3447,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('echo') == '3246'\nassert solution('echo') == '3246'\nassert solution('e\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne\\ne"
    },
    {
        "number": 3447,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('echo\\necho\\n') == '3246R3246'\nassert solution('echoecho\\necho\\necho\\necho\\n') == '3246R3246'\nassert solution('aababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc\\naababc"
    },
    {
        "number": 3447,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''1\necho\n1\nechoecho\n''') == '3246R3246'\n\nassert solution(\n'''1\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\n"
    },
    {
        "number": 3448,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 1') == 'YES'\nassert solution('3 2') == 'YES'\nassert solution('3 2') == 'NO'\nassert solution('1 2') == 'NO'\nassert solution('2 1') == 'YES'\n"
    },
    {
        "number": 3448,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 1') == 'YES\\n1 2\\n1 3'\nassert solution('1 2') == 'YES\\n2 1'\nassert solution('1 1') == 'NO'\nassert solution('5 1') == 'YES\\n1 2\\n1 3\\n1 4\\n1 5\\n2 1\\n2 4'\nassert solution('2 2') == 'NO'\n"
    },
    {
        "number": 3448,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"YES\"\nassert solution(\"2 3\") == \"YES\"\nassert solution(\"3 2\") == \"NO\"\nassert solution(\"2 1\") == \"YES\"\nassert solution(\"1 3\") == \"NO\"\n"
    },
    {
        "number": 3448,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 1\") == \"YES\"\nassert solution(\"3 2\") == \"NO\"\nassert solution(\"4 1\") == \"NO\"\nassert solution(\"4 2\") == \"YES\"\nassert solution(\"5 1\") == \"NO\"\n"
    },
    {
        "number": 3448,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 1\") == \"YES\"\nassert solution(\"4 1\") == \"NO\"\nassert solution(\"2 2\") == \"YES\"\nassert solution(\"2 1\") == \"NO\"\nassert solution(\"3 2\") == \"NO\"\n"
    },
    {
        "number": 3448,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 1') == 'NO'\nassert solution('1 2') == 'YES'\nassert solution('1 1') == 'YES'\nassert solution('1 1') == 'NO'\nassert solution('1 1') == 'NO'\n"
    },
    {
        "number": 3448,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 3448,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 1') == 'YES\\n1 2\\n1 3\\n'\nassert solution('2 1') == 'NO\\n'\nassert solution('3 2') == 'YES\\n1 1\\n1 2\\n1 3\\n2 2\\n2 3\\n'\nassert solution('2 2') == 'NO\\n'\nassert solution('3 3') == 'YES\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n3 1\\n3 2\\n3 3\\n'\n"
    },
    {
        "number": 3448,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n'''\n"
    },
    {
        "number": 3448,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''3 1'''\n) == 'YES'\n\nassert solution(\n'''1 1'''\n) == 'YES'\n\nassert solution(\n'''1 2'''\n) == 'NO'\n\nassert solution(\n'''3 3'''\n) == 'YES'\n\nassert solution(\n'''1 1'''\n) == 'YES'"
    },
    {
        "number": 3449,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n9\n1\n6 6\n333333\n300003\n300003\n300003\n300003\n333333\n\"\"\") == \"176\"\n"
    },
    {
        "number": 3449,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '176'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3449,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"9\\n1\\n6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n\") == \"176\"\nassert solution(\"1\\n6\\n6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n\") == \"176\"\nassert solution(\"10\\n6\\n1\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n300003\\n300003\\n\") == \"435\"\nassert solution(\"10\\n6\\n1\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n300003\\n300003\\n\") == \"435\"\nassert solution(\"10\\n6\\n1\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n300003\\n300003\\n\") == \"435\"\n"
    },
    {
        "number": 3449,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('9\\n1\\n6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333') == '176'\nassert solution('9\\n1\\n6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333') == '176'\nassert solution('9\\n1\\n1\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333') == '144'\nassert solution('9\\n1\\n1\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333') == '144'\nassert solution('9\\n1\\n1\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333') == '144'\n"
    },
    {
        "number": 3449,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('9\\n1\\n6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n') == '176\\n'\n"
    },
    {
        "number": 3449,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''9\n1\n6 6\n333333\n300003\n300003\n300003\n300003\n333333\n''') == '176'\nassert solution(\n'''9\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n''') == '0'\nassert solution(\n'''9\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n''') == '0'\nassert solution(\n'''9\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n''') == '0'\nassert solution(\n'''9\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n''') == '0'\n"
    },
    {
        "number": 3449,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"9\\n1\\n6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == \"176\"\nassert solution(\n\"9\\n1\\n6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == \"176\"\nassert solution(\n\"9\\n1\\n6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == \"176\"\nassert solution(\n\"9\\n1\\n6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == \"176\"\nassert solution(\n\"9\\n1\\n6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == \"176\"\n"
    },
    {
        "number": 3449,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''9\n1\n6 6\n333333\n300003\n300003\n300003\n300003\n333333\n''') == '176'\n\nassert solution('''10\n1\n5 5\n111111\n000001\n000001\n000001\n000001\n000001\n000001\n000001\n''') == '144'\n\nassert solution('''10\n1\n5 5\n111111\n000001\n000001\n000001\n000001\n000001\n000001\n''') == '204'\n\nassert solution('''10\n3\n7 7\n11111\n22222\n22222\n22222\n22222\n22222\n22222\n''') == '72'\n\nassert solution('''10\n3\n7 7\n11111\n22222\n22222\n22222\n22222\n22222\n22222\n''') == '80'"
    },
    {
        "number": 3449,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('9\\n1\\n6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n') == '176'\nassert solution('5\\n1\\n6\\n22222\\n22222\\n22222\\n22222\\n22222\\n22222\\n') == '170'\nassert solution('5\\n1\\n3\\n11111\\n22222\\n22222\\n22222\\n22222\\n22222\\n') == '238'\nassert solution('5\\n2\\n3\\n11111\\n22222\\n22222\\n22222\\n22222\\n22222\\n') == '258'\nassert solution('5\\n2\\n3\\n11111\\n22222\\n22222\\n22222\\n22222\\n22222\\n') == '268'\n"
    },
    {
        "number": 3449,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"9\\n1\\n6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n\") == \"176\"\nassert solution(\"2\\n1\\n5\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 3450,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('12') == '6'\nassert solution('120') == '6'\nassert solution('945231415') == '6'\n"
    },
    {
        "number": 3450,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == '0'\nassert solution('1') == '0'\nassert solution('123') == '0'\nassert solution('999') == '0'\nassert solution('123456789') == '0'\n"
    },
    {
        "number": 3450,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"12\"\nassert solution(\"10\") == \"1\"\nassert solution(\"100\") == \"0\"\nassert solution(\"1000\") == \"0\"\nassert solution(\"10000\") == \"0\"\n"
    },
    {
        "number": 3450,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"12\"\nassert solution(stdin) == \"012\"\nassert solution(stdin) == \"012\"\nassert solution(stdin) == \"012\"\nassert solution(stdin) == \"012\"\n\n\"\"\""
    },
    {
        "number": 3450,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('12') == ''\nassert solution('123') == '123'\nassert solution('123456789') == '123'\n"
    },
    {
        "number": 3450,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5''') == '12'\nassert solution('''12''') == '12'\nassert solution('''100''') == '6'\nassert solution('''1000''') == '56'\nassert solution('''10000''') == '566'\n"
    },
    {
        "number": 3450,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5''') == '012'\nassert solution('''2''') == '011'\nassert solution('''567''') == '012'\nassert solution('''1234''') == '0123'\nassert solution('''789''') == '0123'\n"
    },
    {
        "number": 3450,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('111') == '111'\nassert solution('12') == '12'\nassert solution('123') == '12'\nassert solution('1234') == '12'\n"
    },
    {
        "number": 3450,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5''') == '12'\nassert solution('''123456789''') == '123'\nassert solution('''1234567890''') == '12'\nassert solution('''1234567891''') == '12'\nassert solution('''123456789123456789''') == '123'\n"
    },
    {
        "number": 3450,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5') == '012'\nassert solution('8') == '023'\nassert solution('100') == '0'\n\"\"\"\n"
    },
    {
        "number": 3451,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == '?'\nassert solution('((()') == '480'\nassert solution('((())))') == '480'\nassert solution('((())))') == '480'\nassert solution('(((())))') == '480'\n"
    },
    {
        "number": 3451,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 1\\n((()\\n480\\n617\\n-570\\n928\") == \"480\"\nassert solution(\"4 1\\n((()\\n480\\n617\\n-570\\n928\") == \"480\"\nassert solution(\"1 1\\n(()\\n480\\n617\\n-570\\n928\") == \"?\"\nassert solution(\"2 3\\n((()\\n480\\n617\\n-570\\n928\") == \"?\"\n\n-----Note-----\nIn an ideal world, we would compute a minimum cost for each position in the sequence, and then print a total cost for the sequence. However, it is not possible to do this in O(n) time (due to the exponential nature of the problem). To avoid a O(n) time, we need to compute a balanced parenthetical sequence in O(1) time.\n\n-----Resources-----\n- https://www.hackerrank.com/challenges/the-minion-game/forum/comments/21261\n- https://www.hackerrank.com/challenges/the-minion-game/forum/comments/21260\n- https://en.wikipedia.org/wiki/Parenthesis\n- https://www.hackerearth.com/practice/data-structures/arrays/1-d/practice-problems/algorithm/the-minion-game/\n\n\"\"\""
    },
    {
        "number": 3451,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''((())''') == '480'\nassert solution('''((()))''') == '480'\nassert solution('''((()))''') == '480'\nassert solution('''((()))''') == '480'\nassert solution('''(((())))''') == '480'\n"
    },
    {
        "number": 3451,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"(())\") == \"()\"\nassert solution(\"((()))\") == \"()\"\nassert solution(\"(((())))\") == \"()\"\nassert solution(\"((((()))))\") == \"()\"\nassert solution(\"((((((()))))))\") == \"()\"\n"
    },
    {
        "number": 3451,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    \"1\\n1\"\n    \"((()\"\n    \"-480\\n617\\n-570\\n928\\n\"\n    )\n    ) == \"480\"\nassert solution(\n    \"2\\n2\"\n    \"((()\"\n    \"-480\\n617\\n-570\\n928\\n\"\n    \"(((()\"))\n    ) == \"480\"\nassert solution(\n    \"3\\n3\"\n    \"((()\"\n    \"-480\\n617\\n-570\\n928\\n\"\n    \"((()\"\n    \"((((()\"))\n    ) == \"480\"\nassert solution(\n    \"4\\n4\"\n    \"((()\"\n    \"-480\\n617\\n-570\\n928\\n\"\n    \"((()\"\n    \"((((()\"))\n    ) == \"480\"\nassert solution(\n    \"5\\n5\"\n    \"((()\"\n    \"-480\\n617\\n-570\\n928\\n\"\n    \"((()\"\n    \"((((()\"))\n    ) == \"480\"\n"
    },
    {
        "number": 3451,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''(()''') == '480'\nassert solution('''((()\n480\n617\n-570\n928\n''') == '480'\nassert solution(''')))(''') == '-570'\nassert solution('''(()\n480\n617\n-570\n928\n''') == '-570'\nassert solution('''))))((''') == '928'\n"
    },
    {
        "number": 3451,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '?'\nassert solution(stdin) == '?'\n\"\"\""
    },
    {
        "number": 3451,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('((()') == '480'\nassert solution('((()' + '))') == '480'\nassert solution('(()' + ')') == '480'\nassert solution('((()' + '))' + '))') == '480'\nassert solution('((()' + ')') + '))') == '480'\n"
    },
    {
        "number": 3451,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"?\"\n\"\"\"\n\n\"\"\"\nA simple brute force solution would be to try every possible sequence of parenthetical characters, and see if they're balanced. If they are balanced, then we just count the number of open parentheses and subtract that from the number of closing parentheses.\n\nIf the total number of open parentheses is equal to the number of closing parentheses, then the sequence is balanced. If they are equal to each other, then we only need to subtract the number of closing parentheses from the number of open parentheses.\n\nThis solution is O(n^2) in worst case and O(n) in best case.\n\"\"\""
    },
    {
        "number": 3451,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''(())''') == '?'\nassert solution('''()''') == '?'\nassert solution('''(()())''') == '?'\nassert solution('''(((''') == '?'\nassert solution('''((()))''') == '?'\n"
    },
    {
        "number": 3452,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"13\n2 2 4\n3 1 3 5\n2 2 4\n3 1 3 6\n2 2 6\n2 4 5\n2 8 9\n2 7 9\n2 7 8\n2 11 13\n2 10 12\n2 11 13\n2 10 12\"\"\") == \"2 4 5 6 7 8 9 10 11 12 13\"\nassert solution(\"\"\"9\n0 1 2\n1 2 3\n2 3 4\n3 4 5\n4 5 6\n5 6 7\n6 7 8\n7 8 9\"\"\") == \"0 1 2 3 4 5 6 7 8 9\"\n"
    },
    {
        "number": 3452,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n1\n2 2 4\n3 1 3 5\n2 2 4\n3 1 3 6\n2 2 6\n2 4 5\n2 8 9\n2 7 9\n2 7 8\n2 11 13\n2 10 12\n2 11 13\n2 10 12\n''') == '2 4\\n5 6\\n7 8 9 10 11 12 13'\n\nassert solution(\n'''\n1\n2 2 4\n3 1 3 5\n2 2 4\n3 1 3 6\n2 2 4\n3 1 3 6\n2 2 6\n2 4 5\n2 8 9\n2 7 9\n2 7 8\n2 11 13\n2 10 12\n2 11 13\n2 10 12\n''') == '2 4\\n5 6\\n7 8 9 10 11 12 13'\n\nassert solution(\n'''\n3\n2 2 4\n3 1 3 5\n2 2 4\n3 1 3 6\n2 2 6\n2 4 5\n2 8 9\n2 7 9\n2 7 8\n2 11 13\n2 10 12\n2 11 13\n2 10 12\n''') == '2 4\\n5 6\\n7 8 9 10 11 12 13'\n\nassert solution(\n'''\n3\n2 2 4\n3 1 3 5\n2 2 4\n3 1 3 6\n2 2 4\n3 1 3 6\n2 2 6\n2 4 5\n2 8 9\n2 7 9\n2 7 8\n2 11 13\n2 10 12\n2 11 13\n2 10 12\n''') == '2 4\\n5 6\\n7 8 9 10 11 12 13'\n\nassert solution(\n'''\n13\n2 2 4\n3 1 3 5\n2 2 4\n3 1 3 6\n2 2 6\n2 4 5\n2 8 9\n2 7 9\n2 7 8\n2 11 13\n2 10 12\n2 11 13\n2 10 12\n2 11 13\n2 10 12\n2 10 12\n''') == '2 4\\n5 6\\n7 8 9 10 11 12 13'"
    },
    {
        "number": 3452,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2\\n2 3\\n3 4') == '2 4'\nassert solution('1\\n1\\n1') == 'none'\nassert solution('11\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9') == 'none'\nassert solution('2\\n2\\n2') == 'none'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == 'none'\n"
    },
    {
        "number": 3452,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 2 4\\n3 1 3 5\\n2 2 4\") == \"2 4\"\nassert solution(\"2 2 4\\n3 1 3 5\\n2 2 4\") == \"2 4\"\nassert solution(\"2 2 4\\n3 1 3 5\\n2 2 4\") == \"2 4\"\nassert solution(\"2 2 4\\n3 1 3 5\\n2 2 4\") == \"2 4\"\nassert solution(\"2 2 4\\n3 1 3 5\\n2 2 4\") == \"2 4\"\n"
    },
    {
        "number": 3452,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('11 2 3') == '1 2'\nassert solution('12 3 2') == '1 2'\nassert solution('14 5 2') == '1 2'\nassert solution('15 8 3') == '1 2'\nassert solution('19 3 4') == '1 2'\n"
    },
    {
        "number": 3452,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''13\n2 2 4\n3 1 3 5\n2 2 4\n3 1 3 6\n2 2 6\n2 4 5\n2 8 9\n2 7 9\n2 7 8\n2 11 13\n2 10 12\n2 11 13\n2 10 12''') == '2 4\\n5 6\\n7 8 9 10 11 12 13'\n\nassert solution('''11\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16"
    },
    {
        "number": 3452,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3452,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"8\\n1 2 3 4\\n1 2 3\\n2 3 5\\n3 1 3 5\\n4 2 4\\n4 2\\n5 6\") == \"2 4\\n5 6\"\nassert solution(\"8\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\"\n\n-----Notes-----\n-    The order of the elements in each set is arbitrary.\n-    The first room in a set is the room that Jay goes into when he enters the maze.\n-    Note that the order of the sets is determined by the size of the largest room. If there are no sets, then the output is none.\n-    Do not use loops when solving this problem.\n-    Do not use the word set. Use the word list instead.\n\"\"\"\n"
    },
    {
        "number": 3452,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n"
    },
    {
        "number": 3452,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\n\n## Testcases\n"
    },
    {
        "number": 3453,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 5\n1 2 3\n1 4 8\n2 3 12\n3 5 4\n4 5 2''') == '35 39 36 27 29'\n'''\nassert solution('''10 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10''') == '159160117'\n'''\nassert solution('''1000 1000\n1 2 1\n1 2 2\n1 2 3\n1 2 4\n1 2 5\n1 2 6\n1 2 7\n1 2 8\n1 2 9\n1 2 10\n1 2 11\n1 2 12\n1 2 13\n1 2 14\n1 2 15\n1 2 16\n1 2 17\n1 2 18\n1 2 19\n1 2 20\n1 2 21\n1 2 22\n1 2 23\n1 2 24\n1 2 25\n1 2 26\n1 2 27\n1 2 28\n1 2 29\n1 2 30\n1 2 31\n1 2 32\n1 2 33\n1 2 34\n1 2 35\n1 2 36\n1 2 37\n1 2 38\n1 2 39\n1 2 40\n1 2 41\n1 2 42\n1 2 43\n1 2 44\n1 2 45\n1 2 46\n1 2 47\n1 2 48\n1 2 49\n1 2 50\n1 2 51\n1 2 52\n1 2 53\n1 2 54\n1 2 55\n1 2 56\n1 2 57\n1 2 58\n1 2 59\n1 2 60\n1 2 61\n1 2 62\n1 2 63\n1 2 64\n1 2 65\n1 2 66\n1 2 67\n1 2 68\n1 2 69\n1 2 70\n1 2 71\n1 2 72\n1 2 73\n1 2 74\n1 2 75\n1 2 76\n1 2 77\n1 2 78\n1 2 79\n1 2 80\n1 2 81\n1 2 82\n1 2 83\n1 2 84\n1 2 85\n1 2 86\n1 2 87\n1 2 88\n1 2 89\n1 2 90\n1 2 91\n1 2 92\n1 2 93\n1 2 94\n1 2 95\n1 2 96\n1 2 97\n1 2 98\n1 2 99\n1 2 100\n1 2 101\n1 2 102\n1 2 103\n1 2 104\n1 2 105\n1 2 106\n1 2 107\n1 2 108\n1 2 109\n1 2 110\n1 2 111\n1 2 112\n1 2 113\n1 2 114\n1 2 115\n1 2 116\n1 2 117\n1 2 118\n1 2 119\n1 2 120\n1 2 121\n1 2 122\n1 2 123\n1 2 124\n1 2 125\n1 2 126\n1 2 127\n1 2 128\n1 2 129\n1 2 130\n1 2 131\n1 2 132\n1 2 133\n1 2 134\n1 2 135\n1 2 136\n1 2 137\n1 2 138\n1 2 139\n1 2 140\n1 2 141\n1 2 142\n1 2 143\n1 2 144\n1 2 145\n1 2 146\n1 2 147\n1 2 148\n1 2 149\n1 2 150\n1 2 151\n1 2 152\n1 2 153\n1 2 154\n1 2 155\n1 2 156\n1 2 157\n1 2 158\n1 2 159\n1 2 160\n1 2 161\n1 2 162\n1 2 163\n1 2 164\n1 2 165\n1 2 166\n1 2 167\n1 2 168\n1 2 169\n1 2 170\n1 2 171\n1 2 172\n1 2 173\n1 2 174\n1 2 175\n1 2 176\n1 2 177\n1 2 178\n1 2 179\n1 2 180\n1 2 181\n1 2 182\n1 2 183\n1 2 184\n1 2 185\n1 2 186\n1 2 187\n1 2 188\n1 2 189\n1 2 190\n1 2 191\n1 2 192\n1 2 193\n1 2 194\n1 2 195\n1 2 196\n1 2 197\n1 2 198\n1 2 199\n1 2 200\n1 2 201\n1 2 202\n1 2 203\n1 2 204\n1 2 205\n1 2 206\n1 2 207\n1 2 208\n1 2 209\n1 2 210\n1 2 211\n1 2 212\n1 2 213\n1 2 214\n1 2 215\n1 2 216\n1 2 217\n1 2 218\n1 2 219\n1 2 220\n1 2 221\n1 2 222\n1 2 223\n1 2 224\n1 2 225\n1 2 226\n1 2 227\n1 2 228\n1 2 229\n1 2 230\n1 2 231\n1 2 232\n1 2 233\n1 2 234\n1 2 235\n1 2 236\n1 2 237\n1 2 238\n1 2 239\n1 2 240\n1 2 241\n1 2 242\n1 2 243\n1 2 244\n1 2 245\n1 2 246\n1 2 247\n1 2 248\n1 2 249\n1 2 250\n1 2 251\n1 2 252\n1 2 253\n1 2 254\n1 2 255\n1 2 256\n1 2 257\n1 2 258\n1 2 259\n1 2 260\n1 2 261\n1 2 262\n1 2 263\n1 2 264\n1 2 265\n1 2 266\n1 2 267\n1 2 268\n1 2 269\n1 2 270\n1 2 271\n1 2 272\n1 2 273\n1 2 274\n1 2 275\n1 2 276\n1 2 277\n1 2 278\n1 2 279\n1 2 280\n1 2 281\n1 2 282\n1 2 283\n1 2 284\n1 2 285\n1 2 286\n1 2 287\n1 2 288\n1 2 289\n1 2 290\n1 2 291\n1 2 292\n1 2 293\n1 2 294\n1 2 295"
    },
    {
        "number": 3453,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 5\n1 2 3\n1 4 8\n2 3 12\n3 5 4\n4 5 2''') == '35 39 36 27 29'\nassert solution('''7 7\n1 2 3\n1 4 5\n2 3 6\n3 4 7\n4 5 8\n5 6 9\n6 7 10\n7 8 11''') == '9 18 19 7'\nassert solution('''8 8\n1 2 3\n1 4 5\n2 3 6\n3 4 7\n4 5 8\n5 6 9\n6 7 10\n7 8 11\n8 9 12''') == '9 9 10'\nassert solution('''9 9\n1 2 3\n1 4 5\n2 3 6\n3 4 7\n4 5 8\n5 6 9\n6 7 10\n7 8 11\n8 9 12\n9 10 11''') == '9'\nassert solution('''1 1\n1 2 3\n2 3 4\n3 4 5''') == '5'\n'''\n-----My Analysis-----\nNot a single problem I came across. The most straightforward way is to make a graph, and then add the property as you walk through the graph. There is a lot of room to improve upon this, and I believe that it would be easier to just use the speed of the character to determine the danger level of the nodes in the graph, rather than the total time to traverse.\n\nI don't think the problem is that difficult. I suspect that the time complexity is also optimal for the problem, since the complexity of this algorithm is O(n) time, rather than O(n^2), where n is the number of nodes in the graph.\n\nI think the complexity is O(N*M) as we have to loop through all the nodes, and O(M) time to determine the distance between the nodes, and I think that's the worst case scenario, since we have to find the fastest route between all the nodes.\n\nThe time complexity for the graph is O(n*(n-1) + m*(m-1)) = O(n*n + m*m) = O(n*n) = O(n^2), so it's not an issue.\n\nThe space complexity of the graph is O(n*m), so it's not an issue.\n\nFor the time complexity, it would be better to do a pre-sorting on the nodes and the edges.\n\nFor the space complexity, it would be better to make a heap instead of a graph, since the complexity would be O(n) rather than O(n*n).\n\nBut, after reading the discussion, I think that the code below is the most efficient way to do the analysis.\n'''\n"
    },
    {
        "number": 3453,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\"\nassert solution(\"4 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\"\nassert solution(\"10 3\\n1 2 3\\n1 3 2\") == \"39\"\nassert solution(\"10 10\\n1 2 3\\n1 3 2\\n2 3 1\\n3 4 2\\n4 5 3\\n5 6 4\\n6 7 5\\n7 8 6\\n8 9 7\\n9 10 8\") == \"0 2 2\"\nassert solution(\"10 1\\n1 1\") == \"0\"\n"
    },
    {
        "number": 3453,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 4\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4') == '35 39 36 27 29'\nassert solution('5 6\\n1 2 3\\n1 4 6\\n2 3 4\\n3 4 5\\n4 5 6') == '39 36 36 27 29'\nassert solution('5 2\\n1 2 3\\n1 3 2') == '35'\nassert solution('4 2\\n1 2 3\\n1 3 2') == '35'\nassert solution('4 2\\n1 2 3\\n1 3 2') == '35'\n"
    },
    {
        "number": 3453,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\\n\") == \"35 39 36 27 29\"\nassert solution(\"1 1\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\\n\") == \"35 39 36 27 29\"\nassert solution(\"1 2\\n1 4 3\\n2 3 6\\n3 5 9\\n4 5 3\\n5 6 4\\n6 7 7\\n7 8 9\\n8 9 2\\n9 5 3\\n9 7 4\\n9 7 5\\n9 7 6\\n9 8 9\\n9 9 6\\n9 9 7\\n\") == \"26 40 26 22 36 24 26\"\nassert solution(\"1 1\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\\n5 6 7\\n6 7 8\\n7 8 9\\n8 9 2\\n9 5 3\\n9 7 4\\n9 7 5\\n9 7 6\\n9 8 9\\n9 9 6\\n9 9 7\\n9 9 8\\n9 9 9\\n\") == \"26 40 26 22 36 24 26\"\nassert solution(\"1 1\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\\n5 6 7\\n6 7 8\\n7 8 9\\n8 9 2\\n9 5 3\\n9 7 4\\n9 7 5\\n9 7 6\\n9 8 9\\n9 9 6\\n9 9 7\\n9 9 8\\n9 9 9\\n\") == \"26 40 26 22 36 24 26\"\n"
    },
    {
        "number": 3453,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2') == '35 39 36 27 29'\n\nassert solution('5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2') == '35 39 36 27 29'\n-----Hint-----\n\n(1) The goal of this problem is to count the number of times a path can be taken between any two chambers, excluding taking the tunnels on the path.\n(2) Use a set to store the tunnel lengths.\n(3) Start from the first chamber and move through the tunnel to the last chamber.\n(4) Each time a tunnel is taken, add its length to the running tally of the total time spent in each chamber.\n(5) Add the total time spent in each chamber to the running tally of the total time.\n(6) The time spent in each chamber is the difference between the current time and the time when the tunnel was first taken.\n(7) Repeat until you have travelled through all the chambers.\n(8) Divide the total time spent in each chamber by the total time.\n(9) Add the remainders of the division to get the danger level of the chamber.\n\"\"\"\nimport sys\nfrom typing import List\n\nN, M = [int(x) for x in sys.stdin.readline().split()]\ndanger_level = [0] * N\n\nfor _ in range(M):\n    A, B, L = [int(x) for x in sys.stdin.readline().split()]\n    danger_level[A - 1] += L\n    danger_level[B - 1] += L\n\nfor d in danger_level:\n    print(d % (10 ** 9 + 7))\n"
    },
    {
        "number": 3453,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 5\n1 2 3\n1 4 8\n2 3 12\n3 5 4\n4 5 2''') == '35 39 36 27 29'\nassert solution('''7 5\n1 2 3\n1 4 8\n2 3 12\n3 5 4\n4 5 2\n5 6 1\n6 4 7\n''') == '25 34 31 25'\nassert solution('''11 22\n1 2 2\n1 3 3\n1 4 4\n1 5 5\n1 6 6\n1 7 7\n1 8 8\n1 9 9\n1 10 10\n1 11 11\n1 12 12\n1 13 13\n1 14 14\n1 15 15\n1 16 16\n1 17 17\n1 18 18\n1 19 19\n1 20 20\n''') == '75 78 67 63 59 56 51 48 45 44 43 40 39 38 37 36 33 32 31 30 29 28 26 25 22 21 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1'\n"
    },
    {
        "number": 3453,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 5\n1 2 3\n1 4 8\n2 3 12\n3 5 4\n4 5 2''') == '35 39 36 27 29'\nassert solution('''5 5\n1 2 3\n1 4 8\n2 3 12\n3 5 4\n4 5 2''') == '35 39 36 27 29'\nassert solution('''4 4\n1 2 3 4\n1 2 3 4\n1 2 3 4\n1 2 3 4''') == '7 13 14'\nassert solution('''5 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5''') == '0 0 0 0 0'\nassert solution('''7 7\n1 2 3 4 5 6 7\n1 2 3 4 5 6 7\n1 2 3 4 5 6 7\n1 2 3 4 5 6 7\n1 2 3 4 5 6 7\n1 2 3 4 5 6 7''') == '0 0 0 0 0 0 0'\n"
    },
    {
        "number": 3453,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\"\nassert solution(\"4 4\\n1 2 1\\n2 3 1\\n3 4 1\\n4 1 1\") == \"45 16 14 6\"\nassert solution(\"4 4\\n1 2 1\\n2 3 1\\n3 4 1\\n4 1 1\") == \"45 16 14 6\"\nassert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\"\nassert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\"\n"
    },
    {
        "number": 3453,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 5\n1 2 3\n1 4 8\n2 3 12\n3 5 4\n4 5 2''') == '35 39 36 27 29'\nassert solution('''5 5\n1 2 3\n1 4 8\n2 3 12\n3 5 4\n4 5 2''') == '35 39 36 27 29'\nassert solution('''3 3\n1 1 1\n1 2 3\n2 1 1''') == '1'\nassert solution('''3 3\n2 1 1\n1 1 1\n2 1 3''') == '5'\nassert solution('''5 5\n1 2 3\n1 4 8\n2 3 12\n3 5 4\n4 5 2''') == '35 39 36 27 29'\n"
    },
    {
        "number": 3454,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') is None\nassert solution('1 2 1') == '0 672'\nassert solution('2 2 1') == '0 384'\nassert solution('3 4 1') == '0 496'\nassert solution('4 4 2') == '0 864'\n"
    },
    {
        "number": 3454,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 3\\n3 2 1') == '0 672'\nassert solution('2 3\\n3 2 1') == '0 0'\nassert solution('1 2\\n3 2 1') == '0 0'\nassert solution('3 3\\n3 2 1') == '0 0'\nassert solution('1 2\\n1 2 1') == '0 0'\n"
    },
    {
        "number": 3454,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n3 2 1') == '0 672'\nassert solution('3\\n3 2 1') == '0 0'\nassert solution('5\\n5 3 2 1') == '5 36'\nassert solution('7\\n7 3 2 1') == '0 0'\nassert solution('10\\n10 3 2 1') == '0 0'\n"
    },
    {
        "number": 3454,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 4\\n3 2 1') == '0 672'\nassert solution('3 4\\n3 2 2') == '0 0'\nassert solution('3 4\\n3 2 3') == '0 0'\nassert solution('3 4\\n3 2 4') == '0 0'\nassert solution('3 4\\n3 2 5') == '0 0'\n"
    },
    {
        "number": 3454,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 3\\n3 2 1') == '0 672'\n\"\"\"\n\n\"\"\"\nfrom functools import lru_cache\n\n@lru_cache(None)\n"
    },
    {
        "number": 3454,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(open(\"test_input.txt\").read()) == \"0 672\"\n'''\n"
    },
    {
        "number": 3454,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"5 5\\n\"\n    \"1 2 1\\n\"\n    \"1 3 1\\n\"\n    \"2 3 2\\n\"\n    \"3 4 3\\n\"\n    \"2 3 2\\n\"\n    \"3 3 3\\n\"\n    \"1 4 1\\n\"\n    \"1 5 1\\n\"\n    \"2 4 2\\n\"\n    \"1 5 1\\n\"\n) == \"0 672\"\nassert solution(\n    \"5 5\\n\"\n    \"1 2 1\\n\"\n    \"1 3 1\\n\"\n    \"2 3 2\\n\"\n    \"3 4 3\\n\"\n    \"2 3 2\\n\"\n    \"3 3 3\\n\"\n    \"1 4 1\\n\"\n    \"1 5 1\\n\"\n    \"2 4 2\\n\"\n    \"1 5 1\\n\"\n) == \"0 672\"\nassert solution(\n    \"5 5\\n\"\n    \"2 3 2\\n\"\n    \"3 3 3\\n\"\n    \"1 4 1\\n\"\n    \"1 5 1\\n\"\n    \"2 4 2\\n\"\n    \"1 5 1\\n\"\n) == \"0 672\"\nassert solution(\n    \"5 5\\n\"\n    \"1 2 1\\n\"\n    \"1 3 1\\n\"\n    \"2 3 2\\n\"\n    \"3 4 3\\n\"\n    \"2 3 2\\n\"\n    \"3 3 3\\n\"\n    \"1 4 1\\n\"\n    \"1 5 1\\n\"\n    \"2 4 2\\n\"\n    \"1 5 1\\n\"\n) == \"0 672\"\nassert solution(\n    \"5 5\\n\"\n    \"1 2 1\\n\"\n    \"1 3 1\\n\"\n    \"2 3 2\\n\"\n    \"3 4 3\\n\"\n    \"2 3 2\\n\"\n    \"3 3 3\\n\"\n    \"1 4 1\\n\"\n    \"1 5 1\\n\"\n    \"2 4 2\\n\"\n    \"1 5 1\\n\"\n) == \"0 672\"\n"
    },
    {
        "number": 3454,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input) == \"0 672\"\n\n'''"
    },
    {
        "number": 3454,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 3\\n3 2 1') == '0 672'\nassert solution('4 2\\n1 1 1 1') == '0 164568'\nassert solution('5 5\\n2 3 4 5 6') == '0 6262829'\nassert solution('4 5\\n2 3 4 5') == '0 6262829'\nassert solution('7 7\\n3 4 5 6 7 8') == '0 21789904'\n"
    },
    {
        "number": 3454,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 4\\n4 2 1\\n') == '0 672'\nassert solution('5 5\\n5 4 3 2 1\\n') == '0 672'\nassert solution('2 4\\n3 2 1\\n') == '0 672'\nassert solution('2 5\\n5 4 3 2 1\\n') == '0 672'\nassert solution('1 4\\n1 2 1\\n') == '1 1'\n"
    },
    {
        "number": 3455,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\nprint(solution(stdin))\n-----\n"
    },
    {
        "number": 3455,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 5 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50''') == '2.50000'\nassert solution('''2 5 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n0 9 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50''') == 'Impossible'\nassert solution('''2 5 100\n1 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n0 9 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50''') == '2.50000'\nassert solution('''2 5 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n0 9 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50''') == '2.50000'\nassert solution('''2 5 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n0 9 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n0 9 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n0 9 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n0 9 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n0 9 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50''') == '2.50000'\n"
    },
    {
        "number": 3455,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '2.500000'\n\n-----Template-------\n"
    },
    {
        "number": 3455,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''1 1 100'''\n    ) == 'Impossible'\nassert solution(\n'''2 2 100'''\n    ) == 'Impossible'\nassert solution(\n'''2 1 100'''\n    ) == 'Impossible'\nassert solution(\n'''2 2 100'''\n    ) == 'Impossible'\nassert solution(\n'''3 3 100'''\n    ) == '1.00000'\n"
    },
    {
        "number": 3455,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50') == '2.500000'\nassert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n4 50 40\\n0 2 40\\n0 1 22\\n0 10 30\\n0 2 30\\n0 1 14\\n0 10 5\\n0 0 4\\n0 3 4\\n0 4 1\\n0 3 2\\n0 1 1\\n0 0 1\\n0 2 0\\n0 1 1\\n0 1 4\\n0 1 4\\n0 1 1\\n0 3 4\\n0 1 1\\n0 1 4\\n0 1 3\\n0 1 3\\n0 2 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0"
    },
    {
        "number": 3455,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50''') == '2.500000'\nassert solution('''2 4 1\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50''') == 'Impossible'\nassert solution('''2 4 1\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50''') == '2.500000'\nassert solution('''4 4 1\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50''') == '2.500000'\nassert solution('''4 4 1\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n2 2 18\n2 40 50''') == '2.500000'\n"
    },
    {
        "number": 3455,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 5 100') == '2.500000'\nassert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50') == '2.500000'\nassert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n0 40 30\\n0 40 40') == 'Impossible'\nassert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n0 40 30\\n0 40 40\\n0 50 50') == '2.500000'\nassert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n0 40 30\\n0 40 40\\n0 50 50\\n0 40 30') == '2.500000'\n"
    },
    {
        "number": 3455,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''0 0 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50''') == '2.500000'\nassert solution('''0 0 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50''') == 'Impossible'\nassert solution('''0 0 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50''') == 'Impossible'\n'''"
    },
    {
        "number": 3455,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"4 5 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\"\"\"\n) == \"2.500000\"\n\nassert solution(\n    \"\"\"4 5 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n0 0 100\n1 10 5\n1 20 35\n2 2 18\n2 40 50\"\"\"\n) == \"Impossible\"\n\nassert solution(\n    \"\"\"4 5 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n0 0 100\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n1 0 100\n1 10 5\n1 20 35\n2 2 18\n2 40 50\"\"\"\n) == \"Impossible\"\n\nassert solution(\n    \"\"\"4 5 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n0 0 100\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n1 0 100\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n1 0 100\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n1 0 100\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n1 0 100\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n1 0 100\n1 10 5\n1 20 35\n2 2 18\n2 40 50\"\"\"\n) == \"2.500000\"\n\nassert solution(\n    \"\"\"4 5 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n0 0 100\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n1 0 100\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n1 0 100\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n1 0 100\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n1 0 100\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n1 0 100\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n1 0 100\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n1 0 100\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n1 0 100\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n1 0 100\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n1 0 100\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n1 0 100\n1 10 5\n1 20 35\n2 2 18\n2 40 50\"\"\"\n) == \"2.500000\""
    },
    {
        "number": 3455,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 5 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n''') == '2.500000'\nassert solution('''4 5 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40 50\n2 40"
    },
    {
        "number": 3456,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n5 4 3 2 1''') == '3'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '5'\nassert solution('''7\n1 1 1 1 1 1 1 1''') == '1'\nassert solution('''14\n1 2 3 4 5 6 7 8 9 10 11 12 13 14''') == '8'\nassert solution('''15\n1 1 1 1 1 1 1 1 1 1 1 1''') == '5'\n"
    },
    {
        "number": 3456,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3\"\n\n---\n\nMy Note:\n1. If the number of crates is an even number, I would be able to rearrange the number of crates into an even number of rows.\n\n2. Because the number of crates is an even number, I will try to arrange them in an even number of rows.\n\n3. To help me know how many rows I need to rearrange, I will give a table, telling me the number of crates in each row.\n\n4. If the number of crates is an odd number, I will rearrange them into an even number of rows.\n\n5. In the first step, I first need to rearrange them into an even number of rows. Since the number of crates is an even number, I will rearrange them into an even number of rows.\n\n6. I will still need to rearrange them into an even number of rows, so I will have to do that again.\n\n7. This is the last step, I need to rearrange them into an even number of rows.\n\n8. If the number of crates is an odd number, I will rearrange them into an even number of rows.\n\n9. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n10. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n11. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n12. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n13. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n14. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n15. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n16. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n17. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n18. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n19. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n20. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n21. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n22. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n23. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n24. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n25. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n26. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n27. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n28. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n29. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n30. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n31. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n32. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n33. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n34. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n35. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n36. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n37. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n38. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n39. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n40. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n41. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n42. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n43. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n44. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n45. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n46. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n47. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n48. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n49. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n50. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n51. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n52. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n53. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n54. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n55. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n56. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n57. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n58. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n59. If the number of crates is an even number, I will rearrange them into an even number of rows.\n\n60. If the number of"
    },
    {
        "number": 3456,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n5 3 4''') == '3'\nassert solution('''1\n2 3 4 5 6\n1''') == '3'\nassert solution('''3\n5 5 4 4\n1''') == '3'\nassert solution('''3\n5 3 4\n1''') == '3'\nassert solution('''4\n1 1 1 1 1\n1\n1 1 1 1''') == '2'\n"
    },
    {
        "number": 3456,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n5 3 4''') == '3'\nassert solution('''3\n5 3 4''') == '3'\nassert solution('''3\n4 2 4 4\n4 1 1 1''') == '3'\nassert solution('''3\n1 2 1\n2 2 1''') == '2'\nassert solution('''3\n1 2 1\n2 1 1''') == '2'\n"
    },
    {
        "number": 3456,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '2'\n"
    },
    {
        "number": 3456,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"3\"\nassert solution(\"5 3 4\") == \"3\"\nassert solution(\"5 3 4 4 2\") == \"6\"\n"
    },
    {
        "number": 3456,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n3 4') == '3'\nassert solution('5\\n1 2 3 4') == '1'\nassert solution('5\\n2 2 2 2') == '3'\nassert solution('5\\n2 2 1 1') == '2'\nassert solution('5\\n2 2 1 1\\n2 1 1 2') == '3'\n"
    },
    {
        "number": 3456,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '3'\n\nassert stdin == '3\\n5 3 4'\n\nassert stdin == '3\\n5 3 3 3'\n\nassert stdin == '3\\n5 3 3 1'\n\nassert stdin == '3\\n5 3 3 1 1'"
    },
    {
        "number": 3456,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('3,1') == '3'\n"
    },
    {
        "number": 3456,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n5 3 4') == '3'\nassert solution('1\\n2') == '1'\nassert solution('10\\n10 10 10 10 10 10 10 10') == '5'\nassert solution('5\\n5 5 5 5 5 5 5') == '0'\nassert solution('1\\n10') == '1'\n"
    },
    {
        "number": 3457,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == '1'\nassert solution('2 1 1') == '2'\nassert solution('2 1 2') == '2'\nassert solution('2 1 3') == '2'\nassert solution('2 1 4') == '2'\n"
    },
    {
        "number": 3457,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 2\n\n'''\n\n'''\nfrom math import pow\n"
    },
    {
        "number": 3457,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == 2\n\nstdin = '''10 10 10'''\nassert solution(stdin) == 728511\n\nstdin = '''8 7 3'''\nassert solution(stdin) == 109934\n\nstdin = '''7 4 1'''\nassert solution(stdin) == 5882914\n\nstdin = '''1 1 1'''\nassert solution(stdin) == 1\n\nstdin = '''1 1000 2'''\n"
    },
    {
        "number": 3457,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 1 1''') == '2'\n'''\n2 1 1\n2 1 1\n'''\nassert solution('''9 1 1''') == '20'\n'''\n9 1 1\n9 1 1\n9 1 1\n9 1 1\n9 1 1\n9 1 1\n9 1 1\n9 1 1\n9 1 1\n9 1 1\n9 1 1\n'''\nassert solution('''6 2 2''') == '55'\n'''\n6 2 2\n6 2 2\n6 2 2\n6 2 2\n6 2 2\n6 2 2\n6 2 2\n6 2 2\n6 2 2\n6 2 2\n6 2 2\n6 2 2\n6 2 2\n'''\nassert solution('''3 2 2''') == '52'\n'''\n3 2 2\n3 2 2\n3 2 2\n3 2 2\n3 2 2\n3 2 2\n3 2 2\n3 2 2\n3 2 2\n3 2 2\n3 2 2\n3 2 2\n3 2 2\n3 2 2\n3 2 2\n3 2 2\n3 2 2\n3 2 2\n3 2 2\n3 2 2\n3 2 2\n'''\nassert solution('''1 1 1''') == '1'\n'''\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n"
    },
    {
        "number": 3457,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 1 1') == '2'\nassert solution('3 2 3') == '7'\nassert solution('10 2 10') == '361'\nassert solution('100 10 100') == '13726'\nassert solution('10000 2 10000') == '1'\n"
    },
    {
        "number": 3457,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 1 1\") == \"2\"\nassert solution(\"1 2 1\") == \"2\"\nassert solution(\"2 2 1\") == \"1\"\nassert solution(\"1 1 2\") == \"2\"\nassert solution(\"2 1 2\") == \"0\"\n"
    },
    {
        "number": 3457,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"6\"\n'''\n"
    },
    {
        "number": 3457,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '2'\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 3457,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 1 1''') == 2\nassert solution('''1 1 1''') == 1\nassert solution('''1 1 2''') == 1\nassert solution('''1 2 2''') == 0\nassert solution('''1 3 2''') == 3\n"
    },
    {
        "number": 3457,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3458,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 3 5\") == \"7\"\nassert solution(\"1 3 5 6\") == \"2\"\nassert solution(\"1 3 5 6 7\") == \"0\"\nassert solution(\"1 3 5 6 7 8\") == \"0\"\nassert solution(\"1 3 5 6 7 8 9\") == \"3\"\n"
    },
    {
        "number": 3458,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == \"7\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3458,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n1\n5 3\n''') == '7'\nassert solution('''\n4\n1 3 5 7\n''') == '5'\nassert solution('''\n3\n10 8 19\n''') == '19'\nassert solution('''\n5\n2 3 4 5 6\n''') == '6'\n'''\n\nsolution.__doc__ = '''\\\n    1\n    3 3 5\n    '''"
    },
    {
        "number": 3458,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"7\"\nassert solution(stdin) == \"7\"\nassert solution(stdin) == \"7\"\n"
    },
    {
        "number": 3458,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"1 2 3\") == \"0\"\nassert solution(\"1 3 5\") == \"7\"\n"
    },
    {
        "number": 3458,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n1 3 5') == '7'\nassert solution('2\\n1 1') == '1'\nassert solution('2\\n2 2') == '0'\nassert solution('2\\n1 1') == '0'\nassert solution('5\\n1 1 1 1 1') == '0'\n"
    },
    {
        "number": 3458,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 3 5\") == \"7\"\n\"\"\"\n"
    },
    {
        "number": 3458,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"xor-sum\"\nassert solution(stdin) == \"7\"\n\"\"\"\n\n\nimport sys\n"
    },
    {
        "number": 3458,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"7\"\n'''\n"
    },
    {
        "number": 3458,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1 3 5\n''') == '7'\n\nassert solution('''\n4\n2 3 4 5\n''') == '6'\n\nassert solution('''\n5\n1 1 1 1 1\n''') == '0'\n\nassert solution('''\n6\n2 4 4 6 8\n''') == '10'\n'''\n"
    },
    {
        "number": 3459,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\n\"\"\"\n\nfrom collections import defaultdict\n\nSAMPLE_INPUT = \"\"\"\n1\n5\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n7\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n5\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n2\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n3\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n2\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n3\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n3\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n\"\"\"\n\nSAMPLE_OUTPUT = \"\"\"\nmary jetsons\nruth jetsons\njohn jetsons\nfred jetsons\nmary jetsons\nruth jetsons\njohn jetsons\nfred jetsons\nruth jetsons\n\n\"\"\"\n"
    },
    {
        "number": 3459,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets''') == '''fred jetsons\njohn jets\nruth rockets'''\nassert solution('''2\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets''') == '''Impossible'''\nassert solution('''2\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 3459,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1\n1\n1\n1\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n"
    },
    {
        "number": 3459,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n2\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n\"\"\") == \"\"\"\nfred jetsons\njohn jets\nruth rockets\n\"\"\"\nassert solution(\n\"\"\"\n1\n6\na b c d e f\nb c d\nc\na\n\"\"\") == \"\"\"\nb c\n\"\"\"\nassert solution(\n\"\"\"\n3\n1\na\nb\nc\nd\ne\nf\n1\na\nb\nc\n1\na\nb\nc\n1\n1\n1\n1\n1\n1\n\"\"\") == \"\"\"\na\nb\nc\n\"\"\"\nassert solution(\n\"\"\"\n5\n1\na\nb\nc\nd\ne\n1\n1\n1\n1\n1\n1\n\"\"\") == \"\"\"\nImpossible\n\"\"\"\nassert solution(\n\"\"\"\n4\n2\nx\na\nb\nc\nd\n1\n1\n1\n1\n1\n1\n\"\"\") == \"\"\"\na\nb\nc\n\"\"\"\n"
    },
    {
        "number": 3459,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n4\nfred dinosaur 2 jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets''') == 'fred jetsons\\njohn jets\\nruth rockets'\nassert solution('''1\n1\nblack sheep 4 lions''') == 'Impossible'\nassert solution('''2\n4\nfred dinosaur 2 jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets''') == 'jetsons\\njets\\nrvps'\nassert solution('''1\n2\nfred dinosaur 2 jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets''') == 'Impossible'\nassert solution('''1\n5\nfred dinosaur 2 jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\nfred dinosaur 2 jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets''') == 'Impossible'\n"
    },
    {
        "number": 3459,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets''') == '''fred jetsons\njohn jets\nruth rockets\n\nfred jetsons\njohn jets\nruth rockets\n\nfred jetsons\njohn jets\nruth rockets'''\n"
    },
    {
        "number": 3459,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"4\") == \"\"\nassert solution(\"4\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"\"\n"
    },
    {
        "number": 3459,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets''') == '''fred jetsons\njohn jets\nruth rockets'''\nassert solution('''2\n5\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\njack horse 5 cups''') == '''Impossible'''\nassert solution('''2\n3\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\njack horse 5 cups\npeter piper 3 cups\nruth platypus 1 rockets\njack horse 5 cups\njack horse 5 cups\njack horse 5 cups''') == '''fred jetsons\njohn jets\nruth rockets'''\n\n-----------------------------------------------------------------------------------"
    },
    {
        "number": 3459,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n''') == '''fred jetsons\njohn jets\nruth rockets\n'''\nassert solution('''5\n7\ntanner catarazzo 7 fizz\njohn chen 3 fizz\ndino mondo 2 fizz\nbarkley houston 7 fizz\ndino mondo 2 fizz\n''') == '''tanner catarazzo 7 fizz\nbarkley houston 7 fizz\ndino mondo 2 fizz\n'''\nassert solution('''7\n7\ntanner catarazzo 7 fizz\njohn chen 3 fizz\ndino mondo 2 fizz\nbarkley houston 7 fizz\ndino mondo 2 fizz\n''') == '''tanner catarazzo 7 fizz\nbarkley houston 7 fizz\ndino mondo 2 fizz\n'''\nassert solution('''7\n7\ntanner catarazzo 7 fizz\njohn chen 3 fizz\ndino mondo 2 fizz\nbarkley houston 7 fizz\ndino mondo 2 fizz\n''') == '''tanner catarazzo 7 fizz\ndino mondo 2 fizz\nbarkley houston 7 fizz\n'''\nassert solution('''7\n7\ntanner catarazzo 7 fizz\njohn chen 3 fizz\ndino mondo 2 fizz\nbarkley houston 7 fizz\ndino mondo 2 fizz\n''') == '''tanner catarazzo 7 fizz\ndino mondo 2 fizz\nbarkley houston 7 fizz\n'''\n"
    },
    {
        "number": 3459,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4') == 'fred jetsons\\njohn jets\\nruth rockets'\n'''\n"
    },
    {
        "number": 3460,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\\n-10 9\\n-2 3\\n\") == \"1 2 1\"\nassert solution(\"3\\n1 3\\n2 4\\n3 5\\n4 6\\n5 7\\n6 8\\n7 9\\n8 10\\n9 11\\n10 12\\n11 13\\n12 14\\n13 15\\n14 16\\n15 17\\n16 18\\n17 19\\n18 20\\n19 21\\n20 22\\n21 23\\n22 24\\n23 25\\n24 26\\n25 27\\n26 28\\n27 29\\n28 30\\n29 31\\n30 32\\n31 33\\n32 34\\n33 35\\n34 36\\n35 37\\n36 38\\n37 39\\n38 40\\n39 41\\n40 42\\n41 43\\n42 44\\n43 45\\n44 46\\n45 47\\n46 48\\n47 49\\n48 50\\n49 51\\n50 52\\n51 53\\n52 54\\n53 55\\n54 56\\n55 57\\n56 58\\n57 59\\n58 60\\n59 61\\n60 62\\n61 63\\n62 64\\n63 65\\n64 66\\n65 67\\n66 68\\n67 69\\n68 70\\n69 71\\n70 72\\n71 73\\n72 74\\n73 75\\n74 76\\n75 77\\n76 78\\n77 79\\n78 80\\n79 81\\n80 82\\n81 83\\n82 84\\n83 85\\n84 86\\n85 87\\n86 88\\n87 89\\n88 90\\n89 91\\n90 92\\n91 93\\n92 94\\n93 95\\n94 96\\n95 97\\n94 98\\n93 99\\n92 100\\n91 101\\n90 102\\n89 103\\n88 104\\n87 105\\n86 106\\n85 107\\n84 108\\n83 109\\n82 110\\n81 111\\n80 112\\n79 113\\n78 114\\n77 115\\n76 116\\n75 117\\n74 118\\n73 119\\n72 120\\n71 121\\n70 122\\n69 123\\n68 124\\n67 125\\n66 126\\n65 127\\n64 128\\n63 129\\n62 130\\n61 131\\n60 132\\n59 133\\n58 134\\n57 135\\n56 136\\n55 137\\n54 138\\n53 139\\n52 140\\n51 141\\n50 142\\n49 143\\n48 144\\n47 145\\n46 146\\n45 147\\n44 148\\n43 149\\n42 150\\n41 151\\n40 152\\n39 153\\n38 154\\n37 155\\n36 156\\n35 157\\n34 158\\n33 159\\n32 160\\n31 161\\n30 162\\n29 163\\n28 164\\n27 165\\n26 166\\n25 167\\n24 168\\n23 169\\n22 170\\n21 171\\n20 172\\n19 173\\n18 174\\n17 175\\n16 176\\n15 177\\n14 178\\n13 179\\n12 180\\n11 181\\n10 182\\n9 183\\n8 184\\n7 185\\n6 186\\n5 187\\n4 188\\n3 189\\n2 190\\n1 191\")\n\"\"\""
    },
    {
        "number": 3460,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n-10 9\n-2 3''') == '1 2 1'\nassert solution('''5\n-10 9\n-2 3\n-5 3\n-6 3\n-8 3''') == '3 2 2 1'\n'''\n"
    },
    {
        "number": 3460,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n4 3\n-10 9\n-2 3''') == '1 2 1'\nassert solution('''5\n9 6\n1 7\n2 3\n3 4\n5 6''') == '3 4 2'\nassert solution('''7\n9 6\n1 7\n2 3\n3 4\n5 6\n7 8\n7 8''') == '4 3 2'\nassert solution('''8\n9 6\n1 7\n2 3\n3 4\n5 6\n7 8\n7 8\n1 2\n2 3''') == '3 4 2'\nassert solution('''9\n9 6\n1 7\n2 3\n3 4\n5 6\n7 8\n7 8\n1 2\n2 3\n4 5''') == '4 3 2'\n"
    },
    {
        "number": 3460,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n-10 9\n-2 3''') == '1 2 1'\nassert solution('''3\n-10 9\n-2 3\n-10 5''') == '1 1 1'\nassert solution('''4\n4 2\n-10 9\n-2 3\n-5 4\n1 3\n''') == '1 1 2 2 2'\nassert solution('''8\n-1 1\n-1 2\n-1 3\n-1 4\n-1 5\n-1 6\n-1 7\n-1 8\n1 1\n''') == '1 1 1 1 1 1 1 1'\nassert solution('''8\n-1 1\n-1 2\n-1 3\n-1 4\n-1 5\n-1 6\n-1 7\n-1 8\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n2 2\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n4 4\n4 5\n4 6\n4 7\n4 8\n5 5\n5 6\n5 7\n5 8\n6 6\n6 7\n6 8\n7 7\n7 8\n8 8\n''') == '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3460,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nfrom sys import stdin"
    },
    {
        "number": 3460,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n4 3\n-10 9\n-2 3''') == '1 2 1'\nassert solution('''3\n4 3\n-10 9\n-2 3\n-10 3\n1 2''') == '1 2 1'\nassert solution('''3\n4 3\n-10 9\n-2 3\n-10 3\n1 2\n3 3\n''') == '1 2 1'\nassert solution('''3\n4 3\n-10 9\n-2 3\n-10 3\n1 2\n3 3\n''') == '1 2 1'\nassert solution('''3\n4 3\n-10 9\n-2 3\n-10 3\n1 2\n3 3\n2 1\n1 1\n''') == '1 2 1'\n"
    },
    {
        "number": 3460,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3460,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n4 3\\n-10 9\\n-2 3\\n') == '1 2 1'\nassert solution('3\\n4 3\\n-10 9\\n-2 3\\n-5 -5\\n') == '0 0 0'\nassert solution('10\\n15 -4\\n') == '5 3 2 1 0'\nassert solution('1\\n1 -10\\n') == '0'\n\n\"\"\""
    },
    {
        "number": 3460,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"1\"\n) == \"1\"\nassert solution(\n\"2\"\n) == \"1\"\nassert solution(\n\"5\"\n) == \"1 1 1 1 1\"\nassert solution(\n\"3\"\n) == \"1 1 1\"\nassert solution(\n\"7\"\n) == \"1 1 1 1 1 1 1\"\n"
    },
    {
        "number": 3460,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n3\n4 3\n-10 9\n-2 3\n'''\n) == '1 2 1'\n\nassert solution(\n'''\n3\n5 6\n-10 9\n-2 3\n-2 4\n'''\n) == '0 1 1'\n\nassert solution(\n'''\n3\n5 6\n-10 9\n-2 3\n3 5\n'''\n) == '1 1 1'\n\nassert solution(\n'''\n3\n5 6\n-10 9\n-2 3\n3 5\n-8 6\n-5 7\n'''\n) == '1 1 1'\n\nassert solution(\n'''\n5\n5 4\n-1 -2\n-10 9\n-2 3\n3 5\n-8 6\n-5 7\n'''\n) == '0 1 1'"
    },
    {
        "number": 3461,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1 1 7') == '2.125'\nassert solution('1\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10') == '2.125'\nassert solution('1\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n2 10 10') == '2.125'\nassert solution('1\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n2 10 10\\n2 10 10') == '2.125'\nassert solution('1\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n2 10 10\\n2 10 10\\n2 10 10') == '2.125'\n"
    },
    {
        "number": 3461,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 3461,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2.125\"\n\ntest_inputs = [\"1\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n\",\n\"1\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n\",\n\"1\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n"
    },
    {
        "number": 3461,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n1 1 7\n3 2 3\n5 1 4\n6 10 10''') == '2.125'\nassert solution('''3\n1 1 7\n3 2 3\n5 1 4\n6 10 10''') == '2.125'\nassert solution('''4\n1 1 7\n3 2 3\n5 1 4\n6 10 10''') == '2.125'\nassert solution('''3\n1 1 7\n3 2 3\n5 1 4\n6 10 10''') == '2.125'\nassert solution('''2\n2 2 10\n5 1 4\n6 10 10''') == '2.125'\n"
    },
    {
        "number": 3461,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '2.125'\n\nassert solution(stdin) == '2.1428'\n\nassert solution(stdin) == '2.1484'\n\nassert solution(stdin) == '2.3232'\n\nassert solution(stdin) == '2.3232'"
    },
    {
        "number": 3461,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n') == '2.125'\nassert solution('2\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n') == '1.125'\nassert solution('3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n') == '1.125'\nassert solution('4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n') == '1.125'\nassert solution('5\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n') == '1.125'\n"
    },
    {
        "number": 3461,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '2.125'\nassert solution('4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10') == '2.125'\nassert solution('4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n6 10 10') == '2.125'\n"
    },
    {
        "number": 3461,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2.125\"\n'''"
    },
    {
        "number": 3461,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n1 1 7\n3 2 3\n5 1 4\n6 10 10''') == '2.125'\nassert solution('''6\n2 2 3\n3 1 1\n4 5 4\n5 1 2\n6 10 10\n7 4 3\n8 1 1\n9 5 5\n10 4 4''') == '5.58333333333333'\nassert solution('''10\n2 2 3\n3 1 1\n4 5 4\n5 1 2\n6 10 10\n7 4 3\n8 1 1\n9 5 5\n10 4 4\n11 2 2\n12 1 1\n13 5 5\n14 4 4''') == '5.58333333333333'\nassert solution('''12\n2 2 3\n3 1 1\n4 5 4\n5 1 2\n6 10 10\n7 4 3\n8 1 1\n9 5 5\n10 4 4\n11 2 2\n12 1 1\n13 5 5\n14 4 4\n15 2 2\n16 1 1\n17 5 5\n18 4 4\n19 2 2\n20 1 1\n21 5 5\n22 4 4''') == '5.58333333333333'\nassert solution('''16\n2 2 3\n3 1 1\n4 5 4\n5 1 2\n6 10 10\n7 4 3\n8 1 1\n9 5 5\n10 4 4\n11 2 2\n12 1 1\n13 5 5\n14 4 4\n15 2 2\n16 1 1\n17 5 5\n18 4 4\n19 2 2\n20 1 1\n21 5 5\n22 4 4\n23 2 2\n24 1 1\n25 5 5\n26 4 4\n27 2 2\n28 1 1\n29 5 5\n30 4 4\n31 2 2\n32 1 1\n33 5 5\n34 4 4\n35 2 2\n36 1 1\n37 5 5\n38 4 4\n39 2 2\n40 1 1\n41 5 5\n42 4 4\n43 2 2\n44 1 1\n45 5 5\n46 4 4\n47 2 2\n48 1 1\n49 5 5\n50 4 4\n51 2 2\n52 1 1\n53 5 5\n54 4 4\n55 2 2\n56 1 1\n57 5 5\n58 4 4\n59 2 2\n60 1 1\n61 5 5\n62 4 4\n63 2 2\n64 1 1\n65 5 5\n66 4 4\n67 2 2\n68 1 1\n69 5 5\n70 4 4\n71 2 2\n72 1 1\n73 5 5\n74 4 4\n75 2 2\n76 1 1\n77 5 5\n78 4 4\n79 2 2\n80 1 1\n81 5 5\n82 4 4\n83 2 2\n84 1 1\n85 5 5\n86 4 4\n87 2 2\n88 1 1\n89 5 5\n90 4 4\n91 2 2\n92 1 1\n93 5 5\n94 4 4\n95 2 2\n96 1 1\n97 5 5\n98 4 4\n99 2 2\n100 1 1''') == '5.58333333333333'\n"
    },
    {
        "number": 3461,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2.125'\nassert solution(stdin) == '2.10714'\nassert solution(stdin) == '2.083333'\n"
    },
    {
        "number": 3462,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('*.*') == ['main.c', 'a.out']\nassert solution('*.c') == ['main.c']\nassert solution('*') == ['main.c','readme', 'yacc']\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3462,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('*.*') == ['main.c', 'a.out']\nassert solution('a.c') == ['a.c']\nassert solution('a.c*') == ['a.c', 'a.cxx']\nassert solution('a*') == ['a', 'a.c', 'a.cxx']\nassert solution('a.{c,cpp}') == ['a.c', 'a.cpp', 'a.cxx']\n"
    },
    {
        "number": 3462,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(solution('')) == ''\n'''\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 3462,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"*.*\", \"4\") == \"main.c\\na.out\\nreadme\"\nassert solution(\"main.c\", \"1\") == \"main.c\"\nassert solution(\"main.c\", \"2\") == \"\"\nassert solution(\"*.*\", \"7\") == \"main.c\\na.out\\nreadme\\nyacc\\n\"\nassert solution(\"*.c\", \"5\") == \"main.c\\na.out\\nreadme\"\n"
    },
    {
        "number": 3462,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('*.*') == ['main.c', 'a.out','readme', 'yacc']\nassert solution('a.c') == ['a.c']\nassert solution('a.c.c') == []\nassert solution('abc') == ['abc']\nassert solution('*') == ['*']\n"
    },
    {
        "number": 3462,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('a.*', 4, 'a.c', 'b.c', 'c.c') == ['a.c', 'c.c']\nassert solution('a*', 4, 'a.c', 'b.c', 'c.c') == ['a.c', 'c.c']\nassert solution('a.*', 3, 'a.c', 'b.c', 'c.c') == ['a.c', 'c.c']\nassert solution('a.*', 3, 'a.c', 'b.c', 'a.c') == ['a.c']\nassert solution('a.*', 3, 'a.c', 'b.c', 'b.c') == ['b.c']\n"
    },
    {
        "number": 3462,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('*.*') == ['*.*','main.c', 'a.out']\nassert solution('*.c') == ['*.*','main.c']\nassert solution('a.out') == ['*.*', 'a.out']\nassert solution('readme') == ['*.*','readme']\nassert solution('asdf*.*sdf.c') == ['asdf*.*sdf.c']\n"
    },
    {
        "number": 3462,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('*.*') == ['main.c', 'a.out','readme', 'yacc']\nassert solution('*.c') == ['main.c']\nassert solution('*.*.*') == ['main.c', 'a.out','readme', 'yacc']\nassert solution('*') == []\nassert solution('?*') == ['main.c']\n"
    },
    {
        "number": 3462,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('*') == ['a.out','readme', 'yacc']\nassert solution('*.*') == ['a.out','readme']\nassert solution('a.*') == ['a.out']\nassert solution('a.*.*') == ['a.out']\nassert solution('?.?') == ['readme']\n"
    },
    {
        "number": 3462,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n*.*\n4\nmain.c\na.out\nreadme\nyacc\n\"\"\"\n) == \"\"\"\nmain.c\na.out\n"
    },
    {
        "number": 3463,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000''') == '0.500000'\nassert solution('''1 2\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5''') == '0.125'\nassert solution('''10 10\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5''') == '0.08333333333333334'\nassert solution('''20 10\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n"
    },
    {
        "number": 3463,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0.500000') == '0.500000'\n\"\"\"\n\n\n\"\"\"\ncora's solution\n\"\"\"\n\nimport sys\nfrom decimal import *\n"
    },
    {
        "number": 3463,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0.5\") == \"0.500000\"\nassert solution(\"0.50000\") == \"0.500000\"\nassert solution(\"0.500000\") == \"0.500000\"\nassert solution(\"0.10000\") == \"0.09999\"\nassert solution(\"0.000000\") == \"0.09999\"\n"
    },
    {
        "number": 3463,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1') == '0.500000'\nassert solution('1 2') == '0.500000'\nassert solution('1 3') == '0.500000'\nassert solution('1 4') == '0.500000'\nassert solution('1 5') == '0.500000'\n"
    },
    {
        "number": 3463,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n1 1\n0.500000\n'''\n) == '0.500000'\n\nassert solution(\n'''\n1 1\n0.500000\n0.501000\n'''\n) == '0.501000'\n\nassert solution(\n'''\n1 1\n0.5\n0.5\n'''\n) == '0.5'\n\nassert solution(\n'''\n1 1\n0.4\n0.4\n0.3\n'''\n) == '0.3'\n\nassert solution(\n'''\n1 1\n0.3\n0.3\n0.2\n'''\n) == '0.1'"
    },
    {
        "number": 3463,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0.500000\"\n"
    },
    {
        "number": 3463,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"0.500000\"\n) == \"0.500000\"\n\nassert solution(\n\"1 1\"\n) == \"0.500000\"\n\nassert solution(\n\"1 1\"\n) == \"0.500000\"\n\nassert solution(\n\"1 1\"\n) == \"0.500000\"\n\nassert solution(\n\"0.89999\"\n) == \"0.50000\""
    },
    {
        "number": 3463,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 1\n0.500000''') == '0.500000'\nassert solution('''1 2\n0.250000''') == '0.125000'\nassert solution('''1 2\n0.250000''') == '0.125000'\nassert solution('''1 2\n0.125000''') == '0.000000'\nassert solution('''1 2\n0.1000000''') == '0.000000001'\n"
    },
    {
        "number": 3463,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 1\n0.500000''') == '0.500000'\nassert solution('''1 1\n0.715500\n0.312500\n0.500000\n0.50000\n0.750000\n0.625000\n0.350000\n0.687500\n0.50000\n0.735000\n0.312500\n0.500000\n0.750000\n0.562500\n0.50000\n0.375000\n0.625000\n0.50000\n0.625000\n0.50000\n0.625000\n0.50000\n0.375000\n0.562500\n0.50000\n0.750000\n0.50000\n0.50000\n0.375000\n0.625000\n0.50000\n0.375000\n0.562500\n0.50000\n0.750000\n0.50000\n0.50000\n0.375000\n0.625000\n0.50000\n0.625000\n0.50000\n0.50000\n0.375000\n0.562500\n0.50000\n0.750000\n0.50000\n0.375000\n0.562500\n0.50000\n0.375000\n0.562500\n0.50000\n0.375000\n0.562500\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.562500\n0.50000\n0.375000\n0.562500\n0.50000\n0.375000\n0.50000\n0.375000\n0.562500\n0.50000\n0.375000\n0.562500\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.562500\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.562500\n0.50000\n0.375000\n0.50000\n0.375000\n0.562500\n0.50000\n0.375000\n0.562500\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.562500\n0.50000\n0.375000\n0.50000\n0.375000\n0.562500\n0.50000\n0.375000\n0.562500\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.50000\n0.375000\n0.5"
    },
    {
        "number": 3463,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0.500000') == '0.500000'\nassert solution('0.0') == '0.0'\nassert solution('0.1') == '0.1'\nassert solution('0.999') == '0.9998'\nassert solution('1.0') == '1.0'\n"
    },
    {
        "number": 3464,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"0 49.9\"\n) == \"0.0\"\nassert solution(\n\"50 49.9\"\n) == \"0.0\"\nassert solution(\n\"50 49.5\"\n) == \"0.1\"\nassert solution(\n\"50 49.3\"\n) == \"0.1\"\nassert solution(\n\"0 1.1\"\n) == \"0.0\"\n"
    },
    {
        "number": 3464,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n0 49.9\n\"\"\"\n) == 0.0\nassert solution(\n\"\"\"\n1 49.9\n\"\"\"\n) == 0.0\nassert solution(\n\"\"\"\n10 49.9\n\"\"\"\n) == 0.0\nassert solution(\n\"\"\"\n20 49.9\n\"\"\"\n) == 0.0\nassert solution(\n\"\"\"\n30 49.9\n\"\"\"\n) == 0.0\n"
    },
    {
        "number": 3464,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0 49.9\") == \"0.0\"\nassert solution(\"0 90.0\") == \"0.0\"\nassert solution(\"0 90.1\") == \"0.0\"\nassert solution(\"0 89.9\") == \"0.0\"\nassert solution(\"0 89.9\") == \"0.0\"\n"
    },
    {
        "number": 3464,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 0\nassert solution('0') == 0\nassert solution('5') == 0\nassert solution('5 1') == -1\nassert solution('5 2') == -1\n"
    },
    {
        "number": 3464,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 3464,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0 49.9\") == \"0.0\"\nassert solution(\"20 49.9\") == \"0.0\"\nassert solution(\"20 49.1\") == \"0.0\"\nassert solution(\"20 49.99\") == \"0.0\"\nassert solution(\"20 50.0\") == \"0.0\"\n"
    },
    {
        "number": 3464,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0.0\"\n\"\"\"\n"
    },
    {
        "number": 3464,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''0 49.9'''\n) == '0.0'\nassert solution(\n'''5 11.5'''\n) == '-1.0'\nassert solution(\n'''5 43.8'''\n) == '1.5'\nassert solution(\n'''5 86.2'''\n) == '6.2'\nassert solution(\n'''5 12.7'''\n) == '6.7'\n"
    },
    {
        "number": 3464,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 3464,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n0 49.9\n'''\n) == '0.0'\n\nassert solution(\n'''\n0 99.9\n'''\n) == '0.0'\n\nassert solution(\n'''\n0 69.9\n'''\n) == '0.0'\n\nassert solution(\n'''\n0 11.2\n'''\n) == '0.0'\n\nassert solution(\n'''\n0 96.5\n'''\n) == '0.0'"
    },
    {
        "number": 3465,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 2\n2 3\n3 1\n4 1\n''') == '4 1\\n2 1\\n3 2\\n1 3'\nassert solution('''\n4\n4 3\n1 2\n1 3\n2 3\n''') == '4 3\\n1 2\\n1 3\\n2 3'\nassert solution('''\n3\n1 2\n2 3\n1 2\n''') == '1 1\\n1 2\\n2 1'\nassert solution('''\n3\n2 3\n2 1\n3 1\n''') == '1 1\\n1 2\\n1 3\\n2 1\\n2 3'\nassert solution('''\n5\n1 2\n2 3\n3 4\n4 1\n1 2\n1 3\n1 4\n1 5\n1 1\n''') == '1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n2 1\\n2 3\\n2 4\\n2 5\\n3 1\\n3 2\\n3 4\\n3 5\\n4 1\\n4 2\\n4 3\\n4 5'\n"
    },
    {
        "number": 3465,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n1 2\n2 3\n3 1\n4 1''') == '4 1\\n2 1\\n3 2\\n1 3'\nassert solution('''5\n1 2\n2 3\n2 4\n3 4\n4 5\n''') == '4 1\\n2 1\\n3 2\\n2 3\\n4 1'\nassert solution('''6\n1 2\n1 5\n2 3\n2 4\n3 4\n3 5\n4 5\n''') == '4 1\\n2 1\\n3 2\\n2 3\\n4 1'\nassert solution('''7\n1 2\n1 5\n2 3\n2 4\n3 4\n3 5\n4 5\n4 6\n5 6\n''') == '4 1\\n2 1\\n3 2\\n2 3\\n4 1'\nassert solution('''8\n1 2\n1 5\n2 3\n2 4\n3 4\n3 5\n4 5\n4 6\n5 6\n5 7\n6 7\n''') == '4 1\\n2 1\\n3 2\\n2 3\\n4 1'\n\n---Theory---\nThis problem is similar to the previous one except that we now need to find the smallest number of roads to connect all the cities.\n\nIn the previous problem, we used a greedy algorithm to find the smallest number of roads to connect all the cities. A greedy algorithm can only guarantee that the number of roads does not exceed the number of cities, but it may not be the smallest number of roads to connect all the cities.\n\nTo help us find the smallest number of roads, we should consider the following scenarios:\n\nIf we connect the first city to the second city, we can connect the cities to all other cities. There will be $2$ roads needed to connect all the cities, and we can make this change with just one swap.\n\nIf we connect the first city to the third city, we will need to do two swaps to connect the cities. One swap will connect the cities to each other and the other swap will connect the cities to the third city. There will be $3$ roads needed to connect all the cities.\n\nIf we connect the second city to the third city, we will need to do one swap to connect the cities to each other and the other swap will connect the cities to the third city. There will be $4$ roads needed to connect all the cities.\n\nIf we connect the first city to the second city and the second city to the third city, we will need to do four swaps to connect all the cities. There will be $5$ roads needed to connect all the cities.\n\nHowever, these all take up more space than necessary.\n\nIn this problem, we should consider all possible connections and find the smallest one.\n\nIn the previous problem, the first city to the second city was the smallest number of roads needed.\n\nThe second city to the third city is the smallest number of roads needed.\n\nThe third city to the fourth city is the smallest number of roads needed.\n\nThe fourth city to the fifth city is the smallest number of roads needed.\n\nThe fifth city to the sixth city is the smallest number of roads needed.\n\nThe sixth city to the seventh city is the smallest number of roads needed.\n\nThe seventh city to the eighth city is the smallest number of roads needed.\n\nThe eighth city to the ninth city is the smallest number of roads needed.\n\nThe ninth city to the tenth city is the smallest number of roads needed.\n\nThe tenth city to the eleventh city is the smallest number of roads needed.\n\nThe eleventh city to the twelfth city is the smallest number of roads needed.\n\nThe twelfth city to the thirteenth city is the smallest number of roads needed.\n\nThe thirteenth city to the fourteenth city is the smallest number of roads needed.\n\nThe fourteenth city to the fifteenth city is the smallest number of roads needed.\n\nThe fifteenth city to the sixteenth city is the smallest number of roads needed.\n\nThe sixteenth city to the seventeenth city is the smallest number of roads needed.\n\nThe seventeenth city to the eighteenth city is the smallest number of roads needed.\n\nThe eighteenth city to the nineteenth city is the smallest number of roads needed.\n\nThe nineteenth city to the twentyith city is the smallest number of roads needed.\n\nThe twentyith city to the twenty-first city is the smallest number of roads needed.\n\nIn the previous problem, we always considered the first city as the smallest number of roads needed.\n\nIn this problem, we should consider the second city as the smallest number of roads needed.\n\nIn this problem, we should consider the third city as the smallest number of roads needed.\n\nIn this problem, we should consider the fourth city as the smallest number of roads needed.\n\nIn this problem, we should consider the fifth city as the smallest number of roads needed.\n\nIn this problem, we should consider the sixth city as the smallest number of roads needed.\n\nIn this problem, we should consider the seventh city as the smallest number of roads needed.\n\nIn this problem, we should consider the eighth city as the smallest number of roads needed.\n\nIn this problem, we should consider the ninth city as the smallest number of roads needed.\n\nIn this problem, we should consider the tenth city as the smallest number of roads needed.\n\nIn this problem, we should consider the eleventh city as the smallest number of roads needed.\n\nIn this problem, we should consider the twelveth city as the smallest number of roads needed.\n\nIn this problem, we should consider the thirteenth city as the smallest number of roads needed.\n\nIn this problem, we should consider the fourteenth city as the smallest number of roads needed.\n\nIn this problem, we should consider the fifteenth city as the smallest number of roads needed.\n\nIn this problem, we should consider the sixteenth city as the smallest number of roads needed.\n\nIn this problem, we should consider the seventeenth city as the smallest number of roads needed.\n\nIn this problem, we should consider the eighteenth city as the smallest number of roads needed.\n\nIn this problem, we should consider the nineteenth city as the smallest number of roads needed.\n\nIn this problem, we should consider the twentieth city as the smallest number of roads needed.\n\nIn this problem, we should consider the twentyth city as the smallest number of roads needed.\n\nIn this problem, we should consider the twenty-first city as the smallest number of roads needed.\n\nIn the previous problem, we always considered the first city as the smallest number of roads needed.\n\nIn this problem, we should consider the second city as the smallest number of roads needed.\n\nIn this problem, we should consider the third city as the smallest number of roads needed.\n\nIn this problem, we should consider the fourth city as the smallest number of roads needed.\n\nIn this problem, we should consider the fifth city as the smallest number of roads needed.\n\nIn this problem, we should consider the sixth city as the smallest number of roads needed.\n\nIn this problem, we should consider the seventh city as the smallest number of roads needed.\n\nIn this problem, we should consider the eighth city as the smallest number of roads needed.\n\nIn this problem, we should consider the ninth city as the smallest number of roads needed.\n\nIn this problem, we should consider the tenth city as the smallest number of roads needed.\n\nIn this problem, we should consider the eleventh city as the smallest number of roads needed.\n\nIn this"
    },
    {
        "number": 3465,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n4\") == \"4 1\"\nassert solution(\"2\\n2\\n2\\n2\") == \"1 3\"\nassert solution(\"3\\n3\\n3\\n3\") == \"3 2\"\nassert solution(\"4\\n4\\n4\\n4\") == \"3 1\"\nassert solution(\"5\\n4\\n5\\n4\\n5\") == \"4 1\"\n"
    },
    {
        "number": 3465,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n1 2\n2 3\n3 1\n4 1\n''') == '1 2 4 1\\n2 1\\n3 2\\n1 3'\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n1 4\n1 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n2 4\n1 2\n2 4\n3 4\n1 4\n2 3\n2 4\n3 4\n"
    },
    {
        "number": 3465,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 1\\n4 1\\n') == '4 1\\n2 1\\n3 2\\n1 3\\n'\n\nassert solution('6\\n1 2\\n2 3\\n3 1\\n4 3\\n5 4\\n6 5\\n') == '4 1\\n2 1\\n3 2\\n1 3\\n6 5\\n'\n\nprint(\"All tests passed successfully!\")\n"
    },
    {
        "number": 3465,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 1\\n4 1') == '4 1\\n2 1\\n3 2\\n1 3'\nassert solution('6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6') == '4 1\\n2 3\\n1 4\\n3 5\\n2 5\\n4 5'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7') == '4 1\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7'\nassert solution('8\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8') == '4 1\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8'\nassert solution('10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10') == '4 1\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10'\n"
    },
    {
        "number": 3465,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3465,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    '4\\n'\n    '1 2\\n'\n    '2 3\\n'\n    '3 1\\n'\n    '4 1\\n'\n) == '4 1\\n2 1\\n3 2\\n1 3'\nassert solution(\n    '2\\n'\n    '1 2\\n'\n    '2 3\\n'\n) == '2 1\\n3 2'\nassert solution(\n    '3\\n'\n    '1 2\\n'\n    '2 3\\n'\n    '3 1\\n'\n) == '1 2\\n2 3\\n3 1'\nassert solution(\n    '5\\n'\n    '1 2\\n'\n    '2 3\\n'\n    '3 4\\n'\n    '4 5\\n'\n    '1 3\\n'\n    '3 5\\n'\n    '2 4\\n'\n    '4 5\\n'\n    '5 1\\n'\n) == '1 2\\n2 3\\n3 4\\n4 5\\n5 1\\n1 3\\n3 5\\n2 4\\n4 5'\nassert solution(\n    '4\\n'\n    '1 2\\n'\n    '2 3\\n'\n    '3 4\\n'\n    '4 1\\n'\n) == '4 1\\n2 1\\n3 2\\n1 3'\n"
    },
    {
        "number": 3465,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n1 2\n2 3\n3 1\n4 1\n''') == '4 1'\nassert solution('''2\n1 2\n2 1\n''') == '1 2'\nassert solution('''6\n1 2\n1 3\n2 3\n2 4\n2 5\n3 5\n3 6\n4 5\n4 6\n4 7\n5 6\n5 7\n5 8\n6 7\n6 8\n6 9\n7 8\n7 9\n7 10\n8 9\n8 10\n8 11\n9 10\n9 11\n9 12\n10 11\n10 12\n10 13\n11 12\n11 13\n11 14\n12 13\n12 14\n12 15\n13 14\n13 15\n13 16\n14 15\n14 16\n14 17\n15 16\n15 17\n15 18\n16 17\n16 18\n16 19\n17 18\n17 19\n17 20\n18 19\n18 20\n18 21\n19 20\n19 21\n19 22\n20 21\n20 22\n20 23\n21 22\n21 23\n21 24\n22 23\n22 24\n22 25\n23 24\n23 25\n23 26\n24 25\n24 26\n24 27\n25 26\n25 27\n25 28\n26 27\n26 28\n26 29\n27 28\n27 29\n27 30\n28 29\n28 30\n28 31\n29 30\n29 31\n29 32\n30 31\n30 32\n30 33\n31 32\n31 33\n31 34\n32 33\n32 34\n32 35\n33 34\n33 35\n33 36\n34 35\n34 36\n34 37\n35 36\n35 37\n35 38\n36 37\n36 38\n36 39\n37 38\n37 39\n37 40\n38 39\n38 40\n38 41\n39 40\n39 41\n39 42\n40 41\n40 42\n40 43\n41 42\n41 43\n41 44\n42 43\n42 44\n42 45\n43 44\n43 45\n43 46\n44 45\n44 46\n44 47\n45 46\n45 47\n45 48\n46 47\n46 48\n46 49\n47 48\n47 49\n47 50\n48 49\n48 50\n48 51\n49 50\n49 51\n49 52\n50 51\n50 52\n50 53\n51 52\n51 53\n51 54\n52 53\n52 54\n52 55\n53 54\n53 55\n53 56\n54 55\n54 56\n54 57\n55 56\n55 57\n55 58\n56 57\n56 58\n56 59\n57 58\n57 59\n57 60\n58 59\n58 60\n58 61\n59 60\n59 61\n59 62\n60 61\n60 62\n60 63\n61 62\n61 63\n61 64\n62 63\n62 64\n62 65\n63 64\n63 65\n63 66\n64 65\n64 66\n64 67\n65 66\n65 67\n65 68\n66 67\n66 68\n66 69\n67 68\n67 69\n67 70\n68 69\n68 70\n68 71\n69 70\n69 71\n69 72\n70 71\n70 72\n70 73\n71 72\n71 73\n71 74\n72 73\n72 74\n72 75\n73 74\n73 75\n73 76\n74 75\n74 76\n74 77\n75 76\n75 77\n75 78\n76 77\n76 78\n76 79\n77 78\n77 79\n77 80\n78 79\n78 80\n78 81\n79 80\n79 81\n79 82\n80 81\n80 82\n80 83\n81 82\n81 83\n81 84\n82 83\n82 84\n82 85\n83 84\n83 85\n83 86\n84 85\n84 86\n84 87\n85 86\n85 87\n85 88\n86 87\n86 88\n86 89\n87 88\n87 89\n87 90\n88 89\n88 90\n88 91\n89 90\n89 91\n89 92\n90 91\n90 92\n90 93\n91 92\n91 93\n91 94\n92 93\n92 94\n92 95\n93 94\n93 95\n93 96\n94 95\n94 96\n94 97\n95 96\n95 97\n95 98\n96 97\n96 98\n96 99\n97 98\n97 99\n97 100\n98 99\n98 100\n98 101\n99 100\n99 101\n99 102\n100 101\n100 102\n100 103\n101 102\n101 103\n101 104\n102 103\n102 104\n102 105\n103 104\n103 105\n103 106\n104 105\n104 106\n104 107\n105 106\n105 107\n105 108\n106 107\n106 108\n106 109\n107 108\n107 109\n107 110\n108 109\n108 110\n108 111\n109 110\n109 111\n109 112\n110 111\n110 112\n110 113\n111 112\n111 113\n111 114\n112 113\n112 114\n112 115\n113 114\n113 115\n113 116\n114 115\n114 116\n114 117\n115 116\n115 117\n115 118\n116 117\n116 118\n116 119\n117 118\n117 119\n117 120\n118 119\n118 120\n118 121\n119 120\n119 121\n119 122\n120 121\n120 122\n120 123\n121 122\n121 123\n121 124\n122 123\n122 124\n122 125\n123 124\n123 125\n123 126\n124 125\n124 126\n124 127\n125 126\n125 127\n125 128\n126 127\n126 128\n126 129\n127 128\n127 129\n127 130\n128 129\n128 130\n128 131\n129 130\n129 131\n129 132\n130 131\n130 132\n130 133\n131 132\n131 133\n131 134\n132 133\n132 134\n132 135\n133 134\n133 135\n133 136\n134 135\n134 136\n134 137\n135 136\n135 137\n135 138\n136 137\n136 138\n136 139\n137 138\n137 139\n137 140\n138 139\n138 140\n138 141\n139 140\n139 141\n139 142\n140 141\n140 142\n140 143\n141 142\n141 143\n141 144\n142 143\n142 144\n142 145\n143 144\n143 145\n143 146\n144 145\n144 146\n144 147\n145 146\n145 147\n145 148\n146 147\n146 148\n146 149\n147 148\n147 149\n147 150\n148 149\n148 150\n148 151\n149 150\n149 151\n149 152\n150 151\n150 152\n150 153\n151 152\n151 153\n151 154\n152 153\n152 154\n152 155\n153 154\n153 155\n153 156\n154 155\n154 156\n154 157\n155 156\n155 157\n155 158\n156 157\n156 158\n156 159\n157 158\n157 159\n157 160\n158 159\n158 160\n158 161\n159 160\n159 161\n159 162\n160 161\n160 162\n160 163\n161 162\n161 163\n161 164\n162 163\n162 164\n162 165\n163 164\n163 165\n163 166\n164 165\n164 166\n164 167\n165 166\n165 167\n165 168\n166 167\n166 168\n166 169\n167 168\n167 169\n167 170\n168 169\n168 170\n168 171\n169 170\n169 171\n169 172\n170 171\n170 172\n170 173\n171 172\n170 173\n170 174\n171 173\n170 174\n170 175\n172 174\n170 175\n170 176\n173 175\n170 176\n170 177\n174 176\n170 177\n170 178\n175 177\n170 178\n170 179\n174 178\n170 179\n170 180\n173 179\n170 180\n170 181\n172 180\n170 181"
    },
    {
        "number": 3465,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3') == '4 1\\n2 1\\n3 2\\n1 3\\n'\nassert solution('2\\n1\\n3\\n2\\n4\\n4\\n3\\n2') == '4 1\\n2 1\\n3 2\\n1 3\\n'\nassert solution('2\\n3\\n1\\n2\\n1\\n3\\n2\\n4\\n2\\n4\\n2\\n4\\n1\\n4\\n2\\n1\\n2\\n1\\n2\\n1\\n3\\n2\\n2\\n2\\n1\\n3\\n3\\n1\\n1\\n1\\n2\\n1\\n3\\n4\\n3\\n2\\n1\\n2\\n2\\n1\\n2\\n1\\n1\\n1\\n2\\n1\\n2\\n1\\n3\\n2\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n3\\n4\\n3\\n2\\n1\\n2\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n2\\n1\\n3\\n4\\n3\\n2\\n1\\n2\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n3\\n2\\n1\\n1\\n1\\n1\\n2\\n1\\n2\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2"
    },
    {
        "number": 3466,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('test') == '1'\nassert solution('3 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n3 1 2 3 2 2 1 1\\n4 1 1 1 1 1 2 1\\n1 2 1 1 1 1 2 1\\n4 1 1 1 1 1 2 1') == '0'\nassert solution('7 3\\n1 4 2 1 2 1 2 1\\n2 1 2 1 2 1 2 1\\n1 2 1 2 1 2 1 2\\n1 2 1 2 1 2 1 2\\n1 2 1 2 1 2 1 2') == '2'\nassert solution('7 3\\n1 4 2 1 2 1 2 1\\n2 1 2 1 2 1 2 1\\n1 2 1 2 1 2 1 2\\n1 2 1 2 1 2 1 2\\n1 2 1 2 1 2 1 2\\n1 2 1 2 1 2 1 2') == '4'\nassert solution('7 3\\n1 4 2 1 2 1 2 1\\n2 1 2 1 2 1 2 1\\n1 2 1 2 1 2 1 2\\n1 2 1 2 1 2 1 2\\n1 2 1 2 1 2 1 2\\n1 2 1 2 1 2 1 2\\n1 2 1 2 1 2 1 2') == '5'\n"
    },
    {
        "number": 3466,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6 5\n2 1 6 3 5 3\n1 2 5 3 5\n''') == '1'\nassert solution('''6 5\n2 1 6 3 5 3\n1 2 5 3 5\n''') == '1'\nassert solution('''10 10\n1 2 3 5 3 3 5 3 4 7 6 7 7 7\n1 2 3 5 3 3 5 3 4 7 6 7 7 7 7\n''') == '0'\nassert solution('''10 10\n1 2 3 5 3 3 5 3 4 7 6 7 7 7 7\n1 2 3 5 3 3 5 3 4 7 6 7 7 7 7\n''') == '0'\nassert solution('''10 10\n1 2 3 5 3 3 5 3 4 7 6 7 7 7 7\n1 2 3 5 3 3 5 3 4 7 6 7 7 7 7\n''') == '0'\n"
    },
    {
        "number": 3466,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input_string) == expected_output\nprint(f\"solution({input_string}) == {expected_output}\")\n\"\"\"\nimport sys\nfrom itertools import accumulate\n\ninput_m, input_k = list(map(int, stdin.readline().split()))\ninput_fractions = list(map(float, stdin.readline().split()))\ninput_bought = list(map(int, stdin.readline().split()))\n\ntarget_fractions = [input_fractions[i] / input_bought[i] for i in range(input_m)]"
    },
    {
        "number": 3466,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''6 5\n2 1 6 3 5 3\n1 2 5 3 5'''\n    ) == '1'\n\nassert solution(\n'''8 5\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1'''\n    ) == 'forever'\n"
    },
    {
        "number": 3466,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 5\n2 1 6 3 5 3\n1 2 5 3 5\n''') == '1'\nassert solution('''10 10\n1 2 5 3 5 3 5 3 5 3\n1 2 5 3 5 3 5 3 5 3\n''') == 'forever'\nassert solution('''10 10\n1 2 5 3 5 3 5 3 5 3\n1 2 5 3 5 3 5 3 5 3\n''') == '2'\nassert solution('''1 1\n1\n''') == 'forever'\nassert solution('''2 2\n1 1\n1\n''') == '0'\n"
    },
    {
        "number": 3466,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"forever\"\n\n\"\"\"\n"
    },
    {
        "number": 3466,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6 5\n2 1 6 3 5 3\n1 2 5 3 5\n''') == '1'\nassert solution('''4 0\n1 1 2 3\n2 2 3 3\n3 3 3 3\n4 4 4 4\n''') == 'forever'\nassert solution('''3 2\n1 1 1\n2 2 2\n1 1 1\n''') == 'forever'\nassert solution('''1 0\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n''') == 'forever'\nassert solution('''1 0\n1 1 1\n1 1 1\n1 1 1\n2 2 2\n2 2 2\n2 2 2\n2 2 2\n''') == '1'\n"
    },
    {
        "number": 3466,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\"\n\n---\nimport unittest\nfrom edabit.Test import Test\n"
    },
    {
        "number": 3466,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '1'"
    },
    {
        "number": 3466,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n6\\n2\\n1 2 5 3 5 3') == '1'\nassert solution('4\\n1 1 2 2 2\\n2 2 1 2 2') == '4'\nassert solution('7\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1') == 'forever'\nassert solution('8\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1') == 'forever'\nassert solution('9\\n2 2 1 2 2 1 2 2\\n2 1 2 1 2 2 1 2') == '7'\n"
    },
    {
        "number": 3467,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 1 10\n0 1 1 2 6''') == \"3\"\nassert solution('''2 1 10\n0 1 1 2 6\n1 2 1 2 1''') == \"impossible\"\nassert solution('''2 1 10\n0 1 1 2 6\n1 1 1 2 1''') == \"3\"\nassert solution('''2 1 10\n0 1 1 2 6\n1 1 1 2 1\n2 1 1 2 1''') == \"3\"\n'''\n"
    },
    {
        "number": 3467,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '3'"
    },
    {
        "number": 3467,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '3'\n\"\"\""
    },
    {
        "number": 3467,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(open(\"test_case_1.txt\").read()) == '3'\nassert solution(open(\"test_case_2.txt\").read()) == '4'\nassert solution(open(\"test_case_3.txt\").read()) == 'impossible'\n"
    },
    {
        "number": 3467,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '3'\n\n\"\"\""
    },
    {
        "number": 3467,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''0 1 1 2 6\n0 1 1 2 5\n0 1 1 2 4\n0 1 1 2 3\n0 1 1 2 2\n0 1 1 2 1''') == '3'\nassert solution('''2 3 7\n0 2 1 2 1\n0 1 1 1 1\n0 0 1 1 1\n0 1 1 1 1\n0 1 1 1 1\n0 1 1 1 1\n0 1 1 1 1\n0 1 1 1 1\n0 1 1 1 1''') == 'impossible'\nassert solution('''1 1 1\n0 1 1 1 1\n0 0 1 1 1\n0 1 1 1 1\n0 1 1 1 1\n0 1 1 1 1\n0 1 1 1 1\n0 1 1 1 1\n0 1 1 1 1\n0 1 1 1 1''') == '1'\nassert solution('''2 1 2\n0 2 1 2 1\n0 0 2 1 2\n0 1 2 1 2\n0 1 2 1 2\n0 1 2 1 2\n0 1 2 1 2\n0 1 2 1 2\n0 1 2 1 2\n0 1 2 1 2''') == '2'\nassert solution('''3 1 2\n0 2 2 2 2\n0 0 2 2 2\n0 1 2 2 2\n0 1 2 2 2\n0 1 2 2 2\n0 1 2 2 2\n0 1 2 2 2\n0 1 2 2 2\n0 1 2 2 2''') == 'impossible'\n"
    },
    {
        "number": 3467,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input_data) == expected_output\nprint(expected_output)\n\n\"\"\"\n\nfrom sys import stdin,stdout\nfrom itertools import zip_longest"
    },
    {
        "number": 3467,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0 0 1\") == \"1\"\nassert solution(\"1 1 0\") == \"0\"\nassert solution(\"0 1 2\") == \"impossible\"\nassert solution(\"2 1 10\") == \"3\"\nassert solution(\"2 1 2\") == \"3\"\n"
    },
    {
        "number": 3467,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 1 10\n0 1 1 2 6\n''') == '3'\n'''\n"
    },
    {
        "number": 3467,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3') == 'impossible'\nassert solution('1\\n2\\n3\\n5\\n4\\n5\\n4') == 'impossible'\nassert solution('2\\n2\\n3\\n5\\n4\\n5\\n4') == '3'\nassert solution('4\\n2\\n3\\n5\\n4\\n5\\n4') == '3'\nassert solution('4\\n2\\n3\\n5\\n4\\n5\\n6') == 'impossible'\n"
    },
    {
        "number": 3468,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 100\n99 1\n1 99''') == '2\\n1 2'\nassert solution('''2 100\n99 1\n1 100''') == '2\\n1 2'\nassert solution('''2 100\n99 1\n1 99''') == '2\\n1 2'\nassert solution('''2 100\n99 1\n2 99\n1 100''') == '2\\n1 2'\nassert solution('''2 100\n99 1\n1 100\n2 99''') == '2\\n1 2'\n"
    },
    {
        "number": 3468,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n99\\n99') == '2\\n1 2'\nassert solution('1\\n99\\n1') == '1'\nassert solution('2\\n99\\n99') == '2'\nassert solution('2\\n99\\n1') == '1'\nassert solution('2\\n99\\n99') == '2'\n"
    },
    {
        "number": 3468,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''2 100\n99 1\n1 99''') == '2'\nassert solution(\n'''2 1\n99 1\n1 99''') == '1 2'\nassert solution(\n'''10 100\n99 1\n1 99\n2 100\n3 1\n4 99\n5 100\n6 99\n7 1\n8 99\n9 100''') == '8 9 10'\nassert solution(\n'''7 2\n1 1\n2 2\n3 1\n4 3\n5 1\n6 2\n7 1''') == '3 4 6'\nassert solution(\n'''1 1\n1 2\n2 1''') == '1'\n"
    },
    {
        "number": 3468,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 100\n99 1\n1 99''') == '2','should return 2'\nassert solution('''2 100\n99 1\n1 99''') == '1 2','should return 1 2'\nassert solution('''2 100\n99 1\n1 99''') == '','should return '''\nassert solution('''1 1\n1 1\n1 1''') == '1','should return 1'\nassert solution('''1 1\n1 1\n1 1''') == '1','should return 1'\n"
    },
    {
        "number": 3468,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 100\\n99 1\\n1 99\") == \"2\\n1 2\"\nassert solution(\"2 100\\n99 1\\n1 98\\n99 1\\n1 99\") == \"1\\n1 2\"\nassert solution(\"2 100\\n99 1\\n1 98\\n99 1\\n1 99\\n99 1\\n1 98\") == \"2\\n1 2\"\nassert solution(\"2 100\\n99 1\\n1 98\\n99 1\\n1 99\\n99 1\\n1 98\\n99 1\\n1 99\\n99 1\\n1 98\\n99 1\\n1 99\") == \"2\\n1 2\"\nassert solution(\"2 100\\n99 1\\n1 98\\n99 1\\n1 99\\n99 1\\n1 98\\n99 1\\n1 99\\n99 1\\n1 98\\n99 1\\n1 99\\n99 1\\n1 98\\n99 1\\n1 99\\n99 1\\n1 98\") == \"2\\n1 2\"\n"
    },
    {
        "number": 3468,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3') == '1\\n2\\n3'\nassert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n') == '99\\n1 2\\n99'\nassert solution('2\\n1\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n') == '99\\n1 2\\n99'\nassert solution('2\\n1\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n') == '99\\n1 2\\n99'\nassert solution('4\\n2\\n1\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n') == '99\\n1 2\\n99'\n"
    },
    {
        "number": 3468,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 100\n99 1\n1 99''') == '2'\nassert solution('''3 1000\n1 1\n2 1\n1 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999''') == '2'\nassert solution('''3 1000\n1 1\n2 1\n1 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999''') == '2'\nassert solution('''4 1000\n1 1\n2 1\n1 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999''') == '3'\nassert solution('''4 1000\n1 1\n2 1\n1 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999''') == '3'\n"
    },
    {
        "number": 3468,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0\\n2\\n2\\n1') == '2 1'\nassert solution('0\\n2\\n2\\n1\\n1\\n1') == '1 2 3'\nassert solution('2\\n1\\n1\\n1\\n1') == '2'\nassert solution('1\\n2\\n1\\n1\\n1') == '1 2'\nassert solution('1\\n2\\n1\\n1\\n1\\n1') == '1 2'\n"
    },
    {
        "number": 3468,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 100\\n99 1\\n1 99\\n') == '2\\n1 2'\nassert solution('2 100\\n99 1\\n1 99\\n') == '2\\n1 2'\nassert solution('3 100\\n99 1\\n1 99\\n') == '2\\n1 2'\nassert solution('4 100\\n99 1\\n1 99\\n') == '2\\n1 2'\nassert solution('5 100\\n99 1\\n1 99\\n') == '2\\n1 2'\n"
    },
    {
        "number": 3468,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 100\n99 1\n1 99''') == '2\\n1 2'\nassert solution('''5 1000\n1 1\n1 3\n1 6\n1 9\n2 1\n3 1\n4 1\n5 1''') == '2\\n1 2 3 4 5'\nassert solution('''5 1000\n1 1\n1 3\n1 6\n1 9\n2 1\n3 1\n4 1\n5 1''') == '2\\n1 2 3 4 5'\nassert solution('''5 1000\n1 1\n1 3\n1 6\n1 9\n2 1\n3 1\n4 1\n5 1''') == '2\\n1 2 3 4 5'\nassert solution('''5 1000\n1 1\n1 3\n1 6\n1 9\n2 1\n3 1\n4 1\n5 1''') == '2\\n1 2 3 4 5'\n"
    },
    {
        "number": 3469,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''H\nT''') == '0.5'\nassert solution('''H\nH''') == '0'\nassert solution('''TT\nTT''') == '1'\nassert solution('''HT\nTT''') == '0.5'\nassert solution('''TT\nTT''') == '0'\n"
    },
    {
        "number": 3469,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('H') == 'H'\nassert solution('HTH') == 'H'\nassert solution('HT') == 'T'\nassert solution('TT') == 'T'\nassert solution('TTT') == 'T'\n"
    },
    {
        "number": 3469,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('H', 'T', 0.5) == '0.5'\nassert solution('H', 'H', 0.5) == '0.0'\nassert solution('H', 'T', 0.5) == '0.5'\nassert solution('H', 'H', 0.5) == '1.0'\nassert solution('H', 'T', 0.5) == '0.5'\n"
    },
    {
        "number": 3469,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''H\nT''') == '0.5'\nassert solution('''T\nH''') == '0.5'\nassert solution('''T\nT''') == '0'\nassert solution('''H\nH''') == '0.5'\nassert solution('''H\nHH''') == '0'\n"
    },
    {
        "number": 3469,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''H\n''') == '0.5'\nassert solution('''T\n''') == '1.0'\nassert solution('''T\n''') == '0.0'\nassert solution('''T\n''') == '0.0'\nassert solution('''H\n''') == '0.5'\n"
    },
    {
        "number": 3469,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''H\nT'''\n) == '0.5'\nassert solution(\n'''H\nT\n0.5'''\n) == '0.5'\nassert solution(\n'''H\nT\n0.05'''\n) == '0.05'\nassert solution(\n'''H\nT\n0.00001'''\n) == '0.00001'\nassert solution(\n'''H\nT\n0.99999999'''\n) == '1.0'\n"
    },
    {
        "number": 3469,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''H''') == '0.5'\nassert solution('''HT''') == '1.0'\nassert solution('''HT''') == '1.0'\nassert solution('''HT''') == '0.5'\nassert solution('''HT''') == '0.5'\n"
    },
    {
        "number": 3469,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('H') == '0.5'\nassert solution('HTH') == '0.5'\nassert solution('HTHHTH') == '0.25'\nassert solution('HT') == '0.0'\nassert solution('HTH') == '0.0'\n"
    },
    {
        "number": 3469,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('H') == 'H'\nassert solution('T') == 'T'\nassert solution('0.5') == '0.5'\nassert solution('1') == '0'\nassert solution('0.0000001') == '1'\n"
    },
    {
        "number": 3469,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"H\", \"T\", 0.5) == 0.5\nassert solution(\"TT\", \"H\", 0.5) == 0.5\nassert solution(\"TT\", \"TT\", 0.5) == 0.5\nassert solution(\"TT\", \"H\", 0.1) == 0.9\nassert solution(\"H\", \"TT\", 0.5) == 0.5\n"
    },
    {
        "number": 3470,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"8\\n1 3 5 7 9 11 13 15\"\nassert solution(\"4\") == \"4\\n1 3 5 7 9\"\nassert solution(\"5\") == \"4\\n1 3 5 7 9\"\nassert solution(\"6\") == \"8\\n1 3 5 7 9 11 13 15\"\nassert solution(\"7\") == \"4\\n1 3 5 7 9\"\n"
    },
    {
        "number": 3470,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"8\\n1 3 5 7 9 11 13 15\"\nassert solution(\"4\") == \"16\\n1 3 5 7 9 11 13 15 16 17 19 21 22 23 25 27 28 30 31 33 35 36 37 39 41 43 45 47 49 51 52 54 56 57 59 61 63 65 67 69 71 73 75 77 79 81 83 85 87 89 91 93 95 97 98\"\nassert solution(\"5\") == \"32\\n1 3 5 7 9 11 13 15 16 17 19 21 22 23 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\"\nassert solution(\"6\") == \"48\\n1 3 5 7 9 11 13 15 16 17 19 21 22 23 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\"\nassert solution(\"10\") == \"96\\n1 3 5 7 9 11 13 15 16 17 19 21 22 23 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101\"\n"
    },
    {
        "number": 3470,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 3470,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('3') == ''\nassert solution('3\\n3') == ''\nassert solution('3\\n3\\n3') == '8'\n"
    },
    {
        "number": 3470,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3''') == 8\nassert solution('''6''') == 8\nassert solution('''7''') == 8\nassert solution('''4''') == 0\nassert solution('''12''') == 2\n"
    },
    {
        "number": 3470,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(3) == \"1 3 5 7 9 11 13 15\"\nassert solution(4) == \"1 3 5 7 9 11 13 15 16 17 19\"\nassert solution(5) == \"1 3 5 7 9 11 13 15 16 17 19 20 21 23 25 27 29 31 33 35 37 39 41 43 45 47 49 51 53 55 57 59 61 63 65 67 69 71 73 75 77 79 81 83 85 87 89 91 93 95 97 99\"\nassert solution(6) == \"1 3 5 7 9 11 13 15 16 19 22 23 25 28 29 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 89 90 91 92 93 94 95 96 97 98 99\"\nassert solution(7) == \"1 3 5 7 9 11 13 15 16 19 22 23 25 28 29 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 89 90 91 92 93 94 95 96 97 98 99\"\n"
    },
    {
        "number": 3470,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') is None\nassert solution('2') == '0'\nassert solution('3') == '4'\nassert solution('4') == '5'\nassert solution('5') == '6'\n"
    },
    {
        "number": 3470,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3470,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"3\") == \"8\\n1 3 5 7 9 11 13 15\"\nassert solution(\n\"4\") == \"8\\n1 3 5 7 9 11 13 14\"\nassert solution(\n\"5\") == \"8\\n1 3 5 7 9 11 13 14 15\"\nassert solution(\n\"6\") == \"8\\n1 3 5 7 9 11 13 14 15\"\nassert solution(\n\"7\") == \"8\\n1 3 5 7 9 11 13 14 15 16\"\n"
    },
    {
        "number": 3470,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('1') == ''\nassert solution('2') == '2'\nassert solution('3') == '1 3 5'\n"
    },
    {
        "number": 3471,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(open(\"test_cases/sample1.txt\", \"r\").read()) == \"1\\n3\\n7\\n\"\nassert solution(open(\"test_cases/sample2.txt\", \"r\").read()) == \"7\\n7\\n7\\n\"\nassert solution(open(\"test_cases/sample3.txt\", \"r\").read()) == \"1\\n2\\n1\\n\"\nassert solution(open(\"test_cases/sample4.txt\", \"r\").read()) == \"1\\n5\\n1\\n\"\nassert solution(open(\"test_cases/sample5.txt\", \"r\").read()) == \"0\\n0\\n2\\n1\\n\"\n"
    },
    {
        "number": 3471,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 3 5 7\\n3\\n2 2\\n2 5\\n1 5') == '3\\n1\\n0'\nassert solution('1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n1 1\\n0\\n0') == '0\\n0\\n0'\nassert solution('1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n1 1\\n0\\n0\\n1') == '3\\n1\\n0'\nassert solution('1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n1 1\\n0\\n0\\n1\\n1') == '0\\n0\\n0'\nassert solution('1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n1 1\\n0\\n0\\n1\\n1\\n0') == '0\\n0\\n0'\n"
    },
    {
        "number": 3471,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\nprint(f\"solution({stdin}) == {expected}\")\n'''"
    },
    {
        "number": 3471,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\\n2\\n2\") == \"\"\nassert solution(\"3\\n2\\n5\\n1\\n3\\n2\\n1\\n5\\n1\\n3\\n2\\n1\\n1\\n1\\n1\\n1\") == \"6\"\nassert solution(\"3\\n5\\n1\\n3\\n2\\n1\\n5\\n1\\n3\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 3471,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"3\\n1\\n0\\n\"\nassert solution(\"2\") == \"1\\n\"\nassert solution(\"3\") == \"0\\n\"\nassert solution(\"5\") == \"0\\n\"\nassert solution(\"6\") == \"1\\n\"\n"
    },
    {
        "number": 3471,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n1 3 5 7\n3\n2 2\n2 5\n1 5\n''') == '3\\n1\\n0\\n'\nassert solution('''5\n1 3 5 7 9 11\n3\n2 2\n2 5\n1 5\n''') == '9\\n0\\n'\n'''\n\n\"\"\""
    },
    {
        "number": 3471,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3471,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n448\\n449\\n450\\n451\\n452\\n453\\n454\\n455\\n456\\n457\\n458\\n459\\n460\\n461\\n462\\n463\\n464\\n465\\n466\\n467\\n468\\n469\\n470\\n471\\n472\\n473\\n474\\n475\\n476\\n477\\n478\\n479\\n480\\n481"
    },
    {
        "number": 3471,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3471,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n1 3 5 7\n3\n2 2\n2 5\n1 5\n''') == '3\\n1\\n0\\n'\n\nassert solution('''3\n1 2 3 4\n3\n2 1\n1 3\n''') == '6\\n6\\n0\\n'\n\nassert solution('''5\n1 2 3 4 5\n4\n2 3\n2 4\n2 5\n1 5\n''') == '10\\n10\\n10\\n10\\n10\\n'\n\nassert solution('''2\n1 2\n3\n2\n1\n''') == '3\\n1\\n'\n\nassert solution('''6\n1 2 3 4 5 6\n5\n2 3\n2 4\n2 5\n2 6\n1 6\n''') == '9\\n9\\n0\\n'"
    },
    {
        "number": 3472,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 1\") == \"0\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"3 4\") == \"2\"\nassert solution(\"4 4\") == \"3\"\n"
    },
    {
        "number": 3472,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 1\\n1 1 -2 0\\n') == '0'\nassert solution('2 3\\n1 1 -2 2\\n1 1 -1 0\\n2 2 0 0\\n') == '2'\nassert solution('2 2\\n1 1 -2 2\\n1 1 -1 0\\n2 2 0 0\\n') == '2'\nassert solution('2 2\\n1 1 -2 2\\n1 1 -1 0\\n2 2 0 0\\n') == '2'\nassert solution('2 3\\n1 1 -2 0\\n1 1 -1 0\\n2 2 0 0\\n') == '0'\n"
    },
    {
        "number": 3472,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 1\\n1 1 -2 0') == '0'\nassert solution('2 1\\n1 1 -1 0\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 -1 0') == '1'\nassert solution('4 5\\n1 1 1 1\\n2 1 -1 -1\\n2 1 -1 1\\n2 1 1 1\\n2 1 -1 -1') == '1'\nassert solution('4 5\\n1 1 1 1\\n2 1 -1 -1\\n2 1 -1 1\\n2 1 1 1\\n2 1 -1 -1') == '2'\nassert solution('4 5\\n1 1 1 1\\n2 1 -1 -1\\n2 1 -1 1\\n2 1 1 1\\n2 1 -1 -1') == '3'\n"
    },
    {
        "number": 3472,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 1\n1 1 -2 0''') == '0'\nassert solution('''1\n0 0 0 1''') == '-1'\nassert solution('''1\n-2 0 1 2''') == '1'\nassert solution('''1\n1 1 0 0''') == '0'\nassert solution('''1\n-1 1 0 0''') == '-1'\n"
    },
    {
        "number": 3472,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''2 1\n1 1 -2 0''') == \"0\"\n\nassert solution(\n'''1 1 -2 0\n2 1 -2 0''') == \"1\"\n\nassert solution(\n'''1 1 -2 0\n1 1 -2 0''') == \"1\"\n\nassert solution(\n'''10 2\n1 -2 -1 -2\n2 -1 -2 -1''') == \"1\"\n\nassert solution(\n'''10 2\n1 -2 -1 -2\n2 -1 -2 -1''') == \"0\""
    },
    {
        "number": 3472,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '0'\nassert solution(stdin) == '0'\nassert solution(stdin) == '0'\nassert solution(stdin) == '0'\nassert solution(stdin) == '0'\n"
    },
    {
        "number": 3472,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 1\n1 1 -2 0''') == '0'\nassert solution('''1 1\n-1 -1 -2 0''') == '1'\nassert solution('''1 1\n-1 -1 0 0''') == '2'\nassert solution('''1 1\n1 -1 0 0''') == '1'\nassert solution('''1 1\n-1 -1 0 0''') == '0'\n"
    },
    {
        "number": 3472,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1\\n1 1 -2 0') == '0'\nassert solution('2 2\\n1 1 1 0\\n1 1 0 1 0') == '1'\nassert solution('2 2\\n1 1 1 0\\n1 1 0 1 0\\n1 1 1 1 0') == '0'\nassert solution('2 2\\n1 1 1 0\\n1 1 0 1 0\\n1 0 1 1 0') == '2'\nassert solution('2 2\\n1 1 1 0\\n1 1 0 1 0\\n1 1 1 1 0') == '2'\n"
    },
    {
        "number": 3472,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 1\n1 1 -2 0''') == 0\nassert solution('''2 1\n1 1 -2 0\n1 2 -4 2''') == 3\nassert solution('''2 2\n1 1 -2 0\n2 1 -4 2''') == 2\nassert solution('''3 1\n1 1 -2 0\n1 2 -4 2\n1 3 -6 3''') == 2\nassert solution('''3 1\n1 1 -2 0\n1 2 -4 2\n1 3 -6 3\n1 4 -8 4\n1 5 -10 5\n2 1 -2 0\n2 2 -4 2\n2 3 -6 3\n2 4 -8 4\n2 5 -10 5''') == 1\n"
    },
    {
        "number": 3472,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 3473,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23''') == '194\\n2019 10 25\\n2020 10 30'\nassert solution('''2\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23''') == '194\\n2019 10 25\\n2020 10 30'\nassert solution('''2\n5\n2018 10 18\n2018 10 19\n2019 10 02\n2019 10 16\n2019 10 23''') == '194'\nassert solution('''2\n5\n2018 10 18\n2018 10 19\n2019 10 02\n2019 10 16\n2019 10 23''') == '194'\nassert solution('''2\n5\n2018 10 18\n2018 10 19\n2019 10 02\n2019 10 16\n2019 10 23''') == '194'\n"
    },
    {
        "number": 3473,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23''') == '194'\n'''\n"
    },
    {
        "number": 3473,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n2\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23\n''') == '194'\nassert solution('''\n2\n5\n2021 10 18\n2021 10 19\n2020 10 02\n2020 10 16\n2020 10 23\n''') == '150'\nassert solution('''\n2\n5\n2020 10 02\n2020 10 16\n2020 10 23\n''') == '150'\nassert solution('''\n2\n5\n2020 10 22\n2020 10 26\n2020 10 29\n''') == '140'\nassert solution('''\n2\n5\n2020 10 22\n2020 10 26\n2020 10 29\n''') == '140'\n"
    },
    {
        "number": 3473,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '194\\n' + \\\n                                '2019 10 25\\n' + \\\n                                '2020 10 30\\n'"
    },
    {
        "number": 3473,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"5\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23\"\"\") == \"194\\n2019 10 25\\n2020 10 30\\n\"\n"
    },
    {
        "number": 3473,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1\n5''') == '194'\nassert solution('''2\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23''') == '194'\nassert solution('''3\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23\n''') == '194'\nassert solution('''4\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23\n''') == '262'\nassert solution('''7\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23\n2024 10 15\n2024 10 22\n''') == '744'\n"
    },
    {
        "number": 3473,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23''') == '194'\n'''"
    },
    {
        "number": 3473,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3473,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3473,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0\\n') == '0'\nassert solution('1\\n') == '10'\nassert solution('2\\n') == '4'\nassert solution('1\\n1\\n') == '10'\nassert solution('2\\n1\\n') == '4'\n"
    },
    {
        "number": 3474,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n"
    },
    {
        "number": 3474,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 10 10 10 10 0''') == 'negative-infinity 0\\n5 12.5'\nassert solution('''5 10 10 5 10 0''') == 'negative-infinity -5'\nassert solution('''6 10 10 10 10 0''') == 'negative-infinity -5'\nassert solution('''5 5 5 5 5 0''') == 'negative-infinity -5'\nassert solution('''5 5 5 5 5 0''') == 'negative-infinity -5'\n"
    },
    {
        "number": 3474,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output\n\"\"\"\n"
    },
    {
        "number": 3474,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"10 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\\n\") == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\"\n\"\"\"\n"
    },
    {
        "number": 3474,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 10 10 10 10 0') == '0'\nassert solution('5 10 10 10 10 0') == '12.5'\nassert solution('6 10 10 10 10 0') == 'negative-infinity'\n\n-----Add-----\nSample Input 1:\n6 6 6 6 6 0\n6 6 6 6 6 0\n6 6 6 6 6 0\nSample Output 1:\n0\n3\n\nSample Input 2:\n6 6 6 6 6 0\n6 6 6 6 6 0\n6 6 6 6 6 0\nSample Output 2:\n0\n3\n\n------Notes------\n- Test 1 will hit the wall from the bottom. Test 2 will hit the wall from the top.\n- What if the laser starts at the bottom, does it hit the top or the wall?\n- What if the laser starts at the top, does it hit the bottom or the wall?\n- What if the laser starts at the left, does it hit the right or the wall?\n- What if the laser starts at the right, does it hit the left or the wall?\n- What if the laser starts at the top and hits the left?\n- What if the laser starts at the top and hits the right?\n- What if the laser starts at the bottom and hits the left?\n- What if the laser starts at the bottom and hits the right?\n- What if the laser starts at the top and hits the left?\n- What if the laser starts at the top and hits the right?\n- What if the laser starts at the bottom and hits the right?\n- What if the laser starts at the bottom and hits the left?\n- What if the laser starts at the top and hits the right?\n- What if the laser starts at the top and hits the left?\n- What if the laser starts at the top and hits the right?\n- What if the laser starts at the bottom and hits the right?\n- What if the laser starts at the bottom and hits the left?\n- What if the laser starts at the top and hits the left?\n- What if the laser starts at the top and hits the right?\n- What if the laser starts at the bottom and hits the right?\n- What if the laser starts at the bottom and hits the left?\n- What if the laser starts at the top and hits the left?\n- What if the laser starts at the top and hits the right?\n- What if the laser starts at the bottom and hits the right?\n- What if the laser starts at the bottom and hits the left?\n- What if the laser starts at the top and hits the right?\n- What if the laser starts at the bottom and hits the left?\n- What if the laser starts at the top and hits the right?\n- What if the laser starts at the bottom and hits the left?\n- What if the laser starts at the top and hits the right?\n- What if the laser starts at the bottom and hits the left?\n- What if the laser starts at the top and hits the right?\n- What if the laser starts at the bottom and hits the left?\n- What if the laser starts at the top and hits the right?\n- What if the laser starts at the bottom and hits the left?\n- What if the laser starts at the top and hits the right?\n- What if the laser starts at the bottom and hits the left?\n- What if the laser starts at the top and hits the right?\n- What if the laser starts at the bottom and hits the left?\n- What if the laser starts at the top and hits the right?\n- What if the laser starts at the bottom and hits the left?\n- What if the laser starts at the top and hits the right?\n- What if the laser starts at the bottom and hits the left?\n- What if the laser starts at the top and hits the right?\n- What if the laser starts at the bottom and hits the left?\n- What if the laser starts at the top and hits the right?\n- What if the laser starts at the bottom and hits the left?\n- What if the laser starts at the top and hits the right?\n- What if the laser starts at the bottom and hits the left?\n- What if the laser starts at the top and hits the right?\n- What if the laser starts at the bottom and hits the left?\n- What if the laser starts at the top and hits the right?\n- What if the laser starts at the bottom and hits the left?\n- What if the laser starts at the top and hits the right?\n- What if the laser starts at the bottom and hits the left?\n- What if the laser starts at the top and hits the right?\n- What if the laser starts at the bottom and hits the left?\n- What if the laser starts at the top and hits the right?\n- What if the laser starts at the bottom and hits the left?\n- What if the laser starts at the top and hits the right?\n- What if the laser starts at the bottom and hits the left?\n- What if the laser starts at the top and hits the right?\n- What if the laser starts at the bottom and hits the left?\n- What if the laser starts at the top and hits the right?\n- What if the laser starts at the bottom and hits the left?\n- What if the laser starts at the top and hits the right?\n- What if the laser starts at the bottom and hits the left?\n- What if the laser starts at the top and hits the right?\n- What if the laser starts at the bottom and hits the left?\n- What if the laser starts at the top and hits the right?\n- What if the laser starts at the bottom and hits the left?\n- What if the laser starts at the top and hits the right?\n- What if the laser starts at the bottom and hits the left?\n- What if the laser starts at the top and hits the right?\n- What if the laser starts at the bottom and hits the left?\n- What if the laser starts at the top and hits the right?\n- What if the laser starts at the bottom and hits the left?\n- What if the laser starts at the top and hits the right?\n- What if the laser starts at the bottom and hits the left?\n- What if the laser starts at the top and hits the right?\n- What if the laser starts at the bottom and hits the left?\n- What if the laser starts at the top and hits the right?\n- What if the laser starts at the bottom and hits the left?\n- What if the laser starts at the top and hits the right?\n- What if the laser starts at the bottom and hits the left?\n- What if the laser starts at the top and hits the right?\n- What if the laser starts at the bottom and hits the left?\n- What if the laser starts at the top and hits the right?\n- What if the laser starts at the bottom and"
    },
    {
        "number": 3474,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''10 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0''') == '''negative-infinity 0\n5 12.5\nnegative-infinity -5'''\n\nassert solution(\n'''0 0 0 0 0 0 0\n1 1 1 1 1 1 1\n2 2 2 2 2 2 2\n3 3 3 3 3 3 3\n4 4 4 4 4 4 4\n5 5 5 5 5 5 5\n6 6 6 6 6 6 6''') == '''negative-infinity 0\n5 12.5\nnegative-infinity -5'''\n\nassert solution(\n'''100 0 0 0 0 0 0\n-100 -100 -100 -100 -100 -100\n-200 -200 -200 -200 -200 -200\n-300 -300 -300 -300 -300 -300\n-400 -400 -400 -400 -400 -400\n-500 -500 -500 -500 -500 -500\n0 0 0 0 0 0 0 0''') == '''negative-infinity 0\n-100 -100 -100 -100 -100 -100\n-200 -200 -200 -200 -200 -200\n-300 -300 -300 -300 -300 -300\n-400 -400 -400 -400 -400 -400\n-500 -500 -500 -500 -500 -500'''\n\nassert solution(\n'''-1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1''') == '''negative-infinity -1\nnegative-infinity -1\nnegative-infinity -1\nnegative-infinity -1\nnegative-infinity -1\nnegative-infinity -1\nnegative-infinity -1\nnegative-infinity -1\nnegative-infinity -1'''\n\nassert solution(\n'''3 4 4 4 4 4 0\n3 4 4 4 4 4 0\n0 0 0 0 0 0 0\n3 4 4 4 4 4 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n3 4 4 4 4 4 0\n3 4 4 4 4 4 0''') == '''3 4 4 4 4 4\n3 4 4 4 4 4\n3 4 4 4 4 4\n3 4 4 4 4 4\n0 0 0 0 0 0\n0 0 0 0 0 0\n3 4 4 4 4 4\n3 4 4 4 4 4'''"
    },
    {
        "number": 3474,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(open(\"test_case_1.txt\", \"r\").read()) == \"negative-infinity -5\"\nassert solution(open(\"test_case_2.txt\", \"r\").read()) == \"5 12.5\"\nassert solution(open(\"test_case_3.txt\", \"r\").read()) == \"negative-infinity\"\nassert solution(open(\"test_case_4.txt\", \"r\").read()) == \"negative-infinity\"\nassert solution(open(\"test_case_5.txt\", \"r\").read()) == \"can't hit the wall\"\nprint(\"All test cases passed.\")\n\"\"\"\n\nfrom sys import stdin"
    },
    {
        "number": 3474,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10 10 10 10 10 0''') == '''negative-infinity 0\n5 12.5\nnegative-infinity -5'''\nassert solution('''5 10 10 10 10 0''') == '''negative-infinity 0\n5 12.5\nnegative-infinity -5'''\nassert solution('''6 10 10 10 10 0''') == '''negative-infinity 0\n6 12.5\nnegative-infinity -5'''\nassert solution('''5 10 10 10 10 0''') == '''negative-infinity 0\n5 12.5\nnegative-infinity -5'''\nassert solution('''6 10 10 10 10 0''') == '''negative-infinity 0\n6 12.5\nnegative-infinity -5'''\n"
    },
    {
        "number": 3474,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0''') == 'negative-infinity 0\\n5 12.5\\nnegative-infinity -5'\nassert solution('''5 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0''') == 'negative-infinity 0\\n5 12.5\\nnegative-infinity -5'\nassert solution('''5 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0''') == 'negative-infinity 0\\n5 12.5\\nnegative-infinity -5'\nassert solution('''5 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0''') == 'negative-infinity 0\\n5 12.5\\nnegative-infinity -5'\nassert solution('''5 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0''') == 'negative-infinity 0\\n5 12.5\\nnegative-infinity -5'\n"
    },
    {
        "number": 3474,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 10 10 10 10 0') == 'negative-infinity 0\\n5 12.5'\nassert solution('5 10 10 5 10 0') == 'negative-infinity -5'\nassert solution('6 10 10 10 10 0') == '5 12.5'\nassert solution('5 10 10 5 10 0') == 'negative-infinity -5'\nassert solution('5 10 10 10 10 0') == 'negative-infinity -5'\n"
    },
    {
        "number": 3475,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n\n-----Notes on test cases-----\nYou can use visualizer: http://www.visual-automata.com/#/\nTest Case 1:\n- The given number of modes of transportation: $t = 4$, the number of points: $n = 4$.\n- Each transportation type has three properties, the minimal distance, the maximum heading range, and the travel distance from the previous point.\n- The first and the last transportation type:\n    - The first transportation type: $d_{\\mathrm{min}} = 100$, $d_{\\mathrm{max}} = 0$, $h_{\\mathrm{max}} = -1.8\\cdot 10^5$, and the travel distance is $d_0 = 30000$.\n    - The last transportation type:\n        - The last transportation type: $d_{\\mathrm{min}} = 400$, $d_{\\mathrm{max}} = -40000$, $h_{\\mathrm{max}} = 1.8\\cdot 10^5$, and the travel distance is $d_{n-1} = 30000$.\n- The transportation types:\n    - The first transportation type: $d_{\\mathrm{min}} = 100$, $d_{\\mathrm{max}} = 300000$, $h_{\\mathrm{max}} = -1.8\\cdot 10^5$, and the travel distance is $d_0 = 30000$.\n    - The last transportation type:\n        - The last transportation type: $d_{\\mathrm{min}} = 400$, $d_{\\mathrm{max}} = -40000$, $h_{\\mathrm{max}} = 1.8\\cdot 10^5$, and the travel distance is $d_{n-1} = 30000$.\n    - The transportation types:\n        - The first transportation type: $d_{\\mathrm{min}} = 100$, $d_{\\mathrm{max}} = 30000$, $h_{\\mathrm{max}} = -1.8\\cdot 10^5$, and the travel distance is $d_0 = 30000$.\n        - The last transportation type:\n            - The last transportation type: $d_{\\mathrm{min}} = 400$, $d_{\\mathrm{max}} = -40000$, $h_{\\mathrm{max}} = 1.8\\cdot 10^5$, and the travel distance is $d_{n-1} = 30000$.\n- The travel distance between the first and the last points: $d_{n-1} = 300000$, the total travel distance is $d_n = 30000$.\n- The travel distance between the first point and the second point: $d_0 = 30000$, and the total travel distance is $d_1 = 300000$.\n- The travel distance between the second point and the third point: $d_1 = 300000$, and the total travel distance is $d_2 = 300000$.\n- The travel distance between the third point and the fourth point: $d_2 = 300000$, and the total travel distance is $d_3 = 300000$.\n- The travel distance between the fourth point and the first point: $d_3 = 300000$, and the total travel distance is $d_n = 30000$.\n- The travel distance between the second point and the third point: $d_1 = 300000$, and the total travel distance is $d_2 = 300000$.\n- The travel distance between the third point and the fourth point: $d_2 = 300000$, and the total travel distance is $d_3 = 300000$.\n- The travel distance between the fourth point and the first point: $d_3 = 300000$, and the total travel distance is $d_n = 30000$.\n- The travel distance between the first point and the second point: $d_0 = 30000$, and the total travel distance is $d_1 = 300000$.\n- The travel distance between the first point and the third point: $d_0 = 30000$, and the total travel distance is $d_3 = 300000$.\n- The travel distance between the first point and the fourth point: $d_0 = 30000$, and the total travel distance is $d_4 = 300000$.\n- The travel distance between the second point and the third point: $d_1 = 300000$, and the total travel distance is $d_3 = 300000$.\n- The travel distance between the second point and the fourth point: $d_1 = 300000$, and the total travel distance is $d_4 = 300000$.\n- The travel distance between the third point and the fourth point: $d_2 = 300000$, and the total travel distance is $d_4 = 300000$.\n- The travel distance between the first point and the second point: $d_0 = 30000$, and the total travel distance is $d_1 = 300000$.\n- The travel distance between the first point and the fourth point: $d_0 = 30000$, and the total travel distance is $d_4 = 300000$.\n- The travel distance between the second point and the fourth point: $d_1 = 300000$, and the total travel distance is $d_4 = 300000$.\n- The travel distance between the second point and the third point: $d_1 = 300000$, and the total travel distance is $d_3 = 300000$.\n- The travel distance between the second point and the fourth point: $d_1 = 300000$, and the total travel distance is $d_4 = 300000$.\n- The travel distance between the third point and the fourth point: $d_2 = 300000$, and the total travel"
    },
    {
        "number": 3475,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n4 4\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n400 -40000\n''') == '2'\nassert solution(\n'''\n5 5\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n''') == 'IMPOSSIBLE'\nassert solution(\n'''\n3 2\n100 30000\n200 20000\n300 10000\n''') == '1'"
    },
    {
        "number": 3475,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3475,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000') == '2'\nassert solution('10 10\\n0 0\\n10 0\\n20 0\\n30 0\\n40 0\\n50 0\\n60 0\\n70 0\\n80 0\\n90 0\\n100 0\\n110 0\\n120 0\\n130 0\\n140 0\\n150 0\\n160 0\\n170 0\\n180 0\\n190 0\\n200 0\\n210 0\\n220 0\\n230 0\\n240 0\\n250 0\\n260 0\\n270 0\\n280 0\\n290 0\\n300 0\\n310 0\\n320 0\\n330 0\\n340 0\\n350 0\\n360 0\\n370 0\\n380 0\\n390 0\\n400 0\\n410 0\\n420 0\\n430 0\\n440 0\\n450 0\\n460 0\\n470 0\\n480 0\\n490 0\\n500 0\\n510 0\\n520 0\\n530 0\\n540 0\\n550 0\\n560 0\\n570 0\\n580 0\\n590 0\\n600 0\\n610 0\\n620 0\\n630 0\\n640 0\\n650 0\\n660 0\\n670 0\\n680 0\\n690 0\\n700 0\\n710 0\\n720 0\\n730 0\\n740 0\\n750 0\\n760 0\\n770 0\\n780 0\\n790 0\\n800 0\\n810 0\\n820 0\\n830 0\\n840 0\\n850 0\\n860 0\\n870 0\\n880 0\\n890 0\\n900 0\\n910 0\\n920 0\\n930 0\\n940 0\\n950 0\\n960 0\\n970 0\\n980 0\\n990 0') == 'IMPOSSIBLE'\n\"\"\"\n\nfrom functools import lru_cache\nimport sys\n"
    },
    {
        "number": 3475,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '2'\nassert solution(stdin) == 'IMPOSSIBLE'\n\"\"\"\n"
    },
    {
        "number": 3475,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000') == '2'\nassert solution('6 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000') == 'IMPOSSIBLE'\nassert solution('1 2\\n0 0\\n1 0\\n0 0\\n0 0') == '1'\nassert solution('4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000') == '2'\nassert solution('4 3\\n100 10000\\n200 0\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000') == '3'\n"
    },
    {
        "number": 3475,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n') == '2'\n\nassert solution('4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n') == '2'\n\nassert solution('1 6\\n1 1\\n3 3\\n3 4\\n1 1\\n3 3\\n3 4\\n1 1\\n3 3\\n3 4\\n3 3\\n1 1\\n3 3\\n3 4\\n1 1\\n3 3\\n3 4\\n1 1\\n3 3\\n3 4\\n1 1\\n3 3\\n3 4\\n1 1\\n3 3\\n3 4\\n3 3\\n1 1\\n3 3\\n3 4\\n1 1\\n3 3\\n3 4\\n3 3\\n1 1\\n3 3\\n3 4\\n1 1\\n3 3\\n3 4\\n3 3\\n1 1\\n3 3\\n3 4\\n1 1\\n3 3\\n3 4\\n3 3\\n1 1\\n3 3\\n3 4\\n1 1\\n3 3\\n3 4\\n1 1\\n3 3\\n3 4\\n1 1\\n3 3\\n3 4\\n3 3\\n1 1\\n3 3\\n3 4\\n1 1\\n3 3\\n3 4\\n3 3\\n1 1\\n3 3\\n3 4\\n1 1\\n3 3\\n3 4\\n1 1\\n3 3\\n3 4\\n3 3\\n1 1\\n3 3\\n3 4\\n1 1\\n3 3\\n3 4\\n3 3\\n1 1\\n3 3\\n3 4\\n1 1\\n3 3\\n3 4\\n3 3\\n1 1\\n3 3\\n3 4\\n3 3\\n1 1\\n3 3\\n3 4\\n1 1\\n3 3\\n3 4\\n3 3\\n1 1\\n3 3\\n3 4\\n1 1\\n3 3\\n3 4\\n3 3\\n1 1\\n3 3\\n3 4\\n3 3\\n1 1\\n3 3\\n3 4\\n3 3\\n1 1\\n3 3\\n3 4\\n3 3\\n1 1\\n3 3\\n3 4\\n3 3\\n1 1\\n3 3\\n3 4\\n3 3\\n1 1\\n3 3\\n3 4\\n3 3\\n1 1\\n3 3\\n3 4\\n3 3\\n1 1\\n3 3\\n3 4\\n3 3\\n1 1\\n3 3\\n3 4\\n3 3\\n1 1\\n3 3\\n3 4\\n3 3\\n1 1\\n3 3\\n3 4\\n3 3\\n1 1\\n3 3\\n3 4\\n3 3\\n1 1\\n3 3\\n3 4\\n3 3\\n1 1\\n3 3\\n3 4\\n3 3\\n1 1\\n3 3\\n3 4\\n3 3\\n1 1\\n3 3\\n3 4\\n3 3\\n1 1\\n3 3\\n3 4\\n3 3\\n1 1\\n3 3\\n3 4\\n3 3\\n1 1\\n3 3\\n3 4\\n3 3\\n1 1\\n3 3\\n3 4\\n1 1\\n3 3\\n3 4\\n3 3\\n1 1\\n3 3\\n3 4\\n3 3\\n3 3\\n1 1\\n3 3\\n3 4\\n3 3\\n1 1\\n3 3\\n3 4\\n3 3\\n1 1\\n3 3\\n3 4\\n3 3\\n1 1\\n3 3\\n3 4\\n3 3\\n1 1\\n3 3\\n3 4\\n3 3\\n3 3\\n1 1\\n3 3\\n3 4\\n3 3\\n3 3\\n1 1\\n3 3\\n3 4\\n3 3\\n3 3\\n1 1\\n3 3\\n3 4\\n3 3\\n1 1\\n3 3\\n3 4\\n3 3\\n3 3\\n1 1\\n3 3\\n3 4\\n3 3\\n3 3\\n1 1\\n3 3\\n3 4\\n3 3\\n1 1\\n3 3\\n3 4\\n3 3\\n3 3\\n1 1\\n3 3\\n3 4\\n3 3\\n3 3\\n1 1\\n3 3\\n3 4\\n3 3\\n1 1\\n3 3\\n3 4\\n3 3\\n3 3\\n1 1\\n3 3\\n3 4\\n1 1\\n3 3\\n3 4\\n3 3\\n3 3\\n1 1\\n3 3\\n3 4\\n3 3\\n1 1\\n3 3\\n3 4\\n3 3\\n3 3\\n1 1\\n3 3\\n3 4\\n3 3\\n3 3\\n1 1\\n3 3\\n3 4\\n1 1"
    },
    {
        "number": 3475,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\"\n\"\"\"\n"
    },
    {
        "number": 3475,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 4\") == \"2\"\nassert solution(\"3 3\") == \"IMPOSSIBLE\"\nassert solution(\"5 5\") == \"1\"\nassert solution(\"5 4\") == \"IMPOSSIBLE\"\nassert solution(\"3 3\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3475,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(open(\"test_input.txt\", \"r\").read()) == \"2\"\n\"\"\""
    },
    {
        "number": 3476,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3476,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3476,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == '345 2\\nrotS 2 1\\negR 2'\n\n\"\"\"\n"
    },
    {
        "number": 3476,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100''') == '345 2'\n'''"
    },
    {
        "number": 3476,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100''') == '345 2\\nrotS 2 1\\negR 2\\n'\nassert solution('''1 1\n2 -3 4\n4 -5 -6\n7 -8 -9\n10 -11 -12''') == '6 3\\nrotS 3 1\\nnegR 1\\n'\nassert solution('''2 2\n1 -2 3\n4 -5 6''') == '11 3\\nrotS 1 2\\n'\nassert solution('''4 2\n1 2 3 4\n5 -6 -7 -8\n9 -10 11 -12''') == '17 3\\nrotS 2 4\\nnegR 3 1\\n'\nassert solution('''1 1\n-2 -3 4\n5 -6 -7 -8\n9 -10 11 -12''') == '-14 3\\nrotS 3 2\\n'\n"
    },
    {
        "number": 3476,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100''') == '345 2\\nrotS 2 1\\nnegR 2\\n'\n'''\nassert solution('''3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100''') == '345 2\\nrotS 2 1\\nnegR 2\\n'\n'''\nassert solution('''3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100''') == '345 2\\nrotS 2 1\\nnegR 2\\n'\n'''\nassert solution('''4 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n-4 -1 -6 -11''') == '345 -1\\nrotS 2 1\\nnegR 2\\n'\n'''\nassert solution('''4 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n-4 -1 -6 -11''') == '345 -1\\nrotS 2 1\\nnegR 2\\n'\n'''\n"
    },
    {
        "number": 3476,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '345 2'\n\nNote\n\n1 <= R, C <= 100\n0 <= Arr[i][j] <= 10^4\n\"\"\""
    },
    {
        "number": 3476,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100''') == '345 2\\nrotS 2 1\\nnegR 2\\n'\n'''\n'''"
    },
    {
        "number": 3476,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') is None\nassert solution('\\n') is None\nassert solution('\\n1\\n') == '1'\nassert solution('\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\na\\n') == '45'\nassert solution('\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\na\\n') == '45'\n"
    },
    {
        "number": 3476,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100''') == '345 2\\nrotS 2 1\\negR 2\\nnegS 2 1'\nassert solution('''1 3\n2 1\n3 1''') == '3 2'\nassert solution('''2 2\n3 -2\n-2 3''') == '3 2'\nassert solution('''3 2\n2 -2\n3 -2''') == '3 2'\nassert solution('''10 10\n5 10 10 25 0 9 19 19 -11 18 -10 -12 -19 -9 -18 18 -12 19 19 19 19 -11 11 -10 0 -3 3 -4 -5 -7 -9 -8 -6 3 3 3 -6 -1 -3 3 -4 -5 -9 -2 -3 -8 3 -2 -1 -4 -7 -3 -9 -10 -9 -8 -9 -3 -1 -2 -5 -7 -9 -3 -8 -2 -7 -1 -4 -3 -2 -5 -1 -2 -4 -9 -4 -6 -4 -2 -3 -2 -5 -1 -2 -3 -8 -2 -3 -2 -5 -1 -4 -5 -3 -2 -6 -1 -2 -9 -3 -3 -1 -4 -3 -4 -6 -3 -5 -2 -9 -1 -8 -3 -2 -5 -6 -2 -4 -6 -2 -9 -4 -3 -1 -4 -2 -9 -7 -5 -4 -5 -7 -3 -2 -4 -1 -9 -6 -2 -9 -4 -2 -6 -3 -9 -2 -1 -9 -7 -3 -4 -6 -1 -2 -4 -3 -8 -2 -7 -2 -4 -8 -1 -7 -2 -9 -3 -4 -3 -2 -8 -3 -4 -4 -9 -2 -5 -3 -4 -5 -3 -8 -3 -6 -7 -3 -3 -2 -4 -9 -5 -9 -4 -6 -4 -9 -3 -5 -7 -8 -3 -9 -2 -8 -6 -8 -2 -9 -2 -2 -9 -7 -6 -2 -4 -2 -6 -4 -8 -8 -9 -4 -5 -3 -4 -2 -5 -1 -5 -6 -4 -1 -8 -9 -2 -8 -9 -7 -1 -3 -4 -2 -3 -2 -7 -2 -4 -1 -5 -9 -1 -9 -3 -9 -4 -4 -3 -5 -5 -9 -3 -3 -7 -5 -3 -3 -5 -8 -1 -6 -2 -3 -5 -1 -2 -4 -5 -5 -8 -3 -6 -2 -2 -4 -9 -5 -2 -6 -2 -9 -8 -5 -5 -9 -2 -1 -7 -4 -6 -1 -3 -3 -3 -1 -2 -3 -3 -1 -5 -6 -2 -3 -3 -1 -8 -1 -2 -2 -8 -5 -4 -3 -4 -1 -5 -9 -2 -2 -9 -8 -1 -2 -8 -3 -4 -1 -2 -8 -9 -6 -2 -9 -4 -3 -7 -4 -7 -1 -2 -4 -3 -3 -7 -1 -2 -9 -6 -9 -2 -3 -4 -9 -3 -3 -9 -6 -4 -6 -2 -4 -5 -5 -3 -3 -8 -3 -4 -1 -2 -3 -3 -2 -5 -3 -1 -4 -1 -4 -9 -5 -4 -3 -2 -5 -1 -8 -3 -7 -2 -7 -5 -5 -5 -6 -7 -2 -3 -2 -9 -2 -8 -4 -9 -6 -9 -6 -3 -2 -5 -4 -3 -9 -1 -1 -3 -3 -5 -8 -9 -2 -4 -6 -1 -9 -3 -5 -2 -3 -8 -5 -2 -2 -6 -1 -5 -1 -7 -1 -1 -3 -5 -2 -7 -1 -2 -2 -3 -1 -5 -5 -3 -7 -4 -2 -3 -1 -2 -3 -1 -4 -1 -2 -8 -2 -4 -4 -3 -5 -3 -4 -3 -2 -4 -3 -2 -2 -3 -3 -4 -4 -3 -9 -2 -3 -2 -5 -2 -4 -1 -3 -8 -6 -2 -2 -8 -2 -6 -8 -2 -3 -3 -2 -7 -"
    },
    {
        "number": 3477,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3 2\n3 1 1\n\"\"\") == \"0.5\"\n\"\"\"\n    a, b = [int(x) for x in stdin.split()]\n    k = [int(x) for x in stdin.split()]\n    v = []\n    v.append(k[0])\n    for i in range(1, a):\n        v.append(v[i - 1] + k[i])\n    return \"{0:.4f}\".format(min(v))"
    },
    {
        "number": 3477,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2\nassert solution(input_3) == output_3\nassert solution(input_4) == output_4\nassert solution(input_5) == output_5\"\"\"\n\n\nimport sys"
    },
    {
        "number": 3477,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"0.5\"\nassert solution(\"1 2\") == \"0.5\"\nassert solution(\"2 2\") == \"0.25\"\nassert solution(\"2 2\") == \"0.25\"\nassert solution(\"3 2\") == \"0.1666666667\"\n"
    },
    {
        "number": 3477,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\n3 4\\n5 6\\n') == '0.5'\nassert solution('1 2\\n3 4\\n5 6\\n7 8\\n') == '7.000000000000'\nassert solution('1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n') == '10.000000000000'\nassert solution('1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n') == '12.000000000000'\nassert solution('1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n') == '12.000000000000'\n"
    },
    {
        "number": 3477,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(dedent(\"\"\"\n    3 2\n    3 1 1\n\"\"\")) == '0.5'\n\nassert solution(dedent(\"\"\"\n    3 2\n    3 2 2\n\"\"\")) == '0.25'\n\nassert solution(dedent(\"\"\"\n    4 4\n    2 2 1 1\n\"\"\")) == '1'\n\nassert solution(dedent(\"\"\"\n    4 4\n    3 3 2 2\n\"\"\")) == '0.125'\n\nassert solution(dedent(\"\"\"\n    4 5\n    2 2 1 2 1\n\"\"\")) == '1.5'"
    },
    {
        "number": 3477,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2\\n3 1 1') == '0.5'\nassert solution('1 2\\n3 3 3') == '3'\nassert solution('1 2\\n3 4 2') == '1'\nassert solution('1 2\\n3 1 3') == '2'\nassert solution('1 2\\n3 2 4') == '1'\n"
    },
    {
        "number": 3477,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\nassert solution(input3) == output3\nassert solution(input4) == output4\nassert solution(input5) == output5\n"
    },
    {
        "number": 3477,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '0.5'\nstdin = '''3 4\n3 1 1\n'''\nassert solution(stdin) == '0.5'\nstdin = '''1 5\n1 1\n'''\nassert solution(stdin) == '0.25'\n'''"
    },
    {
        "number": 3477,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2') == '0.5'\nassert solution('1 1') == '0'\nassert solution('2 3') == '1'\nassert solution('1 3') == '2'\nassert solution('3 3') == '1'\n"
    },
    {
        "number": 3477,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 1 1') == '0.5'\nassert solution('3 2 2') == '0.5'\nassert solution('3 3 3') == '0.5'\nassert solution('3 3 3 1') == '0.5'\nassert solution('3 3 3 1 2') == '0.5'\n"
    },
    {
        "number": 3478,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9''') == 'Impossible'\nassert solution('''8 7\n1 4\n5 4\n1 5\n2 6\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9''') == '1 6 4 7 2 3 5 8 9'\nassert solution('''8 5\n1 4\n5 4\n1 5\n2 6\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9''') == '1 4 5 7 2 6 3 8 9'\nassert solution('''6 5\n1 4\n5 4\n1 5\n2 6\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9''') == '1 6 4 7 2 3 5 8 9'\nassert solution('''6 5\n1 4\n5 4\n1 5\n2 6\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9''') == '1 6 4 7 2 3 5 8 9'\n"
    },
    {
        "number": 3478,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\nstdin = '''9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n'''\nassert solution(stdin) == stdin"
    },
    {
        "number": 3478,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n\"\"\") == \"\"\"1 4 5\n2 6 7\n\"\"\"\nassert solution(\n\"\"\"\n9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n\"\"\") == \"\"\"impossible\"\"\"\nassert solution(\n\"\"\"\n9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n\"\"\") == \"\"\"1 4 5\n2 6 7\n\"\"\"\nassert solution(\n\"\"\"\n5 2\n1 3\n3 4\n4 2\n2 1\n3 1\n1 4\n4 2\n1 2\n2 4\n2 3\n3 4\n1 4\n\"\"\") == \"\"\"impossible\"\"\"\nassert solution(\n\"\"\"\n5 2\n1 3\n3 4\n4 2\n2 1\n3 1\n1 4\n4 2\n1 2\n2 4\n2 3\n3 4\n1 4\n\"\"\") == \"\"\"1 4 5\n2 6 7\n\"\"\""
    },
    {
        "number": 3478,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9') == '1 4 5\\n2 6 7'\nassert solution('1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n1 2') == 'Impossible'\nassert solution('1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n7 8') == '1 4 5\\n2 6 7\\n3 8'\nassert solution('1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n7 8\\n4 10') == '1 4 5\\n2 6 7\\n3 8'\nassert solution('1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n7 8\\n4 10\\n6 11') == '1 4 5\\n2 6 7\\n3 8'\n"
    },
    {
        "number": 3478,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"1 4 5\\n2 6 7\"\n\n--- 5.1 % ---\n"
    },
    {
        "number": 3478,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 10') == 'impossible'\nassert solution('5 6') == 'impossible'\nassert solution('5 7') == 'impossible'\nassert solution('2 5') == 'impossible'\nassert solution('5 5') == 'impossible'\n"
    },
    {
        "number": 3478,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3478,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"1 2\") == \"1 2\"\nassert solution(\"2 1\") == \"1 2\"\nassert solution(\"1 2 2\") == \"1 2\"\n"
    },
    {
        "number": 3478,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 6\") == \"impossible\"\nassert solution(\"4 10\") == \"impossible\"\nassert solution(\"6 7\") == \"1 4 5\"\nassert solution(\"6 10\") == \"impossible\"\nassert solution(\"7 2\") == \"1 5 2\"\n"
    },
    {
        "number": 3478,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"impossible\"\nassert solution(\"2 3\") == \"impossible\"\nassert solution(\"2 4\") == \"impossible\"\nassert solution(\"4 5\") == \"impossible\"\nassert solution(\"4 2\") == \"impossible\"\n"
    },
    {
        "number": 3479,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"11 2\\n\"\n    \"12000\\n\"\n    \"9000\\n\"\n    \"4500\\n\"\n    \"10000\\n\"\n    \"12000\\n\"\n    \"11000\\n\"\n    \"12000\\n\"\n    \"18000\\n\"\n    \"10000\\n\"\n    \"9000\\n\"\n    \"12000\\n\") == \"13500\"\n\nassert solution(\n    \"11 2\\n\"\n    \"50000\\n\"\n    \"500\\n\"\n    \"1000\\n\"\n    \"2000\\n\"\n    \"50000\\n\"\n    \"500\\n\"\n    \"1000\\n\"\n    \"2000\\n\"\n    \"50000\\n\"\n    \"500\\n\"\n    \"1000\\n\") == \"120000\"\n\nprint(solution(stdin))\n"
    },
    {
        "number": 3479,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"13500\"\n'''\n"
    },
    {
        "number": 3479,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"13500\"\n"
    },
    {
        "number": 3479,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2\\n3\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\") == \"13500\"\nassert solution(\"2\\n3\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\") == \"13500\"\nassert solution(\"2\\n3\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\") == \"13500\"\nassert solution(\"2\\n3\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\") == \"13500\"\nassert solution(\"2\\n3\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\") == \"13500\"\n"
    },
    {
        "number": 3479,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3479,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"13500\"\n\"\"\"\n"
    },
    {
        "number": 3479,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"12\n12000\n9000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000\"\"\") == \"13500\"\nassert solution(\"\"\"4\n4\n5\n6\n10\n\"\"\") == \"12\"\nassert solution(\"\"\"20\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000\n2000"
    },
    {
        "number": 3479,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"13500\"\n"
    },
    {
        "number": 3479,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2\\n2\\n') == '1'\nassert solution('2 3\\n2\\n') == '1'\nassert solution('2 4\\n2\\n') == '2'\nassert solution('2 5\\n2\\n') == '1'\nassert solution('2 6\\n2\\n') == '1'\n"
    },
    {
        "number": 3479,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''11 2\n12000\n9000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000''') == '13500'\nassert solution('''14 4\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n"
    },
    {
        "number": 3480,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"2 10\\n\" +\n\"Hot cross buns! = Hot cross buns! =\\n\" +\n\"4 4 4 4 4 4 4 4\\n\" +\n\"One a pen- ny, Two a pen- ny, Hot cross buns! =\") == \"\"\"Hot_cross_buns!=___Hot_cross_buns!=\n____________________Hot_cross_buns!=\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!=\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\n"
    },
    {
        "number": 3480,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 16\nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\n2 2 2 2 2 2 2 2 4 4 4 4\n''') == '''Hot_cross_buns!_=___Hot_cross_buns!_=\n____________________Hot_cross_buns!_=\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\n"
    },
    {
        "number": 3480,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('abc def') == 'abc_def'\nassert solution('a') == 'a'\nassert solution('abc def') == 'abc_def'\nassert solution('a b c') == 'a_b_c'\n"
    },
    {
        "number": 3480,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n4\\n4\\n4\\n4\\n4\\n4\\n') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_='\nassert solution('2\\n4\\n4\\n4\\n4\\n4\\n4\\n') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_='\nassert solution('2\\n4\\n4\\n4\\n4\\n4\\n4\\n') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_='\nassert solution('2\\n4\\n4\\n4\\n4\\n4\\n4\\n') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_='\nassert solution('2\\n4\\n4\\n4\\n4\\n4\\n4\\n') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_='\n"
    },
    {
        "number": 3480,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 16\nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\n2 2 2 2 2 2 2 2 4 4 4 4\n''') == '''Hot_cross_buns!_=___Hot_cross_buns!_=\n____________________Hot_cross_buns!_=\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\n"
    },
    {
        "number": 3480,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 16\nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\n2 2 2 2 2 2 2 2 4 4 4 4\n''') == '''Hot_cross_buns!_=___Hot_cross_buns!_=\n____________________Hot_cross_buns!_=\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\n"
    },
    {
        "number": 3480,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 16\nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4''') == '''Hot_cross_buns!_=___Hot_cross_buns!_=\n____________________Hot_cross_buns!_=\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\n"
    },
    {
        "number": 3480,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 16\nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\n2 2 2 2 2 2 2 2 4 4 4 4\n''') == '''Hot_cross_buns!_=___Hot_cross_buns!_=\n____________________Hot_cross_buns!_=\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\n"
    },
    {
        "number": 3480,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 10\nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\n2 2 2 2 2 2 2 2 4 4 4 4''') == \\\n'''Hot_cross_buns!_=___Hot_cross_buns!_=\n____________________Hot_cross_buns!_=\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\n"
    },
    {
        "number": 3480,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1') == '_'\nassert solution('1 2') == '_'\nassert solution('1 2 3') == '_'\nassert solution('1 2 3 4') == '_'\n"
    },
    {
        "number": 3481,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"33\"\nassert solution(stdin) == \"70\"\nassert solution(stdin) == \"79\"\nassert solution(stdin) == \"21\"\nassert solution(stdin) == \"7\"\n"
    },
    {
        "number": 3481,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33''') == '33'\nprint(solution(\n'''7 7 2\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1'''))\n\nassert solution(\n'''3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33''') == '33'\nprint(solution(\n'''7 7 2\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1'''))\n\nassert solution(\n'''7 7 2\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1''') == '33'\nprint(solution(\n'''7 7 2\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1'''))\n\nassert solution(\n'''3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33''') == '33'\nprint(solution(\n'''7 7 2\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1'''))\n"
    },
    {
        "number": 3481,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33''') == '33'\n'''\n'''"
    },
    {
        "number": 3481,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == str(solution(fileinput.input()[0]))\n\"\"\"\n"
    },
    {
        "number": 3481,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 2 1\") == \"10\"\nassert solution(\"2 2 3\") == \"10\"\nassert solution(\"2 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\") == \"70\"\nassert solution(\"2 2 3\\n1 2 10\\n1 4 6 6\\n1 6 10 5\") == \"70\"\n\n\"\"\"\n\nclass Solution:\n    def __init__(self):\n        self.n, self.k, self.r = [int(x) for x in stdin.readline().strip().split()]\n        self.roads = defaultdict(dict)\n        for i in range(self.r):\n            a, b, t = [int(x) for x in stdin.readline().strip().split()]\n            self.roads[a][b] = t\n            self.roads[b][a] = t\n\n    def maxTime(self):\n        self.time = 0\n        self.maxTimeBFS(1, 1)\n        return self.time\n\n    def maxTimeBFS(self, v, t):\n        for u in self.roads[v]:\n            self.roads[u][v] = max(self.roads[u][v], self.roads[v][u])\n        t += self.roads[v][v]\n        if len(self.roads[v]) == 0:\n            self.time = max(self.time, t)\n            return\n        for u in self.roads[v]:\n            self.roads[u][v] = max(self.roads[u][v], self.roads[v][u])\n            if self.roads[u][v] + t > self.time:\n                self.maxTimeBFS(u, self.roads[u][v] + t)\n"
    },
    {
        "number": 3481,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n''') == '33'\nassert solution('''\n2 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n''') == '29'\nassert solution('''\n3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n''') == '29'\nassert solution('''\n3 2 1\n1 2 1\n1 4 6 6\n1 6 10 5\n2 10 30 33\n''') == '29'\nassert solution('''\n3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n''') == '25'\n"
    },
    {
        "number": 3481,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"33\"\n\nassert solution(stdin2) == \"70\"\n\nprint(\"Passed: 10 out of 10\")"
    },
    {
        "number": 3481,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\\n') == '33'\nassert solution('3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\\n') == '33'\nassert solution('3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\\n') == '33'\n\n---Part Two---\nThis time, DJ Polygon is considering the problem of how to add money to his debt and how to pay it back. Now you're in the business of optimizing the value of his debt!\n\nDJ has a budget of $B$, and he wants to pay his debts back as soon as possible by playing at least one gig at each venue. You're given the number of gigs that DJ would like to play at each venue, and the amount of money that each gig at each venue will cost. Let's sort the information into three buckets: large, medium, and small.\n\nFor each bucket, you will have three lines: the first line contains $A_ i$, the second line contains $B_ i$, and the third line contains $C_ i$. Each of these lines contains three integers in this order: the venue number, the time spent at the venue (inclusive start and exclusive end), and the cost per gig (in the same order as the lines above). You have the right to play at most one gig at each venue, but it's fine to play at multiple venues at the same time.\n\nDJ has a large budget, and you can keep all the money for the large bucket. So, the first gig that he can play at a venue costs $B_ i$ + $C_ i$.\n\nDJ has a medium budget, and he can pay $C_ i$ for the first gig at a venue, and can pay $B_ i$ for the second gig at a venue.\n\nDJ has a small budget, and he can pay $C_ i$ for the first gig at a venue, and can pay $B_ i$ for the second gig at a venue, and the third gig at a venue.\n\nYou need to find the maximum cost of paying off DJ's debts by playing at least one gig at each venue.\n\n-----Input-----\nThe first line of the input contains three integers $B$, $C$, and $G$, the number of Gig costs (in the same order as the lines above), the budget of DJ, and the number of gig requests.\n\nEach of the next $G$ lines contains $A_ i$, $B_ i$, and $C_ i$, the number of gig requests, the time spent at venue $i$, and the cost per gig for the first gig at venue $i$. Each of the values in the input satisfy $1 \\leq A_ i \\leq \\min \\left(2000000,B\\cdot C\\cdot G\\right)$, $1 \\leq B_ i \\leq \\min \\left(2000, A\\cdot C\\cdot G\\right)$, and $0 \\leq C_ i \\leq \\min \\left(200, A\\cdot B\\cdot G\\right)$.\n\n-----Output-----\nOutput a single integer: the maximum cost of paying off DJ's debts.\n\n-----Sample Explanation-----\nIn the first sample, DJ pays $B_1$ + $C_1$ = $30$ for the first gig at venue $1$. He also pays $C_2$ + $C_3$ = $34$ for the second gig at venue $2$. He can pay $B_2$ + $C_4$ = $12$ for the third gig at venue $3$.\n\nIn the second sample, DJ can pay $B_1$ + $C_1$ = $26$ and $C_2$ + $C_3$ = $50$ and $C_4$ + $C_5$ = $60$.\n\nIn the third sample, DJ can pay $B_1$ + $C_1$ = $10$ and $C_2$ + $C_3$ = $11$ and $C_4$ + $C_5$ = $12$.\n\nIn the fourth sample, DJ can pay $B_1$ + $C_1$ = $7$ and $C_2$ + $C_3$ = $8$ and $C_4$ + $C_5$ = $9$.\n\nIn the fifth sample, DJ can pay $B_1$ + $C_1$ = $2$ and $C_2$ + $C_3$ = $4$ and $C_4$ + $C_5$ = $5$.\n\nIn the sixth sample, DJ can pay $B_1$ + $C_1$ = $2$ and $C_2$ + $C_3$ = $6$ and $C_4$ + $C_5$ = $7$.\n\nIn the seventh sample, DJ can pay $B_1$ + $C_1$ = $2$ and $C_2$ + $C_3$ = $3$ and $C_4$ + $C_5$ = $4$.\n\nIn the eighth sample, DJ can pay $B_1$ + $C_1$ = $"
    },
    {
        "number": 3481,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 2 1''') == \"33\"\nassert solution('''3 2 1''') == \"33\"\nassert solution('''3 2 2\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33''') == \"70\"\nassert solution('''3 4 3\n1 2 10\n1 3 6 7\n1 4 10 5\n2 3 10 11\n2 4 1 2\n3 4 10 11\n3 5 10 10\n4 5 1 2\n4 6 1 2\n5 5 1 2''') == \"135\"\nassert solution('''3 3 3\n1 2 3\n1 2 3\n1 2 3''') == \"1\"\n"
    },
    {
        "number": 3481,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33''') == '33'\n'''\n>>> solution('''3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n''')\n'33'\n'''"
    },
    {
        "number": 3482,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''20 15 10\n7 7\n30 0''') == '405'\nassert solution('''30 15 10\n7 7\n30 0''') == '690'\nassert solution('''30 15 10\n7 7\n3 0''') == '90'\nassert solution('''30 15 10\n7 7\n15 0''') == '45'\nassert solution('''30 15 10\n7 7\n30 0\n7 7\n30 0''') == '690'\n"
    },
    {
        "number": 3482,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n20 15 10\n7 7\n30 0''') == '405'\nassert solution('''3\n20 15 10\n7 7\n30 0\n7 7\n30 0''') == '405'\nassert solution('''3\n20 15 10\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n7 7\n30 0\n"
    },
    {
        "number": 3482,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n3\\n4\\n2\\n5\\n3\\n2\\n3\\n1\") == \"280\"\nassert solution(\"1\\n3\\n4\\n2\\n5\\n3\\n2\\n3\\n1\") == \"280\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n3\\n4\\n2\\n5\\n3\\n2\\n3\\n1\") == \"280\"\nassert solution(\"2\\n2\\n1\\n3\\n2\\n1\\n3\\n1\\n1\\n1\") == \"40\"\n"
    },
    {
        "number": 3482,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '405'\n\"\"\"\n\n\"\"\"\nIn this question, we have to calculate the minimum cost to complete the transit card based on the prices. There is a discount when the price of the transit card decreases to the second lowest price, ie. if the price of the transit card is $100, it has to pay $80 and the second lowest price is $80.\n\nFor example, consider the price array of $10, $30, $10, $10, $20, $30, $30, $40, $50, $30. The first 4 days are going to the second lowest price (ie. $30), then the fifth and sixth days will pay $30, $30 and the third day will pay $20. Thus the minimum cost for a certain day would be $10 * 2 + $30 + $20 = $140.\n\nThe same method can be used to find the cost for the last day, which will be $30 * 2 + $10 * 2 + $20 = $280.\n\nThe price array and the days that the transit card is going to be charged is given in the input. The number of days for which the transit card is going to be charged is given in the second line. After the number of days for which the transit card is going to be charged, follow $n$ lines, each containing a pair of integers $a$ and $b$ ($1 \\le a \\le b \\le n$), indicating that you will be away on all days from day $a$ to day $b$ (inclusive). The days are numbered from $1$ to $n$.\n\n---\n\nAnother important question is whether the transit card is being charged when it is going home again or when it is charged at a lower price.\n\nFor example, for the price array, $10, $30, $10, $10, $20, $30, $30, $40, $50, $30. Suppose the transit card is charged for the 4th to the 6th days. The 1st to 2nd days, the 1st to 3rd days, the 3rd to 5th days, and the 6th to 8th days, will pay $30, $30, $30, $30 respectively.\n\nConsider the transit card being charged on the 1st to the 2nd days. For the 1st to 2nd days, the transit card is going to be charged at the second lowest price ($30), and the second lowest price will be $20. However, for the 1st to 3rd days, the transit card is going to be charged at the second lowest price ($30), and the second lowest price will be $10. Hence for the 1st to 2nd days, the transit card is going to be charged at the second lowest price ($10)\n\nConsider the transit card being charged on the 1st to the 3rd days. For the 1st to 3rd days, the transit card is going to be charged at the second lowest price ($30), and the second lowest price will be $10. However, for the 1st to 4th days, the transit card is going to be charged at the second lowest price ($20), and the second lowest price will be $10. Hence for the 1st to 3rd days, the transit card is going to be charged at the second lowest price ($10)\n\nIf we now consider the transit card being charged on the 1st to the 5th days, the transit card is going to be charged at the second lowest price ($10) and the second lowest price will be $10. For the 1st to 4th days, the transit card is going to be charged at the second lowest price ($10), and the second lowest price will be $10. Hence for the 1st to 4th days, the transit card is going to be charged at the second lowest price ($10)\n\nSimilarly, if we now consider the transit card being charged on the 1st to the 8th days, the transit card is going to be charged at the second lowest price ($10), and the second lowest price will be $10. For the 1st to 7th days, the transit card is going to be charged at the second lowest price ($10), and the second lowest price will be $10. Hence for the 1st to 7th days, the transit card is going to be charged at the second lowest price ($10)\n\nNow the transit card is going to be charged at the second lowest price ($10) and the second lowest price will be $10. Hence, the cost for the 1st to the 8th days is $10 * 2 + $10 + $10 = $270.\n\nConsider the transit card being charged on the 8th to the 10th days. The transit card is going to be charged at the second lowest price ($10), and the second lowest price will be $10. Hence, the cost for the 8th to the 10th days is $10 * 2 + $10 + $10 = $270.\n\nConsider the transit card being charged on the 1st to the 2nd days. For the 1st to 2nd days, the transit card is going to be charged at the second lowest price ($10), and the second lowest price will be $10. However, for the 1st to 3rd days, the transit card is going to be charged at the second lowest price ($10), and the second lowest price will be $10. Hence for the 1st to 2nd days, the transit card is going to be charged at the second lowest price ($10)\n\nNote that the transit card is not going to be charged when it is going home again because when it is going home again, the transit card is not going to be charged at the second lowest price ($10), and the second lowest price will be $10.\n\nAnother important question is whether the transit card is being charged at the lowest price when it is going home again or when it is charged at a lower price.\n\nFor example, for the price array, $10, $30, $10, $10, $20, $30, $30, $40, $50, $30. Suppose the transit card is charged for the 4th to the 6th days. The 1st to 2nd days, the 1st to 3rd days, the 3rd to 5th days, and the 6th to 8th days, will pay $30, $30, $30, $30 respectively.\n\nConsider the transit card being charged on the 1st to the 2nd days. For the 1st to 2nd days, the transit card"
    },
    {
        "number": 3482,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == 405\n\n--- 32 ms ---\n--- 10.1 MB ---\n\nWrite 5 lines of code to test the correctness of solution:\nGiven a list of integers from $1$ to $10^6$, find the index of the smallest positive integer that is not in the list. Assume that the list is non-empty.\n\nExample:\nFor $[1, 2, 3, 6, 7, 11, 13]$, your output should be $5$.\n\n--- Simple\n'''\nGiven a list of integers from $1$ to $10^6$, find the index of the smallest positive integer that is not in the list. Assume that the list is non-empty.\n'''\n'''\n'''"
    },
    {
        "number": 3482,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(open(\"test_data/input03.txt\").read()) == \"370\"\nprint(solution(open(\"data/input03.txt\").read()))\n\nassert solution(open(\"test_data/input04.txt\").read()) == \"245\"\nprint(solution(open(\"data/input04.txt\").read()))\n\nassert solution(open(\"test_data/input05.txt\").read()) == \"530\"\nprint(solution(open(\"data/input05.txt\").read()))\n\nassert solution(open(\"test_data/input06.txt\").read()) == \"395\"\nprint(solution(open(\"data/input06.txt\").read()))\n\nassert solution(open(\"test_data/input07.txt\").read()) == \"480\"\nprint(solution(open(\"data/input07.txt\").read()))"
    },
    {
        "number": 3482,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n20 15 10\n7 7\n30 0''') == '405'\n'''\n"
    },
    {
        "number": 3482,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''20 15 10\n7 7\n30 0''') == '405'\nassert solution('''3\n20 15 10\n7 7\n30 0''') == '405'\nassert solution('''3\n20 15 10\n7 7\n1 1\n''') == '0'\nassert solution('''3\n20 15 10\n7 7\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n1 30\n1 31\n1 32\n1 33\n1 34\n1 35\n1 36\n1 37\n1 38\n1 39\n1 40\n1 41\n1 42\n1 43\n1 44\n1 45\n1 46\n1 47\n1 48\n1 49\n1 50\n1 51\n1 52\n1 53\n1 54\n1 55\n1 56\n1 57\n1 58\n1 59\n1 60\n1 61\n1 62\n1 63\n1 64\n1 65\n1 66\n1 67\n1 68\n1 69\n1 70\n1 71\n1 72\n1 73\n1 74\n1 75\n1 76\n1 77\n1 78\n1 79\n1 80\n1 81\n1 82\n1 83\n1 84\n1 85\n1 86\n1 87\n1 88\n1 89\n1 90\n1 91\n1 92\n1 93\n1 94\n1 95\n1 96\n1 97\n1 98\n1 99\n1 100\n1 101\n1 102\n1 103\n1 104\n1 105\n1 106\n1 107\n1 108\n1 109\n1 110\n1 111\n1 112\n1 113\n1 114\n1 115\n1 116\n1 117\n1 118\n1 119\n1 120\n1 121\n1 122\n1 123\n1 124\n1 125\n1 126\n1 127\n1 128\n1 129\n1 130\n1 131\n1 132\n1 133\n1 134\n1 135\n1 136\n1 137\n1 138\n1 139\n1 140\n1 141\n1 142\n1 143\n1 144\n1 145\n1 146\n1 147\n1 148\n1 149\n1 150\n1 151\n1 152\n1 153\n1 154\n1 155\n1 156\n1 157\n1 158\n1 159\n1 160\n1 161\n1 162\n1 163\n1 164\n1 165\n1 166\n1 167\n1 168\n1 169\n1 170\n1 171\n1 172\n1 173\n1 174\n1 175\n1 176\n1 177\n1 178\n1 179\n1 180\n1 181\n1 182\n1 183\n1 184\n1 185\n1 186\n1 187\n1 188\n1 189\n1 190\n1 191\n1 192\n1 193\n1 194\n1 195\n1 196\n1 197\n1 198\n1 199\n1 200\n1 201\n1 202\n1 203\n1 204\n1 205\n1 206\n1 207\n1 208\n1 209\n1 210\n1 211\n1 212\n1 213\n1 214\n1 215\n1 216\n1 217\n1 218\n1 219\n1 220\n1 221\n1 222\n1 223\n1 224\n1 225\n1 226\n1 227\n1 228\n1 229\n1 230\n1 231\n1 232\n1 233\n1 234\n1 235\n1 236\n1 237\n1 238\n1 239\n1 240\n1 241\n1 242\n1 243\n1 244\n1 245\n1 246\n1 247\n1 248\n1 249\n1 250\n1 251\n1 252\n1 253\n1 254\n1 255\n1 256\n1 257\n1 258\n1 259\n1 260\n1 261\n1 262\n1 263\n1 264\n1 265\n1 266\n1 267\n1 268\n1 269\n1 270\n1 271\n1 272\n1 273\n1 274\n1 275\n1 276\n1 277\n1 278\n1 279\n1 280\n1 281\n1 282\n1 283\n1 284\n1 285\n1 286\n1 287\n1 288\n1 289\n1 290\n1 291\n1 292\n1 293\n1 294\n1 295\n1 296\n1 297\n1 298\n1 299\n1 300\n1 301\n1 302\n1 303\n1 304\n1 305\n1 306\n1 307\n1 308\n1 309\n1 310\n1 311\n1 312\n1 313\n1 314\n1 315\n1 316\n1 317\n1 318\n1 319\n1 320\n1 321\n1 322\n1 323\n1 324\n1 325\n1 326\n1 327\n1 328\n1 329\n1 330\n1 331\n1 332\n1 333\n1 334\n1 335\n1 336\n1 337\n1 338\n1 339\n1 340\n1 341\n1 342\n1 343\n1 344\n1 345\n1 346\n1 347\n1 348\n1 349\n1 350\n1 351\n1 352\n1 353\n1 354\n1 355\n1 356\n1 357\n1 358\n1 359\n1 360\n1 361\n1 362\n1 363\n1 364\n1 365\n1 366\n1 367\n1 368\n1 369\n1 370\n1 371\n1 372\n1 373\n1 374\n1 375\n1 376\n1 377\n1 378\n1 379\n1 380\n1 381\n1 382\n1 383\n1 384\n1 385\n1 386\n1 387\n1 388\n1 389\n1 390\n1 391\n1 392\n1 393\n1 394\n1 395\n1 396\n1 397\n1 398\n1 399\n1 400\n1 401\n1 402\n1 403\n1 404\n1 405\n1 406\n1 407\n1 408\n1 409\n1 410\n1 411\n1 412\n1 413\n1 414\n1 415\n1 416\n1 417\n1 418\n1 419\n1 420\n1 421\n1 422\n1 423\n1 424\n1 425\n1 426\n1 427\n1 428\n1 429\n1 430\n1 431\n1 432\n1 433\n1 434\n1 435\n1 436\n1 4"
    },
    {
        "number": 3482,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n2 3 2\n1 2\n''') == '0'\nassert solution('''3\n3 2 1\n2 1\n3 2\n''') == '7'\nassert solution('''2\n20 15 10\n7 7\n30 0\n''') == '405'\nassert solution('''2\n4 2 1\n2 2\n4 1\n2 1\n''') == '8'\nassert solution('''3\n3 2 1\n2 1\n3 2\n''') == '15'\n"
    },
    {
        "number": 3482,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"7\\n1 2 3 4 5 6 7\\n2 0 3 1 4 5 6 7\\n7 1 2 3 4 5 6 7\\n2 1 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\") == '6573'\nassert solution(\"1\\n1\\n1\\n1\") == '0'\nassert solution(\"1\\n1\\n1\\n1\") == '0'\nassert solution(\"3\\n2 3 5\\n2 3 5\\n2 3 5\\n3 5\\n3 5\\n5 5\\n5 5\") == '1915'\nassert solution(\"3\\n2 3 5\\n2 3 5\\n2 3 5\\n3 5\\n3 5\\n5 5\\n5 5\") == '1915'\n"
    },
    {
        "number": 3483,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\n\nfrom math import sqrt"
    },
    {
        "number": 3483,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3483,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n1 2 4 7\n''') == '28 4 21 14.0'\n\nassert solution('''4\n1 2 3 4\n''') == '28 0 0 4.0'\n\nassert solution('''4\n-1 -2 -3 -4\n''') == '-1 -1 -1 4.0'\n\nassert solution('''4\n-1 -2 -3 -4\n''') == '-1 -1 -1 4.0'\n\nassert solution('''4\n1000000000 1000000000 1000000000 10000\n''') == '28 0 0 4.0'"
    },
    {
        "number": 3483,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 4 7') == '28 4 21 14.0'\nassert solution('1 2 3 4') == '28 3 15.0'\nassert solution('1 2 3 4 5') == '28 3 15.0'\nassert solution('1 2 3 4 5 6') == '28 3 15.0'\nassert solution('1 2 3 4 5 6 7') == '28 3 15.0'\n"
    },
    {
        "number": 3483,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2 4 7\") == \"28 4 21 14.0\"\n\"\"\"\n"
    },
    {
        "number": 3483,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n1 2 4 7''') == '28 4 21 14.0'\nassert solution('''2\n1 2\n3 4''') == '28 4 21 14.0'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '28 4 21 14.0'\nassert solution('''15\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15''') == '28 4 21 14.0'\nassert solution('''100\n988 57 32 37 64 19 14 29 62 26 20 15 37 11 43 2 4''') == '24 78 130 55 36 37 28 2 28 0 40 141 151 51 42 141 41 91 75 87 26 24'\n"
    },
    {
        "number": 3483,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    '1\\n'\n    '1 2 4 7'\n) == '28 4 21 14.0000'\n\nprint(solution(stdin))\n\"\"\""
    },
    {
        "number": 3483,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n1\n1 2 4 7\n''') == '28 4 21 14.0'\n\nassert solution('''\n2\n2 1 4 7\n''') == '28 4 21 14.0'\n\nassert solution('''\n3\n2 1 4 7\n''') == '28 4 21 14.0'\n\nassert solution('''\n5\n4 1 4 6 1\n''') == '28 4 21 14.0'\n\nassert solution('''\n6\n1 3 4 5 6 7\n''') == '28 4 21 14.0'"
    },
    {
        "number": 3483,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n1 2 4 7\n''') == '28 4 21 14.0'\nassert solution('''1\n1\n''') == '1 1 1 1'\nassert solution('''2\n1 2\n3 4\n5 6\n''') == '6 2 6 2'\n'''\n"
    },
    {
        "number": 3483,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 3484,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 2\") == \"yes\"\nassert solution(\"1 2 3 4\") == \"1 2 3 4\"\nassert solution(\"2 3 4 1\") == \"1 2 3 4\"\nassert solution(\"2 3 4 1 2 3 4\") == \"1 2 3 4\"\nassert solution(\"1 2 3 4\") == \"1 2 3 4\"\n"
    },
    {
        "number": 3484,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 2\\n1 2 3 4\\n2 3 4 1\\n') == 'yes\\n1 2 3 4\\n2 3 4 1\\n'\nassert solution('3 4\\n1 2 3\\n2 3 4\\n1 2 3\\n') == 'no\\n'\nassert solution('3 4\\n1 2 3\\n2 3 4\\n1 2 3\\n') == 'yes\\n1 2 3\\n2 3 4\\n1 2 3\\n'\nassert solution('3 4\\n1 2 3\\n2 3 4\\n1 2 3\\n') == 'no\\n'\nassert solution('3 4\\n1 2 3\\n2 3 4\\n1 2 3\\n') == 'yes\\n1 2 3\\n2 3 4\\n1 2 3\\n'\n"
    },
    {
        "number": 3484,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 2\n1 2 3 4\n2 3 4 1''') == 'yes'\nassert solution('''5 4\n2 4 1 3\n1 3 2 4\n2 3 4 1\n1 2 4 3''') == 'no'\nassert solution('''5 4\n2 4 1 3\n1 3 2 4\n2 3 4 1\n1 2 4 3''') == 'yes'\nassert solution('''3 1\n1 2 3\n2 3 4\n3 4 1''') == 'no'\nassert solution('''3 1\n1 2 3\n3 4 1\n2 3 4''') == 'yes'\n"
    },
    {
        "number": 3484,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 3484,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input_data) == output_data\n'''"
    },
    {
        "number": 3484,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('2 2') == 'no'\nassert solution('2 3') == 'no'\nassert solution('1 2') == 'no'\nassert solution('4 2') == 'yes'\n"
    },
    {
        "number": 3484,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2') == 'yes'\nassert solution('1 1') == 'no'\nassert solution('1 1 1') == 'no'\nassert solution('1 1 2') == 'no'\nassert solution('1 1 2 2') == 'no'\n"
    },
    {
        "number": 3484,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 3484,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 2\\n1 2 3 4\\n2 3 4 1\\n') == 'yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\\n'\nassert solution('4 2\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\\n') == 'no\\n'\nassert solution('4 2\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n1 1 2 3\\n4 1 2 3\\n') == 'no\\n'\nassert solution('2 3\\n1 2 3\\n2 3 1\\n') == 'yes\\n2 3 1\\n3 1 2\\n'\nassert solution('1 1\\n1 1\\n') == 'yes\\n1 1\\n'\n"
    },
    {
        "number": 3484,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 2') == 'yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3'\nassert solution('3 3') == 'yes\\n1 2 3\\n2 3 1\\n3 1 2'\nassert solution('5 2') == 'no'\nassert solution('2 2') == 'yes\\n1 2'\nassert solution('5 4') == 'yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3'\n"
    },
    {
        "number": 3485,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 10 -10 -4 10') == '10.000000000'\nassert solution('5') == '0.00000'\nassert solution
    },
    {
        "number": 3485,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '10.000000000'\nassert solution(\"\"\"\n2\n-10 -10\n\"\"\") == '10.000000000'\nassert solution(\"\"\"\n4\n-10 -10 -10 -10\n\"\"\") == '10.000000000'\nassert solution(\"\"\"\n4\n-10 -10 -10 -10\n10\n-10 -10 -10 -10\n\"\"\") == '10.000000000'\nassert solution(\"\"\"\n3\n-10 -10 -10\n\"\"\") == '0.000000000'\n"
    },
    {
        "number": 3485,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n5\n10 10 -10 -4 10\n''') == '10.000000000'\n\nassert solution('''\n5\n-10 -10 -10 -10 -10\n''') == '0.000000000'\n\nassert solution('''\n100\n
    },
    {
        "number": 3485,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2 3 4 5') == '3.333333333333334'\nassert solution('2\\n-3 -2') == '0.0'\nassert solution('3\\n-5 -4 -3') == '0.0'\nassert solution('4\\n-6 -5 -4 -3') == '0.0'\nassert solution('5\\n-7 -6 -5 -4 -3') == '0.0'\n"
    },
    {
        "number": 3485,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"5\n10 10 -10 -4 10\"\"\") == \"10.000000000\"\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 3485,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n10 10 -10 -4 10''') == '10.000000000'\nassert solution('''1\n-1''') == '0.000000000'\nassert solution('''0''') == '0.000000000'\nassert solution('''0 0''') == '0.000000000'\nassert solution('''3\n-2 1 -3''') == '-1.3333333333'\n"
    },
    {
        "number": 3485,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"4\\n-4 -4 -4 -4\"\n) == \"5.000000000\"\nassert solution(\n    \"4\\n-4 -4 -4 -4\"\n) == \"5.000000000\"\nassert solution(\n    \"4\\n-4 -4 -4 -4\"\n) == \"5.000000000\"\nassert solution(\n    \"4\\n-4 -4 -4 -4\"\n) == \"5.000000000\"\nassert solution(\n    \"5\\n-4 -4 -4 -4 -4\"\n) == \"5.000000000\"\n"
    },
    {
        "number": 3485,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n10 10 -10 -4 10') == '10.000000000'\nassert solution('5\\n10 10 -10 -4 10') == '10.000000000'\nassert solution('5\\n-10 -4 10 10') == '0.000000000'\nassert solution('5\\n-10 -4 10 10') == '0.000000000'\nassert solution('5\\n10 10 -10 -4 10') == '10.000000000'\n"
    },
    {
        "number": 3485,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5''') == '10.000000000'\nassert solution('''-10''') == '10.000000000'\nassert solution('''0''') == '0.000000000'\nassert solution('''-9''') == '1.000000000'\nassert solution('''-1''') == '0.000000000'\n"
    },
    {
        "number": 3485,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') is None\nassert solution('1') == '0'\nassert solution('-10') == '0'\nassert solution('10') == '0'\nassert solution('-10 -4 10') == '0'\n"
    },
    {
        "number": 3486,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n30\\n3\\n2\\n45') == '1'\nassert solution('4\\n30\\n3\\n2\\n45\\n30\\n45\\n3\\n3\\n45\\n45\\n45') == '1'\nassert solution('4\\n30\\n3\\n2\\n45\\n30\\n45\\n3\\n3\\n45\\n45\\n45') == '1'\nassert solution('3\\n3\\n3') == '1'\nassert solution('1\\n1\\n1') == '1'\n"
    },
    {
        "number": 3486,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 1\n\"\"\""
    },
    {
        "number": 3486,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\" \") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\n"
    },
    {
        "number": 3486,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n30\n3\n2\n45''') == '1'\nassert solution('''4\n30\n3\n2\n45\n30''') == '1'\nassert solution('''4\n30\n3\n2\n45\n60\n30''') == '1'\nassert solution('''4\n30\n3\n2\n45\n60\n70\n30''') == '1'\nassert solution('''4\n30\n3\n2\n45\n60\n70\n80\n30''') == '1'\n"
    },
    {
        "number": 3486,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4\") == \"1\"\nassert solution(\"1\\n2\\n3\\n4\") == \"1\"\nassert solution(\"4\\n30\\n3\\n2\\n45\") == \"1\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"2\"\n"
    },
    {
        "number": 3486,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n30\\n3\\n2\\n45') == '1'\nassert solution('4\\n30\\n3\\n2\\n45\\n1') == '1'\nassert solution('4\\n30\\n3\\n2\\n45\\n1\\n1') == '2'\nassert solution('4\\n30\\n3\\n2\\n45\\n1\\n1\\n1') == '3'\nassert solution('4\\n30\\n3\\n2\\n45\\n1\\n1\\n1\\n1') == '4'\n"
    },
    {
        "number": 3486,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n30\\n3\\n2\\n45') == '1'\nassert solution('5\\n60\\n30\\n20\\n110\\n15\\n35\\n20\\n12\\n6\\n45') == '6'\nassert solution('2\\n3\\n1') == '1'\nassert solution('3\\n3') == '2'\nassert solution('4\\n2') == '2'\n"
    },
    {
        "number": 3486,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10') == 1\nassert solution('20') == 2\nassert solution('100') == 2547\nassert solution('1000') == 182671639\nassert solution('10000') == 659993713\n"
    },
    {
        "number": 3486,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('a') == 'a'\nassert solution('aba') == 'aba'\nassert solution('abc') == 'abc'\nassert solution('abcd') == 'abcd'\nassert solution('abcde') == 'abcde'\n"
    },
    {
        "number": 3486,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n30\\n3\\n2\\n45') == '1'\nassert solution('4\\n30\\n3\\n2\\n45') == '1'\nassert solution('4\\n30\\n3\\n2\\n45') == '1'\nassert solution('4\\n30\\n3\\n2\\n45') == '1'\nassert solution('4\\n30\\n3\\n2\\n45') == '1'\n"
    },
    {
        "number": 3487,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3''') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\nassert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n2 3 8\n3 1 4\n4 2 4\n4 4 1\n4 4 4\n1 5 7\n3 5 3\n2 3 8\n3 1 4\n4 2 4\n4 4 1\n4 4 4\n1 5 7\n3 5 3\n2 3 8\n3 1 4\n4 2 4\n4 4 1\n4 4 4\n1 5 7\n3 5 3\n2 3 8\n3 1 4\n4 2 4\n4 4 1\n4 4 4\n1 5 7\n3 5 3\n2 3 8\n3 1 4\n4 2 4\n4 4 1\n4 4 4''') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\nassert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n2 3 8\n3 1 4\n4 2 4\n4 4 1\n4 4 4\n1 5 7\n3 5 3\n2 3 8\n3 1 4\n4 2 4\n4 4 1\n4 4 4\n1 5 7\n3 5 3\n2 3 8\n3 1 4\n4 2 4\n4 4 1\n4 4 4\n1 5 7\n3 5 3\n2 3 8\n3 1 4\n4 2 4\n4 4 1\n4 4 4''') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\nassert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n2 3 8\n3 1 4\n4 2 4\n4 4 1\n4 4 4\n1 5 7\n3 5 3\n2 3 8\n3 1 4\n4 2 4\n4 4 1\n4 4 4\n1 5 7\n3 5 3\n2 3 8\n3 1 4\n4 2 4\n4 4 1\n4 4 4\n1 5 7\n3 5 3\n2 3 8\n3 1 4\n4 2 4\n4 4 1\n4 4 4''') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000"
    },
    {
        "number": 3487,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3''') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\nassert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3''') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\nassert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3''') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\nassert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n3 5 3\n3 5 3\n3 5 3\n3 5 3''') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\nassert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n3 5 3\n3 5 3\n3 5 3\n3 5 3\n3 5 3''') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\n"
    },
    {
        "number": 3487,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3''') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\nprint(solution('''5 7 2\n4 6 1\n3 6 1\n3 5 5\n3 4 4\n3 3 3'''))\nassert solution('''10 10 0.03 0.97\n1 2 7\n3 4 8\n1 4 9\n2 5 10\n2 6 6\n3 7 5\n3 8 3\n4 7 2\n3 8 3''') == '0.380000000 0.000000000\\n0.000000000 1.0000000\\n0.000000000 -0.320000001\\n0.000000000 0.000000000\\n0.000000000 0.000000000\\n0.266600000 0.000000000\\n0.000000000 0.000000000\\n0.000000000 0.000000000'\nassert solution('''5 7 2\n4 6 1\n3 6 1\n3 5 5\n3 4 4\n3 3 3''') == '0.30000000 0.000000000\\n0.000000000 1.30000000\\n0.000000000 -0.30000000\\n0.000000000 0.000000000\\n0.000000000 0.000000000\\n0.000000000 0.000000000\\n0.000000000 0.000000000'\nassert solution('''4 2 2\n2 1 2\n2 2 2\n2 3 4\n1 3 1\n2 1 4\n3 1 2\n3 2 3\n2 3 1''') == '0.50000000 0.000000000\\n0.000000000 1.0000000\\n0.000000000 -0.50000000\\n0.000000000 0.000000000\\n0.000000000 0.000000000\\n0.000000000 0.000000000\\n0.000000000 0.000000000'\nassert solution('''5 7 2\n4 6 1\n3 6 1\n3 5 5\n3 4 4\n3 3 3''') == '0.000000000 1.30000000\\n0.000000000 1.0000000\\n0.000000000 -0.320000001\\n0.000000000 0.000000000\\n0.000000000 0.000000000\\n0.000000000 0.000000000\\n0.000000000 0.000000000'\n"
    },
    {
        "number": 3487,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\nassert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\nassert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\nassert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\nassert solution('''5 6 2.5 0.5\n3 4 1\n2 3 1\n1 4 4\n3 4 1\n2 3 1\n1 4 4\n''') == '0.50000000 0.087499998\\n0.50000000 0.006250000\\n0.50000000 0.049999998\\n0.50000000 0.006250000\\n0.250000000 0.034799998\\n0.250000000 0.006250000\\n0.250000000 0.001250000'\n"
    },
    {
        "number": 3487,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(open('test_files/03.test').read()) == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\n"
    },
    {
        "number": 3487,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3''') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\n\nassert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n7 1 4\n2 6 8\n4 5 1\n2 4 5\n3 5 1\n2 5 7\n3 1 2\n2 4 6\n4 1 2\n2 6 4\n3 5 4\n4 5 2\n2 5 4\n3 5 2\n4 5 1\n2 3 6\n4 5 1\n2 3 4\n4 1 2\n2 4 6\n3 1 2\n2 4 5\n3 1 5\n2 3 4\n3 1 5\n2 5 7\n3 1 2\n2 4 6\n4 1 2\n2 4 5\n3 1 5\n2 3 4\n3 1 5\n2 5 7\n3 1 2\n2 4 6\n4 1 2\n2 4 5\n3 1 5\n2 3 4\n3 1 5\n2 5 7\n3 1 2\n2 4 6\n4 1 2\n2 4 5\n3 1 5\n2 3 4\n3 1 5\n2 5 7\n3 1 2\n2 4 6\n4 1 2\n2 4 5\n3 1 5\n2 3 4\n3 1 5\n2 5 7\n3 1 2\n2 4 6\n4 1 2\n2 4 5\n3 1 5\n2 3 4\n3 1 5\n2 5 7\n3 1 2\n2 4 6\n4 1 2\n2 4 5\n3 1 5\n2 3 4\n3 1 5\n2 5 7\n3 1 2\n2 4 6\n4 1 2\n2 4 5\n3 1 5\n2 3 4\n3 1 5\n2 5 7\n3 1 2\n2 4 6\n4 1 2\n2 4 5\n3 1 5\n2 3 4\n3 1 5\n2 5 7\n3 1 2\n2 4 6\n4 1 2\n2 4 5\n3 1 5\n2 3 4\n3 1 5\n2 5 7\n3 1 2\n2 4 6\n4 1 2\n2 4 5\n3 1 5\n2 3 4\n3 1 5\n2 5 7\n3 1 2\n2 4 6\n4 1 2\n2 4 5\n3 1 5\n2 3 4\n3 1 5\n2 5 7\n3 1 2\n2 4 6\n4 1 2\n2 4 5\n3 1 5\n2 3 4\n3 1 5\n2 5 7\n3 1 2\n2 4 6\n4 1 2\n2 4 5\n3 1 5\n2 3 4\n3 1 5\n2 5 7\n3 1 2\n2 4 6\n4 1 2\n2 4 5\n3 1 5\n2 3 4\n3 1 5\n2 5 7\n3 1 2\n2 4 6\n4 1 2\n2 4 5\n3 1 5\n2 3 4\n3 1 5\n2 5 7\n3 1 2\n2 4 6\n4 1 2\n2 4 5\n3 1 5\n2 3 4\n3 1 5\n2 5 7\n3 1 2\n2 4 6\n4 1 2\n2"
    },
    {
        "number": 3487,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(open(r\"Data/test_03.txt\").read()) == open(r\"Out/test_03.txt\").read()\n\"\"\"\n"
    },
    {
        "number": 3487,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3''') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\nassert solution('''7 7 3.0 0.66\n6 7 8\n3 4 5\n1 4 6\n5 6 2\n1 5 7\n1 4 2\n7 4 3\n5 6 1''') == '0.087168388 -0.306601213\\n0.226939793 -0.122078493\\n0.064868557 -0.142400203\\n0.064868557 0.142400203\\n0.226939793 0.122078493\\n0.306601213 0.064868557\\n0.053489745 -0.004099095\\n-0.053489745 0.004099095\\n0.004099095 -0.004099095\\n0.004099095 0.004099095\\n0.142400203 -0.122078493\\n0.142400203 0.122078493'\nassert solution('''7 7 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3''') == '0.087168388 -0.306601213\\n0.226939793 -0.122078493\\n0.064868557 -0.142400203\\n0.064868557 0.142400203\\n0.226939793 0.122078493\\n0.306601213 0.064868557\\n0.053489745 -0.004099095\\n-0.053489745 0.004099095\\n0.004099095 -0.004099095\\n0.004099095 0.004099095\\n0.142400203 -0.122078493\\n0.142400203 0.122078493'\nassert solution('''8 8 3.0 0.66\n4 4 6\n2 2 3\n6 4 5\n4 4 2\n1 4 6\n5 4 7\n3 4 3\n2 4 1\n6 4 8\n5 4 4\n1 5 6\n1 4 2\n6 4 3\n5 4 4\n1 5 7\n1 4 2\n6 4 8\n5 4 4\n1 5 6\n1 4 2\n6 4 3\n5 4 4\n1 5 7\n1 4 2\n6 4 8\n5 4 4\n1 5 6\n1 4 2\n6 4 3\n5 4 4\n1 5 7\n1 4 2\n6 4 8\n5 4 4\n1 5 6\n1 4 2\n6 4 3\n5 4 4\n1 5 7\n1 4 2\n6 4 8\n5 4 4\n1 5 6\n1 4 2\n6 4 3\n5 4 4\n1 5 7\n1 4 2\n6 4 8\n5 4 4\n1 5"
    },
    {
        "number": 3487,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(dedent(r\"\"\"\n    6 6 3.0 0.66\n    2 4 8\n    4 6 1\n    3 6 1\n    4 5 5\n    1 5 7\n    3 5 3\n\"\"\")) == dedent(r\"\"\"\n    0.000000000 1.360000000\n    0.000000000 1.000000000\n    0.000000000 -1.000000000\n    0.000000000 0.360000000\n    0.880000000 0.000000000\n    -0.880000000 -0.360000000\n    1.02037965897\n\"\"\"))\n\nassert solution(dedent(r\"\"\"\n    5 10 1.0 0.5\n    1 2 3\n    2 3 4\n    3 4 5\n    4 5 6\n    5 6 7\n\"\"\")) == dedent(r\"\"\"\n    0.000000000 -1.000000000\n    0.000000000 0.000000000\n    0.000000000 0.000000000\n    0.000000000 0.000000000\n    0.000000000 0.000000000\n    0.000000000 0.000000000\n\"\"\"))\n\nassert solution(dedent(r\"\"\"\n    7 11 1.0 0.5\n    1 2 3\n    2 3 4\n    3 4 5\n    4 5 6\n    5 6 7\n    6 7 8\n    7 8 9\n    8 9 10\n    9 10 11\n\"\"\")) == dedent(r\"\"\"\n    0.000000000 -1.000000000\n    0.000000000 0.000000000\n    0.000000000 0.000000000\n    0.000000000 0.000000000\n    0.000000000 0.000000000\n    0.000000000 0.000000000\n    0.000000000 0.000000000\n    0.000000000 0.000000000\n    0.000000000 0.000000000\n    0.000000000 0.000000000\n\"\"\"))\n\nprint(solution(dedent(r\"\"\"\n    1 10 1.0 0.5\n    1 2 3\n    2 3 4\n    3 4 5\n    4 5 6\n    5 6 7\n    6 7 8\n    7 8 9\n    8 9 10\n    9 10 11\n\"\"\")))"
    },
    {
        "number": 3487,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3 1 0.66') == '0 0'\nassert solution('2 4 2 0.66') == '0 0'\nassert solution('2 4 8 1 0.66') == '0 0'\nassert solution('2 4 8 2 0.66') == '0 0'\nassert solution('2 4 8 3 0.66') == '0 0'\n"
    },
    {
        "number": 3488,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0\\n0\\n0\\n0') == 4\nassert solution('0\\n0\\n0\\n0\\n0\\n0') == 4\nassert solution('0\\n0\\n3\\n3\\n3\\n3') == 3\nassert solution('1\\n1\\n2\\n2\\n3') == 2\nassert solution('0\\n1\\n0\\n1\\n1\\n2') == 3\n"
    },
    {
        "number": 3488,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n0 0\n0 3\n3 3\n3 0\n2\n1 1\n2 2''') == '4'\nassert solution('''4\n0 0\n0 3\n3 3\n3 0\n2\n1 1\n2 2''') == '2'\nassert solution('''5\n0 0\n0 3\n3 3\n3 0\n2\n1 1\n2 2\n2 2\n1 2\n3 2\n2 3\n3 3\n0 0\n1 2\n3 1\n4\n2 2\n2 3\n1 3\n3 1\n1 1\n2 3\n1 2\n3 0\n0 0\n2\n1 2\n2 3''') == '3'\nassert solution('''6\n0 0\n0 3\n3 3\n3 0\n2\n1 1\n2 2\n2 2\n1 2\n3 2\n2 3\n3 3\n2 3\n0 0\n1 2\n3 1\n4\n2 2\n2 3\n1 3\n3 1\n1 1\n2 3\n1 2\n3 0\n0 0\n2\n1 2\n2 3''') == '4'\n'''\n"
    },
    {
        "number": 3488,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2') == '4'\nassert solution('5\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n1 2\\n0 3\\n0 0\\n3 0\\n2\\n2 2\\n2 1\\n1 1\\n1 2\\n0 3\\n0 0\\n3 0\\n2\\n2 2\\n2 1\\n1 1\\n1 2\\n0 3\\n0 0\\n3 0\\n2\\n2 2\\n2 1\\n1 1\\n1 2\\n0 3\\n0 0\\n3 0\\n2\\n2 2\\n2 1\\n1 1\\n1 2\\n0 3\\n0 0\\n3 0\\n2\\n2 2\\n2 1\\n1 1\\n1 2\\n0 3\\n0 0\\n3 0\\n2\\n2 2\\n2 1\\n1 1\\n1 2\\n0 3\\n0 0\\n3 0\\n2\\n2 2\\n2 1\\n1 1\\n1 2\\n0 3\\n0 0\\n3 0\\n2\\n2 2\\n2 1\\n1 1\\n1 2\\n0 3\\n0 0\\n3 0\\n2\\n2 2\\n2 1\\n1 1\\n1 2\\n0 3\\n0 0\\n3 0\\n2\\n2 2\\n2 1\\n1 1\\n1 2\\n0 3\\n0 0\\n3 0\\n2\\n2 2\\n2 1\\n1 1\\n1 2\\n0 3\\n0 0\\n3 0\\n2\\n2 2\\n2 1\\n1 1\\n1 2\\n0 3\\n0 0\\n3 0\\n2\\n2 2\\n2 1\\n1 1\\n1 2\\n0 3\\n0 0\\n3 0\\n2\\n2 2\\n2 1\\n1 1\\n1 2\\n0 3\\n0 0\\n3 0\\n2\\n2 2\\n2 1\\n1 1\\n1 2\\n0 3\\n0 0\\n3 0\\n2\\n2 2\\n2 1\\n1 1\\n1 2\\n0 3\\n0 0\\n3 0\\n2\\n2 2\\n2 1\\n1 1\\n1 2\\n0 3\\n0 0\\n3 0\\n2\\n2 2\\n2 1\\n1 1\\n1 2\\n0 3\\n0 0\\n3 0\\n2\\n2 2\\n2 1\\n1 1\\n1 2\\n0 3\\n0 0\\n3 0\\n2\\n2 2\\n2 1\\n1 1\\n1 2\\n0 3\\n0 0\\n3 0\\n2\\n2 2\\n2 1\\n1 1\\n1 2\\n0 3\\n0 0\\n3 0\\n2\\n2 2\\n2 1\\n1 1\\n1 2\\n0 3\\n0 0\\n3 0\\n2\\n2 2\\n2 1\\n1 1\\n1 2\\n0 3\\n0 0\\n3 0\\n2\\n2 2\\n2 1\\n1 1\\n1 2\\n0 3\\n0 0\\n3 0\\n2\\n2 2\\n2 1\\n1 1\\n1 2\\n0 3\\n0 0\\n3 0\\n2\\n2 2\\n2 1\\n1 1\\n1 2\\n0 3\\n0 0\\n3 0\\n2\\n2 2\\n2 1\\n1 1\\n1 2\\n0 3\\n0 0\\n3 0\\n2\\n2 2\\n2 1\\n1 1\\n1 2\\n0 3\\n0 0\\n3 0\\n2\\n2 2\\n2 1\\n1 1\\n1 2\\n0 3\\n0 0\\n3 0\\n2\\n2 2\\n2 1\\n1 1\\n1 2\\n0 3\\n0 0\\n3 0\\n2\\n2 2\\n2 1\\n1 1\\n1 2\\n0 3\\n0 0\\n3 0\\n2\\n2 2\\n2 1\\n1 1\\n1 2\\n0 3\\n0 0\\n3 0\\n2\\n2 2\\n2 1\\n1 1\\n1 2\\n0 3\\n0 0\\n3 0\\n2\\n2 2\\n2 1\\n1 1\\n1 2\\n0 3\\n0 0\\n3 0\\n2\\n2 2\\n2 1\\n1 1\\n1 2\\n0 3\\n0 0\\n3 0\\n2\\n2 2\\n2 1\\n1 1\\n1 2\\n0 3\\n0 0\\n3 0\\n2\\n2 2\\n2 1\\n1 1\\n1 2\\n0 3\\n0 0\\n3 0\\n2\\n2 2\\n2 1\\n1 1\\n1 2\\n0 3\\n0 0\\n3 0\\n2\\n2 2\\n2 1\\n1 1\\n1 2\\n0 3\\n0 0\\n3 0\\n2\\n2 2\\n2 1\\n1 1\\n1 2\\n0 3\\n0 0\\n3 0\\n2\\n2 2\\n2 1\\n1 1\\n1 2\\n0 3\\n0 0\\n3 0\\n2\\n2 2\\n2 1\\n1 1\\n1 2\\n0 3\\n0 0\\n3 0\\n2\\n2 2\\n"
    },
    {
        "number": 3488,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0 0\\n0 3\\n3 3\\n3 0\") == \"4\"\nassert solution(\"0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\") == \"4\"\nassert solution(\"2\\n1 1\\n1 1\") == \"4\"\nassert solution(\"2\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == \"4\"\n"
    },
    {
        "number": 3488,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\nprint(f\"YOUR SOLUTION'S ANSWER: {solution(stdin)}\")\n\"\"\"\n"
    },
    {
        "number": 3488,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(open(\"assets/shiny_gold.test\", \"r\").read()) == \"6\"\n\n-----My Submission-----\nhttps://leetcode.com/submissions/detail/470087283/\n\"\"\"\n"
    },
    {
        "number": 3488,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2') == '4'\nassert solution('5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 5\\n2 4\\n3 3') == '5'\nassert solution('5\\n5 5\\n5 5\\n5 5\\n5 5') == '10'\nassert solution('5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5') == '10'\nassert solution('5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5') == '10'\n"
    },
    {
        "number": 3488,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\") == \"4\"\nassert solution(\"0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\") == \"4\"\nassert solution(\"0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\") == \"4\"\nassert solution(\"1 1\\n1 1\\n1 1\") == \"1\"\nassert solution(\"1 1\\n1 1\\n1 1\") == \"1\"\n"
    },
    {
        "number": 3488,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '4'\n'''\n"
    },
    {
        "number": 3488,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '4'"
    },
    {
        "number": 3489,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 0\\n0 1\\n0 2\\n0 3\\n') == '2\\n3 2\\n3 1\\n'"
    },
    {
        "number": 3489,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\") == \"2\\n3 2\\n3 1\"\nassert solution(\"3 0\\n0 1\\n0 2\") == \"3\\n1 3\\n2 1\"\nassert solution(\"3 0\\n0 1\\n0 2\\n0 3\") == \"3\\n1 3\\n2 1\"\nassert solution(\"5 0\\n0 1\\n1 2\\n2 3\\n3 4\") == \"1\\n4 2\\n4 3\\n4 1\\n4 0\"\nassert solution(\"3 0\\n0 1\\n0 2\\n0 3\") == \"3\\n1 3\\n2 1\"\n"
    },
    {
        "number": 3489,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 0\n0 1\n0 2\n0 3\n''') == '2'\n\nassert solution('''2 0\n0 1\n1 2\n''') == '2'\n\nassert solution('''7 6\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n1 2\n2 3\n3 4\n4 5\n4 6\n''') == '1'\n\nassert solution('''9 9\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n0 8\n0 9\n1 2\n2 3\n3 4\n4 5\n4 6\n4 7\n4 8\n4 9\n5 6\n5 7\n5 8\n5 9\n6 7\n6 8\n6 9\n7 8\n7 9\n8 9\n''') == '0'\n\nassert solution('''1 1\n0 1\n''') == '1'"
    },
    {
        "number": 3489,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 0\n0 1\n0 2\n0 3\n''') == '2\\n3 2\\n3 1\\n'\nassert solution('''4 0\n0 1\n1 2\n0 2\n1 3\n2 3\n''') == '2\\n3 2\\n3 1\\n'\nassert solution('''5 0\n0 1\n0 2\n0 3\n0 4\n0 5\n''') == '1\\n0 2\\n0 3\\n0 4\\n0 5\\n'\nassert solution('''2 0\n0 1\n1 2\n2 0\n1 2\n''') == '2\\n1 2\\n'\nassert solution('''3 0\n0 1\n0 2\n0 3\n''') == '1\\n0 2\\n0 3\\n'\n"
    },
    {
        "number": 3489,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n4 0\n0 1\n0 2\n0 3\n''') == '2\\n3 2\\n3 1\\n'\nassert solution(\n'''\n6 4\n0 1\n0 2\n0 3\n0 4\n2 5\n2 6\n1 5\n4 5\n''') == '3\\n2 6\\n2 5\\n'\nassert solution(\n'''\n9 7\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n0 8\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n3 4\n3 5\n3 6\n3 7\n3 8\n4 5\n4 6\n4 7\n4 8\n5 6\n5 7\n5 8\n6 7\n6 8\n7 8\n''') == '2\\n1 6\\n1 5\\n1 7\\n1 8\\n2 8\\n2 7\\n2 6\\n2 5\\n2 4\\n2 3\\n2 2\\n2 1\\n'\nassert solution(\n'''\n9 7\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n0 8\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n3 4\n3 5\n3 6\n3 7\n3 8\n4 5\n4 6\n4 7\n4 8\n5 6\n5 7\n5 8\n6 7\n6 8\n7 8\n''') == '3\\n2 8\\n2 7\\n2 6\\n2 5\\n2 4\\n2 3\\n2 2\\n2 1\\n'\nassert solution(\n'''\n9 7\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n0 8\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n3 4\n3 5\n3 6\n3 7\n3 8\n4 5\n4 6\n4 7\n4 8\n5 6\n5 7\n5 8\n6 7\n6 8\n7 8\n''') == '1\\n'\n"
    },
    {
        "number": 3489,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''0 0\n1 2\n2 3''') == '2\\n3 2\\n3 1'\nassert solution('''0 0\n1 2\n2 3\n3 4\n4 0''') == '2\\n3 2\\n3 1'\nassert solution('''2 0\n0 1\n1 2\n2 0''') == '2\\n3 2\\n3 1'\nassert solution('''0 0\n1 2\n2 3\n3 4\n4 0\n0 1\n1 4\n1 3\n2 4\n2 3\n3 4''') == '4\\n3 2\\n3 1'\nassert solution('''0 0\n1 2\n1 3\n1 4\n2 3\n3 4\n4 0\n0 1\n1 4\n1 3\n2 4\n2 3\n3 4\n3 5\n4 0''') == '3\\n3 2\\n3 1'\n"
    },
    {
        "number": 3489,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0 0\\n0 1\\n0 2\\n0 3\") == \"2\\n3 2\\n3 1\"\nassert solution(\"2 2\\n0 1\\n0 2\\n0 3\\n1 2\\n1 3\") == \"0\\n3 2\\n3 1\"\nassert solution(\"5 3\\n0 1\\n0 2\\n0 3\\n0 4\\n1 2\\n2 3\\n3 4\\n4 5\") == \"0\\n1 1\\n1 0\\n2 1\\n2 0\"\nassert solution(\"1 1\\n0 1\\n0 2\\n0 3\\n1 2\\n1 3\\n2 3\") == \"0\\n1 1\\n1 0\\n2 1\\n2 0\"\nassert solution(\"5 3\\n0 1\\n0 2\\n0 3\\n0 4\\n1 2\\n2 3\\n3 4\\n4 5\") == \"0\\n1 1\\n1 0\\n2 1\\n2 0\"\n"
    },
    {
        "number": 3489,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3489,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 0\n0 1\n0 2\n0 3''') == '2\\n3 2\\n3 1'\n\nassert solution('''4 1\n0 1\n0 2\n0 3''') == '2\\n3 2\\n3 1'\n\nassert solution('''4 1\n0 1\n0 2\n1 3\n1 0''') == '2\\n3 2\\n3 1'\n\nassert solution('''4 0\n0 1\n0 2\n1 3\n1 0''') == '2\\n3 2\\n3 1'\n\nassert solution('''4 1\n0 1\n0 2\n0 3\n0 4\n0 1\n0 2\n0 3\n1 2\n1 3\n1 4\n2 4\n2 3\n2 1\n3 4\n3 2\n3 1\n3 0\n1 4\n1 3\n1 2\n1 1\n0 4\n0 3\n0 2\n0 1\n4 0\n0 1\n0 2\n0 3\n0 4\n1 2\n1 3\n1 4\n2 3\n2 1\n3 4\n3 2\n3 1\n3 0\n1 4\n1 3\n1 2\n1 1\n0 4\n0 3\n0 2\n0 1\n4 0\n0 1\n0 2\n0 3\n0 4\n1 2\n1 3\n1 4\n2 3\n2 1\n3 4\n3 2\n3 1\n3 0\n1 4\n1 3\n1 2\n1 1\n0 4\n0 3\n0 2\n0 1\n4 0\n0 1\n0 2\n0 3\n0 4\n1 2\n1 3\n1 4\n2 3\n2 1\n3 4\n3 2\n3 1\n3 0\n1 4\n1 3\n1 2\n1 1\n0 4\n0 3\n0 2\n0 1\n4 0\n0 1\n0 2\n0 3\n0 4\n1 2\n1 3\n1 4\n2 3\n2 1\n3 4\n3 2\n3 1\n3 0\n1 4\n1 3\n1 2\n1 1\n0 4\n0 3\n0 2\n0 1\n4 0\n0 1\n0 2\n0 3\n0 4\n1 2\n1 3\n1 4\n2 3\n2 1\n3 4\n3 2\n3 1\n3 0\n1 4\n1 3\n1 2\n1 1\n0 4\n0 3\n0 2\n0 1\n4 0\n0 1\n0 2\n0 3\n0 4\n1 2\n1 3\n1 4\n2 3\n2 1\n3 4\n3 2\n3 1\n3 0\n1 4\n1 3\n1 2\n1 1\n0 4\n0 3\n0 2\n0 1\n4 0\n0 1\n0 2\n0 3\n0 4\n1 2\n1 3\n1 4\n2 3\n2 1\n3 4\n3 2\n3 1\n3 0\n1 4\n1 3\n1 2\n1 1\n0 4\n0 3\n0 2\n0 1\n4 0\n0 1\n0 2\n0 3\n0 4\n1 2\n1 3\n1 4\n2 3\n2 1\n3 4\n3 2\n3 1\n3 0\n1 4\n1 3\n1 2\n1 1\n0 4\n0 3\n0 2\n0 1\n4 0\n0 1\n0 2\n0 3\n0 4\n1 2\n1 3\n1 4\n2 3\n2 1\n3 4\n3 2\n3 1\n3 0\n1 4\n1 3\n1 2\n1 1\n0 4\n0 3\n0 2\n0 1\n4 0\n0 1\n0 2\n0 3\n0 4\n1 2\n1 3\n1 4\n2 3\n2 1\n3 4\n3 2\n3 1\n3 0\n1 4\n1 3\n1 2\n1 1\n0 4\n0 3\n0 2\n0 1\n4 0\n0 1\n0 2\n0 3\n0 4\n1 2\n1 3\n1 4\n2 3\n2 1\n3 4\n3 2\n3 1\n3 0\n1 4\n1 3\n1 2\n1 1\n0 4\n0 3\n0 2\n0 1\n4 0\n0 1\n0 2\n0 3\n0 4\n1 2\n1 3\n1 4\n2 3\n2 1\n3 4\n3 2\n3 1\n3 0\n1 4\n1 3\n1 2\n1 1\n0 4\n0 3\n0 2\n0 1\n4 0\n0 1\n0 2\n0 3\n0 4\n1 2\n1 3\n1 4\n2 3\n2 1\n3 4\n3 2\n3 1\n3 0\n1 4\n1 3\n1 2\n1 1\n0 4\n0 3\n0 2\n0 1\n4 0\n0 1\n0 2\n0 3\n0 4\n1 2\n1 3\n1 4\n2 3\n2 1\n3 4\n3 2\n3 1\n3 0\n1 4\n1 3\n1 2\n1 1\n0 4\n0 3\n0 2\n0 1\n4 0\n0 1\n0 2\n0 3\n0 4\n1 2\n1 3\n1 4\n2 3\n2 1\n3 4\n3 2\n3 1\n3 0\n1 4\n1 3\n1 2\n1 1\n0 4\n0 3\n0 2\n0 1\n4 0\n0 1\n0 2\n0 3\n0 4\n1 2\n1 3\n1 4\n2 3\n2 1\n3 4\n3 2\n3 1\n3 0\n1 4\n1 3\n1 2\n1 1\n0 4\n0 3\n0 2\n0 1\n4 0\n0 1\n0 2\n0 3\n0 4\n1 2\n1 3\n1 4\n2 3\n2 1\n3 4\n3 2\n3 1\n3 0\n1 4\n1 3\n1 2\n1 1\n0 4\n0 3\n0 2\n0 1\n4 0\n0 1\n0 2\n0 3\n0 4\n1 2\n1 3\n1 4\n2 3\n2 1\n3 4\n3 2\n3"
    },
    {
        "number": 3489,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 0\n0 1\n0 2\n0 3\n0 3''') == '2'\nassert solution('''3 2\n0 1\n1 2\n0 2''') == '3 2'\nassert solution('''5 0\n0 1\n0 2\n0 3\n0 4\n0 4''') == '2'\nassert solution('''10 0\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n0 8\n0 9\n0 9''') == '4'\nassert solution('''10 10\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n0 8\n0 9\n0 9\n0 9\n0 9\n0 9''') == '1'\n"
    },
    {
        "number": 3490,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3490,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0 0 0\n0 1.5 0''') == 'ok'\nassert solution('''1 1\n1 2\n0 2''') == 'ok'\nassert solution('''0.5 0\n1 1.5 0\n2 2''') == 'ok'\nassert solution('''0.5 0\n1 1\n1 1.5 0\n2 2''') == 'crash'\nassert solution('''1 0\n0 1.5 0\n1 1\n1 1.5 0\n2 2''') == 'crash'\n"
    },
    {
        "number": 3490,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"0 0 0\n0 1.5 0\n\"\"\") == \"ok\"\nassert solution(\n\"\"\"4\n0 0 0\n1 1 0\n3.14159 0\n2.71828 0\n\"\"\") == \"ok\"\nassert solution(\n\"\"\"2\n0 0 0\n0 1 0\n\"\"\") == \"ok\"\nassert solution(\n\"\"\"1\n1 1 1\n\"\"\") == \"ok\"\nassert solution(\n\"\"\"2\n0 0 0\n1 1 0\n\"\"\") == \"crash\"\n"
    },
    {
        "number": 3490,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n"
    },
    {
        "number": 3490,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n2\n0 0 0\n0 1.5 0\n''') == 'ok'\nassert solution('''\n2\n0 0 0\n-0.5 0 0\n''') == 'ok'\nassert solution('''\n4\n0.0 0.0 0.0\n1.0 1.0 1.0\n0.0 0.0 1.0\n-1.0 -1.0 -1.0\n''') == 'ok'\nassert solution('''\n3\n0.0 0.0 0.0\n-1.0 1.0 0.0\n0.0 0.0 1.0\n''') == 'ok'\nassert solution('''\n4\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n''') == 'ok'\n"
    },
    {
        "number": 3490,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 0 0\\n0 1.5 0') == 'ok'\nassert solution('1 0 0\\n0 1.5 0') == 'ok'\nassert solution('0 0 1\\n0 1.5 0') == 'ok'\nassert solution('0 1 0\\n1 1.5 0') == 'ok'\nassert solution('0 0 -1\\n0 1.5 0') == 'ok'\n"
    },
    {
        "number": 3490,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0 0 0\") == \"ok\"\nassert solution(\"0 1.5 0\") == \"ok\"\nassert solution(\"0 -1.5 0\") == \"ok\"\nassert solution(\"0 1.0 0\") == \"crash\"\nassert solution(\"0 -1.0 0\") == \"crash\"\n"
    },
    {
        "number": 3490,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''0 0 0\n0 1.5 0\n''') == 'ok'\nassert solution('''0 0 0\n1 1 1\n''') == 'ok'\nassert solution('''2\n-1 1 2\n0 1 2\n1 2 0\n''') == 'ok'\nassert solution('''3\n0 1 2\n-1 1 2\n2 1 0\n''') == 'ok'\nassert solution('''4\n-1 1 2\n0 1 2\n1 2 0\n2 1 0\n''') == 'ok'\n"
    },
    {
        "number": 3490,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0 0 0\n0 1.5 0\n''') == 'ok'\nassert solution('''1 1 1\n0 1.5 0\n''') == 'ok'\nassert solution('''1 1 1\n0 1.5 0\n''') == 'ok'\nassert solution('''1 1 1\n0 1.5 0\n1 1 1\n0 1.5 0\n''') == 'crash'\nassert solution('''1 1 1\n0 1.5 0\n1 1 1\n0 1.5 0\n0 1.5 0\n1 1 1\n0 1.5 0\n''') == 'crash'\n"
    },
    {
        "number": 3490,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2\\n0 0 0\\n0 1.5 0\") == \"ok\"\nassert solution(\"2\\n0 0 0\\n0 0 0\") == \"ok\"\nassert solution(\"2\\n0 0 0\\n1.5 0 0\") == \"ok\"\nassert solution(\"2\\n0 0 0\\n1.5 0 0\") == \"crash\"\nassert solution(\"2\\n0 0 0\\n1.5 1.5\") == \"ok\"\n"
    },
    {
        "number": 3491,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    '''5 4\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4''') == '2'\n'''\n  0\n / \\\n1   3\n \\ /\n  2\n /\n'''\n\nassert solution(\n    '''3 4\n0 1\n0 2\n0 3\n1 2\n2 3''') == '0'\n'''\n  0\n / \\\n1   2\n \\ /\n  3\n /\n'''\n"
    },
    {
        "number": 3491,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"R 0\\ng2\"\nassert solution(\"6 3\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"R 0\\ng2\\ng2\"\n\"\"\"\n"
    },
    {
        "number": 3491,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 4\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4''') == '''2\nR 0\nG 2'''\n"
    },
    {
        "number": 3491,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == output\n\"\"\"\n"
    },
    {
        "number": 3491,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 4') == '2'\nassert solution('10 10') == '0'\nassert solution('1 2 3 4') == '2'\nassert solution('1 1') == 'R 2'\nassert solution('1 2') == 'R 1'\n"
    },
    {
        "number": 3491,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5 4\") == \"\"\nassert solution(\"4 5\") == \"2\\nR 0\\nG 2\"\nassert solution(\"5 5\") == \"\"\nassert solution(\"5 5\\n5 5\") == \"\"\nassert solution(\"5 4\\n0 3\") == \"\"\n"
    },
    {
        "number": 3491,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 1') == 'R 0'\nassert solution('0 3') == 'G 2'\nassert solution('1 2') == 'R 1'\nassert solution('2 4') == 'G 3'\nassert solution('0 2') == 'R 0'\n"
    },
    {
        "number": 3491,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3491,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''5 4\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n''') == '''2\nR 0\nG 2\n'''\n\nprint(solution(\n'''3 4\n0 2\n0 4\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n0 4\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n1 4\n2 4\n'''))\n\nprint(solution(\n'''10 10\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n0 8\n0 9\n0 10\n1 3\n1 4\n1 5\n2 7\n2 8\n2 9\n2 10\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n'''))\n\nprint(solution(\n'''3 3\n0 2\n1 4\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n0 4\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n2 4\n'''))\n\nprint(solution(\n'''3 3\n1 2\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n0 4\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n1 4\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n1 4\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n1 4\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n1 4\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0 2\n2 4\n'''))\n\nprint(solution(\n'''3 3\n0"
    },
    {
        "number": 3491,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 4\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4''') == 'R 0\\ng 2'\n'''\n"
    },
    {
        "number": 3492,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3492,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\nassert solution('''5 3 4 2\nA B C D E\n1 A B C D\n2 A B C\n3 B D\n4 A D\n''') == '2'\nassert solution('''7 2 3 3\nA B C\n3 A B\n3 A C\n3 B D\n3 C E\n3 D F\n''') == '4'\nassert solution('''7 2 3 3\nA B C D E F G\n1 A B C D E\n2 A B C\n3 B C D\n3 C D E\n3 D F G\n4 A B\n4 A C\n4 B C\n4 C D\n4 D E\n4 E F\n4 F G\n''') == '6'\nassert solution('''6 4 4 2\nA B C D E F\n1 A B C D\n2 A B C\n3 B C D\n3 C D E\n3 D F\n4 A B\n4 A C\n4 B C\n4 C D\n4 D E\n4 E F\n''') == '6'\n"
    },
    {
        "number": 3492,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n') == '2'\nassert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n') == '2'\nassert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n') == '2'\nassert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n') == '2'\nassert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n') == '2'\n"
    },
    {
        "number": 3492,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\n\nassert solution('''7 7 7 7\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '0'\n\nassert solution('''6 4 2\nA B\nC D\n4 E\n4 F\n2 G\n''') == '2'\n\nassert solution('''7 5 3\nA B C D\nE F G\n4 A E\n4 B D\n4 C E\n4 D F\n2 G\n''') == '3'\n\nassert solution('''7 4 2\nA B\nC D\n4 E\n4 F\n2 G\n''') == '2'"
    },
    {
        "number": 3492,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n3''') == '2'\n'''\n"
    },
    {
        "number": 3492,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n') == '2'\nassert solution('7 3 3 3\\nD C C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n') == '2'\nassert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n') == '2'\nassert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n') == '2'\nassert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n') == '2'\n"
    },
    {
        "number": 3492,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3492,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3492,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n') == '2'\nassert solution('4 1 3\\nA\\nB\\nC\\nD\\n4 E F\\n5 G H\\n5 I J\\n5 K L\\n5 M N\\n5 O P\\n5 Q R\\n5 S T\\n5 U V\\n5 W X\\n5 Y Z\\n5 Q R\\n3 M N\\n2 O P\\n1 Q\\n') == '4'\nassert solution('4 1 3\\nA\\nB\\nC\\nD\\n4 E F\\n5 G H\\n5 I J\\n5 K L\\n5 M N\\n5 O P\\n5 Q R\\n5 S T\\n5 U V\\n5 W X\\n5 Y Z\\n5 Q R\\n3 M N\\n2 O P\\n1 Q\\n') == '5'\nassert solution('4 1 3\\nA\\nB\\nC\\nD\\n4 E F\\n5 G H\\n5 I J\\n5 K L\\n5 M N\\n5 O P\\n5 Q R\\n5 S T\\n5 U V\\n5 W X\\n5 Y Z\\n5 Q R\\n3 M N\\n2 O P\\n1 Q\\n') == '5'\nassert solution('4 1 3\\nA\\nB\\nC\\nD\\n4 E F\\n5 G H\\n5 I J\\n5 K L\\n5 M N\\n5 O P\\n5 Q R\\n5 S T\\n5 U V\\n5 W X\\n5 Y Z\\n5 Q R\\n3 M N\\n2 O P\\n1 Q\\n') == '5'\n"
    },
    {
        "number": 3492,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(open(\"test1.txt\").read()) == \"3\"\nassert solution(open(\"test2.txt\").read()) == \"2\"\nassert solution(open(\"test3.txt\").read()) == \"3\"\nassert solution(open(\"test4.txt\").read()) == \"3\"\nassert solution(open(\"test5.txt\").read()) == \"2\"\n"
    },
    {
        "number": 3493,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n3\nYYY\nNYY\nYNY\n''') == '2\\n1 2 3\\n3 1 2'\n\nassert solution(\n'''\n4\nYYY\nNYY\nYNY\nYNY\n''') == '0'\n\nassert solution(\n'''\n1\nY\nY\nY\n''') == '1'\n\nassert solution(\n'''\n1\nY\nY\nY\nY\n''') == '0'\n\nassert solution(\n'''\n1\nY\nY\nY\n''') == '1'"
    },
    {
        "number": 3493,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n3\nYYY\nNYY\nYNY\n''') == '2'\nassert solution('''\n3\nYYY\nYNY\nYNY\n''') == '3'\nassert solution('''\n4\nNNN\nNNN\nNNN\nNNN\n''') == '2'\nassert solution('''\n3\nNNN\nNNN\nNNN\n''') == '3'\nassert solution('''\n6\nNNNNNNNN\nNNNNNNNN\nNNNNNNNN\nNNNNNNNN\nNNNNNNNN\nNNNNNNNN\n''') == '3'\n"
    },
    {
        "number": 3493,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''3\nYYY\nNYY\nYNY''') == '2\\n1 2 3'\nassert solution(\n'''3\nYNY\nYNY\nYNY''') == '2\\n1 2 3'\nassert solution(\n'''3\nNNN\nNNN\nNNN''') == '0\\n0 0 0'\nassert solution(\n'''5\nNNN\nNNN\nNNN\nNNN\nNNN''') == '0\\n0 0 0 0'\nassert solution(\n'''6\nYYY\nYYY\nNNN\nNNN\nYNY\nYYY''') == '2\\n1 1 2 3 4'\n"
    },
    {
        "number": 3493,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\nYYY\nNYY\nYNY''') == '2\\n1 2 3'\nassert solution('''5\nYNY\nYYY\nYNY\nYNY\nYYY''') == '2\\n3 1 2'\nassert solution('''5\nYYY\nYYY\nYYY\nYYY\nYYY''') == '0\\n'\nassert solution('''8\nYNY\nYYY\nYNY\nYYY\nYYY\nYNY\nYNY\nYNY\nYNY''') == '0\\n'\n'''\n'''\n"
    },
    {
        "number": 3493,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n3\nYYY\nNYY\nYNY\n''') == '2\\n1 2 3\\n3 1 2'\nassert solution('''\n7\nYNY\nYYY\nYNY\nNYY\nYNY\nYYY\n''') == '0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\n''') == '1\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0"
    },
    {
        "number": 3493,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution(' ') == ''\nassert solution('YYY') == '1'\nassert solution('YYYNYY') == '2'\nassert solution('YYYNYYNYY') == '1'\n"
    },
    {
        "number": 3493,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('YNYY') == '2\\n1 2 3'\nassert solution('YYNY') == '2\\n3 1 2'\nassert solution('NNN') == '0\\n'\nassert solution('YNNY') == '0\\n'\nassert solution('YNYN') == '0\\n'\n"
    },
    {
        "number": 3493,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n3\nYYY\nNYY\nYNY\n''') == '2'\nassert solution('''\n4\nYYY\nNYY\nYNY\nNNY\n''') == '0'\nassert solution('''\n3\nN\nN\nY\n''') == '2'\nassert solution('''\n3\nN\nN\nY\n''') == '2'\nassert solution('''\n3\nY\nY\nY\n''') == '3'\n"
    },
    {
        "number": 3493,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('X') == 0\nassert solution('YYYY') == 2\nassert solution('YYYNYNYNYNYYNYNYNYNYY') == 4\nassert solution('NYYYNYYYYYYYYYYYYYYYYY') == 1\nassert solution('YYYYYYYYYYYYYYYYYYYYYYYYYYYY') == 0\n"
    },
    {
        "number": 3493,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n3\nYYY\nNYY\nYNY\n\"\"\") == \"2 3 1 2\"\nassert solution(\n\"\"\"\n3\nYNY\nYYY\nYNY\n\"\"\") == \"3 2 1 2\"\nassert solution(\n\"\"\"\n3\nNNN\nNNN\nNNN\n\"\"\") == \"3 1 2\"\nassert solution(\n\"\"\"\n7\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\n\"\"\") == \"1 2 3 4 5 6 7\"\nassert solution(\n\"\"\"\n100\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNN"
    },
    {
        "number": 3494,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == '4'\nassert solution('1 1') == '0'\nassert solution('1 2') == '4'\nassert solution('3 3') == '2'\nassert solution('1 3') == '2'\n"
    },
    {
        "number": 3494,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 3\nx..\n...\n...\n3\n1 3\n1 1\n3 2''') == '''4\n0\n5'''\n"
    },
    {
        "number": 3494,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\\n') == '0\\n5\\n'\nassert solution('3 3\\nx..\\n...\\n...\\n3\\n2 2\\n1 2\\n3 2\\n') == '0\\n4\\n'\nassert solution('3 3\\nx..\\n...\\n...\\n3\\n2 2\\n1 1\\n3 2\\n') == '0\\n1\\n4\\n'\nassert solution('3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\\n') == '0\\n0\\n4\\n'\nassert solution('3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\\n') == '0\\n0\\n0\\n'\n"
    },
    {
        "number": 3494,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\n"
    },
    {
        "number": 3494,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n3 3\n..\n...\n...\n3\n1 3\n1 1\n3 2\n''') == '''\n4\n0\n5\n'''\nassert solution(\n'''\n2 2\nx.\n.\nx\n2 2\n1 1\n1 2\n''') == '''\n0\n1\n'''\nassert solution(\n'''\n3 3\n..\n.x\nx.\n3\n1 3\n1 1\n3 2\n''') == '''\n1\n0\n4\n'''\nassert solution(\n'''\n3 3\n.x.\nx..\n.x\n3\n1 3\n1 1\n3 2\n''') == '''\n0\n1\n4\n'''\n"
    },
    {
        "number": 3494,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 3') == '0'\nassert solution('2 2') == '0'\nassert solution('1 1') == '0'\nassert solution('1 2') == '1'\nassert solution('2 1') == '1'\n"
    },
    {
        "number": 3494,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\\\n3 3\nx..\n...\n...\n3\n1 3\n1 1\n3 2\n''') == '4\\n0\\n5'\nassert solution('''\\\n3 3\n..\n...\n...\n3\n1 3\n1 1\n3 2\n''') == '0\\n5\\n'\nassert solution('''\\\n2 2\nx.\n.x\n''') == '0'\nassert solution('''\\\n4 4\nx...\n...x\n.x.\nx...\n''') == '0'\nassert solution('''\\\n4 4\nx...\n...x\n.x.\nx...\n''') == '0'\n"
    },
    {
        "number": 3494,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 3\nx..\n...\n...\n3\n1 3\n1 1\n3 2''') == '4\\n0\\n5'\nassert solution('''4 4\nx..x\nx.x\n.x.\n..x\n3 4\n1 1\n1 1\n1 1\n3 2''') == '0\\n5\\n4'\nassert solution('''3 4\nx..x\nx.x\n.x.\n..x\n3 2\n1 1\n1 1\n1 1''') == '0\\n5\\n4'\nassert solution('''1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '0\\n0\\n0'\nassert solution('''2 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '0\\n0\\n0'\n"
    },
    {
        "number": 3494,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 3') == '4\\n0\\n5'\nassert solution('3 3\\nx.\\nx..\\n...') == '4\\n0\\n5'\nassert solution('3 3\\nx.\\nx..\\n...\\n3\\n1 3\\n1 1') == '4\\n0\\n5'\nassert solution('3 3\\nx.\\nx..\\n...\\n3\\n1 3\\n1 1\\n3 2') == '4\\n0\\n5'\nassert solution('3 3\\nx.\\nx..\\n...\\n3\\n1 3\\n1 1\\n3 2\\n3 1') == '4\\n0\\n5\\n8'\n"
    },
    {
        "number": 3494,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\") == \"4\\n0\\n5\"\nassert solution(\"2 2\\nx.\\nx.\\n3\\n2 2\") == \"0\\n0\"\nassert solution(\"3 3\\n.\\n.\\n.\\n3\\n1 3\\n1 1\\n3 2\") == \"4\\n0\\n5\"\nassert solution(\"2 2\\nx.\\nx.\\n3\\n2 2\") == \"0\\n0\"\nassert solution(\"3 3\\n..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\") == \"4\\n0\\n5\"\n"
    },
    {
        "number": 3495,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\"
    },
    {
        "number": 3495,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n5\n3\n4\n5 3\n\"\"\") == \"\"\"\n3.923 3.100\n1.118 2.037\n5.000 3.000\n\"\"\"\n\nassert solution(\"\"\"\n3\n3\n3\n3\n3\n\"\"\") == \"\"\"\n-1.000 -1.000\n-1.000 -1.000\n-1.000 -1.000\n\"\"\"\n\nassert solution(\"\"\"\n3\n3\n3\n3\n3\n\"\"\") == \"\"\"\n-2.000 -0.000\n-2.000 -1.000\n-2.000 -1.000\n\"\"\"\n\nassert solution(\"\"\"\n3\n3\n3\n3\n3\n\"\"\") == \"\"\"\n-1.000 -1.000\n-1.000 -1.000\n-1.000 -1.000\n\"\"\"\n\nassert solution(\"\"\"\n3\n3\n3\n3\n3\n\"\"\") == \"\"\"\n-1.000 -1.000\n-1.000 -1.000\n-1.000 -1.000\n\"\"\""
    },
    {
        "number": 3495,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"3\n5\n3\n4\n5 3\n\"\"\") == \"\"\"\n3.923\n3.100\n5.000\n\"\"\"\nassert solution(\n\"\"\"3\n5\n3\n4\n5 3\n\"\"\") == \"\"\"\n4.114\n-2.842\n5.000\n\"\"\"\nassert solution(\n\"\"\"3\n5\n3\n4\n5 3\n\"\"\") == \"\"\"\n4.114\n-2.842\n5.000\n\"\"\"\nassert solution(\n\"\"\"3\n5\n3\n4\n5 3\n\"\"\") == \"\"\"\n3.923\n3.100\n5.000\n\"\"\"\nassert solution(\n\"\"\"3\n5\n3\n4\n5 3\n\"\"\") == \"\"\"\n4.114\n-2.842\n5.000\n\"\"\"\n"
    },
    {
        "number": 3495,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"3\\n5\\n3\\n4\\n5 3\\n\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n\"\n\nassert solution(\"\") == \"\"\nassert solution(\"2\\n5\\n1\\n2\\n3\") == \"1.11 -1.11\\n2.01 -1.01\\n3.00 1.00\\n\"\nassert solution(\"2\\n5\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\") == \"1.11 -1.11\\n2.01 -1.01\\n3.00 1.00\\n4.11 -1.11\\n5.01 -0.99\\n6.00 1.00\\n7.00 1.00\\n8.00 1.00\\n9.00 1.00\\n\"\nassert solution(\"3\\n5\\n3\\n4\\n5 3\\n\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n\"\n"
    },
    {
        "number": 3495,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n5\n3\n4\n5 3''') == '-1.119 -2.042\\n5.000 3.000'\nassert solution('''3\n5\n2\n4\n5 2\n1 2\n3 4\n5 5''') == '-0.912 -0.918\\n4.000 3.000\\n5.000 2.000'\nassert solution('''2\n5\n2\n4\n5 2\n1 2\n3 4\n5 5''') == '-0.912 -0.918\\n4.000 3.000\\n5.000 2.000'\nassert solution('''5\n5\n3\n4\n5 3\n1 2\n3 4\n5 5''') == '0.875 0.878\\n3.000 2.000\\n4.000 1.000'\nassert solution('''5\n5\n2\n4\n5 2\n1 2\n3 4\n5 5''') == '0.875 0.878\\n3.000 2.000\\n4.000 1.000'\n"
    },
    {
        "number": 3495,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n5\n3\n4\n5 3''') == '4.114 -2.842\\n6.297 -0.784\\n5.000 3.000'\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1''') == '1.000 0.000'\nassert solution('''2\n2\n2\n2\n2\n2\n2\n2''') == '0.000 -1.000\\n1.000 0.000'\nassert solution('''3\n3\n3\n3\n3\n3\n3\n3''') == '1.000 -1.000\\n3.000 0.000'\nassert solution('''4\n4\n4\n4\n4\n4\n4\n4''') == '0.000 -1.000\\n1.000 -2.000\\n2.000 0.000'\n"
    },
    {
        "number": 3495,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n5\n3\n4\n5 3''') == '4.114 -2.842\\n6.297 -0.784\\n5.000 3.000'\nassert solution('''3\n4\n3\n4\n5 3''') == '1.118 2.037\\n5.000 3.000'\nassert solution('''5\n5\n5\n5\n5 5\n5 5\n5''') == '1.000 1.000\\n5.000 5.000\\n5.000 5.000\\n5.000 5.000\\n5.000 5.000\\n5.000 5.000'\nassert solution('''1\n5\n1\n5\n5\n5 5\n5 5\n5''') == '-1.000 -1.000\\n1.000 1.000\\n5.000 5.000\\n5.000 5.000\\n5.000 5.000\\n5.000 5.000'\nassert solution('''3\n5\n1\n5\n5\n5 5\n5 5\n5''') == '-1.000 -1.000\\n1.000 1.000\\n5.000 5.000\\n5.000 5.000\\n5.000 5.000\\n5.000 5.000'\n"
    },
    {
        "number": 3495,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(sample0) == expected0\nassert solution(sample1) == expected1\nassert solution(sample2) == expected2\nprint(solution(input()))\n\n\"\"\"\n\n\"\"\"\nRef: https://www.hackerrank.com/challenges/solve-a-point-on-a-2d-line/forum/10605959\n\nSince the ratio of the line's length is constant, we can solve the equation using the inverse of the quotient rule.\n\nThe equation is:\n\nL = c / (a - b)\n\nNow, we know that the line is not vertical, so we can just use the quotient rule to solve the above equation.\n\nx = (b x + c) / (a - b)\n\ny = (a y + c) / (a - b)\n\nThe equation is:\n\nx = b x + c / (a - b)\n\ny = a y + c / (a - b)\n\nAnd, since the lines are not vertical,\n\nx - b = c / (a - b)\n\nthe equation becomes:\n\ny - a = c / (a - b)\n\nSolving for y, we get:\n\ny = a - c / (a - b)\n\nSince $a-b=c$, we know that the line is horizontal and can be drawn as a line $L$ with a constant length,\n\nL = $a-b$,\n\nso we can draw the line using the following coordinates:\n\nx = (a - b) / 2,\n\ny = (a + b) / 2.\n\nHence,\n\nx = $c / (a - b)$,\n\ny = ($a + b) / 2.\n\nIn other words,\n\nx = c / (a - b)\n\ny = (a + b) / 2.\n\nSince the lines are not vertical,\n\nx - b = c / (a - b)\n\nthe equation becomes:\n\ny - a = c / (a - b)\n\nSolving for y, we get:\n\ny = a - c / (a - b)\n\nSince $a-b=c$, we know that the line is vertical and can be drawn as a line $L$ with a constant length,\n\nL = $a-b$,\n\nso we can draw the line using the following coordinates:\n\nx = (a - b) / 2,\n\ny = (a - b) / 2.\n\nHence,\n\nx = $c / (a - b)$,\n\ny = ($a - b) / 2.\n\nIn other words,\n\nx = c / (a - b)\n\ny = (a - b) / 2.\n\nYou know, it is a vertical line, but we can now use the quotient rule to solve the equation:\n\ny = (a - b) / 2\n\nSince $a-b=c$, we know that the line is vertical and can be drawn as a line $L$ with a constant length,\n\nL = $a-b$,\n\nso we can draw the line using the following coordinates:\n\nx = (a - b) / 2,\n\ny = (a - b) / 2.\n\nIn other words,\n\nx = $c / (a - b)$,\n\ny = ($a - b) / 2.\n\nHence,\n\nx = c / (a - b)\n\ny = ($a - b) / 2.\n\nThis is a valid solution!\n\"\"\"\n\n\"\"\"\nRef: https://www.hackerrank.com/challenges/solve-a-point-on-a-2d-line/forum/10605959\n\nSince the ratio of the line's length is constant, we can solve the equation using the inverse of the quotient rule.\n\nThe equation is:\n\nL = c / (a - b)\n\nNow, we know that the line is not vertical, so we can just use the quotient rule to solve the above equation.\n\nx = (b x + c) / (a - b)\n\ny = (a y + c) / (a - b)\n\nThe equation is:\n\nx = b x + c / (a - b)\n\ny = a y + c / (a - b)\n\nAnd, since the lines are not vertical,\n\nx - b = c / (a - b)\n\nthe equation becomes:\n\ny - a = c / (a - b)\n\nSolving for y, we get:\n\ny = a - c / (a - b)\n\nSince the lines are not vertical,\n\nx - b = c / (a - b)\n\nthe equation becomes:\n\ny - a = c / (a - b)\n\nSolving for y, we get:\n\ny = a - c / (a - b)\n\nSince the lines are not vertical,\n\nx - b = c / (a - b)\n\nthe equation becomes:\n\ny - a = c / (a - b)\n\nSolving for y, we get:\n\ny = a - c / (a - b)\n\nSince the lines are not vertical,\n\nx - b = c / (a - b)\n\nthe equation becomes:\n\ny - a = c / (a - b)\n\nSolving for y, we get:\n\ny = a - c / (a - b)\n\nSince the lines are not vertical,\n\nx - b = c / (a - b)\n\nthe equation becomes:\n\ny - a = c / (a - b)\n\nSolving for y, we get:\n\ny = a - c / (a - b)\n\nIn other words,\n\nx = c / (a - b)\n\ny = (a - b) / 2.\n\nHence,\n\nx = c / (a - b)\n\ny = (a - b) / 2.\n\nIn other words,\n\nx = c / (a"
    },
    {
        "number": 3495,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"0.000 0.000\"\nassert solution(\"3\") == \"2.000 -2.000\"\nassert solution(\"5\") == \"3.000 -3.000\"\nassert solution(\"3 3\") == \"2.000 -2.000\"\n"
    },
    {
        "number": 3495,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    stdin='3\\n5\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\n5 3\\n3\\n4\\"
    },
    {
        "number": 3496,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n4 5\n2 3 5 7\n2\n3\n5\n6\n8\n''') == '''3\n5\n8\n10\n13\n'''\n"
    },
    {
        "number": 3496,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8') == '3\\n5\\n8\\n10\\n13'\nassert solution('2 2\\n5\\n7') == '6'\nassert solution('4 4\\n7 9 11 2\\n2') == '7'\nassert solution('10 10\\n1 2 3 4 5 6 7 8 9 10\\n1') == '10'\nassert solution('5 5\\n1 2 3 4 5\\n1') == '5'\n"
    },
    {
        "number": 3496,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 5\n2 3 5 7\n2\n3\n5\n6\n8''') == '3\\n5\\n8\\n10\\n13'\n\nassert solution('''4 5\n2 3 5 7\n2\n3\n5\n6\n8\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1"
    },
    {
        "number": 3496,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3 5 7\\\\n2\\\\n3\\\\n5\\\\n6\\\\n8') == '3\\\\n5\\\\n8\\\\n10\\\\n13'\n\"\"\"\n"
    },
    {
        "number": 3496,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"4 5\n2 3 5 7\n2\n3\n5\n6\n8\n\"\"\") == \"\"\"3\n5\n8\n10\n13\n\"\"\"\n\nprint(solution(\n\"\"\"4 5\n2 3 5 7\n2\n3\n5\n6\n8\n\"\"\"), file=sys.stderr)\n"
    },
    {
        "number": 3496,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 5\n2 3 5 7\n2\n3\n5\n6\n8''') == '3\\n5\\n8\\n10\\n13'\nassert solution('''4 5\n2 3 5 7\n2\n3\n5\n6\n8\n''') == '3\\n5\\n8\\n10\\n13'\nassert solution('''4 5\n1 2 3 4\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 3496,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 4\\n1 2 3 4 5') == '3\\n5\\n8\\n10\\n13\\n'\nassert solution('2 3\\n1 2 3\\n2') == '3\\n5\\n8\\n10\\n13\\n'\nassert solution('3 4\\n1 2 3\\n2\\n3') == '3\\n5\\n8\\n10\\n13\\n'\nassert solution('4 4\\n1 2 3 4\\n2\\n3\\n4') == '3\\n5\\n8\\n10\\n13\\n'\nassert solution('5 3\\n1 2 3 4 5\\n2\\n3') == '3\\n5\\n8\\n10\\n13\\n'\n"
    },
    {
        "number": 3496,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\"\nassert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n9\") == \"3\\n5\\n8\\n10\\n13\\n15\"\nassert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n9\\n10\\n15\") == \"3\\n5\\n8\\n10\\n13\\n15\\n18\"\nassert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n9\\n10\\n13\\n15\\n18\\n20\") == \"3\\n5\\n8\\n10\\n13\\n15\\n18\\n20\\n23\"\nassert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n9\\n10\\n13\\n15\\n18\\n20\\n23\") == \"3\\n5\\n8\\n10\\n13\\n15\\n18\\n20\\n23\\n26\"\n"
    },
    {
        "number": 3496,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 5\n2 3 5 7\n2\n3\n5\n6\n8''') == '''3\n5\n8\n10\n13'''\n"
    },
    {
        "number": 3496,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n4 5\n2 3 5 7\n2\n3\n5\n6\n8\n''') == '3\\n5\\n8\\n10\\n13'\n\nassert solution(\n'''\n6 7\n1 2 3 4 5 6\n1\n4\n5\n6\n7\n8\n''') == '3\\n2\\n3\\n4\\n5\\n6'\n\nassert solution(\n'''\n10 9\n5 3 1 7 2 4 8 6 9\n6\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n''') == '2\\n4\\n6\\n8\\n10\\n12\\n14'\n\nassert solution(\n'''\n5 7\n1 2 3 4 5 6\n6\n9\n10\n11\n12\n13\n14\n15\n16\n17\n''') == '2\\n4\\n6\\n8\\n10\\n12\\n14'\n"
    },
    {
        "number": 3497,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5') == '0'\nassert solution('0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5') == '0'\nassert solution('0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5') == '0'\nassert solution('0 1\\n1 2\\n1 3\\n2 3\\n2 4\\n1 5\\n1 2 5') == '1'\nassert solution('0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5') == '0'\n"
    },
    {
        "number": 3497,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 4\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n1 4 2\\n2 5 0\") == \"1\"\nassert solution(\"3 4\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\") == \"1\"\nassert solution(\"5 4\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n1 4 2\\n2 5 0\") == \"1\"\nassert solution(\"3 4\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\n2 5 0\\n1 4 2\\"
    },
    {
        "number": 3497,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0\\n2\\n2\") == \"0\"\nassert solution(\"1\\n2\\n2\") == \"2\"\nassert solution(\"2\\n2\\n2\") == \"2\"\nassert solution(\"3\\n2\\n2\") == \"0\"\nassert solution(\"3\\n2\\n3\") == \"2\"\n"
    },
    {
        "number": 3497,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n1 2 5 \"\"\") == \"0\"\n\"\"\"\nclass Solution:\n    def solve(self, A, B, C):\n        if A == 1 and B == 0:\n            return A\n        if A == 0 and B == 1:\n            return A\n        if A == B and A % 2!= 0:\n            return A\n        if B == A and B % 2!= 0:\n            return B\n        if C == 1 and A == 0:\n            return 0\n        if C == 0 and A == 1:\n            return 0\n        if C == 1 and B == 0:\n            return 0\n        if C == 0 and B == 1:\n            return 1\n        if B == A and A % 2!= 0:\n            return 1\n        if A == C and A % 2!= 0:\n            return 1\n        if B == C and B % 2!= 0:\n            return 1\n        if A % 2 == 0:\n            return C\n        if B % 2 == 0:\n            return C\n        if C % 2 == 0:\n            return A\n        return min(A, B, C)\n\"\"\""
    },
    {
        "number": 3497,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 3497,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == output\nprint(solution(open(\"test_files/Y11R5P1/A.in\").read()))\n'''\n"
    },
    {
        "number": 3497,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5') == 0\nassert solution('1\\n1\\n1') == 0\nassert solution('2\\n2\\n2') == 1\nassert solution('3\\n3\\n3') == 0\nassert solution('3\\n2\\n1') == 1\n"
    },
    {
        "number": 3497,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n1 2 5 \n''') == '0'\n'''"
    },
    {
        "number": 3497,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 3\\n0 1\\n2 3\\n2 4\\n1 5\\n1 2 5') == '0'\nassert solution('2 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5') == '0'\nassert solution('2 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n1 3\\n1 4\\n1 5') == '0'\nassert solution('3 4\\n0 1\\n1 2\\n2 3\\n2 4\\n3 4') == '0'\nassert solution('3 4\\n0 1\\n1 2\\n2 3\\n2 4\\n3 4\\n1 2 3') == '0'\n"
    },
    {
        "number": 3497,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n') == '1'\nassert solution('0\\n0\\n') == '0'\nassert solution('0\\n0\\n0\\n0\\n0\\n0\\n') == '0'\nassert solution('0\\n1\\n') == '0'\nassert solution('0\\n0\\n1\\n1\\n2\\n2\\n') == '1'\n"
    },
    {
        "number": 3498,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 1\n50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n''') == '106\\n107\\n71\\n'\nassert solution('''3 1\n50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n100 1 4 C2 L2 C2 U2\n50 1 5 C3 L3 C3 U3\n50 1 5 C4 L4 C4 U4\n70 3 1 C5\n100 1 4 C6 L6 C6 U6\n50 1 5 C7 L7 C7 U7\n50 1 5 C8 L8 C8 U8\n70 3 1 C9\n100 1 4 C10 L10 C10 U10\n50 1 5 C11 L11 C11 U11\n50 1 5 C12 L12 C12 U12\n70 3 1 C13\n100 1 4 C14 L14 C14 U14\n50 1 5 C15 L15 C15 U15\n50 1 5 C16 L16 C16 U16\n70 3 1 C17\n100 1 4 C18 L18 C18 U18\n50 1 5 C19 L19 C19 U19\n50 1 5 C20 L20 C20 U20\n70 3 1 C21\n100 1 4 C22 L22 C22 U22\n50 1 5 C23 L23 C23 U23\n50 1 5 C24 L24 C24 U24\n70 3 1 C25\n100 1 4 C26 L26 C26 U26\n50 1 5 C27 L27 C27 U27\n50 1 5 C28 L28 C28 U28\n70 3 1 C29\n100 1 4 C30 L30 C30 U30\n50 1 5 C31 L31 C31 U31\n50 1 5 C32 L32 C32 U32\n70 3 1 C33\n100 1 4 C34 L34 C34 U34\n50 1 5 C35 L35 C35 U35\n50 1 5 C36 L36 C36 U36\n70 3 1 C37\n100 1 4 C38 L38 C38 U38\n50 1 5 C39 L39 C39 U39\n50 1 5 C40 L40 C40 U40\n70 3 1 C41\n100 1 4 C42 L42 C42 U42\n50 1 5 C43 L43 C43 U43\n50 1 5 C44 L44 C44 U44\n70 3 1 C45\n100 1 4 C46 L46 C46 U46\n50 1 5 C47 L47 C47 U47\n50 1 5 C48 L48 C48 U48\n70 3 1 C49\n100 1 4 C50 L50 C50 U50\n50 1 5 C51 L51 C51 U51\n50 1 5 C52 L52 C52 U52\n70 3 1 C53\n100 1 4 C54 L54 C54 U54\n50 1 5 C55 L55 C55 U55\n50 1 5 C56 L56 C56 U56\n70 3 1 C57\n100 1 4 C58 L58 C58 U58\n50 1 5 C59 L59 C59 U59\n50 1 5 C60 L60 C60 U60\n70 3 1 C61\n100 1 4 C62 L62 C62 U62\n50 1 5 C63 L63 C63 U63\n50 1 5 C64 L64 C64 U64\n70 3 1 C65\n100 1 4 C66 L66 C66 U66\n50 1 5 C67 L67 C67 U67\n50 1 5 C68 L68 C68 U68\n70 3 1 C69\n100 1 4 C70 L70 C70 U70\n50 1 5 C71 L71 C71 U71\n50 1 5 C72 L72 C72 U72\n70 3 1 C73\n100 1 4 C74 L74 C74 U74\n50 1 5 C75 L75 C75 U75\n50 1 5 C76 L76 C76 U76\n70 3 1 C77\n100 1 4 C78 L78 C78 U78\n50 1 5 C79 L79 C79 U79\n50 1 5 C80 L80 C80 U80\n70 3 1 C81\n100 1 4 C82 L82 C82 U82\n50 1 5 C83 L83 C83 U83\n50 1 5 C84 L84 C84 U84\n70 3 1 C85\n100 1 4 C86 L86 C86 U86\n50 1 5 C87 L87 C87 U87\n50 1 5 C88 L88 C88 U88\n70 3 1 C89\n100 1 4 C90 L90 C90 U90\n50 1 5 C91 L91"
    },
    {
        "number": 3498,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(TESTCASES[0]) == [106, 107, 71]\n-----Add your code here------\n\n'''\n"
    },
    {
        "number": 3498,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3498,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n\"\"\") == \"106\\n107\\n71\"\nassert solution(\"\"\"1 2 1 C1 L1 C1 U1 C1\n50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n\"\"\") == \"106\\n107\\n71\\n100\"\nassert solution(\"\"\"100 2 2 C1 L1 C1 U1 C1\n50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n\"\"\") == \"106\\n107\\n71\\n100\\n106\"\nassert solution(\"\"\"10 2 2 C1 L1 C1 U1 C1\n50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n\"\"\") == \"106\\n107\\n71\\n100\\n106\\n106\"\nassert solution(\"\"\"10 2 2 C1 L1 C1 U1 C1\n50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n100 2 2 C1 L1 C1 U1 C1\n50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n\"\"\") == \"106\\n107\\n71\\n100\\n106\\n106\\n106\\n106\"\n"
    },
    {
        "number": 3498,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n\"\"\") == \"106 107 71\"\nassert solution(\n\"\"\"50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n\"\"\") == \"106 107 71\"\nassert solution(\n\"\"\"50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n\"\"\") == \"106 107 71\"\nassert solution(\n\"\"\"50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1"
    },
    {
        "number": 3498,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''50 2 5\n50 2 5\n1 1 5\n70 3 1\n1 1 5\n50 2 5\n50 2 5\n1 1 5\n50 2 5\n50 2 5\n1 1 5\n70 3 1''') == '''106\n107\n71\n'''\n"
    },
    {
        "number": 3498,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1''') == '106 107 71'\n'''\n'''"
    },
    {
        "number": 3498,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 3\") == \"\"\nassert solution(\"2 3 4\") == \"\"\nassert solution(\"2 3 4 5\") == \"\"\n"
    },
    {
        "number": 3498,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"5 2\") == \"10\"\nassert solution(\"5 2 3\") == \"7\"\nassert solution(\"5 2 3 4\") == \"10\"\nassert solution(\"5 2 3 4 5\") == \"15\"\n"
    },
    {
        "number": 3498,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"106\\n107\\n71\""
    },
    {
        "number": 3499,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == '0'\nassert solution('A') == '0'\nassert solution('AAAAA') == '0'\nassert solution('AAA') == '0'\nassert solution('AAAAAA') == '0'\n"
    },
    {
        "number": 3499,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n0\n''') == ''\nassert solution('''\n10\nAAAA\n''') == '33333'\nassert solution('''\n2\nAB\n''') == '6'\nassert solution('''\n3\nABC\n''') == '20'\nassert solution('''\n9\nABCDGH\n''') == '33333'\n"
    },
    {
        "number": 3499,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('A') == ''\nassert solution('AB') == ''\nassert solution('ABAA') == 'ABAA'\nassert solution('ABBB') == 'ABBB'\n"
    },
    {
        "number": 3499,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"A\") == \"1\"\nassert solution(\"AB\") == \"1\"\nassert solution(\"ABC\") == \"3\"\nassert solution(\"ABCDAB\") == \"5\"\n"
    },
    {
        "number": 3499,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3499,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '51'\n"
    },
    {
        "number": 3499,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''AA''') == '51'\nassert solution('''AB''') == '9'\nassert solution('''BA''') == '9'\nassert solution('''AABCD''') == '7'\nassert solution('''ABBCD''') == '8'\n"
    },
    {
        "number": 3499,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''AA\n''') == '51'\nassert solution('''ABC\n''') == '99'\nassert solution('''ABCD\n''') == '48'\nassert solution('''ABCDEF\n''') == '2986'\nassert solution('''ABCDEFGH\n''') == '156310'\n"
    },
    {
        "number": 3499,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''AA''') == 51\nassert solution('''A''') == 26\nassert solution('''AAB''') == 1\nassert solution('''ABC''') == 1\nassert solution('''ABABAB''') == 3\n"
    },
    {
        "number": 3499,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"AAAA\") == 2\nassert solution(\"B\") == 0\nassert solution
    },
    {
        "number": 3500,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68') == '1 2'\nassert solution('3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n') == '1 2'\nassert solution('3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n
    },
    {
        "number": 3500,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(open(\"test_0.txt\", \"r\").read()) == \"no ties\"\nassert solution(open(\"test_1.txt\", \"r\").read()) == \"1 2\""
    },
    {
        "number": 3500,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"1 1 1 1 1\") == \"\"\nassert solution(\"3 29 45 56 68\") == \"no ties\"\n"
    },
    {
        "number": 3500,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20\\n\") == \"no ties\"\nassert solution(\"1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20\\n\\n5 4\\n3 2\\n1 1\\n\\n\") == \"5 4\"\nassert solution(\"1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20\\n\\n3 2\\n1 1\\n\\n\") == \"3 2\"\n"
    },
    {
        "number": 3500,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n\n14 23 39 59 63\n8 17 35 55 61\n15 26 42 53 71\n10 25 31 57 64\n6 20 44 52 68''') == '1 2'\nassert solution('''3\n3 29 45 56 68\n3 19 43 50 72\n3 11 25 40 49 61\n3 9 23 31 58 63\n3 4 27 42 54 71\n\n14 23 39 59 63\n8 17 35 55 61\n15 26 42 53 71\n10 25 31 57 64\n6 20 44 52 68''') == '1 3'\nassert solution('''3\n6 23 35 34\n5 17 31 28\n4 24 22 19\n3 25 17\n2 26 22\n1 27 22\n\n1 22 21 17\n2 19 22 22\n3 28 22 19\n4 22 22 22\n5 22 22 21''') == '1 2'\nassert solution('''3\n4 22 22 22\n3 28 22 19\n2 22 22 22\n1 22 22 21\n\n1 22 21 17\n2 19 22 22\n3 28 22 19\n4 22 22 22\n5 22 22 21''') == '1 2'\nassert solution('''3\n2 24 22 19\n3 28 22 19\n4 22 22 22\n1 22 22 21\n\n1 22 21 17\n2 19 22 22\n3 28 22 19\n4 22 22 22\n5 22 22 21''') == '1 2'\n"
    },
    {
        "number": 3500,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71') == 'no ties'\nassert solution('14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n') == '4 26'\nassert solution('3 19 42 29 37\\n3 17 22 26 26\\n11 24 19 17 19\\n9 17 22 19 37\\n7 19 22 25 37\\n') == '1 19'\nassert solution('14 19 42 29 37\\n3 17 22 26 26\\n11 24 19 17 19\\n9 17 22 19 37\\n7 19 22 25 37\\n') == '1 19'\nassert solution('14 19 42 29 37\\n3 17 22 26 26\\n11 24 19 17 19\\n9 17 22 19 37\\n7 19 22 25 37\\n') == '1 19'\n"
    },
    {
        "number": 3500,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''3\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n''') == '1 2'\nassert solution(\n'''3\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n''') == '1 2'\nassert solution(\n'''2\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n''') == 'no ties'\nassert solution(\n'''2\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n''') == '1 2'\nassert solution(\n'''3\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n''') == '1 2'\n"
    },
    {
        "number": 3500,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2') == '1 2'\nassert solution('no ties') == 'no ties'\nassert solution('1 2 3 4') == '1 2'\nassert solution('1 2 3 4 5 6') == '1 2'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25') == '1 2'\n"
    },
    {
        "number": 3500,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\") == \"1 2\"\nassert solution(\"14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\") == \"1 2\"\nassert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\") == \"1 2\"\nassert solution(\"14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\") == \"1 2\"\nassert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\") == \"1 2\"\n"
    },
    {
        "number": 3500,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"1 2\"\nassert solution(\"1 2\\n1 2\") == \"no ties\"\nassert solution(\"1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n\") == \"1 2\"\n\"\"\"\n\nimport sys\nfrom collections import defaultdict\n"
    },
    {
        "number": 3501,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == '0'\nassert solution('2\\n2 2\\n1 2\\n2 1') == '2'\nassert solution('2\\n2 2\\n1 1\\n1 1') == '2'\nassert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == '0'\nassert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == '0'\n"
    },
    {
        "number": 3501,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n3 2 1\n1 2 3\n1 2 3''') == '0'\nassert solution('''3\n3 2 1\n1 2 3\n1 2 3''') == '0'\nassert solution('''3\n3 2 1\n1 2 3\n1 1 2''') == '2'\nassert solution('''3\n3 2 1\n1 2 3\n1 1 1''') == '1'\nassert solution('''3\n3 2 1\n2 1 2\n2 2 2''') == '2'\n"
    },
    {
        "number": 3501,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n3 2 1\n1 2 3\n1 2 3''') == '0'\nassert solution('''1\n1 2 3\n2 3 4\n1 2 3''') == '0'\nassert solution('''3\n1 2 3\n2 3 4\n3 4 5\n1 2 3''') == '1'\nassert solution('''3\n1 2 3\n2 3 4\n3 4 1\n1 2 3''') == '1'\nassert solution('''10\n1 2 3\n2 3 4\n3 4 5\n1 2 3\n2 3 4\n3 4 5\n1 2 3\n2 3 4\n3 4 1\n1 2 3\n2 3 4\n3 4 1''') == '1'\n"
    },
    {
        "number": 3501,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n3 2 1\n1 2 3\n1 2 3''') == '0'\nassert solution('''3\n4 2 1\n1 2 3\n1 2 3''') == '3'\nassert solution('''3\n1 2 3\n1 2 3\n1 2 3''') == '0'\nassert solution('''3\n1 2 3\n4 2 1\n1 2 3''') == '1'\nassert solution('''3\n1 2 3\n4 2 1\n3 2 1''') == '1'\n"
    },
    {
        "number": 3501,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n3 2 1\n1 2 3\n1 2 3''') == '0'\nassert solution('''3\n1 2 3\n1 2 3\n1 2 3''') == '1'\nassert solution('''4\n3 2 1\n1 2 4\n1 2 3\n1 2 3''') == '3'\nassert solution('''6\n3 2 1\n1 2 4\n1 2 3\n1 2 3\n1 2 3\n1 2 3''') == '5'\nassert solution('''7\n3 2 1\n1 2 4\n1 2 3\n1 2 3\n1 2 4\n1 2 3\n1 2 3''') == '6'\n"
    },
    {
        "number": 3501,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n3 2 1\n1 2 3\n1 2 3''') == '0'\nassert solution('''4\n4 2 1\n1 2 3\n1 2 4\n1 2 3''') == '4'\nassert solution('''1\n1 2\n2 3''') == '0'\nassert solution('''3\n2 3 1\n1 2 3\n3 1 2''') == '0'\nassert solution('''3\n3 2 1\n1 2 3\n1 2 3''') == '0'\n"
    },
    {
        "number": 3501,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == '0'\nassert solution('1\\n1') == '0'\nassert solution('1\\n2\\n1') == '0'\nassert solution('1\\n2\\n3\\n1') == '0'\nassert solution('1\\n1\\n1') == '0'\n"
    },
    {
        "number": 3501,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n3 2 1\n1 2 3\n1 2 3''') == '0'\nassert solution('''4\n1 2 3 4\n1 2 3 4\n1 2 3 4''') == '4'\nassert solution('''8\n1 2 3 4 5 6 7 8\n1 2 3 4 5 6 7 8\n1 2 3 4 5 6 7 8''') == '8'\nassert solution('''1\n1''') == '0'\nassert solution('''10\n2 2 2 2 2 2 2 2 2 2''') == '20'\n\nprint(solution('''200\n
    },
    {
        "number": 3501,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n3 2 1\n1 2 3\n1 2 3''') == '0'\nassert solution('''1\n1 2 3\n1 2 3''') == '3'\nassert solution('''3\n3 2 1\n1 2 3\n3 2 1''') == '0'\nassert solution('''1\n2\n1''') == '3'\nassert solution('''1\n2\n1''') == '0'\n"
    },
    {
        "number": 3501,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n3 2 1\n1 2 3\n1 2 3\n3\n1 2 3\n1 2 3''') == '0'\nassert solution('''3\n3 2 1\n1 2 3\n1 2 3\n1 2 3\n3\n1 2 3\n1 2 3''') == '3'\nassert solution('''3\n3 2 1\n1 2 3\n1 2 3\n1 2 3\n3\n3 2 1\n3 2 1\n3 2 1''') == '2'\nassert solution('''3\n3 2 1\n1 2 3\n1 2 3\n1 2 3\n3\n3 2 1\n2 3 1\n2 3 1''') == '1'\nassert solution('''3\n3 2 1\n1 2 3\n1 2 3\n1 2 3\n3\n1 2 3\n2 3 1\n3 1 2\n2 3 1''') == '0'\n"
    },
    {
        "number": 3502,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 2 3\n6 2 3\n10 2 3\n16 3 4\n''') == '0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571'\nassert solution('''\n5\n2 3 3 2 2\n2 1 1 2 2\n3 3 2 2 1\n1 1 2 1 3\n4 3 3 2 2\n''') == '0.1\\n0.1\\n0.4\\n0.0800000000000001\\n0.186666666666667'\nassert solution('''\n7\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n''') == '0.428571428571429\\n0.428571428571429\\n0.428571428571429\\n0.428571428571429\\n0.428571428571429\\n0.428571428571429\\n'\nassert solution('''\n10\n2 3 3 2 2\n2 1 1 2 2\n3 3 2 2 1\n1 1 2 1 3\n4 3 3 2 2\n5 3 3 2 2\n6 3 3 2 2\n7 3 3 2 2\n8 3 3 2 2\n9 3 3 2 2\n''') == '0.25\\n0.25\\n0.4\\n0.0800000000000001\\n0.186666666666667\\n0.222222222222222\\n0.222222222222222\\n0.222222222222222\\n0.222222222222222\\n0.222222222222222\\n'\nassert solution('''\n100\n
    },
    {
        "number": 3502,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4\") == \"0.4\"\nassert solution(\"5\") == \"0\"\nassert solution(\"6\") == \"0.2\"\nassert solution(\"7\") == \"0.178571428571\"\nassert solution(\"8\") == \"0.228571428571\"\n"
    },
    {
        "number": 3502,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n4\n1 2 3\n6 2 3\n10 2 3\n16 3 4\n\"\"\"\n) == \"\"\"\n0.4\n0\n0.2\n0.171428571429\n0.228571428571\n\"\"\"\n"
    },
    {
        "number": 3502,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n6\\n10\\n16\\n') == '0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571'\nassert solution('1\\n6\\n10\\n16\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n') == '0.1\\n0\\n0.090909090909\\n0.090909090909\\n0.090909090909\\n0.090909090909\\n0.090909090909\\n0.090909090909\\n0.090909090909\\n0.090909090909\\n0.090909090909\\n0.090909090909\\n0.090909090909\\n0.090909090909\\n0.090909090909\\n0.090909090909\\n0.090909090909\\n0.090909090909\\n0.090909090909\\n0.090909090909\\n0.090909090909\\n0.090909090909\\n0.090909090909\\n0.090909090909\\n0.090909090909\\n0.090909090909\\n0.090909090909\\n0.090909090909\\n0.090909090909\\n0.090909090909\\n0.090909090909\\n0.090909090909'\nassert solution('2\\n6\\n10\\n16\\n3\\n5\\n7\\n9\\n13\\n15\\n17\\n') == '0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n"
    },
    {
        "number": 3502,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '4\\n'\n    '1 2 3\\n'\n    '6 2 3\\n'\n    '10 2 3\\n'\n    '16 3 4') == '0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571'\n\nassert solution(\n    '5\\n'\n    '1 2 3 4 5\\n'\n    '7 2 3 4 5\\n'\n    '9 2 3 4 5\\n'\n    '13 4 5 6 7\\n'\n    '15 4 5 6 7') == '0.0416666666666667\\n0\\n0.0333333333333333\\n0.05555555555555555\\n0.1111111111111111\\n0.1666666666666665'\n\nassert solution(\n    '10\\n'\n    '1 2 3 4 5 6 7 8 9 10\\n'\n    '11 22 33 44 55 66 77 88 99') == '0.0000000000000000000000000000000000000000000\\n0\\n0.0000000000000000000000000000000000000000000\\n0.0000000000000000000000000000000000000000000\\n0.0000000000000000000000000000000000000000000\\n0.0000000000000000000000000000000000000000000\\n0.0000000000000000000000000000000000000000000\\n0.0000000000000000000000000000000000000000000\\n0.0000000000000000000000000000000000000000000\\n0.0000000000000000000000000000000000000000000\\n0.0000000000000000000000000000000000000000000\\n0.0000000000000000000000000000000000000000000'\n\nassert solution(\n    '4\\n'\n    '1 1 1\\n'\n    '2 2 2\\n'\n    '3 3 3\\n'\n    '4 4 4') == '0.5\\n0.5\\n0.5\\n0.5'\n\nassert solution(\n    '5\\n'\n    '1 1 1 1 1\\n'\n    '2 2 2 2 2\\n'\n    '3 3 3 3 3\\n'\n    '4 4 4 4 4\\n'\n    '5 5 5 5 5') == '0.05555555555555555\\n0.4545454545454545\\n0.4545454545454545\\n0.4545454545454545\\n0.4545454545454545\\n0.4545454545454545'"
    },
    {
        "number": 3502,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4\n1 2 3\n6 2 3\n10 2 3\n16 3 4\n\"\"\") == \"\"\"\n0.4\n0\n0.2\n0.171428571429\n0.228571428571\n\"\"\"\n\nassert solution(\"\"\"\n3\n4 2 2\n1 1 2\n3 1 4\n3 3 3\n\"\"\") == \"\"\"\n0.333333333333\n0\n0.1666666666667\n0.333333333333\n\"\"\"\n\nassert solution(\"\"\"\n5\n1 2 2\n1 2 3\n2 1 3\n1 1 4\n1 1 1\n\"\"\") == \"\"\"\n0.2\n0\n0.2\n0\n0.125\n0.125\n\"\"\"\n\nassert solution(\"\"\"\n3\n5 1 2\n1 2 2\n3 1 2\n3 3 3\n\"\"\") == \"\"\"\n0.5\n0\n0.1666666666667\n0.5\n\"\"\"\n\nassert solution(\"\"\"\n2\n2 1 2\n2 1 2\n\"\"\") == \"\"\"\n0.5\n0\n0.5\n0\n\"\"\""
    },
    {
        "number": 3502,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n4\n1 2 3\n6 2 3\n10 2 3\n16 3 4\n''') == '''\n0.4\n0\n0.2\n0.171428571429\n0.228571428571\n'''\n"
    },
    {
        "number": 3502,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n1 2 3\n6 2 3\n10 2 3\n16 3 4''') == '0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571'\nassert solution('''4\n1 2 3\n6 2 3\n10 2 3\n16 3 4''') == '0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571'\nassert solution('''1\n2 3\n
    },
    {
        "number": 3502,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n1 2 3\n6 2 3\n10 2 3\n16 3 4\n''') == '0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571'\n\nassert solution('''4\n1 2 3\n6 2 3\n10 2 3\n16 3 4\n''') == '0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571'\n\nassert solution('''4\n1 2 3\n1 2 3\n10 2 3\n16 3 4\n''') == '0\\n0\\n0.0\\n0.0\\n0.0'\n\nassert solution('''4\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n''') == '0\\n0\\n0\\n0\\n0'\n\nassert solution('''10\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n''') == '1\\n0\\n0\\n0\\n0.0'"
    },
    {
        "number": 3502,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n1 2 3\n6 2 3\n10 2 3\n16 3 4\n\"\"\"\n) == \"\"\"\n0.4\n0\n0.2\n0.171428571429\n0.228571428571\n\"\"\"\n\nassert solution(\n\"\"\"\n1 2 3\n10 2 3\n16 3 4\n\"\"\"\n) == \"\"\"\n0.4\n0\n0.2\n0.171428571429\n0.228571428571\n\"\"\"\n\nassert solution(\n\"\"\"\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n\"\"\"\n) == \"\"\"\n0.5\n0\n0.5\n0.333333333333\n\"\"\"\n\nassert solution(\n\"\"\"\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n\"\"\"\n) == \"\"\"\n0.5\n0\n0.5\n0.333333333333\n\"\"\"\n\nassert solution(\n\"\"\"\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n\"\"\"\n) == \"\"\"\n0.5\n0\n0.5\n0.333333333333\n\"\"\""
    },
    {
        "number": 3503,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 5\n3 3\n4 5\n-1 -6''') == '''1 + 5 = 6\n3 * 3 = 9\n4 - 5 = -1\n-1 - -6 = 5'''\n\nassert solution('''4\n1 2\n2 4\n-1 -1\n1 3\n1 4\n1 5\n-1 -1''') == '''impossible'''\n\nassert solution('''4\n1 1\n3 3\n4 4\n5 5\n6 6\n7 7\n-1 -1\n-1 -1\n1 1\n1 1\n1 1''') == '''1 + 1 = 2\n3 * 3 = 9\n4 - 4 = 0\n5 + 5 = 10\n6 + 6 = 12\n7 - 7 = 0\n1 + 1 = 2\n1 * 1 = 1\n1 * 1 = 1\n1 * 1 = 1\n-1 * -1 = 1\n-1 - -1 = -2'''\n\nassert solution('''5\n1 2\n1 3\n2 4\n1 5\n1 6\n1 7\n2 1\n2 2\n2 3\n3 4\n3 5\n3 6\n4 5\n4 6\n4 7\n5 1\n5 2\n5 3\n5 4\n5 5\n5 6\n5 7\n6 1\n6 2\n6 3\n6 4\n6 5\n6 6\n6 7\n7 1\n7 2\n7 3\n7 4\n7 5\n7 6\n7 7''') == '''1 + 2 = 3\n1 * 2 = 2\n2 - 3 = -1\n2 * 3 = 6\n1 - 1 = 0\n3 * 3 = 9\n3 - 4 = 1\n4 + 5 = 9\n4 * 5 = 20\n4 - 6 = -4\n5 + 7 = 12\n5 * 7 = 35\n6 - 1 = 5\n6 - 2 = 4\n6 - 3 = 3\n6 - 4 = 2\n6 * 6 = 36\n6 - 7 = -1\n6 + 1 = 7\n6 * 1 = 6\n6 * 1 = 6\n6 * 1 = 6\n6 + 2 = 8\n6 + 3 = 11\n6 + 4 = 14\n6 + 5 = 19\n6 * 2 = 12\n6 * 3 = 18\n6 * 4 = 24\n6 * 5 = 30\n7 - 1 = 6\n7 - 2 = 5\n7 - 3 = 4\n7 - 4 = 3\n7 * 6 = 42\n7 * 7 = 49\n7 - 8 = -4\n1 + 2 = 3\n1 * 2 = 2\n2 - 3 = -1\n2 * 3 = 6\n1 - 1 = 0\n3 * 3 = 9\n3 - 4 = 1\n4 + 5 = 9\n4 * 5 = 20\n4 - 6 = -4\n5 + 7 = 12\n5 * 7 = 35\n6 - 1 = 5\n6 - 2 = 4\n6 - 3 = 3\n6 - 4 = 2\n6 * 6 = 36\n6 - 7 = -1\n6 + 1 = 7\n6 * 1 = 6\n6 * 1 = 6\n6 * 1 = 6\n6 + 2 = 8\n6 + 3 = 11\n6 + 4 = 14\n6 + 5 = 19\n6 * 2 = 12\n6 * 3 = 18\n6 * 4 = 24\n6 * 5 = 30\n7 - 1 = 6\n7 - 2 = 5\n7 - 3 = 4\n7 - 4 = 3\n7 * 6 = 42\n7 * 7 = 49\n7 - 8 = -4\n1 + 2 = 3\n1 * 2 = 2\n2 - 3 = -1\n2 * 3 = 6\n1 - 1 = 0\n3 * 3 = 9\n3 - 4 = 1\n4 + 5 = 9\n4 * 5 = 20\n4 - 6 = -4\n5 + 7 = 12\n5 * 7 = 35\n6 - 1 = 5\n6 - 2 = 4\n6 - 3 = 3\n6 - 4 = 2\n6 * 6 = 36\n6 - 7 = -1\n6 + 1 = 7\n6 * 1 = 6\n6 * 1 = 6\n6 * 1 = 6\n6 + 2 = 8\n6 + 3 = 11\n6 + 4 = 14\n6 + 5 = 19\n6 * 2 = 12\n6 * 3 = 18\n6 * 4 = 24\n6 * 5 = 30\n7 - 1 = 6\n7 - 2 = 5\n7 - 3 = 4\n7 - 4 = 3\n7 * 6 = 42\n7 * 7 = 49\n7 - 8 = -4\n1 + 2 = 3\n1 * 2 = 2\n2 - 3 = -1\n2 * 3 = 6\n1 - 1 = 0\n3 * 3 = 9\n3 - 4 = 1\n4 + 5 = 9\n4 * 5 = 20\n4 - 6 = -4\n5 + 7 = 12\n5 * 7 = 35\n6 - 1 = 5\n6 - 2 = 4\n6 - 3 = 3\n6 - 4 = 2\n6 * 6 = 36\n6 - 7 = -1\n6 + 1 = 7\n6 * 1 = 6\n6 * 1 = 6\n6 * 1 = 6\n6 + 2 = 8\n6 + 3 = 11\n6 + 4 = 14\n6 + 5 = 19\n6 * 2 = 12\n6 * 3 = 18\n6 * 4 = 24\n6 * 5 = 30\n7 - 1 = 6\n7 - 2 = 5\n7 - 3 = 4\n7 - 4 = 3\n7 * 6 = 42\n7 * 7 = 49\n7 - 8 = -4\n1 + 2 = 3\n1 * 2 = 2\n2 - 3 = -1\n2 * 3 = 6\n1 - 1 = 0\n3 * 3 = 9\n3 - 4 = 1\n4 + 5 = 9\n4 * 5 = 20\n4 - 6 = -4\n5 + 7 = 12\n5 * 7 = 35\n6 - 1 = 5\n6 - 2 = 4\n6 - 3 = 3\n6 - 4 = 2\n6 * 6 = 36\n6 - 7 = -1\n6 + 1 = 7\n6 * 1 = 6\n6 * 1 = 6\n6 * 1 = 6\n6 + 2 = 8\n6 + 3 = 11\n6 + 4 = 14\n6 + 5 = 19\n6 * 2 = 12\n6 * 3 = 18\n6 * 4 = 24\n6 * 5 = 30\n7 - 1 = 6\n7 - 2 = 5\n7 - 3 = 4\n7 - 4 = 3\n7 * 6 = 42\n7 * 7 = 49\n7 - 8 = -4\n1 + 2 = 3\n1 * 2 = 2\n2 - 3 = -1\n2 * 3 = 6\n1 - 1 = 0\n3 * 3 = 9\n3 - 4 = 1\n4 + 5 = 9\n4 * 5 = 20\n4 - 6 = -4\n5 + 7 = 12\n5 * 7 = 35\n6 - 1 = 5\n6 - 2 = 4\n6 - 3 = 3\n6 - 4 = 2\n6 * 6 = 36\n6 - 7 = -1\n6 + 1 = 7\n6 * 1 = 6\n6 * 1 = 6\n6 * 1 = 6\n6 + 2 = 8\n6 + 3 = 11\n6 + 4 = 14\n6 + 5 = 19\n6"
    },
    {
        "number": 3503,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 3503,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n5\\n3\\n3\\n4\\n5\\n-1\\n-6') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5'\nassert solution('1\\n5\\n3\\n3\\n4\\n5\\n-1\\n-6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\n1 + 7 = 8\\n3 * 4 = 12\\n4 - 5 = -1\\n-1 - -6 = 5'\nassert solution('1\\n5\\n3\\n3\\n4\\n5\\n-1\\n-6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\n1 + 7 = 8\\n3 * 4 = 12\\n4 - 5 = -1\\n-1 - -6 = 5'\nassert solution('1\\n5\\n3\\n3\\n4\\n5\\n-1\\n-6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\n1 + 7 = 8\\n3 * 4 = 12\\n4 - 5 = -1\\n-1 - -6 = 5'\nassert solution('1\\n5\\n3\\n3\\n4\\n5\\n-1\\n-6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\n1 + 7 = 8\\n3 * 4 = 12\\n4 - 5 = -1\\n-1 - -6 = 5'\n"
    },
    {
        "number": 3503,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n1 5\n3 3\n4 5\n-1 -6''') == '''1 + 5 = 6\n3 * 3 = 9\n4 - 5 = -1\n-1 - -6 = 5'''\nassert solution('''4\n1 5\n3 3\n4 5\n-1 -6\n2 2\n4 4\n6 6\n2 2\n1 2\n1 1\n-1 -1\n2 2''') == '''1 + 5 = 6\n3 * 3 = 9\n4 - 5 = -1\n-1 - -6 = 5\n2 + 2 = 4\n4 * 4 = 16\n6 * 6 = 36\n2 + 2 = 4\n1 + 1 = 2\n-1 - 1 = 0\n2 + 2 = 4\n1 + 1 = 2\n-1 - 1 = 0'''\nassert solution('''6\n1 5\n3 3\n4 5\n-1 -6\n2 2\n4 4\n6 6\n2 2\n1 2\n1 1\n-1 -1\n2 2''') == '''1 + 5 = 6\n3 * 3 = 9\n4 - 5 = -1\n-1 - -6 = 5\n2 + 2 = 4\n4 * 4 = 16\n6 * 6 = 36\n2 + 2 = 4\n1 + 1 = 2\n-1 - 1 = 0\n2 + 2 = 4\n1 + 1 = 2\n-1 - 1 = 0'''\nassert solution('''4\n-1 -6\n2 2\n4 4\n6 6\n2 2\n1 2\n1 1\n-1 -1\n2 2''') == '''impossible'''\nassert solution('''4\n-1 -6\n2 2\n4 4\n6 6\n2 2\n1 2\n1 1\n-1 -1\n2 2''') == '''impossible'''"
    },
    {
        "number": 3503,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1\n5\n3 3\n4 5\n-1 -6''') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5'\n'''\n3\n1 4\n3 3\n3 4\n-1 -5\n'''\nassert solution('''3\n1 4\n3 3\n3 4\n-1 -5''') == 'impossible'\n\nassert solution('''6\n1 6\n3 3\n6 4\n-1 -5\n-1 -5\n1 2\n''') == '1 + 2 = 3\\n-1 - 2 = 1\\n1 * 2 = 2\\n3 - 1 = 4\\n-1 * -1 = -2\\n1 * -1 = -2\\n3 * 4 = 12'\n"
    },
    {
        "number": 3503,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n1 5\n3 3\n4 5\n-1 -6''') == '''1 + 5 = 6\n3 * 3 = 9\n4 - 5 = -1\n-1 - -6 = 5'''\nassert solution('''4\n1 5\n3 3\n4 5\n-1 -6\n-6 -1\n-5 -1\n-1 -5\n-1 -4\n-1 -3\n-1 -2\n-1 -1\n-2 -1\n-3 -1\n-4 -1\n-5 -1\n-6 -1\n-7 -1\n-8 -1\n-9 -1\n-10 -1\n-11 -1\n-12 -1\n-13 -1\n-14 -1\n-15 -1\n-16 -1\n-17 -1\n-18 -1\n-19 -1\n-20 -1\n-21 -1\n-22 -1\n-23 -1\n-24 -1\n-25 -1\n-26 -1\n-27 -1\n-28 -1\n-29 -1\n-30 -1\n-31 -1\n-32 -1\n-33 -1\n-34 -1\n-35 -1\n-36 -1\n-37 -1\n-38 -1\n-39 -1\n-40 -1\n-41 -1\n-42 -1\n-43 -1\n-44 -1\n-45 -1\n-46 -1\n-47 -1\n-48 -1\n-49 -1\n-50 -1\n-51 -1\n-52 -1\n-53 -1\n-54 -1\n-55 -1\n-56 -1\n-57 -1\n-58 -1\n-59 -1\n-60 -1\n-61 -1\n-62 -1\n-63 -1\n-64 -1\n-65 -1\n-66 -1\n-67 -1\n-68 -1\n-69 -1\n-70 -1\n-71 -1\n-72 -1\n-73 -1\n-74 -1\n-75 -1\n-76 -1\n-77 -1\n-78 -1\n-79 -1\n-80 -1\n-81 -1\n-82 -1\n-83 -1\n-84 -1\n-85 -1\n-86 -1\n-87 -1\n-88 -1\n-89 -1\n-90 -1\n-91 -1\n-92 -1\n-93 -1\n-94 -1\n-95 -1\n-96 -1\n-97 -1\n-98 -1\n-99 -1\n-100 -1\n-101 -1\n-102 -1\n-103 -1\n-104 -1\n-105 -1\n-106 -1\n-107 -1\n-108 -1\n-109 -1\n-110 -1\n-111 -1\n-112 -1\n-113 -1\n-114 -1\n-115 -1\n-116 -1\n-117 -1\n-118 -1\n-119 -1\n-120 -1\n-121 -1\n-122 -1\n-123 -1\n-124 -1\n-125 -1\n-126 -1\n-127 -1\n-128 -1\n-129 -1\n-130 -1\n-131 -1\n-132 -1\n-133 -1\n-134 -1\n-135 -1\n-136 -1\n-137 -1\n-138 -1\n-139 -1\n-140 -1\n-141 -1\n-142 -1\n-143 -1\n-144 -1\n-145 -1\n-146 -1\n-147 -1\n-148 -1\n-149 -1\n-150 -1\n-151 -1\n-152 -1\n-153 -1\n-154 -1\n-155 -1\n-156 -1\n-157 -1\n-158 -1\n-159 -1\n-160 -1\n-161 -1\n-162 -1\n-163 -1\n-164 -1\n-165 -1\n-166 -1\n-167 -1\n-168 -1\n-169 -1\n-170 -1\n-171 -1\n-172 -1\n-173 -1\n-174 -1\n-175 -1\n-176 -1\n-177 -1\n-178 -1\n-179 -1\n-180 -1\n-181 -1\n-182 -1\n-183 -1\n-184 -1\n-185 -1\n-186 -1\n-187 -1\n-188 -1\n-189 -1\n-190 -1\n-191 -1\n-192 -1\n-193 -1\n-194 -1\n-195 -1\n-196 -1\n-197 -1\n-198 -1\n-199 -1\n-200 -1\n-201 -1\n-202 -1\n-203 -1\n-204 -1\n-205 -1\n-206 -1\n-207 -1\n-208 -1\n-209 -1\n-210 -1\n-211 -1\n-212 -1\n-213 -1\n-214 -1\n-215 -1\n-216 -1\n-217 -1\n-218 -1\n-219 -1\n-220 -1\n-221 -1\n-222 -1\n-223 -1\n-224 -1\n-225 -1\n-226 -1\n-227 -1\n-228 -1\n-229 -1\n-230 -1\n-231 -1\n-232 -1\n-233 -1\n-234 -1\n-235 -1\n-236 -1\n-237 -1\n-238 -1\n-239 -1\n-240 -1\n-241 -1\n-242 -1\n-243 -1\n-244 -1\n-245 -1\n-246 -1\n-247 -1\n-248 -1\n-249 -1\n-250 -1\n-251 -1\n-252 -1\n-253 -1\n-254 -1\n-255 -1\n-256 -1\n-257 -1\n-258 -1\n-259 -1\n-260 -1\n-261 -1\n-262 -1\n-263 -1\n-264 -1\n-265 -1\n-266 -1\n-267 -1\n-268 -1\n-269 -1\n-270 -1\n-271 -1\n-272 -1\n-273 -1\n-274 -1\n-275 -1\n-276 -1\n-277 -1\n-278 -1\n-279 -1\n-280 -1\n-281 -1\n-282 -1\n-283 -1\n-284 -1\n-285 -1\n-286 -1\n-287 -1\n-288 -1\n-289 -1\n-290 -1\n-291 -1\n-292 -1\n-293 -1\n-294 -1\n-295 -1\n-296 -1\n-297 -1\n-298 -1\n-299 -1\n-300 -1\n-301 -1\n-302 -1\n-303 -1\n-304 -1\n-305 -1\n-306 -1"
    },
    {
        "number": 3503,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 5\\n3 3\\n4 5\\n-1 -6') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5'\nassert solution('4\\n1 5\\n3 3\\n4 5\\n-1 -6') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5'\nassert solution('2\\n1 2\\n2 2\\n1 1') == 'impossible'\nassert solution('3\\n1 1\\n2 2\\n1 1') == 'impossible'\nassert solution('2\\n1 1\\n1 1') == 'impossible'\n"
    },
    {
        "number": 3503,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n1 5\\n3 3\\n4 5\\n-1 -6') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5'\nassert solution('2\\n1 2\\n-1 -1') == 'impossible'\nassert solution('1\\n2\\n-1 -1') == 'impossible'\nassert solution('2\\n2\\n-1 -1') == 'impossible'\nassert solution('1\\n1\\n1\\n1') == 'impossible'\n"
    },
    {
        "number": 3503,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 5\\n3 3\\n4 5\\n-1 -6\\n') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5'\nassert solution('2\\n1 5\\n3 3\\n4 5\\n-1 -6\\n') == 'impossible'\n'''\n"
    },
    {
        "number": 3503,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n1 5\n3 3\n4 5\n-1 -6''') == '''1 + 5 = 6\n3 * 3 = 9\n4 - 5 = -1\n-1 - -6 = 5'''\n\nassert solution('''10\n1 3\n4 5\n7 8\n9 10\n1 2\n-1 -2\n-1 -4\n-1 -10\n3 2\n1 3\n4 5\n-1 -6''') == '''impossible\n-1 -4 = 5\n-1 -10 = 5\n-1 -2 = -3\n-1 -3 = -5\n-1 -5 = -7\n-1 -6 = -9\n1 + 3 = 4\n1 + 5 = 6\n3 * 3 = 9\n3 * 5 = 15\n4 - 5 = -1\n4 - 7 = -9\n4 - 9 = -11\n4 - 10 = -13\n-1 - -2 = 3\n-1 - -4 = 3\n-1 - -10 = 3\n-1 - -6 = -5\n1 - 3 = -4\n1 - 5 = -6\n3 - 5 = -3\n3 - 7 = -5\n3 - 9 = -7\n3 - 10 = -9\n3 - 11 = -11\n5 - 7 = -4\n5 - 9 = -7\n5 - 10 = -9\n5 - 11 = -11\n5 - 13 = -13\n-1 - -4 = 3\n-1 - -10 = 3\n-1 - -6 = -5\n1 - 3 = -4\n1 - 5 = -6\n3 - 5 = -3\n3 - 7 = -5\n3 - 9 = -7\n3 - 10 = -9\n3 - 11 = -11\n5 - 7 = -4\n5 - 9 = -7\n5 - 10 = -9\n5 - 11 = -11\n5 - 13 = -13'''\n"
    },
    {
        "number": 3504,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1''') == '4\\n1\\n4\\n6\\n0'\n'''"
    },
    {
        "number": 3504,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 3\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1''') == '4\\n1\\n4\\n6\\n0'\nassert solution('''3 5\n1 2\n1 3\n1 4\n1 5\n2 4\n2 5\n2 6\n2 7\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n1 30\n1 31\n1 32\n1 33\n1 34\n1 35\n1 36\n1 37\n1 38\n1 39\n1 40\n1 41\n1 42\n1 43\n1 44\n1 45\n1 46\n1 47\n1 48\n1 49\n1 50\n1 51\n1 52\n1 53\n1 54\n1 55\n1 56\n1 57\n1 58\n1 59\n1 60\n1 61\n1 62\n1 63\n1 64\n1 65\n1 66\n1 67\n1 68\n1 69\n1 70\n1 71\n1 72\n1 73\n1 74\n1 75\n1 76\n1 77\n1 78\n1 79\n1 80\n1 81\n1 82\n1 83\n1 84\n1 85\n1 86\n1 87\n1 88\n1 89\n1 90\n1 91\n1 92\n1 93\n1 94\n1 95\n1 96\n1 97\n1 98\n1 99\n1 100\n1 101\n1 102\n1 103\n1 104\n1 105\n1 106\n1 107\n1 108\n1 109\n1 110\n1 111\n1 112\n1 113\n1 114\n1 115\n1 116\n1 117\n1 118\n1 119\n1 120\n1 121\n1 122\n1 123\n1 124\n1 125\n1 126\n1 127\n1 128\n1 129\n1 130\n1 131\n1 132\n1 133\n1 134\n1 135\n1 136\n1 137\n1 138\n1 139\n1 140\n1 141\n1 142\n1 143\n1 144\n1 145\n1 146\n1 147\n1 148\n1 149\n1 150\n1 151\n1 152\n1 153\n1 154\n1 155\n1 156\n1 157\n1 158\n1 159\n1 160\n1 161\n1 162\n1 163\n1 164\n1 165\n1 166\n1 167\n1 168\n1 169\n1 170\n1 171\n1 172\n1 173\n1 174\n1 175\n1 176\n1 177\n1 178\n1 179\n1 180\n1 181\n1 182\n1 183\n1 184\n1 185\n1 186\n1 187\n1 188\n1 189\n1 190\n1 191\n1 192\n1 193\n1 194\n1 195\n1 196\n1 197\n1 198\n1 199\n1 200\n1 201\n1 202\n1 203\n1 204\n1 205\n1 206\n1 207\n1 208\n1 209\n1 210\n1 211\n1 212\n1 213\n1 214\n1 215\n1 216\n1 217\n1 218\n1 219\n1 220\n1 221\n1 222\n1 223\n1 224\n1 225\n1 226\n1 227\n1 228\n1 229\n1 230\n1 231\n1 232\n1 233\n1 234\n1 235\n1 236\n1 237\n1 238\n1 239\n1 240\n1 241\n1 242\n1 243\n1 244\n1 245\n1 246\n1 247\n1 248\n1 249\n1 250\n1 251\n1 252\n1 253\n1 254\n1 255\n1 256\n1 257\n1 258\n1 259\n1 260\n1 261\n1 262\n1 263\n1 264\n1 265\n1 266\n1 267\n1 268\n1 269\n1 270\n1 271\n1 272\n1 273\n1 274\n1 275\n1 276\n1 277\n1 278\n1 279\n1 280\n1 281\n1 282\n1 283\n1 284\n1 285\n1 286\n1 287\n1 288\n1 289\n1 290\n1 291\n1 292\n1 293\n1 294\n1 295\n1 296\n1 297\n1 298\n1 299\n1 300\n1 301\n1 302\n1 303\n1 304\n1 305\n1 306\n1 307\n1 308\n1 309\n1 310\n1 311\n1 312\n1 313\n1 314\n1 315\n1 316\n1 317\n1 318\n1 319\n1 320\n1 321\n1 322\n1 323\n1 324\n1 325\n1 326\n1 327\n1 328\n1 329\n1 330\n1 331\n1 332\n1 333\n1 334\n1 335\n1 336\n1 337\n1 338\n1 339\n1 340\n1 341\n1 342\n1 343\n1 344\n1 345\n1 346\n1 347\n1 348\n1 349\n1 350\n1 351\n1 352\n1 353\n1 354\n1 355\n1 356\n1 357\n1 358\n1 359\n1 360\n1 361\n1 362\n1 363\n1 364\n1 365\n1 366\n1 367\n1 368\n1 369\n1 370\n1 371\n1 372\n1 373\n1 374\n1 375\n1 376\n1 377\n1 378\n1 379\n1 380\n1 381\n1 382\n1 383\n1 384\n1 385\n1 386\n1 387\n1 388\n1 389\n1 390\n1 391\n1 392\n1 393\n1 394\n1 395\n1 396\n1 397\n1 398\n1 399\n1 400\n1 401\n1 402\n1 403\n1 404\n1 405\n1 406\n1 407\n1 408\n1 409\n1 410\n1 411\n1 412\n1 413\n1 414\n1 415\n1 416\n1 417\n1 418\n1 419\n1 420\n1 421\n1 422\n1 423\n1"
    },
    {
        "number": 3504,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1') == '4\\n1\\n4\\n6\\n0'\nassert solution('10 10\\n1 9\\n2 8\\n5 7\\n6 6\\n7 5\\n8 4\\n9 3\\n10 2\\n2 1\\n1 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n') == '0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10'\nassert solution('5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1') == '4\\n1\\n4\\n6\\n0'\nassert solution('6 6\\n2 2\\n4 4\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n2 3\\n4 5\\n7 8\\n9 10\\n') == '0\\n1\\n2\\n3\\n4\\n5\\n7\\n8\\n9\\n10'\nassert solution('8 8\\n1 1\\n2 2\\n4 4\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n2 3\\n4 5\\n6 7\\n7 8\\n8 9\\n9 10\\n') == '0\\n1\\n2\\n3\\n4\\n5\\n7\\n8\\n9\\n10'\n"
    },
    {
        "number": 3504,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\n2 3\\n2 3') == '4\\n1\\n4\\n6\\n0'\nassert solution('2 3\\n2 3\\n2 3') == '0\\n0\\n0\\n0'\nassert solution('2 3\\n2 3\\n2 3\\n2 3') == '0\\n0\\n0\\n0'\nassert solution('1 2\\n2 3\\n2 3') == '4\\n1\\n4\\n6\\n0'\nassert solution('1 2\\n1 2\\n1 2') == '0\\n0\\n0\\n0'\n"
    },
    {
        "number": 3504,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n1 30\n1 31\n1 32\n1 33\n1 34\n1 35\n1 36\n1 37\n1 38\n1 39\n1 40\n1 41\n1 42\n1 43\n1 44\n1 45\n1 46\n1 47\n1 48\n1 49\n1 50\n1 51\n1 52\n1 53\n1 54\n1 55\n1 56\n1 57\n1 58\n1 59\n1 60\n1 61\n1 62\n1 63\n1 64\n1 65\n1 66\n1 67\n1 68\n1 69\n1 70\n1 71\n1 72\n1 73\n1 74\n1 75\n1 76\n1 77\n1 78\n1 79\n1 80\n1 81\n1 82\n1 83\n1 84\n1 85\n1 86\n1 87\n1 88\n1 89\n1 90\n1 91\n1 92\n1 93\n1 94\n1 95\n1 96\n1 97\n1 98\n1 99\n1 100\n1 101\n1 102\n1 103\n1 104\n1 105\n1 106\n1 107\n1 108\n1 109\n1 110\n1 111\n1 112\n1 113\n1 114\n1 115\n1 116\n1 117\n1 118\n1 119\n1 120\n1 121\n1 122\n1 123\n1 124\n1 125\n1 126\n1 127\n1 128\n1 129\n1 130\n1 131\n1 132\n1 133\n1 134\n1 135\n1 136\n1 137\n1 138\n1 139\n1 140\n1 141\n1 142\n1 143\n1 144\n1 145\n1 146\n1 147\n1 148\n1 149\n1 150\n1 151\n1 152\n1 153\n1 154\n1 155\n1 156\n1 157\n1 158\n1 159\n1 160\n1 161\n1 162\n1 163\n1 164\n1 165\n1 166\n1 167\n1 168\n1 169\n1 170\n1 171\n1 172\n1 173\n1 174\n1 175\n1 176\n1 177\n1 178\n1 179\n1 180\n1 181\n1 182\n1 183\n1 184\n1 185\n1 186\n1 187\n1 188\n1 189\n1 190\n1 191\n1 192\n1 193\n1 194\n1 195\n1 196\n1 197\n1 198\n1 199\n1 200\n1 201\n1 202\n1 203\n1 204\n1 205\n1 206\n1 207\n1 208\n1 209\n1 210\n1 211\n1 212\n1 213\n1 214\n1 215\n1 216\n1 217\n1 218\n1 219\n1 220\n1 221\n1 222\n1 223\n1 224\n1 225\n1 226\n1 227\n1 228\n1 229\n1 230\n1 231\n1 232\n1 233\n1 234\n1 235\n1 236\n1 237\n1 238\n1 239\n1 240\n1 241\n1 242\n1 243\n1 244\n1 245\n1 246\n1 247\n1 248\n1 249\n1 250\n1 251\n1 252\n1 253\n1 254\n1 255\n1 256\n1 257\n1 258\n1 259\n1 260\n1 261\n1 262\n1 263\n1 264\n1 265\n1 266\n1 267\n1 268\n1 269\n1 270\n1 271\n1 272\n1 273\n1 274\n1 275\n1 276\n1 277\n1 278\n1 279\n1 280\n1 281\n1 282\n1 283\n1 284\n1 285\n1 286\n1 287\n1 288\n1 289\n1 290\n1 291\n1 292\n1 293\n1 294\n1 295\n1 296\n1 297\n1 298\n1 299\n1 300\n1 301\n1 302\n1 303\n1 304\n1 305\n1 306\n1 307\n1 308\n1 309\n1 310\n1 311\n1 312\n1 313\n1 314\n1 315\n1 316\n1 317\n1 318\n1 319\n1 320\n1 321\n1 322\n1 323\n1 324\n1 325\n1 326\n1 327\n1 328\n1 329\n1 330\n1 331\n1 332\n1 333\n1 334\n1 335\n1 336\n1 337\n1 338\n1 339\n1 340\n1 341\n1 342\n1 343\n1 344\n1 345\n1 346\n1 347\n1 348\n1 349\n1 350\n1 351\n1 352\n1 353\n1 354\n1 355\n1 356\n1 357\n1 358\n1 359\n1 360\n1 361\n1 362\n1 363\n1 364\n1 365\n1 366\n1 367\n1 368\n1 369\n1 370\n1 371\n1 372\n1 373\n1 374\n1 375\n1 376\n1 377\n1 378\n1 379\n1 380\n1 381\n1 382\n1 383\n1 384\n1 385\n1 386\n1 387\n1 388\n1 389\n1 390\n1 391\n1 392\n1 393\n1 394\n1 395\n1 396\n1 397\n1 398\n1 399\n1 400\n1 401\n1 402\n1 403\n1 404\n1 405\n1 406\n1 407\n1 408\n1 409\n1 410\n1 411\n1 412\n1 413\n1 414\n1 415\n1 416\n1 417\n1 418\n1 419\n1 420\n1 421\n1 422\n1 423\n1 424\n1 425\n1 426\n1 427\n1 428\n1 429\n1 430\n1 431\n1 432\n1 433\n1 434\n1 435\n1 436\n1 437\n1 438\n1 439\n1 440\n1 441\n1 442\n1 443\n1 444\n1 445\n1 446\n1 447\n1 448"
    },
    {
        "number": 3504,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 3\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1''') == '''4\n1\n4\n6\n0\n'''\n\nassert solution('''100 100\n-100 100\n1 1 1\n1 1 1\n1 1 1\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100 -100\n100 100\n-100"
    },
    {
        "number": 3504,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 3\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1''') == '''4\n1\n4\n6\n0\n'''\n"
    },
    {
        "number": 3504,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 3\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1''') == '''4\n1\n4\n6\n0\n'''\n"
    },
    {
        "number": 3504,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0"
    },
    {
        "number": 3504,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3 4\") == \"\"\nassert solution(\"3 3 3 3\") == \"\"\nassert solution(\"1 2 3 4\") == \"\"\nassert solution(\"2 3 1 3\") == \"\"\n"
    },
    {
        "number": 3505,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 2 3 4''') == '4'\nassert solution('''3\n1 2 3\nSample Output:\n6\n''') == '6'\nassert solution('''3\n3 4 1\nSample Output:\n0\n''') == '0'\nassert solution('''3\n3 3 3\nSample Output:\n6\n''') == '6'\nassert solution('''3\n-3 -3 -3\nSample Output:\n6\n''') == '6'\n"
    },
    {
        "number": 3505,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '4'"
    },
    {
        "number": 3505,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4') == 4\nassert solution('2 2 4 3') == 6\nassert solution('1 2 3 5') == 0\nassert solution('1 2 3 4') == 4\nassert solution('1 2 2 4') == 4\n"
    },
    {
        "number": 3505,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 2 3 4''') == 4\n'''"
    },
    {
        "number": 3505,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == 4\n\n'''\n"
    },
    {
        "number": 3505,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n1 2 3 4\n''') == '4'\nassert solution('''4\n1 2 2 3\n''') == '0'\nassert solution('''4\n1 2 1 3\n''') == '4'\nassert solution('''6\n1 2 3 4 5 6 7\n''') == '0'\n\nassert solution('''2\n-3 -3 -2 -2 -3 -2\n''') == '6'\n"
    },
    {
        "number": 3505,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4\\n1 2 4 3') == 4\nassert solution('2 3 4\\n2 3 4') == 4\nassert solution('3 4\\n3 4') == 4\nassert solution('4\\n4') == 1\nassert solution('4\\n1 2 3 4') == 1\n"
    },
    {
        "number": 3505,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('1\\n-1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('2\\n0 1') == '2'\nassert solution('2\\n0 1\\n0 2') == '2'\n"
    },
    {
        "number": 3505,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n1\n1 2 3 4\n'''\n) == \"4\"\n\nassert solution(\n'''\n5\n1 2 3 4 5\n'''\n) == \"2\"\n\nassert solution(\n'''\n6\n-50000 -50000 -50000 1 1 1\n'''\n) == \"0\"\n\nassert solution(\n'''\n10000\n3 7 5 7 5\n'''\n) == \"1\"\n\nassert solution(\n'''\n10\n-50000 -50000 -50000 1 1 1\n'''\n) == \"3\""
    },
    {
        "number": 3505,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n1 2 3 4''') == '4'\nassert solution('''7\n1 2 3 4 5 6 7''') == '8'\nassert solution('''4\n-5 -4 -3 -2 -1''') == '1'\nassert solution('''4\n-1 -1 -1 -1''') == '0'\nassert solution('''5\n-4 -3 -2 -1 1''') == '1'\n"
    },
    {
        "number": 3506,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 31 2\n20 60\n50 90''') == '4 3'\nassert solution('''5 60\n5 50\n5 40\n5 30\n5 20\n5 10\n5 5\n10 40\n15 30\n20 50\n25 60\n30 70\n35 80\n40 90\n45 100\n50 110\n55 120\n60 130\n65 140\n70 150\n75 160\n80 170\n85 180\n90 190\n95 200\n''') == '5 3'\nassert solution('''5 50\n5 40\n5 30\n5 20\n5 10\n5 5\n10 40\n15 30\n20 50\n25 60\n30 70\n35 80\n40 90\n45 100\n50 110\n55 120\n60 130\n65 140\n70 150\n75 160\n80 170\n85 180\n90 190\n95 200\n''') == '5 3'\nassert solution('''5 50\n5 40\n5 30\n5 20\n5 10\n5 5\n10 40\n15 30\n20 50\n25 60\n30 70\n35 80\n40 90\n45 100\n50 110\n55 120\n60 130\n65 140\n70 150\n75 160\n80 170\n85 180\n90 190\n95 200\n''') == '5 3'\nassert solution('''5 50\n5 40\n5 30\n5 20\n5 10\n5 5\n10 40\n15 30\n20 50\n25 60\n30 70\n35 80\n40 90\n45 100\n50 110\n55 120\n60 130\n65 140\n70 150\n75 160\n80 170\n85 180\n90 190\n95 200\n''') == '4 2'\n"
    },
    {
        "number": 3506,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 3 2\n20 60\n50 90''') == '4 3'\nassert solution('''1 3 2\n20 60\n50 90\n2 19\n50 95\n100 100''') == '2 0'\nassert solution('''1 4 2\n5 10\n20 60\n50 90\n2 19\n50 95\n100 100''') == '2 1'\nassert solution('''1 4 2\n5 10\n20 60\n50 90\n2 19\n50 95\n100 100\n2 19\n50 95\n100 100\n2 19\n50 95\n100 100\n2 19\n50 95\n100 100''') == '2 1'\nassert solution('''1 4 2\n5 10\n20 60\n50 90\n2 19\n50 95\n100 100\n2 19\n50 95\n100 100\n2 19\n50 95\n100 100\n2 19\n50 95\n100 100\n2 19\n50 95\n100 100\n2 19\n50 95\n100 100''') == '2 1'\n"
    },
    {
        "number": 3506,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 31 2\\n20 60\\n50 90') == '4 3'\nassert solution('1 10 2\\n10 30\\n30 50') == '0 0'\nassert solution('1 10 2\\n10 30\\n40 50') == '1 0'\nassert solution('1 10 2\\n10 30\\n40 50\\n50 90') == '1 0'\nassert solution('1 10 2\\n10 30\\n40 50\\n50 90\\n60 60') == '1 0'\n"
    },
    {
        "number": 3506,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 31 2\n20 60\n50 90''') == '4 3'\n'''\nassert solution('''1 2 1\n100 100\n50 50\n''') == '0 0'\nassert solution('''1 2 1\n100 100\n50 50\n''') == '0 0'\nassert solution('''1 3 1\n20 100\n50 50\n''') == '2 2'\nassert solution('''1 3 1\n20 100\n50 50\n''') == '2 2'\n"
    },
    {
        "number": 3506,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 31 2') == '4 3'\nassert solution('20 60') == '4 3'\nassert solution('50 90') == '4 3'\nassert solution('1 31 2\\n20 60') == '4 3'\nassert solution('20 60\\n50 90') == '4 3'\n"
    },
    {
        "number": 3506,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 31 2\\n20 60\\n50 90') == '4 3'\nassert solution('1 31 2\\n10 30\\n50 90') == '1 2'\nassert solution('1 31 2\\n20 60\\n10 30\\n50 90') == '0 1'\nassert solution('1 31 2\\n20 60\\n50 90\\n10 30\\n50 90') == '1 2'\nassert solution('1 31 2\\n20 60\\n50 90\\n10 30\\n10 30\\n50 90') == '0 1'\n"
    },
    {
        "number": 3506,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 31 2\n20 60\n50 90''') == '4 3'\nassert solution('''1 31 2\n20 60\n50 90\n20 60\n50 90''') == '2 1'\nassert solution('''1 21 2\n20 60\n50 90\n60 90\n50 90''') == '2 1'\nassert solution('''1 21 2\n20 60\n50 90\n20 60\n50 90\n60 90''') == '2 1'\nassert solution('''1 21 2\n20 60\n50 90\n60 90\n50 90\n40 90\n20 60\n50 90\n60 90\n40 90\n20 60\n50 90\n60 90\n40 90\n60 90\n50 90\n40 90\n20 60\n50 90\n60 90\n50 90\n60 90\n50 90\n40 90\n20 60\n50 90\n60 90\n50 90\n60 90\n60 90\n50 90\n40 90\n20 60\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90\n50 90\n60 90"
    },
    {
        "number": 3506,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 3\n20 60''') == '4 3'\nassert solution('''1 3\n20 60\n50 90\n''') == '0 3'\nassert solution('''3 3\n15 21\n15 17\n15 17\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n15 22\n"
    },
    {
        "number": 3506,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 31 2\n20 60\n50 90''') == '4 3'\nassert solution('''1 30 2\n20 60\n50 90''') == '0 4'\nassert solution('''1 30 2\n20 60\n50 90\n1 31 2\n20 60\n50 90''') == '0 4'\nassert solution('''1 30 2\n20 60\n50 90\n1 29 2\n20 60\n50 90''') == '1 3'\nassert solution('''1 30 2\n20 60\n50 90\n1 29 2\n20 60\n50 90\n1 29 2\n20 60\n50 90\n1 29 2\n20 60\n50 90''') == '1 3'\n"
    },
    {
        "number": 3506,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''20 60\n50 90''') == '4 3'\nassert solution('''1 31 2\n20 60\n50 90''') == '4 3'\nassert solution('''1 50 1\n50 90\n1 30''') == '1 2'\nassert solution('''1 50 1\n50 90\n2 40''') == '1 2'\nassert solution('''1 50 1\n50 90\n3 40''') == '0 1'\n"
    },
    {
        "number": 3507,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2 1') == '3'\nassert solution('8 2 1') == '1'\nassert solution('8 2 3') == '6'\nassert solution('8 2 3 4') == '3'\nassert solution('8 2 3 4 5') == '2'\n"
    },
    {
        "number": 3507,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2 1') == '3'\nassert solution('2 2 3') == '0'\nassert solution('2 2 2') == '2'\nassert solution('2 2 2 3') == '0'\nassert solution('2 2 2 3 3') == '4'\n"
    },
    {
        "number": 3507,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    '2 1 1'\n) == '3'\nassert solution(\n    '1 2 1'\n) == '6'\nassert solution(\n    '2 1 0'\n) == '1'\nassert solution(\n    '2 1 1'\n) == '0'\nassert solution(\n    '1 2 0'\n) == '2'\n"
    },
    {
        "number": 3507,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == '0'\nassert solution('0 0 0') == '0'\nassert solution('1 1 0') == '0'\nassert solution('1 1 1') == '0'\nassert solution('2 1 2') == '4'\n"
    },
    {
        "number": 3507,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3507,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2 1') == 3\nassert solution('2 2 2') == 0\nassert solution('2 2 3') == 3\nassert solution('2 2 3 4') == 4\nassert solution('2 2 3 4 5') == 5\n"
    },
    {
        "number": 3507,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n2 2 1\n\"\"\"\n) == '3'\n\nassert solution(\n\"\"\"\n5 4 1\n\"\"\"\n) == '6'\n\nassert solution(\n\"\"\"\n5 4 4\n\"\"\"\n) == '1'\n"
    },
    {
        "number": 3507,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 3\n"
    },
    {
        "number": 3507,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 2 1') == '3'\nassert solution('2 2 2') == '6'\nassert solution('5 10 2') == '1'\nassert solution('8 15 2') == '2'\nassert solution('3 2 3') == '3'\n"
    },
    {
        "number": 3507,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n'''"
    },
    {
        "number": 3508,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1341 2412 1200 3112 2391''') == '3 1'\nassert solution('''6\n1341 2412 1200 3112 2391\n2801 7033 1342 9499 2412''') == '1 1'\nassert solution('''100\n2051 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1''') == '100 4'\nassert solution('''1\n1''') == '0 0'\nassert solution('''2\n100 100''') == '0 0'\n"
    },
    {
        "number": 3508,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"5\n1341 2412 1200 3112 2391\n\"\"\") == \"3 1\"\n\nassert solution(\n\"\"\"3\n10\n15\n17\n19\n\"\"\") == \"2 3\"\n\nassert solution(\n\"\"\"6\n19\n1 3 11 5 15 9\n\"\"\") == \"3 1\"\n\nassert solution(\n\"\"\"6\n100\n1 3 11 5 15 9\n\"\"\") == \"5 3\"\n\nassert solution(\n\"\"\"6\n100\n1 3 11 5 15 9\n\"\"\") == \"5 3\""
    },
    {
        "number": 3508,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n1341 2412 1200 3112 2391''') == '3 1'\n'''\n\nimport sys\nfrom collections import deque"
    },
    {
        "number": 3508,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n1341 2412 1200 3112 2391''') == '3 1'\nassert solution('''8\n1701 1523 1814 1816 1032 1134 2355\n''') == '4 2'\nassert solution('''8\n1632 1413 1019 2503 2481 2622 2346\n''') == '5 3'\nassert solution('''10\n1413 1019 2503 2481 2622 2346 1701 1523 1814 1816 1032 1134 2355\n''') == '4 3'\nassert solution('''1000\n1632 1413 1019 2503 2481 2622 2346 1701 1523 1814 1816 1032 1134 2355\n''') == '8 0'\n"
    },
    {
        "number": 3508,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n1341 2412 1200 3112 2391''') == '3 1'\nassert solution('''2\n1341 2412''') == '2 0'\nassert solution('''3\n1341 2412''') == '2 2'\nassert solution('''4\n1341 2412''') == '2 2'\nassert solution('''5\n1341 2412''') == '2 2'\n"
    },
    {
        "number": 3508,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"3 1\"\nassert solution(\"1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\") == \"2 2\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"1 1\"\nassert solution(\"2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"1 1\"\nassert solution(\"2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\") == \"1 2\"\n"
    },
    {
        "number": 3508,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"5\n1341 2412 1200 3112 2391\"\"\") == \"\"\"3 1\"\"\"\n\nassert solution(\n\"\"\"10\n12345 2334454 2234 35345345 342345 341234 231234 52345\n\"\"\") == \"\"\"3 2\"\"\"\n\nassert solution(\n\"\"\"100\n123452345 2334454 3234 5343534345 342345 341234 2234 3534534534\n\"\"\") == \"\"\"3 2\"\"\"\n\nassert solution(\n\"\"\"1000\n123452345 2334454 3234 5343534345 342345 341234 2234 3534534534\n\"\"\") == \"\"\"3 2\"\"\"\n\nassert solution(\n\"\"\"10000\n123452345 2334454 3234 5343534345 342345 341234 2234 3534534534\n\"\"\") == \"\"\"3 2\"\"\""
    },
    {
        "number": 3508,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n1341 2412 1200 3112 2391') == '3 1'\nassert solution('10\\n100000') == '2 9'\nassert solution('3\\n1000 2000') == '1 2'\nassert solution('4\\n1000 2000 2000 2000') == '1 2'\nassert solution('4\\n1000 2000 2000 2000 2000') == '1 2'\n"
    },
    {
        "number": 3508,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '1 1'\nassert solution('2\\n9') == '2 2'\nassert solution('3\\n5 8 10') == '3 3'\nassert solution('4\\n11 10 19 19') == '2 2'\nassert solution('5\\n20 15 19 10 17') == '4 2'\n"
    },
    {
        "number": 3508,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n1341 2412 1200 3112 2391''') == '3 1'\nassert solution('''5\n1019 2035 1950 3027 2417''') == '2 2'\nassert solution('''5\n1019 2035 1950 3027 2417''') == '3 2'\nassert solution('''5\n25797 938 484 4993 5903 4912''') == '5 3'\nassert solution('''10\n82349 6510 5897 85327 236760 782079 627457 366078 751075 466698''') == '5 2'\n"
    },
    {
        "number": 3509,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 20\\n3 5') == '6'\nassert solution('10 20\\n3 3\\n1 1 1\\n1 1 2\\n2 1 1\\n2 1 2\\n2 1 3\\n3 1 4\\n3 2 4\\n3 2 5') == '0'\nassert solution('10 10\\n3 4\\n1 2 1\\n1 3 2\\n2 3 4\\n3 1 4\\n3 2 5\\n4 2 4\\n4 3 5\\n5 1 5\\n5 2 5') == '0'\nassert solution('10 10\\n3 4\\n1 2 1\\n1 3 2\\n2 3 4\\n3 1 4\\n3 2 5\\n4 2 4\\n4 3 5\\n5 1 5\\n5 2 5') == '6'\nassert solution('10 10\\n3 4\\n1 2 1\\n1 3 2\\n2 3 4\\n3 1 4\\n3 2 5\\n4 2 4\\n4 3 5\\n5 1 5\\n5 2 5') == '0'\n"
    },
    {
        "number": 3509,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10 20\n3 5\n1 3 7\n2 1 1\n2 3 2\n2 3 5\n3 2 4\n''') == '6'\nassert solution('''10 20\n3 5\n1 2 3\n2 3 4\n2 1 1\n2 3 2\n3 1 1\n''') == '4'\nassert solution('''10 20\n3 5\n1 3 7\n2 1 1\n2 3 2\n2 3 5\n3 2 4\n''') == '4'\nassert solution('''10 20\n3 5\n1 1 1\n2 1 1\n2 3 2\n2 3 5\n3 1 1\n''') == '4'\nassert solution('''10 20\n3 5\n1 3 7\n2 1 1\n2 3 2\n2 3 5\n3 2 4\n''') == '4'\n"
    },
    {
        "number": 3509,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\") == 1\nassert solution(\"1 1\") == 1\nassert solution(\"1 2\") == 2\nassert solution(\"2 2\") == 2\nassert solution(\"2 2 2\") == 3\n"
    },
    {
        "number": 3509,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '6'\n"
    },
    {
        "number": 3509,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n') == '6'\nassert solution('1 5\\n3 2 5\\n4 2 2\\n4 3 4\\n4 1 1\\n5 1 2\\n1 2 3\\n1 3 4\\n1 4 5\\n1 5 6\\n1 6 7\\n2 7 8\\n2 8 9\\n2 9 10\\n3 10 11\\n3 11 12\\n3 12 13\\n3 13 14\\n4 14 15\\n4 15 16\\n4 16 17\\n5 17 18\\n5 18 19\\n5 19 20\\n5 20 21\\n5 21 22\\n5 22 23\\n5 23 24\\n6 24 25\\n6 25 26\\n6 26 27\\n6 27 28\\n6 28 29\\n6 29 30\\n6 30 31\\n6 31 32\\n6 32 33\\n6 33 34\\n6 34 35\\n6 35 36\\n6 36 37\\n6 37 38\\n6 37 39\\n6 37 40\\n6 37 41\\n6 37 42\\n6 37 43\\n6 37 44\\n6 37 45\\n6 37 46\\n6 37 47\\n6 37 48\\n6 37 49\\n6 37 50\\n6 37 51\\n6 37 52\\n6 37 53\\n6 37 54\\n6 37 55\\n6 37 56\\n6 37 57\\n6 37 58\\n6 37 59\\n6 37 60\\n6 37 61\\n6 37 62\\n6 37 63\\n6 37 64\\n6 37 65\\n6 37 66\\n6 37 67\\n6 37 68\\n6 37 69\\n6 37 70\\n6 37 71\\n6 37 72\\n6 37 73\\n6 37 74\\n6 37 75\\n6 37 76\\n6 37 77\\n6 37 78\\n6 37 79\\n6 37 80\\n6 37 81\\n6 37 82\\n6 37 83\\n6 37 84\\n6 37 85\\n6 37 86\\n6 37 87\\n6 37 88\\n6 37 89\\n6 37 90\\n6 37 91\\n6 37 92\\n6 37 93\\n6 37 94\\n6 37 95\\n6 37 96\\n6 37 97\\n6 37 98\\n6 37 99\\n6 38 100\\n6 38 101\\n6 38 102\\n6 38 103\\n6 38 104\\n6 38 105\\n6 38 106\\n6 38 107\\n6 38 108\\n6 38 109\\n6 38 110\\n6 38 111\\n6 38 112\\n6 38 113\\n6 38 114\\n6 38 115\\n6 38 116\\n6 38 117\\n6 38 118\\n6 38 119\\n6 38 120\\n6 38 121\\n6 38 122\\n6 38 123\\n6 38 124\\n6 38 125\\n6 38 126\\n6 38 127\\n6 38 128\\n6 38 129\\n6 38 130\\n6 38 131\\n6 38 132\\n6 38 133\\n6 38 134\\n6 38 135\\n6 38 136\\n6 38 137\\n6 38 138\\n6 38 139\\n6 38 140\\n6 38 141\\n6 38 142\\n6 38 143\\n6 38 144\\n6 38 145\\n6 38 146\\n6 38 147\\n6 38 148\\n6 38 149\\n6 38 150\\n6 38 151\\n6 38 152\\n6 38 153\\n6 38 154\\n6 38 155\\n6 38 156\\n6 38 157\\n6 38 158\\n6 38 159\\n6 38 160\\n6 38 161\\n6 38 162\\n6 38 163\\n6 38 164\\n6 38 165\\n6 38 166\\n6 38 167\\n6 38 168\\n6 38 169\\n6 38 170\\n6 38 171\\n6 38 172\\n6 38 173\\n6 38 174\\n6 38 175\\n6 38 176\\n6 38 177\\n6 38 178\\n6 38 179\\n6 38 180\\n6 38 181\\n6 38 182\\n6 38 183\\n6 38 184\\n6 38 185\\n6 38 186\\n6 38 187\\n6 38 188\\n6 38 189\\n6 38 190\\n6 38 191\\n6 38 192\\n6 38 193\\n6 38 194\\n6 38 195\\n6 38 196\\n6 38 197\\n6 38 198\\n6 38 199\\n6 38 200\\n6 38 201\\n6 38 202\\n6 38 203\\n6 38 204\\n6 38 205\\n6 38 206\\n6 38 207\\n6 38 208\\n6 38 209\\n6 38 210\\n6 38 211\\n6 38 212\\n6 38 213\\n6 38 214\\n6 38 215\\n6 38 216\\n6 38 217\\n6 38 218\\n6 38 219\\n6 38 220\\n6 38 221\\n6 38 222\\n6 38 223\\n6 38 224\\n6 38 225\\n6 38 226\\n6 38 227\\n6"
    },
    {
        "number": 3509,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10 20\n3 5\n1 3 7\n2 1 1\n2 3 2\n2 3 5\n3 2 4\n''') == '6'\n\nassert solution('''10 10\n2 3 2\n2 1 1\n2 3 2\n2 3 5\n3 2 4\n''') == '3'\n\nassert solution('''10 100\n3 5\n1 3 7\n2 1 1\n2 3 2\n2 3 5\n3 2 4\n''') == '3'\n'''\n"
    },
    {
        "number": 3509,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"10 20\") == \"6\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"10 10\") == \"0\"\nassert solution(\"3 5\") == \"2\"\nassert solution(\"2 1\") == \"0\"\n"
    },
    {
        "number": 3509,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10 20''') == '6'\nassert solution('''5 10''') == '5'\nassert solution('''10 15''') == '5'\nassert solution('''15 15''') == '6'\nassert solution('''15 15''') == '6'\n"
    },
    {
        "number": 3509,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10 20') == '6'\nassert solution('10 20') == '6'\nassert solution('10 100') == '60'\nassert solution('1 10') == '10'\nassert solution('10 1') == '10'\n"
    },
    {
        "number": 3509,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"10 20\") == \"6\"\nassert solution(\"5 7\") == \"8\"\nassert solution(\"1 2 1\") == \"3\"\nassert solution(\"1 1 1\") == \"2\"\nassert solution(\"1 1 1\") == \"1\"\n"
    },
    {
        "number": 3510,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\\n2 ab b\\n1 b\\n\") == \"0 1\"\nassert solution(\"2\\n2 ab b\\n1 b\\n\") == \"0 1\"\nassert solution(\"5\\n1 a b c d\\na c\\n1 b\\n\") == \"0 1\"\nassert solution(\"6\\n1 a b c d e f\\na c\\n1 b\\n\") == \"0 1\"\nassert solution(\"7\\n1 a b c d e f g\\na c\\n1 b\\n\") == \"0 1\"\n"
    },
    {
        "number": 3510,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\n2 ab b\n1 b\n''') == '0 1'\nassert solution('''2\n2 ab\n1 b\n''') == '-1 0'\nassert solution('''2\n2 ab\n1 b\n''') == '0 -1'\nassert solution('''2\n2 ab\n1 ab\n''') == '-1 -1'\nassert solution('''2\n2 ab\n1 ab\n''') == '0 1'\n"
    },
    {
        "number": 3510,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n2\n2 ab b\n1 b\n''') == '0 1\\n-1 0'\n\nassert solution('''\n3\n2 ab ab\n1 b\n1 ab\n1 ab\n2 ab\n1 ab\n1 b\n''') == '0 -1'\n\nassert solution('''\n10\n2 a1 a2 a3 a4 a5 a6 a7 a8 a9 ab\n1 a2 a3\n1 b\n1 c\n1 d\n1 e\n1 f\n1 g\n1 h\n1 i\n1 j\n1 k\n1 l\n1 m\n1 n\n1 o\n1 p\n1 q\n1 r\n1 s\n1 t\n1 u\n1 v\n1 w\n1 x\n1 y\n1 z\n''') == '0 6'\n\nassert solution('''\n10\n3 a1 a2 a3 a4 a5 a6 a7 a8 a9 ab\n1 a2\n1 b\n1 c\n1 d\n1 e\n1 f\n1 g\n1 h\n1 i\n1 j\n1 k\n1 l\n1 m\n1 n\n1 o\n1 p\n1 q\n1 r\n1 s\n1 t\n1 u\n1 v\n1 w\n1 x\n1 y\n1 z\n''') == '0 -1'\n\nassert solution('''\n10\n3 a1 a2 a3 a4 a5 a6 a7 a8 a9 ab\n1 a2\n1 b\n1 c\n1 d\n1 e\n1 f\n1 g\n1 h\n1 i\n1 j\n1 k\n1 l\n1 m\n1 n\n1 o\n1 p\n1 q\n1 r\n1 s\n1 t\n1 u\n1 v\n1 w\n1 x\n1 y\n1 z\n''') == '0 3'"
    },
    {
        "number": 3510,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2ab\") == \"0 1\"\nassert solution(\"1b\") == \"-1 0\"\nassert solution(\"2ab 2b\") == \"0 1\"\nassert solution(\"2ab 2b 2a\") == \"0 -1\"\n"
    },
    {
        "number": 3510,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n1\n2 ab ab\n1 b\n\"\"\"\n) == \"\"\"\n0 1 \n-1 0\n\"\"\"\nassert solution(\n\"\"\"\n1\n2 ab ab\n1 b\n\"\"\"\n) == \"\"\"\n0 1 \n-1 0\n\"\"\"\nassert solution(\n\"\"\"\n1\n2 ab ab\n1 b\n\"\"\"\n) == \"\"\"\n0 1 \n-1 0\n\"\"\"\nassert solution(\n\"\"\"\n2\n2 ab ab\n1 b\n\"\"\"\n) == \"\"\"\n0 1 \n-1 0\n\"\"\"\nassert solution(\n\"\"\"\n3\n2 ab ab\n1 b\n\"\"\"\n) == \"\"\"\n0 1 \n-1 0\n\"\"\"\n"
    },
    {
        "number": 3510,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n2 ab b\\n1 b') == '0 1\\n-1 0'\n\n-----Note-----\nYou can assume that Alice and Bob will play optimally.\n\n\"\"\"\n\nfrom collections import Counter\n"
    },
    {
        "number": 3510,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n2 ab b\\n1 b') == '0 1\\n-1 0'\n\"\"\"\n\nclass Node:\n    def __init__(self, name, id, parent):\n        self.name = name\n        self.id = id\n        self.parent = parent"
    },
    {
        "number": 3510,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2 1\") == \"\"\nassert solution(\"2 ab b\") == \"\"\n"
    },
    {
        "number": 3510,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('\\n2\\n2 ab b\\n1 b\\n') == '0 1'\nassert solution('\\n2\\n2 ab b\\n1 b\\n') == '0 1'\nassert solution('\\n2\\n2 ab c\\n1 b\\n1 c\\n') == '0 1'\nassert solution('\\n2\\n2 ab c\\n1 b\\n1 c\\n') == '-1 0'\nassert solution('\\n2\\n2 ab c\\n1 b\\n1 c\\n') == '-1 0'\n"
    },
    {
        "number": 3510,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2') == '0 1'\nassert solution('1 3') == '-1 0'\nassert solution('1 3 4') == '0 1'\nassert solution('1 2 3 4') == '-1 0'\nassert solution('1 2 3') == '-1 0'\n"
    },
    {
        "number": 3511,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 4\n1 1 2\n2\n1 1 2\n2''') == '1\\n3'\nassert solution('''5 2\n1 1 2\n2\n1 1 2\n2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1"
    },
    {
        "number": 3511,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n2 4\n1 1 2\n2\n1 1 2\n2\n\"\"\"\n) == \"\"\"\n1\n3\n\"\"\"\n\nassert solution(\n\"\"\"\n5 5\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n\"\"\"\n) == \"\"\"\n1\n4\n\"\"\"\n\nassert solution(\n\"\"\"\n5 5\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n\"\"\"\n) == \"\"\"\n1\n6\n\"\"\"\n\nassert solution(\n\"\"\"\n2 2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n\"\"\"\n) == \"\"\"\n1\n2\n\"\"\"\n\nassert solution(\n\"\"\"\n2 2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2"
    },
    {
        "number": 3511,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2\\n1 1 2') == '1\\n3'\nassert solution('2 4\\n1 1 2\\n2') == '1\\n3'\nassert solution('2 4\\n1 1 2\\n2\\n1 1 2') == '1\\n3'\nassert solution('2 4\\n1 1 2\\n2\\n1 1 2\\n2') == '1\\n3'\nassert solution('2 4\\n1 1 2\\n2\\n1 1 2\\n2\\n1 1 2') == '1\\n3'\n"
    },
    {
        "number": 3511,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1 2\\n2\\n1 1 2') == '1\\n3'\nassert solution('2 4\\n1 1 2\\n2') == '1\\n3'\nassert solution('2 4\\n1 1 2\\n2\\n1 1 2') == '1\\n3'\nassert solution('2 4\\n1 1 2\\n2\\n1 1 2\\n2\\n1 1 2') == '1\\n3'\nassert solution('2 4\\n1 1 2\\n2\\n1 1 2\\n2\\n1 1 2\\n2\\n1 1 2') == '1\\n3'\n"
    },
    {
        "number": 3511,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 4\n1 1 2\n2\n1 1 2\n2''') == '1\\n3'\nassert solution('''2 4\n1 1 2\n2\n1 1 2\n2\n1 1 4\n2\n1 1 2\n2\n1 1 2\n2''') == '1\\n4'\nassert solution('''2 4\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 4\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n"
    },
    {
        "number": 3511,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1\\n1') == '1'\nassert solution('2\\n1\\n1\\n1') == '1'\nassert solution('2\\n1\\n1\\n1') == '1'\nassert solution('2\\n1\\n1\\n1') == '1'\nassert solution('2\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 3511,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 4\n1 1 2\n2''') == '1\\n3'\nassert solution('''3 3\n1 1 1\n1 2 2\n2\n2 1 2\n1\n1 2''') == '0.333333333\\n0.333333333\\n0.333333333\\n0.333333333'\nassert solution('''4 4\n1 1 1 1\n1 2 2 2\n2\n2 1 2\n1\n1 2''') == '1\\n3\\n1\\n0.33333333333'\nassert solution('''3 3\n1 2 2\n2\n1 2\n2\n1 2''') == '0.33333333333\\n0.33333333333\\n0.33333333333'\n'''\n\n'''\n"
    },
    {
        "number": 3511,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n1 1 2\\n2\\n1 1 2\") == \"1\"\nassert solution(\"2 2\\n1 1 2\\n2\\n1 1 2\") == \"3\"\nassert solution(\"2 2\\n1 1 2\\n2\\n1 1 2\") == \"5\"\nassert solution(\"2 2\\n1 1 2\\n2\\n1 1 2\") == \"5\"\nassert solution(\"2 2\\n1 1 2\\n2\\n1 1 2\") == \"5\"\n"
    },
    {
        "number": 3511,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 4\n1 1 2\n2\n1 1 2\n2''') == '1\\n3'\nassert solution('''2 4\n1 1 2\n2\n1 1 2\n2''') == '1\\n3'\nassert solution('''1 3\n1\n1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2"
    },
    {
        "number": 3511,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 3\n1 1 2\n2''') == '3'\nassert solution('''2 4\n1 1 2\n2\n1 1 2\n2\n1 1 2''') == '1'\nassert solution('''4 3\n1 1 2\n2\n1 1 2\n2\n1 1 2''') == '2'\nassert solution('''6 4\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2''') == '8'\nassert solution('''8 5\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2''') == '-7'\n"
    },
    {
        "number": 3512,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1 2 3') == '4'\nassert solution('2\\n0 1 2\\n1 1 3') == '2'\nassert solution('3\\n1 2 3\\n0 1 2') == '2'\nassert solution('3\\n1 2 3\\n0 1 3') == '1'\nassert solution('4\\n1 2 3 4\\n1 2 1 3\\n0 1 2 3') == '1'\n"
    },
    {
        "number": 3512,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0 5 2\\n5 0 4\\n2 4 0\") == \"7\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 4711 472 4722 473 4734 474 475 4746 477 4768 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 606 607 609 608 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772 773 774 775 776 777 778 779 780 781 782 783 784 785 786 787 788 789 790 791 792 793 794 795 796 797 798 799 800 801 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 862 863 864 865 866 867 868 869 870 871 872 873 874 875 876 877 878 879 880 881 882 883 884 885 886 887 888 889 890 891 892 893 894 895 896 897 898 899 900 901 902 903 904 905 906 907 908 909 910 911 912 913 914 915 916 917 918 919 920 921 922 923 924 925 926 927 928 929 930 931 932 933 934 935 936 937 938 939 940 941 942 943 944 945 946 947 948 949 950 951 952 953 954 955 956 957 958 959 960 961 962 963 964 965 966 967 968 969 970 971 972 973 974 975 976 977 978 979 980 981 982 983 984 985 986 987 988 989 990 991 992 993 994 995 996 997 998 999 999 1000\"\n"
    },
    {
        "number": 3512,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''0 5 2\n5 0 4\n2 4 0''') == '7'\nassert solution('''3\n0 5 2\n5 0 4\n2 4 0''') == '7'\nassert solution('''4\n0 3 2\n3 0 4\n2 3 0\n4 0 1''') == '6'\nassert solution('''5\n0 2 3 4 5\n2 0 4 3 5\n3 4 0 2 5\n4 5 0 3 2\n5 2 0 4 3''') == '6'\nassert solution('''6\n0 4 5 6 7\n4 0 5 6 7\n5 6 0 4 7\n6 7 0 4 5\n7 5 6 0 4\n6 4 0 5 7''') == '10'\n"
    },
    {
        "number": 3512,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(open(\"test_input\").read()) == \"9\"\nassert solution(open(\"test2_input\").read()) == \"9\"\nassert solution(open(\"test3_input\").read()) == \"11\"\n\n-----\nWe have already done the first testcase, so let's look at the second one:\n\n0 5 2\n5 0 4\n2 4 0\n\nSince the minimum possible flight duration is equal to the sum of the last two cities, let's say we start from the city labeled 0:\n\nmin flight duration = 0 + 0 + 2\n\nSince it's impossible to travel from city 0 to the last two cities, we know that our solution is impossible.\n\nWe'll be left with one city labeled 1:\n\nmin flight duration = 0 + 0 + 4\n\nSince we can only travel to the last two cities, we know that our solution is impossible.\n\nLet's move to the city labeled 2:\n\nmin flight duration = 0 + 4 + 0\n\nSince we can travel to the last two cities, we know that our solution is still not possible.\n\nLet's try to move to the last city labeled 3:\n\nmin flight duration = 0 + 4 + 0\n\nSince we can travel to the last two cities, we know that our solution is still not possible.\n\nWe have to move to the last city labeled 4:\n\nmin flight duration = 0 + 4 + 0\n\nSince we can travel to the last two cities, we know that our solution is still not possible.\n\n\"\"\"\n\nN = int(input())\n\nflights = [list(map(int, input().split())) for i in range(N)]\n\nmin_cost = 0"
    },
    {
        "number": 3512,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 5 2') == '7'\nassert solution('5 0 4') == '7'\nassert solution('2 4 0') == '7'\nassert solution('5 5 5') == '0'\nassert solution
    },
    {
        "number": 3512,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0\\n5\\n2') == '7'\nassert solution('0\\n0\\n2') == '2'\nassert solution('0\\n10\\n9\\n8\\n7') == '26'\nassert solution('0\\n2\\n3') == '2'\nassert solution('0\\n1\\n2\\n3') == '3'\n"
    },
    {
        "number": 3512,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 5 2\\n5 0 4\\n2 4 0\\n') == '7'\nassert solution('3\\n0 5 2\\n5 0 4\\n2 4 0\\n') == '7'\nassert solution('3\\n0 1 2\\n1 0 1\\n2 0 0\\n') == '2'\nassert solution('3\\n0 1 2\\n1 0 1\\n2 0 0\\n') == '3'\nassert solution('3\\n0 1 2\\n1 0 1\\n2 0 0\\n') == '3'\n"
    },
    {
        "number": 3512,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0 5 2\\n5 0 4\\n2 4 0\") == \"7\"\n\"\"\"\n\nfrom __future__ import annotations"
    },
    {
        "number": 3512,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n0 5 2\n5 0 4\n2 4 0''') == '7'\nassert solution('''3\n0 5 2\n5 0 4\n2 4 0''') == '7'\nassert solution('''2\n0 1\n1 0''') == '1'\nassert solution('''2\n0 1\n2 0''') == '1'\nassert solution('''4\n0 1 2 3\n1 0 3 2\n2 3 0 1\n3 0 2 1''') == '8'\n"
    },
    {
        "number": 3512,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''0 5 2\n5 0 4\n2 4 0''') == '7'\nassert solution('''0 5 2\n0 2 2\n0 1 1\n1 1 2''') == '2'\nassert solution('''0 5 2\n0 2 3\n0 1 5\n1 2 0\n2 1 0\n3 2 0\n2 3 3\n2 3 1''') == '2'\nassert solution('''0 5 2\n0 2 3\n0 1 5\n1 1 2\n2 1 0\n3 2 0\n2 3 3\n2 3 1''') == '2'\nassert solution('''0 5 2\n0 2 1\n0 1 5\n1 1 2\n2 1 0\n3 2 0\n2 3 3\n2 3 1''') == '2'\n"
    },
    {
        "number": 3513,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(1099511627776) == '8'\nassert solution(469) == '5'\nassert solution(7) == '1'\nassert solution(68) == '0'\nassert solution(150) == '2'\n"
    },
    {
        "number": 3513,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == 8\n\n\"\"\"\n"
    },
    {
        "number": 3513,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"8\"\n\"\"\"\nfrom typing import List\n\nX = int(input())\n"
    },
    {
        "number": 3513,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1099511627776') == 8\nassert solution('1380314') == 4\nassert solution('10000000000000000') == 2\nassert solution('10000000000000000000') == 3\nassert solution('1000000000000000000') == 5\n"
    },
    {
        "number": 3513,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n\n\"$(x) = (x - 1) \\times (x - 2) \\times... \\times (x - k + 1)$\"\n\"$(x) = \\sum_{i = 1}^{k} \\left(x - i + 1 \\right) \\times (x - i + 2) \\times... \\times (x - i + k)$\"\n\"$(x) = x \\times (x - 1) \\times (x - 2) \\times... \\times (x - k + 1)$\"\n\"$(x) = \\sum_{i = 1}^{k} i \\times (x - i + 1) \\times (x - i + 2) \\times... \\times (x - i + k)$\"\n\n\"$(x) = x(x - 1) \\times (x - 2) \\times... \\times (x - k + 1)$\"\n\"$(x) = \\sum_{i = 1}^{k} i \\times (x - i + 1) \\times (x - i + 2) \\times... \\times (x - i + k)$\"\n\"$(x) = \\sum_{i = 1}^{k} \\left(x - i + 1 \\right) \\times (x - i + 2) \\times... \\times (x - i + k)$\"\n\"$(x) = \\sum_{i = 1}^{k} \\left(x - i + 1 \\right) \\times (x - i + 2) \\times... \\times (x - i + k)$\"\n\n\"$(x) = x(x - 1) \\times (x - 2) \\times... \\times (x - k + 1)$\"\n\"$(x) = \\sum_{i = 1}^{k} i \\times (x - i + 1) \\times (x - i + 2) \\times... \\times (x - i + k)$\"\n\"$(x) = \\sum_{i = 1}^{k} \\left(x - i + 1 \\right) \\times (x - i + 2) \\times... \\times (x - i + k)$\"\n\"$(x) = \\sum_{i = 1}^{k} \\left(x - i + 1 \\right) \\times (x - i + 2) \\times... \\times (x - i + k)$\"\n\n\"$(x) = x(x - 1) \\times (x - 2) \\times... \\times (x - k + 1)$\"\n\"$(x) = \\sum_{i = 1}^{k} i \\times (x - i + 1) \\times (x - i + 2) \\times... \\times (x - i + k)$\"\n\"$(x) = \\sum_{i = 1}^{k} \\left(x - i + 1 \\right) \\times (x - i + 2) \\times... \\times (x - i + k)$\"\n\"$(x) = \\sum_{i = 1}^{k} \\left(x - i + 1 \\right) \\times (x - i + 2) \\times... \\times (x - i + k)$\"\n\n\"$(x) = x(x - 1) \\times (x - 2) \\times... \\times (x - k + 1)$\"\n\"$(x) = \\sum_{i = 1}^{k} i \\times (x - i + 1) \\times (x - i + 2) \\times... \\times (x - i + k)$\"\n\"$(x) = \\sum_{i = 1}^{k} \\left(x - i + 1 \\right) \\times (x - i + 2) \\times... \\times (x - i + k)$\"\n\"$(x) = \\sum_{i = 1}^{k} \\left(x - i + 1 \\right) \\times (x - i + 2) \\times... \\times (x - i + k)$\"\n\n\"$(x) = x(x - 1) \\times (x - 2) \\times... \\times (x - k + 1)$\"\n\"$(x) = \\sum_{i = 1}^{k} i \\times (x - i + 1) \\times (x - i + 2) \\times... \\times (x - i + k)$\"\n\"$(x) = \\sum_{i = 1}^{k} \\left(x - i + 1 \\right) \\times (x - i + 2) \\times... \\times (x - i + k)$\"\n\"$(x) = \\sum_{i = 1}^{k} \\left(x - i + 1 \\right) \\times (x - i + 2) \\times... \\times (x - i + k)$\"\n\n\"$(x) = x(x - 1) \\times (x - 2) \\times... \\times (x - k + 1)$\"\n\"$(x) = \\sum_{i = 1}^{k} i \\times (x - i + 1) \\times (x - i + 2) \\times... \\times (x - i + k)$\"\n\"$(x) = \\sum_{i = 1}^{k} \\left(x - i + 1 \\right) \\times (x - i + 2) \\times... \\times (x - i + k)$\"\n\"$(x) = \\sum_{i = 1}^{k} \\left(x - i + 1 \\right) \\times (x - i + 2) \\times... \\times (x - i + k)$\"\n\n\"$(x) = x(x - 1) \\times (x - 2) \\times... \\times (x - k + 1)$\"\n\"$(x) = \\sum_{i = 1}^{k} i \\times (x - i + 1) \\times (x - i + 2) \\times... \\times (x - i + k)$\"\n\"$(x) = \\sum_{i = 1}^{k} \\left(x - i + 1 \\right) \\times (x - i + 2) \\times... \\times (x - i + k)$\"\n\"$(x) = \\sum_{i = 1}^{k} \\left(x - i + 1 \\right) \\times (x - i + 2) \\times... \\times (x - i + k)$\"\n\n\"$(x) = x(x - 1) \\times (x - 2) \\times... \\times (x - k + 1)$\"\n\"$(x) = \\sum_{i = 1}^{k} i \\times (x - i + 1) \\times (x - i + 2) \\times... \\times (x - i + k)$\"\n\"$(x) = \\sum_{i = 1}^{k} \\left(x - i + 1 \\right) \\times (x - i + 2) \\times... \\times (x - i + k)$\"\n\"$(x) = \\sum_{i = 1}^{k} \\left(x - i + 1 \\right) \\times (x - i + 2) \\times... \\times (x - i + k)$\"\n\n\"$(x) = x(x - 1) \\times (x - 2) \\times... \\times (x - k + 1)$\"\n\"$(x) = \\sum_{i = 1}^{k} i \\times (x - i + 1) \\times (x - i + 2) \\times... \\times (x - i + k)$\"\n\"$(x) = \\sum_{i = 1}^{k} \\left(x - i + 1 \\right) \\times (x - i + 2) \\times... \\times (x - i + k)$\"\n\"$(x) = \\sum_{i = 1}^{k}"
    },
    {
        "number": 3513,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1099511627776''') == '8'\nassert solution('''5''') == '2'\nassert solution('''20''') == '4'\nassert solution
    },
    {
        "number": 3513,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') is None\nassert solution('X') == 0\nassert solution('XXXXX') == 0\nassert solution('1000000000') == 0\nassert solution('9998978848') == 0\n"
    },
    {
        "number": 3513,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1099511627776') == '8'\nassert solution('10998') == '10'\nassert solution('1000000000') == '1'\nassert solution('900000000') == '9'\nassert solution('100010000') == '10'\n"
    },
    {
        "number": 3513,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(sample_input) == '8'\nassert solution('1099511627776') == '8'\nassert solution('1000000000') == '7'\nassert solution('999000000') == '7'\nassert solution('100') == '0'\n"
    },
    {
        "number": 3513,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(1099511627776) == '8'\nassert solution(6876393936) == '7'\nassert solution(13195222053) == '4'\nassert solution(79198217098) == '2'\nassert solution(85861534389) == '0'\n"
    },
    {
        "number": 3514,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n'''"
    },
    {
        "number": 3514,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"3 4\") == \"2\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"3 3\") == \"2\"\n"
    },
    {
        "number": 3514,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\"\n\n\"\n\nprint(solution(stdin))\n"
    },
    {
        "number": 3514,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3 3\nx..\n.x.\nx.x\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3 3\nx..\n.x.\nxx.x\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4 4\nxxxxx\nxxxxx\nxxxxx\nxxxxx\n\"\"\") == \"4\"\nassert solution(\"\"\"\n5 5\nx..\n.x.\nx.x\nxxxx\nxxxx\nx..\n\"\"\") == \"4\"\nassert solution(\"\"\"\n6 6\nxx.xx.xx\nxx.xx.xx\nxxxxx.xx\nxx.xx.xx\nxxxxx.xx\nxxxxx.xx\n\"\"\") == \"6\"\n"
    },
    {
        "number": 3514,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 3\nx..\n.x.\nx.x''') == '2'\nassert solution('''2 2\nx.\nx''') == '1'\nassert solution('''3 2\nxx\nx''') == '1'\nassert solution('''3 3\n.x.\nx.x\nx.x''') == '2'\nassert solution('''3 4\nxx\nx.\nx.\n.x''') == '2'\n"
    },
    {
        "number": 3514,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') is None\nassert solution('1\\n1\\n1') == ''\nassert solution('2\\n1\\n1') == ''\nassert solution('2\\n2\\n2') == ''\nassert solution('1\\n1\\n1\\n2\\n1\\n1\\n1') == '2'\n"
    },
    {
        "number": 3514,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"2 3\") == \"0\"\nassert solution(\"2 3\") == \"0\"\nassert solution(\"3 1\") == \"0\"\n"
    },
    {
        "number": 3514,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n.x.\\nx.x\\n\") == 2\nassert solution(\"3 3\\n..x\\nx.x\\n.x.x\\n\") == 2\nassert solution(\"3 3\\n..x\\nx.x\\nx.x\\n\") == 3\nassert solution(\"3 3\\nx..\\nx.x\\n.x.x\\n\") == 1\nassert solution(\"3 3\\nx..\\nx.x\\nx.x\\n\") == 0\n"
    },
    {
        "number": 3514,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin[2:10]\nassert solution(stdin) == stdin[2:10]\nassert solution(stdin) == stdin[2:10]\nassert solution(stdin) == stdin[2:10]\nassert solution(stdin) == stdin[2:10]\n"
    },
    {
        "number": 3514,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n3 3\nx..\n.x.\nx.x\n''') == '2'\nassert solution('''\n3 4\nx..\n.x.\n.x.\nx.x\n''') == '4'\nassert solution('''\n3 3\nx..\n.x.\nx.x\n''') == '2'\nassert solution('''\n3 5\nx..\n.x.\n.x.\nx.x\n''') == '3'\nassert solution('''\n5 3\nx..\n.x.\n.x.\nx.x\n''') == '2'\n"
    },
    {
        "number": 3515,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n1 2 2\\n2 3 3') == '2\\n1\\n-1'\nassert solution('2\\n1 2 2\\n2 3 3') == '2\\n1\\n-1'\nassert solution('2\\n1 3 2\\n2 4 2\\n3 0 0\\n4 2 4\\n5 3 0') == '6\\n5\\n2'\nassert solution('2\\n1 3 2\\n2 4 2\\n3 0 0\\n4 2 4\\n5 3 0\\n6 4 2') == '6\\n5\\n2'\nassert solution('3\\n1 1 1\\n2 2 2\\n3 3 3') == '2\\n2\\n0'\n"
    },
    {
        "number": 3515,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50') == '1 2 3 4 5'\nassert solution('3\\n2\\n1\\n3\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\"
    },
    {
        "number": 3515,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3515,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n1 3 2\n2 5 2\n3 0 0\n4 2 4\n5 3 0''') == '9\\n-1\\n5\\n6'\nassert solution('''5\n1 5\n5 1\n5 1\n1 3\n3 2\n2 5''') == '9\\n-1\\n5\\n6'\nassert solution('''5\n1 3\n1 3\n1 3\n1 3\n1 3''') == '-1\\n-1\\n-1\\n-1\\n-1'\nassert solution('''5\n1 2\n1 2\n1 2\n1 2\n1 2''') == '9\\n9\\n9\\n9\\n9'\nassert solution('''5\n1 3\n1 2\n1 3\n1 2\n1 3''') == '9\\n-1\\n9\\n9\\n9'\n"
    },
    {
        "number": 3515,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n3\\n2\") == \"9\"\nassert solution(\"1\\n3\\n2\\n4\\n2\") == \"9\\n-1\\n5\\n6\"\nassert solution(\"1\\n3\\n2\\n4\\n2\\n5\\n3\") == \"9\\n-1\\n5\\n6\"\nassert solution(\"1\\n3\\n2\\n4\\n2\\n5\\n3\\n5\\n6\") == \"9\\n-1\\n5\\n6\"\n"
    },
    {
        "number": 3515,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\""
    },
    {
        "number": 3515,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == '9'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50') == '-1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '-1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\"
    },
    {
        "number": 3515,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3515,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n1 3 2\n2 5 2\n3 0 0\n4 2 4\n5 3 0\n''') == '9\\n-1\\n5\\n6'\nassert solution('''6\n1 4 2\n2 4 2\n3 0 0\n4 2 4\n5 3 0\n6 5 2\n''') == '4\\n-1\\n7\\n8'\nassert solution('''8\n1 6 2\n2 5 2\n3 0 0\n4 2 4\n5 3 0\n6 5 2\n7 4 3\n8 6 4\n''') == '6\\n-1\\n8\\n9'\nassert solution('''11\n1 6 2\n2 5 2\n3 0 0\n4 2 4\n5 3 0\n6 5 2\n7 4 3\n8 6 4\n9 5 3\n10 7 5\n11 8 7\n''') == '6\\n-1\\n9\\n10'\nassert solution('''12\n1 6 2\n2 5 2\n3 0 0\n4 2 4\n5 3 0\n6 5 2\n7 4 3\n8 6 4\n9 5 3\n10 7 5\n11 8 7\n12 9 6\n''') == '7\\n-1\\n8\\n9'\n"
    },
    {
        "number": 3515,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 3 2\n2 5 2\n3 0 0\n4 2 4\n5 3 0''') == '9'\nassert solution('''5\n1 3 2\n2 5 2\n3 0 0\n4 2 4\n5 3 0''') == '-1'\nassert solution('''1\n1 1 1\n2 2 2\n3 3 3\n4 4 4\n5 5 5''') == '3'\nassert solution('''5\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n5 5 5''') == '2'\n"
    },
    {
        "number": 3516,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(INPUT))\n\nassert solution(SAMPLE_INPUT2) == SAMPLE_OUTPUT2\nprint(solution(INPUT2))\n\nassert solution(SAMPLE_INPUT3) == SAMPLE_OUTPUT3\nprint(solution(INPUT3))\n\"\"\"\n\nimport sys\nfrom typing import List\n\nMAX_N = 2500"
    },
    {
        "number": 3516,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20''') == '91'\nassert solution('''1\n0 1 42''') == '42'\nassert solution('''2\n1 1 42\n1 1 39''') == '42'\nassert solution('''3\n2 2 10 20 30 40\n3 1 30 30 30 10\n1 1 42\n1 1 39''') == '42'\nassert solution('''4\n1 1 42\n1 1 39\n1 1 19\n1 1 10\n1 1 8\n1 1 4\n1 1 2\n1 1 1\n1 1 1\n1 1 1\n1 1 1''') == '42'\n'''\n'''\n"
    },
    {
        "number": 3516,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(open(\"input.txt\").read()))\n"
    },
    {
        "number": 3516,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"91\"\nassert solution(\"2\") == \"100\"\nassert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"25\"\nassert solution(\"5\") == \"170\"\n"
    },
    {
        "number": 3516,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20''') == \"91\"\nassert solution('''3\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20''') == \"91\"\nassert solution('''5\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n4 1 15 40 30 20\n3 1 40 30 20 10\nSample Output:\n95\n''') == \"95\"\nassert solution('''5\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n4 1 15 40 30 20\n3 1 40 30 20 10\nSample Output:\n52\n''') == \"52\"\nassert solution('''10\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n4 1 15 40 30 20\n3 1 40 30 20 10\n6 1 40 30 20 10\n7 1 40 30 20 10\n8 1 40 30 20 10\n9 1 40 30 20 10\n10 1 40 30 20 10\nSample Output:\n92\n''') == \"92\"\n'''\n    c = Counter(stdin.split('\\n'))\n    n = int(c['n'])\n    print(n)\n    print(n + 1)\n    l = [list(map(int, stdin.split('\\n')[i].split())) for i in range(n)]\n    print(l)\n    m = [list(map(int, stdin.split('\\n')[i].split())) for i in range(n, n + n)]\n    print(m)\n    p = [list(map(int, stdin.split('\\n')[i].split())) for i in range(n, n + n)]\n    print(p)\n    print(c)\n    #max_q = int(c['max_q'])\n    #q = int(c['q'])\n    #max_s = int(c['max_s'])\n    #s = int(c['s'])\n    #max_a = int(c['max_a'])\n    #a = int(c['a'])\n    #max_a_s = int(c['max_a_s'])\n    #a_s = int(c['a_s'])\n    #max_a_q = int(c['max_a_q'])\n    #a_q = int(c['a_q'])\n    #max_a_s_q = int(c['max_a_s_q'])\n    #a_s_q = int(c['a_s_q'])\n    #max_a_s_q_s = int(c['max_a_s_q_s'])\n    #a_s_q_s = int(c['a_s_q_s'])\n    #print(max_q)\n    #print(q)\n    #print(max_s)\n    #print(s)\n    #print(max_a)\n    #print(a)\n    #print(max_a_s)\n    #print(a_s)\n    #print(max_a_q)\n    #print(a_q)\n    #print(max_a_s_q)\n    #print(a_s_q)\n    #print(max_a_s_q_s)\n    #print(a_s_q_s)\n    #print(max_a_s_q_s_s)\n    #print(a_s_q_s_s)\n    l.sort(key = lambda x: x[0], reverse = True)\n    m.sort(key = lambda x: x[0], reverse = True)\n    p.sort(key = lambda x: x[0], reverse = True)\n    l_s = [x[1] for x in l]\n    l_s = [x for x in l_s if x!= 0]\n    m_s = [x[1] for x in m]\n    m_s = [x for x in m_s if x!= 0]\n    p_s = [x[1] for x in p]\n    p_s = [x for x in p_s if x!= 0]\n    s_s = [0] * (n + 1)\n    for i in range(n):\n        if l[i][1]!= 0:\n            s_s[l[i][1] - 1] = l_s[i]\n        if m[i][1]!= 0:\n            s_s[m[i][1] - 1] = m_s[i]\n        if p[i][1]!= 0:\n            s_s[p[i][1] - 1] = p_s[i]\n    #s_s = [0] * (max_s + 1)\n    #for i in range(max_s):\n        #print(i + 1, s_s[i])\n    #print(s_s)\n    #print(m)\n    #print(l)\n    #print(p)\n    #print(m_s)\n    #print(l_s)\n    #print(p_s)\n    #print(s_s)\n    #print(m)\n    #print(l)\n    #print(p)\n    #print(s_s)\n    #print(l)\n    #print(p)\n    #print(s_s)\n    #print(l)\n    #print(p)\n    #print(s_s)\n    #print(l)\n    #print(p)\n    #print(s_s)\n    #print(l)\n    #print(p)\n    #print(s_s)\n    #print(l)\n    #print(p)\n    #print(s_s)\n    #print(l)\n    #print(p)\n    #print(s_s)\n    #print(l)\n    #print(p)\n    "
    },
    {
        "number": 3516,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(open(\"data/e059.txt\").read()))\n\"\"\"\n"
    },
    {
        "number": 3516,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(open(\"input/test_8\").read()) == \"40\"\nassert solution(open(\"input/test_9\").read()) == \"95\"\nassert solution(open(\"input/test_10\").read()) == \"75\"\nassert solution(open(\"input/test_11\").read()) == \"100\"\nassert solution(open(\"input/test_12\").read()) == \"115\"\n"
    },
    {
        "number": 3516,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20') == '91'\nassert solution('2\\n1 95 50 30 20\\n3 1 95 95 95 10\\n2 1 95 50 30 20') == '103'\nassert solution('3\\n1 95 50 30 20\\n3 1 95 95 95 10\\n2 1 95 50 30 20') == '103'\nassert solution('4\\n1 95 50 30 20\\n3 1 95 95 95 10\\n2 1 95 50 30 20\\n4 1 95 50 30 20') == '107'\nassert solution('5\\n1 95 50 30 20\\n3 1 95 95 95 10\\n2 1 95 50 30 20\\n4 1 95 50 30 20\\n5 1 95 50 30 20') == '109'\n"
    },
    {
        "number": 3516,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(open(\"test_files/Y11R5P1/A.in\").read()) == \"96\"\nassert solution(open(\"test_files/Y11R5P1/B.in\").read()) == \"115\"\nassert solution(open(\"test_files/Y11R5P1/C.in\").read()) == \"95\"\nassert solution(open(\"test_files/Y11R5P1/D.in\").read()) == \"37\"\nassert solution(open(\"test_files/Y11R5P1/E.in\").read()) == \"26\"\n"
    },
    {
        "number": 3516,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n''') == '91'\nassert solution('''3\n2 1 95 50 30 20\n2 1 95 50 30 20\n2 1 95 50 30 20\n''') == '101'\nassert solution('''3\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n''') == '91'\nassert solution('''5\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n3 1 90 95 45 35\n4 1 90 90 90 100\n''') == '96'\nassert solution('''7\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n3 1 90 95 45 35\n4 1 90 90 90 100\n5 1 90 90 90 100\n6 1 90 90 90 100\n''') == '96'\n'''"
    },
    {
        "number": 3517,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0\n10\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2\n3 1\n4 1\n5 1\n6 1\n7 1\n8 1\n9 1\n10 1\n0\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1"
    },
    {
        "number": 3517,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2\\n15 20\\n0\\n1 1\") == \"15\"\nassert solution(\"2\\n15 20\\n0\\n0 0\") == \"0\"\nassert solution(\"4\\n1 2 3 4\\n1 2 2 4\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 3517,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''0\n10\n1 1\n2 1\n3 1\n4 1\n5 1\n6 1\n7 1\n8 1\n9 1\n10 1''') == '0'\nassert solution('''0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 3517,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '15'\nassert solution(stdin) == '1'\nassert solution(stdin) == '15'\nassert solution(stdin) == '1'\nassert solution(stdin) == '15'\n"
    },
    {
        "number": 3517,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0\") == 0\nassert solution(\"1 2 3 4\") == 1\nassert solution(\"0 0 1 1\") == 2\nassert solution(\"0 1 0 2 2\") == 3\nassert solution(\"1 2 3 4\") == 1\n"
    },
    {
        "number": 3517,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n20\n0\n1 1''') == '15'\nassert solution('''2\n15 20\n0\n1 1''') == '15'\nassert solution('''2\n15 20\n0\n3 2\n3 1\nSample Output:\n10\nassert solution('''4\n7 10\n0\n1 1\n0\n1 3\n1 3\n1 3''') == '16'\nassert solution('''4\n7 10\n0\n1 1\n0\n1 3\n1 3\n1 3''') == '16'\n"
    },
    {
        "number": 3517,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"0 1\") == \"\"\nassert solution(\"0 1 1\") == \"\"\nassert solution(\"0 1 2\") == \"\"\n"
    },
    {
        "number": 3517,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"15\"\nassert solution(\"0\\n10\") == \"1\"\nassert solution(\"2\\n10\\n1\\n0\\n1\\n0\") == \"2\"\nassert solution(\"1\\n1\\n0\\n0\\n0\\n0\\n0\") == \"1\"\nassert solution(\"1\\n1\\n1\\n0\\n0\\n0\\n0\") == \"1\"\n"
    },
    {
        "number": 3517,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\nstdin = \"\"\"3\n15 20\n0\n1 1\n2 1\n3 1\n\"\"\"\nassert solution(stdin) == '2'\n\nstdin = \"\"\"5\n10 9 2 7 3\n0\n3 3 4 2\n0\n2 4 3 1\n1\n2 1 3\n\"\"\"\nassert solution(stdin) == '3'\n\nstdin = \"\"\"8\n9 10 2 2 6 4 7\n0\n2 2 5 6 2 3\n0\n1 1 2 1 3\n0\n2 1 2 1\n1\n2 1\n\"\"\"\nassert solution(stdin) == '1'\n"
    },
    {
        "number": 3517,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 15\nassert solution(\"2\\n15 20\\n0\\n1 1\") == 15\nassert solution(\"2\\n15 20\\n0\\n1 1\\n1 1\") == 0\nassert solution(\"2\\n15 20\\n0\\n1 1\\n1 1\\n1 1\") == 0\nassert solution(\"2\\n15 20\\n0\\n1 1\\n1 1\\n1 1\\n1 1\") == 0\n"
    },
    {
        "number": 3518,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\\n4 5 6\\n7 8 9\") == \"impossible\"\nassert solution(\"3 2\\n1 2 3\\n4 5 6\\n7 8 9\\n1 2 3\") == \"5\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n2 3 4\\n5 6 7\\n8 9 10\\n11 12 13\\n14 15 16\") == \"2\"\nassert solution(\"5 6\\n1 2 3\\n2 3 4\\n4 5 6\\n3 5 7\\n5 6 7\") == \"2\"\nassert solution(\"3 2\\n1 2 3\\n2 3 4\\n4 5 6\\n2 3 4\") == \"impossible\"\n"
    },
    {
        "number": 3518,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 4\n3 1 375\n2 5 283\n1 4 716\n3 4 98''') == 'impossible'\nassert solution('''5 4\n3 1 375\n2 5 283\n1 4 716\n3 4 98''') == '0'\nassert solution('''5 4\n1 1 100\n1 2 100\n3 2 100\n3 4 100\n3 5 100''') == '115'\nassert solution('''5 4\n1 1 100\n1 2 100\n3 2 100\n3 4 100''') == 'impossible'\nassert solution('''5 4\n1 1 100\n1 2 100\n3 2 100\n3 4 100\n3 5 100\n4 5 100''') == '115'\n"
    },
    {
        "number": 3518,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 4\n3 1 375\n2 5 283\n1 4 716\n3 4 98''') == 'impossible'\nassert solution('''6 6\n1 5 918\n2 4 832\n3 2 759\n4 4 744\n5 2 565\n6 3 708''') == '0'\nassert solution('''8 8\n1 3 1061\n2 7 28\n3 4 784\n4 5 1032\n5 6 961\n6 7 15\n7 8 715''') == '1871'\nassert solution('''10 10\n1 3 321\n2 7 982\n3 4 345\n4 5 510\n5 6 749\n6 7 773\n7 8 718\n8 9 937\n9 10 1073''') == '1415'\nassert solution('''10 10\n1 3 38\n2 7 40\n3 4 318\n4 5 724\n5 6 523\n6 7 649\n7 8 844\n8 9 961\n9 10 972''') == '1828'\n"
    },
    {
        "number": 3518,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98') == 'impossible'\nassert solution('2 4\\n1 2 4\\n1 3 4') == '0'\nassert solution('2 4\\n1 2 4\\n1 3 4\\n1 3 4') == '4'\nassert solution('3 4\\n2 1 4\\n1 3 4\\n2 1 4') == '9'\nassert solution('3 4\\n1 1 4\\n1 2 4\\n2 1 4') == '1'\n"
    },
    {
        "number": 3518,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 4\n3 1 375\n2 5 283\n1 4 716\n3 4 98''') == 'impossible'\nassert solution('''5 4\n2 1 383\n4 5 515\n2 4 944\n1 4 822\n4 3 752\n2 4 96''') == 'impossible'\nassert solution('''1 1\n1 1 1\n1 1 1\n1 1 1''') == 'impossible'\nassert solution('''4 3\n2 1 344\n3 1 837\n3 2 754\n1 4 589\n4 2 618\n1 4 676\n1 3 585\n2 3 525\n2 1 384''') == 'impossible'\nassert solution('''5 5\n2 1 311\n1 4 108\n1 3 100\n3 4 26\n4 2 416\n2 3 92\n1 3 559\n3 4 621\n2 1 327\n1 4 757\n4 2 59\n3 4 80\n1 3 479\n4 2 309\n1 1 211\n1 4 542\n1 1 9\n1 1 423\n1 1 779\n1 1 624\n4 2 946\n1 4 473\n1 3 19\n1 3 214\n1 2 769\n1 1 121\n4 1 11\n1 3 124\n2 1 90\n4 2 514\n1 1 587\n2 1 581\n1 1 461\n3 1 998\n1 3 9\n2 3 18\n1 1 2\n1 3 876\n1 4 545\n2 4 532\n2 3 923\n3 1 657\n1 4 726\n1 1 987\n1 4 766\n1 3 871\n2 2 537\n3 1 241\n1 1 726\n1 2 914\n2 2 769\n1 1 5\n2 1 532\n1 1 736\n1 1 899\n2 2 964\n3 2 686\n1 1 775\n1 1 822\n1 2 753\n3 4 497\n2 2 545\n3 1 916\n1 1 695\n3 1 837\n1 1 516\n1 2 548\n1 1 696\n1 1 83\n1 4 849\n1 1 328\n1 1 638\n1 1 80\n1 1 852\n1 1 449\n1 3 448\n1 3 902\n1 2 637\n1 1 988\n1 1 828\n1 4 829\n1 1 523\n2 1 344\n3 1 837\n1 1 596\n1 4 464\n2 1 526\n3 3 904\n1 3 346\n1 4 903\n1 3 779\n1 1 518\n1 1 104\n1 1 715\n1 1 624\n1 1 589\n3 3 645\n3 1 603\n1 1 57\n1 3 543\n3 3 929\n1 1 716\n1 1 629\n1 1 831\n1 1 658\n1 1 537\n1 3 774\n2 2 327\n2 1 328\n1 1 365\n1 3 910\n1 1 487\n1 1 614\n1 4 906\n3 4 471\n3 1 447\n1 1 765\n1 1 542\n3 3 652\n1 1 599\n1 1 954\n1 1 789\n1 1 637\n1 2 788\n1 1 648\n1 1 871\n1 1 810\n1 4 870\n1 1 791\n1 3 955\n1 3 673\n1 1 611\n1 2 612\n1 1 836\n1 1 617\n1 2 554\n3 1 837\n1 3 655\n1 1 435\n2 1 772\n2 1 568\n1 1 824\n2 1 859\n1 1 829\n1 2 643\n1 3 917\n1 1 688\n1 2 786\n1 1 785\n1 3 909\n1 4 524\n1 4 724\n1 3 726\n1 1 584\n1 3 904\n1 1 835\n1 3 945\n1 4 797\n1 1 455\n2 1 926\n1 1 473\n3 1 996\n3 4 954\n1 1 918\n1 1 973\n1 4 748\n3 1 953\n3 4 924\n1 1 509\n3 3 854\n1 1 939\n1 3 884\n1 4 814\n1 2 732\n1 1 912\n1 2 942\n1 2 609\n3 4 849\n1 3 917\n1 3 980\n1 1 858\n1 3 857\n1 3 952\n1 1 665\n3 4 843\n2 1 352\n3 1 839\n1 1 918\n2 1 883\n1 1 915\n1 4 526\n1 1 845\n3 3 639\n3 4 945\n2 1 945\n1 3 659\n1 4 535\n1 2 918\n1 1 544\n1 1 886\n1 3 10\n1 3 977\n1 4 934\n1 1 815\n1 2 842\n1 1 868\n1 1 976\n1 1 896\n1 3 947\n1 1 947\n1 1 884\n3 3 819\n3 1 962\n1 1 762\n1 1 859\n1 2 902\n1 1 4\n1 1 745\n1 1 795\n1 1 944\n1 1 749\n1 3 815\n1 3 923\n1 4 864\n1 3 575\n1 1 576\n1 3 863\n3 3 913\n1 1 940\n1 1 940\n1 1 934\n1 1 928\n1 3 929\n1 1 828\n1 1 952\n1 3 818\n1 1 673\n2 1 983\n3 3 923\n1 1 925\n1 3 922\n1 3 671\n1 2 818\n1 1 965\n1 1 983\n1 3 816\n1 3 902\n1 4 831\n1 3 10\n1 1"
    },
    {
        "number": 3518,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n2\\n2\\n2\\n3\\n3\\n3\\n3\\n3\\n4\\n4\\n4\\n4\\n5\\n5\\n5\\n5\\n5\\n6\\n6\\n6\\n6\\n6\\n7\\n7\\n7\\n7\\n7\\n8\\n8\\n8\\n8\\n8\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n"
    },
    {
        "number": 3518,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'impossible'\n\nassert solution('''\n5 4\n3 1 375\n2 5 283\n1 4 716\n3 4 98\n''') == 'impossible'\n\nassert solution('''\n5 4\n3 1 375\n2 5 283\n1 4 716\n3 4 98\n''') == '716'\n\nassert solution('''\n5 5\n3 1 375\n2 5 283\n1 4 716\n3 4 98\n''') == '500'\n\nassert solution('''\n5 3\n3 1 375\n2 5 283\n1 4 716\n3 4 98\n''') == '10'"
    },
    {
        "number": 3518,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 4\n3 1 375\n2 5 283\n1 4 716\n3 4 98''') == 'impossible'\nassert solution('''5 4\n3 1 375\n2 5 283\n1 4 716\n3 4 98\n2 5 81\n1 2 100\n4 3 9\n2 4 8\n3 5 8\n1 4 6\n3 4 7\n2 3 8\n1 4 4\n1 2 1\n4 3 2\n1 4 4''') == '279'\n'''\n    stdin = stdin.split('\\n')\n\n    n, m = [int(i) for i in stdin[0].split(' ')]\n\n    friends = [set() for i in range(n)]\n    for i in range(1, m + 1):\n        p, q, c = [int(j) for j in stdin[i].split(' ')]\n        friends[p - 1].add(q - 1)\n        friends[q - 1].add(p - 1)\n    \n    for i in range(n):\n        friends[i] = friends[i] - set(friends[i].intersection(friends[i]))\n    \n    ans = float('inf')\n    for i in range(n):\n        for j in friends[i]:\n            ans = min(ans, c * (c - 1) / 2)\n    \n    return str(int(ans)) if ans < float('inf') else 'impossible'"
    },
    {
        "number": 3518,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 4\n2 5 283\n1 4 716\n3 4 98''') == 'impossible'\nassert solution('''5 4\n3 1 375\n2 5 283\n1 4 716\n3 4 98\n2 5 133\n2 5 5\n1 4 224\n3 4 236\n3 4 41\n2 4 635\n1 5 308\n1 5 247\n2 3 208\n1 4 198\n3 4 132\n1 3 100\n2 4 298\n1 2 667\n2 3 703\n1 3 417\n1 4 292\n2 4 111\n2 3 482\n2 3 545\n2 4 678\n1 5 40\n1 3 232\n2 3 339\n1 2 76\n2 3 344\n1 5 99\n3 2 532\n1 3 382\n2 4 406\n1 2 416\n3 4 708\n3 4 65\n2 5 83\n2 4 979\n2 5 947\n1 3 836\n2 5 976\n2 4 872\n2 4 29\n2 3 784\n1 2 858\n2 4 911\n1 3 752\n3 2 949\n1 3 410\n1 2 868\n2 4 874\n2 4 767\n2 4 897\n2 5 931\n2 4 597\n3 1 82\n1 2 38\n2 3 641\n1 3 912\n1 3 91\n1 3 774\n2 3 891\n3 2 914\n1 3 739\n2 4 834\n3 4 952\n1 2 566\n2 3 874\n3 1 866\n1 3 961\n1 3 956\n2 1 538\n3 1 564\n1 2 628\n2 4 744\n2 2 877\n1 2 743\n2 5 534\n1 1 943\n1 4 587\n2 2 726\n2 3 897\n1 2 858\n1 2 845\n2 3 654\n3 3 92\n2 3 629\n3 2 713\n1 1 842\n1 2 961\n1 2 935\n1 2 689\n1 3 603\n1 2 766\n2 1 489\n2 2 940\n2 2 834\n1 2 586\n2 2 980\n1 1 526\n1 2 932\n1 2 758\n1 1 934\n3 1 571\n1 1 926\n1 2 724\n1 3 631\n1 1 917\n3 1 557\n1 1 959\n1 1 558\n2 1 537\n1 1 922\n1 1 964\n2 1 592\n1 3 927\n1 1 861\n2 1 958\n1 1 903\n1 1 659\n2 1 976\n1 2 954\n1 2 759\n1 2 901\n1 2 952\n3 2 906\n3 2 654\n1 2 943\n2 2 658\n1 2 872\n2 1 568\n1 1 852\n2 3 843\n1 1 942\n1 1 649\n1 1 831\n2 1 939\n2 1 845\n2 1 974\n1 1 961\n2 1 847\n1 1 753\n1 1 761\n2 1 856\n3 2 943\n1 1 842\n1 1 761\n1 1 896\n1 1 742\n1 2 562\n2 1 829\n1 1 834\n3 2 558\n1 1 547\n1 1 739\n1 1 946\n2 1 857\n1 2 963\n2 1 868\n1 1 830\n1 1 752\n2 1 844\n2 2 919\n2 1 889\n3 2 894\n1 1 756\n1 1 909\n1 1 906\n1 1 773\n1 1 880\n1 1 832\n1 1 835\n1 1 771\n1 2 934\n1 1 858\n2 1 974\n3 1 932\n1 1 795\n1 2 971\n2 1 985\n3 1 977\n1 1 752\n1 1 860\n1 2 942\n1 1 898\n1 3 790\n3 2 984\n1 1 962\n1 2 859\n2 3 605\n2 1 954\n1 3 955\n1 1 917\n2 1 876\n1 1 841\n3 2 976\n1 1 824\n1 2 849\n1 1 913\n1 1 961\n1 2 844\n1 3 906\n2 1 927\n1 1 818\n2 1 986\n1 1 908\n1 1 972\n2 1 913\n1 2 956\n3 2 782\n1 1 913\n1 1 915\n1 3 914\n2 1 815\n1 1 943\n2 3 914\n2 2 679\n3 2 682\n3 2 845\n3 2 866\n1 1 822\n1 2 832\n1 1 918\n1 3 959\n1 1 917\n2 1 949\n1 1 890\n1 1 969\n1 1 946\n2 1 974\n1 1 821\n1 1 893\n2 1 869\n2 1 949\n1 1 921\n1 1 975\n1 1 966\n2 2 912\n1 1 859\n1 1 824\n1 1 917\n2 1 865\n1 1 755\n1 1 772\n3 1 858\n1 1 772\n2 2 788\n3 3 745\n1 1 776\n2 2 880\n1 2 944\n1 1 822\n1 2 910\n1 1 973\n1 2 942\n1 3 911\n1 1 868\n1 1 962\n1 3 964\n3 2 816\n3 3 952\n3 2 772\n3 2 844\n3 2 875\n1 1 769\n1 1 964\n1 2 936\n1 1 875\n1 2 905\n1 1 857\n2 1 815\n2 1 985\n3 2 895\n1"
    },
    {
        "number": 3518,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 4\n3 1 375\n2 5 283\n1 4 716\n3 4 98''') == 'impossible'\nassert solution('''2 5\n1 3 71\n2 4 76''') == 'impossible'\nassert solution('''3 5\n1 3 69\n2 4 73\n3 4 80''') == 'impossible'\nassert solution('''4 5\n1 3 65\n2 4 76\n3 4 82\n4 5 81''') == 'impossible'\nassert solution('''5 5\n1 3 67\n2 4 74\n3 4 82\n4 5 79''') == 'impossible'\n"
    },
    {
        "number": 3519,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == '1.000000000'\nassert solution('10') == '9.2517994401'\nassert solution('100') == '9.239999923'\nassert solution('1000') == '9.239999923'\nassert solution('10000') == '9.240000923'\n"
    },
    {
        "number": 3519,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(1) == \"1.000000000\"\nassert solution(2) == \"0.5000000000\"\nassert solution(3) == \"0.25000000000\"\nassert solution(4) == \"0.166666666667\"\nassert solution(5) == \"0.0833333333333\"\n"
    },
    {
        "number": 3519,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1') == '1.000000000'\nassert solution('1') == '1.000000000'\nassert solution('1') == '1.000000000'\nassert solution('1') == '1.000000000'\nassert solution('1') == '1.000000000'\n"
    },
    {
        "number": 3519,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == '1.000000000'\nassert solution('2') == '1.000000000'\nassert solution('3') == '0.935309600'\nassert solution('4') == '0.935309600'\nassert solution('5') == '0.935309600'\n"
    },
    {
        "number": 3519,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1') == '1.000000000'\nassert solution('1000') == '1.000000000'\nassert solution('3') == '1.000000000'\nassert solution('4000') == '1.000000000'\nassert solution('5') == '2.857142857'\n"
    },
    {
        "number": 3519,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1.000000000\"\nassert solution(\"5\") == \"1.000000000\"\nassert solution(\"99\") == \"1.000000000\"\nassert solution(\"1000\") == \"1.000000000\"\nassert solution(\"3\") == \"0.66666667\"\n"
    },
    {
        "number": 3519,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1.000000000\"\n\nassert solution(\"2\") == \"1.000000000\"\n\nassert solution(\"4\") == \"1.000000000\"\n\nassert solution(\"9\") == \"1.000000000\"\n\nassert solution(\"11\") == \"1.000000000\""
    },
    {
        "number": 3519,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1') == '1.000000000'\nassert solution('2') == '1.000000000'\nassert solution('3') == '2.000000000'\nassert solution('4') == '3.000000000'\nassert solution('5') == '4.000000000'\n"
    },
    {
        "number": 3519,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n') == '1.000000000'\n\"\"\"\n"
    },
    {
        "number": 3519,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == '1.000000000'\nassert solution('1\\n1') == '1.000000000'\nassert solution('1\\n1\\n1') == '1.000000000'\nassert solution('1\\n2') == '1.000000000'\nassert solution('1\\n3') == '1.000000000'\n"
    },
    {
        "number": 3520,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(open(\"data/04.txt\").read()))\n\nassert solution(open(\"data/abc_1.txt\").read()) == '0.887612934194508'\nprint(solution(open(\"data/abc_1.txt\").read()))\n\nassert solution(open(\"data/abc_2.txt\").read()) == '0.876149033777734'\nprint(solution(open(\"data/abc_2.txt\").read()))\n\nassert solution(open(\"data/abc_3.txt\").read()) == '0.877625473046875'\nprint(solution(open(\"data/abc_3.txt\").read()))\n\"\"\"\n"
    },
    {
        "number": 3520,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '115.000000000'\n\nprint(solution(stdin))\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3520,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''100 3 10\n15 99 98\n40 3 2\n90 10 9''') == '115.000000000'\n\nassert solution('''10 10 1\n3 1 1\n1 1 1\n1 1 1\n2 2 1\n1 1 1\n1 1 1\n1 1 1\n2 2 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1"
    },
    {
        "number": 3520,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == \"115.000000000\"\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n1 1 1\") == \"102.00000000\"\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n1 1 1\\n15 100 9 7\") == \"118.00000000\"\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n1 1 1\\n15 100 9 7\\n3 1 2\") == \"103.00000000\"\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n1 1 1\\n15 100 9 7\\n1 1 2\") == \"110.00000000\"\n"
    },
    {
        "number": 3520,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(open(\"test_files/Y11R5P1/A.in\").read()) == \"115.000000000\"\nassert solution(open(\"test_files/Y11R5P1/B.in\").read()) == \"35.000000000\"\nassert solution(open(\"test_files/Y11R5P1/C.in\").read()) == \"149.000000000\"\nassert solution(open(\"test_files/Y11R5P1/D.in\").read()) == \"80.000000000\"\nassert solution(open(\"test_files/Y11R5P1/E.in\").read()) == \"102.000000000\"\n"
    },
    {
        "number": 3520,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''100 3 10\n15 99 98\n40 3 2\n90 10 9''') == '115.000000000'\nassert solution('''100 10 100\n10 1 0\n5 1 0\n1 1 0\n1 1 0\n1 1 0\n1 1 0\n1 1 0\n1 1 0\n1 1 0''') == '175.000000000'\nassert solution('''100 1 1\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100 1 0\n100"
    },
    {
        "number": 3520,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"115.000000000\"\n'''\n"
    },
    {
        "number": 3520,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"115.000000000\"\n"
    },
    {
        "number": 3520,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"100 3 10\") == \"115.000000000\"\nassert solution(\"100 3 10\") == \"115.000000000\"\nassert solution(\"100 3 10\") == \"115.000000000\"\nassert solution(\"100 3 10\") == \"115.000000000\"\nassert solution(\"100 3 10\") == \"115.000000000\"\n"
    },
    {
        "number": 3520,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''100 3 10\n15 99 98\n40 3 2\n90 10 9''') == '115.000000000'\n\nassert solution('''100 3 10\n15 99 98\n40 3 2\n90 10 9\n30 2 2\n5 2 1\n''') == '115.000000000'\n\nassert solution('''100 3 10\n15 99 98\n40 3 2\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n''') == '115.000000000'\n\nassert solution('''100 3 10\n15 99 98\n40 3 2\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n''') == '115.000000000'\n\nassert solution('''100 3 10\n15 99 98\n40 3 2\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2 1\n90 10 9\n30 2 2\n5 2"
    },
    {
        "number": 3521,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3\\n2 3 4\\n3 4 5') == '99.500000'\nassert solution('1 1 0\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\n1 2 3\\n1 1 1\\n1 1 1\\n0 1 2\\"
    },
    {
        "number": 3521,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n1 1 1\n1 1 1.5\n\"\"\") == \"199.5\"\n"
    },
    {
        "number": 3521,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n2\n100 1 1\n100 1 1.5\n''') == '199.500000'\nassert solution('''\n3\n200 2 1\n200 2 1.5\n200 2 1.5\n''') == '399.500000'\nassert solution('''\n5\n102 10 1\n102 10 1.5\n102 10 1.5\n102 10 1.5\n102 10 1.5\n''') == '399.500000'\nassert solution('''\n6\n108 10 1\n108 10 1.5\n108 10 1.5\n108 10 1.5\n108 10 1.5\n108 10 1.5\n''') == '399.500000'\nassert solution('''\n8\n171 11 1\n171 11 1.5\n171 11 1.5\n171 11 1.5\n171 11 1.5\n171 11 1.5\n171 11 1.5\n171 11 1.5\n''') == '399.500000'\n"
    },
    {
        "number": 3521,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\n\"\"\"\n"
    },
    {
        "number": 3521,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n0 1 1\n0 1 1.5\n''') == '199.500000'\n\nassert solution(\n'''\n4\n100 1 1\n100 1 1.5\n50 50 0.5\n50 50 0.5\n''') == '199.500000'\n\nassert solution(\n'''\n3\n100 1 1\n100 1 1.5\n50 50 0.5\n''') == '199.500000'\n\nassert solution(\n'''\n4\n100 1 1\n100 1 1.5\n50 50 0.5\n50 50 0.5\n50 50 0.5\n50 50 0.5\n''') == '199.500000'\n\nassert solution(\n'''\n6\n10 50 0.5\n20 50 0.5\n25 50 0.5\n30 50 0.5\n35 50 0.5\n40 50 0.5\n''') == '199.500000'"
    },
    {
        "number": 3521,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(test1) == \"199.500000\"\nassert solution(test2) == \"100\"\nassert solution(test3) == \"1000.250000\"\nassert solution(test4) == \"1000\"\nassert solution(test5) == \"500.000000\"\n"
    },
    {
        "number": 3521,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n100 1 1\\n100 1 1.5') == '199.500000'\nassert solution('3\\n100 1 1\\n100 1 1.5\\n100 1 1.6') == '199.399994'\n'''\n\nimport math"
    },
    {
        "number": 3521,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '199.500000'\n"
    },
    {
        "number": 3521,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"199.500000\"\n\n\"\"\"\n\nfrom math import radians, cos, sin, asin, sqrt\nfrom sys import stdin"
    },
    {
        "number": 3521,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '199.500000'\nprint(solution(stdin))\n\nassert solution(stdin) == '199.500000'\nprint(solution(stdin))\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3522,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3\n1 2 3 4 5 6 7 8 9 10 11 12''') == '1'\nassert solution('''2 3\n10 9 8 7 6 5 4 3 2 1''') == '1'\nassert solution('''2 3\n10 9 8 7 6 5 4 3 2 1''') == '1'\nassert solution('''2 3\n12 7 11 8 9 10 1 2 3 4 5 6''') == '2'\nassert solution('''2 3\n12 7 11 8 9 10 1 2 3 4 5 6''') == '2'\n"
    },
    {
        "number": 3522,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9 10 11 12\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\n"
    },
    {
        "number": 3522,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '1'\nassert solution(stdin) == '2'\nassert solution(stdin) == '3'\nassert solution(stdin) == '4'\nassert solution(stdin) == '5'\n"
    },
    {
        "number": 3522,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input_data) == stdout_data\n"
    },
    {
        "number": 3522,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\") == \"1\"\n"
    },
    {
        "number": 3522,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1'\nassert solution('2 3\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1'\nassert solution('4 3\\n1 2 3 4 5 6 7 8 9 10 11 12') == '2'\nassert solution('4 3\\n1 2 3 4 5 6 7 8 9 10 11 12') == '2'\nassert solution('4 5\\n1 2 3 4 5 6 7 8 9 10 11 12') == '2'\n"
    },
    {
        "number": 3522,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1'\nassert solution('2 3\\n1 2 4 5 6 7 8 9 10 11 12') == '2'\nassert solution('2 3\\n1 2 3 4 5 6 7 8 9 10 11 12') == '2'\nassert solution('3 3\\n1 2 3 4 5 6 7 8 9 10 11 12') == '0'\nassert solution('3 3\\n1 2 3 4 5 6 7 8 9 10 11 12') == '0'\n"
    },
    {
        "number": 3522,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 3\n1 2 3 4 5 6 7 8 9 10 11 12''') == '1'\nassert solution('''2 3\n1 2 3 4 5 6 7 8 9 10 11 12''') == '1'\nassert solution('''3 3\n3 3 5 9 9 5 8 3 3 4 3 5''') == '3'\nassert solution('''3 3\n2 4 4 6 8 6 8 6 9 6 4''') == '2'\nassert solution('''3 3\n3 3 5 9 9 5 8 3 3 4 3 5''') == '3'\n"
    },
    {
        "number": 3522,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '1'\n\"\"\"\n"
    },
    {
        "number": 3522,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n2 3\n1 2 3 4 5 6 7 8 9 10 11 12\n\"\"\"\n    ) == '1'\n\nassert solution(\n\"\"\"\n3 3\n1 2 3 4 5 6 7 8 9 10 11 12\n\"\"\"\n    ) == '2'\n\nassert solution(\n\"\"\"\n3 3\n1 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\n\"\"\"\n    ) == '0'\n\nassert solution(\n\"\"\"\n4 4\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\n\"\"\"\n    ) == '3'\n\nassert solution(\n\"\"\"\n5 5\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\n\"\"\"\n    ) == '2'"
    },
    {
        "number": 3523,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'Impossible'\n"
    },
    {
        "number": 3523,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"5\"\n\nassert solution(stdin) == \"Impossible\"\n\nassert solution(stdin) == \"5\"\n\nassert solution(stdin) == \"5\"\n\nassert solution(stdin) == \"5\""
    },
    {
        "number": 3523,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == \"5\"\nassert solution(input()) == \"Impossible\"\n\"\"\"\n\n\"\"\"\n    Per's wallet: 3 2 1 1\n    Price: 13\n    coins: 3 2 1 1\n    max coins: 5\n\"\"\""
    },
    {
        "number": 3523,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"13\n3 2 1 1\n\"\"\") == \"5\"\nassert solution(\n\"\"\"13\n3 2 1 2\n\"\"\") == \"Impossible\"\nassert solution(\n\"\"\"4\n1 1 1 1\n\"\"\") == \"4\"\nassert solution(\n\"\"\"4\n1 1 1 0\n\"\"\") == \"3\"\nassert solution(\n\"\"\"13\n1 1 1 1 1\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3523,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '5'\nassert solution('3 2 1 1') == '5'\nassert solution('4 3 2 3') == 'Impossible'\nassert solution('100 100 100 100') == '8'\nassert solution('3 2 1 1') == '5'\n"
    },
    {
        "number": 3523,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == \"Impossible\"\n'''"
    },
    {
        "number": 3523,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1\n2 2 1 2\n''') == 'Impossible'\nassert solution('''1\n2 1 1\n''') == 'Impossible'\nassert solution('''2\n2 2 1 2\n''') == 'Impossible'\nassert solution('''3\n1 1 1 1\n''') == 'Impossible'\nassert solution('''4\n1 4 2 4\n''') == 'Impossible'\n"
    },
    {
        "number": 3523,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"13\\n3 2 1 1\") == \"5\"\nassert solution(\"13\\n0 2 1 1\") == \"Impossible\"\nassert solution(\"13\\n0 0 0 0\") == \"Impossible\"\nassert solution(\"13\\n0 0 0 0\\n0 0 0 0\") == \"Impossible\"\nassert solution(\"13\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\") == \"5\"\n"
    },
    {
        "number": 3523,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"3\n3 2 1 1\n\"\"\") == \"5\"\n\nassert solution(\n\"\"\"28\n
    },
    {
        "number": 3523,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n13\n3 2 1 1\n\"\"\") == \"Impossible\"\nassert solution(\n\"\"\"\n10\n5 2 1 1\n\"\"\") == \"5\"\nassert solution(\n\"\"\"\n50\n5 2 1 1\n\"\"\") == \"5\"\nassert solution(\n\"\"\"\n98\n5 2 1 1\n\"\"\") == \"5\"\nassert solution(\n\"\"\"\n1000\n5 2 1 1\n\"\"\") == \"Impossible\"\n"
    },
    {
        "number": 3524,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('aabcad') == 'no'\nassert solution('aba') == 'yes'\nassert solution('acd') == 'no'\nassert solution('abcabc') == 'no'\n"
    },
    {
        "number": 3524,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('aabcad') == 'yes'\nassert solution('aba') == 'yes'\nassert solution('acd') == 'yes'\nassert solution('aabcad') == 'yes'\nassert solution('aad') == 'no'\n"
    },
    {
        "number": 3524,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"aabcad\naba\nacd\"\"\") == \"yes\"\n\nassert solution(\n\"\"\"abc\nad\nab\n\"\"\") == \"yes\"\n\nassert solution(\n\"\"\"a\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na"
    },
    {
        "number": 3524,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"abcad\"\n\"aba\"\n\"acd\"\n) == \"yes\"\nassert solution(\n\"abcad\"\n\"aba\"\n\"acd\"\n) == \"no\"\nassert solution(\n\"aabcad\"\n\"aba\"\n\"acd\"\n) == \"yes\"\nassert solution(\n\"aabcad\"\n\"aba\"\n\"acd\"\n) == \"no\"\nassert solution(\n\"a\"\n\"a\"\n\"a\"\n) == \"yes\"\n"
    },
    {
        "number": 3524,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('aabcad') == 'yes'\nassert solution('aba') == 'no'\nassert solution('acd') == 'no'\nassert solution('aadcad') == 'yes'\nassert solution('abcaa') == 'no'\n"
    },
    {
        "number": 3524,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'yes'\nassert solution(stdin) == 'no'\nassert solution(stdin) == 'yes'\nassert solution(stdin) == 'no'\nassert solution(stdin) == 'yes'\n"
    },
    {
        "number": 3524,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(solution.__doc__) == \"yes\"\n\"\"\""
    },
    {
        "number": 3524,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == 'yes'\nassert solution(sample_input_2) == 'no'\n\n-----------------\nSample Case 1\nInput\naabcad\naba\nacd\n\nOutput\nyes\n\nExplanation\nFor the first question, $s$ is the substring of $s_1$ and $s_2$ that satisfies the condition $i<j<|s|$ and the index of the first letter of $s_1[i]$ is less than the index of the first letter of $s_2[j]$. The answer is the string 'aabcad'.\n\nFor the second question, $s$ is the substring of $s_1$ and $s_2$ that satisfies the condition $i<j<|s|$ and the index of the first letter of $s_1[i]$ is less than the index of the first letter of $s_2[j]$. The answer is the string 'aba'.\n'''\n"
    },
    {
        "number": 3524,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(solution.solution(input())) == \"yes\"\nassert solution(solution.solution(input())) == \"no\"\nprint(solution(solution.solution(input())))\n\"\"\""
    },
    {
        "number": 3524,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"no\"\nassert solution(\"acd\") == \"yes\"\n\n'''\n"
    },
    {
        "number": 3525,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9''') == '5'\n'''\n\n__author__ = 'Hari'"
    },
    {
        "number": 3525,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9''') == '5'\nassert solution('''4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n4 2 8 9\n4 2 8 9''') == '5'\nassert solution('''4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n4 3 9 10\n2 4 3 5\n4 2 8 9''') == '10'\nassert solution('''4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 3 8 9\n4 2 9 10\n2 4 3 5\n4 2 8 9''') == '0'\nassert solution('''4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 9 10\n2 4 3 5\n4 2 8 9''') == '0'\n"
    },
    {
        "number": 3525,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4 5\\n1 2 3 4 5') == '2'\nassert solution('2 2 3 4 5 6 7 8 9 10\\n2 2 3 4 5 6 7 8 9 10\\n1 1 1 1 1 1 1 1 1 1') == '0'\nassert solution('2 2 3 4 5 6 7 8 9 10\\n2 2 3 4 5 6 7 8 9 10\\n1 1 1 1 1 1 1 1 1 1\\n2 1 1 1 1 1 1 1 1 1') == '1'\nassert solution('2 2 3 4 5 6 7 8 9 10\\n2 2 3 4 5 6 7 8 9 10\\n1 1 1 1 1 1 1 1 1 1\\n2 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1') == '5'\nassert solution('1 1 2 3 4 5\\n1 1 2 3 4 5\\n1 1 2 3 4 5\\n1 1 2 3 4 5\\n1 1 2 3 4 5\\n1 1 2 3 4 5\\n1 1 2 3 4 5\\n1 1 2 3 4 5') == '4'\n"
    },
    {
        "number": 3525,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9''') == '5'\nassert solution('''4 3 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9''') == '5'\nassert solution('''4 2 5\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9''') == '0'\nassert solution('''1 2 4\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9''') == '5'\nassert solution('''4 2 5\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9''') == '0'\n"
    },
    {
        "number": 3525,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n4\\n5\\n5\\n5\\n3\\n2\\n4\\n5\\n1\\n1\\n1\\n1\\n1\\n1\\n5\\n5\\n5\\n5\\n5\\n5\\n3\\n2\\n4\\n5\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n5\\n5\\n5\\n5\\n5\\n3\\n2\\n4\\n5\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n5\\n5\\n5\\n5\\n5\\n3\\n2\\n4\\n5\\n1\\n1\\n1\\n1\\n1\\n1\\n5\\n5\\n5\\n5\\n5\\n3\\n2\\n4\\n5\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n5\\n5\\n5\\n5\\n5\\n3\\n2\\n4\\n5\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n5\\n5\\n5\\n5\\n5\\n3\\n2\\n4\\n5\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n5\\n5\\n5\\n5\\n5\\n3\\n2\\n4\\n5\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n5\\n5\\n5\\n5\\n5\\n3\\n2\\n4\\n5\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n5\\n5\\n5\\n5\\n5\\n3\\n2\\n4\\n5\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n5\\n5\\n5\\n5\\n5\\n3\\n2\\n4\\n5\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n5\\n5\\n5\\n5\\n5\\n3\\n2\\n4\\n5\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n5\\n5\\n5\\n5\\n5\\n3\\n2\\n4\\n5\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n5\\n5\\n5\\n5\\n5\\n3\\n2\\n4\\n5\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n5\\n5\\n5\\n5\\n5\\n3\\n2\\n4\\n5\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n5\\n5\\n5\\n5\\n5\\n3\\n2\\n4\\n5\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n5\\n5\\n5\\n5\\n5\\n3\\n2\\n4\\n5\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n5\\n5\\n5\\n5\\n5\\n3\\n2\\n4\\n5\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n5\\n5\\n5\\n5\\n5\\n3\\n2\\n4\\n5\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n5\\n5\\n5\\n5\\n5\\n3\\n2\\n4\\n5\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n5\\n5\\n5\\n5\\n5\\n3\\n2\\n4\\n5\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n5\\n5\\n5\\n5\\n5\\n3\\n2\\n4\\n5\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n5\\n5\\n5\\n5\\n5\\n3\\n2\\n4\\n5\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n5\\n5\\n5\\n5\\n5\\n3\\n2\\n4\\n5\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n5\\n5\\n5\\n5\\n5\\n3\\n2\\n4\\n5\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n5\\n5\\n5\\n5\\n5\\n3\\n2\\n4\\n5\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n5\\n5\\n5\\n5\\n5\\n3\\n2\\n4\\n5\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n5\\n5\\n5\\n5\\n5\\n3\\n2\\n4\\n5\\n1\\n1"
    },
    {
        "number": 3525,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"2 2 2 1\") == \"\"\nassert solution(\"3 4 3\") == \"2\"\nassert solution(\"4 2 3\") == \"3\"\n"
    },
    {
        "number": 3525,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9''') == '5'\nassert solution('''3 3 3\n1 1 1 1\n2 2 2 2\n3 3 3 3\n1 1 1 1\n1 2 2 2\n1 3 3 3\n1 1 1 1''') == '10'\nassert solution('''5 5 10\n2 1 3 4 5\n2 2 4 5 6\n2 3 4 5 6\n2 4 5 6 7\n3 4 4 4 4\n3 4 5 5 5\n3 4 6 6 6\n3 5 4 5 5\n4 2 3 4 5\n4 3 4 4 4\n4 4 4 4 4\n4 5 5 5 5''') == '3'\nassert solution('''3 3 3\n2 2 1 1\n1 2 2 2\n3 3 3 3\n1 1 1 1\n1 2 2 2\n1 3 3 3\n1 1 1 1''') == '4'\nassert solution('''3 3 3\n1 1 1 1\n2 2 2 2\n3 3 3 3\n1 1 1 1\n2 2 2 2\n1 3 3 3\n1 1 1 1\n1 2 2 2\n2 2 2 2\n2 3 3 3\n1 1 1 1''') == '3'\n"
    },
    {
        "number": 3525,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"5\"\nassert stdin == \"\"\nassert stdin == \"\"\nassert stdin == \"\"\nassert stdin == \"\""
    },
    {
        "number": 3525,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n--------------------------------------------------------------------------------\n"
    },
    {
        "number": 3525,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9''') == '5'\nassert solution('''5 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n2 4 3 5\n4 2 8 9\n2 4 3 5\n4 2 8 9''') == '0'\nassert solution('''4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n2 4 3 5\n4 2 8 9\n2 4 3 5\n4 2 8 9''') == '8'\nassert solution('''5 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n2 4 3 5\n4 2 8 9\n2 4 3 5\n4 2 8 9''') == '9'\nassert solution('''4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n2 4 3 5\n4 2 8 9\n2 4 3 5\n4 2 8 9\n2 4 3 5''') == '6'\n"
    },
    {
        "number": 3526,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n1 2\\n3 3\\n4 1') == '4'\nassert solution('2\\n1 2\\n3 3\\n4 4') == '0'\nassert solution('2\\n1 2\\n3 3\\n4 4\\n5 4') == '0'\nassert solution('2\\n1 2\\n3 3\\n4 4\\n5 4\\n6 1') == '1'\nassert solution('2\\n1 2\\n3 3\\n4 4\\n5 4\\n6 5') == '0'\n"
    },
    {
        "number": 3526,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 3\n1 2 same\n3 4 same\n5 6 same''') == '8'\nassert solution('''2 3\n2 4 same\n3 5 same\n4 6 same\n5 7 same\n6 8 same\n7 9 same\n8 9 same\nSample Input:\n3 4\n2 4 same\n3 5 same\n3 6 same\nSample Output:\n6\nassert solution('''3 4\n1 2 same\n2 3 same\n3 4 same\nSample Input:\n4 4\n1 2 same\n2 3 same\n3 4 same\n4 5 same\nSample Output:\n6\nassert solution('''4 4\n1 2 same\n2 3 same\n3 4 same\n4 5 same\nSample Input:\n6 5\n1 2 same\n2 3 same\n3 4 same\n4 5 same\n5 6 same\nSample Output:\n6\nassert solution('''6 5\n1 2 same\n2 3 same\n3 4 same\n4 5 same\n5 6 same\n6 7 same\nSample Input:\n7 7\n1 2 same\n2 3 same\n3 4 same\n4 5 same\n5 6 same\n6 7 same\n7 8 same\nSample Output:\n7\n"
    },
    {
        "number": 3526,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"4\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3526,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"4\"\n\"\"\""
    },
    {
        "number": 3526,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 2\n2 4 same\n3 5 same''') == '4'\nassert solution('''5 4\n2 4 same\n3 4 same\n3 5 same''') == '0'\nassert solution('''5 4\n2 4 same\n3 4 same\n3 4 different\n3 5 same\n3 6 same''') == '3'\nassert solution('''5 4\n2 4 same\n3 4 same\n3 4 different\n3 5 same\n3 6 same\n3 7 same\n3 8 same\n3 9 same\n3 10 same\n3 11 same''') == '2'\nassert solution('''5 4\n2 4 same\n3 4 same\n3 4 different\n3 5 same\n3 6 same\n3 7 same\n3 8 same\n3 9 same\n3 10 same\n3 11 same\n3 12 same\n3 13 same\n3 14 same\n3 15 same\n3 16 same\n3 17 same\n3 18 same\n3 19 same\n3 20 same\n3 21 same''') == '1'\n"
    },
    {
        "number": 3526,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"4\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3526,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4\"\n\nSample Input:\n10 1\n1 5 same\nSample Output:\n1\n"
    },
    {
        "number": 3526,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '4'\n'''\n\nn, m = map(int, stdin.readline().split())\n\nd = dict()\n\nfor i in range(m):\n    l, r = map(int, stdin.readline().split())\n    if l not in d:\n        d[l] = 0\n    if r not in d:\n        d[r] = 0\n    if d[l] == 0 and d[r] == 0:\n        print(0, end='')\n    elif d[l] == 0 and d[r] == 1:\n        print(1, end='')\n    elif d[l] == 1 and d[r] == 0:\n        print(2, end='')\n    else:\n        print(3, end='')\n    d[l] = (d[l] + 1) % 2\n    d[r] = (d[r] + 1) % 2\n"
    },
    {
        "number": 3526,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 2\n2 4 same\n3 5 same''') == '4'\nassert solution('''5 1\n1 2 same\n4 5 same''') == '0'\nassert solution('''5 5\n1 2 same\n3 4 same\n2 3 same\n4 5 same''') == '1'\nassert solution('''5 5\n1 2 same\n3 4 same\n2 3 same\n4 5 same\n1 1 same\n2 2 same\n3 3 same\n4 4 same\n5 5 same\n1 1 same\n2 2 same\n3 3 same\n4 4 same\n5 5 same''') == '1'\nassert solution('''5 1\n1 1 same\n2 2 same\n3 3 same\n4 4 same\n5 5 same''') == '0'\n"
    },
    {
        "number": 3526,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 2\n2 4 same\n3 5 same''') == '4'\nassert solution('''6 4\n2 5 same\n3 5 same\n4 5 same\n3 4 same\n2 4 same\n5 4 same''') == '4'\nassert solution('''6 5\n2 4 same\n3 5 same\n4 5 same\n3 4 same\n2 4 same\n5 4 same\n4 5 same''') == '0'\nassert solution('''6 5\n2 4 same\n3 5 same\n4 5 same\n3 4 same\n2 4 same\n5 4 same\n4 5 same\n3 4 same''') == '1'\nassert solution('''6 5\n2 4 same\n3 5 same\n4 5 same\n3 4 same\n2 4 same\n5 4 same\n4 5 same\n3 4 same''') == '2'\n"
    },
    {
        "number": 3527,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 4\n0 1\n0 2\n3 4\n3 5\n''') == '3'\nassert solution('''2 1\n0 1\n1 0\n''') == '-1'\nassert solution('''3 3\n0 1\n0 2\n1 2\n2 0\n3 0\n1 3\n2 3\n3 1\n''') == '-1'\nassert solution('''7 5\n0 1\n0 2\n1 2\n2 3\n3 4\n4 5\n5 6\n''') == '3'\nassert solution('''10 2\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n0 8\n0 9\n0 10\n1 2\n1 3\n1 4\n1 5\n2 3\n3 4\n3 5\n4 5\n5 6\n''') == '4'\n"
    },
    {
        "number": 3527,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3\""
    },
    {
        "number": 3527,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6 4\n0 1\n0 2\n3 4\n3 5\n0 1\n0 2\n3 4\n3 5\n0 1\n0 2\n3 4\n3 5''') == '3'\nassert solution('''6 4\n0 1\n0 2\n3 4\n3 5\n0 1\n0 2\n3 4\n3 5\n0 1\n0 2\n3 4\n3 5''') == '3'\nassert solution('''1 1\n1 2\n2 1\n2 3\n3 4\n3 5\n4 5''') == '0'\nassert solution('''1 1\n1 2\n2 1\n2 3\n3 4\n3 5\n4 5\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6\n5 6"
    },
    {
        "number": 3527,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3527,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6 4\n0 1\n0 2\n3 4\n3 5''') == '3'\nassert solution('''5 10\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n1 2\n1 3\n2 3\n2 4\n3 4\n3 5''') == '3'\nassert solution('''4 10\n0 1\n0 2\n0 3\n0 4\n1 2\n1 3\n1 4\n2 3\n2 4\n2 5\n3 4\n3 5\n3 6''') == '3'\nassert solution('''4 5\n0 1\n0 2\n0 3\n0 4\n1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n2 5\n3 4\n3 5\n3 6''') == '0'\nassert solution('''3 5\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n1 2\n1 3\n1 4\n1 5\n1 6\n2 3\n2 4\n2 5\n2 6\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10''') == '0'\n"
    },
    {
        "number": 3527,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6 4\n0 1\n0 2\n3 4\n3 5''') == '3'\nassert solution('''6 3\n0 1\n1 2\n3 4\n4 5\n0 5''') == '2'\nassert solution('''10 10\n1 2\n2 3\n3 4\n4 5\n4 6\n5 6\n6 7\n6 8\n6 9\n6 10\n7 8\n8 9\n9 10''') == '3'\nassert solution('''10 8\n0 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 3\n3 4\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n5 6\n6 7\n7 8\n8 9\n9 10''') == '2'\nassert solution('''10 8\n0 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 3\n3 4\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n5 6\n6 7\n7 8\n8 9\n9 10''') == '1'\n"
    },
    {
        "number": 3527,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 5\") == \"3\"\nassert solution(\"6 4\") == \"3\"\nassert solution(\"6 5\") == \"4\"\nassert solution(\"2 4\") == \"3\"\nassert solution(\"1 5\") == \"4\"\n"
    },
    {
        "number": 3527,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '3'\nassert solution(stdin) == '4'\nassert solution(stdin) == '5'\nassert solution(stdin) == '6'\nassert solution(stdin) == '7'\n"
    },
    {
        "number": 3527,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\") == 3\nassert solution(\"2 5\\n3 4\\n0 2\") == 0\nassert solution(\"4 6\\n0 1\\n0 2\\n0 3\\n0 4\") == 1\nassert solution(\"5 6\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\") == 2\nassert solution(\"8 4\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\\n0 6\\n0 7\\n0 8\") == 5\n"
    },
    {
        "number": 3527,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 4\\n0 1\\n0 2\\n3 4\\n3 5\\n0 1') == 3\n"
    },
    {
        "number": 3528,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"5\n1 4\n2 2\n4 1\n3 5\n5 3\nLUR\"\"\") == \"\"\"9.0\n6.5\n2.5\"\"\"\n"
    },
    {
        "number": 3528,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n1 4\n2 2\n4 1\n3 5\n5 3\nLUR''') == '9.0\\n6.5\\n2.5\\n'\nassert solution('''2\n2 2\n1 1\n3 5\n5 3\nDDL''') == '6.5\\n2.5\\n'\nassert solution('''3\n4 2\n1 4\n2 3\n2 1\nUUR''') == '8.5\\n2.5\\n'\nassert solution('''4\n4 2\n1 4\n2 3\n3 1\nDDL''') == '8.5\\n2.5\\n'\nassert solution('''6\n1 1\n1 1\n2 4\n3 4\n3 1\nLLR''') == '14.5\\n8.5\\n'\n"
    },
    {
        "number": 3528,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"0.0\"\nassert solution(\"2\") == \"0.0\"\nassert solution(\"3\") == \"0.5\"\nassert solution(\"4\") == \"1.0\"\nassert solution(\"5\") == \"1.5\"\n"
    },
    {
        "number": 3528,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n4\\n2\\n2\\n4\\n1\\n3\\n5\\n5\\nLUR\") == \"9.0\\n6.5\\n2.5\"\nassert solution(\"4\\n1\\n2\\n3\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4"
    },
    {
        "number": 3528,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n1 4\n2 2\n4 1\n3 5\n5 3\nLUR''') == '9.0\\n6.5\\n2.5'\nassert solution('''3\n4 2\n3 2\n1 5\n''') == '9.0\\n6.5\\n2.5'\nassert solution('''6\n5 3\n2 1\n1 5\n3 3\n2 2\n''') == '15.5\\n8.0\\n6.5'\nassert solution('''1\n2 1\n''') == '1.0'\nassert solution('''4\n2 1\n2 1\n2 1\n1 1\n''') == '3.0'\n'''\n"
    },
    {
        "number": 3528,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR') == '9.0\\n6.5\\n2.5'\nassert solution('4\\n1 1\\n2 2\\n4 1\\n3 5') == '9.0\\n6.5\\n2.5'\nassert solution('5\\n1 1\\n2 2\\n4 1\\n3 5\\n5 3') == '9.0\\n6.5\\n2.5'\nassert solution('5\\n1 1\\n2 2\\n4 1\\n3 5\\n5 3\\nLLURDD') == '9.0\\n6.5\\n2.5'\nassert solution('5\\n1 1\\n2 2\\n4 1\\n3 5\\n5 3\\nRDD') == '9.0\\n6.5\\n2.5'\n"
    },
    {
        "number": 3528,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"5\n1 4\n2 2\n4 1\n3 5\n5 3\nLUR\"\"\") == \"\"\"9.0\n6.5\n2.5\"\"\"\n"
    },
    {
        "number": 3528,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n1 4\n2 2\n4 1\n3 5\n5 3\nLUR''') == '9.0\\n6.5\\n2.5'\n'''\n"
    },
    {
        "number": 3528,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n1 4\n2 2\n4 1\n3 5\n5 3\nLUR''') == '9.0\\n6.5\\n2.5'\n'''\nimport sys"
    },
    {
        "number": 3528,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''5\n1 4\n2 2\n4 1\n3 5\n5 3\nLUR''') == '9.0\\n6.5\\n2.5'\nassert solution(\n'''5\n1 4\n2 2\n4 1\n3 5\n5 3\nRDLU''') == '9.0\\n6.5\\n2.5'\nassert solution(\n'''5\n1 4\n2 2\n4 1\n3 5\n5 3\nRDLU''') == '9.0\\n6.5\\n2.5'\nassert solution(\n'''5\n1 4\n2 2\n4 1\n3 5\n5 3\nLLUR''') == '9.0\\n6.5\\n2.5'\nassert solution(\n'''5\n1 4\n2 2\n4 1\n3 5\n5 3\nRLDL''') == '9.0\\n6.5\\n2.5'\n"
    },
    {
        "number": 3529,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 3 2\") == \"1\"\nassert solution(\"1 2 2\") == \"0\"\nassert solution(\"3 2 2\") == \"0\"\nassert solution(\"3 3 3\") == \"1\"\nassert solution(\"3 3 2\") == \"0\"\n"
    },
    {
        "number": 3529,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3529,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1\"\n\nprint('solution passed')\n\nprint(solution(stdin))\nassert solution(stdin) == \"1\"\n\nprint('solution passed')\n\nprint(solution(stdin))\nassert solution(stdin) == \"0\"\n\nprint('solution passed')\n\nprint(solution(stdin))\nassert solution(stdin) == \"0\"\n\nprint('solution passed')\n\nprint(solution(stdin))\nassert solution(stdin) == \"1\"\n\nprint('solution passed')\n\nprint(solution(stdin))\n"
    },
    {
        "number": 3529,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout)\n\nprint('test passed')\n"
    },
    {
        "number": 3529,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 3 2\nB 1 2\nB 2 3\nR 3 1''') == '1'\nassert solution('''4 6 3\nB 1 2\nB 1 3\nB 2 3\nB 1 4\nB 1 5\nB 2 3\nR 4 1\nR 1 2\nR 3 4\nB 3 2\nR 2 1\nR 1 4\nR 3 2\nR 4 1\nR 3 1''') == '1'\nassert solution('''3 4 2\nR B B\nR B R\nR B B\nR B R''') == '0'\nassert solution('''10 7 2\nB 1 3\nB 1 4\nB 2 3\nB 2 4\nB 3 4\nR 5 1\nR 5 2\nR 6 4\nB 4 2\nB 4 5\nB 4 6\nR 7 1\nR 7 2\nR 7 3''') == '1'\nassert solution('''10 7 2\nR B B\nR B R\nR B B\nR B R\nR R R\nR R R\nR R B\nB R R\nR B R\nB R R\nB B R''') == '1'\n"
    },
    {
        "number": 3529,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3529,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 3 2\nB 1 2\nB 2 3\nR 3 1''') == '1'\nassert solution('''4 4 3\nR R R\nR R R\nR R R\nR R R\nB B B\nB B B''') == '0'\n'''\nfrom __future__ import annotations"
    },
    {
        "number": 3529,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 3 2\\nB 1 2\\nB 2 3\\nR 3 1') == '1'\nassert solution('3 4 2\\nB 1 2\\nB 2 3\\nB 3 4\\nB 4 5\\nR 1 5') == '0'\nassert solution('5 5 5\\nR 1 2\\nB 1 4\\nB 2 3\\nR 3 4\\nR 4 5\\nR 5 6') == '0'\nassert solution('5 5 5\\nB 1 2\\nB 2 3\\nB 3 4\\nR 4 5\\nR 5 6') == '0'\nassert solution('5 6 4\\nR 1 2\\nB 1 4\\nB 2 3\\nR 3 4\\nR 4 5\\nR 5 6') == '1'\n"
    },
    {
        "number": 3529,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\n"
    },
    {
        "number": 3529,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '1'\n'''"
    },
    {
        "number": 3530,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n5 0 5\n7 0 7\n4\n88\n5\n6\n7''') == '''88\n5\n5\n7\n88'''\nassert solution('''1\n0\n0\n0\n0\n0''') == '''0\n0\n0\n0\n0'''\nassert solution('''5\n2 0 2\n4 0 4\n5 0 5\n7 0 7\n8 0 8\n9 0 9''') == '''30\n9\n14\n26\n39\n49\n58'''\nassert solution('''4\n0\n0\n0\n0\n0''') == '''0\n0\n0\n0\n0'''\nassert solution('''0\n0\n0\n0\n0\n0''') == '''0\n0\n0\n0\n0'''\n"
    },
    {
        "number": 3530,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == '300000'\nassert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == '300000'\nassert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == '300000'\nassert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == '300000'\nassert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == '300000'\n"
    },
    {
        "number": 3530,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3530,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\n5 0 5\n7 0 7\n4\n88\n5\n6\n7''') == '88\\n5\\n5\\n7\\n7'\nassert solution('''2\n5 0 5\n7 0 7\n4\n88\n5\n6\n7\n''') == '88\\n5\\n5\\n7\\n7'\nassert solution('''2\n5 0 5\n7 0 7\n4\n88\n5\n6\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7"
    },
    {
        "number": 3530,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3530,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3530,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n0 0 5\n7 0 7\n4\n88\n5\n6\n7''') == '88\\n5\\n5\\n7\\n7'\nassert solution('''6\n0 0 1\n1 0 1\n2\n2\n3\n3\n3''') == '2\\n2\\n2\\n2\\n2\\n2'\nassert solution('''7\n0 0 2\n1 0 1\n2\n2\n3\n3\n3\n3\n3\n3''') == '2\\n2\\n2\\n2\\n2\\n2\\n2\\n2'\nassert solution('''8\n0 0 5\n1 0 7\n2\n2\n3\n3\n3\n3\n3\n3\n3\n3\n3''') == '2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2'\nassert solution('''9\n0 0 2\n1 0 1\n2\n2\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3''') == '2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2'\n"
    },
    {
        "number": 3530,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n5 0 5\n7 0 7\n4\n88\n5\n6\n7''') == '88\\n5\\n5\\n7\\n'\nassert solution('''3\n5 0 5\n7 0 7\n4\n88\n5\n6\n7''') == '88\\n5\\n5\\n7\\n'\nassert solution('''2\n5 0 5\n7 0 7\n4\n88\n7\n6\n7''') == '88\\n5\\n5\\n7\\n'\nassert solution('''2\n5 0 5\n7 0 7\n4\n88\n8\n6\n7''') == '88\\n5\\n5\\n7\\n'\nassert solution('''2\n5 0 5\n7 0 7\n4\n88\n8\n7\n6''') == '88\\n5\\n5\\n7\\n'\n"
    },
    {
        "number": 3530,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n2\n5 0 5\n7 0 7\n4\n88\n5\n6\n7\n''') == '88\\n5\\n5\\n7\\n'\n"
    },
    {
        "number": 3530,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1\n2 3\n4 5\n5 5\n''') == '''1\n6\n5\n6\n'''\nassert solution('''3\n5 0 5\n6 0 6\n5\n9\n6\n''') == '''1\n4\n8\n5\n9\n'''\nassert solution('''3\n3 0 3\n6 0 6\n6\n9\n9\n''') == '''5\n10\n4\n9\n'''\nassert solution('''2\n2 0 2\n4 0 4\n4\n1\n3\n5\n''') == '''1\n4\n2\n5\n'''\nassert solution('''3\n2 0 2\n4 0 4\n4\n6\n7\n8\n''') == '''8\n10\n6\n7\n8\n'''\n"
    },
    {
        "number": 3531,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3 3 1 2\n2\n1 2 2\n1 3 1\n2 3 3\n\"\"\") == \"5\"\nassert solution(\"\"\"3 3 1 2\n2\n1 2 2\n1 3 1\n2 3 3\n\"\"\") == \"5\"\nassert solution(\"\"\"1 2 1\n1 3 1\n3 1 2\n1 2 1\n\"\"\") == \"-1\"\nassert solution(\"\"\"3 3 1 2\n2\n1 2 2\n1 3 1\n2 3 3\n\"\"\") == \"-1\"\nassert solution(\"\"\"2 1 1\n1 2 1\n1 3 1\n2 3 2\n\"\"\") == \"-1\"\n"
    },
    {
        "number": 3531,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 3 1 2\n2\n1 2 2\n1 3 1\n2 3 3''') == 5\nassert solution('''10 10 3 2\n10\n1 2 2\n1 3 1\n2 3 3\n10 1 2\n1 9 1\n1 5 1\n1 6 1\n10 2 2\n2 1 1\n2 9 1\n2 9 1\n2 4 1\n2 9 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2 9 1\n2 4 1\n2"
    },
    {
        "number": 3531,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 3 1 2\n2\n1 2 2\n1 3 1''') == \"5\"\nassert solution('''3 3 1 2\n2\n1 2 2\n1 3 1\n2 3 3''') == \"5\"\nassert solution('''3 4 1 2\n2\n1 3 1\n2 3 2\n2 4 2\n3 4 3''') == \"5\"\nassert solution('''2 4 1 2\n2\n1 3 1\n2 3 2\n2 4 2''') == \"3\"\nassert solution('''2 4 1 2\n2\n1 3 1\n2 3 2\n2 4 2\n3 4 3''') == \"-1\"\n"
    },
    {
        "number": 3531,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"3 3 1 2\"\"\") == \"5\"\nassert solution(\"\"\"3 3 1 2\"\"\") == \"5\"\nassert solution(\"\"\"3 3 1 2\"\"\") == \"5\"\nassert solution(\"\"\"2\n1 2 2\n1 3 1\"\"\") == \"2\"\nassert solution(\"\"\"2\n1 2 2\n1 3 1\"\"\") == \"2\"\n"
    },
    {
        "number": 3531,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 3 1 2\n2\n1 2 2\n1 3 1''') == '5'\nassert solution('''3 3 1 2\n2\n1 2 2\n1 3 1''') == '5'\nassert solution('''3 3 1 2\n2\n1 2 2\n1 3 1''') == '5'\nassert solution('''5 5 1 1\n1\n1 2 1\n1 2 2\n1 2 3\n1 3 1\n1 4 1\n1 5 1\n2\n1 3 1\n1 4 1\n1 5 1\n2\n1 3 1\n1 4 1\n1 5 1\n3\n1 3 1\n1 4 1\n1 5 1\n2\n1 3 1\n1 4 1\n1 5 1''') == '-1'\nassert solution('''5 5 1 1\n1\n1 2 1\n1 2 2\n1 2 3\n1 3 1\n1 4 1\n1 5 1\n2\n1 3 1\n1 4 1\n1 5 1\n2\n1 3 1\n1 4 1\n1 5 1\n3\n1 3 1\n1 4 1\n1 5 1\n2\n1 3 1\n1 4 1\n1 5 1''') == '3'\n"
    },
    {
        "number": 3531,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(open('test/data/unittest1.txt').read()) == 2\nassert solution(open('test/data/unittest2.txt').read()) == 3\nassert solution(open('test/data/unittest3.txt').read()) == 3\nassert solution(open('test/data/unittest4.txt').read()) == 3\nassert solution(open('test/data/unittest5.txt').read()) == -1\n"
    },
    {
        "number": 3531,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 3 1 2\") == \"5\"\nassert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == \"5\"\nassert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == \"5\"\nassert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\\n3 3 3\\n4 4 4\\n5 5 5\") == \"-1\"\nassert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\\n3 3 3\\n4 4 4\\n5 5 5\\n6 6 6\") == \"-1\"\n"
    },
    {
        "number": 3531,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n3 3 1 2\n2\n1 2 2\n1 3 1\n2 3 3\n''') == '5'\nassert solution('''\n3 3 1 2\n2\n1 2 2\n1 3 1\n2 3 3\n''') == '-1'\nassert solution('''\n4 4 1 2\n2\n1 2 2\n1 3 1\n2 3 2\n1 4 1\n3 4 3\n''') == '9'\nassert solution('''\n2 2 1\n2\n2 2 1\n2 2 1\n''') == '-1'\nassert solution('''\n4 4 1 2\n2\n1 2 2\n1 3 1\n2 3 2\n1 4 1\n3 4 3\n''') == '4'\n"
    },
    {
        "number": 3531,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n1\\n1\\n2\") == \"5\"\nassert solution(\"2\\n1\\n1\\n1\\n1\") == \"5\"\nassert solution(\"2\\n3\\n2\\n1\\n1\\n1\\n1\\n2\") == \"2\"\nassert solution(\"1\\n2\\n2\\n1\") == \"-1\"\nassert solution(\"2\\n2\\n1\\n1\") == \"2\"\n"
    },
    {
        "number": 3531,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n4 5 3 4\n1 2 2\n1 3 1\n2 3 2\n''') == '8'\nassert solution('''\n4 3 2 1\n1 2 2\n1 3 1\n2 3 2\n''') == '-1'\nassert solution('''\n3 3 1 2\n1 2 2\n1 3 1\n2 3 2\n''') == '1'\nassert solution('''\n2 2 1 1\n1 2 2\n1 3 1\n2 3 2\n''') == '1'\nassert solution('''\n3 3 2 1\n1 2 2\n1 3 1\n2 3 2\n''') == '-1'\n"
    },
    {
        "number": 3532,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    'mirkovC4nizCC44'\n    'C4'\n) =='mirkovniz'\n\nassert solution(\n    'mirkovnizCC4'\n    'C4'\n) =='mirkovniz'\n\nassert solution(\n    'mirkovC4nizCC44'\n    'C4'\n) =='mirkovniz'\n\nassert solution(\n    'mirkovC4nizCC44'\n    'CC4'\n) == 'FRULA'\n\nassert solution(\n    'mirkovC4nizCC44'\n    'CC44'\n) == 'FRULA'"
    },
    {
        "number": 3532,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == 'FRULA'\nassert solution('mirkovC4nizCC44') =='mirkovniz'\nassert solution('C4') == 'FRULA'\nassert solution('C4nizCC44') == 'C4nizCC44'\nassert solution('CC4nizCC44') == 'C4nizCC44'\n"
    },
    {
        "number": 3532,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''mirkovC4nizCC44\nC4''') =='mirkovniz'\nassert solution('''mirkovC4nizCC44\nC4''') =='mirkovniz'\nassert solution('''mirkovC4nizCC44\nz2\n''') =='mirkovniz'\nassert solution('''mirkovC4nizCC44\nCC4\n''') =='mirkovniz'\nassert solution('''mirkovC4nizCC44\nz4\n''') =='mirkovniz'\n"
    },
    {
        "number": 3532,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"4NizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4nizC4"
    },
    {
        "number": 3532,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('abcccd') == 'abcccd'\nassert solution('aabbcccddddeee') == 'aabbcccddddeee'\nassert solution('c') == 'c'\nassert solution('aabbcccd') == 'aabbcccd'\n"
    },
    {
        "number": 3532,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('mirkovC4nizCC44') =='mirkovniz'\nassert solution('C4') == 'FRULA'\nassert solution('C1') == 'FRULA'\nassert solution('C3') == 'FRULA'\nassert solution('C2') == 'FRULA'\n"
    },
    {
        "number": 3532,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('mirkovC4nizCC44') =='mirkovniz'\nassert solution('C4') == 'FRULA'\nassert solution('CC') == 'FRULA'\nassert solution('1') == 'FRULA'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3532,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''mirkovC4nizCC44''') =='mirkovniz'\nassert solution('''mirkovC4nizCC44''') =='mirkovniz'\nassert solution('''ACAAAAAA''') == 'FRULA'\nassert solution('''AAAA''') == 'FRULA'\nassert solution('''ABCDEFGHI''') == 'FRULA'\n"
    },
    {
        "number": 3532,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('foo') == 'foo'\nassert solution('bar') == 'bar'\nassert solution('CCCCC') == 'CCCC'\nassert solution('barbarbarbar') == 'barbarbarbar'\n"
    },
    {
        "number": 3532,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('C4') == 'FRULA'\nassert solution('CCC') == 'FRULA'\nassert solution('ccC') == 'FRULA'\nassert solution('Ccc') == 'FRULA'\n"
    },
    {
        "number": 3533,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2') == '2'\nassert solution('1\\n2\\n3') == '5'\nassert solution('1\\n2\\n3\\n4\\n5') == '6'\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == '8'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7') == '10'\n"
    },
    {
        "number": 3533,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n3 65\n45 10\n60 25''') == '32'\n'''\nimport sys\nassert sys.argv[0] == 'python3'\nassert sys.argv[1] == 'tricks', sys.argv[1]\nimport importlib\nimportlib.import_module(sys.argv[1])\nassert importlib.import_module(sys.argv[1]).solution('''3\n3 65\n45 10\n60 25''') == '32'\nassert importlib.import_module(sys.argv[1]).solution('''3\n3 65\n45 10\n60 25\n5 120\n4 60\n4 30\n5 4\n4 5\n6 7\n3 2\n4 1\n3 2\n5 1\n2 1\n5 1\n3 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n2 1\n5 1\n2 1\n4 1\n3 4\n5 1\n6 1\n"
    },
    {
        "number": 3533,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3533,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n3 65\\n45 10\\n60 25') == '32'\nassert solution('1\\n1 1') == '0'\nassert solution('1\\n2 1') == '1'\nassert solution('1\\n3 1') == '2'\nassert solution('1\\n4 1') == '3'\n"
    },
    {
        "number": 3533,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n3 65\n45 10\n60 25''') == '32'\nassert solution('''3\n45 10\n60 25\n3 65\nSample Input:\n3\n1 1\n2 2\n3 3\nSample Output:\n0\n"
    },
    {
        "number": 3533,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n3 65\n45 10\n60 25''') == '32'\nassert solution('''3\n3 65\n45 10\n60 25''') == '32'\nassert solution('''3\n3 65\n45 10\n60 25\n3\n3 65\n45 10\n60 25''') == '38'\nassert solution('''3\n3 65\n45 10\n60 25\n3\n3 65\n45 10\n60 25\n3\n3 65\n45 10\n60 25''') == '38'\nassert solution('''3\n3 65\n45 10\n60 25\n3\n3 65\n45 10\n60 25\n3\n3 65\n45 10\n60 25''') == '38'\n"
    },
    {
        "number": 3533,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n    3 65\n    45 10\n    60 25''') == '32'\nassert solution('''10\n    22\n    2 2\n    6 7\n    9 3\n    1 22\n    3 6\n    2 4\n    2 6\n    2 7\n    2 3\n    2 19\n    2 3\n    2 4\n    2 5\n    2 2\n    2 7\n    2 11\n    2 15\n    2 2\n    2 22\n    2 22\n    2 22\n    2 21\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n    2 22\n"
    },
    {
        "number": 3533,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n3 65\\n45 10\\n60 25') == '32'\nassert solution('3\\n3 65\\n45 10\\n60 25\\n1000000000 45 1000\\n1000000000 45 1000\\n1000000000 45 1000\\n1000000000 45 1000') == '112000000000'"
    },
    {
        "number": 3533,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n3 65\n45 10\n60 25''') == '32'\nassert solution('''3\n45 10\n45 10\n60 25''') == '32'\nassert solution('''3\n60 25\n60 25\n60 25''') == '32'\nassert solution('''3\n3 65\n3 65\n60 25''') == '32'\nassert solution('''3\n3 65\n3 65\n60 25''') == '32'\n"
    },
    {
        "number": 3533,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 65\\n45 10\\n60 25\") == \"32\"\n\nprint(\"no test\")\n"
    },
    {
        "number": 3534,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\n\nimport sys"
    },
    {
        "number": 3534,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"2\\n1\"\nassert solution(\"1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\") == \"2\\n1\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\") == \"10\\n1\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\") == \"100\\n1\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\") == \"100\\n1\"\n"
    },
    {
        "number": 3534,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n1 2 0 3 1''') == '3'\nassert solution('''5\n1 2 0 3 1''') == '2'\nassert solution('''10\n1 2 0 3 1''') == '9'\n''') == '9'\n'''\n"
    },
    {
        "number": 3534,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0\") == \"3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\n"
    },
    {
        "number": 3534,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('input.txt') == output\nassert solution('input2.txt') == output2\nassert solution('input3.txt') == output3\nassert solution('input4.txt') == output4\nassert solution('input5.txt') == output5\nprint('All set! Click \"Check\" to earn cool rewards!')"
    },
    {
        "number": 3534,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('0') == '1'\nassert solution('1') == '1'\nassert solution('1 2') == '2'\nassert solution('1 2 3') == '3'\n"
    },
    {
        "number": 3534,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n1 2 0 3 1''') == '3'\nassert solution('''5\n1 2 0 3 1''') == '2'\nassert solution('''5\n-1 -2 -3 -4 -5''') == '-1'\nassert solution('''5\n1 4 6 4 3 2''') == '4'\nassert solution('''5\n1 2 3 4 5''') == '2'\n"
    },
    {
        "number": 3534,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n1 2 0 3 1''') == '3'\nassert solution('''3\n0 1 1 2''') == '3'\nassert solution('''2\n-10^9 -1 -10^9''') == '-1'\n'''\nassert solution('''3\n-10^9 0 -10^9''') == '-1'\n'''\nassert solution('''10\n-10^9 -1 -10^9 0 -10^9 0 -10^9''') == '-1'\n"
    },
    {
        "number": 3534,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n1 2 0 3 1''') == '3\\n2'\nassert solution('''10\n1 2 2 3 3 4 4 5 5 5 6 6 6 7 7 7 7 8 8 8 8 9 9 9 9''') == '9\\n8'\nassert solution('''10\n1 2 2 3 3 4 4 5 5 5 6 6 6 7 7 7 7 7 8 8 8 8 8 9 9 9 9''') == '9\\n8'\nassert solution('''10\n1 2 2 3 3 4 4 5 5 5 6 6 6 7 7 7 7 7 8 8 8 8 8 9 9 9 9''') == '9\\n8'\nassert solution('''10\n1 2 2 3 3 4 4 5 5 5 6 6 6 7 7 7 7 7 7 8 8 8 8 8 9 9 9 9''') == '9\\n8'\n"
    },
    {
        "number": 3534,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n1 2 0 3 1''') == '3\\n2'\nassert solution('''5\n0 1 0 2 1''') == '3\\n2'\nassert solution('''4\n-1 2 -3 1''') == '2\\n2'\nassert solution('''4\n0 -1 -3 1''') == '2\\n2'\nassert solution('''4\n2 -1 -3 1''') == '2\\n2'\n"
    },
    {
        "number": 3535,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 4 4') == '2'\nassert solution('4 4 4') == '4'\nassert solution('7 7 7') == '1'\nassert solution('4 4 5') == '0'\nassert solution('4 4 4') == '1'\n"
    },
    {
        "number": 3535,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 4 4\") == \"2\"\nassert solution(\"2 4 4\") == \"3\"\nassert solution(\"2 4 1\") == \"2\"\nassert solution(\"2 4 5\") == \"2\"\nassert solution(\"1 1 1\") == \"1\"\n"
    },
    {
        "number": 3535,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4') == '2'\nassert solution('2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\\n+ 1 4\\n- 1 3\\n+ 1 2\\n- 1 1') == '2'\nassert solution('1 1 1\\n1 1 2\\n1 1 3\\n1 1 4\\n1 2 1\\n1 2 2\\n1 2 3\\n1 2 4\\n1 3 1\\n1 3 2\\n1 3 3\\n1 3 4\\n1 4 1\\n1 4 2\\n1 4 3\\n1 4 4') == '5'\nassert solution('1 1 1\\n1 1 2\\n1 1 3\\n1 1 4\\n1 2 1\\n1 2 2\\n1 2 3\\n1 2 4\\n1 3 1\\n1 3 2\\n1 3 3\\n1 3 4\\n1 4 1\\n1 4 2\\n1 4 3\\n1 4 4\\n1 5 1\\n1 5 2\\n1 5 3\\n1 5 4') == '1'\nassert solution('1 1 1\\n1 1 2\\n1 1 3\\n1 1 4\\n1 2 1\\n1 2 2\\n1 2 3\\n1 2 4\\n1 3 1\\n1 3 2\\n1 3 3\\n1 3 4\\n1 4 1\\n1 4 2\\n1 4 3\\n1 4 4\\n1 5 1\\n1 5 2\\n1 5 3\\n1 5 4\\n1 6 1\\n1 6 2\\n1 6 3\\n1 6 4\\n1 7 1\\n1 7 2\\n1 7 3\\n1 7 4') == '4'\n"
    },
    {
        "number": 3535,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4') == '2'\nassert solution('2 4 4\\n- 1 1\\n- 1 2\\n- 1 3\\n- 1 4') == '0'\n\"\"\"\n\nn, m, k = [int(x) for x in stdin.readline().split()]\nd = {}\nfor _ in range(k):\n    y, x, s = [int(x) for x in stdin.readline().split()]\n    if s == 1:\n        d[(y, x)] = 0\n    else:\n        d[(y, x)] = 1\n\ns = 0\nfor y in range(1, n + 1):\n    for x in range(1, m + 1):\n        if (y, x) in d:\n            s += 1\n\nprint(s % (10 ** 9 + 7))\n"
    },
    {
        "number": 3535,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == '2'\n\"\"\"\nimport sys\nfrom functools import reduce\nfrom operator import mul\nfrom typing import List, Tuple, Set, Dict"
    },
    {
        "number": 3535,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('1 1 1') == ''\nassert solution('-1 2 -1') == ''\nassert solution('-1 2 2') == ''\nassert solution('-1 1 3') == ''\n"
    },
    {
        "number": 3535,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\"\n\nimport sys\nfrom math import sqrt\n\nstdin = sys.stdin.read()\nn, m, k = map(int, stdin.split())\nN = n\nM = m\nK = k"
    },
    {
        "number": 3535,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 2\n\nTest case 1:\n\nSample Input:\n2 2 4\n+ 1 1\n+ 1 2\n+ 1 3\n- 1 4\nSample Output:\n3\n\nTest case 2:\n\nSample Input:\n3 2 4\n-1 1\n-1 2\n-1 3\n+ 1 4\nSample Output:\n2\n\nTest case 3:\n\nSample Input:\n4 4 5\n+ 1 1\n+ 1 2\n+ 1 3\n+ 1 4\n+ 1 5\n+ 1 6\n+ 1 7\n+ 1 8\n+ 1 9\n+ 1 10\n+ 1 11\n+ 1 12\n+ 1 13\n+ 1 14\nSample Output:\n8\n\nTest case 4:\n\nSample Input:\n3 1 1\n+ 1 1\n+ 1 1\n+ 1 1\nSample Output:\n0\n\nTest case 5:\n\nSample Input:\n1 1 2\n+ 1 1\n+ 1 2\n+ 1 2\nSample Output:\n2\n\nTest case 6:\n\nSample Input:\n1 1 1\n+ 1 1\n+ 1 1\n+ 1 1\nSample Output:\n4\n'''\n"
    },
    {
        "number": 3535,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"2 4 4\n+ 1 1\n- 1 2\n+ 1 3\n- 1 4\"\"\"\n) == \"2\"\n"
    },
    {
        "number": 3535,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(sys.stdin.read()))\n"
    },
    {
        "number": 3536,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"500000004\"\nassert solution(stdin) == \"500000004\"\n\"\"\"\n"
    },
    {
        "number": 3536,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"500000004\"\n\"\"\"\n"
    },
    {
        "number": 3536,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1000000000 0\n1000000000 1''') == '500000004'\nassert solution('''2\n1000000000 0\n1000000000 1''') == '500000004'\n'''\n\nimport sys\nsys.setrecursionlimit(10**9+7)\n\nmod = 10**9+7"
    },
    {
        "number": 3536,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1000000000 0\n1000000000 1''') == 500000004\nassert solution('''2\n1000000000 0\n1000000000 1''') == 500000004'''\n\nassert solution('''4\n100 5\n1000000000 0\n1000000000 1''') == 500000004\nassert solution('''5\n1000000000 0\n1000000000 1\n1000000000 2\n1000000000 3''') == 500000004\nassert solution('''6\n1000000000 0\n1000000000 1\n1000000000 2\n1000000000 3\n1000000000 4\n1000000000 5''') == 500000004\n"
    },
    {
        "number": 3536,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n1000000000 0\n1000000000 1''') == '500000004'\nassert solution('''4\n1000000000 0\n1000000000 1\n1000000000 2\n1000000000 3''') == '500000004'\nassert solution('''6\n1000000000 0\n1000000000 1\n1000000000 2\n1000000000 3\n1000000000 4\n1000000000 5''') == '500000004'\nassert solution('''10\n100010000 0\n100010000 1\n100010000 2\n100010000 3\n100010000 4\n100010000 5\n100010000 6\n100010000 7\n100010000 8\n100010000 9''') == '500000004'\nassert solution('''1000\n1000 0\n1000 1\n1000 2\n1000 3\n1000 4\n1000 5\n1000 6\n1000 7\n1000 8\n1000 9''') == '500000004'\n"
    },
    {
        "number": 3536,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1000000000 0\n1000000000 1''') == '500000004'\nassert solution('''7 14\n7 1\n14 0''') == '11776683'\nassert solution('''4 11\n3 5\n4 8\n5 9\n6 2\n7 1\n8 4\n9 10\n10 1\n11 3\n''') == '66400660'\nassert solution('''3 1\n2 1\n1 0''') == '21'\nassert solution('''2 2\n1 0\n2 1''') == '1'\n"
    },
    {
        "number": 3536,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1') == 0\nassert solution('1 2') == 0\nassert solution('2 1') == 0\nassert solution('2 2') == 0\nassert solution('3 1') == 0\n"
    },
    {
        "number": 3536,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n1000000000 0\n1000000000 1''') == '500000004'\nassert solution('''3\n1000000000 0\n1000000000 1\n1000000000 2''') == '500000004'\nassert solution('''4\n1000000000 0\n1000000000 1\n1000000000 2\n1000000000 3''') == '500000004'\nassert solution('''5\n1000000000 0\n1000000000 1\n1000000000 2\n1000000000 3\n1000000000 4''') == '500000004'\nassert solution('''6\n1000000000 0\n1000000000 1\n1000000000 2\n1000000000 3\n1000000000 4\n1000000000 5''') == '500000004'\n"
    },
    {
        "number": 3536,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n1000000000 0\\n1000000000 1\\n') == '500000004'\nassert solution('5\\n4 0\\n2 2 0\\n3 3 1\\n5 5 2\\n3 2 1\\n5 2 1\\n4 1 2') == '7696579'\nassert solution('10\\n6 1\\n8 2 2 1\\n9 3 3 2 1\\n7 4 4 3 2 1\\n3 2 1\\n4 3 4 3 2 1\\n7 4 3 4 3 2 1\\n4 4 3 4 3 2 1\\n3 2 1\\n5 4 5 4 3 2 1\\n4 3 4 5 4 3 2 1\\n3 2 1\\n5 3 4 5 4 3 2 1\\n4 4 3 4 5 4 3 2 1\\n4 3 4 4 5 4 3 2 1') == '249362755'\n\"\"\"\n"
    },
    {
        "number": 3536,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2\n1000000000 0\n1000000000 1''') == '500000004'\nassert solution('''3\n1000000000 0\n1000000000 1\n1000000000 2''') == '500000004'\nassert solution('''4\n1000000000 0\n1000000000 1\n1000000000 2\n1000000000 3''') == '500000004'\nassert solution('''5\n1000000000 0\n1000000000 1\n1000000000 2\n1000000000 3\n1000000000 4''') == '500000004'\nassert solution('''6\n1000000000 0\n1000000000 1\n1000000000 2\n1000000000 3\n1000000000 4\n1000000000 5''') == '500000004'\n"
    },
    {
        "number": 3537,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 8\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24''') == '12'\nassert solution('''2 2\n1 1 1 1\n2 2 1 1''') == '3'\nassert solution('''10 10\n
    },
    {
        "number": 3537,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 12\n"
    },
    {
        "number": 3537,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5 8\") == \"12\"\nassert solution(\"5 8\") == \"12\"\nassert solution(\"5 6\") == \"12\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"6 6\") == \"36\"\n"
    },
    {
        "number": 3537,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3537,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 8') == '12'\nassert solution('3 4') == '1'\nassert solution('7 3') == '3'\nassert solution('8 4') == '3'\nassert solution('5 6') == '0'\n"
    },
    {
        "number": 3537,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 8') == '12'\nassert solution('3 5') == '20'\nassert solution('2 10') == '18'\nassert solution('10 8') == '25'\nassert solution('4 8') == '20'\n"
    },
    {
        "number": 3537,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 8\") == \"12\"\nassert solution(\"1 2 1 10\") == \"4\"\nassert solution(\"2 4 11 16\") == \"1\"\nassert solution(\"2 1 9 12\") == \"1\"\nassert solution(\"3 5 28 100\") == \"29\"\n"
    },
    {
        "number": 3537,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n1 2 1 10\") == \"8\"\nassert solution(\"3 3\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\") == \"15\"\n\nprint(solution(stdin))\n"
    },
    {
        "number": 3537,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\\n') == '12'\nassert solution('1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\\n') == '12'\nassert solution('1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\\n') == '12'\nassert solution('1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\\n') == '12'\nassert solution('1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\\n') == '12'\n"
    },
    {
        "number": 3537,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 8') == '12'\nassert solution('1 2 1 10') == '3 2 1'\nassert solution('2 4 11 16') == '2 1 9'\nassert solution('2 1 9 12') == '1 2 3'\nassert solution('3 5 28 100') == '1 2 3'\n"
    },
    {
        "number": 3538,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 19\") == \"3\"\nassert solution(\"6 17 5\") == \"3\"\nassert solution(\"1000000000 1000000000 1000000000\") == \"999999\"\nassert solution(\"15 6 4\") == \"2\"\nassert solution(\"1000000000 1000000000 1000000000\") == \"999999\"\n"
    },
    {
        "number": 3538,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 3538,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n3 19\n15 5 3\n12 4 4\n20 10 5\n\"\"\") == \"3\"\nassert solution(\n\"\"\"\n3 17\n15 5 3\n12 4 4\n20 10 5\n\"\"\") == \"2\"\nassert solution(\n\"\"\"\n3 15\n15 5 3\n12 4 4\n20 10 5\n\"\"\") == \"3\"\nassert solution(\n\"\"\"\n1 5\n4\n4\n5\n5\n\"\"\") == \"0\"\nassert solution(\n\"\"\"\n4 5\n1\n3\n4\n5\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3538,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3538,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '3'\n'''\n"
    },
    {
        "number": 3538,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"3 19\n15 5 3\n12 4 4\n20 10 5\n\"\"\") == \"3\"\nassert solution(\n\"\"\"3 19\n12 4 4\n15 5 3\n20 10 5\n\"\"\") == \"3\"\nassert solution(\n\"\"\"3 2\n100000 2 1\n100000 1 2\n\"\"\") == \"2\"\nassert solution(\n\"\"\"4 3\n1 3 1\n1 2 2\n2 1 1\n\"\"\") == \"1\"\nassert solution(\n\"\"\"4 3\n1 3 1\n1 2 2\n2 1 1\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3538,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3538,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n"
    },
    {
        "number": 3538,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2\\n0 0\\n0 0\") == \"2\"\nassert solution(\"1\\n0 0\\n1 0\") == \"1\"\nassert solution(\"1\\n0 0\\n0 0\") == \"0\"\nassert solution(\"2\\n0 0\\n0 0\") == \"1\"\nassert solution(\"2\\n0 0\\n0 0\") == \"1\"\n"
    },
    {
        "number": 3538,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 19\n15 5 3\n12 4 4\n20 10 5''') == '3'\nassert solution('''4 10\n10 3 4\n3 9 5\n12 3 7\n16 5 2\n16 10 2\n5 15 8''') == '4'\nassert solution('''4 10\n10 3 4\n3 9 5\n12 3 7\n16 5 2\n16 10 2\n5 15 8''') == '5'\nassert solution('''3 19\n15 5 3\n12 4 4\n20 10 5\n4 5 6\n19 8 8\n1 4 5\n14 2 4\n15 5 2\n6 6 7''') == '7'\nassert solution('''3 19\n15 5 3\n12 4 4\n20 10 5\n4 5 6\n19 8 8\n1 4 5\n14 2 4\n15 5 2\n6 6 7''') == '7'\n"
    },
    {
        "number": 3539,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1\n2 3\n1''') == '1'\n'''\n\nassert solution('''1 1\n1 1\n1 1\n''') == '4'\n\nassert solution('''1 1\n1 1\n1 1\n1 1\n1 1\n''') == '8'\n\nassert solution('''1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n"
    },
    {
        "number": 3539,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1 1\\n') == '1'\nassert solution('2\\n1 1\\n2 1\\n') == '1'\nassert solution('3\\n1 1\\n2 1\\n3 1\\n') == '0'\nassert solution('4\\n1 1\\n2 1\\n3 1\\n4 1\\n') == '0'\nassert solution('5\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n') == '1'\n"
    },
    {
        "number": 3539,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 1''') == '1'\nassert solution('''2 1''') == '2'\nassert solution('''10 1''') == '4'\nassert solution('''20 1''') == '12'\nassert solution('''100 1''') == '20'\n'''"
    },
    {
        "number": 3539,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1 1') == '1'\nassert solution('2\\n1 2\\n1 2') == '0'\nassert solution('2\\n1 1\\n2 2') == '1'\nassert solution('3\\n1 2\\n2 1\\n2 1') == '0'\nassert solution('3\\n1 2\\n2 1\\n2 3') == '1'\n"
    },
    {
        "number": 3539,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n1\n1 1\n''') == '1'\nassert solution('''\n2\n3 4\n''') == '2'\nassert solution('''\n2\n1 1\n1 2\n''') == '1'\nassert solution('''\n2\n1 1\n2 1\n''') == '0'\nassert solution('''\n2\n1 1\n1 2\n2 2\n''') == '2'\n"
    },
    {
        "number": 3539,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1 1\") == \"1\"\nassert solution(\"2\\n1 1\\n1 1\") == \"2\"\nassert solution(\"4\\n2 1 1 1\\n2 1 1 2\\n1 1 1 1\\n1 1 2 2\") == \"6\"\nassert solution(\"8\\n2 1 1 1 1 1 1 1 1\\n2 1 1 1 1 1 2 2\\n2 1 1 1 1 1 2 2\\n2 1 1 1 1 1 2 2\\n2 1 1 1 1 1 2 2\\n2 1 1 1 1 1 2 2\\n2 1 1 1 1 1 2 2\") == \"56\"\n"
    },
    {
        "number": 3539,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1\"\n\n\"\"\"\n"
    },
    {
        "number": 3539,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"4\"\nassert solution(\"2 1 1 1\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 3\") == \"0\"\nassert solution(\"3 2\") == \"0\"\n"
    },
    {
        "number": 3539,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '1'\n\"\"\"\n\nfrom __future__ import annotations\n\nMAX = 10 ** 9 + 7\n"
    },
    {
        "number": 3539,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n1 1\n''') == '1'\nassert solution('''\n2 1\n1 2\n''') == '1'\nassert solution('''\n3 1\n1 2\n2 3\n''') == '2'\nassert solution('''\n1 1\n1 1\n1 1\n''') == '1'\nassert solution('''\n1 1\n1 1\n1 1\n''') == '1'\n"
    },
    {
        "number": 3540,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"RGGR\") == 3\nassert solution(\"GBGB\") == 2\nassert solution(\"BYBY\") == 4\nassert solution(\"YRYR\") == 0\nassert solution(\"GGGR\") == 3\n"
    },
    {
        "number": 3540,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"RGGR\") == \"3\"\nassert solution(\"GBGB\") == \"0\"\nassert solution(\"BYBY\") == \"0\"\nassert solution(\"YRYR\") == \"0\"\nassert solution(\"RYGR\") == \"2\"\n"
    },
    {
        "number": 3540,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"BGGR\") == 3\nassert solution(\"RYGB\") == 2\nassert solution(\"BBBY\") == 1\nassert solution(\"BYYBY\") == 0\nassert solution(\"GYYGR\") == 2\n"
    },
    {
        "number": 3540,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(EX1) == '5'\nassert solution(EX2) == '14'\nassert solution(EX3) == '10'\nassert solution(EX4) == '20'\nassert solution(EX5) == '30'\n"
    },
    {
        "number": 3540,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(EX_01.input) == EX_01.expected\nprint(\"Passed!\")\n"
    },
    {
        "number": 3540,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('RGGR') == '3'\nassert solution('GBGB') == '0'\nassert solution('BYBY') == '4'\nassert solution('YRYR') == '7'\nassert solution('RBYRBYBGRYYYBRBGR') == '5'\n"
    },
    {
        "number": 3540,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(test_input_1) == test_output_1\nassert solution(test_input_2) == test_output_2\nassert solution(test_input_3) == test_output_3\nassert solution(test_input_4) == test_output_4\nassert solution(test_input_5) == test_output_5\n"
    },
    {
        "number": 3540,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''RGR\nGBGB\nBYBY\nYRYR'''\n) == '3'\n\nassert solution(\n'''RGGR\nGGBGB\nBYBY\nYRYR'''\n) == '0'\n\nassert solution(\n'''RGR\nGBGGB\nBYBY\nYRYR'''\n) == '4'\n\nassert solution(\n'''RGGR\nGBGGB\nBYBY\nYRYR'''\n) == '-1'"
    },
    {
        "number": 3540,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('RGGR') == 3\nassert solution('GBGB') == 0\nassert solution('BYBY') == 1\nassert solution('YRYR') == 2\nassert solution('RGRRY') == 3\n"
    },
    {
        "number": 3540,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(STDIN) == STDOUT\n\"\"\"\n"
    },
    {
        "number": 3541,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n-2 -1 0 1 2\n2 1 0 -1 -2''') == 'AAAAA'\nassert solution('''1\n1''') == 'A'\nassert solution('''3\n1 2 3''') == 'AA'\nassert solution('''1\n-1''') == 'B'\nassert solution('''8\n-1 -2 -3 -4 -5 -6 -7 -8''') == 'BBBBBBBBBB'\n"
    },
    {
        "number": 3541,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n-2 -1 0 1 2\n2 1 0 -1 -2\n''') == 'AAAAA'\nassert solution('''6\n-1 -1 -1 -1 -1 -1\n1 1 1 1 1 1 1\n''') == 'BBBBB'\nassert solution('''2\n1 0\n0 1\n''') == 'BB'\n'''\nTests:\nhttps://www.codewars.com/kata/the-heirarchy-of-candy-cravings\nhttps://www.codewars.com/kata/candy-craving-halloween\nhttps://www.codewars.com/kata/candy-craving-halloween-6\nhttps://www.codewars.com/kata/candy-craving-halloween-7\nhttps://www.codewars.com/kata/candy-craving-halloween-8\nhttps://www.codewars.com/kata/candy-craving-halloween-9\n'''"
    },
    {
        "number": 3541,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n5\n-2 -1 0 1 2\n2 1 0 -1 -2\n'''\n) == 'AAAAA'\n\nassert solution(\n'''\n5\n2 3 -5 1\n2 -3 1 1\n'''\n) == 'ABBB'\n\nassert solution(\n'''\n5\n1 2 -3 1\n1 1 2 -1\n'''\n) == 'ABBA'\n\nassert solution(\n'''\n5\n1 1 -1 1 -1\n1 -1 1 1 1\n'''\n) == 'AAAA'\n\nassert solution(\n'''\n5\n-3 4 2 1 -2\n2 4 1 -3 1\n'''\n) == 'ABBBABABA'"
    },
    {
        "number": 3541,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n-2 -1 0 1 2') == 'AAAAA'\nassert solution('3\\n2 1 0 -1 -2') == 'BB'\nassert solution('3\\n2 1 0 -1 -2') == 'BB'\nassert solution('3\\n2 1 0 -1 -2') == 'BB'\nassert solution('3\\n2 1 0 -1 -2') == 'BB'\n"
    },
    {
        "number": 3541,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('a') == ''\nassert solution('ab') == ''\nassert solution('abc') == ''\n"
    },
    {
        "number": 3541,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n-2 -1 0 1 2\n2 1 0 -1 -2''') == 'AAAAA'\nassert solution('''5\n-2 -1 0 1 2\n2 1 0 -1 -2''') == 'AAAAA'\nassert solution('''5\n-2 -1 0 1 2\n2 1 0 -1 -2''') == 'AAAAA'\nassert solution('''5\n-2 -1 0 1 2\n2 1 0 -1 -2''') == 'AAAAA'\nassert solution('''5\n-2 -1 0 1 2\n2 1 0 -1 -2''') == 'AAAAA'\n"
    },
    {
        "number": 3541,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"AAAAA\"\n'''"
    },
    {
        "number": 3541,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n-2\\n2\\n0\\n1\") == \"AAAAA\"\nassert solution(\"4\\n1\\n-2\\n2\\n1\") == \"BBBBB\"\nassert solution(\"5\\n3\\n2\\n-1\\n-2\\n3\") == \"BBBBB\"\nassert solution(\"1\\n-1\\n2\\n0\\n1\") == \"AAAAA\"\nassert solution(\"5\\n1\\n-2\\n2\\n1\") == \"BBBBB\"\n"
    },
    {
        "number": 3541,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(open(\"samples/data/sample2.txt\").read()) == \"ABABA\"\nassert solution(open(\"samples/data/sample3.txt\").read()) == \"ABAAAB\"\nassert solution(open(\"samples/data/sample4.txt\").read()) == \"AABABB\"\nassert solution(open(\"samples/data/sample5.txt\").read()) == \"ABAAAA\"\nassert solution(open(\"samples/data/sample6.txt\").read()) == \"BBBBBB\"\n"
    },
    {
        "number": 3541,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\"\nassert solution(\"4\\n0 -1 1 1\") == \"BBBB\"\nassert solution(\"7\\n0 -1 0 -1 -1 -1 1\") == \"BBBBB\"\nassert solution(\"8\\n0 -1 0 -1 1 1 -1 -1 -1 1\") == \"BBBBBB\"\nassert solution(\"9\\n0 -1 0 -1 1 1 -1 -1 -1 1 -1\") == \"BBBBBBB\"\n"
    },
    {
        "number": 3542,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\\n\") == \"IMPOSSIBLE\"\nassert solution(\"5 2\\n0 0\\n0 1\\n1 1\\n2 2\\n4 4\\n\") == \"2\"\nassert solution(\"6 3\\n0 0\\n0 2\\n1 1\\n3 3\\n5 4\\n\") == \"3\"\nassert solution(\"3 3\\n0 0\\n0 1\\n1 1\\n2 2\\n3 3\\n\") == \"2\"\nassert solution(\"3 3\\n0 0\\n0 1\\n1 1\\n2 2\\n3 3\\n\") == \"2\"\n"
    },
    {
        "number": 3542,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3') == 'IMPOSSIBLE'\nassert solution('2 2') == '2'\nassert solution('5 4') == '2'\nassert solution('5 6') == '5'\nassert solution('3 1') == '2'\n"
    },
    {
        "number": 3542,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 3\\n2 3\\n4 0\\n0 2\\n6 1\\n') == 'IMPOSSIBLE'\nassert solution('4 3\\n0 0\\n2 2\\n3 2\\n4 0\\n3 2\\n2 2\\n1 1\\n2 2\\n4 1\\n') == '3'\nassert solution('5 1\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n') == '1'\nassert solution('8 3\\n2 2\\n3 2\\n4 0\\n0 2\\n6 1\\n1 2\\n4 2\\n') == '3'\nassert solution('3 2\\n1 1\\n2 1\\n3 1\\n') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3542,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\n\n\nfrom typing import List"
    },
    {
        "number": 3542,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == 'IMPOSSIBLE'\nassert solution('') == 'IMPOSSIBLE'\nassert solution('') == 'IMPOSSIBLE'\nassert solution('') == 'IMPOSSIBLE'\nassert solution('') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3542,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'IMPOSSIBLE'\n\n'''"
    },
    {
        "number": 3542,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'IMPOSSIBLE'\nassert solution('2 3\\n2 3\\n4 0\\n0 2\\n6 1\\n') == '4'\n'''\n"
    },
    {
        "number": 3542,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6 3\n2 3\n4 0\n0 2\n6 1\n''') == 'IMPOSSIBLE'\nassert solution('''2 4\n0 1\n2 4\n3 0\n4 4\n''') == '3'\nassert solution('''3 4\n0 0\n1 1\n2 4\n0 1\n''') == '5'\nassert solution('''3 4\n0 0\n1 1\n2 2\n0 1\n''') == 'IMPOSSIBLE'\nassert solution('''6 3\n0 3\n2 3\n3 0\n4 4\n5 4\n''') == '5'\n"
    },
    {
        "number": 3542,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3542,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'IMPOSSIBLE'\n\nassert solution(stdin = '6 3\\n2 3\\n4 0\\n0 2\\n6 1\\n') == '15'\nassert solution(stdin = '4 2\\n2 3\\n3 4\\n1 2') == '5'\nassert solution(stdin = '6 1\\n0 0\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n') == '5'\nassert solution(stdin = '4 3\\n1 1\\n2 2\\n3 3\\n4 4\\n1 1\\n1 1\\n2 2') == '3'\n"
    },
    {
        "number": 3543,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\"\n\"\"\""
    },
    {
        "number": 3543,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('asdfasdf') == '123'\nassert solution('austria') == '12'\nassert solution('autocorrect') == '12'\nassert solution('autocorrect') == '12'\nassert solution('autocorrelation') == '12'\n"
    },
    {
        "number": 3543,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3543,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == '''12\n4\n11\n3\n2\n'''\n"
    },
    {
        "number": 3543,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''austria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx''') == '''12\n4\n11\n3\n2'''\nassert solution('''austria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\n''') == '''12\n4\n11\n3\n2'''\nassert solution('''austria\nautocorrect\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\n''') == '''4\n2\n2\n1\n2\n'''\nassert solution('''austria\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect"
    },
    {
        "number": 3543,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == '''12\n4\n11\n3\n2\n'''\n\nassert solution('''2 2\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == '''12\n4\n11\n3\n2\n'''\n\nassert solution('''1 1\n''') == '''0\n'''\n\nassert solution('''1 2\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == '''4\n2\n1\n0\n'''\n\nassert solution('''2 3\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == '''12\n4\n11\n3\n2\n'''"
    },
    {
        "number": 3543,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx''') == '''12\n4\n11\n3\n2\n1'''\nprint(solution('''5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx'''))"
    },
    {
        "number": 3543,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == '''12\n4\n11\n3\n2\n'''\n"
    },
    {
        "number": 3543,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1\\n2\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3"
    },
    {
        "number": 3543,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('stdin'):'stdout'\nassert solution('123'): '121'\nassert solution('12345'): '1234'\nassert solution('1234567'): '12345'\nassert solution('123456789'): '12345'\n"
    },
    {
        "number": 3544,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0\\n3\\n0 0 0\\n') == '3'\nassert solution('1\\n3\\n0 0 0\\n') == 'impossible'\nassert solution('1\\n1\\n0 0 0\\n') == '0'\nassert solution('1\\n2\\n0 0 0\\n') == 'impossible'\nassert solution('1\\n1\\n0 0 0\\n') == '0'\n"
    },
    {
        "number": 3544,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 3\n\nimport sys\nsys.stdin = open(\"input.txt\", \"r\")\nassert solution(sys.stdin.read()) == 3\n\nassert solution(stdin) == 3\n"
    },
    {
        "number": 3544,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n0 1 1''') == '3'\nassert solution('''5\n1 1 1 1 1''') == '3'\nassert solution('''4\n0 0 0 0''') == 'impossible'\nassert solution('''6\n1 1 1 1 1 1''') == 'impossible'\nassert solution('''8\n1 1 1 1 1 1 1 1''') == 'impossible'\n"
    },
    {
        "number": 3544,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 1 1') == 3\nassert solution('0 0 0') == 0\nassert solution('1 0 0') == 2\nassert solution('0 1 1') == 3\nassert solution('0 0 0') == 0\n"
    },
    {
        "number": 3544,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n0') == '3'\nassert solution('1\\n0\\n0') == 'impossible'\nassert solution('1\\n0\\n1') == 'impossible'\nassert solution('1\\n1\\n1') == 'impossible'\nassert solution('1\\n1\\n2') == 'impossible'\n"
    },
    {
        "number": 3544,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0 1 1\") == \"3\"\nassert solution(\"1 0 1\") == \"3\"\nassert solution(\"1 1 1\") == \"3\"\nassert solution(\"1 1 1 1\") == \"3\"\nassert solution(\"1 1 1 1 1\") == \"3\"\n"
    },
    {
        "number": 3544,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"0\n1\n1\"\"\") == \"3\"\nassert solution(\"\"\"0\n1\n2\n2\n2\n1\"\"\") == \"2\"\nassert solution(\"\"\"0\n1\n2\n3\n3\n3\"\"\") == \"impossible\"\nassert solution(\"\"\"0\n1\n2\n3\n4\n4\n5\n5\n5\"\"\") == \"12\"\nassert solution(\"\"\"0\n1\n2\n3\n5\n8\n13\n18\n21\n26\n29\n30\"\"\") == \"6\"\n"
    },
    {
        "number": 3544,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n') == 3\nassert solution('1\\n0\\n') == 1\nassert solution('1\\n0\\n1\\n') == 1\nassert solution('1\\n1\\n1\\n') == 1\nassert solution('2\\n1\\n1\\n') == 3\n"
    },
    {
        "number": 3544,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0 1 1''') == '3'\nassert solution('''3 0 1 0 1 0 1 1''') == '3'\nassert solution('''4 0 0 0 1 0 1 0 1''') == 'impossible'\nassert solution('''0 0 0 0 0 1 0 1 1 0''') == '3'\nassert solution('''7 0 0 0 0 0 0 1 1 0 0''') == 'impossible'\n"
    },
    {
        "number": 3544,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0 1 1\") == 3\nassert solution(\"1 0 1\") == 3\nassert solution(\"0 1 1 1\") == 3\nassert solution(\"1 1 1\") == 3\nassert solution(\"0 0 0 1 1 1 0 1 1 1\") == 5\n"
    },
    {
        "number": 3545,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output\n-----Add your own test cases here-----\n'''\nimport sys\n"
    },
    {
        "number": 3545,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\nBFGI\nCFAHD\nDHF\n\n\"\"\") == \"\"\"\nPre Post In In Pre\nBFGI\nCFAHD\nDHF\n\n\"\"\"\n"
    },
    {
        "number": 3545,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\nH\nF\nB\nI\nG\nD\nJ\nA\n''') == '''\nPre Post In In Pre\nHFBJCDEGIA\nBIGEDCJFAH\nIGEDCJBAFH\n'''\n\nassert solution('''\nD\nC\nB\nA\n''') == '''\nPre Post In In Pre\nDBABCA\nDBACAB\nACDBAB\nAACDBB\nACABDB\nBAACDB\n'''\n\nassert solution('''\nA\nB\nC\n''') == '''\nPre Post In In Pre\nACAB\nAC\nAB\nA\n'''\n\nassert solution('''\nC\nD\nE\nF\nG\nH\nI\nJ\nK\n''') == '''\nPre Post In In Pre\nCDIHJKGA\nCDFHIKJGA\nCDFHIJKGA\nCDFHIJKGA\nCDIHIJKGA\nCDIJKGHA\nCDIJKGHA\n'''\n\nassert solution('''\nB\nA\n''') == '''\nPre Post In In Pre\nAB\n'''"
    },
    {
        "number": 3545,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(SAMPLE_INPUT) == EXPECTED_OUTPUT\n\"\"\"\n"
    },
    {
        "number": 3545,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('BFBIGEDCJA') == 'Pre Post In In Pre'\nassert solution('BIGEDCJFAH') == 'HFBJCDEGIA'\nassert solution('BIGEDCJFAH') == 'IGEDCJBAFH'\n\n\"\"\"\n\nimport sys\nfrom io import StringIO\nfrom typing import Tuple, List\n\n\nclass ParseError(Exception):\n    pass\n\n\nclass Node:\n    def __init__(self, value: str, left: 'Node' = None, right: 'Node' = None):\n        self.value = value\n        self.left = left\n        self.right = right\n"
    },
    {
        "number": 3545,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"HFBJCDEGIA\"\nassert solution(\"BIGEDCJFAH\") == \"IGEDCJBAFH\"\nAssertionError: Unexpected call to prePrint: 7\nAssertionError: Unexpected call to inPrint: 11\nAssertionError: Unexpected call to postPrint: 11\nAssertionError: Unexpected call to prePrint: 14\nAssertionError: Unexpected call to inPrint: 19\nAssertionError: Unexpected call to postPrint: 19\nAssertionError: Unexpected call to prePrint: 22\nAssertionError: Unexpected call to inPrint: 26\nAssertionError: Unexpected call to postPrint: 26\nAssertionError: Unexpected call to prePrint: 29\nAssertionError: Unexpected call to inPrint: 30\nAssertionError: Unexpected call to postPrint: 30\nAssertionError: Unexpected call to prePrint: 31\nAssertionError: Unexpected call to inPrint: 34\nAssertionError: Unexpected call to postPrint: 34\nAssertionError: Unexpected call to prePrint: 37\nAssertionError: Unexpected call to inPrint: 38\nAssertionError: Unexpected call to postPrint: 38\nAssertionError: Unexpected call to prePrint: 39\nAssertionError: Unexpected call to inPrint: 43\nAssertionError: Unexpected call to postPrint: 43\nAssertionError: Unexpected call to prePrint: 44\nAssertionError: Unexpected call to inPrint: 48\nAssertionError: Unexpected call to postPrint: 48\nAssertionError: Unexpected call to prePrint: 49\nAssertionError: Unexpected call to inPrint: 52\nAssertionError: Unexpected call to postPrint: 52\nAssertionError: Unexpected call to prePrint: 53\nAssertionError: Unexpected call to inPrint: 56\nAssertionError: Unexpected call to postPrint: 56\nAssertionError: Unexpected call to prePrint: 57\nAssertionError: Unexpected call to inPrint: 60\nAssertionError: Unexpected call to postPrint: 60\nAssertionError: Unexpected call to prePrint: 61\nAssertionError: Unexpected call to inPrint: 64\nAssertionError: Unexpected call to postPrint: 64\nAssertionError: Unexpected call to prePrint: 65\nAssertionError: Unexpected call to inPrint: 69\nAssertionError: Unexpected call to postPrint: 69\nAssertionError: Unexpected call to prePrint: 70\nAssertionError: Unexpected call to inPrint: 73\nAssertionError: Unexpected call to postPrint: 73\nAssertionError: Unexpected call to prePrint: 74\nAssertionError: Unexpected call to inPrint: 78\nAssertionError: Unexpected call to postPrint: 78\nAssertionError: Unexpected call to prePrint: 79\nAssertionError: Unexpected call to inPrint: 82\nAssertionError: Unexpected call to postPrint: 82\nAssertionError: Unexpected call to prePrint: 83\nAssertionError: Unexpected call to inPrint: 86\nAssertionError: Unexpected call to postPrint: 86\nAssertionError: Unexpected call to prePrint: 87\nAssertionError: Unexpected call to inPrint: 90\nAssertionError: Unexpected call to postPrint: 90\nAssertionError: Unexpected call to prePrint: 91\nAssertionError: Unexpected call to inPrint: 94\nAssertionError: Unexpected call to postPrint: 94\nAssertionError: Unexpected call to prePrint: 95\nAssertionError: Unexpected call to inPrint: 99\nAssertionError: Unexpected call to postPrint: 99\nAssertionError: Unexpected call to prePrint: 100\nAssertionError: Unexpected call to inPrint: 103\nAssertionError: Unexpected call to postPrint: 103\nAssertionError: Unexpected call to prePrint: 104\nAssertionError: Unexpected call to inPrint"
    },
    {
        "number": 3545,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"IGEDCJBAFH\"\nassert solution(\"BIGEDCJFAH\") == \"IGEDCJBAFH\"\n\n\"\"\"\n\n\"\"\"\n\n-----Paste your code here-----\n\n\"\"\""
    },
    {
        "number": 3545,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('H') == 'Pre'\nassert solution('BIG') == 'Pre In'\nassert solution('BIGEDCJFAH') == 'Pre In In'\nassert solution('HFBJCDEGIA') == 'HFBJCDEGIA'\n"
    },
    {
        "number": 3545,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"HFBJCDEGIA\"\nassert solution(\"BIGEDCJFAH\") == \"IGEDCJBAFH\"\nassert solution(\"DEFGABHCEF\") == \"DEFGABHCEF\"\nassert solution(\"DEFGABHCEF\") == \"DEFGABHCEF\"\n"
    },
    {
        "number": 3545,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"A\") == \"A\"\nassert solution(\"AB\") == \"A B\"\nassert solution(\"ABC\") == \"A B C\"\nassert solution(\"ABCDEF\") == \"A B C D E F\"\n"
    },
    {
        "number": 3546,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"10\"\n"
    },
    {
        "number": 3546,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\n2\n10 0\n3 1 1''') == \"10\"\nassert solution('''4\n4\n10 0\n3 1 1\n1\n4 1 0''') == \"10\"\nassert solution('''5\n5\n10 0\n3 1 1\n1\n4 1 0''') == \"13\"\n'''"
    },
    {
        "number": 3546,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\"
    },
    {
        "number": 3546,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n2\\n10 0\\n3 1 1') == '10'\nassert solution('3\\n3\\n10 0\\n3 1 1\\n1\\n4 1 0') == '11'\nassert solution('5\\n5\\n10 0\\n3 1 1\\n1\\n4 1 0\\n2\\n2 1 0') == '4'\nassert solution('8\\n8\\n10 0\\n3 1 1\\n1\\n4 1 0\\n2\\n2 1 0\\n3 1 1') == '3'\nassert solution('10\\n10\\n10 0\\n3 1 1\\n1\\n4 1 0\\n2\\n2 1 0\\n3 1 1\\n4 1 0') == '3'\n"
    },
    {
        "number": 3546,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n2\n10 0\n3 1 1\n1\n4 1 0''') == '10'\nassert solution('''3\n4\n0\n0\n0\n0\n1\n1\n2\n1\n3\n2\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0"
    },
    {
        "number": 3546,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"2\n2\n10 0\n3 1 1\"\"\") == '10'\nassert solution(\"\"\"4\n3\n0 0 0\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\"\"\") == '6'\n\"\"\""
    },
    {
        "number": 3546,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"10\"\nassert solution(\"4\") == \"6\"\nassert solution(\"10\") == \"9\"\nassert solution(\"16\") == \"8\"\nassert solution(\"20\") == \"10\"\n\n'''"
    },
    {
        "number": 3546,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n2\n10 0\n3 1 1''') == '10'\nassert solution('''2\n2\n10 0\n3 1 1\n1\n4 1 0''') == '10'\nassert solution('''2\n2\n10 0\n3 1 1\n1\n4 1 0\n1\n2 3 2\n2\n2 4 1\n2\n2 3 1''') == '10'\n'''\n"
    },
    {
        "number": 3546,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\") == \"10\"\nassert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\") == \"10\"\nassert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\") == \"10\"\nassert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\") == \"10\"\nassert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\") == \"10\"\n"
    },
    {
        "number": 3546,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0') == '10'\nassert solution('1\\n1\\n1\\n1') == '0'\nassert solution('2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0') == '10'\nassert solution('2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0') == '10'\nassert solution('2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0') == '10'\n"
    },
    {
        "number": 3547,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''0 0 100 100\n30 30 60 60\n''') == '10000.00'\n'''\nassert solution(\n'''0 0 100 100\n0 0 60 60\n''') == '0.00'\nassert solution(\n'''0 0 100 100\n-3 -3 10 10\n-3 -3 10 10\n3 3 10 10\n3 3 10 10\n-10 -10 10 10\n-10 -10 10 10\n10 10 10 10\n10 10 10 10\n''') == '0.00'\nassert solution(\n'''3 3 10 10\n3 3 10 10\n3 3 10 10\n3 3 10 10\n3 3 10 10\n-10 -10 10 10\n-10 -10 10 10\n10 10 10 10\n10 10 10 10\n''') == '100.00'\nassert solution(\n'''1\n0 0 100 100\n3 3 10 10\n-10 -10 10 10\n''') == '100.00'\n'''\n"
    },
    {
        "number": 3547,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\n0 0 100 100''') == '10000.00'\nassert solution('''4\n0 0 100 100\n0 0 100 100\n-100 -100 100 100\n-100 -100 100 100''') == '10000.00'\nassert solution('''8\n0 0 100 100\n0 0 100 100\n-100 -100 100 100\n-100 -100 100 100\n-100 -100 100 100\n-100 -100 100 100\n-100 -100 100 100''') == '10000.00'\nassert solution('''10\n0 0 100 100\n0 0 100 100\n-100 -100 100 100\n-100 -100 100 100\n-100 -100 100 100\n-100 -100 100 100\n-100 -100 100 100\n-100 -100 100 100\n-100 -100 100 100''') == '10000.00'\n'''\n"
    },
    {
        "number": 3547,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '10000.00'\n"
    },
    {
        "number": 3547,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0 0 100 100\\n30 30 60 60\") == \"10000.00\"\nassert solution(\"1\\n0 0 100 100\\n30 30 60 60\") == \"10000.00\"\nassert solution(\"0\\n0 0 100 100\\n30 30 60 60\") == \"10000.00\"\nassert solution(\"1\\n0 0 100 100\\n30 30 60 60\") == \"10000.00\"\nassert solution(\"1\\n0 0 100 100\\n30 30 60 60\\n30 30 60 60\") == \"10000.00\"\n"
    },
    {
        "number": 3547,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n    0 0 100 100\n    30 30 60 60\n''') == \"10000.00\"\n\nassert solution('''\n    3\n    -50 -50 0 0\n    -50 0 50 0\n    50 50 0 0\n''') == \"1800000.00\"\n\nassert solution('''\n    5\n    0 -50 0 -50 0\n    50 0 0 50 0\n    50 0 50 0 0\n    0 -50 0 -50 0\n''') == \"2200000.00\"\n'''\n"
    },
    {
        "number": 3547,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0 0 100 100\\n30 30 60 60\\n\") == \"10000.00\"\nassert solution(\"1 2 3 4\\n1 1 1 1\\n1 1 1 2\\n2 2 2 3\\n3 3 3 4\\n4 4 4 4\") == \"10.00\"\nassert solution(\"3\\n0 0 100 100\\n30 30 60 60\\n1 1 1 1\\n1 1 1 2\\n2 2 2 3\\n3 3 3 4\\n4 4 4 4\\n1 1 1 1\\n1 1 1 2\\n2 2 2 3\\n3 3 3 4\\n4 4 4 4\") == \"3000.00\"\nassert solution(\"4\\n0 0 100 100\\n30 30 60 60\\n1 1 1 1\\n1 1 1 2\\n2 2 2 3\\n3 3 3 4\\n4 4 4 4\\n0 0 100 100\\n30 30 60 60\\n1 1 1 1\\n1 1 1 2\\n2 2 2 3\\n3 3 3 4\\n4 4 4 4\") == \"16000.00\"\nassert solution(\"5\\n0 0 100 100\\n30 30 60 60\\n1 1 1 1\\n1 1 1 2\\n2 2 2 3\\n3 3 3 4\\n4 4 4 4\\n0 0 100 100\\n30 30 60 60\\n1 1 1 1\\n1 1 1 2\\n2 2 2 3\\n3 3 3 4\\n4 4 4 4\") == \"5000.00\"\n"
    },
    {
        "number": 3547,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 0 100 100') == '10000.00'\nassert solution('30 30 60 60') == '10000.00'\nassert solution('0 0 100 100 30 30 60 60') == '10000.00'\nassert solution('-1.0 1.0 10.0 10.0 1.0 10.0') == '10000.00'\nassert solution('1.0 1.0 1.0 1.0') == '10000.00'\n"
    },
    {
        "number": 3547,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''0 0 100 100\n30 30 60 60''') == '10000.00'\nassert solution('''2\n0 0 100 100\n30 30 60 60''') == '10000.00'\nassert solution('''0 0 100 100\n-1000 -1000 1000 1000''') == '-10000.00'\nassert solution('''0 0 100 100\n30 30 60 60''') == '10000.00'\nassert solution('''0 0 100 100\n-1000 -1000 1000 1000''') == '-10000.00'\n"
    },
    {
        "number": 3547,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n0 0 100 100\n30 30 60 60''') == \"10000.00\"\nassert solution('''4\n0 0 100 100\n30 30 60 60\n-100 -100 1000 1000\n0 0 100 100\n-30 30 60 60\n-100 -100 1000 1000\n30 30 60 60\n-100 -100 1000 1000''') == \"20000.00\"\nassert solution('''5\n0 0 100 100\n30 30 60 60\n-100 -100 1000 1000\n0 0 100 100\n-30 30 60 60\n-100 -100 1000 1000\n30 30 60 60\n-100 -100 1000 1000\n-50 -50 1000 1000\n50 50 1000 1000''') == \"1400.00\"\nprint(\"You successfully passed all the tests!\")"
    },
    {
        "number": 3547,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"10000.00\"\n'''\n'''\n'''\n"
    },
    {
        "number": 3548,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3\n1 3\n4 5\n2 4''') == '5'\nassert solution('''5 5\n1 3\n4 5\n2 4''') == '5'\nassert solution('''5 4\n1 3\n4 5\n2 4''') == '7'\nassert solution('''5 4\n1 3\n4 5\n2 4\n5 2\n1 5\n3 4\n1 3\n4 2\n2 5\n1 2\n1 3\n4 1\n3 5\n1 4''') == '9'\nassert solution('''0 0\n3 2\n5 1\n1 4\n2 3\n1 5\n3 4''') == '9'\n"
    },
    {
        "number": 3548,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '5'\n\n-----------------------------------------------------------------------------------------------\n\nSample Input:\n3 1\n2 2\nSample Output:\n1\n\n-----------------------------------------------------------------------------------------------\n\nSample Input:\n3 1\n1 2\nSample Output:\n1\n\n-----------------------------------------------------------------------------------------------\n\nSample Input:\n2 2\n1 2\n2 1\nSample Output:\n1\n\n-----------------------------------------------------------------------------------------------\n\nfrom functools import lru_cache\n\nN, P = map(int, input().split())\nbad_pairs = [tuple(map(int, input().split())) for _ in range(P)]\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 3548,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 3\n1 3\n4 5\n2 4''') == '5'\n\nassert solution('''1 2\n2 1\n1 1\n2 2''') == '4'\n\nassert solution('''5 3\n1 3\n2 4\n3 4\n4 5\n1 2\n2 3\n3 4''') == '7'\n\nassert solution('''1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n3 4\n1 4\n2 3\n2 4''') == '8'\n\nassert solution('''5 3\n1 3\n2 4\n3 4\n4 5\n1 1\n2 2\n2 3\n1 3\n3 4\n2 4\n2 3\n2 4\n2 3\n1 4\n3 4\n2 4\n1 3\n3 4\n1 4\n1 4\n2 3\n2 4\n2 3\n3 4\n1 4\n2 3\n3 4\n2 4\n1 3\n1 4\n2 3\n3 4\n2 4\n1 3\n1 4\n1 4\n1 4\n2 3\n2 4\n1 3\n1 4\n1 4\n2 3\n2 4\n2 3\n2 4\n1 3\n1 4\n1 4\n1 4\n1 4\n2 3\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4"
    },
    {
        "number": 3548,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"5\"\nassert stdin == \"\"\n"
    },
    {
        "number": 3548,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin.split('\\n')[0]\n"
    },
    {
        "number": 3548,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''0 0\n1 1\n2 2\n3 3\n4 4''') == '1'\nassert solution('''0 0\n1 1\n2 3\n4 4\n5 5''') == '2'\nassert solution('''0 0\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6''') == '0'\nassert solution('''0 0\n1 1\n2 3\n4 4\n5 6\n6 7''') == '1'\nassert solution('''1 1\n1 1\n1 1\n1 1\n1 1''') == '1'\n"
    },
    {
        "number": 3548,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 3\n1 3\n4 5\n2 4''') == '5'\nassert solution('''4 3\n1 3\n4 5\n2 4\n2 5''') == '3'\nassert solution('''1 3\n2 4\n1 4\n2 4\n2 5''') == '2'\nassert solution('''3 3\n1 3\n2 4\n2 4\n2 5''') == '1'\nassert solution('''7 7\n3 5\n6 7\n5 6\n5 7\n3 6\n3 7\n5 6\n6 7''') == '5'\n"
    },
    {
        "number": 3548,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"5\"\n\nimport unittest\n\nclass TestSolution(unittest.TestCase):\n    def test_solution(self):\n        pass"
    },
    {
        "number": 3548,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 3\n1 3\n4 5\n2 4''') == '5'\nassert solution('''5 4\n1 3\n4 5\n2 4''') == '1'\nassert solution('''7 9\n2 2\n3 3\n1 3\n4 4\n5 5\n6 6\n7 7''') == '1'\nassert solution('''10 10\n1 3\n4 5\n2 4\n5 6\n6 7\n7 8\n8 9\n9 10\n2 2\n3 3''') == '6'\nassert solution('''100 11\n1 3\n4 5\n2 4\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n2 2\n3 3''') == '6'\n"
    },
    {
        "number": 3548,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3549,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2095\"\n\"\"\""
    },
    {
        "number": 3549,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('11 13 17') == '2095'\nassert solution('11 13 17\\n5 2 4\\n0 0 0') == '2095'\nassert solution('11 13 17\\n5 2 4\\n5 5 5\\n0 0 0') == '2095'\nassert solution('11 13 17\\n5 2 4\\n5 1 5\\n0 0 0') == '2095'\nassert solution('11 13 17\\n5 2 4\\n5 1 5\\n5 6 5\\n0 0 0') == '2095'\n"
    },
    {
        "number": 3549,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''11 13 17''') == '''2095'''\nassert solution('''11 13 17''') == '''2095'''\nassert solution('''11 13 17''') == '''2095'''\nassert solution('''11 13 17''') == '''2095'''\nassert solution('''10 11 19''') == '''9921'''\n"
    },
    {
        "number": 3549,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') is None\nassert solution('5 13 17') == '2095'\nassert solution('5 2 4') == '2095'\nassert solution('11 13 17') == '1568'\nassert solution('5 2 4 1') == '5'\n"
    },
    {
        "number": 3549,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n'''\n\nfrom math import gcd"
    },
    {
        "number": 3549,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\nassert solution(\"11 13 17\\n5 2 4\\n10 0 0\") == \"2096\"\nassert solution(\"11 13 17\\n5 2 4\\n5 0 0\") == \"2095\"\nassert solution(\"11 13 17\\n5 2 4\\n5 0 0\") == \"2095\"\nassert solution(\"11 13 17\\n5 2 4\\n5 0 0\") == \"2095\"\n"
    },
    {
        "number": 3549,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2095\"\n"
    },
    {
        "number": 3549,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''11 13 17''') == '2095'\nassert solution('''5 2 4''') == '2095'\nassert solution('''0 0 0''') == '2095'\nassert solution('''2 5 6''') == '1000'\nassert solution('''5 2 4''') == '2095'\n"
    },
    {
        "number": 3549,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''11 13 17\n5 2 4\n0 0 0''') == '2095'\nassert solution('''5 11 17\n3 2 4\n0 0 0''') == '2297'\nassert solution('''5 11 17\n5 7 4\n0 0 0''') == '1740'\nassert solution('''5 11 17\n5 5 4\n0 0 0''') == '0'\nassert solution('''5 11 17\n5 4 4\n0 0 0''') == '0'\n"
    },
    {
        "number": 3549,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2095\"\n'''"
    },
    {
        "number": 3550,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.''') == 'My name is Gon\\nMy name is Gon'\nassert solution('''\nvar a = \"Gon\";\nvar b = `My name is ${a}`;\nprint b;\nend.''') == 'My name is Gon'\n\nassert solution('''\nvar a = \"Gon\";\nvar b = `My name is ${a}`;\nprint b;\nend.''') == 'My name is Gon'\n'''\nassert solution('''\nvar a = \"Gon\";\nvar b = `My name is ${a}`;\nprint b;\nend.\nprint a;\nend.''') == 'My name is Gon'\n'''\nassert solution('''\nvar a = \"Gon\";\nvar b = `My name is ${a}`;\nprint b;\nend.\nprint a;\nend.''') == 'My name is Gon'\n'''\n"
    },
    {
        "number": 3550,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''var a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.\n''') == 'My name is Gon\\nMy name is Gon'\nassert solution('''var a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.\n''') == 'My name is Gon\\nMy name is Gon'\n\n'''"
    },
    {
        "number": 3550,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\n''') == 'My name is Gon\\nMy name is Gon'\nassert solution('''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint `My name is ${b}`;\nprint a;\nend.\n''') == 'My name is Gon\\nMy name is Gon\\nGon'\nassert solution('''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint `My name is ${b}`;\nprint a;\nend.\n''') == 'My name is Gon\\nMy name is Gon\\nGon'\nassert solution('''\nvar a = \"Gon\";\nvar b = `My name is ${a}`;\nprint `My name is ${b}`;\nprint a;\nend.\n''') == 'My name is Gon\\nMy name is Gon\\nGon'\nassert solution('''\nvar a = \"Gon\";\nvar b = `My name is ${a}`;\nprint `My name is ${b}`;\nprint a;\nend.\n''') == 'My name is Gon\\nMy name is Gon\\nGon'\n"
    },
    {
        "number": 3550,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n    var a = \"Gon\";\n    var b = a;\n    var c = `My name is ${a}`;\n    print c;\n    print `My name is ${b}`;\n    end.\n''') == 'My name is Gon\\nMy name is Gon'\n'''\n'''"
    },
    {
        "number": 3550,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\n''') == \"My name is Gon\\nMy name is Gon\"\n\nassert solution('''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${b}`;\nprint c;\n''') == \"My name is Gon\\nMy name is Gon\"\n\nassert solution('''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${a}`;\nend.\n''') == \"My name is Gon\\nMy name is Gon\"\n\nassert solution('''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nvar d = `My name is ${b}`;\nprint d;\nend.\n''') == \"My name is Gon\\nMy name is Gon\"\n\nassert solution('''\nvar a = \"Gon\";\nvar b = `Gon`;\nprint b;\n''') == \"Gon\""
    },
    {
        "number": 3550,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"var a = \\\"Gon\\\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend\") == \"\"\"My name is Gon\nMy name is Gon\"\"\"\nassert solution(\"var a = \\\"Gon\\\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend\") == \"\"\"My name is Gon\nMy name is Gon\"\"\"\nassert solution(\"var a = \\\"Gon\\\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend\") == \"\"\"My name is Gon\nMy name is Gon\"\"\"\nassert solution(\"var a = \\\"Gon\\\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend\") == \"\"\"My name is Gon\nMy name is Gon\"\"\"\nassert solution(\"var a = \\\"Gon\\\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend\") == \"\"\"My name is Gon\nMy name is Gon\"\"\"\n"
    },
    {
        "number": 3550,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"var a = \\\"Gon\\\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.\") == 'My name is Gon\\nMy name is Gon'\nassert solution(\"var a = \\\"Gon\\\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.\") == 'My name is Gon\\nMy name is Gon'\nassert solution(\"var a = \\\"Gon\\\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.\") == 'My name is Gon\\nMy name is Gon'\nassert solution(\"var a = \\\"Gon\\\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.\") == 'My name is Gon\\nMy name is Gon'\nassert solution(\"var a = \\\"Gon\\\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.\") == 'My name is Gon\\nMy name is Gon'\n"
    },
    {
        "number": 3550,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.\n''') == '''\nMy name is Gon\nMy name is Gon\n'''\n\nassert solution(\n'''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.\n''') == '''\nMy name is Gon\nMy name is Gon\n'''\n\nassert solution(\n'''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.\n''') == '''\nMy name is Gon\nMy name is Gon\n'''\n\nassert solution(\n'''\nvar a = \"Gon\";\nvar b = `My name is ${a}`;\nprint b;\nprint `My name is ${b}`;\nend.\n''') == '''\nMy name is Gon\nMy name is Gon\n'''\n\nassert solution(\n'''\nvar a = \"Gon\";\nvar b = `My name is ${a}`;\nprint b;\nprint `My name is ${b}`;\nend.\n''') == '''\nMy name is Gon\nMy name is Gon\n'''"
    },
    {
        "number": 3550,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon\\nMy name is Gon'\nassert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon\\nMy name is Gon'\nassert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon\\nMy name is Gon'\nassert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon\\nMy name is Gon'\nassert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon\\nMy name is Gon'\n"
    },
    {
        "number": 3550,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.\\n') == 'My name is Gon\\nMy name is Gon'\nassert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.\\n') == 'My name is Gon\\nMy name is Gon'\nassert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.\\n') == 'My name is Gon\\nMy name is Gon'\nassert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.\\n') == 'My name is Gon\\nMy name is Gon'\nassert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.\\n') == 'My name is Gon\\nMy name is Gon'\n"
    },
    {
        "number": 3551,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1\n7 8\n10\n\"\"\") == \"\"\"\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\n"
    },
    {
        "number": 3551,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n2\n7 8\n10\n'''\n) == '''\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\n'''\n\nassert solution(\n'''\n2\n7 8\n15\n'''\n) == '''\nfill 2\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\n'''\n\nassert solution(\n'''\n2\n6 5\n8 7\n15\n'''\n) == '''\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\n'''\n\nassert solution(\n'''\n2\n7 8\n10\n'''\n) == '''\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\ntransfer 2 1\ntransfer 2 0\n'''\n\nassert solution(\n'''\n2\n5 8\n15\n'''\n) == '''\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\n'''"
    },
    {
        "number": 3551,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n7 8 10\\n4\\n') == 'fill 2\\ndiscard 1\\nfill 2\\ndiscard 1\\nfill 2\\ndiscard 1\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1'\n"
    },
    {
        "number": 3551,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('Dino loves ice cream. In case he ever run out of ice cream at his office, he keeps a stash of dry ice in order to quickly make new ice cream.\\n'\n'He\\'s recipe for making ice cream includes exactly 8 liters of dry ice. However, he has no marked containers in his office. Instead, he keeps a set of bottles of known total volume.\\n'\n'He wants to use this in order to transfer 8 liters of dry ice from his dry ice container to the container in which he is mixing his ice cream. To do this, he should perform a sequence of three different kinds of actions. He may either fill a bottle with dry ice from the dry ice container until the bottle is full, empty the contents of a bottle into the ice container, or transfer dry ice from one bottle into other until either the first bottle becomes empty or the target bottle becomes full.\\n'\n'Can you help Dino construct a plan in order to transfer 8 liters of dry ice into the ice cream mix?\\n'\n'1\\n'\n'7 8\\n'\n'10\\n'\n'1') == 'fill 2\\n'\n    'fill 2\\n'\n    'transfer 2 1\\n'\n    'transfer 2 0\\n'\n    'discard 1\\n'\n    'fill 2\\n'\n    'transfer 2 1\\n'\n    'transfer 2 0\\n'\n    'discard 1\\n'\n    'fill 2\\n'\n    'transfer 2 0\\n'\n    'discard 1'\nassert solution('Dino loves ice cream. In case he ever run out of ice cream at his office, he keeps a stash of dry ice in order to quickly make new ice cream.\\n'\n'He\\'s recipe for making ice cream includes exactly 8 liters of dry ice. However, he has no marked containers in his office. Instead, he keeps a set of bottles of known total volume.\\n'\n'He wants to use this in order to transfer 8 liters of dry ice from his dry ice container to the container in which he is mixing his ice cream. To do this, he should perform a sequence of three different kinds of actions. He may either fill a bottle with dry ice from the dry ice container until the bottle is full, empty the contents of a bottle into the ice container, or transfer dry ice from one bottle into other until either the first bottle becomes empty or the target bottle becomes full.\\n'\n'Can you help Dino construct a plan in order to transfer 8 liters of dry ice into the ice cream mix?\\n'\n'1\\n'\n'7 8\\n'\n'10\\n'\n'1') == 'fill 2\\n'\n    'fill 2\\n'\n    'transfer 2 1\\n'\n    'transfer 2 0\\n'\n    'discard 1\\n'\n    'fill 2\\n'\n    'transfer 2 1\\n'\n    'transfer 2 0\\n'\n    'discard 1\\n'\n    'fill 2\\n'\n    'transfer 2 0\\n'\n    'discard 1'\nassert solution('Dino loves ice cream. In case he ever run out of ice cream at his office, he keeps a stash of dry ice in order to quickly make new ice cream.\\n'\n'He\\'s recipe for making ice cream includes exactly 8 liters of dry ice. However, he has no marked containers in his office. Instead, he keeps a set of bottles of known total volume.\\n'\n'He wants to use this in order to transfer 8 liters of dry ice from his dry ice container to the container in which he is mixing his ice cream. To do this, he should perform a sequence of three different kinds of actions. He may either fill a bottle with dry ice from the dry ice container until the bottle is full, empty the contents of a bottle into the ice container, or transfer dry ice from one bottle into other until either the first bottle becomes empty or the target bottle becomes full.\\n'\n'Can you help Dino construct a plan in order to transfer 8 liters of dry ice into the ice cream mix?\\n'\n'1\\n'\n'7 8\\n'\n'10\\n'\n'1') == 'fill 2\\n'\n    'fill 2\\n'\n    'transfer 2 1\\n'\n    'transfer 2 0\\n'\n    'discard 1\\n'\n    'fill 2\\n'\n    'transfer 2 1\\n'\n    'transfer 2 0\\n'\n    'discard 1\\n'\n    'fill 2\\n'\n    'transfer 2 0\\n'\n    'discard 1'\nassert solution('Dino loves ice cream. In case he ever run out of ice cream at his office, he keeps a stash of dry ice in order to quickly make new ice cream.\\n'\n'He\\'s recipe for making ice cream includes exactly 8 liters of dry ice. However, he has no marked containers in his office. Instead, he keeps a set of bottles of known total volume.\\n'\n'He wants to use this in order to transfer 8 liters of dry ice from his dry ice container to the container in which he is mixing his ice cream. To do this, he should perform a sequence of three different kinds of actions. He may either fill a bottle with dry ice from the dry ice container until the bottle is full, empty the contents of a bottle into the ice container, or transfer dry ice from one bottle into other until either the first bottle becomes empty or the target bottle becomes full.\\n'\n'Can you help Dino construct a plan in order to transfer 8 liters of dry ice into the ice cream mix?\\n'\n'1\\n'\n'7 8\\n'\n'10\\n'\n'1') == 'fill 2\\n'\n    'fill 2\\n'\n    'transfer 2 1\\n'\n    'transfer 2 0\\n'\n    'discard 1\\n'\n    'fill 2\\n'\n    'transfer 2 1\\n'\n    'transfer 2 0\\n'\n    'discard 1\\n'\n    'fill 2\\n'\n    'transfer 2 0\\n'\n    'discard 1'\nassert solution('Dino loves ice cream. In case he ever run out of ice cream at his office, he keeps a stash of dry ice in order to quickly make new ice cream.\\n'\n'He\\'s recipe for making ice cream includes exactly 8 liters of dry ice. However, he has no marked containers in his office. Instead, he keeps a set of bottles of known total volume.\\n'"
    },
    {
        "number": 3551,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n7 8\\n10\\n') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1'\nassert solution('2\\n7 8\\n10\\n4\\n5\\n') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 1\\ntransfer 1 0\\ndiscard 1\\ndiscard 1\\ndiscard 1'\nassert solution('5\\n6 7 8 9 10\\n5\\n') == 'impossible'\nassert solution('3\\n3\\n') == 'fill 3\\ntransfer 3 0\\ndiscard 1\\nfill 3\\ntransfer 3 0\\ndiscard 1'\nassert solution('4\\n3 4\\n4\\n') == 'fill 1\\ntransfer 1 0\\ndiscard 1\\nfill 4\\ntransfer 4 3\\ntransfer 4 1\\ndiscard 1'\n"
    },
    {
        "number": 3551,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n2\n7 8\n10\n\"\"\") == \"\"\"\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\n\"\"\".strip()\n\nassert solution(\n    \"\"\"\n1\n5\n\"\"\") == \"\"\"\nimpossible\n\"\"\".strip()\n\nassert solution(\n    \"\"\"\n2\n7 8\n10\n\"\"\") == \"\"\"\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\n\"\"\"\n\nassert solution(\n    \"\"\"\n2\n1 2\n10\n\"\"\") == \"\"\"\nimpossible\n\"\"\"\n\nassert solution(\n    \"\"\"\n3\n1 2 3 4 5 6 7\n\"\"\") == \"\"\"\nfill 2\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 0\ndiscard 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 1\ntransfer 2 1\ntransfer"
    },
    {
        "number": 3551,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\n7 8\n10''') == '''fill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndisc"
    },
    {
        "number": 3551,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3\\n7 8\\n10\") == \"fill 0\\ntransfer 0 1\\ntransfer 0 0\\ndiscard 1\\nfill 0\\ntransfer 0 1\\ntransfer 0 0\\ndiscard 1\\nfill 0\\ntransfer 0 0\\ndiscard 1\"\nassert solution(\"2\\n7 8\\n10\") == \"fill 0\\ntransfer 0 1\\ntransfer 0 0\\ndiscard 1\"\nassert solution(\"3\\n7 8\\n10\") == \"impossible\"\nassert solution(\"2\\n7 8\\n10\") == \"fill 0\\ntransfer 0 1\\ntransfer 0 0\\ndiscard 1\"\nassert solution(\"2\\n7 8\\n10\") == \"impossible\"\n"
    },
    {
        "number": 3551,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6\\n7 8\\n10') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1'\nassert solution('7\\n8 10\\n10') == 'impossible'\nassert solution('6\\n7 8\\n10\\n10') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1'\nassert solution('6\\n7 8\\n10\\n100') == 'impossible'\nassert solution('4\\n7 8\\n10\\n100\\n10') == 'impossible'\n"
    },
    {
        "number": 3551,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"transfer 1 0\"\nassert solution(\"0 0\") == \"fill 1\"\nassert solution(\"0 1\") == \"transfer 1 0\"\nassert solution(\"1 1\") == \"transfer 1 0\"\n"
    },
    {
        "number": 3552,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 4 3''') == '27'\nassert solution('''3 2 2''') == '0'\nassert solution('''2 2 1''') == '0'\nassert solution('''10 2 1''') == '5'\nassert solution('''100 2 5''') == '250'\n"
    },
    {
        "number": 3552,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"27\"\n"
    },
    {
        "number": 3552,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"27\"\n"
    },
    {
        "number": 3552,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10 4 3''') == '27'\n'''\nA lightning bolt kills a single gnome in a group and removes the rest from the group.\nIf there are at most k such groups, the damage of the attack will be the sum of the damage\nof each single attack. If there are less than k such groups, the damage of the attack will be the sum of the damage\nof each single attack, multiplied by the number of such groups.\n'''"
    },
    {
        "number": 3552,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''10 4 3''') == '27'\nassert solution('''5 4 3''') == '16'\nassert solution('''2 2 1''') == '3'\nassert solution('''3 3 3''') == '6'\nassert solution('''3 3 1''') == '2'\n"
    },
    {
        "number": 3552,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10 4 3''') == '27'\n'''"
    },
    {
        "number": 3552,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"10 4 3\") == \"27\"\n\nassert solution(\"4 1 2\") == \"1\"\n\nassert solution(\"15 1 3\") == \"4\"\n\nassert solution(\"30 5 3\") == \"6\"\n\nassert solution(\"100 1000 1000\") == \"12\""
    },
    {
        "number": 3552,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"10 4 3\") == \"27\"\nassert solution(\"10 5 3\") == \"55\"\nassert solution(\"10 5 5\") == \"125\"\nassert solution(\"100 500 5\") == \"500\"\nassert solution(\"100 50 50\") == \"1000\"\n"
    },
    {
        "number": 3552,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 27\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3552,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 4 3') == '27'\nassert solution('100 2 100') == '99'\nassert solution('10 0 0') == '0'\nassert solution('0 0 0') == '0'\nassert solution('10 10 10') == '999'\n"
    },
    {
        "number": 3553,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1''') == '''3\n-1\n4\n-1'''\n\nassert solution('''4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1''') == '''3\n-1\n4\n-1'''\n\nassert solution('''4 3 5\n2 3 1 2\n2\n2\n1 3 3\n2\n1 1 1''') == '''3\n-1\n4\n-1'''\n\nassert solution('''4 3 5\n2 3 1 2\n2\n2\n1 3 3\n2\n1 1 1\n2\n1 1 1\n2''') == '''3\n-1\n4\n-1'''\n\nassert solution('''4 3 5\n2 3 1 2\n2\n2\n1 3 3\n2\n1 1 1\n2\n1 1 1\n2''') == '''3\n-1\n4\n-1'''"
    },
    {
        "number": 3553,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3553,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\n'''\n    ) == '''\n3\n-1\n4\n4\n'''\n\nassert solution(\n'''\n3 4 8\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\n'''\n    ) == '''\n3\n-1\n4\n4\n'''\n\nassert solution(\n'''\n4 3 4\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\n'''\n    ) == '''\n3\n-1\n4\n-1\n'''\n\nassert solution(\n'''\n3 3 3\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\n'''\n    ) == '''\n3\n-1\n4\n4\n'''\n\nassert solution(\n'''\n5 4 8\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\n'''\n    ) == '''\n3\n-1\n4\n4\n'''"
    },
    {
        "number": 3553,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 3 5\n2 3 1 2\n2''') == '3'\n\nassert solution('''5 2\n5\n5''') == '-1'\n\nassert solution('''5 3\n1 2 3 4 5\n1\n2 3 3\n1\n1''') == '3'\n\nassert solution('''5 3\n1 2 3 4 5\n2\n1 1 1\n2\n1 3 3\n1\n1''') == '3'\n\nassert solution('''6 4\n1 2 3 4 5 6\n1\n2 3 2\n1\n2\n1''') == '6'"
    },
    {
        "number": 3553,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\n''') == '''3\n-1\n4\n'''\n\nassert solution('''10 3 2\n3 3 2 1 2 1 2 2 1 2 3\n2\n1 3 3\n2\n1 1 1\n2\n1 2 1\n2\n''') == '''3\n2\n2\n2\n3\n'''\n\nassert solution('''11 3 5\n5 5 5 5 5 5 5 5 5 5 5 5 5 5\n5\n2 1 3 3 1 3 3 1 3 3\n2\n1 3 3\n3\n1 1 1\n1\n1 1 1\n2\n1 1 1\n1\n''') == '''3\n2\n2\n2\n3\n'''\n\nassert solution('''6 3 9\n4 5 6 2 1 1 2 3\n3\n1 3\n2\n2 3\n2\n2\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 3553,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4 5\\n1 3 1 2 2\\n2') == '2\\n2\\n2\\n2\\n'\nassert solution('2 3 4 5\\n1 3 1 2 2\\n2\\n1 1 1\\n2\\n1 1 1\\n2') == '3\\n2\\n2\\n2\\n'\nassert solution('2 3 4 5\\n1 3 1 2 2\\n2\\n1 1 1\\n2\\n1 1 1\\n2\\n1 1 1\\n2') == '-1\\n-1\\n2\\n2\\n'\nassert solution('2 3 4 5\\n1 3 1 2 2\\n2\\n1 1 1\\n2\\n1 1 1\\n2\\n1 1 1\\n2\\n1 1 1\\n2') == '2\\n2\\n2\\n2\\n'\nassert solution('2 3 4 5\\n1 3 1 2 2\\n2\\n1 1 1\\n2\\n1 1 1\\n2\\n1 1 1\\n2\\n1 1 1\\n2\\n1 1 1\\n2\\n1 1 1\\n2\\n1 1 1\\n2\\n1 1 1\\n2') == '3\\n2\\n2\\n2\\n'\n"
    },
    {
        "number": 3553,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1 1\\n1\\n1 1\\n2') == '1\\n1\\n1\\n'\nassert solution('1 3 2\\n1\\n1\\n2\\n2\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n"
    },
    {
        "number": 3553,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4 5\") == \"-1\"\nassert solution(\"1 2 3 4 5 6\") == \"3\"\nassert solution(\"1 2 3 4 5 6 7\") == \"5\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"7\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\") == \"16\"\n"
    },
    {
        "number": 3553,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\\n1 2 3\\n1 3 3\") == \"3\"\nassert solution(\"1 2 3\\n1 2 3\\n1 3 3\") == \"3\"\nassert solution(\"2 3 4\\n1 2 3\\n1 2 3\\n1 2 3\\n1 3 3\") == \"6\"\nassert solution(\"1 2 3\\n1 2 3\\n1 3 3\") == \"1\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"0\"\n"
    },
    {
        "number": 3553,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3 4\\n2 3 1 2\\n2') == '3\\n-1\\n4\\n4'\nassert solution('2 3 4\\n2 3 1 2\\n2') == '3\\n-1\\n4\\n4'\nassert solution('1 10 4\\n2 3 1 2\\n2') == '3\\n-1\\n4\\n4'\nassert solution('1 10 4\\n2 3 1 2\\n2') == '3\\n-1\\n4\\n4'\nassert solution('1 10 4\\n2 3 1 2\\n2') == '3\\n-1\\n4\\n4'\n"
    },
    {
        "number": 3554,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('0') == '0'\nassert solution('1000 1') == '533.3333333333'\nassert solution('1000 1000 100') == '533.3333333333'\nassert solution('1000 1000 1000') == '533.3333333333'\n"
    },
    {
        "number": 3554,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1000 1') == '533.3333333333'\nassert solution('2 1000 1') == '533.3333333333'\nassert solution('1000 10000 1') == '533.3333333333'\nassert solution('1000 10000 1000') == '533.3333333333'\nassert solution('1 100000 1') == '533.3333333333'\n"
    },
    {
        "number": 3554,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"533.3333333333\"\n\n\"\"\"\n\nfrom math import sqrt"
    },
    {
        "number": 3554,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 3554,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 0 0') == '0'\nassert solution('1000 3000 1000') == '533.3333333333'\nassert solution('1000 3000 4000') == '533.3333333333'\nassert solution('10000000 10000000 1000000') == '533.3333333333'\nassert solution('100000000 100000000 100000000') == '533.3333333333'\n"
    },
    {
        "number": 3554,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1000 3000 1000') == '533.3333333333'\nassert solution('1000 3000 100') == '533.3333333333'\nassert solution('1000 3000 1') == '533.3333333333'\nassert solution('1000 3000 9') == '533.3333333333'\nassert solution('1000 3000 95') == '533.3333333333'\n"
    },
    {
        "number": 3554,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1000 3000 1000''') == '533.3333333333'\n'''\n"
    },
    {
        "number": 3554,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"533.3333333333\"\nassert solution(\"1000 3000 1000\") == \"533.3333333333\"\nassert solution(\"1000000 10000 1000\") == \"533.3333333333\"\nassert solution(\"1000000 1000 1000\") == \"533.3333333333\"\nassert solution(\"1000000 1000 1\") == \"533.3333333333\"\n"
    },
    {
        "number": 3554,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == \"533.3333333333\""
    },
    {
        "number": 3554,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1000 3000 1000') == '533.3333333333'\nassert solution('200 100 100') == '33.33333333333'\nassert solution('1000 3000 1000') == '533.3333333333'\nassert solution('400 100 400') == '22.6667'\nassert solution('1000 10000 1000') == '2560.0'\n"
    },
    {
        "number": 3555,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"10 0\\n10 10\\n10 10\") == \"14.14\"\nassert solution(\"4 0\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\") == \"39.57\"\nassert solution(\"3 2\\n2 2\\n1 1\\n0 0\") == \"0.0\"\nassert solution(\"2 1\\n1 1\\n0 0\") == \"0.01\"\nassert solution(\"4 1\\n1 1\\n1 1\\n1 1\") == \"1.11\"\n"
    },
    {
        "number": 3555,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0 0\n0 0\n10 10''') == '14.14'\nassert solution('''0 0\n0 0\n2 0\n0 0\n10 0\n10 10''') == '12.14'\nassert solution('''0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0"
    },
    {
        "number": 3555,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 0\n10 0\n10 10''') == '14.14'\nassert solution('''2 0\n10 0\n10 10''') == '14.14'\nassert solution('''1 0\n1 1''') == '2.00'\nassert solution('''2 0\n2 0''') == '2.00'\nassert solution('''2 0\n2 1\n1 1''') == '2.00'\n"
    },
    {
        "number": 3555,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"14.14\"\n'''\n"
    },
    {
        "number": 3555,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''0 0\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n0 0''') == '14.14'\n\nassert solution('''0 0\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n0 0''') == '15.00'\n\nassert solution('''0 0\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n0 0\n0 0''') == '14.14'\n\nassert solution('''0 0\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1"
    },
    {
        "number": 3555,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"14.14\"\n\n\"\"\""
    },
    {
        "number": 3555,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '14.14'\n\nassert solution(stdin) == '10'\n\nassert solution(stdin) == '100'\n\nassert solution(stdin) == '100'\n\nassert solution(stdin) == '100'"
    },
    {
        "number": 3555,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 0\n10 0\n10 10''') == '14.14'\nassert solution('''3 0\n0 0\n10 10\n0 10''') == '27.27'\nassert solution('''0 0\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n11 11\n12 12\n13 13\n14 14\n15 15\n16 16\n17 17\n18 18\n19 19\n20 20\n21 21\n22 22\n23 23\n24 24\n25 25\n26 26\n27 27\n28 28\n29 29\n30 30\n31 31\n32 32\n33 33\n34 34\n35 35\n36 36\n37 37\n38 38\n39 39\n40 40\n41 41\n42 42\n43 43\n44 44\n45 45\n46 46\n47 47\n48 48\n49 49\n50 50''') == '33.33'\nassert solution('''2 2\n0 0\n10 10\n0 10\n10 10''') == '36.36'\nassert solution('''3 3\n0 0\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n11 11\n12 12\n13 13\n14 14\n15 15\n16 16\n17 17\n18 18\n19 19\n20 20\n21 21\n22 22\n23 23\n24 24\n25 25\n26 26\n27 27\n28 28\n29 29\n30 30\n31 31\n32 32\n33 33\n34 34\n35 35\n36 36\n37 37\n38 38\n39 39\n40 40\n41 41\n42 42\n43 43\n44 44\n45 45\n46 46\n47 47\n48 48\n49 49\n50 50''') == '35.35'\n"
    },
    {
        "number": 3555,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"14.14\"\nassert solution(\"4 0\\n10 0\\n10 10\\n10 100\") == \"6.19\"\nassert solution(\"1 0\\n1 1\\n5 1\") == \"2.69\"\nassert solution(\"2 0\\n0 0\\n0 1\") == \"2.00\"\nassert solution(\"2 0\\n0 0\\n0 1\\n0 2\") == \"1.81\"\n"
    },
    {
        "number": 3555,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 0\n10 0\n10 10''') == '14.14'\nassert solution('''3 2\n0 0\n10 10\n0 10\n10 10''') == '9.19'\nassert solution('''6 5\n-20 0\n-10 -5\n0 10\n5 5\n10 10\n20 0\n-15 0\n-5 5\n-15 15\n-10 -5\n-10 10''') == '11.15'\nassert solution('''6 6\n-20 0\n-10 -5\n0 10\n5 5\n10 10\n20 0\n-15 0\n-5 5\n-15 15\n-10 -5\n-10 10''') == '13.55'\nassert solution('''5 5\n0 0\n-10 -5\n-10 -5\n0 0\n10 10\n-10 -5\n-10 -5\n-10 -5\n-10 -5''') == '7.65'\n"
    },
    {
        "number": 3556,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == '123457 0\\n0 2\\n123458 1\\n'\n\nassert solution(\n'''123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == '123457 0\\n0 2\\n123458 1\\n'\n\nassert solution(\n'''123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == '123457 0\\n0 2\\n123458 1\\n'\n\nassert solution(\n'''123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == '123457 0\\n0 2\\n123458 1\\n'\n\nassert solution(\n'''123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == '123457 0\\n0 2\\n123458 1\\n'"
    },
    {
        "number": 3556,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == '''123457 0\n0 2\n123458 1\n'''\nassert solution(\n'''1 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == '''123457 0\n0 2\n123458 1\n'''\nassert solution(\n'''1 1\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == '''123457 0\n0 2\n123458 1\n'''\nassert solution(\n'''1 2\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == '''123457 0\n0 2\n123458 1\n'''\nassert solution(\n'''1 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == '''123457 0\n0 2\n123458 1\n'''\n"
    },
    {
        "number": 3556,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    3 3\n    123456 14323 1700000\n    123458 41412 1900000\n    123457 15221 1800000\n    123456\n    123458\n    123457\n    \"\"\") == \"\"\"\n    123457 0\n    0 2\n    123458 1\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    4 5\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    \"\"\") == \"\"\"\n    0 0\n    1 1\n    2 2\n    3 3\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    8 9\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    \"\"\") == \"\"\"\n    0 0\n    1 1\n    2 2\n    3 3\n    4 4\n    5 5\n    6 6\n    7 7\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    8 9\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1 1 10\n    1"
    },
    {
        "number": 3556,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\\\n3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == '''\\\n123457 0\n0 2\n123458 1\n'''\n"
    },
    {
        "number": 3556,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(open(\"test_input.txt\").read()) == open(\"test_output.txt\").read()\n"
    },
    {
        "number": 3556,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == '''\n123457 0\n0 2\n123458 1\n'''\nassert solution('''\n3 2\n149999 14323 1700000\n149999 41412 1900000\n149999 15221 1800000\n149999\n149999\n149999\n''') == '''\n149999 0\n0 2\n149999 1\n'''\nassert solution('''\n2 2\n123455 14639 1550000\n123455 12343 1400000\n''') == '''\n123455 0\n0 1\n123455 0\n'''\nassert solution('''\n2 3\n123455 14639 1550000\n123455 12343 1400000\n123456 14323 1700000\n123457 15221 1800000\n123458 41412 1900000\n123458 14460 2000000\n123458 14460 2080000\n123459 14460 2099999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999\n123459 14460 2214999"
    },
    {
        "number": 3556,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == '''123457 0\n0 2\n123458 1\n'''\n"
    },
    {
        "number": 3556,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == '''123457 0\n0 2\n123458 1\n'''\n\nassert solution('''1 1\n10\n10''') == '''0 0\n10 1\n'''\n\nassert solution('''2 1\n10\n10\n10\n10''') == '''0 0\n10 0\n'''\n\nassert solution('''2 3\n10\n10\n10\n10\n10\n10\n10''') == '''0 0\n0 1\n10 0\n10 0\n10 0\n10 0\n'''\n\nassert solution('''3 3\n10\n10\n10\n10\n10\n10\n10\n10''') == '''0 0\n0 1\n10 0\n10 0\n10 0\n10 0\n'''"
    },
    {
        "number": 3556,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457''') == '''123457 0\n0 2\n123458 1\n'''\nprint('passed')\n"
    },
    {
        "number": 3556,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == '''123457 0\n0 2\n123458 1\n'''\nassert solution('''1 2 3\n0 0 0\n1 1 1\n0 0 0\n''') == '''0 0\n0 0\n0 0\n'''\nassert solution('''1 2 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == '''123457 0\n0 2\n123458 1\n'''\nassert solution('''1 2 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == '''123457 0\n0 2\n123458 1\n'''\nassert solution('''1 2 3\n0 0 0\n1 1 1\n0 0 0\n''') == '''0 0\n0 0\n0 0\n'''\n"
    },
    {
        "number": 3557,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '90'\n\nassert solution(stdin) == '45'\n\nassert solution(stdin) == '45'\n\nassert solution(stdin) == '45'\n\nassert solution(stdin) == '45'"
    },
    {
        "number": 3557,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"90\"\n\"\"\"\n\n\n\"\"\"\n"
    },
    {
        "number": 3557,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n    5\n    3 5 10 2 5\n    2 4 5 1 3\n''') == \"90\"\n\nassert solution('''\n    3\n    1 2 3\n    2 4 5\n    3 4 1\n''') == \"42\"\n\nassert solution('''\n    5\n    4 2 3 6 5\n    4 2 6 3 5\n''') == \"52\"\n\nassert solution('''\n    4\n    1 2 3 4\n    2 4 3 1\n    1 2 3 4\n''') == \"36\"\n\nassert solution('''\n    6\n    1 2 3 4 5 6\n    2 4 3 1 6 5\n    3 1 2 4 5 6\n    4 3 1 2 5 6\n    5 3 1 2 4 6\n    6 3 1 2 4 5\n''') == \"132\""
    },
    {
        "number": 3557,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0\\n1 2\\n2 4 3') == '90'\nassert solution('5\\n1 2 3 4 5\\n5 1 4 3 2') == '105'\nassert solution('5\\n1 2 3 4 5\\n1 1 4 3 2') == '45'\nassert solution('3\\n1 2 3') == '6'\nassert solution('3\\n1 2 3') == '6'\n"
    },
    {
        "number": 3557,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n5\n3 5 10 2 5\n2 4 5 1 3\n\"\"\"\n) == \"90\"\nassert solution(\n\"\"\"\n5\n3 3 4 4 2\n2 3 3 2 3\n\"\"\"\n) == \"90\"\nassert solution(\n\"\"\"\n5\n3 4 4 4 1\n2 3 4 3 3\n\"\"\"\n) == \"90\"\nassert solution(\n\"\"\"\n10\n10 9 8 7 6 5 4 3 2 1\n1 2 3 4 5 6 7 8 9 10\n\"\"\"\n) == \"90\"\nassert solution(\n\"\"\"\n20\n20 19 14 7 8 4 3 9 2 1\n2 4 3 6 7 8 9 10 11 12 13 14 15 16 17 18 19\n\"\"\"\n) == \"90\"\n"
    },
    {
        "number": 3557,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"90\"\n"
    },
    {
        "number": 3557,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n2 3 3 3 4 4 4 4 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3557,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n3 5 10 2 5\n2 4 5 1 3\n''') == '90'\nassert solution('''4\n5 1 5 4\n2 3 4 1\n''') == '24'\nassert solution('''4\n1 1 5 4\n2 3 4 1\n''') == '26'\nassert solution('''5\n5 5 5 5 5\n5 5 5 5 5\n''') == '50'\nassert solution('''2\n5 1 5 4\n2 3 4 1\n''') == '26'\n"
    },
    {
        "number": 3557,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3 4 5') == '90'\nassert solution('3 5 10 2 5') == '40'\nassert solution('2 4 5 1 3') == '20'\nassert solution('1 2 3 4') == '6'\nassert solution('3 4 5 1 2') == '24'\n"
    },
    {
        "number": 3557,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n1 2 3 4\\n4 3 2 1') == '12'\nassert solution('3\\n1 5 5\\n1 1 2') == '12'\nassert solution('4\\n1 5 5 6\\n1 1 2 3\\n4 4 3 2') == '15'\nassert solution('3\\n3 3 3\\n3 3 3') == '9'\nassert solution('7\\n1 2 3 4 5 6 7\\n1 1 2 3 4 5\\n4 4 3 2 3 1') == '45'\n"
    },
    {
        "number": 3558,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 2 6\n0 4 3\n0 8 2''') == '6.000000'\nassert solution('''1 2 6\n0 4 3\n0 8 2''') == '6.000000'\nassert solution('''1 2 6\n0 4 3\n0 8 2''') == '6.000000'\nassert solution('''1 2 6\n0 4 3\n0 8 2''') == '6.000000'\nassert solution('''1 2 6\n0 4 3\n0 8 2\n1 1 0''') == '0.000000'\n"
    },
    {
        "number": 3558,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 10\n1 2 6\n0 4 3\n0 8 2''') == '6.000000'\nassert solution('''10 10\n0 1 3\n0 2 4\n0 3 5\n1 4 6\n2 5 7\n3 6 8\n4 7 9\n5 8 10\n6 9 11\n7 10 12\n8 11 13\n9 12 14\n9 13 15\n8 14 16\n7 15 17\n6 16 18\n5 17 19\n4 18 20\n3 19 21\n2 20 22\n1 21 23\n0 22 24''') == '28.000000'\nassert solution('''2 3\n0 1 2\n1 2 3''') == '2.000000'\nassert solution('''10 10\n0 1 3\n0 2 4\n0 3 5\n1 4 6\n2 5 7\n3 6 8\n4 7 9\n5 8 10\n6 9 11\n7 10 12\n8 11 13\n9 12 14\n9 13 15\n8 14 16\n7 15 17\n6 16 18\n5 17 19\n4 18 20\n3 19 21\n2 20 22\n1 21 23\n0 22 24''') == '28.000000'\nassert solution('''15 15\n0 1 3\n0 2 4\n0 3 5\n1 4 6\n2 5 7\n3 6 8\n4 7 9\n5 8 10\n6 9 11\n7 10 12\n8 11 13\n9 12 14\n9 13 15\n8 14 16\n7 15 17\n6 16 18\n5 17 19\n4 18 20\n3 19 21\n2 20 22\n1 21 23\n0 22 24''') == '56.000000'\n"
    },
    {
        "number": 3558,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '6'\nassert solution(stdin) == '4'\nassert solution(stdin) == '3'\nassert solution(stdin) == '0.25'\nassert solution(stdin) == '0.125'\n"
    },
    {
        "number": 3558,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 10\n1 2 6\n0 4 3\n0 8 2''') == '6.000000'\nassert solution('''3 10\n0 4 3\n0 8 2''') == '6.000000'\nassert solution('''3 10\n0 4 3\n0 8 2\n0 7 2''') == '3.000000'\nassert solution('''3 10\n0 4 3\n1 4 2\n0 8 2\n0 7 2''') == '2.000000'\nassert solution('''3 10\n1 2 6\n0 4 3\n0 8 2\n0 7 2''') == '4.000000'\n"
    },
    {
        "number": 3558,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 10\\n1 2 6\\n0 4 3\\n0 8 2') == '6.000000'\n"
    },
    {
        "number": 3558,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 10\n1 2 6\n0 4 3\n0 8 2''') == '6.000000'\nassert solution('''3 10\n0 4 3\n0 8 2''') == '6.000000'\nassert solution('''3 10\n1 2 6\n1 3 4\n1 8 2''') == '4.000000'\nassert solution('''3 10\n1 2 6\n1 3 4\n0 8 2''') == '2.500000'\nassert solution('''3 10\n1 2 6\n1 3 4\n1 8 2''') == '2.000000'\n"
    },
    {
        "number": 3558,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 10') == '6.000000'\nassert solution('3 10') == '6.000000'\nassert solution('3 10\\n1 2 6\\n0 4 3\\n0 8 2') == '6.000000'\nassert solution('3 10\\n1 2 6\\n0 4 3\\n0 8 2\\n1 2 5\\n1 3 4\\n1 4 5\\n1 5 6\\n1 6 7\\n1 7 8\\n1 8 9\\n1 9 10') == '8.000000'\nassert solution('3 10\\n1 2 6\\n0 4 3\\n0 8 2\\n1 2 5\\n1 3 4\\n1 4 5\\n1 5 6\\n1 6 7\\n1 7 8\\n1 8 9\\n1 9 10\\n0 4 3\\n0 8 2\\n1 2 5\\n1 3 4\\n1 4 5\\n1 5 6\\n1 6 7\\n1 7 8\\n1 8 9\\n1 9 10\\n0 4 3\\n0 8 2\\n1 2 5\\n1 3 4\\n1 4 5\\n1 5 6\\n1 6 7\\n1 7 8\\n1 8 9\\n1 9 10') == '8.000000'\n"
    },
    {
        "number": 3558,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''3 10\n1 2 6\n0 4 3\n0 8 2''') == '6.000000'\nassert solution(\n'''4 1\n1 0 1\n3 0 2\n0 8 1\n1 1 4''') == '7.000000'\nassert solution(\n'''5 1\n2 2 1\n1 0 2\n0 2 2\n1 0 3\n3 0 3''') == '6.000000'\nassert solution(\n'''6 1\n2 2 1\n1 0 2\n0 2 2\n1 0 3\n2 0 3\n3 0 3''') == '5.000000'\nassert solution(\n'''10 1\n2 2 1\n1 0 2\n0 2 2\n1 0 3\n2 0 3\n3 0 3\n4 0 3\n5 0 3\n6 0 3\n7 0 3''') == '5.000000'\n"
    },
    {
        "number": 3558,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '6.000000'\n"
    },
    {
        "number": 3558,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '6.000000'\n\"\"\"\n\n\n\"\"\"\n"
    },
    {
        "number": 3559,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3559,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0 0\n0 0\n1.\n..\n0''') == '''1.\n..\n'''\nassert solution('''0 0\n0 0\n2.\n..\n0\n''') == '''2.\n..\n'''\nassert solution('''0 0\n0 0\n3.\n..\n0\n''') == '''3.\n..\n'''\nassert solution('''0 0\n0 0\n10.\n..\n0\n''') == '''10.\n..\n'''\nassert solution('''0 0\n0 0\n14.\n.1\n0\n''') == '''14.\n.1\n'''\n"
    },
    {
        "number": 3559,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 0\\n0 0\\n1.\\n..') == '1.\\n..'\nassert solution('0 0\\n0 0\\n2.\\n..') == '2.\\n..'\nassert solution('0 0\\n0 0\\n3.\\n..') == '3.\\n..'\nassert solution('0 0\\n0 0\\n4.\\n..') == '4.\\n..'\nassert solution('0 0\\n0 0\\n5.\\n..') == '5.\\n..'\n"
    },
    {
        "number": 3559,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\") == \"1\\n..\"\nassert solution(\"1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2"
    },
    {
        "number": 3559,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''0 0\n0 0\n1''') == '1.\\n..'\nassert solution('''0 0\n0 0\n2''') == '2.\\n..'\nassert solution('''0 0\n0 0\n4''') == '4.\\n..'\nassert solution('''0 0\n0 0\n4\n.\n.\n.\n.\n''') == '4.\\n.\\n.\\n.\\n'\nassert solution('''0 0\n0 0\n3\n.\n.\n.\n.\n''') == '3.\\n.\\n.\\n.\\n'\n"
    },
    {
        "number": 3559,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''0 0\n0 0\n1.\n..\n0\n''') == '''1.\n..\n..\n'''\nassert solution('''0 0\n0 0\n1.\n..\n0\n''') == '''1.\n..\n..\n'''\nassert solution('''0 0\n0 0\n2.\n.\n.\n.\n''') == '''1.\n..\n..\n'''\nassert solution('''0 0\n0 0\n2.\n.\n.\n.\n''') == '''1.\n..\n..\n'''\nassert solution('''0 0\n0 0\n2.\n.\n.\n.\n''') == '''1.\n..\n..\n'''\n"
    },
    {
        "number": 3559,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0 0\\n0 0\\n0 0\\n0 0\") == \"1.\\n..\\n0\\n0\\n0\\n0\\n0\"\nassert solution(\"0 0\\n0 0\\n0 0\\n0 0\") == \"1.\\n..\\n0\\n0\\n0\\n0\\n0\"\nassert solution(\"1 1\\n1 1\\n1 1\") == \"2.\\n..\\n0\\n0\\n0\\n0\\n0\"\nassert solution(\"0 0\\n0 0\\n0 0\\n0 0\") == \"1.\\n..\\n0\\n0\\n0\\n0\\n0\"\nassert solution(\"1 1\\n1 1\\n1 1\") == \"2.\\n..\\n0\\n0\\n0\\n0\\n0\"\n"
    },
    {
        "number": 3559,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3559,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 0\\n0 0\\n1') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1\\n0 0\\n1\\n0 0\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\n1\\n0 0\\"
    },
    {
        "number": 3559,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''1 0\n0 0\n1\n'''\n) == '''0 0\n0 0\n1\n'''\n\nassert solution(\n'''1 0\n0 0\n1\n'''\n) == '''0 0\n0 0\n1\n'''\n\nassert solution(\n'''2\n0 0\n0 0\n1 0\n0 0\n1\n'''\n) == '''0 0\n0 0\n0 0\n1 1\n'''\n\nassert solution(\n'''1\n0 0\n1\n'''\n) == '''0 0\n0 0\n1\n'''\n\nassert solution(\n'''2\n0 0\n0 0\n1 0\n0 0\n1\n'''\n) == '''0 0\n0 0\n0 0\n1 0\n'''"
    },
    {
        "number": 3560,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\na\nbc\nabc''') == '1\\n1\\n1'\nassert solution('''3\na\nbc\nabc''') == '1\\n1\\n1'\nassert solution('''3\na\nbc\nabc\n3\n1 abca\n2 1\n2 3''') == '1\\n1\\n1'\nassert solution('''4\na\nbc\nabc\n"
    },
    {
        "number": 3560,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\na\nbc\nabc''') == '1\\n1\\n1'\nassert solution('''3\na\nbc\nabc''') == '1\\n1\\n1'\nassert solution('''4\na\nbc\nabc\n"
    },
    {
        "number": 3560,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\nabc\na\nbc''') == '1\\n1\\n1'\nassert solution('''3\nab\na\nb\n''') == '1\\n0\\n1'\nassert solution('''3\nb\nb\nb\n''') == '1\\n1\\n0'\nassert solution('''3\nc\nc\nc\n''') == '0\\n0\\n1'\nassert solution('''3\nc\nb\nc\n''') == '1\\n0\\n1'\n"
    },
    {
        "number": 3560,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\na\nbc\nabc\n3\n1 abca\n2 1\n2 3''') == '1\\n1\\n1'\nassert solution('''2\na\na\n1\n2\n1\n2\n1\n2\n1\n2''') == '1\\n1\\n1'\nassert solution('''2\na\nb\na\n1\n2\n1\n2\n1\n2''') == '1\\n2\\n2\\n2'\nassert solution('''2\na\nb\na\n1\n2\n1\n2\n1\n2''') == '1\\n1\\n1\\n1'\nassert solution('''2\na\nb\na\n1\n2\n1\n2\n1\n2''') == '1\\n1\\n1\\n1'\n"
    },
    {
        "number": 3560,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('Hello') == 'Hello'\nassert solution('Hello World!') == 'Hello World!'\nassert solution('Hello World! Let\\'s Play Scrabble!') == 'Hello World! Let\\'s Play Scrabble!'\nassert solution('ZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZoXZ"
    },
    {
        "number": 3560,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\nabc\na\nbc\nabc''') == '1 1'\n\nassert solution('''1\na\na\n1\n''') == '1'\n\nassert solution('''2\na\na\n1\n''') == '1 1'\n\nassert solution('''2\na\na\n1\n2\na\na\n1\n''') == '1 1'\n\nassert solution('''2\na\na\n1\n2\na\na\n1\n2\na\na\n1\n''') == '1 1'"
    },
    {
        "number": 3560,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\nabc\n"
    },
    {
        "number": 3560,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3560,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\nabc\na\na''') == '1\\n1\\n1'\nassert solution('''3\nabc\na\na''') == '1\\n1\\n1'\nassert solution('''3\na\na\na''') == '1\\n1\\n1'\nassert solution('''3\na\na\na''') == '1\\n1\\n1'\nassert solution('''4\nb\na\nb\na\nb''') == '3\\n2\\n3\\n3'\n"
    },
    {
        "number": 3560,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\nabc\\na\\nbc\\na\\nabc\\n2\\n1 abca\\n2 1\\n2 3\\n') == '1\\n1\\n'\nassert solution('2\\nabc\\na\\nbc\\na\\nabc\\n2\\n1 abc\\n2 1\\n2 3\\n') == '1\\n1\\n'\nassert solution('3\\nabc\\na\\nbc\\na\\nabc\\n2\\n1 abc\\n2 1\\n2 3\\n') == '1\\n1\\n'\nassert solution('3\\nabc\\na\\nbc\\na\\nabc\\n2\\n1 abc\\n2 1\\n2 3\\n') == '1\\n1\\n'\nassert solution('3\\nabc\\na\\nbc\\na\\nabc\\n2\\n1 abc\\n2 1\\n2 3\\n') == '1\\n1\\n'\n"
    },
    {
        "number": 3561,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"1 1 1 3\") == \"NO\"\nassert solution(\"1 2 1 1\") == \"YES\"\nassert solution(\"1 2 2 1\") == \"NO\"\nassert solution(\"1 2 3 1\") == \"YES\"\n"
    },
    {
        "number": 3561,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"1 1 1 2\") == \"NO\"\nassert solution(\"2 1 1 2\") == \"YES\"\nassert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"1 1 1 1\") == \"YES\"\n"
    },
    {
        "number": 3561,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"2 1 1 1\") == \"NO\"\nassert solution(\"1 1 1 1\") == \"NO\"\nassert solution(\"2 1 1 1\") == \"YES\"\nassert solution(\"1 1 1 1\") == \"YES\"\n"
    },
    {
        "number": 3561,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"1 1 1 1\") == \"YES\"\nassert solution(\n    \"1 1 1 1\") == \"NO\"\nassert solution(\n    \"2 2 2 2\") == \"YES\"\nassert solution(\n    \"2 2 2 2\") == \"NO\"\nassert solution(\n    \"1 1 1 1\") == \"YES\"\n"
    },
    {
        "number": 3561,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\"\n"
    },
    {
        "number": 3561,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1 1 1') == 'YES'\nassert solution('1 1 1 3') == 'NO'\nassert solution('2 1 2 3') == 'NO'\nassert solution('2 1 2 6') == 'YES'\nassert solution('100100100 100100 100100 100100 10') == 'NO'\n"
    },
    {
        "number": 3561,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 3561,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"YES\"\n\n\"\"\"\n"
    },
    {
        "number": 3561,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\n"
    },
    {
        "number": 3561,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1 1 1') == 'YES'\nassert solution('2 2 2 2') == 'YES'\nassert solution('1 1 1 2') == 'NO'\nassert solution('3 3 3 3') == 'YES'\nassert solution('1 2 2 3') == 'NO'\n"
    },
    {
        "number": 3562,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 96\n-0.0080 1.5417 25.0000\n-0.0080 1.5417 25.0000''') == '80.5696000000'\n'''\n"
    },
    {
        "number": 3562,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3562,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '80.5696000000'\n\nassert solution('2 96') == '80.5696000000'\n\nassert solution('-0.0080 1.5417 25.0000') == '80.5696000000'\n\nassert solution('-0.0080 1.5417 25.0000 -0.0080 1.5417 25.0000') == '80.5696000000'\n\nassert solution('-0.0080 1.5417 25.0000 -0.0080 1.5417 25.0000 -0.0080 1.5417 25.0000') == '80.5696000000'"
    },
    {
        "number": 3562,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 2 3\n4 5 6\n7 8 9''') == '60.9200000000'\nassert solution('''-1 -2 -3\n0 0 0\n1 1 1''') == '0.0000'\nassert solution('''0.5 0.5 0.5\n0 0 0\n0.5 0.5 0.5\n1 1 1''') == '0.2500'\nassert solution('''0.5 0.5 0.5\n0 0 0\n0.5 0.5 0.5\n-1 -1 -1''') == '0.0000'\nassert solution('''0.5 0.5 0.5\n0 0 0\n0.5 0.5 0.5\n2 3 2''') == '50.0000'\n"
    },
    {
        "number": 3562,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 0 10\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000') == '80.5696000000'\nassert solution('2 1 1\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000') == '80.5696000000'\nassert solution('4 4 4\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000') == '80.5696000000'\nassert solution('0 0 10\\n0 0 10\\n0 0 10\\n0 0 10') == '80.5696000000'\nassert solution('1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == '80.5696000000'\n"
    },
    {
        "number": 3562,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 80.5696000000"
    },
    {
        "number": 3562,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n2 96\n-0.0080 1.5417 25.0000\n-0.0080 1.5417 25.0000\n''') == '80.5696000000'\n\n'''\n"
    },
    {
        "number": 3562,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '80.5696000000'\nassert solution(\"1 100\") == '100.0'\nassert solution(\"2 150\") == '50.0'\nassert solution(\"1 30\") == '30.0'\nassert solution(\"2 2\") == '100.0'\n"
    },
    {
        "number": 3562,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"80.5696000000\"\nassert solution(\"1 2 3\") == \"4.0\"\nassert solution(\"1 2 3 4\") == \"16.5\"\nassert solution(\"1 2 3 4 5\") == \"35.75\"\nassert solution(\"1 2 3 4 5 6\") == \"59.75\"\n"
    },
    {
        "number": 3562,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 96\n-0.0080 1.5417 25.0000\n-0.0080 1.5417 25.0000\n''') == '80.5696'\nassert solution('''2 2\n-100 -2 1\n1 1 1\n''') == '0'\nassert solution('''1 1\n1 1 1\n1 1 1\n''') == '100'\nassert solution('''5 1\n-1 1 1 1 1\n1 -1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n''') == '94.5'\nassert solution('''5 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n''') == '94.5'\n"
    },
    {
        "number": 3563,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 0 0 1 1 1 0 0 1') == '2'\nassert solution('2 2 2 2 1 2 3 3') == '3'\nassert solution('2 0 0 1 1 1 0 0 1 2 2 3 3 3 3 3 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4"
    },
    {
        "number": 3563,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n0 0 1 1 1 0 0 1\n''') == '2'\nassert solution('''1\n1 1\n''') == '1'\nassert solution('''6\n0 0 1 1 1 0 0 1\n1 1\n''') == '2'\nassert solution('''1\n1 1\n''') == '1'\nassert solution('''2\n-2 1\n-1 1\n1 1\n''') == '2'\n"
    },
    {
        "number": 3563,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\"\nassert solution(\"3 1 1 1 1 1 1 1 1\") == \"3\"\nassert solution
    },
    {
        "number": 3563,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2'\nassert solution(stdin) == '2'\nassert solution(stdin) == '2'\nassert solution(stdin) == '2'\nassert solution(stdin) == '2'\n"
    },
    {
        "number": 3563,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 3563,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(open('data/test_0.txt').read()) == '3\\n'\nassert solution(open('data/test_1.txt').read()) == '4\\n'\nassert solution(open('data/test_2.txt').read()) == '3\\n'\nassert solution(open('data/test_3.txt').read()) == '4\\n'\nassert solution(open('data/test_4.txt').read()) == '3\\n'\n"
    },
    {
        "number": 3563,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 0 0 0 1 1 1 0 0 1') == 2\nassert solution('1 2 2 3 3 3 4 4 4 4 4 4 0 0 0 0') == 3\nassert solution('1 0 0 1 0 1 1 0 0 1') == 1\nassert solution('1 0 0 1 0 1 1 0 0 1') == 1\nassert solution('1 0 0 1 0 1 1 0 0 1') == 1\n"
    },
    {
        "number": 3563,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(solution.__doc__) == '2'\n\n\"\"\"\n"
    },
    {
        "number": 3563,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 0 0 1 1 1 0 0 1') == '2'\nassert solution('6 0 0 1 1 1 1 0 0 1') == '2'\nassert solution('8 0 0 1 1 1 1 0 0 1') == '3'\nassert solution('10 0 0 1 1 1 1 0 0 1') == '3'\nassert solution('16 0 0 1 1 1 1 0 0 1') == '4'\n"
    },
    {
        "number": 3563,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(s\"4 0 0 1 1 1 0 0 1\") == \"2\"\n\"\"\"\n\n\"\"\"\n-----SUMMARY-----\n-\n\n-----EXPLANATION-----\n-\n\n-----HINT-----\n-\n\n\"\"\""
    },
    {
        "number": 3564,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 0 400\n1000 0 400\n2000 0 400\n300 0 150\n1300 0 150''') == '1400'\n\nassert solution('''3 2 3\n0 0 400\n1000 0 400\n2000 0 400\n300 0 150\n1300 0 150''') == 'impossible'\n'''"
    },
    {
        "number": 3564,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3 2 3\n0 0 400\n1000 0 400\n2000 0 400\n300 0 150\n1300 0 150\"\"\") == '1400'\n\nassert solution(\"\"\"1 2 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1 1 2\n1 1 2\n0 0 1\n4 0 1\n2 1 3\n4 0 1\n1 1 2\n1"
    },
    {
        "number": 3564,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    '''3 2 3\n0 0 400\n1000 0 400\n2000 0 400\n300 0 150\n1300 0 150'''\n) == '1400'\nassert solution(\n    '''3 2 3\n0 0 400\n1000 0 400\n2000 0 400\n300 0 150\n1300 0 150\n0 0 300\n1000 0 300\n2000 0 300\n300 0 150\n1300 0 150'''\n) == 'impossible'\n'''\n'''\n"
    },
    {
        "number": 3564,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1400\"\n\"\"\"\n"
    },
    {
        "number": 3564,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '1400'\nprint(solution(stdin))\n\"\"\"\nimport math\nn, m, k = map(int, stdin.split())\nE = {}\nfor _ in range(n):\n    x, y, r = map(int, stdin.split())\n    if (x, y) in E:\n        E[(x, y)] += r\n    else:\n        E[(x, y)] = r\nP = {}\nfor _ in range(m):\n    x, y, h = map(int, stdin.split())\n    if (x, y) in P:\n        P[(x, y)] += h\n    else:\n        P[(x, y)] = h\nH = set()\nfor x, y in E:\n    for h in range(E[(x, y)], P[(x, y)] + 1):\n        H.add(h)\nH = sorted(H)\n"
    },
    {
        "number": 3564,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 2 3''') == '1400'\nassert solution('''3 2 3''') == 'impossible'\nassert solution('''10 2 3''') == 'impossible'\nassert solution('''3 2 3''') == 'impossible'\nassert solution('''10 2 2''') == '0'\n"
    },
    {
        "number": 3564,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 2 3\n0 0 400\n1000 0 400\n2000 0 400\n300 0 150\n1300 0 150''') == '1400'\nassert solution('''2 2 3\n0 0 400\n1000 0 400\n2000 0 400\n300 0 150\n1300 0 150''') == 'impossible'\nassert solution('''3 2 3\n0 0 400\n1000 0 400\n2000 0 400\n300 0 150\n400 0 150''') == 'impossible'\nassert solution('''3 2 3\n0 0 400\n1000 0 400\n2000 0 400\n300 0 150\n400 0 150\n500 0 150\n1000 0 400\n2000 0 400\n300 0 150\n400 0 150\n500 0 150\n1000 0 400\n2000 0 400\n300 0 150\n''') == 'impossible'\nassert solution('''3 2 3\n0 0 400\n1000 0 400\n2000 0 400\n300 0 150\n400 0 150\n500 0 150\n1000 0 400\n2000 0 400\n300 0 150\n''') == '1400'\n"
    },
    {
        "number": 3564,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0 0 400\\n1000 0 400\\n2000 0 400\") == \"1400\"\nassert solution(\"1 1 100\\n300 0 150\") == \"impossible\"\nassert solution(\"1 2 2\\n0 0 400\\n1000 0 400\\n2000 0 400\") == \"1400\"\nassert solution(\"1 3 2\\n0 0 400\\n1000 0 400\\n2000 0 400\") == \"1400\"\nassert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\") == \"1400\"\n"
    },
    {
        "number": 3564,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n1') == '1400'\n\nassert solution('1 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n9') == 'impossible'\n\nassert solution('1 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n0') == '0'\n\nassert solution('1 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n0\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n0') == '0'\n\nassert solution('1 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n0\\n100 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n0') == '0'"
    },
    {
        "number": 3564,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 2 3\n0 0 400\n1000 0 400\n2000 0 400\n300 0 150\n1300 0 150''') == \"1400\"\nassert solution('''3 2 3\n0 0 400\n1000 0 400\n2000 0 400\n300 0 150\n1300 0 150\n4 0 400\n2000 0 400\n300 0 150\n1300 0 150''') == \"impossible\"\nassert solution('''3 2 3\n0 0 400\n1000 0 400\n2000 0 400\n300 0 150\n1300 0 150\n0 0 100\n2000 0 400\n300 0 150\n1300 0 150''') == \"1200\"\n'''\nimport sys"
    },
    {
        "number": 3565,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london\nreykjavik dublin\nbrussels helsinki\n''') == '3907'\n\nassert solution('''10 15\nlondon\ndublin\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london\nreykjavik dublin\nbrussels helsinki\n''') == '2641'\n\nassert solution('''10 15\nstockholm\nberlin\ndublin\namsterdam\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london\nreykjavik dublin\nbrussels helsinki\n''') == '2641'\n\nassert solution('''10 15\nstockholm\nberlin\ndublin\namsterdam\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london\nreykjavik dublin\nbrussels helsinki\n''') == '2641'\n\nassert solution('''10 15\nstockholm\nberlin\ndublin\namsterdam\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london\nreykjavik dublin\nbrussels helsinki\n''') == '2641'"
    },
    {
        "number": 3565,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\n\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\n\\nbrussels amsterdam 173\\n\\nstockholm amsterdam\") == \"3907\"\nassert solution(\"10 10\\nstockholm\\nhelsinki\\nberlin\\ncopenhagen\\noslo\\nbrussels\\nhelsinki\\nbrussels\\n\\nstockholm\\nberlin\\nbrussels\\noslo\\nstockholm\\nstockholm\\n\\nstockholm\\nberlin\\nhelsinki\\n\\nstockholm\\ncopenhagen\\noslo\\ncopenhagen\\nhelsinki\\nhelsinki\\n\\nstockholm\\nberlin\\nberlin\\nhelsinki\\nbrussels\\nhelsinki\\nbrussels\\n\\nbrussels\\nhelsinki\\noslo\\noslo\\n\\nbrussels\\nstockholm\\nhelsinki\\n\\nhelsinki\\nbrussels\\nhelsinki\\n\\nbrussels\\nberlin\\ncopenhagen\\nhelsinki\\noslo\\noslo\\n\\nbrussels\\nhelsinki\\ncopenhagen\\n\\noslo\\nbrussels\\noslo\\n\\noslo\\nbrussels\\nbrussels\\n\\noslo\\nhelsinki\\n\\ncopenhagen\\noslo\\nbrussels\\n\\nstockholm\\n\\ncopenhagen\\nstockholm\\n\\nbrussels\\n\\nstockholm\\n\\ncopenhagen\\n\\noslo\\n\\ncopenhagen\\n\\nhelsinki\\n\\nhelsinki\\n\\noslo\\n\\n\\noslo\\n\\n\\nbrussels\\n\\n\\nbrussels\\n\\n\\nhelsinki\\n\\n\\nhelsinki\\n\\n\\nhelsinki\\n\\n\\nhelsinki\\n\\n\\nhelsinki\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\"
    },
    {
        "number": 3565,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london\nreykjavik dublin\nbrussels helsinki\n''') == '3907'\n\nassert solution('''20 10\na\nb\nc\nd\ne\nf\ng\nh\ni\nj\nk\nl\nm\nn\no\np\nq\nr\ns\nt\nu\nv\nw\nx\ny\nz\n10 10\na b\nb c\nc d\nd e\ne f\nf g\ng h\nh i\ni j\nj k\nk l\nl m\nm n\nn o\no p\np q\nq r\nr s\ns t\nt u\nu v\nv w\nw x\nx y\ny z\n100 10\na b\nb c\nc d\nd e\ne f\nf g\ng h\nh i\ni j\nj k\nk l\nl m\nm n\nn o\no p\np q\nq r\nr s\ns t\nt u\nu v\nv w\nw x\nx y\ny z\n200 10\na b\nb c\nc d\nd e\ne f\nf g\ng h\nh i\ni j\nj k\nk l\nl m\nm n\nn o\no p\np q\nq r\nr s\ns t\nt u\nu v\nv w\nw x\nx y\ny z\n300 10\na b\nb c\nc d\nd e\ne f\nf g\ng h\nh i\ni j\nj k\nk l\nl m\nm n\nn o\no p\np q\nq r\nr s\ns t\nt u\nu v\nv w\nw x\nx y\ny z\n400 10\na b\nb c\nc d\nd e\ne f\nf g\ng h\nh i\ni j\nj k\nk l\nl m\nm n\nn o\no p\np q\nq r\nr s\ns t\nt u\nu v\nv w\nw x\nx y\ny z\n500 10\na b\nb c\nc d\nd e\ne f\nf g\ng h\nh i\ni j\nj k\nk l\nl m\nm n\nn o\no p\np q\nq r\nr s\ns t\nt u\nu v\nv w\nw x\nx y\ny z\n600 10\na b\nb c\nc d\nd e\ne f\nf g\ng h\nh i\ni j\nj k\nk l\nl m\nm n\nn o\no p\np q\nq r\nr s\ns t\nt u\nu v\nv w\nw x\nx y\ny z\n700 10\na b\nb c\nc d\nd e\ne f\nf g\ng h\nh i\ni j\nj k\nk l\nl m\nm n\nn o\no p\np q\nq r\nr s\ns t\nt u\nu v\nv w\nw x\nx y\ny z\n800 10\na b\nb c\nc d\nd e\ne f\nf g\ng h\nh i\ni j\nj k\nk l\nl m\nm n\nn o\no p\np q\nq r\nr s\ns t\nt u\nu v\nv w\nw x\nx y\ny z\n900 10\na b\nb c\nc d\nd e\ne f\nf g\ng h\nh i\ni j\nj k\nk l\nl m\nm n\nn o\no p\np q\nq r\nr s\ns t\nt u\nu v\nv w\nw x\nx y\ny z''') == '3590'\n\nassert solution('''10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dub"
    },
    {
        "number": 3565,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100') == '16949'\nassert solution('1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100') == '20125'\nassert solution('1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88"
    },
    {
        "number": 3565,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n-----Test-----\nThe two lines of input are:\n10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london\nreykjavik dublin\nbrussels helsinki\n\"\"\""
    },
    {
        "number": 3565,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london\nreykjavik dublin\nbrussels helsinki\n''') == '3907'\nassert solution('''8 8\na\nb\nc\nd\ne\nf\ng\nh\na b 6\nb c 1\nc d 1\nd e 2\ne f 1\na f 2\na b 3\ne f 3\nb e 3\n''') == '220'\n"
    },
    {
        "number": 3565,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('stockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbrussels amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbrussels helsinki') == '3907'\n\"\"\"\n"
    },
    {
        "number": 3565,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 1\\nfoo\\nfoo\\n') == ''\nassert solution('3 3\\nfoo\\nfoo\\nbar\\nbar\\nbar\\n') == ''\nassert solution('2 2\\nfoo\\nbar\\n') == ''\nassert solution('3 3\\nfoo\\nbar\\nbar\\n') == ''\nassert solution('2 4\\nfoo\\nfoo\\nfoo\\nfoo\\nfoo\\nbar\\nbar\\nbar\\n') == ''\n"
    },
    {
        "number": 3565,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london\nreykjavik dublin\nbrussels helsinki\n''') == '3907'\nassert solution('''10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london\nreykjavik dublin\nbrussels helsinki\n''') == '18063'\nassert solution('''10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london\nreykjavik dublin\nbrussels helsinki\n''') == '18063'\nassert solution('''10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london\nreykjavik dublin\nbrussels helsinki\n''') == '85000'\nassert solution('''10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london\nreykjavik dublin\nbrussels helsinki\n''') == '85000'\n"
    },
    {
        "number": 3565,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 6\nabcd\nacde\nbcde\nbdef\ncdef''') == '4'\nassert solution('''7 8\nab\nabc\nac\nacd\nb\nbc\nbd\ncb\nbc\nbc\ncd\ncde\n"
    },
    {
        "number": 3566,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1\\n3\\n2\\n0\\n5\\n0\\n9\\n4\\n5\\n2\\n1\") == \"2\\n1\\n2\\n1\\n\"\nassert solution(\"5\\n3\\n1\\n3\\n4\\n2\\n0\\n5\\n0\\n9\\n4\\n5\\n2\\n1\") == \"2\\n1\\n2\\n1\\n\"\nassert solution(\"5\\n3\\n1\\n3\\n4\\n2\\n0\\n5\\n0\\n9\\n4\\n5\\n2\\n1\") == \"2\\n1\\n2\\n1\\n\"\nassert solution(\"5\\n3\\n1\\n3\\n4\\n2\\n0\\n5\\n0\\n9\\n4\\n5\\n2\\n1\") == \"2\\n1\\n2\\n1\\n\"\nassert solution(\"5\\n3\\n1\\n3\\n4\\n2\\n0\\n5\\n0\\n9\\n4\\n5\\n2\\n1\") == \"2\\n1\\n2\\n1\\n\"\n"
    },
    {
        "number": 3566,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 4\n3 1 3 4 2\n0 5\n0 9\n4 5\n2 1''') == '2\\n1\\n2\\n1\\n1'\nassert solution('''5 4\n3 1 3 4 2\n0 5\n0 9\n4 5\n2 1\n1 1\n1 1''') == '1\\n1\\n1\\n1\\n1'\nassert solution('''5 4\n3 1 3 4 2\n0 5\n0 9\n4 5\n2 1\n0 0\n0 0\n0 0''') == '1\\n1\\n1\\n1\\n1'\nassert solution('''5 4\n3 1 3 4 2\n0 5\n0 9\n4 5\n2 1\n0 0\n0 1\n0 0\n0 1\n0 1\n0 1''') == '1\\n1\\n1\\n1\\n1'\n'''"
    },
    {
        "number": 3566,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\\n0 3\\n0 6\\n0 9\\n0 3\\n0 7\\n0 1\\n0 4\\n0 8\\n0 2\\n0 5\\n0 9\\n0 6\\n0 7\\n0 8\\n0 6\\n0 3\\n0 6\\n0 5\\n0 8\\n0 7\\n0 4\\n0 5\\n0 9\\n0 2\\n0 3\\n0 6\\n0 9\\n0 5\\n0 6\\n0 7\\n0 8\\n0 5\\n0 9\\n0 2\\n0 3\\n0 6\\n0 9\\n0 7\\n0 4\\n0 5\\n0 9\\n0 6\\n0 3\\n0 5\\n0 7\\n0 9\\n0 2\\n0 3\\n0 5\\n0 8\\n0 7\\n0 4\\n0 5\\n0 9\\n0 6\\n0 3\\n0 5\\n0 8\\n0 7\\n0 4\\n0 5\\n0 9\\n0 2\\n0 3\\n0 5\\n0 8\\n0 7\\n0 4\\n0 5\\n0 9\\n0 2\\n0 3\\n0 5\\n0 8\\n0 7\\n0 4\\n0 5\\n0 9\\n0 2\\n0 3\\n0 5\\n0 8\\n0 7\\n0 4\\n0 5\\n0 9\\n0 2\\n0 3\\n0 5\\n0 8\\n0 7\\n0 4\\n0 5\\n0 9\\n0 2\\n0 3\\n0 5\\n0 8\\n0 7\\n0 4\\n0 5\\n0 9\\n0 2\\n0 3\\n0 5\\n0 8\\n0 7\\n0 4\\n0 5\\n0 9\\n0 2\\n0 3\\n0 5\\n0 8\\n0 7\\n0 4\\n0 5\\n0 9\\n0 2\\n0 3\\n0 5\\n0 8\\n0 7\\n0 4\\n0 5\\n0 9\\n0 2\\n0 3\\n0 5\\n0 8\\n0 7\\n0 4\\n0 5\\n0 9\\n0 2\\n0 3\\n0 5\\n0 8\\n0 7\\n0 4\\n0 5\\n0 9\\n0 2\\n0 3\\n0 5\\n0 8\\n0 7\\n0 4\\n0 5\\n0 9\\n0 2\\n0 3\\n0 5\\n0 8\\n0 7\\n0 4\\n0 5\\n0 9\\n0 2\\n0 3\\n0 5\\n0 8\\n0 7\\n0 4\\n0 5\\n0 9\\n0 2\\n0 3\\n0 5\\n0 8\\n0 7\\n0 4\\n0 5\\n0 9\\n0 2\\n0 3\\n0 5\\n0 8\\n0 7\\n0 4\\n0 5\\n0 9\\n0 2\\n0 3\\n0 5\\n0 8\\n0 7\\n0 4\\n0 5\\n0 9\\n0 2\\n0 3\\n0 5\\n0 8\\n0 7\\n0 4\\n0 5\\n0 9\\n0 2\\n0 3\\n0 5\\n0 8\\n0 7\\n0 4\\n0 5\\n0 9\\n0 2\\n0 3\\n0 5\\n0 8\\n0 7\\n0 4\\n0 5\\n0 9\\n0 2\\n0 3\\n0 5\\n0 8\\n0 7\\n0 4\\n0 5\\n0 9\\n0 2\\n0 3\\n0 5\\n0 8\\n0 7\\n0 4\\n0 5\\n0 9\\n0 2\\n0 3\\n0 5\\n0 8\\n0 7\\n0 4\\n0 5\\n0 9\\n0 2\\n0 3\\n0 5\\n0 8\\n0 7\\n0 4\\n0 5\\n0 9\\n0 2\\n0 3\\n0 5\\n0 8\\n0 7\\n0 4\\n0 5\\n0 9\\n0 2\\n0 3\\n0 5\\n0 8\\n0 7\\n0 4\\n0 5\\n0 9\\n0 2\\n0 3\\n0 5\\n0 8\\n0 7\\n0 4\\n0 5\\n0 9\\n0 2\\n0 3\\n0 5\\n0 8\\n0 7\\n0 4\\n0 5\\n0 9\\n0 2\\n0 3\\n0 5\\n0 8\\n0 7\\n0 4\\n0 5\\n0 9\\n0 2\\n0 3\\n0 5\\n0 8\\n0 7\\n0 4\\n0 5\\n0 9\\n0 2\\n0 3\\n0 5\\n0 8\\n0 7\\n0 4\\n0 5\\n0 9\\n0 2\\n0 3\\n0 5\\n0 8\\n0 7\\n0 4\\n0 5\\n0 9\\n0 2\\n0 3\\n0 5\\n0 8\\n0 7\\n0 4\\n0 5\\n0 9\\n0 2\\n0 3\\n0 5\\n0 8\\n0 7\\n0 4\\n0 5\\n0 9\\n0 2\\n0 3\\n0 5\\n0 8\\n0 7\\n0 4\\n0 5\\n0 9\\n0 2\\n0 3\\n0 5\\n0 8\\n0 7\\n0 4\\n0 5\\n0 9\\n0 2\\n0 3\\n0 5\\n0 8\\n0 7\\n0 4\\n0 5\\n0 9\\n0 2\\n0 3\\n0 5\\n0 8\\n0 7\\n0 4\\n0 5\\n0 9\\n0 2\\n0 3\\n0 5\\n0 8\\n0 7\\n"
    },
    {
        "number": 3566,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n"
    },
    {
        "number": 3566,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3566,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\\n') == '2\\n1\\n2\\n1\\n'\nassert solution('3 1 3 4 2\\n3 3 3 1 4\\n0 5\\n0 9\\n4 5\\n2 1\\n') == '2\\n2\\n2\\n1\\n'\nassert solution('2 2\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1"
    },
    {
        "number": 3566,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"5 4\n3 1 3 4 2\n0 5\n0 9\n4 5\n2 1\n\"\"\") == \"\"\"2\n1\n2\n1\n1\n\"\"\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 3566,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\n\"\"\"\n"
    },
    {
        "number": 3566,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3566,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3 4 5\") == \"5 4 3 2 1\"\nassert solution(\"1 2 3 4 5 6 7 8\") == \"2 1 1 5 4 3 2\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"5 4 3 2 1\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"5 4 3 2 1\"\n"
    },
    {
        "number": 3567,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 4\n000000\n11111\n111111\n00000\n01010\n00001''') == '00010'\nassert solution('''2 3\n000000\n11111\n11111\n00000\n00000''') == '11111'\nassert solution('''4 4\n00011\n11111\n11011\n00001\n00000''') == '00000'\nassert solution('''3 5\n00000\n00000\n11111\n11111\n00000''') == '11111'\nassert solution('''5 3\n01100\n10011\n11011\n00000\n00000''') == '00000'\n"
    },
    {
        "number": 3567,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3567,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1\\n') == '0'\nassert solution('2\\n1\\n1') == '01'\nassert solution('3\\n1\\n1\\n1') == '101'\nassert solution('4\\n1\\n1\\n1') == '1010'\nassert solution('5\\n1\\n1\\n1') == '10101'\n"
    },
    {
        "number": 3567,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 5\\n01001\\n11100\\n10111\\n') == '00010'\nassert solution('3 1\\n1\\n1\\n') == '1011'\nassert solution('1 1\\n1\\n') == '1'\nassert solution('4 1\\n1\\n1\\n0\\n') == '0000'\nassert solution('4 1\\n1\\n0\\n0\\n') == '0000'\n"
    },
    {
        "number": 3567,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(open(\"data/test_18.txt\").read()) == \"00010\"\n\n-----\n\n\"\"\"\n"
    },
    {
        "number": 3567,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n3 5\n01001\n11100\n10111\n''') == \"00010\"\nassert solution(\n'''\n2 7\n00111\n11010\n''') == \"11010\"\nassert solution(\n'''\n3 3\n1 1\n0 0\n1 0\n''') == \"100\"\nassert solution(\n'''\n3 2\n1 0\n1 1\n0 1\n''') == \"001\"\nassert solution(\n'''\n2 5\n0 0\n0 1\n''') == \"0000\"\n"
    },
    {
        "number": 3567,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 5\\n01001\\n11100\\n10111\") == \"00010\"\nassert solution(\"3 3\\n01110\\n1110\\n1010\\n\") == \"00100\"\nassert solution(\"4 2\\n0100\\n1100\\n1110\\n0000\") == \"00100\"\nassert solution(\"4 2\\n0000\\n1100\\n1110\\n0100\") == \"01110\"\nassert solution(\"4 2\\n0100\\n1100\\n1110\\n0000\\n\") == \"00100\"\n"
    },
    {
        "number": 3567,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 3\n00010\n10111\n11100\n10000\n01110''') == \"00101\"\nassert solution('''3 2\n1011\n101\n1''') == \"001\"\nassert solution('''10 6\n111111111\n1111111111\n1111111111\n1111111111\n1111111111\n1111111111\n1111111111\n1111111111\n1111111111\n1111111111''') == \"111111111\"\nassert solution('''10 10\n000000000\n000000000\n000000000\n000000000\n000000000\n000000000\n000000000\n000000000\n000000000\n000000000\n000000000''') == \"000000000\"\nassert solution('''10 7\n1111111111\n1111111111\n1111111111\n1111111111\n1111111111\n1111111111\n1111111111\n1111111111\n1111111111\n1111111111''') == \"1111111111\"\n'''\n'''\n"
    },
    {
        "number": 3567,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 5\") == \"00010\"\n"
    },
    {
        "number": 3567,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 5\n01001\n11100\n10111''') == '00010'\nassert solution('''3 5\n01011\n10011\n11011\nSample Input:\n2 2\n11\n10\nSample Output:\n10010\n"
    },
    {
        "number": 3568,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"possible\"\n\"\"\"\n\nimport unittest\nfrom itertools import permutations"
    },
    {
        "number": 3568,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n3 1\n0 4\n6 12\n''') == 'possible'\nassert solution('''4\n4 1\n0 4\n6 12\n5 9\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0"
    },
    {
        "number": 3568,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n1\n2 3\n0 4\n6 12\n'''\n) == 'possible'\nassert solution(\n'''\n2\n5 4\n0 1\n0 3\n'''\n) == 'impossible'\nassert solution(\n'''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n'''\n) == 'impossible'\nassert solution(\n'''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n'''\n) == 'possible'\nassert solution(\n'''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n'''\n) == 'impossible'\n"
    },
    {
        "number": 3568,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n6 2\\n0 4\\n6 12') == 'possible'\nassert solution('1\\n6 2\\n0 4\\n7 19') == 'impossible'\nassert solution('1\\n5 2\\n0 3\\n5 8') == 'possible'\nassert solution('1\\n6 2\\n0 4\\n6 12') == 'possible'\nassert solution('1\\n6 2\\n0 4\\n6 12') == 'possible'\n"
    },
    {
        "number": 3568,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1\n1\n1\n1\n1\n1\n1''') == 'possible'\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1''') == 'possible'\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1''') == 'possible'\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1''') == 'possible'\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 3568,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"possible\"\nassert solution(\"1\") == \"possible\"\nassert solution(\"1 2\") == \"impossible\"\nassert solution(\"2 1\") == \"impossible\"\nassert solution(\"4 3\") == \"possible\"\n"
    },
    {
        "number": 3568,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n1\n6 2\n0 4\n6 12\n''') == 'possible'\nassert solution('''\n1\n6 2\n0 4\n6 12\n''') == 'impossible'\nassert solution('''\n1\n6 2\n0 4\n5 12\n''') == 'impossible'\nassert solution('''\n1\n6 2\n0 4\n5 12\n''') == 'possible'\nassert solution('''\n1\n6 2\n0 4\n5 12\n''') == 'possible'\n"
    },
    {
        "number": 3568,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"6 2\\n0 4\\n6 12\\n\") == \"possible\"\nassert solution(\"1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5\\n3\\n1\\n5"
    },
    {
        "number": 3568,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n1\n6 2\n0 4\n6 12\n''') == 'possible'\nassert solution('''\n1\n5 2\n0 4\n6 12\n''') == 'impossible'\nassert solution('''\n1\n5 2\n0 4\n8 9\n2 1\n6 12\n''') == 'impossible'\nassert solution('''\n1\n5 2\n0 4\n6 12\n''') == 'impossible'\nassert solution('''\n1\n5 2\n0 4\n6 12\n''') == 'possible'\n"
    },
    {
        "number": 3568,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''1\n2 2\n0 4\n6 12'''\n) == 'possible'\nassert solution(\n'''2\n5 5\n0 2\n2 3\n2 5\n5 10\n2 7\n1 8\n2 9\n0 10\n2 11'''\n) == 'possible'\nassert solution(\n'''2\n4 2\n0 2\n2 3\n2 5\n3 7\n2 8\n1 9\n2 10\n0 11'''\n) == 'impossible'\nassert solution(\n'''3\n5 4\n1 4\n2 3\n0 3\n1 6\n2 7\n3 8\n1 10\n2 11'''\n) == 'impossible'\nassert solution(\n'''3\n4 1\n0 5\n1 3\n0 2\n1 6\n3 7\n3 4\n1 8\n1 9\n0 10\n0 11'''\n) == 'possible'\n"
    },
    {
        "number": 3569,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n5 0 1\n10 0 1\n0 5 1\n0 -5 1\n-5 0 1''') == '2'\nassert solution('''2\n0 0 1\n0 0 1''') == '1'\nassert solution('''8\n0 0 1\n0 0 1\n0 0 1\n0 0 1\n0 0 1\n0 0 1\n0 0 1''') == '4'\nassert solution('''3\n0 0 1\n-2 0 1\n0 0 1''') == '1'\nassert solution('''1\n1 1 1\n-2 -2 -2''') == '0'\n"
    },
    {
        "number": 3569,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\\n') == '2'\n'''\n"
    },
    {
        "number": 3569,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n5 0 1\n10 0 1\n0 5 1\n0 -5 1\n-5 0 1''') == '2'\nassert solution('''5\n5 0 1\n10 0 1\n0 5 1\n0 -5 1\n-5 0 1''') == '2'\nassert solution('''1\n0 0 1''') == '0'\nassert solution('''1\n10 0 1''') == '0'\nassert solution('''1\n-10 0 1''') == '0'\n"
    },
    {
        "number": 3569,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n"
    },
    {
        "number": 3569,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n5 0 1\n10 0 1\n0 5 1\n0 -5 1\n-5 0 1''') == '2'\nassert solution('''6\n0 0 1\n0 0 1\n0 0 1\n0 0 1\n0 0 1\n0 0 1''') == '3'\nassert solution('''11\n0 0 1\n0 0 1\n0 0 1\n0 0 1\n0 0 1\n0 0 1\n0 0 1\n0 0 1\n0 0 1\n0 0 1\n0 0 1''') == '5'\nassert solution('''8\n-1 -1 -1\n-1 -1 -1\n-1 -1 -1\n-1 -1 -1\n-1 -1 -1\n-1 -1 -1\n-1 -1 -1\n-1 -1 -1''') == '5'\nassert solution('''8\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1''') == '4'\n'''\n\n'''\n"
    },
    {
        "number": 3569,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n5 0 1\n10 0 1\n0 5 1\n0 -5 1\n-5 0 1''') == '2'\nassert solution('''3\n3 0 0\n0 0 0\n-3 0 0''') == '1'\nassert solution('''5\n5 0 1\n10 0 1\n0 5 1\n0 -5 1\n-5 0 1''') == '2'\nassert solution('''100\n0 0 0\n-100 0 0\n0 -100 0\n-1 1 1\n0 0 0\n-1 1 1\n1 1 1\n1 1 1''') == '1000'\n'''\n'''"
    },
    {
        "number": 3569,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0\\n0\\n1\\n1\\n-1') == '1'\nassert solution('1\\n0\\n1\\n1\\n0') == '2'\nassert solution('-1\\n0\\n1\\n1\\n0') == '3'\nassert solution('-1\\n1\\n1\\n1\\n0') == '4'\nassert solution('-1\\n-1\\n1\\n1\\n0') == '5'\n"
    },
    {
        "number": 3569,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n5\n5 0 1\n10 0 1\n0 5 1\n0 -5 1\n-5 0 1\n''') == \"2\"\n\nassert solution('''\n2\n-10 -5 5\n5 0 -5\n''') == \"3\"\n\nassert solution('''\n5\n0 0 0\n-1 0 1\n1 1 1\n0 -1 1\n-1 -1 1\n''') == \"5\"\n\nassert solution('''\n5\n-5 -5 -5\n-5 -5 -5\n-5 -5 -5\n-5 -5 -5\n-5 -5 -5\n''') == \"3\"\n\nassert solution('''\n10\n2 -2 -3\n-3 2 -2\n-3 -2 2\n-2 -3 2\n2 -2 -3\n-3 -2 2\n-3 -2 -2\n-2 -3 -2\n2 -2 -3\n-3 -2 -2\n2 -2 -3\n''') == \"10\""
    },
    {
        "number": 3569,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"2\"\nassert solution(\"10\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\\n0 10 1\\n0 -10 1\\n-5 0 1\") == \"2\"\nassert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"2\"\nassert solution(\"5\\n5 0 1\\n10 0 1\\n0 -5 1\\n-5 0 1\") == \"2\"\nassert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"2\"\n"
    },
    {
        "number": 3569,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\\n\") == 2\nassert solution(\"2\\n1 1 1\\n1 1 1\\n2 1 1\\n0 2 1\\n0 2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n0 2 1\\n0 -2 1\\n0 -2 1\\n"
    },
    {
        "number": 3570,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on') == 'Plot Error'\nassert solution('5\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on') == '3 Just A Dream'\n\"\"\"\n"
    },
    {
        "number": 3570,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == 'Yes\\n3 Just A Dream\\nYes\\n'\nassert solution('''\n10\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == 'Plot Error\\n3 Just A Dream\\nYes\\n'\nassert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == 'Plot Error\\n3 Just A Dream\\nYes\\n'\nassert solution('''\n10\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == 'Plot Error\\n3 Just A Dream\\nYes\\n'\nassert solution('''\n5\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == 'No\\nPlot Error\\n3 Just A Dream\\nYes\\n'\n"
    },
    {
        "number": 3570,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == '''\nPlot Error\n3 Just A Dream\nYes\nPlot Error\n'''"
    },
    {
        "number": 3570,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == 'Yes\\n3 Just A Dream\\nYes\\nPlot Error'\n\nassert solution('''\n3\nE business_as_usual\nE bobby_dies\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE stuff_happens\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == 'Yes\\n3 Just A Dream\\nYes\\nPlot Error'\n\nassert solution('''\n7\nE business_as_usual\nE bobby_dies\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE stuff_happens\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nS 3!bobby_died\n''') == 'Yes\\n3 Just A Dream\\nYes\\n3 Just A Dream'\n\nassert solution('''\n11\nE business_as_usual\nE bobby_dies\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE stuff_happens\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nS 3!bobby_died\nS 4!bobby_died\nS 5!bobby_died\nS 6!bobby_died\nS 7!bobby_died\nS 8!bobby_died\nS 9!bobby_died\nS 10!bobby_died\n''') == 'Yes\\n3 Just A Dream\\nYes\\n3 Just A Dream\\n3 Just A Dream\\n3 Just A Dream'\n\nassert solution('''\n11\nE business_as_usual\nE bobby_dies\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE stuff_happens\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nS 3!bobby_died\nS 4!bobby_died\nS 5!bobby_died\nS 6!bobby_died\nS 7!bobby_died\nS 8!bobby_died\nS 9!bobby_died\nS 10!bobby_died\nS 11!bobby_died\n''') == 'Yes\\n3 Just A Dream\\nYes\\n3 Just A Dream\\n3 Just A Dream\\n3 Just A Dream\\n3 Just A Dream'"
    },
    {
        "number": 3570,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('E!bobby_dies business_as_usual') == '3 Just A Dream'\nassert solution('E!bobby_dies it_goes_on_and_on') == 'Plot Error'\nassert solution('E business_as_usual') == '3 Just A Dream'\nassert solution('E bobby_dies business_as_usual') == '3 Just A Dream'\n"
    },
    {
        "number": 3570,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 3570,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1') == 'Plot Error'\nassert solution('1\\n') == 'Plot Error'\nassert solution('1\\n2') == 'Plot Error'\nassert solution('1\\n2\\n') == 'Plot Error'\n"
    },
    {
        "number": 3570,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on''') == '''3 Just A Dream\nYes\nPlot Error'''\n\nassert solution('''2\nE stuff_happens\nE it_goes_on_and_on\nD 2\nS 1!stuff_happens\nS 2!it_goes_on_and_on''') == '''Plot Error\n2 Just A Dream\nYes'''\n\nassert solution('''1\nE stuff_happens\nD 2\nS 1!stuff_happens\nS 2!stuff_happens''') == '''Plot Error\n2 Just A Dream'''\n\nassert solution('''20\nE stuff_happens\nD 1\nS 1!stuff_happens''') == '''Plot Error\n2 Just A Dream'''\n\nassert solution('''1000\nE stuff_happens\nD 1\nS 1!stuff_happens''') == '''Plot Error\n10 Just A Dream'''"
    },
    {
        "number": 3570,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\\\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == '''\\\n3 Just A Dream\nYes\nPlot Error\n'''\n\nassert solution('''\\\n5\nE mary_died\nE mary_died\nS 1 mary_died\nE but_not_mary_died\nE but_not_mary_died\nS 1!but_not_mary_died\nE bobby_dies\nS 2!bobby_dies\nS 1!bobby_died\nE mary_died\nD 4\nS 1!bobby_died\nS 2!bobby_dies mary_died\nS 1!but_not_mary_died\nS 2!bobby_dies it_goes_on_and_on\nS 1!but_not_mary_died\nS 2!bobby_died\nS 1!bobby_died\nS 2!bobby_died\nS 2!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS"
    },
    {
        "number": 3570,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('\\n'.join([\n    '10',\n    'E business_as_usual',\n    'E bobby_dies',\n    'S 1 bobby_died',\n    'E stuff_happens',\n    'E jr_does_bad_things',\n    'S 2!bobby_dies business_as_usual',\n    'E it_goes_on_and_on',\n    'D 4',\n    'S 1!bobby_dies',\n    'S 2!bobby_dies it_goes_on_and_on',\n    '10',\n    'E business_as_usual',\n    'E bobby_dies',\n    'S 1 bobby_died',\n    'E stuff_happens',\n    'E jr_does_bad_things',\n    'S 2!bobby_dies business_as_usual',\n    'E it_goes_on_and_on',\n    'D 4',\n    'S 1!bobby_dies',\n    'S 2!bobby_dies it_goes_on_and_on',\n])) == '\\n'.join([\n    'Plot Error',\n    '3 Just A Dream',\n    'Yes',\n    'Plot Error',\n    '1 Just A Dream',\n    'Yes',\n])\n"
    },
    {
        "number": 3571,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    '10 5 4 2'\n) == (\n    '+-----------------+\\n'\n    '|exercitation ullamco|^|\\n'\n    '|laboris nisi ut aliquip| |\\n'\n    '|ex ea commodo consequat|X|\\n'\n    '|Duis aute irure dolor in| |\\n'\n    '|reprehenderit in        |v|\\n'\n    '+-----------------+'\n)\n'''"
    },
    {
        "number": 3571,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n\n\"\"\"\n\nfrom fractions import Fraction\n\nlines, height, viewport_width, viewport_height, first_line, lines_count, text = input().split()\n\nfor line in range(int(lines_count)):\n    line_text = input()\n    for i in range(int(height)):\n        # Show line\n        print(''.join(line_text[i*int(viewport_width): (i+1)*int(viewport_width)]) + '+')\n        # Print the 3 lines below it\n        if i+1+int(lines) < int(lines_count):\n            print(''.join(line_text[(i+1)*int(viewport_width): ((i+1)*int(viewport_width))+int(viewport_width)]) + '|')\n            print(''.join(line_text[((i+1)*int(viewport_width))+int(viewport_width): (i+2)*int(viewport_width)]) + '|')\n            print(''.join(line_text[(i+2)*int(viewport_width): (i+3)*int(viewport_width)]) + '+')\n"
    },
    {
        "number": 3571,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n-----\n\"\"\"\n\nfrom math import ceil\n\nlines = [int(i) for i in stdin.split(\" \")]\nprint(\n    \"+------------------------+\\n\"\n    \"|exercitation ullamco    |^|\\n\"\n    \"|laboris nisi ut aliquip | |\\n\"\n    \"|ex ea commodo consequat |X|\\n\"\n    \"|Duis aute irure dolor in| |\\n\"\n    \"|reprehenderit in        |v|\\n\"\n    \"+------------------------+\"\n)\n\nH = lines[0]\nW = lines[1]\nF = lines[2]\nN = lines[3]\n\nadjustedText = []\nfor i in range(N):\n    adjustedText.append(stdin.split(\"\\n\")[i])\n\nprint(\"+-----------------------------+\")\nfor i in range(H):\n    print(\n        \"|\"\n        + adjustedText[i]\n        + \"|\"\n        + \"v\" * (ceil((len(adjustedText[i]) - H) / 2))\n        + \"|\"\n    )\nprint(\"+-----------------------------+\")\n"
    },
    {
        "number": 3571,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 0 3 6\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum''') == '''+------------------------+-+\n|exercitation ullamco    |^|\n|laboris nisi ut aliquip | |\n|ex ea commodo consequat |X|\n|Duis aute irure dolor in| |\n|reprehenderit in        |v|\n+------------------------+-+\n"
    },
    {
        "number": 3571,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('24 5 8 7') == \"+------------------------+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+'"
    },
    {
        "number": 3571,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5 4 8 7\") == \"v-^+-/X\"\n\"\"\"\n\nfrom sys import stdin"
    },
    {
        "number": 3571,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 1 8 7') == '+------------------------+'\nassert solution('10 2 11 3') == '+----------------------------+'\nassert solution('0 0 0 0') == '+------------------------+'\nassert solution('-4 -4 -4 -4') == '+------------------------+'\nassert solution('-4 -4 -4 -4\\n+----------------------------+') == '+------------------------+\\n+----------------------------+'\n"
    },
    {
        "number": 3571,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n24 5 8 7\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do\neiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad\nminim veniam quis nostrud exercitation ullamco laboris nisi ut\naliquip ex ea commodo consequat Duis aute irure dolor in\nreprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\npariatur Excepteur sint occaecat cupidatat non proident sunt in\nculpa qui officia deserunt mollit anim id est laborum\n\"\"\") == \"\"\"\n+------------------------+-+\n|exercitation ullamco    |^|\n|laboris nisi ut aliquip | |\n|ex ea commodo consequat |X|\n|Duis aute irure dolor in| |\n|reprehenderit in        |v|\n+------------------------+-+\n"
    },
    {
        "number": 3571,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 4 8 7') == '+-------------------------+\\n|exercitation ullamco        |^|\\n|laboris nisi ut aliquip        |X|\\n|ex ea commodo consequat        |v|\\n|Duis aute irure dolor in    |v|\\n|reprehenderit in        |v|\\n+-------------------------+'\nassert solution('5 5 6 6') == '+----------------------------+\\n|exercitation ullamco            |^|\\n|laboris nisi ut aliquip        |X|\\n|ex ea commodo consequat        |v|\\n|Duis aute irure dolor in    |v|\\n|reprehenderit in        |v|\\n+----------------------------+'\nassert solution('4 4 6 3') == '+------------------------------+\\n|exercitation ullamco        |^|\\n|laboris nisi ut aliquip        |X|\\n|ex ea commodo consequat        |v|\\n|Duis aute irure dolor in    |v|\\n|reprehenderit in        |v|\\n+------------------------------+'\nassert solution('4 3 4') == '+-----------------------+\\n|exercitation ullamco        |^|\\n|laboris nisi ut aliquip        |X|\\n|ex ea commodo consequat        |v|\\n|Duis aute irure dolor in    |v|\\n|reprehenderit in        |v|\\n+-----------------------+'\nassert solution('3 3 2') == '+-------------------------+\\n|exercitation ullamco            |^|\\n|laboris nisi ut aliquip        |X|\\n|ex ea commodo consequat        |v|\\n|Duis aute irure dolor in    |v|\\n|reprehenderit in        |v|\\n+-------------------------+'\n"
    },
    {
        "number": 3571,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 5 8 7') == '+------------------------+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+'\nassert solution('24 5 8 7') == '+------------------------+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+'\nassert solution('23 25 25 7') == '+------------------------+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+'\nassert solution('8 8 8 8') == '+------------------------+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+'\nassert solution('30 40 40 40') == '+------------------------+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+'\n"
    },
    {
        "number": 3572,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\"\nassert solution(\n\"0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"impossible\"\nassert solution(\n\"1 2 3\\n2 3 1\") == \"impossible\"\nassert solution(\n\"2 3\\n2 2 3\") == \"impossible\"\nassert solution(\n\"2 3\\n3 1 2\") == \"possible\"\n"
    },
    {
        "number": 3572,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n5 10\n0 3 2 1\n3 0 1 3\n2 1 0 2\n1 3 2 0\n\"\"\") == \"possible\"\nassert solution(\n\"\"\"\n5 10\n0 3 2 1\n3 0 1 3\n2 1 0 2\n1 3 2 0\n\"\"\") == \"impossible\"\nassert solution(\n\"\"\"\n2 1\n1 1\n\"\"\") == \"possible\"\nassert solution(\n\"\"\"\n1 1\n1 1\n\"\"\") == \"possible\"\nassert solution(\n\"\"\"\n1 1\n0 1\n\"\"\") == \"impossible\"\n\"\"\"\n    "
    },
    {
        "number": 3572,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(open(os.path.join(os.path.dirname(__file__), \"test_solution.py\"), \"r\").read()) == \"possible\"\nassert solution(open(os.path.join(os.path.dirname(__file__), \"test_solution.py\"), \"r\").read()) == \"possible\"\nassert solution(open(os.path.join(os.path.dirname(__file__), \"test_solution.py\"), \"r\").read()) == \"possible\"\nassert solution(open(os.path.join(os.path.dirname(__file__), \"test_solution.py\"), \"r\").read()) == \"possible\"\nassert solution(open(os.path.join(os.path.dirname(__file__), \"test_solution.py\"), \"r\").read()) == \"possible\"\n"
    },
    {
        "number": 3572,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0') == 'possible'\nassert solution('3\\n0 1 3\\n2 1 0 2\\n1 3 2 0') == 'impossible'\nassert solution('4\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0') == 'possible'\n\"\"\"\n"
    },
    {
        "number": 3572,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"4 10\n0 3 2 1\n3 0 1 3\n2 1 0 2\n1 3 2 0\"\"\") == \"possible\"\nassert solution(\n\"\"\"4 7\n0 3 2 1\n3 0 1 3\n2 1 0 2\n1 3 2 0\"\"\") == \"impossible\"\nassert solution(\n\"\"\"4 5\n0 3 2 1\n3 0 1 3\n2 1 0 2\n1 3 2 0\"\"\") == \"impossible\"\nassert solution(\n\"\"\"4 3\n0 3 2 1\n3 0 1 3\n2 1 0 2\n1 3 2 0\"\"\") == \"impossible\"\nassert solution(\n\"\"\"4 5\n0 3 2 1\n3 0 1 3\n2 1 0 2\n1 3 2 0\"\"\") == \"impossible\"\n"
    },
    {
        "number": 3572,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'possible'\nassert solution(stdin) == 'possible'\nassert solution(stdin) == 'possible'\nassert solution(stdin) == 'impossible'\nassert solution(stdin) == 'possible'\n"
    },
    {
        "number": 3572,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0') == 'possible'\nassert solution('3 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0') == 'impossible'\nassert solution('0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0') == 'impossible'\nassert solution('0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0') == 'impossible'\nassert solution('3 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0') == 'possible'\n"
    },
    {
        "number": 3572,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 10\n0 3 2 1\n3 0 1 3\n2 1 0 2\n1 3 2 0\n''') == 'possible'\nassert solution('''2 10\n0 2\n1 0\n2 1\n''') == 'impossible'\nassert solution('''2 10\n1 0\n1 1\n''') == 'impossible'\nassert solution('''3 10\n0 3 1 2\n3 0 2 1\n2 1 0 3\n1 2 3 0\n''') == 'impossible'\nassert solution('''4 10\n0 3 1 2 4\n3 0 2 1 4\n2 1 0 3 4\n1 3 2 0 4\n''') == 'possible'\n"
    },
    {
        "number": 3572,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 'possible'\nassert solution('0 10\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0') == 'possible'\nassert solution('0 10\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0') == 'impossible'\n'''"
    },
    {
        "number": 3572,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0 2\") == \"impossible\"\nassert solution(\"0 2\") == \"possible\"\nassert solution(\"0 2\") == \"impossible\"\nassert solution(\"0 2\") == \"possible\"\nassert solution(\"0 2\") == \"possible\"\n"
    },
    {
        "number": 3573,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '1.00000000'\n\nSample Input:\n2 3 4\n1 2\n1\n1\nSample Output:\n1.33333333\nassert solution(stdin) == '1.33333333'\n\nSample Input:\n3 2 4\n3\n4\nSample Output:\n1.66666666\nassert solution(stdin) == '1.66666666'\n\nSample Input:\n1 1 1\n1\n2\nSample Output:\n1.00000000\nassert solution(stdin) == '1.00000000'\n\nSample Input:\n1 1 1\n1\n1\nSample Output:\n1.33333333\nassert solution(stdin) == '1.33333333'\n\n-----Solution-----\nWe expect that the expected number of rounds will be the minimum integer that satisfies the following conditions:\n\nThe game will last for at least one round.\nCesar and Raul will always be the players who win.\nIn case they finish at the same time, it is a draw.\nIn each round, the amount of money they will pay will be the same as the amount of money they receive from the draw.\nWe are looking for the smallest number of rounds that the game will last.\n\nNow that we have the winning number of rounds, we know that the game will always end in some number of rounds. Therefore, the expected number of rounds will be the minimum number of rounds that the game will last.\n\nWe know that the number of rounds that the game will last at the end of the first round is the number of balls left over in the box. In other words, the number of rounds that the game will last is $N-D$ after $N$ rounds of drawing from the box.\n\nAfter $N$ rounds, there are $D$ balls left in the box. If $C$ numbers were drawn from the box in the first round, then the number of balls left over is $D$-$C$ = $D$-$C$. The number of rounds that the game will last is $D$+1 after $D$ rounds of drawing from the box. Therefore, the number of rounds that the game will last is $D$+1, since $D$ rounds have passed.\n\nTherefore, we have:\n\nThe number of rounds that the game will last is $D$+1, since $D$ rounds have passed.\n\nSince $D$ rounds have passed, $D$+1 = $D$ rounds left in the box.\n\nSince $D$ rounds have passed, $D$+1 = $D$ rounds left in the box.\n\nSince $D$ rounds have passed, $D$+1 = $D$ rounds left in the box.\n\nSince $D$ rounds have passed, $D$+1 = $D$ rounds left in the box.\n\nSince $D$ rounds have passed, $D$+1 = $D$ rounds left in the box.\n\nSince $D$ rounds have passed, $D$+1 = $D$ rounds left in the box.\n\nSince $D$ rounds have passed, $D$+1 = $D$ rounds left in the box.\n\nSince $D$ rounds have passed, $D$+1 = $D$ rounds left in the box.\n\nSince $D$ rounds have passed, $D$+1 = $D$ rounds left in the box.\n\nThe number of rounds that the game will last is $D$+1, since $D$ rounds have passed.\n\n$D$+1 = $D$ rounds left in the box.\n\n$D$+1 = $D$ rounds left in the box.\n\n$D$+1 = $D$ rounds left in the box.\n\n$D$+1 = $D$ rounds left in the box.\n\n$D$+1 = $D$ rounds left in the box.\n\n$D$+1 = $D$ rounds left in the box.\n\n$D$+1 = $D$ rounds left in the box.\n\n$D$+1 = $D$ rounds left in the box.\n\n$D$+1 = $D$ rounds left in the box.\n\n$D$+1 = $D$ rounds left in the box.\n\n$D$+1 = $D$ rounds left in the box.\n\n$D$+1 = $D$ rounds left in the box.\n\n$D$+1 = $D$ rounds left in the box.\n\n$D$+1 = $D$ rounds left in the box.\n\n$D$+1 = $D$ rounds left in the box.\n\n$D$+1 = $D$ rounds left in the box.\n\n$D$+1 = $D$ rounds left in the box.\n\n$D$+1 = $D$ rounds left in the box.\n\n$D$+1 = $D$ rounds left in the box.\n\n$D$+1 = $D$ rounds left in the box.\n\n$D$+1 = $D$ rounds left in the box.\n\n$D$+1 = $D$ rounds left in the box.\n\n$D$+1 = $D$ rounds left in the box.\n\n$D$+1 = $D$ rounds left in the box.\n\n$D$+1 = $D$ rounds left in the box.\n\n$D$+1 = $D$ rounds left in the box.\n\n$D$+1 = $D$ rounds left in the box.\n\n$D$+1 = $D$ rounds left in the box.\n\n$D$+1 = $D$ rounds left in the box.\n\n$D$+1 = $D$ rounds left in the box.\n\n$D$+1 = $D$ rounds left in the box.\n\n$D$+1 = $D$ rounds left in the box.\n\n$D$+1 = $D$ rounds left in the box.\n\n$D$+1 = $D$ rounds left in the box.\n\n$D$+1 = $D$ rounds left in the box.\n\n$D$+1 = $D$ rounds left in the box."
    },
    {
        "number": 3573,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '1.00000000'"
    },
    {
        "number": 3573,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == '1.00000000'\n-----Test Set 1-----\nInput\n\n2 1 1\n1\n2\nOutput\n\n1.00000000\n'''\nimport sys\n"
    },
    {
        "number": 3573,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 1 1\") == \"1.00000000\"\nassert solution(\"1\") == \"0.500000000\"\nassert solution(\"2 2\") == \"0.500000000\"\nassert solution(\"1 1\") == \"0.500000000\"\nassert solution(\"10 10\") == \"0.500000000\"\n"
    },
    {
        "number": 3573,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 1 1''') == '1.00000000'\nassert solution('''1\n2\n1''') == '1.00000000'\nassert solution('''2 3 4\n1\n2\n3\n4''') == '1.9432374'\nassert solution('''2 3 4\n1\n4\n2\n3''') == '1.8750000'\nassert solution('''2 3 4\n1\n2\n1\n4''') == '0.5000000'\n"
    },
    {
        "number": 3573,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 1 1') == '1.00000000'\nassert solution('1 2 3') == '1.00000000'\nassert solution('1 2 3 4') == '1.00000000'\nassert solution('1 2 4 3') == '0.97222222'\nassert solution('1 2 3 4 5') == '0.96551724'\n"
    },
    {
        "number": 3573,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 1 1\") == \"1.00000000\"\n\nassert solution(\"2 1 1\") == \"1.00000000\"\n\nassert solution(\"1\") == \"0.5\"\n\nassert solution(\"1\") == \"0.5\"\n\nassert solution(\"2 2 2\") == \"0.5\""
    },
    {
        "number": 3573,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 1 1''') == '1.0'\nassert solution('''2 1 1''') == '1.0'\nassert solution('''2 1 1''') == '1.0'\nassert solution('''2 1 1''') == '1.0'\nassert solution('''2 1 1''') == '1.0'\n"
    },
    {
        "number": 3573,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\"1.00000000\"\"\"\n\n\"\"\"\nCesar and Raul like betting and good food, in no particular order. They want to try out a new fancy restaurant and they decided to make a bet \u2013 they are going to play a game and the loser pays for dinner.\n\nThey have a box with $N$ balls. Each ball contains a distinct number between $1$ and $N$. Then, the game proceeds with these steps:\n - Initially, each person picks $C$ distinct numbers between $1$ and $N$ and writes them down on a separate card.\n - In each round, $D$ balls are drawn from the box uniformly at random. Cesar and Raul mark the ball numbers that appear on their respective card. The $D$ balls are then returned to the box.\n - The game stops when a player has marked all the numbers he chose. That player is the winner. If both players finish at the same time, it is a draw and they will split the dinner.\n\nThey are quite eager to try out this new restaurant and they\u2019re now wondering: how many rounds will the game last until at least one of the players has marked all his numbers?\n\nYou are given a space separated list of $N$ numbers:\n\n$N$\n\nYour task is to find the expected number of rounds that the game will last.\n\nInput\n\nFirst line of the input consists of one number $N$, the number of balls in the box.\n\nThe next line has two space separated integers: $D$ and $C$, as described in the header.\n\nThe next $C$ lines will have one space separated integer each: the number that Cesar has written down.\n\nThe last line has two space separated integers, $N$ and $D$, as described in the header.\n\nOutput\n\nOutput is the expected number of rounds.\n\nExample\n\nInput:\n\n2\n\n2 2\n\n1\n\n1\n\n2\n\n2\n\n1\n\n1\n\n1\n\n2\n\n1\n\n1\n\n1\n\n1\n\n1\n\n2\n\n2\n\n1\n\n1\n\n2\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n2\n\n2\n\n1\n\n2\n\n2\n\n1\n\n1\n\n1\n\n1\n\n2\n\n1\n\n2\n\n2\n\n2\n\n2\n\n1\n\n1\n\n2\n\n2\n\n1\n\n2\n\n2\n\n1\n\n2\n\n1\n\n2\n\n1\n\n1\n\n1\n\n1\n\n1\n\n2\n\n2\n\n2\n\n1\n\n2\n\n2\n\n1\n\n2\n\n2\n\n1\n\n2\n\n1\n\n2\n\n1\n\n2\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n2\n\n2\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n2\n\n2\n\n1\n\n1\n\n1\n\n2\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n2\n\n1\n\n1\n\n1\n\n1\n\n1\n\n2\n\n1\n\n2\n\n2\n\n1\n\n2\n\n1\n\n2\n\n1\n\n2\n\n1\n\n2\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n2\n\n2\n\n1\n\n1\n\n1\n\n2\n\n2\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n2\n\n1\n\n2\n\n2\n\n1\n\n2\n\n2\n\n1\n\n1\n\n1\n\n2\n\n2\n\n1\n\n1\n\n1\n\n1\n\n1\n\n2\n\n1\n\n2\n\n1\n\n2\n\n1\n\n1\n\n2\n\n1\n\n1\n\n2\n\n1\n\n1\n\n2\n\n1\n\n1\n\n1\n\n2\n\n2\n\n2\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n2\n\n1\n\n1\n\n2\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n2\n\n2\n\n2\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n2\n\n2\n\n1\n\n2\n\n1\n\n2\n\n1\n\n1\n\n1\n\n1\n\n1\n\n2\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n2\n\n1\n\n1\n\n2\n\n1\n\n1\n\n2\n\n2\n\n1\n\n1\n\n2\n\n1\n\n2\n\n2\n\n1\n\n1\n\n2\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n2\n\n1\n\n1\n\n1\n\n1\n\n2\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n2\n\n1\n\n2\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n2\n\n1\n\n1\n\n1\n\n2\n\n1\n\n1\n\n1\n"
    },
    {
        "number": 3573,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 1 1\") == \"1.00000000\"\nassert solution(\"2 1 1\") == \"1.00000000\"\nassert solution(\"3 1 1\") == \"1.00000000\"\nassert solution(\"4 1 1\") == \"1.00000000\"\n"
    },
    {
        "number": 3574,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == None\nassert solution('1 2 3 4 5') == None\nassert solution('1\\n2\\n1\\n2\\n3\\n3\\n4\\n1') == None\nassert solution('1\\n1\\n1\\n1\\n1\\n1') == None\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == None\n"
    },
    {
        "number": 3574,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3574,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3574,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"5\\n\" +\n    \"5 4 3 3 2\\n\" +\n    \"3\\n\" +\n    \"1 2\\n\" +\n    \"1 1\\n\" +\n    \"2 4\\n\") == '2\\n1\\n3'\n\nassert solution(\n    \"10\\n\" +\n    \"5 4 3 3 2 1 2 1 2 2 4\\n\" +\n    \"3\\n\" +\n    \"1 2\\n\" +\n    \"1 1\\n\" +\n    \"2 4\\n\") == '2\\n1\\n3'\n\nassert solution(\n    \"5\\n\" +\n    \"5 4 3 3 2\\n\" +\n    \"3\\n\" +\n    \"1 2\\n\" +\n    \"1 1\\n\" +\n    \"2 4\\n\") == '2\\n1\\n3'\n\nassert solution(\n    \"5\\n\" +\n    \"5 4 3 3 2\\n\" +\n    \"3\\n\" +\n    \"1 2\\n\" +\n    \"1 1\\n\" +\n    \"2 4\\n\") == '2\\n1\\n3'\n\nassert solution(\n    \"10\\n\" +\n    \"5 4 3 3 2 1 2 1 2 2 4\\n\" +\n    \"3\\n\" +\n    \"1 2\\n\" +\n    \"1 1\\n\" +\n    \"2 4\\n\") == '2\\n1\\n3'"
    },
    {
        "number": 3574,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"5\n5 4 3 3 2\n3\n1 2\n1 1\n2 4\n\"\"\") == \"\"\"2\n1\n3\n\"\"\"\n\nassert solution(\n\"\"\"10\n100 123 456 789 9101112 13141516\n3\n1 2\n1 1\n2 4\n\"\"\") == \"\"\"3\n\"\"\"\n\nassert solution(\n\"\"\"15\n10000 12345678 91011121314151617181920\n3\n1 2\n1 1\n2 4\n\"\"\") == \"\"\"2\n\"\"\"\n"
    },
    {
        "number": 3574,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n5 4 3 3 2\n3\n1 2\n1 1\n2 4\n''') == '2\\n1\\n3'\n\nassert solution('''6\n7 4 6 1 5 6 3\n3\n1 2\n1 1\n2 4\n''') == '2\\n1\\n3'\n\nassert solution('''5\n5 4 3 3 2\n3\n1 2\n1 1\n2 4\n''') == '2\\n1\\n3'\n\nassert solution('''5\n5 4 3 3 2\n3\n1 2\n1 1\n2 4\n''') == '2\\n1\\n3'\n\nassert solution('''5\n5 4 3 3 2\n3\n1 2\n2 3\n1 2\n2 4\n''') == '3\\n2\\n1'"
    },
    {
        "number": 3574,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3574,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n') == '1'\nassert solution('1\\n3\\n') == '1'\nassert solution('1\\n4\\n') == '3'\nassert solution('3\\n3\\n') == '3'\nassert solution('3\\n4\\n') == '4'\n"
    },
    {
        "number": 3574,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n5 4 3 3 2\n3\n1 2\n1 1\n2 4\n''') == '2\\n1\\n3\\n'\nassert solution('''5\n5 4 3 3 2\n3\n1 2\n1 1\n2 4\n''') == '2\\n1\\n3\\n'\nassert solution('''1\n1\n2\n2\n1\n''') == '2\\n'\nassert solution('''2\n1\n1\n2\n2\n1\n''') == '2\\n'\nassert solution('''2\n1\n2\n2\n1\n2\n1\n2\n2\n2\n1\n1\n2\n1\n2\n2\n1\n1\n2\n2\n1\n2\n1\n2\n2\n2\n1\n1\n2\n2\n1\n2\n1\n1\n2\n2\n1\n1\n2\n1\n1\n2\n2\n1\n1\n2\n1\n2\n2\n1\n1\n2\n2\n1\n1\n2\n2\n1\n1\n2\n2\n1\n1\n2\n2\n2\n1\n1\n2\n2\n1\n1\n2\n1\n1\n2\n2\n1\n1\n2\n2\n2\n1\n1\n2\n2\n2\n1\n1\n2\n1\n1\n2\n2\n1\n2\n1\n1\n2\n2\n1\n1\n2\n2\n1\n2\n2\n2\n2\n1\n2\n1\n1\n2\n2\n1\n1\n2\n2\n2\n1\n1\n2\n1\n1\n2\n1\n2\n2\n1\n2\n2\n1\n1\n2\n1\n1\n2\n2\n1\n1\n2\n1\n1\n2\n2\n1\n1\n2\n1\n1\n2\n2\n1\n1\n2\n1\n1\n2\n2\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n2\n2\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n2\n2\n1\n1\n2\n1\n2\n2\n1\n1\n2\n2\n1\n1\n2\n1\n2\n2\n2\n1\n2\n2\n1\n1\n2\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n2\n2\n1\n2\n1\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n1\n2\n2\n1\n2\n1\n2\n1\n2\n2\n2\n1\n1\n1\n2\n1\n2\n1\n1\n2\n1\n2\n1\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n2\n1\n2\n1\n1\n2\n2\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n2\n1\n1\n2\n1\n1\n2\n2\n1\n2\n1\n2\n2\n1\n1\n2\n1\n1\n2\n2\n1\n2\n2\n1\n2\n1\n1\n2\n1\n1\n2\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n2\n1\n2\n1\n1\n2\n1\n2\n2\n1\n1\n2\n1\n2\n1\n1\n2\n2\n1\n1\n2\n1\n2\n1\n1\n2\n1\n1\n2\n2\n2\n1\n2\n2\n1\n1\n2\n1\n1\n2\n2\n1\n1\n2\n1\n2\n1\n2\n2\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n2\n1\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n2\n1\n1\n2\n1\n2\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n2\n2\n1\n1\n2\n1\n2\n1\n2\n1\n2\n2\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n2\n1\n1\n2\n1\n1\n2\n2\n1\n1\n2\n2\n1\n1\n2\n1\n1\n2\n2\n1\n1\n2\n1\n2\n1\n2\n2\n1\n1\n2\n2\n1\n1\n2\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n2\n1\n1\n1\n2\n1\n1\n2\n2\n2\n1\n1\n2\n2\n1\n1\n2\n2\n2\n1\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n2\n1\n1\n2\n1\n1\n2\n2\n1\n1\n1\n2\n1\n2\n2\n2\n1\n1\n2\n2\n1\n2\n2\n2\n1\n2\n2\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n2\n1\n2\n2\n1\n1\n2\n2\n1\n2\n1\n2\n1\n2\n1\n2\n2\n2\n2\n1\n2\n2\n1\n1\n2\n2\n2\n1\n2\n2\n1\n1\n2\n1\n2\n1\n2\n2\n1\n1\n2\n1\n2\n1\n2\n1\n1\n2\n1\n1\n2\n2\n1\n1\n1\n2\n1\n1"
    },
    {
        "number": 3574,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"5\n5 4 3 3 2\n3\n1 2\n1 1\n2 4\n\"\"\") == \"\"\"2\n1\n3\n\"\"\"\n\nassert solution(\"\"\"5\n5 4 3 3 2\n3\n1 2\n1 1\n2 4\n\"\"\") == \"\"\"2\n1\n3\n\"\"\"\n\nassert solution(\"\"\"5\n5 4 3 3 2\n3\n1 2\n1 1\n2 4\n\"\"\") == \"\"\"2\n1\n3\n\"\"\"\n\nassert solution(\"\"\"5\n5 4 3 3 2\n3\n1 2\n1 1\n2 4\n\"\"\") == \"\"\"2\n1\n3\n\"\"\"\n\nassert solution(\"\"\"5\n5 4 3 3 2\n3\n1 2\n1 1\n2 4\n\"\"\") == \"\"\"2\n1\n3\n\"\"\""
    },
    {
        "number": 3575,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 2\\n0 1\\n1 2\\n0 2\\n') == '1'\nassert solution('3 2\\n0 1\\n1 2\\n0 2\\n0 0\\n1 1\\n2 1\\n0 1\\n') == 'never meet'\nassert solution('4 3\\n0 1\\n1 2\\n2 3\\n0 3\\n1 1\\n2 1\\n0 1\\n') == '1'\nassert solution('3 2\\n0 1\\n1 2\\n0 2\\n0 0\\n1 1\\n2 1\\n0 1\\n') == 'never meet'\nassert solution('2 2\\n0 1\\n0 1\\n') == '1'\n"
    },
    {
        "number": 3575,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '1'\n\n'''\n\nfrom itertools import combinations"
    },
    {
        "number": 3575,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 2\n0 1\n1 2\n0 2\n3 4\n5 2\n0 1\n1 2\n0 2''') == '1'\nassert solution('''3 2\n0 1\n1 2\n0 2\n1 2\n1 3\n0 3\n0 2\n1 2''') == '1'\nassert solution('''1 1\n1 2\n0 1\n0 2''') == 'never meet'\nassert solution('''1 1\n0 1\n0 2''') == 'never meet'\nassert solution('''3 3\n0 1\n0 2\n0 3\n1 2\n2 3\n1 2\n2 3''') == '1'\n"
    },
    {
        "number": 3575,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 2\n0 1\n1 2\n0 2\n''') == '1'\nassert solution('''2 4\n0 1\n0 2\n1 3\n2 4\n''') == '2'\nassert solution('''0 1\n1 2\n0 2\n''') == 'never meet'\n'''\n"
    },
    {
        "number": 3575,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"never meet\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3575,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 2\n0 1\n1 2\n0 2\n''') == '1'\nassert solution('''3 2\n0 1\n1 2\n0 2\n1 3\n''') == 'never meet'"
    },
    {
        "number": 3575,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0\\n3\\n2') == '1'\nassert solution('0\\n3\\n3') == 'never meet'\nassert solution('1\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '2'\nassert solution('1\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20') == '12'\nassert solution('1\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n"
    },
    {
        "number": 3575,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '1'\nassert solution(stdin = '4 2') == '1'\nassert solution(stdin = '3 1') == 'never meet'\nassert solution(stdin = '5 2') == '1'\nassert solution(stdin = '4 1') == '1'\n"
    },
    {
        "number": 3575,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"3 2\\n0 1\\n1 2\\n0 2\\n1 2\\n0 1\\n1 2\\n0 1\\n2 3\") == \"1\"\n\nassert solution(\n    \"5 3\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n3 4\\n5 4\\n2 3\\n1 5\\n3 4\\n0 5\\n5 2\\n0 2\\n1 3\\n1 4\") == \"never meet\"\n\nassert solution(\n    \"5 3\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n3 4\\n5 4\\n2 3\\n1 5\\n3 4\\n0 5\\n5 2\\n0 2\\n1 3\\n1 4\") == \"2.0\"\n\nassert solution(\n    \"5 4\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n0 1\\n1 5\\n2 4\\n3 4\\n0 5\\n5 2\\n0 2\\n1 3\\n1 4\") == \"3.0\"\n\nassert solution(\n    \"5 4\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n3 4\\n5 4\\n2 3\\n1 5\\n3 4\\n0 5\\n5 2\\n0 2\\n1 3\\n1 4\") == \"0.5\""
    },
    {
        "number": 3575,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '1'\nassert solution(stdin) == 'never meet'\nprint('Passed')\n'''\n"
    },
    {
        "number": 3576,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 4 2') == '14500000001'\nassert solution('1 2 3 4 5') == '5'\nassert solution('2 5 1') == '5'\nassert solution('3 3 1') == '5'\nassert solution('10 10 10') == '10'\n"
    },
    {
        "number": 3576,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 4 2''') == 14500000001\nassert solution('''10 10 4''') == 100000000003\nassert solution('''8 9 19''') == 1\n'''"
    },
    {
        "number": 3576,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 4 2') == 14500000001\nassert solution('10 10 10') == 235830944\nassert solution('3 10 2') == 14500000001\n\n-----How it is used-----\nThe simplest solution can be found using an exhaustive search for every possible block to search. While this is slower than the more efficient solution that avoids the brute force search, it works in practice, but has complexity O(K^{3R^{2}}) with $R$ rows and $C$ columns, which is much greater than $10^{11}$.\n\nA more efficient solution would be to use the Binary search method. For each block to search, the probability of success is $p/q$, where $p$ is the probability that a block adjacent to this one is searched and $q$ is the probability that a block not adjacent to this one is searched. Thus $q = 1 - p$. For $R$ rows and $C$ columns, the probability of finding a block adjacent to the searched block is $p/(1 - p)$ and the probability of finding a block not adjacent to the searched block is (1 - p)/(1 - p) = (1 - p)/p = (1 - p)/(1 - p) = $1 - p$. The general pattern is:\n\n1. Compute $p/q$ for all blocks adjacent to the searched block.\n2. Compute $1 - p/q$ for all blocks not adjacent to the searched block.\n3. As the values of $p$ and $q$ are the same for the searched block, we can use the fact that if $q = 1 - p$ for all blocks adjacent to the searched block, $q = 1 - p$ for all blocks not adjacent to the searched block. Thus the probability of success is the sum of the products of the probabilities of success of adjacent blocks and of success of not adjacent blocks.\n4. Subtract $p/q$ from $1 - p/q$ to get $1 - p/q$.\n\n-----Alternate solution-----\nFind $p = \\frac{(N-1)}{2}$ and $q = \\frac{(N-1)}{2}$, where $N$ is the total number of blocks in the city. We have $q = \\frac{(N-1)}{2}$ and $p = \\frac{(N-1)}{2}$. Thus we have $q = \\frac{(N-1)}{2}$ and $p = \\frac{(N-1)}{2}$ with probability $p/q = \\frac{1 - p}{q} = \\frac{1 - \\frac{1 - p}{p}}{p} = \\frac{1 - p}{p} = \\frac{1 - p}{p}$. To avoid round-off, we can use:\n\n$\\text{factorial of $p$} = \\prod_{i=0}^{p-1} p^i$\n$\\text{factorial of $q$} = \\prod_{i=0}^{q-1} (1 - p)^i$\n$\\text{modulo}$ (\\text{factorial of $p$} \\times \\text{factorial of $q$} \\times 2)$ = \\text{modulo}$ \\prod_{i=0}^{p-1} \\text{factorial of $q$} \\times 2$\n$\\text{modulo}$ (\\text{factorial of $p$} \\times \\text{modulo}$ \\prod_{i=0}^{p-1} \\text{factorial of $q$} \\times 2$)$ = \\text{modulo}$ \\prod_{i=0}^{p-1} \\text{factorial of $q$} \\times 2$\n$\\text{modulo}$ (\\text{modulo}$ \\prod_{i=0}^{p-1} \\text{factorial of $q$} \\times 2$)$ = \\text{modulo}$ \\prod_{i=0}^{p-1} \\text{modulo}$ \\prod_{i=0}^{p-1} \\text{factorial of $q$} \\times 2$.\n$\\text{modulo}$ (\\text{modulo}$ \\prod_{i=0}^{p-1} \\text{modulo}$ \\prod_{i=0}^{p-1} \\text{modulo}$ \\prod_{i=0}^{p-1} \\text{factorial of $q$} \\times 2$)$ = \\text{modulo}$ \\prod_{i=0}^{p-1} \\text{modulo}$ \\prod_{i=0}^{p-1} \\text{modulo}$ \\prod_{i=0}^{p-1} \\text{modulo}$ \\prod_{i=0}^{p-1} \\text{factorial of $q$} \\times 2$.\n\n-----\n\n-----\n\n-----\n\"\"\"\n"
    },
    {
        "number": 3576,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 4 2''') == '14500000001'\nassert solution('''1 2 3 4''') == '1'\nassert solution('''10 3 5''') == '4'\nassert solution('''5 5 5''') == '6'\nassert solution('''10 5 3''') == '2'\n"
    },
    {
        "number": 3576,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '14500000001'\n\"\"\"\n\n\"\"\"\nShiny Gold\nhttps://www.hackerrank.com/challenges/shiny-gold/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=warmup\n\nYou are given an array of integers representing how much money each house gets paid, depending on the size of the house.\n\nAll houses receive at least some amount of money; every fifth house receive exactly enough money to buy a car.\n\nGiven an integer k, determine the maximum amount of money you can spend and still have the maximum number of houses.\n\nFor example, if the given array of values is [1, 2, 3, 4, 5], then starting from a house with one car, you can buy a car for 2 (since the fifth house is worth at least 2), but you cannot buy a car for 3, because you do not have enough money to buy a car.\n\nGiven k = 10 and the array of values is [1, 2, 8, 4, 5], then the maximum amount of money you can spend and still have the maximum number of houses is 10, since you can buy a car for 1, start in the fifth house, and buy a car for 8 (since the first four houses are not worth buying a car, and you do not have enough money to buy a car).\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 3576,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 4 2') == '14500000001'\n\n-----Note-----\nThe only difference between the two test cases is the number of blocks the police will search, since the city is very small.\n\n\"\"\"\n\nimport sys\nfrom fractions import gcd"
    },
    {
        "number": 3576,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"14500000001\"\n\n\"\"\"\n\nfrom fractions import Fraction"
    },
    {
        "number": 3576,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5 4 2\") == \"14500000001\"\nassert solution(\"3 4 2\") == \"10000000\"\nassert solution(\"7 8 9\") == \"8\"\nassert solution(\"10 10 10\") == \"4\"\nassert solution(\"1000000000 1000000000 10\") == \"1000000000\"\n"
    },
    {
        "number": 3576,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 4 2''') == \"14500000001\"\nassert solution('''3 4 2''') == \"1330000000001\"\nassert solution('''1000 4 2''') == \"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"\nassert solution('''1 10 2''') == \"50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"\nassert solution('''1 1 0''') == \"10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"\n"
    },
    {
        "number": 3576,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 14500000001\nstdin = \"\"\nprint(solution(stdin))  # 14500000001"
    },
    {
        "number": 3577,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n4\\n3 7\\n1 6\\n2 6\\n') == '0\\n1\\n1\\n2'\nassert solution('1\\n4\\n3 7\\n1 6\\n2 6\\n0\\n') == '0\\n1\\n1\\n2'\nassert solution('1\\n4\\n3 7\\n1 6\\n2 6\\n0\\n0\\n') == '0\\n1\\n1\\n2'\nassert solution('1\\n4\\n3 7\\n1 6\\n2 6\\n0\\n1\\n') == '0\\n1\\n1\\n2'\nassert solution('1\\n4\\n3 7\\n1 6\\n2 6\\n0\\n0\\n2\\n') == '0\\n1\\n1\\n2'\n"
    },
    {
        "number": 3577,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n3\\n7\\n1\\n2\\n6') == '0\\n1\\n1\\n2\\n1'\nassert solution('2\\n3\\n1\\n4') == '0\\n0\\n0\\n0'\nassert solution('5\\n9\\n4\\n8\\n7') == '0\\n1\\n2\\n3\\n0'\nassert solution('6\\n9\\n4\\n8\\n7') == '0\\n1\\n2\\n3\\n0'\nassert solution('7\\n9\\n4\\n8\\n7') == '0\\n1\\n2\\n3\\n0'\n"
    },
    {
        "number": 3577,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n1 4\n3 7\n1 6\n2 6''') == '0\\n1\\n1\\n2'\nassert solution('''4\n1 1\n2 2\n3 3\n4 4''') == '0\\n0\\n0\\n0'\nassert solution('''6\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6''') == '1\\n0\\n0\\n0\\n0\\n0'\nassert solution('''7\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7''') == '1\\n0\\n0\\n0\\n0\\n0\\n0'\nassert solution('''8\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8''') == '1\\n0\\n0\\n0\\n0\\n0\\n0\\n0'\n"
    },
    {
        "number": 3577,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\\\n4\n1 4\n3 7\n1 6\n2 6\n''') == '0\\n1\\n1\\n2\\n'\n\nassert solution('''\\\n5\n1 4\n1 1\n3 7\n3 6\n3 4\n''') == '0\\n1\\n2\\n3\\n0\\n'\n\nassert solution('''\\\n4\n1 2\n2 2\n3 3\n3 4\n''') == '0\\n0\\n0\\n1\\n'\n\nassert solution('''\\\n5\n1 1\n1 1\n1 3\n2 3\n3 3\n''') == '0\\n0\\n0\\n1\\n0\\n'\n\nassert solution('''\\\n5\n1 1\n1 3\n2 1\n1 3\n3 3\n''') == '0\\n0\\n1\\n0\\n0\\n'"
    },
    {
        "number": 3577,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n4\n1 4\n3 7\n1 6\n2 6\n'''\n) == '''\n0\n1\n1\n2\n'''\n"
    },
    {
        "number": 3577,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == '''0\n1\n1\n2\n3\n'''\n\nassert solution('''1\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n''') == '''1\n0\n0\n0\n1\n'''\n\nassert solution('''2\n5\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3"
    },
    {
        "number": 3577,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3577,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\n"
    },
    {
        "number": 3577,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('1\\n2\\n3\\n4') == '1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == '0'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7') == '0'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8') == '1'\n"
    },
    {
        "number": 3577,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1 4\n3 7\n1 6\n2 6\n''') == '''0\n1\n1\n2\n2\n'''\n\nassert solution('''\n1\n1\n1\n1\n1\n1\n''') == '''0\n0\n0\n0\n0\n0\n'''\n\nassert solution('''\n3\n1 4\n3 7\n1 6\n2 6\n''') == '''0\n1\n1\n2\n'''\n\nassert solution('''\n7\n1 4\n3 7\n1 6\n2 6\n1 5\n2 5\n1 4\n1 3\n''') == '''0\n0\n0\n0\n0\n0\n0\n0\n'''\n\nassert solution('''\n3\n1 4\n3 7\n1 6\n2 6\n''') == '''0\n1\n1\n2\n'''"
    },
    {
        "number": 3578,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n5\\n2 1 1000\\n1 2 1000\\n1 3 1000\\n2 4 500\\n3 5 500\\n5\") == \"3100\"\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n5\\n2 1 1000\\n1 2 1000\\n1 3 1000\\n2 4 500\\n3 5 500\\n5\") == \"3100\"\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n5\\n2 1 1000\\n1 2 1000\\n1 3 1000\\n2 4 500\\n3 5 500\\n5\") == \"3100\"\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n5\\n2 1 1000\\n1 2 1000\\n1 3 1000\\n2 4 500\\n3 5 500\\n5\") == \"3100\"\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n5\\n2 1 1000\\n1 2 1000\\n1 3 1000\\n2 4 500\\n3 5 500\\n5\") == \"3100\"\n"
    },
    {
        "number": 3578,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin.split()[1]\nassert solution('''5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\nSample Output:\n3100\n''') == '3100'\nassert solution('''1\n1\n3\n3\n5\n5\n3\n3\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n1\n5\n1\n3\n1\n1\n3\n"
    },
    {
        "number": 3578,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\"\nassert solution(\"2 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\"\nassert solution(\"2 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\"\nassert solution(\"3 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\"\nassert solution(\"3 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\"\n"
    },
    {
        "number": 3578,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300''') == \"3100\"\nassert solution('''5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n3\n2 4 300\n1 5 500''') == \"4350\"\nassert solution('''2 1\n1 2 1''') == \"1\"\n'''"
    },
    {
        "number": 3578,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3578,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300''') == '3100'\n\nassert solution('''4 3\n1 2 1000\n2 3 1000\n3 4 1000\n4 5 1000''') == '3100'\n\nassert solution('''5 4\n1 2 1000\n2 3 1000\n3 4 1000\n4 5 1000\n1 1 1\n1 1 1''') == '1750'\n\nassert solution('''10 6\n1 2 1000\n1 3 1000\n1 4 1000\n1 5 1000\n1 6 1000\n1 7 1000\n1 8 1000\n1 9 1000\n1 10 1000\n2 3 1\n2 4 1\n3 4 1\n3 5 1\n3 6 1\n3 7 1\n3 8 1\n4 5 1\n4 6 1\n4 7 1\n4 8 1\n5 6 1\n5 7 1\n5 8 1\n5 9 1\n5 10 1\n6 7 1\n6 8 1\n6 9 1\n6 10 1\n7 8 1\n7 9 1\n7 10 1\n8 9 1\n8 10 1\n9 10 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1"
    },
    {
        "number": 3578,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3100'\n\nassert solution(\n'''\n3 3\n1 2 1000\n2 3 1000\n3 4 1000\n2\n1 3 1000\n2 4 500\n''') == '4050'\n\nassert solution(\n'''\n2 3\n1 2 1000\n2 3 1000\n''') == '2000'\n"
    },
    {
        "number": 3578,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n\"\"\"\n) == \"3100\"\nassert solution(\n\"\"\"5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n2 3 1000\n\"\"\"\n) == \"5500\"\nassert solution(\n\"\"\"6 4\n1 2 1000\n2 3 1000\n3 4 500\n3\n1 4 300\n1 2 1000\n3 2 500\n\"\"\"\n) == \"6200\"\nassert solution(\n\"\"\"4 2\n1 2 1000\n2 3 1000\n3 4 500\n4\n2 1 500\n2 3 500\n3 4 500\n\"\"\"\n) == \"6000\"\nassert solution(\n\"\"\"5 4\n1 2 1000\n2 3 1000\n3 4 500\n4\n1 2 1000\n1 3 1000\n1 4 500\n1 4 500\n\"\"\"\n) == \"12000\"\n"
    },
    {
        "number": 3578,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(open(\"test_foodreview.txt\").read()) == \"4000\"\nassert solution(open(\"input/foodreview.txt\").read()) == \"6600\"\n"
    },
    {
        "number": 3578,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\"\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 4 500\\n1 2 100\\n2 4 300\\n3 4 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n4 5 500\") == \"13800\"\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 4 500\\n1 2 100\\n2 4 300\\n3 4 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"13800\"\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 4 500\\n1 2 100\\n2 4 300\\n3 4 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n4 5 500\\n1 2 100\\n2 3 1000\\n3 1 1000\") == \"6660\"\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n3 4 500\\n1 2 100\\n2 4 300\\n3 4 300\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n4 5 500\\n1 2 100\\n2 3 1000\\n3 1 1000\") == \"6660\"\n"
    },
    {
        "number": 3579,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"5.25\"\nassert solution(\"4 3\") == \"11.5\"\nassert solution(\"2 3\") == \"0\"\nassert solution(\"4 2\") == \"3.5\"\nassert solution(\"3 3\") == \"0.5\"\n"
    },
    {
        "number": 3579,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"5.250000000\"\n\nTest Input:\n4 2\n1 8\n6 5\n2 5\n2 9\n7 13\nTest Output:\n5.250000000\nassert solution(stdin) == \"5.250000000\"\n"
    },
    {
        "number": 3579,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 2') == '5.25'\nassert solution('5 1') == '1.5'\nassert solution('3 4') == '1.833333333333333'\nassert solution('1 8') == '0.5'\nassert solution('2 5') == '0.16666666666666667'\n"
    },
    {
        "number": 3579,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n5\\n1\\n1\\n1\\n3') == '3.666666666667'\nassert solution('2\\n2\\n4\\n3\\n3\\n5\\n3\\n3\\n5\\n7\\n7\\n7\\n7\\n7') == '4.0'\nassert solution('1\\n2\\n5\\n1\\n1\\n1\\n3\\n2\\n5\\n3\\n5\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7') == '5.0'\nassert solution('1\\n2\\n5\\n1\\n1\\n1\\n3\\n2\\n5\\n3\\n5\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7') == '5.5'\nassert solution('1\\n2\\n5\\n1\\n1\\n1\\n3\\n2\\n5\\n3\\n5\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7') == '5.5'\n"
    },
    {
        "number": 3579,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3579,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 5.25"
    },
    {
        "number": 3579,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''4 2\n1 8\n6 5\n2 5\n2 9\n7 13''') == '5.25'\n\nassert solution(\n'''3 3\n1 7\n5 3\n7 5\n7 9''') == '5.0'\n\nassert solution(\n'''10 15\n1 30\n2 40\n3 50\n4 60\n5 70\n6 80\n7 90\n8 100\n9 110\n10 120''') == '20.5'\n\nassert solution(\n'''6 4\n2 7\n2 6\n4 6\n6 2\n4 5\n4 7''') == '7.5'\n\nassert solution(\n'''5 5\n1 7\n5 3\n7 5\n7 9''') == '2.0'"
    },
    {
        "number": 3579,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"5.250000000\"\n'''"
    },
    {
        "number": 3579,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 2\n1 8\n6 5\n2 5\n2 9\n7 13''') == '5.25'\nassert solution('''1 2\n0 10\n11 1\n10 1\n2 5\n1 2\n10 1\n1 1\n9 1\n1 1\n2 4\n1 2\n2 2''') == '4.25'\nassert solution('''1 2\n0 10\n10 1\n1 1\n2 4\n1 2\n10 1\n1 1\n9 1\n1 1\n2 4\n1 2\n2 2''') == '4.25'\nassert solution('''1 2\n0 10\n11 1\n10 1\n2 5\n1 2\n10 1\n1 1\n9 1\n1 1\n2 4\n1 2\n2 2''') == '5.25'\nassert solution('''1 2\n0 10\n11 1\n10 1\n2 5\n1 2\n10 1\n1 1\n9 1\n1 1\n2 4\n1 2\n2 2''') == '5.25'\n"
    },
    {
        "number": 3579,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 1\n1 1\n2 2''') == '5.25'\nassert solution('''1 8\n1 8\n2 2''') == '5.25'\nassert solution('''1 8\n1 8\n2 2''') == '5.25'\nassert solution('''4 2\n1 8\n6 5\n2 5\n2 9\n7 13\nSample Output:\n5.250000000\nassert solution('''1 2\n1 1\n2 2''') == '1.5'\n"
    },
    {
        "number": 3580,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n') == '1'\nassert solution('2\\n1\\n') == '2'\nassert solution('3\\n1\\n') == '3'\nassert solution('4\\n1\\n') == '2'\nassert solution('5\\n1\\n') == '2'\n"
    },
    {
        "number": 3580,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input_str) == output_str\n"
    },
    {
        "number": 3580,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == result\n"
    },
    {
        "number": 3580,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '''7\n2\n2\n0\n4\n'''\n\nassert solution('''1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '''7\n2\n2\n0\n4\n'''\n"
    },
    {
        "number": 3580,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n7\n1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '7\\n2\\n2\\n0\\n4'\n\nassert solution(\n'''\n7\n1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '7\\n2\\n2\\n0\\n4'\n\nassert solution(\n'''\n4\n1 2 3 4\n1 2 3 4\n1 2 3 4\n2 2 3 4\n''') == '0\\n4'\n\nassert solution(\n'''\n7\n1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '7\\n2\\n2\\n0\\n4'\n\nassert solution(\n'''\n4\n1 2 3 4\n1 2 3 4\n1 2 3 4\n2 2 3 4\n''') == '0\\n4'"
    },
    {
        "number": 3580,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''7\n1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '7\\n2\\n2\\n0\\n4'\nassert solution('''7\n1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '7\\n2\\n2\\n0\\n4'\nassert solution('''7\n1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '7\\n2\\n2\\n0\\n4'\nassert solution('''7\n1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '7\\n2\\n2\\n0\\n4'\nassert solution('''7\n1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '7\\n2\\n2\\n0\\n4'\n"
    },
    {
        "number": 3580,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\\n') == '7\\n2\\n2\\n0\\n4'\nassert solution('1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\\n') == '7\\n2\\n2\\n0\\n4'\nassert solution('1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\\n') == '7\\n2\\n2\\n0\\n4'\nassert solution('1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\\n') == '7\\n2\\n2\\n0\\n4'\nassert solution('1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\\n') == '7\\n2\\n2\\n0\\n4'\n"
    },
    {
        "number": 3580,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3\\n1\\n2\\n1\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n"
    },
    {
        "number": 3580,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\n\"\"\"\n\nn = int(input())\na = [int(x) for x in input().split()]\nqueries = [tuple(map(int, input().split())) for _ in range(int(input()))]\n\ncount = {val: 0 for val in range(2**31)}\nfor a_i in a:\n    count[a_i] += 1\n\nmax_len = 0\nfor q_start, q_subset in queries:\n    count_subset = {val: count[val] for val in q_subset}\n    max_len = max(max_len, max(count_subset.values()))\n\nprint(max_len)"
    },
    {
        "number": 3580,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"1 2 3 1 2 1 1\") == \"7\"\n"
    },
    {
        "number": 3581,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\nassert expected == solution(stdin)\nprint(expected)\n\n\"\"\"\n\nimport unittest\nfrom math import exp\nfrom functools import reduce\nfrom operator import mul\nfrom random import random"
    },
    {
        "number": 3581,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2\") == \"32.6405451448\"\nassert solution(\"2\\n0.4 0.4\\n0.8 0.0\\n0.8 0.8\\n0.0 0.4\\n0.0 0.4\") == \"2.8285\"\nassert solution(\"2\\n0.1 0.1\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\") == \"0.002770398\"\nassert solution(\"4\\n0.5 0.3 0.3 0.5\\n0.3 0.5 0.2 0.2\\n0.3 0.1 0.1 0.1\\n0.5 0.2 0.2 0.2\\n0.1 0.1 0.1 0.1\") == \"0.984874\"\nassert solution(\"4\\n0.1 0.1 0.1 0.1\\n0.1 0.1 0.1 0.1\\n0.1 0.1 0.1 0.1\\n0.1 0.1 0.1 0.1\") == \"0.999998\"\n"
    },
    {
        "number": 3581,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.2\n''') == '32.6405451448'\n\nassert solution('''\n7\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.2\n''') == '-8.400851548'\nassert solution('''\n7\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.2\n''') == '-16.400851548'\nassert solution('''\n8\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.2\n''') == '-31.400851548'\nassert solution('''\n7\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.2\n''') == '-18.400851548'\n"
    },
    {
        "number": 3581,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.2''') == \"32.6405451448\"\nassert solution('''4\n90 90 90 90 90\n0.0 0.0 0.1 0.1\n0.1 0.1 0.1 0.1\n0.1 0.1 0.1 0.1\n0.1 0.1 0.1 0.1\n0.1 0.1 0.1 0.1''') == \"230.9722456592\"\nassert solution('''4\n90 90 90 90 90\n0.0 0.0 0.1 0.1\n0.1 0.1 0.1 0.1\n0.1 0.1 0.1 0.1\n0.1 0.1 0.1 0.1\n0.1 0.1 0.1 0.1''') == \"230.9722456592\"\nassert solution('''4\n90 90 90 90 90\n0.0 0.0 0.1 0.1\n0.1 0.1 0.1 0.1\n0.1 0.1 0.1 0.1\n0.1 0.1 0.1 0.1\n0.1 0.1 0.1 0.1''') == \"230.9722456592\"\nassert solution('''4\n90 90 90 90 90\n0.0 0.0 0.1 0.1\n0.1 0.1 0.1 0.1\n0.1 0.1 0.1 0.1\n0.1 0.1 0.1 0.1\n0.1 0.1 0.1 0.1''') == \"230.9722456592\"\n"
    },
    {
        "number": 3581,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.2\n''') == '32.6405451448'\nassert solution('''\n10\n3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3"
    },
    {
        "number": 3581,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0.0\") == \"1.0\"\nassert solution(\"0.45\") == \"0.75\"\nassert solution(\"0.45 0.1\") == \"0.25\"\nassert solution(\"0.3 0.3 0.3 0.3 0.1\") == \"0.1\"\nassert solution(\"0.3 0.3 0.3 0.3 0.1\") == \"0.1\"\n"
    },
    {
        "number": 3581,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2\"\n) == \"32.6405451448\"\nassert solution(\n    \"4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2\"\n) == \"32.6405451448\"\n"
    },
    {
        "number": 3581,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '32.6405451448'\n'''"
    },
    {
        "number": 3581,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.2\n''') == '32.6405451448'\nassert solution('''\n3\n50 50 50\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n''') == '0.00'\nassert solution('''\n5\n50 50 50 50 50\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n''') == '0.00013'\nassert solution('''\n7\n10 10 10 10 10 10 10\n0.0 0.0 0.0 0.0 0.0\n0.0 0.0 0.0 0.0 0.0\n0.0 0.0 0.0 0.0 0.0\n0.0 0.0 0.0 0.0 0.0\n0.0 0.0 0.0 0.0 0.0\n0.0 0.0 0.0 0.0 0.0\n0.0 0.0 0.0 0.0 0.0\n0.0 0.0 0.0 0.0 0.0\n0.0 0.0 0.0 0.0 0.0\n''') == '0.000001'\nassert solution('''\n10\n3 4 5 3 2 3 4 5 3\n0.0 0.0 0.0 0.0 0.0\n0.0 0.0 0.0 0.0 0.0\n0.0 0.0 0.0 0.0 0.0\n0.0 0.0 0.0 0.0 0.0\n0.0 0.0 0.0 0.0 0.0\n0.0 0.0 0.0 0.0 0.0\n0.0 0.0 0.0 0.0 0.0\n0.0 0.0 0.0 0.0 0.0\n0.0 0.0 0.0 0.0 0.0\n0.0 0.0 0.0 0.0 0.0\n''') == '0.00000'\n"
    },
    {
        "number": 3581,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output\n"
    },
    {
        "number": 3582,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 4 3\\n\") == \"2 3 4 1\"\n\nassert solution(\"4\\n2 1 4 3\\n\") == \"2 3 4 1\"\n\nassert solution(\"3\\n1 3 4\\n4 1 3 2\\n\") == \"1 2 4 3\"\n\nassert solution(\"2\\n2 3 4\\n4 2 3 1\\n\") == \"2 4 3 1\"\n\"\"\"\nimport sys"
    },
    {
        "number": 3582,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n2\\n1 4 3\\n') == '2 3 4 1'\nassert solution('2\\n1\\n1 4 3\\n') == '1 4 3 1'\nassert solution('2\\n2\\n1 4 3\\n') == '2 3 1 4'\nassert solution('1\\n1\\n1 4 3\\n') == '1 4 3 1'\nassert solution('1\\n2\\n2 4 3\\n') == '1 2 3 2'\n"
    },
    {
        "number": 3582,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n4\n2 1 4 3\n''') == '2 3 4 1'\n\nassert solution(\n'''\n4\n1 3 4 2\n''') == '1 2 3 4'\n\nassert solution(\n'''\n5\n4 2 5 1 3\n''') == '1 3 4 2 5'\n\nassert solution(\n'''\n6\n4 5 6 2 1 3 7\n''') == '4 1 3 2 5 6 7'\n"
    },
    {
        "number": 3582,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1\n2\n4\n3''') == '2 3 4 1'\nassert solution('''1\n3\n1\n2\n3''') == '3 2 1 3'\nassert solution('''1\n1\n1\n1\n1''') == '1 1 1 1'\nassert solution('''2\n4\n4\n4\n5\n5\n3\n3\n3\n3\n3\n3''') == '3 3 3 3 3'\nassert solution('''2\n5\n5\n5\n6\n6\n4\n4\n4\n4\n5\n''') == '4 4 4 4 4'\n"
    },
    {
        "number": 3582,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n'''\n'''\n-----SOLUTION-----\n"
    },
    {
        "number": 3582,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8\\n1 2 1 3 4 1 4 2 1 4 2 4 2 1') == '2 3 4 1'\nassert solution('8\\n3 2 3 1 4 2 4 2 1 3 4 1 4 1 2') == '3 1 4 2 2 3'\nassert solution('8\\n5 1 5 2 5 4 2 1 5 4 2 1 5 2') == '1 5 2 5 4 3 1'\nassert solution('8\\n6 1 5 2 5 4 2 1 5 4 2 1 5 2') == '1 5 2 5 4 3 1'\nassert solution('8\\n3 2 3 1 4 2 4 2 1 3 4 1 4 2') == '3 1 4 2 2 3'\n"
    },
    {
        "number": 3582,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\n2 1 4 3''') == '2 3 4 1'\nassert solution('''1\n1''') == '1'\nassert solution('''2\n1 3''') == '1 3'\nassert solution('''1\n1''') == '1'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '9 8 7 6 5 4 3 2 1'\n"
    },
    {
        "number": 3582,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nfrom sys import stdin, stdout\nn = int(stdin.readline().strip())\n\nA = [int(x) for x in stdin.readline().strip().split()]\n\nB = A[:]\n\ncount = {}\nfor i in range(n):\n    if A[i] not in count:\n        count[A[i]] = 0\n    count[A[i]] += 1\n\nfor i in range(n):\n    B[i] = count[B[i]]\n\nstdout.write(' '.join(str(x) for x in B))\n"
    },
    {
        "number": 3582,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n2 1 4 3''') == '2 3 4 1'\nassert solution('''2\n1 2''') == '2 1'\nassert solution('''2\n1 2''') == '2 1'\nassert solution('''3\n1 2 3''') == '2 1 3'\nassert solution('''1\n1''') == '1'\n"
    },
    {
        "number": 3582,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n2 1 4 3''') == '2 3 4 1'\nassert solution('''4\n2 1 4 3''') == '2 3 4 1'\nassert solution('''2\n1 2''') == '2 1'\nassert solution('''2\n2 1''') == '1 2'\nassert solution('''5\n2 3 5 1 4\n1 2 1''') == '3 2 4 1'\n"
    },
    {
        "number": 3583,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2\n1 3\n2 4\n3 3\n3 2\n2 1''') == '7.656854249492381'\nassert solution('''3\n1 2\n1 3\n2 4''') == '6.79382884374312'\nassert solution('''10\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2''') == '1.4142145914904313'\nassert solution('''6\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2''') == '6.79382884374312'\nassert solution('''8\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2''') == '1.4142145914904313'\n"
    },
    {
        "number": 3583,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n6\n1 2\n1 3\n2 4\n3 3\n3 2\n2 1\n\"\"\") == \"\"\"\n7.656854249492381\n7.656854249492381\n7.656854249492381\n7.656854249492381\n7.656854249492381\n7.656854249492381\n\"\"\"\n\nassert solution(\"\"\"\n2\n1 1\n2\n\"\"\") == \"\"\"\n2\n\"\"\"\n\nassert solution(\"\"\"\n3\n1 1\n2\n1 2\n3\n\"\"\") == \"\"\"\n3\n3\n\"\"\"\n\nassert solution(\"\"\"\n5\n1 1\n1 2\n2 3\n3 4\n4 5\n\"\"\") == \"\"\"\n5\n5\n\"\"\"\n\nassert solution(\"\"\"\n6\n1 1\n1 2\n2 3\n3 4\n4 5\n5 6\n\"\"\") == \"\"\"\n7\n7\n7\n7\n7\n7\n\"\"\""
    },
    {
        "number": 3583,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6''') == '7.656854249492381'\nassert solution('''1 2\n1 3\n2 4\n3 3\n3 2\n2 1''') == '7.656854249492381'\nassert solution('''3\n1 2\n1 3\n2 4''') == '7.656854249492381'\nassert solution('''3\n1 2\n2 3\n2 4''') == '7.656854249492381'\nassert solution('''3\n1 2\n1 4\n2 3''') == '7.656854249492381'\n"
    },
    {
        "number": 3583,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n6\n1 2\n1 3\n2 4\n3 3\n3 2\n2 1\n''') == '''\n7.656854249492381\n7.656854249492381\n7.656854249492381\n7.656854249492381\n7.656854249492381\n7.656854249492381\n'''\n\nassert solution(\n'''\n5\n1 3\n2 4\n3 3\n4 4\n5 5\n''') == '''\n8.0\n8.0\n8.0\n8.0\n8.0\n'''\n\nassert solution(\n'''\n4\n5 1\n3 3\n1 3\n3 2\n3 3\n''') == '''\n4.0\n4.0\n4.0\n4.0\n4.0\n'''\n\nassert solution(\n'''\n5\n3 3\n1 3\n2 4\n3 3\n3 2\n2 1\n''') == '''\n6.0\n6.0\n6.0\n6.0\n6.0\n'''\n\nassert solution(\n'''\n6\n3 1\n4 3\n5 2\n2 3\n1 2\n3 4\n''') == '''\n7.656854249492381\n7.656854249492381\n7.656854249492381\n7.656854249492381\n7.656854249492381\n7.656854249492381\n'''"
    },
    {
        "number": 3583,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6\n1 2\n1 3\n2 4\n3 3\n3 2\n2 1''') == '7.656854249492381'\nassert solution('''6\n2 1\n2 2\n3 3\n4 4\n5 5\n1 1''') == '7.656854249492381'\nassert solution('''10\n9 9\n9 7\n9 3\n9 1\n8 8\n7 7\n7 5\n7 3\n7 1\n6 6\n5 5\n5 4\n5 3\n5 1\n4 4\n3 3\n3 2\n3 1\n2 2\n1 1\n1 2\n''') == '18.94117732116938'\nassert solution('''6\n9 9\n9 7\n9 3\n9 1\n8 8\n7 7\n7 5\n7 3\n7 1\n6 6\n5 5\n5 4\n5 3\n5 1\n4 4\n3 3\n3 2\n3 1\n2 2\n1 1\n1 2\n''') == '18.94117732116938'\nassert solution('''8\n6 6\n6 5\n5 4\n4 3\n3 2\n2 1\n1 1\n1 2\n2 2\n3 3\n4 4\n5 5\n6 6\n''') == '18.94117732116938'\n"
    },
    {
        "number": 3583,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n2\\n3\\n4\\n5\\n6') == '7.656854249492381'\nassert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8') == '7.656854249492381'\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == '7.656854249492381'\nassert solution('2\\n2\\n4\\n5\\n6') == '8.61556243093908'\nassert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8') == '8.61556243093908'\n"
    },
    {
        "number": 3583,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6\n1 2\n1 3\n2 4\n3 3\n3 2\n2 1''') == '7.656854249492381'\nassert solution('''3\n3 2\n2 1\n1 4''') == '5.0025245901639344'\nassert solution('''4\n3 2\n1 4\n2 3\n4 4''') == '4.001639344262295'\nassert solution('''6\n1 2\n1 3\n2 4\n3 4\n2 3\n2 2''') == '7.0049534593295969'\nassert solution('''5\n3 2\n3 1\n1 2\n3 3\n1 2''') == '7.0049534593295969'\n"
    },
    {
        "number": 3583,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6\n1 2\n1 3\n2 4\n3 3\n3 2\n2 1''') == '7.656854249492381'\nassert solution('''6\n1 5\n2 4\n3 3\n4 2\n1 5''') == '7.656854249492381'\nassert solution('''6\n4 2\n3 2\n2 3\n4 4\n1 5\n4 2''') == '7.656854249492381'\nassert solution('''6\n2 1\n2 3\n3 1\n2 3\n4 2\n1 5''') == '7.656854249492381'\nassert solution('''6\n1 2\n1 3\n2 3\n2 4\n2 1''') == '7.656854249492381'\n"
    },
    {
        "number": 3583,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''5\n1 2\n1 3\n2 4\n3 3\n3 2\n2 1'''\n) == '7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381'\nassert solution(\n'''6\n1 2\n1 3\n2 4\n3 3\n3 2\n2 1'''\n) == '8.15244322621837'\nassert solution(\n'''8\n1 2\n1 3\n2 4\n3 3\n3 2\n2 1\n4 1\n5 1'''\n) == '12.23479009590589'\nassert solution(\n'''10\n1 2\n1 3\n2 4\n3 3\n3 2\n2 1\n4 1\n5 1\n6 1\n7 1'''\n) == '16.02650049604288'\nassert solution(\n'''10\n1 2\n1 3\n2 4\n3 3\n3 2\n2 1\n4 1\n5 1\n6 1\n7 1'''\n) == '16.02650049604288'\n"
    },
    {
        "number": 3583,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''6\n1 2\n1 3\n2 4\n3 3\n3 2\n2 1''') == '7.656854249492381'\nassert solution(\n'''4\n1 0\n1 1\n1 1\n1 1''') == '3'\nassert solution(\n'''5\n1 0\n1 1\n1 1\n1 2\n1 3''') == '4'\nassert solution(\n'''3\n1 0\n1 1\n1 1''') == '2'\nassert solution(\n'''2\n1 0\n1 1''') == '1'\n"
    },
    {
        "number": 3584,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n\") == \"2\"\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n\") == \"2\"\nassert solution(\"1 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n\") == \"1\"\nassert solution(\"1 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n\") == \"2\"\nassert solution(\"1 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n\") == \"2\"\n"
    },
    {
        "number": 3584,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n''') == '2'\nassert solution('''6 6 4\n1 1\n1 4\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n''') == '3'\n'''\n\n'''"
    },
    {
        "number": 3584,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\"\n\"\"\"\n"
    },
    {
        "number": 3584,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input_string) == expected_output\ninput_string = open(\"test_input.txt\", \"r\").read()\nexpected_output = open(\"test_output.txt\", \"r\").read()\nprint(solution(input_string))\n'''\n"
    },
    {
        "number": 3584,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n\") == 2\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n\") == 2\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n\") == 2\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n\") == 2\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n\") == 2\n"
    },
    {
        "number": 3584,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0'''\n) == '2'\nassert solution(\n'''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0'''\n) == '2'\nassert solution(\n'''5 5 5\n1 1\n1 2\n2 3\n2 4\n2 5\n1 3\n3 4\n3 5\n4 0\n4 2\n0 0\n1 2\n1 0\n2 2\n1 2\n2 4\n1 4\n2 3\n3 0\n3 2\n'''\n) == '0'\n\nassert solution(\n'''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0'''\n) == '2'\n\nassert solution(\n'''1 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0'''\n) == '0'"
    },
    {
        "number": 3584,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(dedent(\"\"\"\n    5 5 3\n    1 1\n    2 2\n    1 3\n    0 0\n    0 3\n    1 4\n    3 3\n    3 0\n\"\"\")) == 2\n\"\"\"\n"
    },
    {
        "number": 3584,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == str(2)"
    },
    {
        "number": 3584,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == \"2\"\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == \"2\"\nassert solution(\"1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n1 16\\n1 17\\n1 18\\n1 19\\n1 20\\n1 21\\n1 22\\n1 23\\n1 24\\n1 25\\n1 26\\n1 27\\n1 28\\n1 29\\n1 30\\n1 31\\n1 32\\n1 33\\n1 34\\n1 35\\n1 36\\n1 37\\n1 38\\n1 39\\n1 40\\n1 41\\n1 42\\n1 43\\n1 44\\n1 45\\n1 46\\n1 47\\n1 48\\n1 49\\n1 50\\n1 51\\n1 52\\n1 53\\n1 54\\n1 55\\n1 56\\n1 57\\n1 58\\n1 59\\n1 60\\n1 61\\n1 62\\n1 63\\n1 64\\n1 65\\n1 66\\n1 67\\n1 68\\n1 69\\n1 70\\n1 71\\n1 72\\n1 73\\n1 74\\n1 75\\n1 76\\n1 77\\n1 78\\n1 79\\n1 80\\n1 81\\n1 82\\n1 83\\n1 84\\n1 85\\n1 86\\n1 87\\n1 88\\n1 89\\n1 90\\n1 91\\n1 92\\n1 93\\n1 94\\n1 95\\n1 96\\n1 97\\n1 98\\n1 99\\n1 100\\n1 101\\n1 102\\n1 103\\n1 104\\n1 105\\n1 106\\n1 107\\n1 108\\n1 109\\n1 110\\n1 111\\n1 112\\n1 113\\n1 114\\n1 115\\n1 116\\n1 117\\n1 118\\n1 119\\n1 120\\n1 121\\n1 122\\n1 123\\n1 124\\n1 125\\n1 126\\n1 127\\n1 128\\n1 129\\n1 130\\n1 131\\n1 132\\n1 133\\n1 134\\n1 135\\n1 136\\n1 137\\n1 138\\n1 139\\n1 140\\n1 141\\n1 142\\n1 143\\n1 144\\n1 145\\n1 146\\n1 147\\n1 148\\n1 149\\n1 150\\n1 151\\n1 152\\n1 153\\n1 154\\n1 155\\n1 156\\n1 157\\n1 158\\n1 159\\n1 160\\n1 161\\n1 162\\n1 163\\n1 164\\n1 165\\n1 166\\n1 167\\n1 168\\n1 169\\n1 170\\n1 171\\n1 172\\n1 173\\n1 174\\n1 175\\n1 176\\n1 177\\n1 178\\n1 179\\n1 180\\n1 181\\n1 182\\n1 183\\n1 184\\n1 185\\n1 186\\n1 187\\n1 188\\n1 189\\n1 190\\n1 191\\n1 192\\n1 193\\n1 194\\n1 195\\n1 196\\n1 197\\n1 198\\n1 199\\n1 200\\n1 201\\n1 202\\n1 203\\n1 204\\n1 205\\n1 206\\n1 207\\n1 208\\n1 209\\n1 210\\n1 211\\n1 212\\n1 213\\n1 214\\n1 215\\n1 216\\n1 217\\n1 218\\n1 219\\n1 220\\n1 221\\n1 222\\n1 223\\n1 224\\n1 225\\n1 226\\n1 227\\n1 228\\n1 229\\n1 230\\n1 231\\n1 232\\n1 233\\n1 234\\n1 235\\n1 236\\n1 237\\n1 238\\n1 239\\n1 240\\n1 241\\n1 242\\n1 243\\n1 244\\n1 245\\n1 246\\n1 247\\n1 248\\n1 249\\n1 250\\n1 251\\n1 252\\n1 253\\n1 254\\n1 255\\n1 256\\n1 257\\n1 258\\n1 259\\n1 260\\n1 261\\n1 262\\n1 263\\n1 264\\n1 265\\n1 266\\n1 267\\n1 268\\n1 269\\n1 270\\n1 271\\n1 272\\n1 273\\n1 274\\n1 275\\n1 276\\n1 277\\n1 278\\n1 279\\n1 280\\n1 281\\n1 282\\n1 283\\n1 284\\n1 285\\n1 286\\n1 287\\n1 288\\n1 289\\n1 290\\n1 291\\n1 292\\n1 293\\n1 294\\n1 295\\n1 296\\n1 297\\n1 298\\n1 299\\n1 300\\n1 301\\n1 302\\n1 303\\n1 304\\n1 305\\n1 306\\n1 307\\n1 308\\n1 309\\n1 310\\n1 311\\n1 312\\n1 313\\n1 314\\n1 315\\n1 316\\n1 317\\n1 318\\n1 319\\n1 320\\n1 321\\n1 322\\n1 323\\n1 324\\n1 325\\n1 326\\n1 327\\n1 328\\n1 329\\n1 330\\n1 331\\n1 332\\n1 333\\n1 334\\n1 335\\n1 336\\n1 337\\n1 338\\n1 339\\n1 340\\n1 341\\n1 342\\n1 343\\n1 344\\n1 345\\n1 346\\n1 347\\n1 348\\n1 349\\n1 350\\n1 351\\n1 352\\n1 353"
    },
    {
        "number": 3584,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == output\n\"\"\"\n"
    },
    {
        "number": 3585,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 9\n\nSample Input:\n4 2\nSample Output:\n18\n\nassert solution(stdin) == 18\n'''"
    },
    {
        "number": 3585,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 1''') == '9'\nassert solution('''9 4''') == '4'\nassert solution('''8 4''') == '4'\nassert solution('''6 4''') == '4'\nassert solution('''9 9''') == '8'\n"
    },
    {
        "number": 3585,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 1') == '9'\nassert solution('2 2') == '1'\nassert solution('2 3') == '1'\nassert solution('2 4') == '2'\nassert solution('2 5') == '3'\n"
    },
    {
        "number": 3585,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"2 1\"\n) == \"9\"\nassert solution(\n    \"2 5\"\n) == \"8\"\nassert solution(\n    \"2 1000000\"\n) == \"0\"\nassert solution(\n    \"2 10000001\"\n) == \"0\"\nassert solution(\n    \"2 100000000\"\n) == \"0\"\n"
    },
    {
        "number": 3585,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 1''') == '9'\nassert solution('''2 1''') == '9'\nassert solution('''6 1''') == '9'\nassert solution('''5 1''') == '9'\nassert solution('''15 1''') == '9'\n"
    },
    {
        "number": 3585,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 1''') == \"9\"\nassert solution('''1 1''') == \"1\"\nassert solution('''5 2''') == \"9\"\nassert solution('''1 3''') == \"0\"\nassert solution('''15 1''') == \"9\"\n"
    },
    {
        "number": 3585,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 9\n\"\"\""
    },
    {
        "number": 3585,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"4\"\n\nSample Input:\n3 1\nSample Output:\n4\n\nassert solution(stdin) == \"1\""
    },
    {
        "number": 3585,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 1''') == '9'\nassert solution('''2 1''') == '9'\nassert solution('''8 2''') == '8'\nassert solution('''1000000000 1''') == '998244353'\nassert solution('''2 4''') == '8'\n"
    },
    {
        "number": 3585,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == str(2)\n'''\n\nfrom math import pow\nfrom functools import lru_cache\n\n@lru_cache(None)\n"
    },
    {
        "number": 3586,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n2\n3\n5\n7\n12''') == '12'\nassert solution('''1\n2\n3\n4\n5\n6''') == ''\nassert solution('''1\n2\n3\n4\n5\n7''') == '7'\nassert solution('''1\n2\n3\n4\n5\n6''') == ''\nassert solution('''1\n2\n3\n4\n6\n7''') == '7'\n"
    },
    {
        "number": 3586,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n5\n2\n3\n5\n7\n12\n''') == '12'\nassert solution('''\n5\n2\n3\n6\n10\n12\n''') == '7'\nassert solution('''\n5\n2\n3\n5\n4\n6\n10\n''') == '3'\nassert solution('''\n5\n2\n3\n5\n4\n6\n10\n11\n12\n''') == '2'\nassert solution('''\n5\n2\n3\n5\n4\n6\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n''') == '2'\n"
    },
    {
        "number": 3586,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"5\n2\n3\n5\n7\n12\"\"\") == \"12\"\nassert solution(\"\"\"4\n9\n8\n7\n5\"\"\") == \"\"\nassert solution(\"\"\"7\n-1\n2\n3\n4\n5\n6\"\"\") == \"-1\"\nassert solution(\"\"\"11\n-1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\"\"\") == \"11\"\nassert solution(\"\"\"11\n-1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\"\"\") == \"11\"\n"
    },
    {
        "number": 3586,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1\n2\n3\n5\n7\n12\n''') == '12'\nassert solution('''2\n2\n3\n5\n7\n12\n''') == '12'\nassert solution('''2\n2\n2\n5\n7\n12\n''') == '12'\nassert solution('''1\n2\n3\n5\n7\n12\n''') == '12'\nassert solution('''1\n2\n2\n3\n5\n7\n12\n''') == '12'\n"
    },
    {
        "number": 3586,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n2\n3\n5\n7\n12''') == '12'\nassert solution('''2\n3\n5\n7\n12''') == 'no solution'\nassert solution('''1\n1\n2\n3\n4\n5\n6''') == 'no solution'\nassert solution('''1\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n''') == '56'\nassert solution('''2\n1\n2\n3\n4\n5\n6''') == 'no solution'\n"
    },
    {
        "number": 3586,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"12\"\nassert solution(\"1\\n2\") == \"2\"\n\"\"\""
    },
    {
        "number": 3586,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == 12\nassert solution('2\\n4\\n5\\n7') == 7\nassert solution('2\\n3\\n5\\n7') == 12\nassert solution('4\\n2\\n3\\n5\\n7') == 7\nassert solution('4\\n2\\n3\\n5\\n7') == 12\n"
    },
    {
        "number": 3586,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\n\n\"\"\""
    },
    {
        "number": 3586,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n') == '6'\nassert solution('2\\n') == '9'\nassert solution('3\\n') == '15'\nassert solution('4\\n') == '14'\nassert solution('5\\n') == '28'\n"
    },
    {
        "number": 3586,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n2\n3\n5\n7\n12\n''') == '12'\n\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n''') == '15'\n\nassert solution('''7\n4\n3\n2\n1\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798\n799\n800\n801\n802\n803\n804\n805\n806\n807\n808\n809\n810\n811\n812\n813\n814\n815\n816\n817\n818\n819\n820\n821\n822\n823\n824\n825\n826\n827\n828\n829\n830\n831\n832\n833\n834\n835\n836\n837\n838\n839\n840\n841\n842\n"
    },
    {
        "number": 3587,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"00\") == \"\"\nassert solution(\"000\") == \"\"\nassert solution(\"0000\") == \"\"\n"
    },
    {
        "number": 3587,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n5\n00\n01\n10\n110\n111\n\"\"\"\n) == \"01\"\n\nassert solution(\n\"\"\"\n5\n11\n10\n110\n111\n\"\"\"\n) == \"11\"\n\nassert solution(\n\"\"\"\n5\n11\n10\n110\n111\n\"\"\"\n) == \"11\"\n\nassert solution(\n\"\"\"\n2\n00\n01\n\"\"\"\n) == \"00\"\n\nassert solution(\n\"\"\"\n2\n01\n10\n\"\"\"\n) == \"10\""
    },
    {
        "number": 3587,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\\\n5\n00\n01\n10\n110\n111\n''') == '11'\nassert solution('''\\\n3\n110\n111\n010\n''') == '11'\nassert solution('''\\\n2\n11\n01\n''') == '11'\nassert solution('''\\\n2\n00\n10\n''') == '00'\nassert solution('''\\\n1\n0\n''') == '0'\n"
    },
    {
        "number": 3587,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '01'\nassert solution(stdin) == '00'\nassert solution(stdin) == '01'\nassert solution(stdin) == '10'\nassert solution(stdin) == '11'\n"
    },
    {
        "number": 3587,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == None\nassert solution(\"  \") == None\nassert solution(\"Hello World\") == \"World\"\nassert solution(\"00001110\") == \"00001110\"\nassert solution(\"0000000000111011001101100000001111011010110111010000111101\") == \"011010111010000111101\"\n"
    },
    {
        "number": 3587,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n00\n01\n10\n110\n111''') == '11'\nassert solution('''4\n00\n00\n00\n00''') == '-1'\nassert solution('''7\n00\n01\n10\n110\n111\n1111\n1111\n11111''') == '1111'\nassert solution('''5\n00\n00\n00\n00\n00''') == '-1'\nassert solution('''8\n00\n00\n00\n00\n00\n00\n00\n00\n00''') == '-1'\n"
    },
    {
        "number": 3587,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n00\n01\n10\n110\n111\n''') == '11'\nassert solution('''5\n11\n00\n01\n10\n110\n111\n''') == '-1'\nassert solution('''4\n1111\n1110\n100\n''') == '11'\nassert solution('''5\n00\n01\n10\n110\n111\n''') == '00'\nassert solution('''2\n00\n01\n''') == '00'\n"
    },
    {
        "number": 3587,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n00\n01\n10\n110\n111''') == '11'\nassert solution('''5\n0001\n0011\n0101\n1010\n1011''') == '00'\nassert solution('''1\n''') == '-'\nassert solution('''2\n100\n010''') == '-'\nassert solution('''3\n011\n100\n010''') == '-'\n"
    },
    {
        "number": 3587,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n5\n00\n01\n10\n110\n111\n''') == '11'\nassert solution('''\n5\n10\n110\n111\n11\n''') == '11'\nassert solution('''\n5\n00\n01\n10\n110\n111\n''') == '11'\nassert solution('''\n5\n00\n01\n10\n110\n111\n00\n''') == '00'\nassert solution('''\n5\n11\n00\n01\n10\n110\n111\n''') == '11'\n"
    },
    {
        "number": 3587,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"5\"\n    \"00\"\n    \"01\"\n    \"10\"\n    \"110\"\n    \"111\"\n) == \"11\"\nassert solution(\n    \"5\"\n    \"00\"\n    \"01\"\n    \"10\"\n    \"110\"\n    \"111\"\n) == \"11\"\nassert solution(\n    \"5\"\n    \"00\"\n    \"01\"\n    \"10\"\n    \"110\"\n    \"111\"\n) == \"11\"\nassert solution(\n    \"5\"\n    \"00\"\n    \"01\"\n    \"10\"\n    \"110\"\n    \"111\"\n) == \"11\"\nassert solution(\n    \"5\"\n    \"00\"\n    \"01\"\n    \"10\"\n    \"110\"\n    \"111\"\n) == \"11\"\n"
    },
    {
        "number": 3588,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n2\n20 100\n100 10\n1\n150 50\n1\n150 100''') == '100 250 320'\nassert solution('''3\n2\n20 100\n100 10\n1\n150 50\n1\n150 100\n1\n20 100\n100 10''') == '100 250 320'\nassert solution('''3\n3\n20 100\n100 10\n1\n150 50\n1\n150 100\n1\n20 100\n100 10''') == '100 250 320'\nassert solution('''4\n2\n20 100\n100 10\n1\n150 50\n1\n150 100\n1\n20 100\n100 10''') == '100 250 320'\nassert solution('''3\n3\n20 100\n100 10\n1\n150 50\n1\n150 100\n1\n20 100\n100 10''') == '100 250 320'\n"
    },
    {
        "number": 3588,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"3\n2\n20 100\n100 10\n1\n150 50\n1\n150 100\n\"\"\") == \"\"\"100 250 320\n\"\"\"\n"
    },
    {
        "number": 3588,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n3\n20 100\n100 10\n1\n150 50\n1\n150 100''') == '100 250 320'\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1''') == '1'\nassert solution('''3\n2\n20 100\n100 10\n1\n150 50\n1\n150 100\n2\n150 50\n2\n150 100\n2''') == '150 250 320'\nassert solution('''4\n2\n20 100\n100 10\n1\n150 50\n1\n150 100\n2\n150 50\n2\n150 100\n3\n150 50\n2\n150 100\n2\n150 50\n3\n150 100\n2''') == '150 250 320'\nassert solution('''2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 3588,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n2\n20 100\n100 10\n1\n150 50\n1\n150 100''') == '100 250 320'\nassert solution('''3\n3\n20 100\n100 10\n1\n150 50\n1\n150 100''') == '100 250 320'\nassert solution('''3\n3\n20 100\n100 10\n1\n150 50\n1\n150 100\n1\n150 100\n1\n150 50''') == '100 250 320'\nassert solution('''3\n3\n20 100\n100 10\n1\n150 50\n1\n150 100\n1\n150 100\n1\n150 50''') == '100 250 320'\nassert solution('''3\n3\n20 100\n100 10\n1\n150 50\n1\n150 100\n1\n150 100\n1\n150 50''') == '100 250 320'\n"
    },
    {
        "number": 3588,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n2\n20 100\n100 10\n1\n150 50\n1\n150 100\n''') == '100 250 320'\nassert solution('''4\n2\n20 100\n100 10\n1\n150 50\n1\n150 100\n2\n200 50\n2\n200 100\n''') == '200 300 250 100'\nassert solution('''5\n5\n3\n10\n15\n20\n5\n10\n''') == '100 125 110 40'\nassert solution('''6\n4\n6\n10\n14\n18\n20\n10\n''') == '100 110 90 40'\nassert solution('''7\n7\n3\n10\n15\n20\n25\n30\n20\n15\n5\n5\n''') == '100 105 110 95 45'\n"
    },
    {
        "number": 3588,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n2\n20 100\n100 10\n1\n150 50\n1\n150 100''') == '100 250 320'\n'''\n"
    },
    {
        "number": 3588,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0\\n\") == \"0\\n\"\nassert solution(\"1\\n\") == \"0\\n\"\nassert solution(\"2\\n\") == \"0\\n\"\nassert solution(\"3\\n\") == \"0\\n\"\nassert solution(\"4\\n\") == \"0\\n\"\n"
    },
    {
        "number": 3588,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2\\n1\\n2\\n2\\n2\\n2\\n2\\n1\\n2\\n2\\n2\\n1\\n2\") == \"100 250 320\"\nassert solution(\"2\\n3\\n1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n1\\n2\") == \"100 250 320\"\nassert solution(\"2\\n1\\n1\\n1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n1\\n1\\n1\\n1\\n2\\n2\\n2\\n2\\n1\\n2\") == \"100 250 320\"\nassert solution(\"2\\n2\\n2\\n2\\n2\\n1\\n1\\n1\\n2\\n2\\n1\\n2\\n2\\n2\\n2\\n2\\n1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n1\\n1\\n1\\n1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n1\\n1\\n1\\n1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\"
    },
    {
        "number": 3588,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n10') == '100'\nassert solution('3\\n2\\n20 100\\n100 10\\n1 150 50\\n1 150 100\\nSample Input:') == '100 250 320'\nassert solution('3\\n2\\n20 100\\n100 10\\n1 150 50\\n1 150 100\\nSample Output:') == '100 250 320'\nassert solution('3\\n2\\n20 100\\n100 10\\n1 150 50\\n1 150 100\\n1 1 1\\n1 2 4\\n1 3 9\\n1 4 16\\n1 5 25\\n1 6 36\\n1 7 49\\n1 8 64\\n1 9 81\\n1 10 100\\n1 11 121\\n1 12 144\\n1 13 169\\n1 14 196\\n1 15 225\\n1 16 256\\n1 17 289\\n1 18 312\\n1 19 336\\n1 20 361\\n1 21 404\\n1 22 449\\n1 23 472\\n1 24 529\\n1 25 564\\n1 26 609\\n1 27 654\\n1 28 701\\n1 29 734\\n1 30 771\\n1 31 814\\n1 32 845\\n1 33 886\\n1 34 925\\n1 35 954\\n1 36 1001\\n1 37 1028\\n1 38 1064\\n1 39 1127\\n1 40 1166\\n1 41 1219\\n1 42 1252\\n1 43 1299\\n1 44 1336\\n1 45 1373\\n1 46 1418\\n1 47 1451\\n1 48 1494\\n1 49 1529\\n1 50 1563\\n1 51 1598\\n1 52 1641\\n1 53 1676\\n1 54 1720\\n1 55 1755\\n1 56 1796\\n1 57 1829\\n1 58 1864\\n1 59 1897\\n1 60 1909\\n1 61 1916\\n1 62 1923\\n1 63 1928\\n1 64 1931\\n1 65 1935\\n1 66 1937\\n1 67 1940\\n1 68 1942\\n1 69 1947\\n1 70 1947\\n1 71 1947\\n1 72 1944\\n1 73 1949\\n1 74 1950\\n1 75 1951\\n1 76 1952\\n1 77 1951\\n1 78 1944\\n1 79 1951\\n1 80 1945\\n1 81 1928\\n1 82 1929\\n1 83 1930\\n1 84 1931\\n1 85 1932\\n1 86 1933\\n1 87 1934\\n1 88 1935\\n1 89 1936\\n1 90 1937\\n1 91 1938\\n1 92 1939\\n1 93 1940\\n1 94 1941\\n1 95 1942\\n1 96 1943\\n1 97 1944\\n1 98 1945\\n1 99 1946\\n1 100 1947\\n1 101 1948\\n1 102 1949\\n1 103 1949\\n1 104 1948\\n1 105 1949\\n1 106 1948\\n1 107 1949\\n1 108 1949\\n1 109 1949\\n1 110 1949\\n1 111 1949\\n1 112 1949\\n1 113 1949\\n1 114 1949\\n1 115 1949\\n1 116 1949\\n1 117 1949\\n1 118 1949\\n1 119 1949\\n1 120 1949\\n1 121 1949\\n1 122 1949\\n1 123 1949\\n1 124 1949\\n1 125 1949\\n1 126 1949\\n1 127 1949\\n1 128 1949\\n1 129 1949\\n1 130 1949\\n1 131 1949\\n1 132 1949\\n1 133 1949\\n1 134 1949\\n1 135 1949\\n1 136 1949\\n1 137 1949\\n1 138 1949\\n1 139 1949\\n1 140 1949\\n1 141 1949\\n1 142 1949\\n1 143 1949\\n1 144 1949\\n1 145 1949\\n1 146 1949\\n1 147 1949\\n1 148 1949\\n1 149 1949\\n1 150 1949\\n1 151 1949\\n1 152 1949\\n1 153 1949\\n1 154 1949\\n1 155 1949\\n1 156 1949\\n1 157 1949\\n1 158 1949\\n1 159 1949\\n1 160 1949\\n1 161 1949\\n1 162 1949\\n1 163 1949\\n1 164 1949\\n1 165 1949\\n1 166 1949\\n1 167 1949\\n1 168 1949\\n1 169 1949\\n1 170 1949\\n1 171 1949\\n1 172 1949\\n1 173 1949\\n1 174 1949\\n1 175 1949\\n1 176 1949\\n1 177 1949\\n1 178 1949\\n1 179 1949\\n1 180 1949\\n1 181 1949\\n1 182 1949\\n1 183 1949\\n1 184 1949\\n1 185 1949\\n1 186 1949\\n1 187 1949\\n1 188 1949\\n1 189 1949\\n1 190 1949\\n1 191 1949\\n1 192 1949\\n1 193 1949\\n1 194 1949\\n1 195 1949\\n1 196 1949\\n1 197 1949\\n1 198 1949\\n1 199 1949\\n1 200 1949\\n1 201 1949\\n1 202 1949\\n1 203 1949\\n1 204 1949\\n1 205 1949\\n1 206 1949\\n1 207 1949\\n1 208 1949\\n1 209 1949\\n1 210 1949\\n1 211 1949\\n1 212 1949\\n1 213 1949\\n1 214 1949\\n1 215 1949\\n1 216 1949\\n1 217 1949\\n1 218 1949\\n1 219 1949\\n1 220 1949\\n1 221 1949\\n1 222 1949\\n1 223 1949\\n1 224 1949\\n1 225 1949\\n1 226 1949\\n1 227 1949\\n1 228 1949\\n1 229 1949\\n1 230 1949\\n1 231 1949\\n1 232 1949\\n1 233 1949\\n1 234 1949\\n1 235 1949\\n1 236 1949\\n1 237 1949\\n1 238 1949\\n1 239 1949\\n1 240 1949\\n1 241 1949\\n1 242 1949\\n1 243 1949\\n1 244 1949\\n1 245 1949\\n1 246 1949\\n1 247 1949\\n1 248 1949\\n1 249 1949\\n1 250 1949\\n1 251 1949\\n1 252 1949\\n1 253 1949\\n1 254 1949\\n1 255 1949\\n1 256 1949\\n1 257 1949\\n1 258 1949\\n1 259 1949\\n1 260 1949\\n1 261 1949\\n1 262 1949\\n1 263 1949\\n1 264 1949\\n1 265 1949\\n1 266 1949\\n1 267 1949\\n1 268 1949\\n1 269 1949\\n1 270 1949\\n1 271 1949\\n1 272 1949\\n1 273 1949\\n1 274 1949\\n1 275 1949\\n1 276 1949\\n1 277 1949\\n1 278 1949\\n1 279 1949\\n1 280 1949\\n1 281 1949\\n1 282 1949\\n1 283 1949\\n1 284 1949\\n1 285 1949\\n1 286 1949\\n1 287 1949\\n1 288 1949\\n1 289 1949\\n1 290 1949\\n1 291 1949\\n1 292 1949\\n1 293 1949\\n1 294 1949\\n1 295 1949\\n1 296 1949\\n1 297 1949\\n1 298 1949\\n1 299 1949\\n1 300"
    },
    {
        "number": 3588,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n2\n20 100\n100 10\n1\n150 50\n1\n150 100''') == '100 250 320'\nassert solution('''3\n2\n20 100\n100 10\n1\n50 50\n1\n150 100''') == '100 250 320'\nassert solution('''3\n2\n20 100\n100 10\n1\n50 50\n1\n150 50\n1\n150 100''') == '100 250 320'\nassert solution('''3\n2\n20 100\n100 10\n1\n150 50\n1\n150 100''') == '100 250 320'\nassert solution('''3\n2\n20 100\n100 10\n1\n50 50\n1\n150 50\n1\n150 100''') == '100 250 320'\n"
    },
    {
        "number": 3589,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('50 100') == '3 7 4 6 5 7 2 15 2'\nassert solution('1 0') == '0'\nassert solution('1 1') == '0'\nassert solution('1 2') == '0'\nassert solution('1 3') == '0'\n"
    },
    {
        "number": 3589,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\"\n\"\"\"\n\nfrom math import log10, ceil\nfrom typing import List, Tuple\n\nclass DigitProduct:\n    def __init__(self, l: int, r: int) -> None:\n        self.l, self.r = l, r\n        self.count = 0\n        self.n = int(log10(r - l)) + 1\n        self.zeros = [0] * self.n\n        self.pos = [0] * self.n\n        self.digits = [0] * self.n\n        self.total = 0\n        self.d = {0: '0', 1: '1', 2: '2', 3: '3', 4: '4', 5: '5', 6: '6', 7: '7', 8: '8', 9: '9'}\n        self.f = {'0': '0', '1': '1', '2': '2', '3': '3', '4': '4', '5': '5', '6': '6', '7': '7', '8': '8', '9': '9'}\n\n    def compute(self) -> None:\n        \"\"\"Compute digits of [L, R) by repeating multiplication until only one digit left.\"\"\"\n        self.total = 0\n        self.pos[0] = self.l\n        self.zeros[0] = 1\n        for i in range(1, self.n):\n            self.pos[i] = self.pos[i - 1] * 10\n            self.zeros[i] = self.zeros[i - 1] + 1\n            if self.pos[i] == 0:\n                self.zeros[i] -= 1\n\n        # print(self.zeros)\n        self.count = 0\n        for i in range(self.n):\n            self.digits[i] = self.d[self.pos[i] // self.zeros[i]]\n            if self.digits[i]!= '0':\n                self.count += 1\n\n        # print(self.digits)\n\n    def findDigits(self) -> None:\n        \"\"\"Finds the number of digits of each number in [L, R).\"\"\"\n        self.compute()\n\n        for i in range(self.l, self.r + 1):\n            digits = 0\n            x = i\n            while x:\n                digits += 1\n                x //= 10\n            if digits == self.n:\n                self.total += 1\n\n    def printDigits(self) -> None:\n        \"\"\"Prints the number of digits of each number in [L, R).\"\"\"\n        self.findDigits()\n        print(*self.digits, sep=' ')\n\n    def numDigits(self, i: int) -> int:\n        \"\"\"Returns the number of digits of the number i.\"\"\"\n        if i < 0:\n            return 0\n        return self.digits[i // self.zeros[i] - 1]\n\n    def printNumDigits(self, i: int) -> None:\n        \"\"\"Prints the number of digits of the number i.\"\"\"\n        self.numDigits(i)\n"
    },
    {
        "number": 3589,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == '3 7 4 6 5 7 2 15 2'\nassert solution('10 15') == '3 7 4 6 5 7 2 15 2'\nassert solution('10 100') == '3 7 4 6 5 7 2 15 2'\nassert solution('100 200') == '3 7 4 6 5 7 2 15 2'\nassert solution('12345') == '3 7 4 6 5 7 2 15 2'\n"
    },
    {
        "number": 3589,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('50 100') == '3 7 4 6 5 7 2 15 2'\nassert solution('1 100') == '9'\nassert solution('2 3') == '3'\nassert solution('2 3 4') == '1 2 4'\nassert solution('1 100') == '1'\n"
    },
    {
        "number": 3589,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''50 100''') == '3 7 4 6 5 7 2 15 2'\nassert solution('''1 10''') == '2'\nassert solution('''100 10000''') == '1 2 3 4 5 6 7 8 9'\nassert solution('''500 100000''') == '1 2 3 4 5 6 7 8 9 0'\nassert solution('''10000000 100000000000''') == '1 2 3 4 5 6 7 8 9 0 0 0 0'\n'''\n"
    },
    {
        "number": 3589,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('50 100') == '3 7 4 6 5 7 2 15 2'\n\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 3589,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''50 100''') == '3 7 4 6 5 7 2 15 2'\n'''\nassert solution('''1 100''') == '0'\nassert solution('''500 100''') == '0'\nassert solution('''2 100''') == '0'\nassert solution('''1 2''') == '0'\n"
    },
    {
        "number": 3589,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('50 100') == '3 7 4 6 5 7 2 15 2'\nassert solution('100 100') == '3 7 4 6 5 7 2 15 2'\nassert solution('10 10') == '3 7 4 6 5 7 2 15 2'\n\n---"
    },
    {
        "number": 3589,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('50 100') == '3 7 4 6 5 7 2 15 2'\nassert solution('1 5') == '0 0 0 0 0 0 0 0 0'\nassert solution('10 10') == '0 0 0 0 0 0 0 0 0 0'\nassert solution('2 100') == '0 0 0 0 0 0 0 0 0 0'\nassert solution('11 100') == '0 0 0 0 0 0 0 0 0 0'\n"
    },
    {
        "number": 3589,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3590,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7''') == '40.0000000000'\nassert solution('''3\n3 4\n0 1\n1 1\n1 2\n2 1''') == '4.82833'\nassert solution('''6\n3 3\n0 1\n1 1\n1 2\n2 1\n2 2\n1 3''') == '3.005426'\nassert solution('''4\n3 4\n3 5\n0 4\n1 4\n1 5''') == '4.583712'\nassert solution('''5\n5 4\n0 3\n5 4\n0 1\n3 4\n2 3\n0 2\n1 3''') == '10.00099'\n"
    },
    {
        "number": 3590,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7''') == '40.0000000000'\nassert solution('''0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7\n''') == '40.0000000000'\nassert solution('''1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n"
    },
    {
        "number": 3590,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '40.0000000000'\n"
    },
    {
        "number": 3590,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7''') == '40.0000000000'\n\nassert solution('''4\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7\n9 2\n15 4\n9 5\n5 14\n6 1\n6 2\n7 6\n7 1\n9 6\n10 4\n10 2\n10 7\n11 2\n11 6\n''') == '47.50000000'\n\nassert solution('''4\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7\n9 2\n15 4\n9 5\n5 14\n6 1\n6 2\n7 6\n7 1\n9 6\n10 4\n10 2\n10 7\n11 2\n11 6\n''') == '53.0000000000'\n\nassert solution('''3\n-1 1\n-1 1\n1 1\n3 2\n2 2\n1 1\n3 2\n2 2\n1 1\n''') == '0.8000000000000003'\n\nassert solution('''5\n-1 0\n-1 0\n2 2\n4 4\n2 2\n-1 1\n-1 1\n-1 1\n''') == '0.2000000000000002'"
    },
    {
        "number": 3590,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7''') == '40.0000000000'\nassert solution('''4\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7\n3\n1 2\n3 4\n1 2''') == '25.0000000000'\nassert solution('''4\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7\n3\n2 1\n1 2''') == '19.9999999999'\nassert solution('''4\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7\n3\n1 2\n2 1\n2 2''') == '16.0000000000'\nassert solution('''4\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7\n3\n1 2\n2 1\n2 2''') == '14.0000000000'\n"
    },
    {
        "number": 3590,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7\n''') == '40.0000000000'\nassert solution('''4\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7\n''') == '40.0000000000'\nassert solution('''0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7\n''') == '40.0000000000'\nassert solution('''0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7\n''') == '40.0000000000'\nassert solution('''2\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7\n''') == '28.125000000'\n"
    },
    {
        "number": 3590,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7''') == '40.0000000000'\nassert solution('''4\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7\n1 1\n-1 1\n2 1\n4 2\n5 2\n7 1\n8 1\n9 1\n10 1\n11 1\n12 1\n14 1\n15 1\n16 1\n17 1\n18 1\n19 1\n20 1\n21 1\n22 1\n23 1\n24 1\n25 1\n26 1\n27 1\n28 1\n29 1\n30 1\n31 1\n32 1\n33 1\n34 1\n35 1\n36 1\n37 1\n38 1\n39 1\n40 1\n41 1\n42 1\n43 1\n44 1\n45 1\n46 1\n47 1\n48 1\n49 1\n50 1\n51 1\n52 1\n53 1\n54 1\n55 1\n56 1\n57 1\n58 1\n59 1\n60 1\n61 1\n62 1\n63 1\n64 1\n65 1\n66 1\n67 1\n68 1\n69 1\n70 1\n71 1\n72 1\n73 1\n74 1\n75 1\n76 1\n77 1\n78 1\n79 1\n80 1\n81 1\n82 1\n83 1\n84 1\n85 1\n86 1\n87 1\n88 1\n89 1\n90 1\n91 1\n92 1\n93 1\n94 1\n95 1\n96 1\n97 1\n98 1\n99 1\n100 1\n101 1\n102 1\n103 1\n104 1\n105 1\n106 1\n107 1\n108 1\n109 1\n110 1\n111 1\n112 1\n113 1\n114 1\n115 1\n116 1\n117 1\n118 1\n119 1\n120 1\n121 1\n122 1\n123 1\n124 1\n125 1\n126 1\n127 1\n128 1\n129 1\n130 1\n131 1\n132 1\n133 1\n134 1\n135 1\n136 1\n137 1\n138 1\n139 1\n140 1\n141 1\n142 1\n143 1\n144 1\n145 1\n146 1\n147 1\n148 1\n149 1\n150 1\n151 1\n152 1\n153 1\n154 1\n155 1\n156 1\n157 1\n158 1\n159 1\n160 1\n161 1\n162 1\n163 1\n164 1\n165 1\n166 1\n167 1\n168 1\n169 1\n170 1\n171 1\n172 1\n173 1\n174 1\n175 1\n176 1\n177 1\n178 1\n179 1\n180 1\n181 1\n182 1\n183 1\n184 1\n185 1\n186 1\n187 1\n188 1\n189 1\n190 1\n191 1\n192 1\n193 1\n194 1\n195 1\n196 1\n197 1\n198 1\n199 1\n200 1\n201 1\n202 1\n203 1\n204 1\n205 1\n206 1\n207 1\n208 1\n209 1\n210 1\n211 1\n212 1\n213 1\n214 1\n215 1\n216 1\n217 1\n218 1\n219 1\n220 1\n221 1\n222 1\n223 1\n224 1\n225 1\n226 1\n227 1\n228 1\n229 1\n230 1\n231 1\n232 1\n233 1\n234 1\n235 1\n236 1\n237 1\n238 1\n239 1\n240 1\n241 1\n242 1\n243 1\n244 1\n245 1\n246 1\n247 1\n248 1\n249 1\n250 1\n251 1\n252 1\n253 1\n254 1\n255 1\n256 1\n257 1\n258 1\n259 1\n260 1\n261 1\n262 1\n263 1\n264 1\n265 1\n266 1\n267 1\n268 1\n269 1\n270 1\n271 1\n272 1\n273 1\n274 1\n275 1\n276 1\n277 1\n278 1\n279 1\n280 1\n281 1\n282 1\n283 1\n284 1\n285 1\n286 1\n287 1\n288 1\n289 1\n290 1\n291 1\n292 1\n293 1\n294 1\n295 1\n296 1\n297 1\n298 1\n299 1\n300 1\n301 1\n302 1\n303 1\n304 1\n305 1\n306 1\n307 1\n308 1\n309 1\n310 1\n311 1\n312 1\n313 1\n314 1\n315 1\n316 1\n317 1\n318 1\n319 1\n320 1\n321 1\n322 1\n323 1\n324 1\n325 1\n326 1\n327 1\n328 1\n329 1\n330 1\n331 1\n332 1\n333 1\n334 1\n335 1\n336 1\n337 1\n338 1\n339 1\n340 1\n341 1\n342 1\n343 1\n344 1\n345 1\n346 1\n347 1\n348 1\n349 1\n350 1\n351 1\n352 1\n353 1\n354 1\n355 1\n356 1\n357 1\n358 1\n359 1\n360 1\n361 1\n362 1\n363 1\n364 1\n365 1\n366 1\n367 1\n368 1\n369 1\n370 1\n371 1\n372 1\n373 1\n374 1\n375 1\n376 1\n377 1\n378 1\n379 1\n380 1\n381 1\n382 1\n383 1\n384 1\n385 1\n386 1\n387 1\n388 1\n389 1\n390 1\n391 1\n392 1\n393 1\n394 1\n395 1\n396 1\n397 1\n398 1\n399 1\n400 1\n401 1\n402 1\n403 1\n404 1\n405 1\n406 1\n407 1\n408 1\n409 1\n410 1\n411 1\n412 1\n413 1\n414 1\n415 1\n416 1\n417 1\n418 1\n419 1\n420 1\n421 1\n422 1\n423 1\n424 1\n425 1\n426 1\n427 1\n428 1\n429 1\n430 1\n431 1\n432 1\n433 1\n434 1\n435 1\n436 1\n437 1\n438 1\n439 1\n440 1\n441 1\n442 1\n443 1\n444 1\n445 1\n446 1\n447 1\n448 1\n449 1\n450 1\n451 1\n452 1\n453 1\n454 1\n455 1\n456 1\n457 1\n458 1\n459 1\n460 1\n461 1\n462 1\n463 1\n464 1\n465 1\n466 1\n467 1"
    },
    {
        "number": 3590,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7''') == '40.0000000000'\n\nassert solution('''2\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7''') == '18.0000000000'\n\nassert solution('''4\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n2 4\n4 6\n10 8\n11 10\n14 12\n14 14\n''') == '34.0000000000'\n\nassert solution('''8\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n2 4\n4 6\n10 8\n11 10\n14 12\n14 14\n''') == '60.0000000000'\n\nassert solution('''20\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n2 4\n4 6\n10 8\n11 10\n14 12\n14 14\n17 17\n17 17\n17 17\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n19 19\n"
    },
    {
        "number": 3590,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7''') == '40.0000000000'\n'''\n\nassert solution('''1\n2 1\n1 1''') == '0.5'\n\nassert solution('''2\n1 1\n2 1\n1 2\n2 2\n1 1''') == '1.8125'\n\nassert solution('''3\n0 0\n0 2\n1 2\n1 0\n3 0\n3 1\n3 2\n3 2\n2 0\n1 2\n1 1''') == '6.21875'\n\nassert solution('''4\n0 0\n0 2\n1 2\n1 0\n3 0\n3 1\n3 2\n3 2\n2 0\n1 2\n1 1''') == '6.21875'\n"
    },
    {
        "number": 3590,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7') == '40.0000000000'\nassert solution('3\\n0 0\\n1 1\\n2 1\\n3 1\\n1 4\\n2 3\\n3 2') == '1.5'\nassert solution('3\\n0 0\\n1 1\\n2 2\\n3 1\\n1 3\\n2 3') == '1.0000000000'\nassert solution('1\\n0 0') == '0'\nassert solution('4\\n0 0\\n0 1\\n0 2\\n0 3') == '3'\n"
    },
    {
        "number": 3591,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n3\n2 1 3''') == '1\\n1\\n'\nassert solution('''2\n7\n5 3 4 1 3 4''') == '1\\n1\\n1\\n1\\n1\\n1\\n'\nassert solution('''3\n3\n1 1 1\n2 2 2\n3 3 3''') == '1\\n1\\n'\nassert solution('''2\n7\n5 3 4 1 3 4\n5 3 4 1 3 4''') == '1\\n1\\n'\nassert solution('''3\n3\n1 1 1\n2 2 2\n3 3 3''') == '1\\n1\\n1\\n'\n"
    },
    {
        "number": 3591,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n3\\n2 1 3\") == \"1\\n1\"\nassert solution(\"2\\n3\\n2 1 3\") == \"1\\n1\"\nassert solution(\"3\\n3\\n2 1 3\") == \"1\\n1\"\nassert solution(\"4\\n3\\n2 1 3\") == \"1\\n1\"\nassert solution(\"5\\n3\\n2 1 3\") == \"1\\n1\"\n"
    },
    {
        "number": 3591,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1\n3\n2 1 3\n''') == '1\\n1'\nassert solution('''1\n4\n1 4 1 3\n''') == '1\\n3'\nassert solution('''1\n5\n1 4 1 4 1\n''') == '0\\n1'\nassert solution('''1\n10\n5 6 5 4 3 2 1\n''') == '1\\n'\nassert solution('''1\n30\n
    },
    {
        "number": 3591,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n1\n3\n2 1 3\n\"\"\") == \"\"\"\n1\n1\n\"\"\"\n\nassert solution(\n\"\"\"\n1\n5\n2 4 1 4 4\n\"\"\") == \"\"\"\n1\n1\n\"\"\"\n\nassert solution(\n\"\"\"\n1\n5\n2 4 1 4 4\n\"\"\") == \"\"\"\n1\n1\n\"\"\"\n"
    },
    {
        "number": 3591,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n3\\n1 2 3\\n') == '1\\n1'\nassert solution('2\\n3\\n1 2 3\\n2 3 1\\n') == '1\\n1'\nassert solution('3\\n3\\n1 2 3\\n2 3 1\\n3 1 2\\n') == '1\\n1'\nassert solution('4\\n3\\n1 2 3\\n2 3 1\\n3 1 2\\n2 1 3\\n') == '1\\n1\\n1'\nassert solution('5\\n3\\n1 2 3\\n2 3 1\\n3 1 2\\n2 1 3\\n2 3 1\\n3 1 2\\n') == '1\\n1\\n1\\n1'\n\"\"\"\n"
    },
    {
        "number": 3591,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1\\n2 1 3\\n\") == \"1\\n1\"\nassert solution(\"3\\n2 3\\n1 2 3\\n\") == \"2\"\nassert solution(\"3\\n1\\n1\\n\") == \"0\"\nassert solution(\"3\\n3\\n2 1 3\\n1 2 3\\n2 1 3\\n\") == \"1\"\nassert solution(\"3\\n3\\n2 1 3\\n1 2 3\\n2 1 3\\n\") == \"2\"\n"
    },
    {
        "number": 3591,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n1\n2 1 3\n\"\"\") == \"\"\"\n1\n1\n\"\"\"\nassert solution(\n\"\"\"\n2\n2 1 1\n\"\"\") == \"\"\"\n2\n1\n2\n\"\"\"\nassert solution(\n\"\"\"\n3\n2 2 2\n\"\"\") == \"\"\"\n2\n1\n\"\"\"\nassert solution(\n\"\"\"\n4\n2 2 1 1\n\"\"\") == \"\"\"\n3\n1\n3\n2\n\"\"\"\nassert solution(\n\"\"\"\n5\n2 2 2 2 1\n\"\"\") == \"\"\"\n2\n1\n2\n3\n4\n5\n\"\"\"\n"
    },
    {
        "number": 3591,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 3591,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n1\n3\n2 1 3\n''') == '1'\n\nassert solution('''\n1\n3\n2 1 3\n''') == '1'\n\nassert solution('''\n3\n4\n4 1 3 1\n''') == '2'\n\nassert solution('''\n1\n3\n2 1 3\n''') == '2'\n\nassert solution('''\n2\n2\n4 2 2\n''') == '1'"
    },
    {
        "number": 3591,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3592,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''725.85 1.71 2.38''') == '199 162'\nassert solution('''725.85 1.71 2.39''') == '200 163'\nassert solution('''725.85 1.71 2.40''') == '200 164'\nassert solution('''725.85 1.71 2.41''') == '200 165'\nassert solution('''725.85 1.71 2.42''') == '200 166'\n"
    },
    {
        "number": 3592,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\""
    },
    {
        "number": 3592,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''725.85 1.71 2.38''') == '199 162'\nassert solution('''30.1 30.1''') == 'none'\nassert solution('''30.2 30.2 30.2''') == 'none'\nassert solution('''32.6 19.6''') == 'none'\nassert solution('''32.7 19.7''') == 'none'\n"
    },
    {
        "number": 3592,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('725.85 1.71 2.38') == '199 162'\n\"\"\"\n"
    },
    {
        "number": 3592,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''725.85 1.71 2.38''') == '199 162'\n\nassert solution(\n'''957.63 0.39 23.57''') == '210 60'\n\nassert solution(\n'''957.63 0.39 23.57''') == '210 60'\n\nassert solution(\n'''79.99 0.50 0.10''') == 'none'\n\nassert solution(\n'''3100.30 4.20 0.50''') == 'none'"
    },
    {
        "number": 3592,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('725.85 1.71 2.38') == '199 162'\n\"\"\"\n"
    },
    {
        "number": 3592,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\"\n\n-----Template-------"
    },
    {
        "number": 3592,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''725.85 1.71 2.38''') == \"199 162\"\nassert solution('''1028.50 1.71 2.38''') == \"none\"\nassert solution('''1028.50 1.71 2.39''') == \"199 163\"\nassert solution('''1028.50 1.71 2.38''') == \"199 162\"\nassert solution('''1028.50 1.71 2.39''') == \"199 163\"\n"
    },
    {
        "number": 3592,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('725.85 1.71 2.38') == '199 162'\nassert solution('300.90 5.96 20.76') == 'none'\nassert solution('725.85 1.71 2.38') == '199 162'\nassert solution('300.90 5.96 20.76') == 'none'\nassert solution('725.85 1.71 2.38') == '199 162'\n"
    },
    {
        "number": 3592,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"725.85 1.71 2.38\") == \"199 162\"\n\"\"\"\n\nfrom sys import stdin"
    },
    {
        "number": 3593,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"13\""
    },
    {
        "number": 3593,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"\\t\\n\") == \"\"\nassert solution(\"1\\n\") == \"1\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"5\"\n"
    },
    {
        "number": 3593,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 3\n2 1 -1\n1 3 2\n0 2 3\n2 1 1\n3 3 0''') == '16'\n'''\n"
    },
    {
        "number": 3593,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 3\n2 1 -1\n1 3 2\n0 2 3\n2 1 1\n3 3 0''') == '16'\nassert solution('''5 3\n2 1 -1\n1 3 2\n0 2 3\n2 1 1\n3 3 0''') == '16'\nassert solution('''5 6\n3 4 2 -1\n1 1 -1 -1\n1 -1 3 2\n1 -1 -1 5\n3 3 0''') == '15'\nassert solution('''5 6\n2 -1 1\n-1 1 -1\n-1 -1 3\n-1 -1 -1\n-1 3 3''') == '15'\nassert solution('''5 6\n-1 1 -1\n-1 -1 3\n-1 -1 -1\n-1 3 3''') == '15'\n"
    },
    {
        "number": 3593,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '16'\nassert solution(stdin) == '17'\nassert solution(stdin) == '18'\nassert solution(stdin) == '19'\nassert solution(stdin) == '20'\n"
    },
    {
        "number": 3593,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 5\\n1 1 1\\n1 1 1\\n1 1 1') == '6'\nassert solution('3 5\\n1 1 2\\n1 1 1\\n1 1 1') == '12'\nassert solution('3 5\\n-1 -1 1\\n1 1 1\\n1 1 1') == '6'\nassert solution('3 5\\n-1 -1 1\\n1 1 1\\n1 1 1') == '12'\nassert solution('3 5\\n1 1 2\\n1 1 1\\n1 1 1') == '6'\n"
    },
    {
        "number": 3593,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3') == 3\nassert solution('2\\n3\\n4') == 7\nassert solution('1\\n2\\n3\\n4') == 10\nassert solution('1\\n2\\n3\\n4\\n5') == 10\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == 19\n"
    },
    {
        "number": 3593,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\\n') == '16'\nassert solution('4 4\\n2 3 2\\n1 1 3\\n0 1 4\\n2 2 4\\n3 3 0\\n') == '15'\nassert solution('4 1\\n1 2 -1\\n1 1 -1\\n1 2 -1\\n1 3 2\\n3 3 0\\n') == '1'\nassert solution('5 5\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\"
    },
    {
        "number": 3593,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 0') == '0'\nassert solution('2 0') == '2'\nassert solution('-2 0') == '-2'\nassert solution('2 2') == '4'\nassert solution('0 0 2') == '3'\n"
    },
    {
        "number": 3593,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\n-----Test-----\n\n-----Other Completes-----\n\n-----Visual-------\n\n[Image](https://media.geeksforgeeks.org/wp-content/uploads/2021-02-26-13:26:05.png)\n\n-----\n\"\"\""
    },
    {
        "number": 3594,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\\nO 1\\ne 2\\nO 2\\nO 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne 2\\ne 2\\nI 2\\ne"
    },
    {
        "number": 3594,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2') == '2 1 4'\nassert solution('4') == '2 1 4'\nassert solution('2O 4') == '2 1 4'\nassert solution('1') == '1'\nassert solution('11') == '1'\n"
    },
    {
        "number": 3594,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"2 1 4\"\nassert solution(\"2\") == \"1 2 2\"\nassert solution(\"3\") == \"1 2 1\"\nassert solution(\"4\") == \"1 2 1\"\nassert solution(\"5\") == \"1 2 1\"\n"
    },
    {
        "number": 3594,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n1\nE 1\nO 4\nE 2\n''') == '2 1 4'\n\nassert solution('''\n3\nO 3\nE 2\nO 2\nI 1\nE 1\nI 1\nO 1\nI 1\n''') == '2 1 4'\n\nassert solution('''\n2\nO 2\nE 1\nO 1\nE 1\nI 1\nO 1\nI 1\n''') == '2 1 4'\n\nassert solution('''\n2\nO 3\nE 2\nO 3\nO 3\nE 1\nO 1\nI 1\nO 1\nO 1\nI 1\n''') == '2 1 4'\n\nassert solution('''\n3\nO 3\nE 2\nO 2\nI 1\nE 1\nI 1\nO 1\nI 1\nI 1\nO 1\nI 1\n''') == '2 1 4'"
    },
    {
        "number": 3594,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\nO 4\") == \"2 1 4\"\nassert solution(\"1\\nE 4\") == \"2 1 4\"\nassert solution(\"1\\nI 4\") == \"2 1 4\"\nassert solution(\"1\\nO 1\") == \"0 0 0\"\nassert solution(\"1\\nI 1\") == \"0 0 0\"\n"
    },
    {
        "number": 3594,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1\nO 4''') == '2 1 4'\n'''\n"
    },
    {
        "number": 3594,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2 1 4\"\nassert stdin == \"\"\"1\nO 4\n1\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4\n2\nO 4\nI 1\n2\nE 2\nI 1\n2\nO 4"
    },
    {
        "number": 3594,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('O 4') == '2 1 4'\nassert solution('O 4') == '2 1 4'\nassert solution('E 2') == '0 0 2'\nassert solution('E 2') == '0 0 2'\nassert solution('I 1') == '0 0 1'\n"
    },
    {
        "number": 3594,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('O 4') == '2 1 4'\nassert solution('E 4') == '1 1 4'\nassert solution('I 4') == '1 1 4'\nassert solution('I 1') == '1'\nassert solution('O 2') == '1 2'\n"
    },
    {
        "number": 3594,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"O 4\\nE 2\\nE 1\\nO 1\\nE 4\\nE 2\\nI 1\\nE 4\\nE 2\\nI 4\\nE 4\\nE 4\\nO 4\\nE 2\\nE 1\\nE 1\") == \"2 1 4\"\nassert solution(\"O 2\\nE 2\\nE 1\\nE 1\\nO 1\\nE 4\\nE 2\\nI 1\\nE 4\\nE 2\\nI 4\\nE 4\\nE 4\\nO 4\\nE 2\\nE 1\\nE 1\") == \"1 1 4\"\n\"\"\""
    },
    {
        "number": 3595,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 8\n2 1 4 5\n5 1 12 4\n5 5 9 10\n1 6 4 10\n2 11 7 14''') == '4'\nassert solution('''1 2 2 3 4\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1''') == '4'\nassert solution('''1 2 2 3 4\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1''') == '4'\nassert solution('''1 2 2 3 4\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1''') == '4'\nassert solution('''1 2 2 3 4\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1''') == '4'\n"
    },
    {
        "number": 3595,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"4\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"2 1 2\") == \"1\"\nassert solution(\"3 1 2\") == \"1\"\n"
    },
    {
        "number": 3595,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 8\n2 1 4 5\n5 1 12 4\n5 5 9 10\n1 6 4 10\n2 11 7 14''') == '4'\n\nassert solution('''5 10\n2 1 4 5\n5 1 12 4\n5 5 9 10\n1 6 4 10\n2 11 7 14\n1 5 6 7\n1 4 2 3\n1 2 1 1\n1 1 1 1\n1 2 1 1''') == '7'\n\nassert solution('''10 10\n2 1 4 5\n5 1 12 4\n5 5 9 10\n1 6 4 10\n2 11 7 14\n1 5 6 7\n1 4 2 3\n1 2 1 1\n1 1 1 1\n1 2 1 1''') == '9'\n\nassert solution('''5 10\n2 1 4 5\n5 1 12 4\n5 5 9 10\n1 6 4 10\n2 11 7 14\n1 5 6 7\n1 4 2 3\n1 2 1 1\n1 1 1 1\n1 2 1 1''') == '7'\n\nassert solution('''5 10\n2 1 4 5\n5 1 12 4\n5 5 9 10\n1 6 4 10\n2 11 7 14\n1 5 6 7\n1 4 2 3\n1 2 1 1\n1 1 1 1\n1 2 1 1''') == '8'"
    },
    {
        "number": 3595,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3595,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '4'\n\n'''\n"
    },
    {
        "number": 3595,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 8\n2 1 4 5\n5 1 12 4\n5 5 9 10\n1 6 4 10\n2 11 7 14''') == '4'\n'''\n\nrooms = int(input().strip())\nfirst = int(input().strip())\nrooms_taken = 0\n\nfor i in range(1, rooms + 1):\n    input_data = input().split()\n    x1 = int(input_data[0])\n    y1 = int(input_data[1])\n    x2 = int(input_data[2])\n    y2 = int(input_data[3])\n    if (x1 + y1 == first or x2 + y2 == first):\n        rooms_taken += 1\n    elif (x1 < x2 and y1 < y2 and abs(x2 - x1) <= abs(y2 - y1)):\n        rooms_taken += 1\n    elif (x1 < x2 and y1 > y2 and abs(x2 - x1) <= abs(y2 - y1)):\n        rooms_taken += 1\n    elif (x1 > x2 and y1 > y2 and abs(x1 - x2) <= abs(y1 - y2)):\n        rooms_taken += 1\n    elif (x1 > x2 and y1 < y2 and abs(x1 - x2) <= abs(y2 - y1)):\n        rooms_taken += 1\n    else:\n        continue\n\nprint(rooms_taken)\n"
    },
    {
        "number": 3595,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == '4'\nassert solution('2 2\\n0 0 1 1\\n1 1 2 2\\n2 2 3 3\\n3 3 4 4\\n4 4 5 5\\n5 5 6 6') == '5'\nassert solution('3 6\\n0 0 1 1\\n1 1 2 2\\n2 2 3 3\\n3 3 4 4\\n4 4 5 5\\n5 5 6 6') == '6'\nassert solution('1 1\\n0 0 1 1\\n1 1 2 2\\n2 2 3 3\\n3 3 4 4\\n4 4 5 5\\n5 5 6 6') == '6'\nassert solution('4 2\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1') == '1'\n"
    },
    {
        "number": 3595,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('1 1 1 1') == '1'\nassert solution('2 1 1 1') == '2'\nassert solution('2 1 1 1') == '3'\nassert solution('2 1 1 1') == '5'\n"
    },
    {
        "number": 3595,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == '1'\nassert solution('1 1 1 1') == '1'\nassert solution('1 1 1 1') == '1'\nassert solution('5 5 1 1') == '4'\nassert solution('5 5 1 1') == '4'\n"
    },
    {
        "number": 3595,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '4'\n'''\n"
    },
    {
        "number": 3596,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"9.585073\"\n"
    },
    {
        "number": 3596,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    '0 0 0 0\\n0 0 0 0\\n0 0 0 0'\n) == '0.0'\nassert solution(\n    '0 0 0 0\\n0 0 0 0\\n0 0 0 0'\n) == '0.0'\nassert solution(\n    '0.1 1.2 1.3 1.4\\n1.1 1.1 1.1 1.1\\n1.2 1.3 1.4 1.5'\n) == '1.0'\nassert solution(\n    '0.1 1.2 1.3 1.4\\n1.1 1.1 1.1 1.1\\n1.2 1.3 1.4 1.5'\n) == '1.0'\nassert solution(\n    '0.1 1.2 1.3 1.4\\n1.1 1.1 1.1 1.1\\n1.2 1.3 1.4 1.5'\n) == '1.0'\n"
    },
    {
        "number": 3596,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"0 1 1 1\") == 1.0\nassert solution(\n    \"2 2 1 1\") == 1.92\nassert solution(\n    \"100000 200000 1 1 1\") == 0.5\nassert solution(\n    \"7 7 2 2\") == 0.873\nassert solution(\n    \"5 5 4 4\") == 0.5\n"
    },
    {
        "number": 3596,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''-99.99 99.99 99999.99\n99 9 999 9999\n9 99 9 99 9''') == '9.585073'\nassert solution('''-99.99 99.99 99999.99\n99 9 999 9999\n9 99 9 99 9''') == '9.585073'\nassert solution('''-99.99 99.99 99999.99\n99 9 999 9999\n9 99 9 999 9''') == '9.585073'\nassert solution('''-99.99 99.99 99999.99\n99 9 999 9999\n9 99 9 999 9''') == '9.585073'\nassert solution('''-99.99 99.99 99999.99\n99 9 999 9999\n9 99 9 999 9''') == '9.585073'\n"
    },
    {
        "number": 3596,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''-99.99 99.99 9999.99\n99 9 999 9999\n9 99 9 99 9\n''') == '9.585073'\nassert solution(\n'''0.01 1.01 1.01 1.01\n10\n1 2 3 4 5\n''') == '0.67123'\nassert solution(\n'''0.01 1.01 1.01 1.01\n100\n1 2 3 4 5\n''') == '0.67123'\n'''\n"
    },
    {
        "number": 3596,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('-99.99 99.99 99999.99\\n99 9 999 9999\\n9 99 9 99 9\\nSample Input:') == '9.585073'\n\"\"\"\n\nfrom __future__ import print_function\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n"
    },
    {
        "number": 3596,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n-99.99 99.99 9999.99\n99 9 999 9999\n9 99 9 99 9\n\"\"\") == '9.585073'\nassert solution(\n\"\"\"\n-99.99 99.99 9999.99\n99 9 999 9999\n9 99 9 99 9\n\"\"\") == '9.585073'\nassert solution(\n\"\"\"\n-99.99 99.99 9999.99\n99 9 999 9999\n9 99 9 99 9\n\"\"\") == '9.585073'\nassert solution(\n\"\"\"\n-99.99 99.99 9999.99\n99 9 999 9999\n9 99 9 99 9\n\"\"\") == '9.585073'\nassert solution(\n\"\"\"\n-99.99 99.99 9999.99\n99 9 999 9999\n9 99 9 99 9\n\"\"\") == '9.585073'\n"
    },
    {
        "number": 3596,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '9.585073'\n\"\"\"\n"
    },
    {
        "number": 3596,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    '1 1 1 1') == '1.0'\nassert solution('0 0 0 0') == '0.0'\nassert solution('1 1 1 1') == '1.0'\nassert solution('1 1 1 1') == '1.0'\nassert solution('1 1 1 1 1 1') == '1.0'\n"
    },
    {
        "number": 3596,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\nassert solution('-99.99 -99.99 9999.99') == '9.585073'\nassert solution('99 -99 9999 9999') == '9.585073'\nassert solution('999 -99 -99 9999') == '9.585073'\nassert solution('-99.99 0 0 0') == '9.585073'\n"
    },
    {
        "number": 3597,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('20 30') == '12.74 127.83'\nassert solution('1000 1000') == 'impossible'\nassert solution
    },
    {
        "number": 3597,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3597,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"20 30\\n2 10 20 2 24 18 28 10\") == \"12.74 127.83\"\nassert solution(\"30 60\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3597,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n20 30\n2 10 20 2 24 18 28 10\n''') == '12.74 127.83'\n\nassert solution(\n'''\n10 30\n1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 9 9 9 9 9 9 9 9 9 9\n''') == 'impossible'\n\nassert solution(\n'''\n5 10\n1 2 4 3 5\n''') == '12.0'\n\nassert solution(\n'''\n10 10\n1 4\n4 4\n''') == '1.0'\n\nassert solution(\n'''\n10 10\n1 1\n''') == '0.0'"
    },
    {
        "number": 3597,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('w: 1 l: 1 h: 1 x1: 3 y1: 2 x2: 4 y2: 1 h: 9 r: 1') == \"impossible\"\nassert solution('w: 5 l: 3 h: 3 x1: 3 y1: 1 x2: 4 y2: 2 x3: 4 y3: 3 h: 3 r: 2') == \"0.71 0.71\"\nassert solution('w: 3 l: 5 h: 1 x1: 2 y1: 1 x2: 3 y2: 2 x3: 2 y3: 1 h: 1 r: 3') == \"1.71 1.71\"\nassert solution('w: 3 l: 5 h: 1 x1: 2 y1: 1 x2: 3 y2: 2 x3: 2 y3: 1 h: 1 r: 1') == \"0.75 0.75\"\nassert solution('w: 3 l: 5 h: 1 x1: 2 y1: 1 x2: 3 y2: 2 x3: 2 y3: 1 h: 1 r: 0') == \"impossible\"\n"
    },
    {
        "number": 3597,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''30 30\n2 10 20 2 24 18 28 10''') == '12.74 127.83'\nassert solution('''20 30\n2 10 20 2 24 18 28 10''') == 'impossible'\nassert solution('''40 40\n2 10 20 2 24 18 28 10''') == 'impossible'\nassert solution('''40 50\n2 10 20 2 24 18 28 10''') == 'impossible'\nassert solution('''30 30\n3 10 30 1 19 19 1 17 19''') == '18.00 30.00'\n"
    },
    {
        "number": 3597,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 0\\n2 10 20 2 24 18 28 10') == '12.74 127.83'\nassert solution('10 10\\n2 10 20 2 24 18 28 10') == 'impossible'\nassert solution('10 10\\n2 10 18 28 10') == 'impossible'\nassert solution('10 10\\n2 10 18 28 10') == 'impossible'\nassert solution('5 5\\n1 1 1 1 1 1 1 1') == 'impossible'\n"
    },
    {
        "number": 3597,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('20 30') == '12.74 127.83'\n\n--- 5 min ---"
    },
    {
        "number": 3597,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('20 30\\n2 10 20 2 24 18 28 10\\n') == '12.74 127.83'\nassert solution('5 5\\n0 1 3 0 3 1\\n') == 'impossible'\nassert solution('20 30\\n2 10 20 2 24 18 28 10\\n') == '12.74 127.83'\nassert solution('20 30\\n2 10 20 2 24 18 28 10\\n') == '12.74 127.83'\nassert solution('20 30\\n2 10 20 2 24 18 28 10\\n') == '12.74 127.83'\n"
    },
    {
        "number": 3597,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('20 30\\n2 10 20 2 24 18 28 10') == '12.74 127.83'\nassert solution('20 30\\n2 10 20 2 24 18 28 10\\n2 11 11 22 2 21 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22"
    },
    {
        "number": 3598,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n2\n110\n6\n''') == '0116'\nassert solution('''\n1\n111\n1\n''') == '011111'\nassert solution('''\n1000\n001\n000\n''') == '01010000'\nassert solution('''\n3\n100\n010\n101\n''') == '01010101'\nassert solution('''\n4\n100\n010\n101\n011\n''') == '0101010101'\n"
    },
    {
        "number": 3598,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n110\\n6\\n') == '0116'\nassert solution('2\\n110\\n0\\n') == '0'\nassert solution('3\\n111\\n9\\n11') == '999'\nassert solution('3\\n101\\n11\\n1') == '1'\nassert solution('3\\n111\\n111\\n11') == '1111'\n"
    },
    {
        "number": 3598,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n110\\n6') == '0116'\nassert solution('5\\n2111\\n8\\n4\\n9\\n111\\n11\\n2\\n') == '0111111111'\nassert solution('2\\n7\\n10\\n4\\n11\\n9\\n13\\n12\\n10') == '010111101111'\nassert solution('3\\n1011\\n101\\n8') == '101'\nassert solution('10\\n11111\\n1101\\n110\\n1001\\n1000\\n101\\n1111\\n1011\\n1010') == '101010101111011010110101'\n"
    },
    {
        "number": 3598,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n2\n110\n6\n''') == '0116'\n\nassert solution('''\n2\n110\n6\n01\n''') == '0116'\n\nassert solution('''\n5\n100\n101\n010\n001\n101\n110\n''') == '010111'\n\nassert solution('''\n5\n101\n011\n010\n101\n110\n''') == '1010111'\n\nassert solution('''\n5\n111\n110\n001\n011\n010\n101\n100\n''') == '11101101'"
    },
    {
        "number": 3598,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''110\n6\n''') == '0116'\nassert solution('''5\n3\n5\n2\n9\n1\n''') == '0301'\nassert solution('''7\n11\n1\n''') == '1211'\nassert solution('''10\n2\n11\n9\n''') == '1412'\nassert solution('''30\n25\n27\n22\n''') == '2315'\n"
    },
    {
        "number": 3598,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''110\n6\n''') == '0116'\nassert solution('''10\n9\n8\n7\n6\n5\n4\n3\n2\n1\n''') == '01'\nassert solution('''10\n3\n1\n8\n2\n7\n6\n5\n4\n3\n2\n1\n''') == '0'\nassert solution('''10\n1\n2\n7\n6\n5\n4\n3\n2\n1\n8\n''') == '0'\nassert solution('''10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '0'\n'''\n"
    },
    {
        "number": 3598,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n4\n110\n6\n110\n2\n''') == '0116'\nassert solution('''\n5\n110\n6\n110\n2\n''') == '0116'\nassert solution('''\n10\n110\n6\n110\n2\n''') == '0116'\nassert solution('''\n3\n110\n6\n110\n2\n''') == '0116'\nassert solution('''\n1\n110\n6\n110\n2\n''') == '0116'\n"
    },
    {
        "number": 3598,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n110\") == \"0116\"\nassert solution(\"2\\n110\") == \"0916\"\nassert solution(\"2\\n879\") == \"8796\"\nassert solution(\"2\\n999\") == \"9998\"\nassert solution(\"2\\n999\") == \"9999\"\n"
    },
    {
        "number": 3598,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n"
    },
    {
        "number": 3598,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''110\n6''') == '0116'\n\nassert solution('''9\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n09\n"
    },
    {
        "number": 3599,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8 3\n4 4 4''') == \"0 2 4\"\nassert solution('''10 10\n2 2 4\n5 4\n7 4\n2 4\n5 4''') == \"1 2 4 3\"\nassert solution('''20 10\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n5 5 5 5 5\n2 3 3 3 3\n"
    },
    {
        "number": 3599,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 3599,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 3599,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''8 3\n4 4 4''') == '0 2 4'\nassert solution('''8 3\n4 4 4\n3 3 3''') == '0 0 2'\nassert solution('''8 3\n4 4 4\n3 3 3''') == '0 0 0'\nassert solution('''8 3\n4 4 4\n6 6 6''') == '0 2 4'\nassert solution('''8 3\n4 4 4\n3 3 3 3''') == '0 0 0'\n"
    },
    {
        "number": 3599,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == output\n\"\"\""
    },
    {
        "number": 3599,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3599,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"8 3\\n4 4 4\"\n) == \"0 2 4\"\n\nassert solution(\n    \"8 4\\n4 4 4 4\"\n) == \"0 2 4\"\n\nassert solution(\n    \"8 1\\n1\"\n) == \"1\"\n\nassert solution(\n    \"8 2\\n2\"\n) == \"0\"\n\nassert solution(\n    \"8 3\\n3\"\n) == \"0\""
    },
    {
        "number": 3599,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3599,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3599,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''4 3\n4 4 4\n''') == '0 2 4'\nassert solution(\n'''8 3\n6 7 8\n''') == '0 2 4'\nassert solution(\n'''8 3\n4 4 4\n''') == '0 2 4'\nassert solution(\n'''8 3\n4 4 4\n''') == '0 2 4'\nassert solution(\n'''9 3\n8 4 7\n''') == '0 2 4'\n"
    }
]