[
    {
        "number": 3000,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == '5'\nassert solution('(2)(3)') == '5'\nassert solution('(12)(3)') == '36'\nassert solution('(2)((3))') == '5'\nassert solution('(2)((3))') == '5'\n"
    },
    {
        "number": 3000,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\n2 3\n''') == '5'\n\nassert solution('''8\n( 2 ( 2 1 ) ) 3\n''') == '9'\n\nassert solution('''4\n( 12 3 )\n''') == '36'\n\nassert solution('''6\n( ( 2 3 ) )\n''') == '5'\n\nassert solution('''6\n( ( 2 ( 3 ) ) )\n''') == '5'\n"
    },
    {
        "number": 3000,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('2') == 2\nassert solution('(12 3 )') == 36\nassert solution('( 2 ( 2 1 ) ) 3') == 5\nassert solution('( ( 2 3 ) ) 3') == 5\n"
    },
    {
        "number": 3000,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2') == 2\nassert solution('2 3') == 5\nassert solution('8') == 36\nassert solution('( 2 ( 2 1 ) ) 3') == 5\nassert solution('( 12 3 )') == 36\n"
    },
    {
        "number": 3000,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2') == '5'\nassert solution('3') == '6'\nassert solution('2 3') == '5'\nassert solution('( 2 3 )') == '5'\nassert solution('( 2 ) ( 3 )') == '5'\n"
    },
    {
        "number": 3000,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"5\"\nassert solution(\"2 3\") == \"5\"\nassert solution(\"( 2 3 )\") == \"5\"\nassert solution(\"( 2 ( 3 ) )\") == \"5\"\nassert solution(\"( ( 2 ( 3 ) ) )\") == \"5\"\n"
    },
    {
        "number": 3000,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == solution(stdout) # Check against stdin/stdout"
    },
    {
        "number": 3000,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3000,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n2 3\\n') == '5'\nassert solution('8\\n( 2 ( 2 1 ) ) 3\\n') == '9'\nassert solution('4\\n( 12 3 )\\n') == '36'\nassert solution('6\\n( 2 ) ( 3 )\\n') == '5'\nassert solution('6\\n( ( 2 3 ) )\\n') == '5'\n"
    },
    {
        "number": 3000,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2') == '5'\nassert solution('2 3') == '5'\nassert solution('( 2 ( 2 1 ) ) 3') == '9'\nassert solution('( 12 3 )') == '36'\nassert solution('( ( 2 3 ) )') == '5'\n"
    },
    {
        "number": 3001,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('009990001') == '3'\nassert solution('29998') == '5'\nassert solution('610') == '4'\nassert solution('981') == '2'\n"
    },
    {
        "number": 3001,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0123456789') == '6'\nassert solution('001000') == '4'\nassert solution('990099') == '1'\nassert solution('99009') == '5'\nassert solution('9901') == '3'\n"
    },
    {
        "number": 3001,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('29998') == '5'\nassert solution('009990001') == '3'\nassert solution('63889') == '7'\nassert solution('99900') == '4'\nassert solution('91') == '2'\n"
    },
    {
        "number": 3001,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('09') == '1'\nassert solution('999') == '4'\nassert solution('10') == '1'\nassert solution('1000') == '4'\nassert solution('99') == '2'\n"
    },
    {
        "number": 3001,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0') == '0'\nassert solution('009990001') == '3'\nassert solution('29998') == '5'\nassert solution('29998000000') == '5'\nassert solution('29999001001') == '3'\n"
    },
    {
        "number": 3001,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0') == '0'\nassert solution('009990001') == '3'\nassert solution('29998') == '5'\nassert solution('9881') == '2'\nassert solution('98812110') == '7'\n\n-----My Analysis-----\nI think my algorithm is quite intuitive:\n\nWe can start at a number of 0s, which will be the longest palindrome.\nWe want to find the smallest amount of steps to reach a palindrome.\nSince we can advance to the next digit in a single step, we want to find the largest number of steps.\nWe can find the largest number of steps using binary search.\n\nFor each number, we can add 1 to the number and check whether the result is a palindrome.\nFor each number, we can add 2 to the number and check whether the result is a palindrome.\n...\nIf we have a palindrome, we can just return the number of steps.\nOtherwise, we can increase the number of steps by one.\nIf we are trying to increase the number of steps, we will be finding the largest number of steps.\n\nThe largest number of steps is when we reach a number with a single digit.\nWe want to find the smallest number of steps to reach a palindrome.\nWe can use a similar approach as above, but increment the number by 2.\n\nSince we can advance to the next digit in a single step, we want to find the largest number of steps.\n\nSince we are trying to find the largest number of steps, we want to start with the smallest number of steps.\nWe can use a similar approach as above, but increment the number by 1.\n\nWe can find the largest number of steps using binary search.\n\nWe can find the number of steps using binary search.\nIf we are trying to find the number of steps, we will be finding the largest number of steps.\n\nEach time we check if the number is a palindrome, we add one to the number of steps.\nIf we are trying to increase the number of steps, we want to find the largest number of steps.\n\nEach time we try to find the number of steps, we increase the number by 1.\nIf we are trying to increase the number of steps, we want to find the largest number of steps.\n\nThe largest number of steps is when we reach a number with a single digit.\nWe want to find the smallest number of steps to reach a palindrome.\nWe can use a similar approach as above, but increment the number by 2.\n\nSince we are trying to find the smallest number of steps, we want to start with the smallest number of steps.\nWe can use a similar approach as above, but increment the number by 1.\n\nThe smallest number of steps is when we reach a number with a single digit.\nWe want to find the largest number of steps to reach a palindrome.\nWe can use a similar approach as above, but increment the number by 2.\n\nSince we are trying to find the largest number of steps, we want to start with the largest number of steps.\nWe can use a similar approach as above, but increment the number by 1.\n\nThe largest number of steps is when we reach a number with a single digit.\nWe want to find the smallest number of steps to reach a palindrome.\nWe can use a similar approach as above, but increment the number by 2.\n\nSince we are trying to find the smallest number of steps, we want to start with the smallest number of steps.\nWe can use a similar approach as above, but increment the number by 1.\n\nWe reach a palindrome if the number we add 1 to the current number is a palindrome.\nWe reach a palindrome if the number we add 2 to the current number is a palindrome.\n\nFor each number, we add 1 to the current number and check whether the result is a palindrome.\nFor each number, we add 2 to the current number and check whether the result is a palindrome.\n\nWe don\u2019t actually need to check if the number is a palindrome when we increment the current number by 1 or 2.\n\nWe can increment the current number by 1.\n\nWe can increment the current number by 2.\n\nEvery time we reach a palindrome, we increment the current number by 1.\n\nWhen we reach a number with a single digit, we want to find the smallest number of steps to reach a palindrome.\n\nWhen we reach a number with a single digit, we want to find the largest number of steps.\n\nWhen we reach a number with a single digit, we want to find the smallest number of steps to reach a palindrome.\n\nWhen we reach a number with a single digit, we want to find the smallest number of steps to reach a palindrome.\n\nWhen we reach a number with a single digit, we want to find the smallest number of steps to reach a palindrome.\n\nWhen we reach a number with a single digit, we want to find the smallest number of steps to reach a palindrome.\n\nWhen we reach a number with a single digit, we want to find the smallest number of steps to reach a palindrome.\n\nWhen we reach a number with a single digit, we want to find the smallest number of steps to reach a palindrome.\n\nWhen we reach a number with a single digit, we want to find the smallest number of steps to reach a palindrome.\n\nWhen we reach a number with a single digit, we want to find the smallest number of steps to reach a palindrome.\n\nWhen we reach a number with a single digit, we want to find the smallest number of steps to reach a palindrome.\n\nWhen we reach a number with a single digit, we want to find the smallest number of steps to reach a palindrome.\n\nWhen we reach a number with a single digit, we want to find the smallest number of steps to reach a palindrome.\n\nWhen we reach a number with a single digit, we want to find the smallest number of steps to reach a palindrome.\n\nWhen we reach a number with a single digit, we want to find the smallest number of steps to reach a palindrome.\n\nWhen we reach a number with a single digit, we want to find the smallest number of steps to reach a palindrome.\n\nWhen we"
    },
    {
        "number": 3001,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('0') == '0'\nassert solution('009990001') == '3'\nassert solution('29998') == '5'\nassert solution('981') == '2'\n"
    },
    {
        "number": 3001,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0') == '0'\nassert solution('2') == '2'\nassert solution('00101001') == '5'\nassert solution('10100101') == '4'\nassert solution('11101101') == '6'\n"
    },
    {
        "number": 3001,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"610\") == \"4\", \"Should be '4'\"\nassert solution(\"9\") == \"1\", \"Should be '1'\"\nassert solution(\"09\") == \"2\", \"Should be '2'\"\nassert solution(\"999\") == \"5\", \"Should be '5'\"\nassert solution(\"998\") == \"5\", \"Should be '5'\"\n"
    },
    {
        "number": 3001,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0') == '0'\nassert solution('009990001') == '3'\nassert solution('29998') == '5'\nassert solution('610') == '4'\nassert solution('981') == '2'\n"
    },
    {
        "number": 3002,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('3') == 'tampered odometer'\nassert solution('4') == 'insufficient service'\nassert solution('4\\n2017 4 0') == 'insufficient service'\nassert solution('4\\n2017 8 12000\\n2018 8 42000\\n2018 8 42001') == 'tampered odometer'\n"
    },
    {
        "number": 3002,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n3\n2017 4 0\n2017 8 12000\n2018 8 42000\n''') == \"seems legit\"\nassert solution('''\n3\n2017 4 0\n2017 8 12000\n2018 8 42001\n''') == \"insufficient service\"\nassert solution('''\n3\n2017 4 0\n2017 8 12000\n2018 8 42001\n''') == \"tampered odometer\"\nassert solution('''\n3\n2017 4 0\n2017 8 12000\n2018 8 42001\n''') == \"insufficient service\"\nassert solution('''\n3\n2017 4 0\n2017 8 12000\n2018 8 42001\n''') == \"tampered odometer\"\n"
    },
    {
        "number": 3002,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\\n') =='seems legit'\nassert solution('2\\n2017 11 0\\n2018 1 1000\\n') == 'insufficient service'\nassert solution('2\\n2013 1 0\\n2013 2 0\\n') == 'tampered odometer'"
    },
    {
        "number": 3002,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n2017 4 0\n2017 8 12000\n2018 8 42000''') == 'insufficient service'\nassert solution('''3\n2017 4 0\n2017 8 12000\n2018 8 42001''') == 'tampered odometer'\nassert solution('''2\n2017 11 0\n2018 1 1000''') =='seems legit'\nassert solution('''2\n2013 1 0\n2013 2 0''') == 'insufficient service'\nassert solution('''2\n2012 1 0\n2012 2 0''') == 'tampered odometer'\n"
    },
    {
        "number": 3002,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\\\n3\n2017 4 0\n2017 8 12000\n2018 8 42001\n''') == 'tampered odometer'\nassert solution('''\\\n2\n2017 11 0\n2018 1 1000\n''') == 'insufficient service'\nassert solution('''\\\n2\n2013 1 0\n2013 2 0\n''') =='seems legit'\nassert solution('''\\\n5\n2002 1 0\n2005 1 0\n2002 1 0\n2005 1 0\n2005 1 0\n''') == 'insufficient service'\nassert solution('''\\\n3\n2008 5 0\n2008 6 0\n2008 7 0\n2008 8 0\n2008 9 0\n2008 10 0\n2008 11 0\n2008 12 0\n2009 1 0\n2009 2 0\n2009 3 0\n2009 4 0\n2009 5 0\n2009 6 0\n2009 7 0\n2009 8 0\n2009 9 0\n2009 10 0\n2009 11 0\n2009 12 0\n2010 1 0\n2010 2 0\n2010 3 0\n2010 4 0\n2010 5 0\n2010 6 0\n2010 7 0\n2010 8 0\n2010 9 0\n2010 10 0\n2010 11 0\n2010 12 0\n2011 1 0\n2011 2 0\n2011 3 0\n2011 4 0\n2011 5 0\n2011 6 0\n2011 7 0\n2011 8 0\n2011 9 0\n2011 10 0\n2011 11 0\n2011 12 0\n2012 1 0\n2012 2 0\n2012 3 0\n2012 4 0\n2012 5 0\n2012 6 0\n2012 7 0\n2012 8 0\n2012 9 0\n2012 10 0\n2012 11 0\n2012 12 0\n2013 1 0\n2013 2 0\n2013 3 0\n2013 4 0\n2013 5 0\n2013 6 0\n2013 7 0\n2013 8 0\n2013 9 0\n2013 10 0\n2013 11 0\n2013 12 0\n2014 1 0\n2014 2 0\n2014 3 0\n2014 4 0\n2014 5 0\n2014 6 0\n2014 7 0\n2014 8 0\n2014 9 0\n2014 10 0\n2014 11 0\n2014 12 0\n2015 1 0\n2015 2 0\n2015 3 0\n2015 4 0\n2015 5 0\n2015 6 0\n2015 7 0\n2015 8 0\n2015 9 0\n2015 10 0\n2015 11 0\n2015 12 0\n2016 1 0\n2016 2 0\n2016 3 0\n2016 4 0\n2016 5 0\n2016 6 0\n2016 7 0\n2016 8 0\n2016 9 0\n2016 10 0\n2016 11 0\n2016 12 0\n2017 1 0\n2017 2 0\n2017 3 0\n2017 4 0\n2017 5 0\n2017 6 0\n2017 7 0\n2017 8 0\n2017 9 0\n2017 10 0\n2017 11 0\n2017 12 0\n2018 1 0\n2018 2 0\n2018 3 0\n2018 4 0\n2018 5 0\n2018 6 0\n2018 7 0\n2018 8 0\n2018 9 0\n2018 10 0\n2018 11 0\n2018 12 0\n2019 1 0\n2019 2 0\n2019 3 0\n2019 4 0\n2019 5 0\n2019 6 0\n2019 7 0\n2019 8 0\n2019 9 0\n2019 10 0\n2019 11 0\n2019 12 0\n2020 1 0\n2020 2 0\n2020 3 0\n2020 4 0\n2020 5 0\n2020 6 0\n2020 7 0\n2020 8 0\n2020 9 0\n2020 10 0\n2020 11 0\n2020 12 0\n2021 1 0\n2021 2 0\n2021 3 0\n2021 4 0\n2021 5 0\n2021 6 0\n2021 7 0\n2021 8 0\n2021 9 0\n2021 10 0\n2021 11 0\n2021 12 0\n''') == 'insufficient service'\n"
    },
    {
        "number": 3002,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2017 4 0\n2017 8 12000\n2018 8 42000''') == 'insufficient service'\nassert solution('''2017 4 0\n2017 8 12000\n2018 8 42001''') == 'tampered odometer'\nassert solution('''2017 11 0\n2018 1 1000''') =='seems legit'\n"
    },
    {
        "number": 3002,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == 'tampered odometer'\nassert solution('2 3 4') == 'insufficient service'\nassert solution('2 2 2') == 'insufficient service'\nassert solution('2 1 0') == 'insufficient service'\nassert solution('0 0 0') == 'insufficient service'\n"
    },
    {
        "number": 3002,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    '2017\\n2017\\n2017\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018\\n2018"
    },
    {
        "number": 3002,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2017 10 0\\n2017 10 10 000\\n2017 11 0\\n2018 1 1000\") == \"tampered odometer\"\nassert solution(\"5\\n2017 11 0\\n2017 11 10 000\\n2018 1 1000\") == \"insufficient service\"\nassert solution(\"5\\n2013 1 0\\n2013 2 0\\n2017 11 0\\n2018 1 1000\") == \"seems legit\"\nassert solution(\"5\\n2017 10 0\\n2017 11 0\\n2017 12 0\\n2017 12 12000\") == \"insufficient service\"\nassert solution(\"5\\n2017 10 0\\n2017 11 0\\n2018 1 1000\") == \"tampered odometer\"\n"
    },
    {
        "number": 3002,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2017 4 0\n2017 8 12000\n2018 8 42001''') =='seems legit'\nassert solution('''2017 4 0\n2017 8 12000\n2018 8 42001''') == 'insufficient service'\nassert solution('''2017 11 0\n2018 1 1000''') == 'tampered odometer'\nassert solution('''2017 11 0\n2018 1 1000''') =='seems legit'\nassert solution('''2017 11 0\n2018 1 1000''') == 'insufficient service'\n"
    },
    {
        "number": 3003,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n2\\n0\\n1\") == \"2\"\nassert solution(\"2\\n1\\n2\\n2\\n1\") == \"3\"\nassert solution(\"3\\n3\\n2\\n2\\n2\") == \"4\"\n"
    },
    {
        "number": 3003,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n'\n'1 2\\n'\n'0 2 3\\n'\n'0 1\\n'\n'1') == '3'\nassert solution('2\\n'\n'0 2 3\\n'\n'0 1\\n'\n'0 1\\n'\n'0 1') == '2'\nassert solution('2\\n'\n'1 2\\n'\n'0 2 3\\n'\n'0 1\\n'\n'1') == '3'\nassert solution('2\\n'\n'0 2 3\\n'\n'0 1\\n'\n'0 1\\n'\n'0 1') == '2'\nassert solution('2\\n'\n'0 1\\n'\n'1') == '2'\n"
    },
    {
        "number": 3003,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\") == 1\nassert solution(\"2\") == 2\nassert solution(\"3\") == 3\nassert solution(\"4\") == 4\nassert solution(\"5\") == 5\n"
    },
    {
        "number": 3003,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0 2\\n0 1\\n1\\n0 1\\n0 1\") == \"2\"\nassert solution(\"0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\") == \"2\"\nassert solution(\"0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\") == \"2\"\nassert solution(\"1\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\") == \"2\"\nassert solution(\"0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\") == \"2\"\n"
    },
    {
        "number": 3003,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n3') == '1'\nassert solution('2\\n4') == '2'\nassert solution('4\\n1 2 3 4\\n0 2 3 4\\n0 1 3 4\\n0 1 2 4') == '2'\nassert solution('5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n') == '4'\nassert solution('6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n') == '2'\n\n-----Test-----\nFor each test case, verify that the program is working correctly with the input file and the output file."
    },
    {
        "number": 3003,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n1 2\n0 2 3\n0 1\n1\n''') == '3'\nassert solution('''5\n2 3 4\n2 3 4\n0 1\n0 1\n0 1\n''') == '2'\nassert solution('''6\n1 3\n0 2 4\n1 5\n0 4\n1 3 5\n2 4\n''') == '2'\nassert solution('''7\n1 2 3\n0 1 3\n0 1 2\n0 1 1\n0 2 3\n0 2 1\n0 1\n''') == '4'\nassert solution('''8\n4\n0 1 3\n0 2 3\n0 1 2\n0 1 2\n0 1 3\n0 1 1\n0 2 2\n0 3 2\n''') == '2'\n"
    },
    {
        "number": 3003,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n1 2\n0 2 3\n0 1\n1''') == '3'\nassert solution('''5\n2 3 4\n2 3 4\n0 1\n0 1\n0 1\n0 1\n0 1''') == '2'\nassert solution('''6\n1 3\n0 2 4\n1 5\n0 4\n1 3 5\n2 4\nSample Output 4:\n2\n''') == '2'\nassert solution('''6\n1 3\n0 2 4\n1 5\n0 4\n1 3 5\n2 4\n1 3\nSample Output 4:\n2\n''') == '2'\nassert solution('''6\n1 3\n0 2 4\n1 5\n0 4\n1 3 5\n2 4\n1 3\n2 4\nSample Output 4:\n2\n''') == '2'\n"
    },
    {
        "number": 3003,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0 0\") == \"2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"2 3 2\") == \"2\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 3003,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n\nprint(solution(stdin))\n"
    },
    {
        "number": 3003,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n1 2\n0 2 3\n0 1\n1\n2 3 4\n0 1\n0 1\n0 1\n0 1\n0 1\n0 1\n''') == '3'\nassert solution('''6\n1 3\n0 2 4\n1 5\n0 4\n1 3 5\n2 4\n''') == '2'\nassert solution('''5\n1 2\n0 2 3\n0 1\n1\n2 3 4\n0 1\n0 1\n0 1\n0 1\n0 1\n0 1\n''') == '4'\nassert solution('''4\n1 2\n0 2 3\n0 1\n1\n2 3 4\n0 1\n0 1\n0 1\n0 1\n0 1\n0 1\n0 1\n0 1\n''') == '4'\nassert solution('''5\n1 2\n0 2 3\n0 1\n1\n2 3 4\n0 1\n0 1\n0 1\n0 1\n0 1\n0 1\n0 1\n0 1\n0 1\n0 1\n''') == '4'\n"
    },
    {
        "number": 3004,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3004,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3004,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('BLUE 1 5000\\nRED 5001 10000') == '2'\nassert solution('BLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\n') == '3'\nassert solution('BLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\n') == '3'\nassert solution('BLUE 1 4000\\nRED 4002 10000\\n') == 'IMPOSSIBLE'\nassert solution('RED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\n') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3004,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3004,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''BLUE 1 5000\nRED 5001 10000\n''') == '2'\nassert solution('''BLUE 1 6000\nRED 2000 8000\nWHITE 7000 10000\n''') == '3'\nassert solution('''BLUE 1 3000\nRED 2000 5000\nORANGE 4000 8000\nGREEN 7000 10000\n''') == 'IMPOSSIBLE'\nassert solution('''BLUE 1 4000\nRED 4002 10000\nORANGE 4000 8000\nGREEN 7000 10000\n''') == 'IMPOSSIBLE'\nassert solution('''BLUE 1 6000\nRED 2000 8000\nWHITE 7000 10000\nORANGE 4000 8000\nGREEN 7000 10000\n''') == '3'\n"
    },
    {
        "number": 3004,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''BLUE 1 5000\nRED 5001 10000\n''') == '2'\nassert solution('''BLUE 1 6000\nRED 2000 8000\nWHITE 7000 10000\n''') == '3'\nassert solution('''BLUE 1 3000\nRED 2000 5000\nORANGE 4000 8000\nGREEN 7000 10000\n''') == 'IMPOSSIBLE'\nassert solution('''BLUE 1 3000\nRED 2000 5000\nORANGE 4000 8000\nGREEN 7000 10000\nWHITE 7000 10000\n''') == 'IMPOSSIBLE'\nassert solution('''RED 4000\nBLUE 1 5000\nRED 4002 10000\nORANGE 4000 8000\nGREEN 7000 10000\n''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3004,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('BLUE 1 5000') == '2'\nassert solution('RED 5001 10000') == '2'\nassert solution('BLUE 1 6000') == '3'\nassert solution('RED 2000 8000') == '3'\nassert solution('WHITE 7000 10000') == '3'\n"
    },
    {
        "number": 3004,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") is None\nassert solution(\"\\n\") == \"\"\nassert solution(\"\\n\\n\") == \"\"\nassert solution(\"\\n\\n\\n\") == \"\"\nassert solution(\"\\n\\n\\n\\n\") == \"\"\n"
    },
    {
        "number": 3004,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0\\nBLUE 1 5000\\nRED 5001 10000\\n0\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\n0\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\n0\") == \"IMPOSSIBLE\"\nassert solution(\"0\\nBLUE 1 5000\\nRED 5001 10000\\n0\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\n0\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\n0\") == \"IMPOSSIBLE\"\nassert solution(\"0\\nBLUE 1 5000\\nRED 5001 10000\\n0\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\n0\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\n0\") == \"2\"\nassert solution(\"0\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\n0\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\n0\") == \"3\"\nassert solution(\"0\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\n0\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\n0\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3004,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n2\nBLUE 1 6000\nRED 2000 8000\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n3\nBLUE 1 6000\nRED 2000 8000\nWHITE 7000 10000\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\n\"\"\"\n4\nBLUE 1 3000\nRED 2000 5000\nORANGE 4000 8000\nGREEN 7000 10000\n\"\"\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3005,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('AAAA') == '1'\nassert solution('AAA') == '3'\nassert solution('PPPPPP') == '1'\nassert solution('PPPP') == '5'\nassert solution('BABBABABBABBA') == '6'\n"
    },
    {
        "number": 3005,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('PRATTATTATTIC') == '6'\nassert solution('GGGGGGGGG') == '1'\nassert solution('PRIME') == '5'\nassert solution('BABBABABBABBA') == '6'\n\n\"\"\""
    },
    {
        "number": 3005,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\"\nassert solution(\"GGGGGGGGG\") == \"1\"\nassert solution(\"PRIME\") == \"5\"\nassert solution(\"BABBABABBABBA\") == \"6\"\nprint(\"Successfully run solution\")\n"
    },
    {
        "number": 3005,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"XXXXXXXXXXXXXXXXX\"\"\") == \"\"\nassert solution(\"\"\"MAMMAMMAMAMAM\"\"\") == \"\"\nassert solution(\"\"\"MMMMMMMMMMMMMM\"\"\") == \"\"\nassert solution(\"\"\"SOOOOSOOSOOSO\"\"\") == \"\"\nassert solution(\"\"\"SOSOSOOSOOSOOSO\"\"\") == \"\"\n"
    },
    {
        "number": 3005,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('AA') == ''\nassert solution('AABBBB') == ''\nassert solution('ABBA') == ''\nassert solution('ABAAABBA') == ''\n"
    },
    {
        "number": 3005,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('PRATTATTATTIC') == '6'\nassert solution('GGGGGGGGG') == '1'\nassert solution('BABBABABBABBA') == '6'\nassert solution('PRIME') == '5'\nassert solution('ABAABBBAABBABABBBA') == '6'\n"
    },
    {
        "number": 3005,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('ABCABB') == 'AB'\nassert solution('BABB') == 'AB'\nassert solution('AAAAA') == 'A'\nassert solution('ABCDDDD') == 'A'\nassert solution('ABBBBBB') == 'BB'\n"
    },
    {
        "number": 3005,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('ABCD') == 1\nassert solution('ABCBC') == 2\nassert solution('ABAB') == 2\nassert solution('POPPOP') == 5\nassert solution('BABBA') == 6\n"
    },
    {
        "number": 3005,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ABC') == 1\nassert solution
    },
    {
        "number": 3005,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('PRATTATTATTIC') == '6'\nassert solution('GGGGGGGGG') == '1'\nassert solution('PRIME') == '5'\nassert solution('BABBABABBABBA') == '6'\n"
    },
    {
        "number": 3006,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''D 1\nD 2\nE\nD 3\nD 1\nE\n''') == '0'\nassert solution('''D 2\nD 1\nE\nD 1\nD 2\nE\n''') == '1'\nassert solution('''I 14 B\nI 14 A\nE\nI 14 A\nI 15 B\nE\n''') == '0'\nassert solution('''I 14 B\nI 14 A\nE\nI 14 A\nI 15 B\nE\n''') == '1'\nassert solution('''D 1\nD 2\nE\nD 3\nD 1\nE\n''') == '0'\n"
    },
    {
        "number": 3006,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('D1') == '0'\nassert solution('D2') == '1'\nassert solution('E') == '0'\nassert solution('D3') == '1'\nassert solution('D1') == '0'\n"
    },
    {
        "number": 3006,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n') == '0'\nassert solution('D 2\\nD 1\\nE\\nE\\nD 1\\nD 2\\nE\\n') == '1'\nassert solution('I 1 X\\nD 1\\nE\\nE\\nE\\nI 14 A\\nI 15 B\\nE\\n') == '0'\nassert solution('I 14 B\\nI 14 A\\nE\\nE\\nE\\nI 14 A\\nI 15 B\\nE\\n') == '0'\nassert solution('I 14 B\\nI 14 A\\nE\\nE\\nE\\nI 14 A\\nI 15 B\\nE\\n') == '0'\n"
    },
    {
        "number": 3006,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('D1 D2 E') == '0'\nassert solution('D1 D2 E\\nD3 D1 E') == '1'\nassert solution('I 1 X\\nD 1\\nE') == '0'\nassert solution('I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE') == '0'\nassert solution('I 14 B\\nI 14 A\\nE\\nE\\nI 15 B\\nE') == '1'\n\n\"\"\""
    },
    {
        "number": 3006,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '''D 1\nD 2\nE\nD 3\nD 1\nE''') == '0'\nassert solution(\n    '''D 2\nD 1\nE\nD 1\nD 2\nE''') == '1'\nassert solution(\n    '''I 1 X\nD 1\nE\nE\nE\nI 14 A\nI 14 B\nE''') == '0'\nassert solution(\n    '''I 14 B\nI 14 A\nE\nI 14 A\nI 15 B\nE\nI 14 B\nI 14 A\nE''') == '0'\nassert solution(\n    '''I 14 A\nI 15 B\nE\nI 14 A\nI 15 B\nE''') == '1'\n"
    },
    {
        "number": 3006,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''D 1\nD 2\nE''') == '0'\nassert solution('''D 2\nD 1\nE''') == '1'\nassert solution('''I 1 X\nD 1\nE''') == '0'\nassert solution('''I 14 B\nI 14 A\nE\nI 14 A\nI 15 B\nE\n''') == '0'\nassert solution('''I 14 B\nI 14 A\nE\nE\nI 14 A\nI 15 B\nE\n''') == '1'\n"
    },
    {
        "number": 3006,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('D 1\\nD 2\\nE') == '0'\nassert solution('D 2\\nD 1\\nE\\nD 1\\nD 2\\nE') == '1'\nassert solution('I 1 X\\nD 1\\nE\\nE\\nD 1\\nD 2\\nE') == '0'\nassert solution('I 14 B\\nI 14 A\\nE\\nE\\nI 14 A\\nI 15 B\\nE') == '1'\n"
    },
    {
        "number": 3006,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3006,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n') == '0'\nassert solution('D 2\\nD 1\\nE\\nE\\nD 1\\nD 2\\nE\\n') == '1'\nassert solution('I 1 X\\nD 1\\nE\\nE\\nD 1\\nD 2\\nE\\n') == '0'\nassert solution('I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n') == '0'\nassert solution('I 14 A\\nI 15 B\\nE\\nI 14 A\\nI 15 B\\nE\\n') == '1'\n"
    },
    {
        "number": 3006,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n\") == \"0\"\nassert solution(\n    \"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n\") == \"1\"\nassert solution(\n    \"I 1 X\\nD 1\\nE\\nE\\nE\\n\") == \"0\"\nassert solution(\n    \"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n\") == \"0\"\nassert solution(\n    \"I 1 X\\nD 1\\nE\\nE\\nE\\n\") == \"0\"\n"
    },
    {
        "number": 3007,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 0 1 0 0 0''') == '300'\nassert solution('''5 0 1 0 1 0''') == '1900'\nassert solution('''6 0 1 1 0 0''') == '2300'\nassert solution('''10 399 0 0 0 0''') == '399'\nprint(solution('''10 399 0 0 0 0'''))\n"
    },
    {
        "number": 3007,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 0 1 0 0 0\\n\") == \"300\"\nassert solution(\"5 0 1 0 1 0\\n\") == \"1900\"\nassert solution(\"6 0 1 1 0 0\\n\") == \"2300\"\nassert solution(\"10 399 0 0 0 0\\n\") == \"399\"\nassert solution(\"2 10 5 0 0 0\\n\") == \"10\"\n"
    },
    {
        "number": 3007,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\"\nassert solution(\"10 399 0 0 0 0\") == \"399\"\nassert solution(\"10 0 1 1 0 0\") == \"399\"\n"
    },
    {
        "number": 3007,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 0 1 0 0 0\") == \"300\"\nassert solution(\"2 0 1 0 1 0\") == \"1900\"\nassert solution(\"3 0 1 1 0 0\") == \"2300\"\nassert solution(\"4 0 1 1 0 0\") == \"399\"\nassert solution(\"5 0 1 1 0 1 0\") == \"7000\"\n"
    },
    {
        "number": 3007,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '399'\nassert solution('4 0 1 0 0 0') == '300'\nassert solution('5 0 1 0 1 0') == '1900'\nassert solution('6 0 1 1 0 0') == '2300'\nassert solution('10 399 0 0 0 0') == '399'\nprint('All tests passed')\n"
    },
    {
        "number": 3007,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 0 1 0 0 0\\n') == '300'\nassert solution('5 0 1 0 1 0\\n') == '1900'\nassert solution('6 0 1 1 0 0\\n') == '2300'\nassert solution('10 399 0 0 0 0\\n') == '399'"
    },
    {
        "number": 3007,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4 5 6') == '6'\nassert solution('1 2 3 4 5 6') == '30'\nassert solution('1 2 3 4 5 6') == '300'\nassert solution('5 4 1 3 4 0') == '26'\nassert solution('5 4 1 3 4 1') == '30'\n"
    },
    {
        "number": 3007,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 0 1 0 0 0') == '300'\nassert solution('5 0 1 0 1 0') == '1900'\nassert solution('6 0 1 1 0 0') == '2300'\nassert solution('10 399 0 0 0 0') == '399'\nprint(solution(stdin))\n"
    },
    {
        "number": 3007,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 0 1 0 0 0') == '300'\nassert solution('5 0 1 0 1 0') == '1900'\nassert solution('6 0 1 1 0 0') == '2300'\nassert solution('10 399 0 0 0 0') == '399'\n\nprint(solution(stdin))\n"
    },
    {
        "number": 3007,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"299\"\n\n\"\"\"\n\n\"\"\"\nThe problem remains that we can't plant a new tree at the beginning of the day, so we have to wait until we have the 5 fruits.\n\nFor each fruit in $[3,0]$:\n    For each new tree planted:\n        For each new tree planted:\n            If we have enough money to plant a new tree:\n                Add the price of the new tree to the Bling\n                Increase the number of fruits by one\n                Add the price of the fruit to the Bling\n                Increase the number of fruits by one\n                Increase the number of exotic fruits by one\n            Otherwise:\n                Move on to the next fruit.\n\nThe tricky part is that we can not plant a new tree at the beginning of the day. In the worst case, we can have no money, so we cannot plant a new tree, so we have to wait until we have the 5 fruits.\n\nWe can also see that the amount of money we have over time is the amount of money we can give to grow a new tree.\n\nIf we have enough money to plant a new tree, we have to add the price of the new tree to the Bling, then we increase the number of fruits and the price of the fruit. If we don't have enough money, we cannot add any more money, and we cannot grow a new tree.\n\nIf we are in the middle of the day, we can add the price of the new tree to the Bling, then we increase the number of fruits, then we add the price of the fruit. If we have enough money to invest, we can add the price of the new tree to the Bling and increase the number of fruits and the price of the fruit.\n\nIf we do not have enough money, we cannot add any more money to the Bling and cannot grow any more trees.\n\n\"\"\"\n\nimport sys\nfrom typing import List"
    },
    {
        "number": 3008,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 10\\n1 12\\n1 13\\n') == '2'\nassert solution('2 10\\n1 5\\n1 12\\n') == '2'\nassert solution('2 10\\n1 5\\n1 4\\n') == '2'\nassert solution('2 10\\n1 5\\n4 1\\n') == '2'\nassert solution('2 10\\n1 5\\n4 1\\n') == '2'\n"
    },
    {
        "number": 3008,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 10\\n1 12\\n1 13') == '2'\nassert solution('2 10\\n1 5\\n1 12\\n') == '2'\nassert solution('2 10\\n1 5\\n1 4\\n') == '2'\nassert solution('3 10\\n1 5\\n1 5\\n1 4\\n') == '2'\nassert solution('4 10\\n1 5\\n1 4\\n1 5\\n1 4\\n') == '2'\n"
    },
    {
        "number": 3008,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 10\n1 12\n1 13\n''') == '2'\n\nassert solution('''2 10\n1 5\n1 12\n''') == '2'\n\nassert solution('''2 10\n1 5\n1 4\n''') == '2'\nassert solution('''3 10\n1 4\n1 5\n1 6\n''') == '3'\nassert solution('''3 10\n1 5\n1 6\n1 2\n''') == '3'\n"
    },
    {
        "number": 3008,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 3008,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 10\n1 12\n1 13''') == \"2\"\nassert solution('''2 10\n1 5\n1 12\n''') == \"2\"\nassert solution('''2 10\n1 5\n1 4\n''') == \"2\"\nassert solution('''2 10\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n1 30\n1 31\n1 32\n1 33\n1 34\n1 35\n1 36\n1 37\n1 38\n1 39\n1 40\n1 41\n1 42\n1 43\n1 44\n1 45\n1 46\n1 47\n1 48\n1 49\n1 50\n1 51\n1 52\n1 53\n1 54\n1 55\n1 56\n1 57\n1 58\n1 59\n1 60\n1 61\n1 62\n1 63\n1 64\n1 65\n1 66\n1 67\n1 68\n1 69\n1 70\n1 71\n1 72\n1 73\n1 74\n1 75\n1 76\n1 77\n1 78\n1 79\n1 80\n1 81\n1 82\n1 83\n1 84\n1 85\n1 86\n1 87\n1 88\n1 89\n1 90\n1 91\n1 92\n1 93\n1 94\n1 95\n1 96\n1 97\n1 98\n1 99\n1 100\n1 101\n1 102\n1 103\n1 104\n1 105\n1 106\n1 107\n1 108\n1 109\n1 110\n1 111\n1 112\n1 113\n1 114\n1 115\n1 116\n1 117\n1 118\n1 119\n1 120\n1 121\n1 122\n1 123\n1 124\n1 125\n1 126\n1 127\n1 128\n1 129\n1 130\n1 131\n1 132\n1 133\n1 134\n1 135\n1 136\n1 137\n1 138\n1 139\n1 140\n1 141\n1 142\n1 143\n1 144\n1 145\n1 146\n1 147\n1 148\n1 149\n1 150\n1 151\n1 152\n1 153\n1 154\n1 155\n1 156\n1 157\n1 158\n1 159\n1 160\n1 161\n1 162\n1 163\n1 164\n1 165\n1 166\n1 167\n1 168\n1 169\n1 170\n1 171\n1 172\n1 173\n1 174\n1 175\n1 176\n1 177\n1 178\n1 179\n1 180\n1 181\n1 182\n1 183\n1 184\n1 185\n1 186\n1 187\n1 188\n1 189\n1 190\n1 191\n1 192\n1 193\n1 194\n1 195\n1 196\n1 197\n1 198\n1 199\n1 200\n1 201\n1 202\n1 203\n1 204\n1 205\n1 206\n1 207\n1 208\n1 209\n1 210\n1 211\n1 212\n1 213\n1 214\n1 215\n1 216\n1 217\n1 218\n1 219\n1 220\n1 221\n1 222\n1 223\n1 224\n1 225\n1 226\n1 227\n1 228\n1 229\n1 230\n1 231\n1 232\n1 233\n1 234\n1 235\n1 236\n1 237\n1 238\n1 239\n1 240\n1 241\n1 242\n1 243\n1 244\n1 245\n1 246\n1 247\n1 248\n1 249\n1 250\n1 251\n1 252\n1 253\n1 254\n1 255\n1 256\n1 257\n1 258\n1 259\n1 260\n1 261\n1 262\n1 263\n1 264\n1 265\n1 266\n1 267\n1 268\n1 269\n1 270\n1 271\n1 272\n1 273\n1 274\n1 275\n1 276\n1 277\n1 278\n1 279\n1 280\n1 281\n1 282\n1 283\n1 284\n1 285\n1 286\n1 287\n1 288\n1 289\n1 290\n1 291\n1 292\n1 293\n1 294\n1 295\n1 296\n1 297\n1 298\n1 299\n1 300\n1 301\n1 302\n1 303\n1 304\n1 305\n1 306\n1 307\n1 308\n1 309\n1 310\n1 311\n1 312\n1 313\n1 314\n1 315\n1 316\n1 317\n1 318\n1 319\n1 320\n1 321\n1 322\n1 323\n1 324\n1 325\n1 326\n1 327\n1 328\n1 329\n1 330\n1 331\n1 332\n1 333\n1 334\n1 335\n1 336\n1 337\n1 338\n1 339\n1 340\n1 341\n1 342\n1 343\n1 344\n1 345\n1 346\n1 347\n1 348\n1 349\n1 350\n1 351\n1 352\n1 353\n1 354\n1 355\n1 356\n1 357\n1 358\n1 359\n1 360\n1 361\n1 362\n1 363\n1 364\n1 365\n1 366\n1 367\n1 368\n1 369\n1 370\n1 371\n1 372\n1 373\n1 374\n1 375\n1 376\n1 377\n1 378\n1 379\n1 380\n1 381\n1 382\n1 383\n1 384\n1 385\n1 386\n1 387\n1 388\n1 389\n1 390\n1 391\n1 392\n1 393\n1 394\n1 395\n1 396\n1 397\n1 398\n1 399\n1 400\n1 401\n1 402\n1 403\n1 404\n1 405\n1 406\n1 407\n1 408\n1 409\n1 410\n1 411\n1 412\n1 413\n1 414\n1 415\n1 416\n1 417\n1 418\n1 419\n1 420\n1 421\n1 422\n1 423\n1 424\n1 425\n1 426\n1 427\n1 428\n1 429\n1 430\n1 431\n1 432\n1 433\n1 434\n1 435\n1 436\n1 437\n1 438\n1 439\n1 440\n1 441\n1 442\n1 443\n1 444\n1 445\n1 446\n1 447\n1 448\n1 449\n1 450\n1 451\n1 452\n1 453\n1 454\n1 455\n1 456\n1 457\n1 458\n1 459\n1 460\n1 461\n1 462\n1 463\n1 464\n1 465\n1 466\n1 467\n1 4"
    },
    {
        "number": 3008,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 10\") == \"2\"\nassert solution(\"2 10\") == \"2\"\nassert solution(\"1 10\") == \"2\"\nassert solution(\"2 10\") == \"2\"\nassert solution(\"1 10\") == \"2\"\n"
    },
    {
        "number": 3008,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0\\n0') == '0'\nassert solution('1\\n1') == '1'\nassert solution('2\\n1') == '0'\nassert solution('1\\n2') == '1'\nassert solution('1\\n2') == '1'\n"
    },
    {
        "number": 3008,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 10\n1 12\n1 13''') == '2'\nassert solution('''2 10\n1 5\n1 12\nSample Output 2:\n2\n\nSample Input 3:\n2 10\n1 5\n1 4\nSample Output 3:\n2\n\nSample Input 4:\n2 10\n1 5\n4 1\nSample Output 4:\n2\n''') == '2'\n"
    },
    {
        "number": 3008,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"2 10\n1 12\n1 13\"\"\"\n) == \"2\"\nassert solution(\n\"\"\"2 10\n1 5\n1 12\n\"\"\"\n) == \"2\"\nassert solution(\n\"\"\"2 10\n1 5\n1 4\n\"\"\"\n) == \"2\"\nassert solution(\n\"\"\"2 10\n1 5\n4 1\n\"\"\"\n) == \"2\"\nassert solution(\n\"\"\"2 10\n1 5\n4 4\n\"\"\"\n) == \"2\"\n"
    },
    {
        "number": 3008,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 10\n1 12\n1 13''') == '2'\nassert solution('''2 10\n1 5\n1 12\n''') == '2'\nassert solution('''2 10\n1 5\n1 4\n''') == '2'\nassert solution('''2 10\n1 5\n4 1\n''') == '2'\nassert solution('''2 10\n1 5\n1 4\n1 5\n1 3\n1 5\n1 5\n''') == '2'\n"
    },
    {
        "number": 3009,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n\") == \"28\"\nassert solution(\"4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n\") == \"36.2842712475\"\nassert solution(\"4\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\\n\") == \"32\"\nassert solution(\"4\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n\") == \"Impossible\"\nassert solution(\"4\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\\n\") == \"Impossible\"\n"
    },
    {
        "number": 3009,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''4\n10 10 5\n10 20 5\n20 10 5\n20 20 5'''\n    ) == '28'\n\nassert solution(\n'''4\n10 10 5\n10 20 1\n20 10 12\n20 20 8\n'''\n    ) == '36.2842712475'\n\nassert solution(\n'''6\n1 1 15\n5 1 100\n9 1 56\n1 5 1\n5 5 33\n9 5 3'''\n    ) == '28.970562748'\n\nassert solution(\n'''8\n4 4 1\n4 6 1\n4 8 1\n6 6 14\n8 4 1\n8 6 1\n8 8 1\n99 6 -8'''\n    ) == '32'\n\nassert solution(\n'''8\n4 4 1\n4 6 1\n4 8 1\n6 6 14\n8 4 1\n8 6 1\n8 8 1\n99 6 -8'''\n    ) == '32'"
    },
    {
        "number": 3009,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5') == '28'\nassert solution('4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\\n99 6 -8') == '36.2842712475'\nassert solution('6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3') == '28.970562748'\nassert solution('8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8') == '32'\n\nprint('All tests passed successfully.')\n"
    },
    {
        "number": 3009,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\\n') == '28'\nassert solution('4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\\n') == '36.2842712475'\nassert solution('6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n') == '28.970562748'\nassert solution('8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\\n') == '32'\nassert solution('8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\\n') == '32'\nprint('All tests passed successfully.')\n\n\"\"\"\n\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 3009,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\\n') == '28'\nassert solution('4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\\n') == '36.2842712475'\nassert solution('6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n') == '28.970562748'\nassert solution('8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\\n') == '32'\nassert solution('8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\\n') == '32'\n"
    },
    {
        "number": 3009,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\\n') == '32'\nassert solution('6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n') == '36.2842712475'\nassert solution('8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\\n') == '32'\nassert solution('2\\n1 1 5\\n2 1 5\\n2 2 5\\n2 3 5\\n2 4 5\\n2 5 5\\n2 6 5\\n2 7 5\\n2 8 5\\n') == 'IMPOSSIBLE'\nassert solution('10\\n2 2 6\\n4 4 2\\n5 5 5\\n6 6 6\\n7 7 7\\n8 8 8\\n9 9 9\\n10 10 10\\n') == '32'\n"
    },
    {
        "number": 3009,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n4\\n5\\n2\\n"
    },
    {
        "number": 3009,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n10 10 5\n10 20 5\n20 10 5\n20 20 5''') == '28'\nassert solution('''4\n10 10 5\n10 20 1\n20 10 12\n20 20 8\n''') == '36.2842712475'\nassert solution('''6\n1 1 15\n5 1 100\n9 1 56\n1 5 1\n5 5 33\n9 5 3\n''') == '28.970562748'\nassert solution('''8\n4 4 1\n4 6 1\n4 8 1\n6 6 14\n8 4 1\n8 6 1\n8 8 1\n99 6 -8\n''') == '32'\nassert solution('''8\n1 1 15\n5 1 100\n9 1 56\n1 5 1\n5 5 33\n9 5 3\n''') == '32'\n"
    },
    {
        "number": 3009,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n\") == \"28.970562748\"\nassert solution(\"4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\\n\") == \"32\"\nassert solution(\"4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\\n\") == \"32\"\nassert solution(\"1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n\") == \"28.970562748\"\nassert solution(\"8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\\n\") == \"32\"\n"
    },
    {
        "number": 3009,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n10 10 5\n10 20 5\n20 10 5\n20 20 5''') == '28'\nassert solution('''4\n10 10 5\n10 20 1\n20 10 12\n20 20 8\n''') == '36.2842712475'\nassert solution('''6\n1 1 15\n5 1 100\n9 1 56\n1 5 1\n5 5 33\n9 5 3\n''') == '28.970562748'\nassert solution('''8\n4 4 1\n4 6 1\n4 8 1\n6 6 14\n8 4 1\n8 6 1\n8 8 1\n99 6 -8\n''') == '32'\nassert solution('''6\n1 1 15\n5 1 100\n9 1 56\n1 5 1\n5 5 33\n9 5 3\n''') == '36.2842712475'\n"
    },
    {
        "number": 3010,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1 1 1 1') == '1'\nassert solution('2\\n2 1 1 1') == '1'\nassert solution('3\\n1 3 9 5') == '3'\nassert solution('3\\n2 2 6 8') == '3'\nassert solution('3\\n4 8 9 3') == '3'\n"
    },
    {
        "number": 3010,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 3 9 5') == '3'\nassert solution('2 2 6 8') == '3'\nassert solution('4 8 9 3') == '1'\nassert solution('5 2 7 10') == '3'\nassert solution('7 4 4 10') == '1'\n"
    },
    {
        "number": 3010,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n1 3 9 5\n2 2 6 8\n4 8 9 3\n''') == '3'\nassert solution('''3\n5 2 7 10\n7 4 4 10\n2 4 10 8\n''') == '1'\nassert solution('''3\n2 1 6 5\n2 5 5 4\n5 1 7 7\n''') == '1'\nassert solution('''3\n-1 -2 -1 -1\n-1 2 -1 -1\n''') == '1'\nassert solution('''3\n-1 -2 -1 -1\n-1 2 -1 -1\n''') == '1'\n"
    },
    {
        "number": 3010,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n1 3 9 5\n2 2 6 8\n4 8 9 3''') == '3'\nassert solution('''3\n5 2 7 10\n7 4 4 10\n2 4 10 8''') == '1'\nassert solution('''3\n-1 -2 -1 -1\n-1 2 -1 -1\n''') == '1'\nassert solution('''3\n1 3 9 5\n2 2 6 8\n4 8 9 3''') == '3'\nassert solution('''3\n2 1 6 5\n2 5 5 4\n5 1 7 7''') == '1'\n"
    },
    {
        "number": 3010,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n3\\n9\\n5\\n\") == \"3\"\nassert solution(\"2\\n2\\n6\\n8\\n\") == \"1\"\nassert solution(\"4\\n8\\n9\\n3\\n\") == \"1\"\nassert solution(\"5\\n7\\n4\\n10\\n\") == \"1\"\nassert solution(\"7\\n4\\n4\\n10\\n\") == \"1\"\n"
    },
    {
        "number": 3010,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3010,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3\") == \"3\"\nassert solution(\"3\\n2 1 6 5\\n2 5 5 4\\n5 1 7 7\") == \"1\"\nassert solution(\"3\\n2 1 6 5\\n2 5 5 4\\n5 1 7 7\") == \"1\"\nassert solution(\"3\\n-1 -2 -1 -1\\n-1 2 -1 -1\\n\") == \"1\"\nassert solution(\"3\\n-1 2 -1 -1\\n-1 2 -1 -1\\n\") == \"1\"\n"
    },
    {
        "number": 3010,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n1 3 9 5\n2 2 6 8\n4 8 9 3''') == '3'\nassert solution('''3\n5 2 7 10\n7 4 4 10\n2 4 10 8\n''') == '1'\nassert solution('''3\n-1 -2 -1 -1\n-1 2 -1 -1\n''') == '1'\nassert solution('''3\n2 1 6 5\n2 5 5 4\n5 1 7 7\n''') == '1'\nassert solution('''1\n-1 -2 -1 -1\n-1 2 -1 -1\n''') == '1'"
    },
    {
        "number": 3010,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"3\n1 3 9 5\n2 2 6 8\n4 8 9 3\n\"\"\") == \"3\"\nassert solution(\"\"\"3\n5 2 7 10\n7 4 4 10\n2 4 10 8\n\"\"\") == \"-1\"\nassert solution(\"\"\"3\n-1 -2 -1 -1\n-1 2 -1 -1\n-1 2 -1 -1\n\"\"\") == \"-1\"\nassert solution(\"\"\"3\n-1 -2 -1 -1\n-1 2 -1 -1\n2 1 6 5\n2 5 5 4\n5 1 7 7\n\"\"\") == \"1\"\nassert solution(\"\"\"3\n2 1 6 5\n2 5 5 4\n5 1 7 7\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3010,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 3 9 5\n2 2 6 8\n4 8 9 3''') == '3'\nassert solution('''1 3 9 5\n2 2 6 8\n4 8 9 3''') == '3'\nassert solution('''2 1 6 5\n2 5 5 4\n5 1 7 7''') == '1'\nassert solution('''5 1 7 7\n2 4 4 10\n2 4 10 8''') == '1'\nassert solution('''3\n-1 -2 -1 -1\n-1 2 -1 -1\n''') == '1'\n"
    },
    {
        "number": 3011,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10') == '10'\nassert solution('55') == '55'\nassert solution('101') == '-1'\nassert solution('1234321') == '94708'\nassert solution('123456789') == '-1'\n"
    },
    {
        "number": 3011,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3011,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"10\") == \"10\"\nassert solution(\"55\") == \"55\"\nassert solution(\"101\") == \"-1\"\nassert solution(\"1234321\") == \"94708\"\nprint(\"tests passed\")\n"
    },
    {
        "number": 3011,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708\n"
    },
    {
        "number": 3011,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"10\") == \"10\"\nassert solution(\"55\") == \"55\"\nassert solution(\"101\") == \"-1\"\nassert solution(\"1234321\") == \"94708\"\nprint(\"All set? Click 'Check' to earn cool rewards!\")\n\n\"\"\"\n\n\n\nimport sys\nsys.stdin = open('input.txt', 'r')\nsys.stdout = open('output.txt', 'w')\n\nT = int(input())\n\nfor i in range(T):\n    n = int(input())\n    while n > 0:\n        if (n % 10) % 2 == 0:\n            n = n // 10\n        else:\n            n = n - 1\n            break\n    if n == 1:\n        print(\"1\")\n    else:\n        print(\"-1\")\n"
    },
    {
        "number": 3011,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"123\") == \"-1\"\nassert solution(\"12345\") == \"1\"\nassert solution(\"123454321\") == \"9\"\nassert solution(\"1234512345\") == \"1\"\nassert solution(\"123451234512345\") == \"2\"\n"
    },
    {
        "number": 3011,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10') == '10'\nassert solution('55') == '55'\nassert solution('101') == '-1'\nassert solution('1232321') == '94708'\nassert solution('1234321') == '-1'\n"
    },
    {
        "number": 3011,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10') == '10'\nassert solution('55') == '55'\nassert solution('101') == '-1'\nassert solution('1234321') == '94708'\n\n\"\"\""
    },
    {
        "number": 3011,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708\n"
    },
    {
        "number": 3011,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1234321') == '94708'\nassert solution('101') == '-1'\nassert solution('12345678910') == '987654321'\nassert solution('55') == '55'\nassert solution('10') == '10'\n"
    },
    {
        "number": 3012,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3012,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 0 0 0 3''') == '6'\nassert solution('''1 2 0 0 5''') == '2'\nassert solution('''1 2 0 0 4''') == '4'\nassert solution('''1 2 0 0 6''') == '0'\nassert solution('''1 2 0 0 5''') == '4'\n"
    },
    {
        "number": 3012,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 0 0 0 3\n''') == '6'\nassert solution('''1 2 0 0 5\n''') == '2'\nassert solution('''1 2 0 0 4\n''') == '4'\nassert solution('''1 2 0 0 6\n''') == '0'\nassert solution('''1 1 1 1 1 1\n''') == '1'\n"
    },
    {
        "number": 3012,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 0 0 0 3') == '6'\nassert solution('1 2 0 0 5') == '2'\nassert solution('1 2 0 0 4') == '4'\nassert solution('1 2 0 0 6') == '0'\nassert solution('1 2 0 0 2') == '0'\n"
    },
    {
        "number": 3012,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n3 0 0 0 3\n''') == '6'\nassert solution('''\n1 2 0 0 5\n''') == '2'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 6\n''') == '0'\nassert solution('''\n4 5 1 1 3\n1 4 1 1 4\n1 3 1 1 2\n2 4 1 1 5\n3 5 1 1 6\n4 6 1 1 7\n''') == '48'\n"
    },
    {
        "number": 3012,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 0 0 0 3''') == '6'\nassert solution('''1 2 0 0 5''') == '2'\nassert solution('''1 2 0 0 4''') == '4'\nassert solution('''1 2 0 0 6''') == '0'\nassert solution('''2 2 0 0 6''') == '0'\n"
    },
    {
        "number": 3012,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 0 0 0 3') == '6'\nassert solution('1 2 0 0 5') == '2'\nassert solution('1 2 0 0 4') == '4'\nassert solution('1 2 0 0 6') == '0'\n"
    },
    {
        "number": 3012,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n3 0 0 0 3\n''') == '6'\nassert solution('''\n1 2 0 0 5\n''') == '2'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 6\n''') == '0'\nassert solution('''\n1 2 0 0 1\n''') == '6'\n"
    },
    {
        "number": 3012,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 0 0 5') == '6'\nassert solution('1 2 0 0 4') == '2'\nassert solution('1 2 0 0 6') == '0'\nassert solution('1 2 0 0 6') == '0'\nassert solution('1 2 0 0 6') == '0'\n"
    },
    {
        "number": 3012,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 0 0 3') == '6'\nassert solution('1 2 0 0 5') == '2'\nassert solution('1 2 0 0 4') == '4'\nassert solution('1 2 0 0 6') == '0'\nassert solution('1 2 0 0 4') == '0'\n"
    },
    {
        "number": 3013,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\"\nassert solution(\"0.5 -8 8\") == \"-4.36385220 9.46891588\"\nassert solution(\"0.5 -8 0.5\") == \"5.39193948 -0.19468498\"\n\"\"\"\n\nimport math"
    },
    {
        "number": 3013,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3013,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'\nassert solution('0.5 -8 8') == '-4.36385220 9.46891588'\nassert solution('0.5 -8 8') == '-4.36385220 9.46891588'\n"
    },
    {
        "number": 3013,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''0.5 -5.301 3.098''') == '''-1.26167861 3.88425357'''\nassert solution('''0.5 8 8''') == '''9.21068947 2.56226688'''\nassert solution('''1 8 8''') == '''6.22375968 -0.31921472'''\nassert solution('''0.5 -8 8''') == '''-4.36385220 9.46891588'''\nassert solution('''0.5 -8 8''') == '''-4.36385220 9.46891588'''\n"
    },
    {
        "number": 3013,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'\nassert solution('0.5 -8 8') == '-4.36385220 9.46891588'\nassert solution('0.5 -8 8') == '-4.36385220 9.46891588'\n\nprint(solution('0.5 -5.301 3.098'))\nprint(solution('0.5 8 8'))\nprint(solution('1 8 8'))\nprint(solution('0.5 -8 8'))\nprint(solution('0.5 -8 8'))\n'''\n"
    },
    {
        "number": 3013,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3013,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'\nassert solution('0.5 -8 8') == '-4.36385220 9.46891588'\n\"\"\"\n"
    },
    {
        "number": 3013,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'\nassert solution('0.5 -8 8') == '-4.36385220 9.46891588'\n\"\"\"\n\nimport sys\nfrom math import *"
    },
    {
        "number": 3013,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\"\nassert solution(\"0.5 -8 8\") == \"-4.36385220 9.46891588\"\n\"\"\""
    },
    {
        "number": 3013,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin.split()\n\n'''\n"
    },
    {
        "number": 3014,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2\n1 2\n2 1''') == '1'\nassert solution('''3 3\n1 2\n2 3\n3 1''') == '0'\nassert solution('''4 5\n1 2\n1 3\n3 2\n2 4\n3 4\n''') == '2'\nassert solution('''4 5\n1 2\n2 3\n2 4\n3 1\n4 1\n''') == '0'"
    },
    {
        "number": 3014,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 3\n1 2\n1 3\n3 2''') == '0'\nassert solution('''3 3\n1 2\n1 3\n3 2''') == '2'\nassert solution('''3 4\n1 2\n2 3\n3 4\n2 1\n1 1\n''') == '1'\nassert solution('''5 5\n1 2\n1 3\n3 2\n2 4\n3 4\nSample Input 5:\n8 9\n1 2\n1 3\n1 6\n1 7\n1 8\n1 9\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n4 5\n4 6\n4 7\n4 8\n4 9\n5 6\n5 7\n5 8\n5 9\n6 7\n6 8\n6 9\n7 8\n7 9\n8 9\n8 1\n8 2\n8 3\n8 4\n8 5\n8 6\n8 7\n8 9\n9 1\n9 2\n9 3\n9 4\n9 5\n9 6\n9 7\n9 8\n9 9\nSample Output 5:\n0\n''') == '0'\nassert solution('''8 9\n1 2\n1 3\n1 6\n1 7\n1 8\n1 9\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n4 5\n4 6\n4 7\n4 8\n4 9\n5 6\n5 7\n5 8\n5 9\n6 7\n6 8\n6 9\n7 8\n7 9\n8 9\n8 1\n8 2\n8 3\n8 4\n8 5\n8 6\n8 7\n8 9\n9 1\n9 2\n9 3\n9 4\n9 5\n9 6\n9 7\n9 8\n9 9\nSample Output 6:\n0\n''') == '0'\n"
    },
    {
        "number": 3014,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"1 2\") == \"\"\n"
    },
    {
        "number": 3014,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 3\n1 2\n2 3''') == '1'\nassert solution('''2 2\n1 2\n2 1''') == '0'\nassert solution('''4 5\n1 2\n1 3\n3 2\n2 4\n3 4\n4 1\n1 3\nSample Output 4:\n1\n1\n1\n2\n1\n2\n''') == '1'\nassert solution('''4 5\n1 2\n2 3\n2 4\n3 1\n4 1\n1 3\n''') == '0'\nassert solution('''4 5\n1 2\n2 3\n2 4\n1 3\n3 4\n3 2\n4 1\n1 2\n''') == '2'\n"
    },
    {
        "number": 3014,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n1 1\n1 2\n2 3\n3 1\n\"\"\") == \"\"\nassert solution(\n\"\"\"\n2 2\n1 2\n2 1\n\"\"\") == \"1\\n2\"\nassert solution(\n\"\"\"\n3 3\n1 2\n2 3\n3 1\n\"\"\") == \"\"\nassert solution(\n\"\"\"\n3 3\n1 2\n2 3\n3 1\n\"\"\") == \"\"\nassert solution(\n\"\"\"\n4 5\n1 2\n2 3\n3 4\n1 4\n2 3\n3 4\n4 1\n1 3\n2 3\n1 2\n2 4\n3 4\n\"\"\") == \"2\\n3\\n1\\n2\\n4\"\n"
    },
    {
        "number": 3014,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"0\\n1\"\nassert solution(\"3 3\") == \"0\\n0\\n1\"\nassert solution(\"4 5\") == \"0\\n0\\n1\\n1\"\nassert solution(\"5 6\") == \"0\\n0\\n1\\n0\\n1\"\nassert solution(\"3 2\") == \"1\\n2\"\n"
    },
    {
        "number": 3014,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"4 5\") == \"1\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"2 4\") == \"2\"\n"
    },
    {
        "number": 3014,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2') == '0'\nassert solution('3 3') == '0'\nassert solution('4 5') == '2'\nassert solution('1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n4 1') == '1\\n2\\n'"
    },
    {
        "number": 3014,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\n"
    },
    {
        "number": 3014,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2\\n1 2\\n2 1') == '0'\nassert solution('3 3\\n1 2\\n2 3\\n3 1\\n') == '1'\nassert solution('4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n') == '1'\nassert solution('3 10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n') == '4'\n"
    },
    {
        "number": 3015,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''4 5 0 3\n0 1 1\n1 2 2\n2 0 4\n2 3 1\n2 3 3''') == '11'\nassert solution(\n'''5 5 0 4\n0 1 1\n1 0 1\n1 2 1\n2 3 1\n3 0 1\n2 4 1''') == 'infinity'\n"
    },
    {
        "number": 3015,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n4 5 0 3\n0 1 1\n1 2 2\n2 0 4\n2 3 1\n2 3 3\n''') == '11'\nassert solution(\n'''\n3 3 1 2\n0 1 1\n1 0 1\n1 2 1\n''') == 'infinity'\nassert solution(\n'''\n4 5 1 2\n1 1 2\n0 1 1\n1 2 1\n2 0 1\n2 3 1\n2 3 3\n''') == 'infinity'\n"
    },
    {
        "number": 3015,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''0 4 1 2\n1 2 3\n2 3 4\n3 4 5\n4 5 6\n5 6 7\n6 7 8\n7 8 9\n8 9 10\n9 10 11\n10 11 12\n11 12 13\n12 13 14\n13 14 15\n14 15 16\n15 16 17\n16 17 18\n17 18 19\n18 19 20\n19 20 21\n20 21 22\n21 22 23\n22 23 24\n23 24 25\n24 25 26\n25 26 27\n26 27 28\n27 28 29\n28 29 30\n29 30 31\n30 31 32\n31 32 33\n32 33 34\n33 34 35\n34 35 36\n35 36 37\n36 37 38\n37 38 39\n38 39 40\n39 40 41\n40 41 42\n41 42 43\n42 43 44\n43 44 45\n44 45 46\n45 46 47\n46 47 48\n47 48 49\n48 49 50\n49 50 51\n50 51 52\n51 52 53\n52 53 54\n53 54 55\n54 55 56\n55 56 57\n56 57 58\n57 58 59\n58 59 60\n59 60 61\n60 61 62\n61 62 63\n62 63 64\n63 64 65\n64 65 66\n65 66 67\n66 67 68\n65 67 69\n64 67 70\n63 67 71\n62 67 72\n61 67 73\n60 67 74\n59 67 75\n58 67 76\n57 67 77\n56 67 78\n55 67 79\n54 67 80\n53 67 81\n52 67 82\n51 67 83\n50 67 84\n49 67 85\n48 67 86\n47 67 87\n46 67 88\n45 67 89\n44 67 90\n43 67 91\n42 67 92\n41 67 93\n40 67 94\n39 67 95\n38 67 96\n37 67 97\n36 67 98\n35 67 99\n34 67 100\n33 67 101\n32 67 102\n31 67 103\n30 67 104\n29 67 105\n28 67 106\n27 67 107\n26 67 108\n25 67 109\n24 67 110\n23 67 111\n22 67 112\n21 67 113\n20 67 114\n19 67 115\n18 67 116\n17 67 117\n16 67 118\n15 67 119\n14 67 120\n13 67 121\n12 67 122\n11 67 123\n10 67 124\n9 67 125\n8 67 126\n7 67 127\n6 67 128\n5 67 129\n4 67 130\n3 67 131\n2 67 132\n1 67 133\n0 67 134\n-2 67 135\n-3 67 136\n-4 67 137\n-5 67 138\n-6 67 139\n-7 67 140\n-8 67 141\n-9 67 142\n-10 67 143\n-11 67 144\n-12 67 145\n-13 67 146\n-14 67 147\n-15 67 148\n-16 67 149\n-17 67 150\n-18 67 151\n-19 67 152\n-20 67 153\n-21 67 154\n-22 67 155\n-23 67 156\n-24 67 157\n-25 67 158\n-26 67 159\n-27 67 160\n-28 67 161\n-29 67 162\n-30 67 163\n-31 67 164\n-32 67 165\n-33 67 166\n-34 67 167\n-35 67 168\n-36 67 169\n-37 67 170\n-38 67 171\n-39 67 172\n-40 67 173\n-41 67 174\n-42 67 175\n-43 67 176\n-44 67 177\n-45 67 178\n-46 67 179\n-47 67 180\n-48 67 181\n-49 67 182\n-50 67 183\n-51 67 184\n-52 67 185\n-53 67 186\n-54 67 187\n-55 67 188\n-56 67 189\n-57 67 190\n-58 67 191\n-59 67 192\n-60 67 193\n-61 67 194\n-62 67 195\n-63 67 196\n-64 67 197\n-65 67 198\n-66 67 199\n-67 67 200\n-68 67 201\n-69 67 202\n-70 67 203\n-71 67 204\n-72 67 205\n-73 67 206\n-74 67 207\n-75 67 208\n-76 67 209\n-77 67 210\n-78 67 211\n-79 67 212\n-80 67 213\n-81 67 214\n-82 67 215\n-83 67 216\n-84 67 217\n-85 67 218\n-86 67 219\n-87 67 220\n-88 67 221\n-89 67 222\n-90 67 223\n-91 67 224\n-92 67 225\n-93 67 226\n-94 67 227\n-95 67 228\n-96 67 229\n-97 67 230\n-98 67 231\n-99 67 232\n-100 67 233\n-101 67 234\n-102 67 235\n-103 67 236\n-104 67 237\n-105 67 238\n-106 67 239\n-107 67 240\n-108 67 241\n-109 67 242\n-110 67 243\n-111 67 244\n-112 67 245\n-113 67 246\n-114 67 247\n-115 67 248\n-116 67 249\n-117 67 250\n-118 67 251\n-119 67 252\n-120 67 253\n-121 67 254\n-122 67 255\n-123 67 256\n-124 67 257\n-125 67 258\n-126 67 259\n-127 67 260\n-128 67 261\n-129 67 262\n-130 67 263\n-131 67 264\n-132 67 265\n-133 67 266\n-134 67 267\n-135 67 268\n-136 67 269\n-137 67 270\n-138 67 271\n-139 67 272\n-140 67 273\n-141 67 274\n-142 67 275\n-143 67 276\n-144 67 277\n-145 67 278\n-146 67 279\n-147 67 280\n-148 67 281\n-149 67 282\n-150 67 283\n-151 67 284\n-152 67 285\n-153 67 286\n-154 67 287\n"
    },
    {
        "number": 3015,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\n2 3 3') == '11'\nassert solution('5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n') == 'infinity'\nassert solution('1 1 0 1\\n0 1 2\\n') == '2'\nassert solution('1 1 0 1\\n0 1 2\\n1 0 1\\n1 2 1\\n') == 'infinity'\nassert solution('1 1 0 1\\n0 1 2\\n1 0 1\\n1 2 1\\n1 3 1\\n1 3 1\\n1 3 1\\n') == 'infinity'\n"
    },
    {
        "number": 3015,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\n2 3 4\\n') == '11'\nassert solution('3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n') == 'infinity'\nassert solution('2 1 0 1\\n0 1 2\\n') == '2'\nassert solution('1 2 1\\n0 1 2\\n') == 'infinity'\nassert solution('3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n') == 'infinity'\n"
    },
    {
        "number": 3015,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4\") == \"infinity\"\nassert solution(\"3 4 1 2\") == \"2\"\nassert solution(\"2 1 0 1\") == \"2\"\nassert solution(\"0 1 1\") == \"infinity\"\nassert solution(\"1 1 2 3\") == \"infinity\"\n"
    },
    {
        "number": 3015,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''4 5 0 3\n0 1 1\n1 2 2\n2 0 4\n2 3 1\n2 3 3''') == '11'\nassert solution('''5 5 0 4\n0 1 1\n1 2 1\n2 3 1\n3 0 1\n2 4 1\n''') == 'infinity'\nassert solution('''2 1 0 1\n0 1 2\n''') == '2'\nassert solution('''3 3 1 2\n0 1 1\n1 0 1\n1 2 1\n''') == 'infinity'\nassert solution('''5 3 4 1\n0 1 1\n1 2 1\n2 3 1\n3 0 1\n2 4 1\n''') == 'infinity'\n"
    },
    {
        "number": 3015,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'infinity'"
    },
    {
        "number": 3015,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"4 5 0 3\n0 1 1\n1 2 1\n2 0 4\n2 3 1\n2 3 3\n\"\"\") == \"infinity\"\nassert solution(\"\"\"2 1 0 1\n0 1 2\nSample Output 4:\ninfinity\n\"\"\") == \"infinity\"\nassert solution(\"\"\"5 5 0 4\n0 1 1\n1 2 1\n2 3 1\n3 0 1\n2 4 1\n\"\"\") == \"infinity\"\nassert solution(\"\"\"3 3 1 2\n0 1 1\n1 0 1\n1 2 1\nSample Output 4:\ninfinity\n\"\"\") == \"infinity\"\nassert solution(\"\"\"1 1 0 1\n0 1 2\nSample Output 4:\ninfinity\n\"\"\") == \"infinity\"\n"
    },
    {
        "number": 3015,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"4 5 0 3\n0 1 1\n1 2 2\n2 0 4\n2 3 1\n2 3 3\n\"\"\") == \"11\"\nassert solution(\n\"\"\"5 5 0 4\n0 1 1\n1 0 1\n1 2 1\n2 3 1\n3 0 1\n2 4 1\n\"\"\") == \"infinity\"\nassert solution(\n\"\"\"2 1 0 1\n0 1 2\n\"\"\") == \"infinity\"\nassert solution(\n\"\"\"3 3 1 2\n0 1 1\n1 0 1\n1 2 1\n\"\"\") == \"infinity\"\nassert solution(\n\"\"\"4 5 0 4\n0 1 1\n1 0 1\n1 2 1\n2 3 1\n3 0 1\n2 4 1\n\"\"\") == \"infinity\"\n"
    },
    {
        "number": 3016,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3016,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 2 1 2 1\n2 1 2\n2 3 4\n''') == '6'\nassert solution('''3 3 1 1\n1 1\n2 2 3\n''') == '0'\nassert solution('''3 2 2 3\n1 1\n2 2 3\n''') == '12'\n"
    },
    {
        "number": 3016,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(open(\"test\").read()) == \"24\"\nassert solution(open(\"test2\").read()) == \"0\"\nassert solution(open(\"test3\").read()) == \"12\"\nassert solution(open(\"test4\").read()) == \"60\"\nprint(solution(open(\"input\").read()))\n"
    },
    {
        "number": 3016,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == ''"
    },
    {
        "number": 3016,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\\n2\") == \"2\"\nassert solution(\"1\\n2\\n3\") == \"6\"\nassert solution(\"1\\n2\\n3\\n2\") == \"12\"\n"
    },
    {
        "number": 3016,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 2 1 2 1') == '6'\nassert solution('3 3 1 1') == '0'\nassert solution('3 2 2 3') == '18'\nassert solution('3 1 2 3') == '12'\nassert solution('3 1 2 3') == '12'\n"
    },
    {
        "number": 3016,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\" \") == \"\"\nassert solution(\"\"\"\\\n4 2 1 2 1\n2 1 2\n2 3 4\n\"\"\") == \"6\"\nassert solution(\"\"\"\\\n3 3 1 1\n1 1\n2 2 3\n\"\"\") == \"0\"\nassert solution(\"\"\"\\\n3 2 2 3\n1 1\n2 2 3\n\"\"\") == \"18\"\n"
    },
    {
        "number": 3016,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 2 1 2 1\n2 1 2\n2 3 4\n''') == '6'\nassert solution('''3 3 1 1\n1 1\n2 2 3\n''') == '0'\nassert solution('''3 2 2 3\n1 1\n2 2 3\n''') == '12'\nassert solution('''3 1 2 3\n2 1 2\n0\n''') == '18'\nassert solution('''2 2 1\n2 1 2\n2 3 4\n''') == '0'\n"
    },
    {
        "number": 3016,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 2 1 2 1''') == '6'\nassert solution('''2 1 2''') == '0'\nassert solution('''3 3 1 1''') == '18'\nassert solution('''3 2 2 3''') == '12'\nassert solution('''3 1 2 3''') == '12'\n"
    },
    {
        "number": 3016,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 2 1') == '6'\nassert solution('3 3 1 1') == '0'\nassert solution('3 2 2 3') == '18'\nassert solution('2 2 3 4') == '0'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 3017,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1000000 1') == '468559'\nassert solution('1000000 5') == '49401'\nassert solution('1000000 16') == '20'\nassert solution('9000000000000000000 62') == '1'\nassert solution('0 0') == '0'\n"
    },
    {
        "number": 3017,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n\nprint(\"Your code's output is correct!\")\n"
    },
    {
        "number": 3017,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('3 1') == '2'\nassert solution('1000000 1') == '468559'\nassert solution('1000000 5') == '49401'\nassert solution('9000000000000000000 62') == '20'\n"
    },
    {
        "number": 3017,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == answer\n"
    },
    {
        "number": 3017,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1000000 1''') == '468559'\nassert solution('''1000000 5''') == '49401'\nassert solution('''1000000 16''') == '20'\nassert solution('''9000000000000000000 62''') == '1'\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 3017,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"28\"\nprint(\"tests passed\")\n"
    },
    {
        "number": 3017,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1000000 1') == '468559'\nassert solution('1000000 5') == '49401'\nassert solution('1000000 16') == '20'\nassert solution('9000000000000000000 62') == '1'\n"
    },
    {
        "number": 3017,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1000000 1') == '468559'\nassert solution('1000000 5') == '49401'\nassert solution('1000000 16') == '20'\nassert solution('9000000000000000000 62') == '1'\n"
    },
    {
        "number": 3017,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1000000 1') == '468559'\nassert solution('1000000 5') == '49401'\nassert solution('1000000 16') == '20'\nassert solution('9000000000000000000 62') == '1'\n\"\"\"\n"
    },
    {
        "number": 3017,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin[0]\nassert solution(stdin) == stdin[1]\nassert solution(stdin) == stdin[2]\nassert solution(stdin) == stdin[3]\nassert solution(stdin) == stdin[4]\n"
    },
    {
        "number": 3018,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3018,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n5 4 1\\n\") == \"1\"\nassert solution(\"3 9\\n5 4 1\\n\") == \"1\"\nassert solution(\"4 13\\n2 2 2 2\\n\") == \"3\"\nassert solution(\"18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\\n\") == \"12\"\nassert solution(\"4 13\\n1 1 1 1 1\\n\") == \"1\"\n"
    },
    {
        "number": 3018,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 9\n5 4 1''') == '1'\nassert solution('''4 13\n2 2 2 2''') == '3'\nassert solution('''18 90\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6''') == '12'\nassert solution
    },
    {
        "number": 3018,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('2 10') == ''\nassert solution('1 1 1 1 1') == '1'\nassert solution('2 10') == '1'\nassert solution('1 1 1 1 1') == '2'\n"
    },
    {
        "number": 3018,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\\n3\\n1\") == \"1\\n\"\nassert solution(\"3\\n10\\n1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10\") == \"5\\n\"\nassert solution(\"7\\n50\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\") == \"4\\n\"\nassert solution(\"8\\n100\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\") == \"4\\n\"\nassert solution(\"7\\n50\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\") == \"4\\n\"\n"
    },
    {
        "number": 3018,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 9') == '1'\nassert solution('3 13') == '3'\nassert solution('4 13') == '1'\nassert solution('18 90') == '12'\nassert solution('1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6') == '12'\n"
    },
    {
        "number": 3018,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 9\\n5 4 1\\n') == '1'\nassert solution('4 13\\n2 2 2 2\\n') == '3'\nassert solution('18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\\n') == '12'\n"
    },
    {
        "number": 3018,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3018,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3018,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4 5 6\") == \"1\"\nassert solution(\"4 13\") == \"3\"\nassert solution(\"18 90\") == \"12\"\nassert solution(\"10 7 17 19 10 19 17 19 19\") == \"6\"\nassert solution(\"1 2 3 4 5 6\") == \"1\"\n"
    },
    {
        "number": 3019,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1''') == '0'\nassert solution('''3''') == '3'\nassert solution('''4 7 8''') == '3'\nassert solution('''2 3 4 5 8''') == '5'\nassert solution('''10''') == '10'\n"
    },
    {
        "number": 3019,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    1\n    1\n    \"\"\"\n) == \"0\"\n\nassert solution(\n    \"\"\"\n    2\n    1 2\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n    3\n    5 4 3\n    \"\"\"\n) == \"4\"\n\nassert solution(\n    \"\"\"\n    4\n    5 2 3 4\n    \"\"\"\n) == \"7\"\n\nassert solution(\n    \"\"\"\n    5\n    3 2 1 4 5\n    \"\"\"\n) == \"11\""
    },
    {
        "number": 3019,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"5\"\n\"\"\"\nimport sys"
    },
    {
        "number": 3019,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3019,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1''') == ''\nassert solution('''2''') == ''\nassert solution('''3''') == ''\nassert solution('''4''') == ''\nassert solution('''5''') == ''\n"
    },
    {
        "number": 3019,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n2') == '2'\nassert solution('3\\n3') == '6'\nassert solution('4\\n4') == '8'\nassert solution('5\\n5') == '10'\n"
    },
    {
        "number": 3019,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1''') == '0'\nassert solution('''1\n1\nSample Output 1:\n0\n\nSample Input 2:\n3\n4 7 8\nSample Output 2:\n3\n\nSample Input 3:\n5\n2 3 4 5 8\nSample Output 3:\n5\n''') == '3'\nprint(solution('''2\n1\n1\nSample Output 1:\n0\n\nSample Input 2:\n4\n1 1 2 3\nSample Output 2:\n3\n\nSample Input 3:\n5\n1 2 3 4 5\nSample Output 3:\n5\n'''))\n"
    },
    {
        "number": 3019,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3019,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('3\\n4 7 8') == '3'\nassert solution('5\\n2 3 4 5 8') == '5'\n\nassert solution('1\\n1') == '0'\nassert solution('3\\n4 7 8') == '3'\n"
    },
    {
        "number": 3019,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == ''\nassert solution('3') == '1'\nassert solution('5') == '3'\nassert solution('7') == '5'\nassert solution('10') == '7'\n"
    },
    {
        "number": 3020,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n6\n''') == '4'\nassert solution('''\n149\n''') == '17'\nassert solution('''\n123476544\n''') == '11112'"
    },
    {
        "number": 3020,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\"\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 3020,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6') == '4'\nassert solution('149') == '17'\nassert solution('123476544') == '11112'"
    },
    {
        "number": 3020,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\"\n\n\"\"\""
    },
    {
        "number": 3020,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n') == '2'\nassert solution('9\\n') == '4'\nassert solution('7\\n') == '6'\nassert solution('8\\n') == '6'\nassert solution('36\\n') == '6'\n"
    },
    {
        "number": 3020,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"6\") == \"4\"\nassert solution(\n    \"149\") == \"17\"\nassert solution(\n    \"123476544\") == \"11112\"\nprint(\"solution() passed\")"
    },
    {
        "number": 3020,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('1234') == '11112'\nassert solution('1919') == '1919'\nassert solution('222222') == '7357'\n"
    },
    {
        "number": 3020,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == '-1'\nassert solution('1') == '-1'\nassert solution('-3') == '-1'\nassert solution('-3') == '-1'\nassert solution('-10') == '-1'\n"
    },
    {
        "number": 3020,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6') == '4'\nassert solution('149') == '17'\nassert solution('123476544') == '11112'\nassert solution('12345678910') == '9999999999999'\nprint('All tests passed')\n\nfrom sys import stdin, stdout\nfrom itertools import count\nfrom math import floor, log10"
    },
    {
        "number": 3020,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6') == '4'\nassert solution('149') == '17'\nassert solution('123476544') == '11112'\nassert solution('11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
    },
    {
        "number": 3021,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 3021,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'adcb'\nassert solution(stdin) == 'IMPOSSIBLE'\nassert solution(stdin) == 'AMBIGUOUS'"
    },
    {
        "number": 3021,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''d 4\ncab\ncda\nccc\nbadca''') == 'adcb'\nassert solution('''f 2\ndea\ncfb''') == 'IMPOSSIBLE'\nassert solution('''g 2\n"
    },
    {
        "number": 3021,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == ''\n"
    },
    {
        "number": 3021,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('cab') == 'adcb'\nassert solution('dea') == 'cfb'\nassert solution('cab') == 'adcb'\nassert solution('bca') == 'cab'\nassert solution('f') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3021,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('ab') == 'adc'\nassert solution('abc') == 'adcb'\nassert solution('abcd') == 'IMPOSSIBLE'\nassert solution('bac') == 'adcb'\nassert solution('baab') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3021,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''d 4\ncab\ncda\nccc\nbadca''') == 'adcb'\nassert solution('''c 4\nabc\nbca\ncab\naca''') == 'IMPOSSIBLE'\nassert solution('''f 2\ndea\ncfb\nSample Output 3:\nAMBIGUOUS\n\n''') == 'AMBIGUOUS'\n"
    },
    {
        "number": 3021,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\") == \"adcb\"\nassert solution(\"c 4\\ncab\\ncda\\nccc\\nbadca\") == \"IMPOSSIBLE\"\nassert solution(\"c 4\\ncab\\ncda\\nccc\\nbadca\") == \"AMBIGUOUS\"\nassert solution(\"f 2\\nea\\nbeb\\ncab\") == \"IMPOSSIBLE\"\nassert solution(\"f 2\\nea\\nbeb\\ncab\") == \"AMBIGUOUS\"\n"
    },
    {
        "number": 3021,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abc', 4) == 'adcb'\nassert solution('def', 1) == 'IMPOSSIBLE'\nassert solution('a', 0) == 'IMPOSSIBLE'\nassert solution('abc', 5) == 'IMPOSSIBLE'\nassert solution('c', 5) == 'AMBIGUOUS'\n"
    },
    {
        "number": 3021,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 'IMPOSSIBLE'\nassert solution('a 4') == 'IMPOSSIBLE'\nassert solution('b 3') == 'IMPOSSIBLE'\nassert solution('a 2') == 'adc'\nassert solution('b 2') == 'bca'\n"
    },
    {
        "number": 3022,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3 3 3\\n') == '9'\nassert solution('10 20 0 0\\n') == '10'\nassert solution('100 20 543 12\\n') == '164'"
    },
    {
        "number": 3022,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3 3 3') == '9'\nassert solution('10 20 0 0') == '10'\nassert solution('100 20 543 12') == '164'\nassert solution('100 10 50 0') == '200'\nassert solution('2 1 2 2') == '4'\n"
    },
    {
        "number": 3022,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 3 3 3') == '9'\nassert solution('10 20 0 0') == '10'\nassert solution('100 20 543 12') == '164'\nassert solution('5 2 3 4') == '5'\nassert solution('1 2 3 4') == '4'\n"
    },
    {
        "number": 3022,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3022,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4\\n2 3 4 5') == 9\nassert solution('10 20 0 0\\n2 3 4 5') == 10\nassert solution('100 20 543 12\\n2 3 4 5') == 164\nassert solution('100 10 0 0\\n2 3 4 5') == 10\nassert solution('1 2 3 4\\n3 4 5 6\\n2 3 4 5') == 6\n"
    },
    {
        "number": 3022,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 3 3 3\") == \"9\"\nassert solution(\"10 20 0 0\") == \"10\"\nassert solution(\"100 20 543 12\") == \"164\"\nprint(solution(stdin))\n"
    },
    {
        "number": 3022,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 3 3 3''') == '9'\nassert solution('''10 20 0 0''') == '10'\nassert solution('''100 20 543 12''') == '164'\nassert solution('''1000000000 100000000000 100000000000 100000000000''') == '50000000000'\n"
    },
    {
        "number": 3022,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 3 3 3''') == \"9\"\nassert solution('''10 20 0 0''') == \"10\"\nassert solution('''100 20 543 12''') == \"164\"\nassert solution('''1000 100000 1 0''') == \"1000\"\nassert solution('''1000 1000000 1 0''') == \"1000\"\n"
    },
    {
        "number": 3022,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 3 3 3''') == '9'\nassert solution('''10 20 0 0''') == '10'\nassert solution('''100 20 543 12''') == '164'\nassert solution('''5 2 6 4''') == '5'\nassert solution('''10 2 3 4''') == '10'\n"
    },
    {
        "number": 3022,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4') == '9'\nassert solution('5 2 3 4') == '10'\nassert solution('1 1 2 2') == '3'\nassert solution('3 1 2 2') == '4'\nassert solution('4 3 2 1') == '9'\n"
    },
    {
        "number": 3023,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3023,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n-1 -1 0') == 'yes'\nassert solution('5 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0') == 'no'\nassert solution('4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0') == 'yes'\nassert solution('5 2 2\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0') == 'no'\nassert solution('5 2 2\\n0 1\\n0 0\\n-1 -1 -2\\n-1 1 2\\n-1 -1 0\\n0 -1 0') == 'yes'\n"
    },
    {
        "number": 3023,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''4 2 3'''\n) == 'yes'\n\nassert solution(\n'''3 2 3'''\n) == 'no'\n\nassert solution(\n'''4 2 3'''\n) == 'no'\n\nassert solution(\n'''4 1 3'''\n) == 'yes'\n\nassert solution(\n'''4 1 1'''\n) == 'no'"
    },
    {
        "number": 3023,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    4 3 3\n    0 1\n    1 0\n    -1 0\n    0 -1\n    -1 1 -2\n    -1 -1 2\n    0 -1 0\n    \"\"\"\n) == \"yes\"\n\nassert solution(\n    \"\"\"\n    4 3 3\n    0 1\n    1 0\n    -1 0\n    0 -1\n    -1 1 -2\n    -1 -1 2\n    0 -1 0\n    \"\"\"\n) == \"no\"\n\nassert solution(\n    \"\"\"\n    1 2 3\n    0 1\n    1 0\n    0 1\n    0 1\n    0 1\n    0 1\n    \"\"\"\n) == \"no\"\n\nassert solution(\n    \"\"\"\n    4 2 3\n    0 1\n    1 0\n    -1 0\n    0 -1\n    -1 1 -2\n    -1 -1 2\n    0 -1 0\n    \"\"\"\n) == \"yes\"\n\nassert solution(\n    \"\"\"\n    3 2 3\n    0 1\n    1 0\n    0 1\n    0 1\n    0 1\n    0 1\n    \"\"\"\n) == \"yes\""
    },
    {
        "number": 3023,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 2 3''') == 'yes'\nassert solution('''3 2 3''') == 'no'\nassert solution('''3 2 3''') == 'no'\nassert solution('''3 2 3''') == 'no'\nassert solution('''3 2 3''') == 'no'\n"
    },
    {
        "number": 3023,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 3 3\") == \"yes\"\nassert solution(\"4 3 3\") == \"no\"\nassert solution(\"3 2 3\") == \"yes\"\nassert solution(\"3 2 3\") == \"no\"\nassert solution(\"3 2 3\") == \"yes\"\n"
    },
    {
        "number": 3023,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 3 2\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n-1 -1 2\\n-1 -1 2') == 'yes'\nassert solution('4 3 2\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\\n') == 'no'\nassert solution('3 2 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\\n') == 'yes'\n\"\"\"\n"
    },
    {
        "number": 3023,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3023,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3 3') == 'yes'\nassert solution('1 2 3') == 'no'\nassert solution('4 3 3') == 'yes'\nassert solution('0 1') == 'yes'\nassert solution('-1 0') == 'yes'\n"
    },
    {
        "number": 3023,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3024,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('652526') == '4'\nassert solution('12121131221') == '7'\nassert solution('123456789') == '1'\n\n'''"
    },
    {
        "number": 3024,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('123') == ''\nassert solution('12345') == ''\nassert solution('123456789') == ''\n"
    },
    {
        "number": 3024,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('652526') == '4'\nassert solution('12121131221') == '7'\nassert solution('123456789') == '1'\nassert solution('10474314') == '1'\nassert solution('121314151617') == '2'\n"
    },
    {
        "number": 3024,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(12121131221) == '7'\nassert solution('123456789') == '1'\nassert solution('652526') == '4'\nassert solution('12121131221') == '7'\nassert solution('123456789') == '1'\n"
    },
    {
        "number": 3024,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('12121131221') == '7'\nassert solution('123456789') == '1'\n"
    },
    {
        "number": 3024,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == None\nassert solution('0123456789') == None\nassert solution('0011222113') == None\nassert solution('12121131221') == None\nassert solution('123456789') == None\n"
    },
    {
        "number": 3024,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('652526') == '4'\nassert solution('12121131221') == '7'\nassert solution('123456789') == '1'\nassert solution('121221') == '1'\nassert solution('121211') == '3'\n"
    },
    {
        "number": 3024,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"123456789\") == \"1\"\nassert solution(\"12345678901234567890\") == \"7\"\nassert solution(\"1234567890123456789012345678901234567890\") == \"8\"\nassert solution(\"123456789012345678901234567890123456789012345678901234567890\") == \"9\"\nassert solution(\"123456789012345678901234567890123456789012345678901234567890\") == \"9\"\n"
    },
    {
        "number": 3024,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('111312211') == '3'\nassert solution('12121131221') == '7'\nassert solution('123456789') == '1'\nprint('Testcases passed')\n"
    },
    {
        "number": 3024,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('123456789') == '1'\nassert solution('123456789') == '1'\nassert solution('652526') == '4'\nassert solution('12121131221') == '7'\n\nprint('all tests passed')\n"
    },
    {
        "number": 3025,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3\\n1\\n1 2\\n2 3\\n1 3\\n') == '0'\nassert solution('2 3\\n1\\n1 2\\n2 3\\n1 3\\n') == '0'\nassert solution('4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\n') == '24'\nassert solution('3 3\\n1\\n1 2\\n2 3\\n1 3\\n') == '0'\nassert solution('4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\n') == '24'\n"
    },
    {
        "number": 3025,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 3\n1\n1 2\n2 3\n1 3\n2 3''') == '0'\nassert solution('''3 3\n1\n1 2\n2 3\n1 3\n2 3''') == '0'\nassert solution('''3 4\n24 10\n1 3\n2 3\n2 4\n1 4\n2 3\n1 4\n2 3''') == '24'\nassert solution('''6 8\n100 500 300 75\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6\n2 4\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5\n1 6\n3 5\n1 4\n3 6\n1 5"
    },
    {
        "number": 3025,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 3\n1\n1 2\n2 3\n1 3\n''') == '0'\nassert solution('''4 4\n24 10\n1 3\n2 3\n2 4\n1 4\n''') == '24'\nassert solution('''6 8\n100 500 300 75\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6\n''') == '800'\nassert solution('''8 8\n100 500 300 75\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6\n2 7\n''') == '1000'\nassert solution('''8 8\n1 4\n3 4\n1 2\n2 3\n2 4\n3 5\n3 6\n4 5\n4 6\n5 6\n2 6\n2 7\n''') == '3000'\n"
    },
    {
        "number": 3025,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"4 4\") == \"24\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"3 3\\n1\\n1 2\\n2 3\\n1 3\") == \"0\"\nassert solution(\"4 4\\n24 10\\n1 3\\n2 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\") == \"24\"\n"
    },
    {
        "number": 3025,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 2\n3 4''') == \"0\"\nassert solution('''2 2\n1 2\n3 4''') == \"0\"\nassert solution('''1 4\n1 2\n3 4''') == \"24\"\nassert solution('''1 4\n1 2\n1 3\n3 4''') == \"24\"\nassert solution('''1 4\n2 5\n2 6\n2 4\n4 5\n4 6\n4 7\n6 5\n6 7\n7 8\n8 9\n9 10\n9 11\n1 10\n1 11\n11 12\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n1 30\n1 31\n1 32\n1 33\n1 34\n1 35\n1 36\n1 37\n1 38\n1 39\n1 40\n1 41\n1 42\n1 43\n1 44\n1 45\n1 46\n1 47\n1 48\n1 49\n1 50\n1 51\n1 52\n1 53\n1 54\n1 55\n1 56\n1 57\n1 58\n1 59\n1 60\n1 61\n1 62\n1 63\n1 64\n1 65\n1 66\n1 67\n1 68\n1 69\n1 70\n1 71\n1 72\n1 73\n1 74\n1 75\n1 76\n1 77\n1 78\n1 79\n1 80\n1 81\n1 82\n1 83\n1 84\n1 85\n1 86\n1 87\n1 88\n1 89\n1 90\n1 91\n1 92\n1 93\n1 94\n1 95\n1 96\n1 97\n1 98\n1 99\n1 100\n1 101\n1 102\n1 103\n1 104\n1 105\n1 106\n1 107\n1 108\n1 109\n1 110\n1 111\n1 112\n1 113\n1 114\n1 115\n1 116\n1 117\n1 118\n1 119\n1 120\n1 121\n1 122\n1 123\n1 124\n1 125\n1 126\n1 127\n1 128\n1 129\n1 130\n1 131\n1 132\n1 133\n1 134\n1 135\n1 136\n1 137\n1 138\n1 139\n1 140\n1 141\n1 142\n1 143\n1 144\n1 145\n1 146\n1 147\n1 148\n1 149\n1 150\n1 151\n1 152\n1 153\n1 154\n1 155\n1 156\n1 157\n1 158\n1 159\n1 160\n1 161\n1 162\n1 163\n1 164\n1 165\n1 166\n1 167\n1 168\n1 169\n1 170\n1 171\n1 172\n1 173\n1 174\n1 175\n1 176\n1 177\n1 178\n1 179\n1 180\n1 181\n1 182\n1 183\n1 184\n1 185\n1 186\n1 187\n1 188\n1 189\n1 190\n1 191\n1 192\n1 193\n1 194\n1 195\n1 196\n1 197\n1 198\n1 199\n1 200\n1 201\n1 202\n1 203\n1 204\n1 205\n1 206\n1 207\n1 208\n1 209\n1 210\n1 211\n1 212\n1 213\n1 214\n1 215\n1 216\n1 217\n1 218\n1 219\n1 220\n1 221\n1 222\n1 223\n1 224\n1 225\n1 226\n1 227\n1 228\n1 229\n1 230\n1 231\n1 232\n1 233\n1 234\n1 235\n1 236\n1 237\n1 238\n1 239\n1 240\n1 241\n1 242\n1 243\n1 244\n1 245\n1 246\n1 247\n1 248\n1 249\n1 250\n1 251\n1 252\n1 253\n1 254\n1 255\n1 256\n1 257\n1 258\n1 259\n1 260\n1 261\n1 262\n1 263\n1 264\n1 265\n1 266\n1 267\n1 268\n1 269\n1 270\n1 271\n1 272\n1 273\n1 274\n1 275\n1 276\n1 277\n1 278\n1 279\n1 280\n1 281\n1 282\n1 283\n1 284\n1 285\n1 286\n1 287\n1 288\n1 289\n1 290\n1 291\n1 292\n1 293\n1 294\n1 295\n1 296\n1 297\n1 298\n1 299\n1 300\n1 301\n1 302\n1 303\n1 304\n1 305\n1 306\n1 307\n1 308\n1 309\n1 310\n1 311\n1 312\n1 313\n1 314\n1 315\n1 316\n1 317\n1 318\n1 319\n1 320\n1 321\n1 322\n1 323\n1 324\n1 325\n1 326\n1 327\n1 328\n1 329\n1 330\n1 331\n1 332\n1 333\n1 334\n1 335\n1 336\n1 337\n1 338\n1 339\n1 340\n1 341\n1 342\n1 343\n1 344\n1 345\n1 346\n1 347\n1 348\n1 349\n1 350\n1 351\n1 352\n1 353\n1 354\n1 355\n1 356\n1 357\n1 358\n1 359\n1 360\n1 361\n1 362\n1 363\n1 364\n1 365\n1 366\n1 367\n1 368\n1 369\n1 370\n1 371\n1 372\n1 373\n1 374\n1 375\n1 376\n1 377\n1 378\n1 379\n1 380\n1 381\n1 382\n1 383\n1 384\n1 385\n1 386\n1 387\n1 388\n1 389\n1 390\n1 391\n1 392\n1 393\n1 394\n1 395\n1 396\n1 397\n1 398\n1 399\n1 400\n1 401\n1 402\n1 403\n1 404\n1 405\n1 406\n1 407\n1 408\n1 409\n1 410\n1 411\n1 412\n1 413\n1 414\n1 415"
    },
    {
        "number": 3025,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 3\n1\n1 2\n2 3\n1 3\n''') == '0'\n\nassert solution('''4 4\n24 10\n1 3\n2 3\n2 4\n1 4\n''') == '24'\n\nassert solution('''6 8\n100 500 300 75\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6\n''') == '800'\n\nassert solution('''3 3\n1\n1 2\n2 3\n1 3\n''') == '0'\n"
    },
    {
        "number": 3025,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3025,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 3\n1\n1 2\n2 3\n1 3\n''') == '0'\nassert solution('''4 4\n24 10\n1 3\n2 3\n2 4\n1 4\n''') == '24'\nassert solution('''6 8\n100 500 300 75\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6\n''') == '800'\nassert solution('''6 4\n10 5\n1 3\n2 4\n2 5\n3 4\n3 5\n4 5\n3 4\n''') == '10'\nassert solution('''3 1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 3025,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3025,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == str(solution(stdin))\nassert solution(stdin) == str(solution(stdin))\n"
    },
    {
        "number": 3026,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == '1 2 3 4'\nassert solution(input()) == '1 4'\nassert solution(input()) == '1 3 4'\nassert solution(input()) == '1 3 2 4'\nassert solution(input()) == '2'\n"
    },
    {
        "number": 3026,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n1 3 2 4\n''') == '1 4'\nassert solution('''5\n1 2 3 4 5\n''') == '1 2 3 4 5'\nassert solution('''4\n2 1 4 3\n''') == '1 4'\nassert solution('''5\n2 1 4 3\n''') == '1 4'\nassert solution('''5\n1 3 2 4 5\n''') == '1 3 4'\n"
    },
    {
        "number": 3026,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n1 3 2 4\\n') == '1 4\\n'\nassert solution('5\\n1 2 3 4 5\\n') == '1 2 3 4 5\\n'\nassert solution('4\\n2 1 4 3\\n') == '1 2 4\\n'\nassert solution('2\\n2 1\\n') == '-1\\n'\nassert solution('4\\n1 3 2 4\\n') == '1 2 4\\n'\n"
    },
    {
        "number": 3026,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"4\n1 3 2 4\n\"\"\") == \"\"\"1 4\n\"\"\"\nassert solution(\n\"\"\"5\n1 2 3 4 5\n\"\"\") == \"\"\"1 2 3 4 5\n\"\"\"\nassert solution(\n\"\"\"4\n2 1 4 3\n\"\"\") == \"\"\"1 2 3 4 5\n\"\"\"\nassert solution(\n\"\"\"4\n2 3 1 4\n\"\"\") == \"\"\"-1\n\"\"\"\nassert solution(\n\"\"\"4\n2 3 4 1\n\"\"\") == \"\"\"1 4\n\"\"\"\n"
    },
    {
        "number": 3026,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n4\n1 3 2 4\n''') == '1 4\\n'\nassert solution(\n'''\n5\n1 2 3 4 5\n''') == '1 2 3 4 5\\n'\nassert solution(\n'''\n4\n2 1 4 3\n''') == '-1\\n'\nassert solution(\n'''\n5\n2 1 4 3 5\n''') == '-1\\n'\nassert solution(\n'''\n5\n2 3 1 4 5\n''') == '-1\\n'\n"
    },
    {
        "number": 3026,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 3026,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '1 4\\n'"
    },
    {
        "number": 3026,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3026,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3026,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n4') == '1\\n4'\nassert solution('2\\n1 3 2 4\\n') == '1\\n2 3 4'\nassert solution('1\\n1\\n2\\n3\\n4\\n') == '1\\n2\\n3\\n4'\n"
    },
    {
        "number": 3027,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"   \") == \"\"\nassert solution(\"..#..#.#\") == \"1\"\nassert solution(\"  ..#..#.#\") == \"2\"\nassert solution(\"..#..#.#   \") == \"5\"\n"
    },
    {
        "number": 3027,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('\\n'.join([\n    '4 8',\n    '.######.',\n    '.######.',\n    '.######.',\n    '.######.',\n    '',\n])) == '8'\nassert solution('\\n'.join([\n    '5 1',\n    '.....',\n    '.....',\n    '.....',\n    '.....',\n    '.....',\n    '',\n])) == '5'\nassert solution('\\n'.join([\n    '4 4',\n    '.#####.',\n    '.#....',\n    '#...#',\n    '#..#.',\n    '#....',\n    '#####.',\n    '',\n])) == '5'\nassert solution('\\n'.join([\n    '5 5',\n    '.....',\n    '....#',\n    '....#',\n    '....#',\n    '....#',\n    '....#',\n    '',\n])) == '8'\nassert solution('\\n'.join([\n    '4 6',\n    '.#####.',\n    '.#....',\n    '#...#',\n    '#..#.',\n    '#....',\n    '#####.',\n    '',\n])) == '8'\n"
    },
    {
        "number": 3027,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(open(\"/home/runner/abcd.txt\").read()) == '5'\nassert solution(open(\"/home/runner/abcd2.txt\").read()) == '1'\nprint(solution(open(\"/home/runner/abcd.txt\").read()))\nprint(solution(open(\"/home/runner/abcd2.txt\").read()))\n"
    },
    {
        "number": 3027,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n4 8\n..#..#..\n.######.\n.######.\n..#..#..\n''') == '8'\nassert solution('''\n3 3\n...\n.#.\n...\n''') == '1'\nassert solution('''\n2 6\n.#####\n#####.\n''') == '5'\nassert solution('''\n1 1\n"
    },
    {
        "number": 3027,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('1\\n') == '1'\nassert solution('1\\n2\\n') == '2'\nassert solution('1\\n1\\n') == '2'\nassert solution('2\\n1\\n') == '3'\n"
    },
    {
        "number": 3027,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n4 8\n..#..#..\n.######.\n.######.\n..#..#..\n''') == '8'\n\nassert solution('''\n3 3\n...\n.#.\n...\n''') == '1'\n'''\n"
    },
    {
        "number": 3027,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(open(\"solutions/medium/data/test_data1.txt\").read()) == \"8\"\nassert solution(open(\"solutions/medium/data/test_data2.txt\").read()) == \"1\"\nassert solution(open(\"solutions/medium/data/test_data3.txt\").read()) == \"5\"\nassert solution(open(\"solutions/medium/data/test_data4.txt\").read()) == \"8\"\nassert solution(open(\"solutions/medium/data/test_data5.txt\").read()) == \"1\"\n"
    },
    {
        "number": 3027,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''..#..#..\n.######.\n.######.\n..#..#..\n''') == '8'\n\nassert solution('''..#..#..\n.######.\n.######.\n..#..#..\n''') == '1'\n\nassert solution('''..#..#..\n.######.\n.######.\n..#..#..\n.######.\n.######.\n.######.\n..#..#..\n''') == '5'\n\nassert solution('''..#..#..\n.######.\n.######.\n..#..#..\n.######.\n.######.\n.######.\n..#..#..\n''') == '5'\n\nassert solution('''..#..#..\n.######.\n.######.\n..#..#..\n.######.\n.######.\n.######.\n..#..#..\n''') == '5'"
    },
    {
        "number": 3027,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(solution) == \"\"\n"
    },
    {
        "number": 3027,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 8\n..#..#..\n.######.\n.######.\n..#..#..\n''') == '8'\nassert solution('''3 3\n...\n.#.\n...\n''') == '1'\nassert solution('''2 6\n.#####\n#####.\n''') == '5'\nassert solution('''2 3\n...\n.#.\n.#.\n''') == '5'\nassert solution('''2 5\n....\n.#.\n....\n''') == '7'\n"
    },
    {
        "number": 3028,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == '-1'\nassert solution('3 3 3') == '13'\nassert solution('1 1 1 1 1') == '6'\nassert solution('3 1 1 3 1 3') == '19 12 2 18 5 5'\nassert solution('3 2 2') == '13'\n"
    },
    {
        "number": 3028,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 5 5\n2 1 1 1 2\n5 3 4 4 3\n4 3 3 3 2\n3 1 3 3 1\n''') == '6'\nassert solution('''3 2 2\n3 1 1\n1 3 2\n3 2 3\n''') == '13'\nassert solution('''3 3 3\n3 1 1\n1 3 2\n3 2 3\n''') == '-1'\nassert solution('''3 2 2\n1 2\n2 1\n1 2\n''') == '-1'\n"
    },
    {
        "number": 3028,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3028,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''4 5 5\n2 1 1 1 2\n5 3 4 4 3\n4 3 3 3 2\n3 1 3 3 1\n''') == '6'\nassert solution(\n'''3 3 3\n3 1 1\n1 3 2\n3 2 3\n''') == '13'\nassert solution(\n'''2 2 2\n1 2\n2 1\n1 2\n''') == '-1'\nassert solution(\n'''6 6 6\n6 6 1\n1 6 2\n6 2 6\n3 1 3\n1 3 1\n2 3 2\n1 2 3\n2 1 1\n2 1 1\n''') == '19'\nassert solution(\n'''8 8 8\n8 4 5 1 1 1 4\n3 1 1 3 1 4 1\n1 1 4 3 1 3 1\n2 1 1 3 1 1 1\n3 1 1 4 1 1 3\n1 1 3 1 4 1 1\n1 1 1 1 1 1 2\n1 1 1 2 2 2 1\n''') == '19'\n"
    },
    {
        "number": 3028,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 2 2\") == \"-1\"\nassert solution(\"4 5 5\") == \"6\"\nassert solution(\"3 3 3\") == \"13\"\nassert solution(\"3 1 1\") == \"19\"\nassert solution(\"1 2 1\") == \"12\"\n"
    },
    {
        "number": 3028,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 5 5\n2 1 1 1 2\n5 3 4 4 3\n4 3 3 3 2\n3 1 3 3 1\n''') == '6'\nassert solution('''3 3 3\n3 1 1\n1 3 2\n3 2 3\n''') == '13'\nassert solution('''3 2 2\n1 2\n2 1\n1 2\n''') == '-1'\nassert solution('''3 2 3\n1 2\n2 1\n1 2\n''') == '4 2 6 1 9 7 5 5 7 1 2 3 3'\nassert solution('''8 8 8\n2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2\n''') == '24'"
    },
    {
        "number": 3028,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 4 2\") == \"1 2 4\"\nassert solution(\"2 4 5\") == \"2 1 4\"\nassert solution(\"1 2 1 1 2\") == \"3 2 6\"\nassert solution(\"3 3 3\") == \"-1\"\nassert solution(\"2 3 1\") == \"-1\"\n"
    },
    {
        "number": 3028,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 5 5\n2 1 1 1 2\n5 3 4 4 3\n4 3 3 3 2\n3 1 3 3 1\n''') == '6'\nassert solution('''3 3 3\n3 1 1\n1 3 2\n3 2 3\n''') == '13'\nassert solution('''3 2 2\n1 2\n2 1\n1 2\n''') == '-1'\nassert solution('''2 1 1\n1 2\n2 1\n''') == '-1'\nassert solution('''3 3 3\n3 1 1\n1 3 2\n3 2 3\n''') == '-1'\n"
    },
    {
        "number": 3028,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n3 1 3 3 1\\n3 1 3 3 1') == '6\\n19 12 2 18 5 5\\n'\nassert solution('3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\\n3 1 3\\n1 3 2\\n3 2 3') == '13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\\n'\nassert solution('3 2 2\\n1 2\\n2 1\\n1 2\\n3 2 3\\n3 1 3\\n1 3 2\\n3 2 3') == '-1\\n'"
    },
    {
        "number": 3028,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 5 5\n2 1 1 1 2\n5 3 4 4 3\n4 3 3 3 2\n3 1 3 3 1\n''') == '6\\n19 12 2 18 5 5'\nassert solution('''3 3 3\n3 1 1\n1 3 2\n3 2 3\n''') == '13\\n4 2 6 1 9 7 5 5 7 1 2 3 3'\nassert solution('''3 2 2\n1 2\n2 1\n1 2\n''') == '-1'\n"
    },
    {
        "number": 3029,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n5\n3\n3\n3\n3\n3\n1\n2\n3\n4\n''') == '5 1'\nassert solution('''\n7\n0\n1\n1\n2\n2\n3\n3\n3\n4\n''') == '3 2'\nassert solution('''\n10\n0\n1\n1\n2\n2\n3\n3\n4\n4\n5\n5\n5\n6\n''') == '5 1'\nassert solution('''\n8\n0\n1\n1\n2\n2\n3\n3\n3\n3\n3\n''') == '3 2'\nassert solution('''\n10\n0\n1\n1\n2\n2\n3\n3\n4\n5\n5\n5\n5\n5\n''') == '3 2'\n"
    },
    {
        "number": 3029,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5''') == '5 1'\nassert solution('''1''') == '1 1'\nassert solution('''0''') == '0 1'\nassert solution('''3''') == '3 1'\nassert solution('''0''') == '0 0'\n"
    },
    {
        "number": 3029,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n3\n3\n3\n3\n3\n1\n2\n3\n4''') == '5 1'\n\nassert solution('''5\n4\n3\n2\n1\n0\n1\n2\n3\n4''') == '3 2'\n\nassert solution('''7\n1\n5\n3\n7\n2\n4\n0\n6\n8''') == '1 5'\n\nassert solution('''8\n1\n3\n6\n7\n9\n2\n4\n0\n5''') == '2 3'\n\nassert solution('''9\n1\n4\n7\n8\n10\n3\n6\n5\n2\n0''') == '2 4'"
    },
    {
        "number": 3029,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 3029,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3029,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n5\n3\n3\n3\n3\n3\n1\n2\n3\n4\n'''\n) == '5 1'\n\nassert solution(\n'''\n5\n4\n3\n2\n1\n0\n1\n2\n3\n4\n'''\n) == '3 2'\n\nassert solution(\n'''\n4\n1\n5\n3\n6\n1\n2\n3\n'''\n) == '1 5'\n"
    },
    {
        "number": 3029,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n3\n3\n3\n3\n3\n1\n2\n3\n4\n''') == '5 1'\n\nassert solution('''5\n4\n3\n2\n1\n0\n1\n2\n3\n4\n''') == '3 2'\n\nassert solution('''10\n9\n8\n7\n6\n5\n4\n3\n2\n1\n0\n''') == '5 0'\n\nassert solution('''1000\n999\n998\n997\n996\n995\n994\n993\n992\n991\n990\n989\n988\n987\n986\n985\n984\n983\n982\n981\n980\n979\n979\n979\n978\n977\n977\n976\n976\n975\n974\n974\n974\n973\n973\n972\n972\n972\n972\n971\n970\n970\n970\n969\n969\n968\n966\n966\n966\n965\n965\n964\n963\n963\n963\n962\n962\n961\n960\n959\n959\n959\n958\n957\n957\n956\n956\n954\n954\n953\n953\n952\n952\n951\n950\n949\n948\n948\n947\n947\n946\n945\n945\n944\n944\n943\n943\n942\n942\n942\n941\n941\n940\n939\n939\n939\n939\n938\n937\n937\n937\n936\n936\n936\n936\n935\n935\n935\n935\n934\n934\n934\n934\n933\n933\n933\n933\n932\n932\n932\n932\n931\n930\n930\n930\n930\n929\n929\n929\n929\n928\n928\n928\n928\n927\n927\n927\n927\n926\n926\n926\n926\n925\n925\n925\n925\n925\n924\n924\n924\n924\n923\n923\n923\n923\n922\n922\n922\n922\n922\n921\n920\n920\n920\n920\n919\n919\n919\n919\n918\n918\n918\n918\n917\n917\n917\n917\n917\n916\n916\n916\n916\n916\n915\n915\n915\n915\n915\n915\n914\n914\n914\n914\n913\n913\n913\n913\n912\n912\n912\n912\n912\n912\n912\n911\n911\n911\n911\n911\n911\n911\n911\n911\n910\n910\n910\n910\n910\n910\n910\n910\n910\n910\n910\n910\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n909\n"
    },
    {
        "number": 3029,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '8 1'\nassert solution('4\\n0\\n2\\n3\\n1\\n4\\n2\\n5\\n3\\n6\\n7\\n8\\n9\\n10') == '2 2'\nassert solution('3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3') == '4 1'\nassert solution('4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4') == '2 1'\nassert solution('4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4') == '0 0'\n"
    },
    {
        "number": 3029,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10''') == '1 2'\nassert solution('''0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25''') == '1 5'\nassert solution('''0\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n"
    },
    {
        "number": 3029,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n3\n3\n3\n3\n3\n1\n2\n3\n4\n''') == '5 1'\nassert solution('''5\n4\n3\n2\n1\n0\n1\n2\n3\n4\n''') == '3 2'\nassert solution('''5\n3\n2\n1\n0\n1\n2\n3\n4\n''') == '1 5'\nassert solution('''5\n2\n3\n1\n0\n1\n2\n3\n4\n''') == '3 2'\nassert solution('''5\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '1 5'\n"
    },
    {
        "number": 3030,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n3 0\\n3 1\\n3 2\\n3 3\\n3 4\\n4 0\\n4 1\\n4 2\\n4 3\\n4 4\\n') == '1\\n'\nassert solution('6\\n3 0\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n') == '5\\n'\nprint('solution:', solution(''))\n"
    },
    {
        "number": 3030,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n0\\n1\\n1\\n1\\n1') == '1'\nassert solution('2\\n1\\n2\\n0\\n0\\n0') == '2'\nassert solution('3\\n1 0\\n1 1\\n2 1\\n2 2\\n3 2') == '3'\nassert solution('4\\n3 0\\n1 1\\n1 1\\n1 2\\n3 1\\n1 1\\n2 2\\n3 2\\n3 3') == '4'\nassert solution('5\\n1 0\\n1 1\\n1 1\\n1 1\\n1 2\\n1 2\\n1 3\\n1 3\\n1 4\\n1 4') == '5'\n"
    },
    {
        "number": 3030,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3030,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '1'\nassert solution('3 2') == '1'\nassert solution('3 2 4') == '2'\nassert solution('4 3') == '3'\n"
    },
    {
        "number": 3030,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n5\n3 0\n3 1\n3 2\n3 3\n3 4\n''') == '5'\nassert solution('''\n5\n4 0\n3 1\n2 2\n1 3\n0 4\n''') == '5'\nassert solution('''\n5\n4 0\n3 1\n2 2\n1 3\n0 4\n4 5\n''') == '5'\nassert solution('''\n5\n4 0\n3 1\n2 2\n1 3\n0 4\n4 5\n5 6\n''') == '5'\nassert solution('''\n5\n1 3\n0 1\n2 0\n3 1\n2 2\n4 3\n3 4\n''') == '4'\n"
    },
    {
        "number": 3030,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n5\n3 0\n3 1\n3 2\n3 3\n3 4\n''') == '5'\n\nassert solution(\n'''\n4\n4 0\n3 1\n2 2\n1 3\n0 4\n''') == '5'\n\nassert solution(\n'''\n10\n3 1\n2 2\n1 3\n1 5\n2 4\n5 6\n5 7\n3 8\n4 9\n5 8\n4 8\n3 4\n2 3\n1 2\n''') == '10'\n\nassert solution(\n'''\n6\n3 0\n1 1\n2 1\n3 1\n4 1\n5 1\nSample Output 3:\n5\n\n''') == '5'\n\nassert solution(\n'''\n10\n3 1\n2 2\n1 3\n1 5\n2 4\n5 6\n5 7\n3 8\n4 9\n5 8\n4 8\n3 4\n2 3\n1 2\n''') == '5'"
    },
    {
        "number": 3030,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n3 0\\n3 1\\n3 2\\n3 3\\n3 4\\n') == '1\\n'\nassert solution('5\\n4 0\\n3 1\\n2 2\\n1 3\\n0 4\\n') == '5\\n'\nassert solution('6\\n3 0\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n') == '5\\n'\nassert solution('7\\n1 0\\n2 1\\n3 2\\n4 3\\n5 4\\n6 5\\n7 6\\n') == '7\\n'\nassert solution('8\\n1 0\\n2 1\\n3 2\\n4 3\\n5 4\\n6 5\\n7 6\\n8 7\\n') == '8\\n'\n"
    },
    {
        "number": 3030,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2\\n') == '2'\nassert solution('1 2 3\\n') == '3'\nassert solution('1 2 3 4\\n') == '3'\nassert solution('1 2 3 4 5\\n') == '3'\nassert solution('1 2 3 4 5 6\\n') == '3'\n"
    },
    {
        "number": 3030,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3\\n1 2\\n3 0\\n1 3') == '1'\nassert solution('1\\n2\\n3\\n4\\n5') == '5'\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == '6'\nassert solution('10\\n9\\n8\\n7\\n6\\n5\\n4\\n3\\n2\\n1') == '1'\nassert solution('10\\n9\\n8\\n7\\n6\\n5\\n4\\n3\\n2\\n1\\n0') == '1'\n"
    },
    {
        "number": 3030,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6\\n3 0\\n3 1\\n2 1\\n1 3\\n0 4') == '5'\nassert solution('5\\n3 0\\n3 1\\n3 2\\n3 3\\n3 4') == '1'\nassert solution('6\\n3 0\\n3 1\\n2 1\\n1 3\\n0 4') == '5'\nassert solution('4\\n3 0\\n3 1\\n2 1\\n1 3\\n0 4') == '5'\nassert solution('1\\n1') == '1'\n"
    },
    {
        "number": 3031,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8\n1 3 1\n2 3 1\n3 4 3\n4 5 4\n5 6 3\n6 7 2\n6 8 2\n''') == '4'\nassert solution('''8\n1 2 2\n1 3 1\n2 4 3\n2 7 1\n3 5 2\n5 6 2\n7 8 1\n''') == '0'\nassert solution('''9\n1 2 2\n1 3 1\n1 4 5\n1 5 5\n2 6 3\n3 7 3\n4 8 1\n5 9 2\n''') == '5'\n"
    },
    {
        "number": 3031,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 3 1\\n2 3 1\\n3 4 3\\n4 5 4\\n5 6 3\\n6 7 2\\n6 8 2\\n7 8 1\\n8 9 2') == '4\\n3\\n4\\n5\\n6\\n7\\n'\nassert solution('1 2 2\\n1 3 1\\n2 4 3\\n2 7 1\\n3 5 2\\n5 6 2\\n7 8 1\\n8 9 2') == '0\\n'\nassert solution('1 2 2\\n1 3 1\\n2 4 3\\n2 7 1\\n3 5 2\\n5 6 2\\n7 8 1\\n8 9 2\\n9 10 2\\n10 11 2\\n11 12 2') == '5\\n1\\n2\\n3\\n6\\n7\\n8\\n'\nassert solution('1 2 2\\n1 3 1\\n2 4 3\\n2 7 1\\n3 5 2\\n5 6 2\\n7 8 1\\n8 9 2\\n9 10 2\\n10 11 2\\n11 12 2\\n12 13 2\\n13 14 2') == '5\\n1\\n2\\n3\\n6\\n7\\n8\\n9\\n'\nassert solution('1 2 2\\n1 3 1\\n2 4 3\\n2 7 1\\n3 5 2\\n5 6 2\\n7 8 1\\n8 9 2\\n9 10 2\\n10 11 2\\n11 12 2\\n12 13 2\\n13 14 2\\n14 15 2\\n15 16 2') == '5\\n1\\n2\\n3\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n'\n"
    },
    {
        "number": 3031,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''8\n1 3 1\n2 3 1\n3 4 3\n4 5 4\n5 6 3\n6 7 2\n6 8 2\n7 8 1''') == '4'\nassert solution('''9\n1 2 2\n1 3 1\n1 4 5\n1 5 5\n2 6 3\n3 7 3\n4 8 1\n5 9 2\nSample Output 3''') == '5'\nassert solution('''10\n1 2 2\n1 3 1\n1 4 5\n1 5 5\n2 6 3\n3 7 3\n4 8 1\n5 9 2\n6 10 2\n7 11 1\n8 12 2\n9 12 1\nSample Output 4''') == '1'\nassert solution('''1\n1 2 2\n1 3 1\n1 4 5\n1 5 5\n2 6 3\n3 7 3\n4 8 1\n5 9 2\n6 10 2\n7 11 1\n8 12 2\n9 12 1\n10 12 1\nSample Output 5''') == '0'\nassert solution('''8\n1 2 2\n1 3 1\n1 4 5\n1 5 5\n2 6 3\n3 7 3\n4 8 1\n5 9 2\n6 10 2\n7 11 1\n8 12 2\n9 12 1''') == '4'\n"
    },
    {
        "number": 3031,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 2 2\n1 3 1\n2 4 3\n2 7 1\n3 5 2\n5 6 2\n7 8 1\n9 2 2''') == '4'\nassert solution('''1 2 2\n1 3 1\n2 4 3\n2 7 1\n3 5 2\n5 6 2\n7 8 1\n9 2 2\n10 3 1\n11 4 3\n12 6 1\n13 7 3\n14 8 1\n15 9 2\n16 10 3\n17 11 4\n18 12 5\n19 13 6\n20 14 7\n21 15 8\n22 16 9\n23 17 10\n24 18 11\n25 19 12\n26 20 13\n27 21 14\n28 22 15\n29 23 16\n30 24 17\n31 25 18\n32 26 19\n33 27 20\n34 28 21\n35 29 22\n36 30 23\n37 31 24\n38 32 25\n39 33 26\n40 34 27\n41 35 28\n42 36 29\n43 37 30\n44 38 31\n45 39 32\n46 40 33\n47 41 34\n48 42 35\n49 43 36\n50 44 37\n51 45 38\n52 46 39\n53 47 40\n54 48 41\n55 49 42\n56 50 43\n57 51 44\n58 52 45\n59 53 46\n60 54 47\n61 55 48\n62 56 49\n63 57 50\n64 58 51\n65 59 52\n66 60 53\n67 61 54\n68 62 55\n69 63 56\n70 64 57\n71 65 58\n72 66 59\n73 67 60\n74 68 61\n75 69 62\n76 70 63\n77 71 64\n78 72 65\n79 73 66\n80 74 67\n81 75 68\n82 76 69\n83 77 70\n84 78 71\n85 79 72\n86 80 73\n87 81 74\n88 82 75\n89 83 76\n90 84 77\n91 85 78\n92 86 79\n93 87 80\n94 88 81\n95 89 82\n96 90 83\n97 91 84\n98 92 85\n99 93 86\n100 99 85\n101 100 86\n102 101 87\n103 102 88\n104 103 89\n105 104 90\n106 105 91\n107 106 92\n108 107 93\n109 108 94\n110 109 95\n111 111 96\n112 112 97\n113 113 98\n114 114 99\n115 115 100\n116 116 101\n117 117 102\n118 118 103\n119 119 104\n120 121 105\n121 122 106\n122 123 107\n123 124 108\n124 125 109\n125 126 110\n126 127 111\n127 128 112\n128 129 113\n129 130 114\n130 131 115\n131 132 116\n132 133 117\n133 134 118\n134 135 119\n135 136 120\n136 137 121\n137 138 122\n138 139 123\n139 140 124\n140 141 125\n141 142 126\n141 143 127\n143 144 128\n144 145 129\n145 146 130\n146 147 131\n147 148 132\n147 149 133\n147 150 134\n147 151 135\n147 152 136\n147 153 137\n147 154 138\n147 155 139\n147 156 140\n147 157 141\n147 158 142\n147 159 143\n147 160 144\n147 161 145\n147 162 146\n147 163 147\n147 164 148\n147 165 149\n147 166 150\n147 167 151\n147 168 152\n147 169 153\n147 170 154\n147 171 155\n147 172 156\n147 173 157\n147 174 158\n147 175 159\n147 176 160\n147 177 161\n147 178 162\n147 179 163\n147 180 164\n147 181 165\n147 182 166\n147 183 167\n147 184 168\n147 185 169\n147 186 170\n147 187 171\n147 188 172\n147 189 173\n147 190 174\n147 191 175\n147 192 176\n147 193 177\n147 194 178\n147 195 179\n147 196 180\n147 197 181\n147 198 182\n147 199 183\n147 200 184\n147 201 185\n147 202 186\n147 203 187\n147 204 188\n147 205 189\n147 206 190\n147 207 191\n147 208 192\n147 209 193\n147 210 194\n147 211 195\n147 212 196\n147 213 197\n147 214 198\n147 215 199\n147 216 200\n147 217 201\n147 218 202\n147 219 203\n147 220 204\n147 221 205\n147 222 206\n147 223 207\n147 224 208\n147 225 209\n147 226 210\n147 227 211\n147 228 212\n147 229 213\n147 230 214\n147 231 215\n147 232 216\n147 233 217\n147 234 218\n147 235 219\n147 236 220\n147 237 221\n147 238 222\n147 239 223\n147 240 224\n147 241 225\n147 242 226\n147 243 227\n147 244 228\n147 245 229\n147 246 230\n147 247 231\n147 248 232\n147 249 233\n147 250 234\n147 251 235\n147 252 236\n147 253 237\n147 254 238\n147 255 239\n147 256 240\n147 257 241\n147 258 242\n147 259 243\n147 260 244\n147 261 245\n147 262 246\n147 263 247\n147 264 248\n147 265 249\n147 266 250\n147 267 251\n147 268 252\n147 269 253\n147 270 254\n147 271 255\n147 272 256\n147 273 257\n147 274 258\n147 275 259\n147 276 260\n147 277 261\n147 278 262\n147 279 263\n147 280 264\n147 281 265\n147 282 266\n147 283 267\n147 284 268\n147 285 269\n147 286 270\n147 287 271\n147 288 272\n147 289 273\n147 290 274\n147 291 275\n147 292 276\n147 293 277\n147 294 278\n147 295 279\n147 296 280\n147 297 281\n147 298 282\n147 299 283\n147 300 284\n147 301 285\n147 302 286\n147 303 287\n147 304 288\n147 305 289\n147 306 290\n147 307 291\n147 308 292\n147 309 293\n147 310 294\n147 311 295\n147 312 296\n147 313 297\n147 314 298\n147 315 299\n147 316 300\n147 317 301"
    },
    {
        "number": 3031,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3031,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n8\n1 3 1\n2 3 1\n3 4 3\n4 5 4\n5 6 3\n6 7 2\n6 8 2\n''') == '4'\nassert solution('''\n8\n1 2 2\n1 3 1\n1 4 5\n1 5 5\n2 6 3\n3 7 3\n4 8 1\n5 9 2\n''') == '0'\nassert solution('''\n9\n1 2 2\n1 3 1\n1 4 5\n1 5 5\n2 6 3\n3 7 3\n4 8 1\n5 9 2\n''') == '5'\nassert solution('''\n8\n1 2 2\n1 3 1\n1 4 5\n1 5 5\n2 6 3\n3 7 3\n4 8 1\n5 9 2\n''') == '1'\nassert solution('''\n8\n1 2 2\n1 3 1\n1 4 5\n1 5 5\n2 6 3\n3 7 3\n4 8 1\n5 9 2\n''') == '2'\n"
    },
    {
        "number": 3031,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n8\n1 3 1\n2 3 1\n3 4 3\n4 5 4\n5 6 3\n6 7 2\n6 8 2\n\"\"\") == \"\"\"\n4\n3\n4\n5\n6\n\"\"\".strip()\n\nassert solution(\n\"\"\"\n1\n1 2 2\n1 3 1\n2 4 3\n2 7 1\n3 5 2\n5 6 2\n7 8 1\n\"\"\") == \"\"\"\n0\n\"\"\".strip()\n\nassert solution(\n\"\"\"\n1\n1 2 2\n1 3 1\n2 4 3\n2 7 1\n3 5 2\n5 6 2\n7 8 1\n\"\"\") == \"\"\"\n5\n1\n2\n3\n6\n7\n\"\"\".strip()\n\nassert solution(\n\"\"\"\n5\n1 2 2\n1 3 1\n2 4 3\n2 7 1\n3 5 2\n5 6 2\n7 8 1\n\"\"\") == \"\"\"\n5\n1\n2\n3\n6\n7\n\"\"\".strip()\n\nassert solution(\n\"\"\"\n5\n1 2 2\n1 3 1\n2 4 3\n2 7 1\n3 5 2\n5 6 2\n7 8 1\n\"\"\") == \"\"\"\n5\n1\n2\n3\n6\n7\n\"\"\".strip()"
    },
    {
        "number": 3031,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''8\n1 3 1\n2 3 1\n3 4 3\n4 5 4\n5 6 3\n6 7 2\n6 8 2\n''') == '4\\n3\\n4\\n5\\n6\\n7'\nassert solution('''8\n1 2 2\n1 3 1\n2 4 3\n2 7 1\n3 5 2\n5 6 2\n7 8 1\n''') == '0\\n1\\n2\\n3\\n6\\n7'\n\nprint('passed')\n\n\"\"\""
    },
    {
        "number": 3031,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"9\\n1 2 2\\n1 3 1\\n2 4 3\\n2 7 1\\n3 5 2\\n5 6 2\\n7 8 1\\n9 9 2\") == \"5\\n1\\n2\\n3\\n6\\n7\\n\"\nassert solution(\"8\\n1 3 1\\n2 3 1\\n3 4 3\\n4 5 4\\n5 6 3\\n6 7 2\\n6 8 2\\n7 8 1\") == \"4\\n3\\n4\\n5\\n6\\n\"\nassert solution(\"8\\n1 2 2\\n1 3 1\\n2 4 3\\n2 7 1\\n3 5 2\\n5 6 2\\n7 8 1\") == \"0\\n\"\nassert solution(\"9\\n1 2 2\\n1 3 1\\n1 4 5\\n1 5 5\\n2 6 3\\n3 7 3\\n4 8 1\\n5 9 2\") == \"5\\n1\\n2\\n3\\n6\\n7\\n\"\nassert solution(\"8\\n1 2 2\\n1 3 1\\n2 4 3\\n2 7 1\\n3 5 2\\n5 6 2\\n7 8 1\") == \"4\\n3\\n4\\n5\\n6\\n\"\n"
    },
    {
        "number": 3031,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"8\n1 3 1\n2 3 1\n3 4 3\n4 5 4\n5 6 3\n6 7 2\n6 8 2\n7 8 1\n\"\"\"\n    ) == '4\\n3\\n4\\n5\\n6\\n7\\n'\n\nassert solution(\n\"\"\"8\n1 2 2\n1 3 1\n2 4 3\n2 7 1\n3 5 2\n5 6 2\n7 8 1\n\"\"\"\n    ) == '5\\n1\\n2\\n3\\n6\\n7\\n'\n\nassert solution(\n\"\"\"9\n1 2 2\n1 3 1\n1 4 5\n1 5 5\n2 6 3\n3 7 3\n4 8 1\n5 9 2\n\"\"\"\n    ) == '5\\n1\\n2\\n3\\n6\\n7\\n'\n\nassert solution(\n\"\"\"9\n1 2 2\n1 3 1\n1 4 5\n1 5 5\n2 6 3\n3 7 3\n4 8 1\n5 9 2\n\"\"\"\n    ) == '5\\n1\\n2\\n3\\n6\\n7\\n'\n\nassert solution(\n\"\"\"9\n1 2 2\n1 3 1\n1 4 5\n1 5 5\n2 6 3\n3 7 3\n4 8 1\n5 9 2\n\"\"\"\n    ) == '5\\n1\\n2\\n3\\n6\\n7\\n'"
    },
    {
        "number": 3032,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2\\nV1 V2 V1 V1 V2\\n') == '5\\n'\nassert solution('2 1\\nV1 V2 V1 V1 V2\\n') == '6\\n'\nassert solution('1 2\\nR10 V1 V2 V1 E\\n') == '30\\n'\nassert solution('2 1\\nR10 V1 V2 V1 E\\n') == '30\\n'\nassert solution('1 2\\nV1 V2 V1 V1 V2\\n') == '5\\n'\n"
    },
    {
        "number": 3032,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 2\nV1 V2 V1 V1 V2''') == '5'\nassert solution('''2 1\nV1 V2 V1 V1 V2''') == '6'\nassert solution('''1 2\nR10 V1 V2 V1 E''') == '30'\nassert solution('''2 1\nR10 V1 V2 V1 E''') == '30'\nassert solution('''2 1\nV1 V2 V1 V1 V2''') == '6'\n"
    },
    {
        "number": 3032,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"V1 V2 V1 V1 V2\") == \"5\"\nassert solution(\"R10 V1 V2 V1 E\") == \"30\"\nassert solution(\"V1 V2 V1 V1 V2\") == \"6\"\nassert solution(\"R10 V1 V2 V1 E\") == \"30\"\nassert solution(\"V1 V2 V1 V1 V2\") == \"6\"\n"
    },
    {
        "number": 3032,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"5\"\nassert solution(\"2 1\") == \"6\"\nassert solution(\"1 2\") == \"5\"\nassert solution(\"2 1\") == \"6\"\nassert solution(\"1 2\") == \"5\"\n"
    },
    {
        "number": 3032,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(TEST_INPUT_1) == TEST_RESULT_1\nassert solution(TEST_INPUT_2) == TEST_RESULT_2\nassert solution(TEST_INPUT_3) == TEST_RESULT_3\nprint(solution(INPUT))\n'''\n\nimport sys\n"
    },
    {
        "number": 3032,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2\\nV1 V2 V1 V1 V2\\n') == '5'\nassert solution('2 1\\nV1 V2 V1 V1 V2\\n') == '6'\nassert solution('1 2\\nR10 V1 V2 V1 E\\n') == '30'\n\n'''\n\nfrom heapq import heappush, heappop\n"
    },
    {
        "number": 3032,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') is None\nassert solution('1 2\\nV1 V2 V1 V1 V2\\n') == '5'\nassert solution('2 1\\nV1 V2 V1 V1 V2\\n') == '6'\nassert solution('1 2\\nV1 V2 V1 E\\n') == '30'\nassert solution('1 2\\nR10 V1 V2 V1 E\\n') == '30'\n"
    },
    {
        "number": 3032,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n1 2\nV1 V2 V1 V1 V2\n''') == '5'\nassert solution(\n'''\n2 1\nV1 V2 V1 V1 V2\n''') == '6'\nassert solution(\n'''\n1 2\nR10 V1 V2 V1 E\n''') == '30'\nassert solution(\n'''\n2 1\nR10 V1 V2 V1 E\n''') == '30'\nassert solution(\n'''\n1 2\nR2 V1 V2 V1 V1 V2\n''') == '5'\n"
    },
    {
        "number": 3032,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2\\nV1 V2 V1 V1 V2\\n') == '5'\nassert solution('2 1\\nV1 V2 V1 V1 V2\\n') == '6'\nassert solution('1 2\\nR10 V1 V2 V1 E\\n') == '30'\n"
    },
    {
        "number": 3032,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 2\nV1 V2 V1 V1 V2''') == '5'\nassert solution('''2 1\nV1 V2 V1 V1 V2''') == '6'\nassert solution('''1 2\nV1 V2 V1 V1 V2''') == '30'\nassert solution('''2 3\n
    },
    {
        "number": 3033,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 10') == 'impossible'\nassert solution('1 10') == 'impossible'\nassert solution('1 10') == 'impossible'\nassert solution('1 10') == 'impossible'\nassert solution('1 10') == 'impossible'\n"
    },
    {
        "number": 3033,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '38'\n"
    },
    {
        "number": 3033,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3033,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    '10 24'\n) == '38'\n\nassert solution(\n    '10 11'\n) == 'impossible'\n\nassert solution(\n    '9 216'\n) == '546'\n"
    },
    {
        "number": 3033,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output\nprint(solution(stdin))\n"
    },
    {
        "number": 3033,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"10 24\") == \"38\"\nassert solution(\"10 11\") == \"impossible\"\nassert solution(\"9 216\") == \"546\"\nassert solution(\"1 99999\") == \"impossible\"\nassert solution(\"1 707812\") == \"impossible\"\n"
    },
    {
        "number": 3033,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3033,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10 24''') == '38'\nassert solution('''10 11''') == 'impossible'\nassert solution('''9 216''') == '546'\nassert solution('''7 35''') == '2'\nassert solution('''45 21''') == '8'\n"
    },
    {
        "number": 3033,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10 24') == '38'\nassert solution('10 11') == 'impossible'\nassert solution('9 216') == '546'\n\nprint('Test cases passed.')\n"
    },
    {
        "number": 3033,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"10 24\") == \"38\"\nassert solution(\"10 11\") == \"impossible\"\nassert solution(\"9 216\") == \"546\""
    },
    {
        "number": 3034,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''20 60 2 1\n5 15 0.33333 30\n22 60 0.66667 70\n0 10''') == '466.662'\nassert solution('''3 4 2 1\n1 3 0.25 8\n2 4 0.66667 15\n1 2''') == '10.00005'\n"
    },
    {
        "number": 3034,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('20 60 2 1') == '466.662'\nassert solution('3 4 2 1') == '10.00005'\nassert solution('0 1 1 0') == '2.0'\nassert solution('3 4 1 0') == '2.0'\nassert solution('0 10') == '2.0'\n\n\"\"\"\n"
    },
    {
        "number": 3034,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n20 60 2 1\n5 15 0.33333 30\n22 60 0.66667 70\n0 10\n''') == \"466.662\"\nassert solution(\n'''\n3 4 2 1\n1 3 0.25 8\n2 4 0.66667 15\n1 2\n''') == \"10.00005\"\nassert solution(\n'''\n3 4 1 0\n0 2 0.25 8\n2 4 0.66667 15\n1 2\n''') == \"2.0\"\n"
    },
    {
        "number": 3034,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4') == '0.5'\nassert solution('0 0 0') == '0'\nassert solution('0 0 1') == '0.5'\nassert solution('0 0 1 0') == '1.0'\nassert solution('0 0 1 1') == '0.5'\n"
    },
    {
        "number": 3034,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"20 60 2 1\") == \"466.662\"\nassert solution(\"3 4 2 1\") == \"10.00005\"\nassert solution(\"3 4 2 1\") == \"10.00005\"\nassert solution(\"3 4 2 1\") == \"10.00005\"\nassert solution(\"3 4 2 1\") == \"10.00005\"\n"
    },
    {
        "number": 3034,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"d,t,c,r=20,60,2,1\") == \"466.662\"\nassert solution(\"d,t,c,r=3,4,2,1\") == \"10.00005\"\nassert solution(\"d,t,c,r=2,2,1,0\") == \"2.0\"\nassert solution(\"d,t,c,r=3,3,0.33333,3\") == \"10.0001\"\nassert solution(\"d,t,c,r=3,4,0.33333,3\") == \"8.99899\"\n"
    },
    {
        "number": 3034,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3034,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''20 60 2 1\n5 15 0.33333 30\n22 60 0.66667 70\n0 10''') == '466.662'\nassert solution('''3 4 2 1\n1 3 0.25 8\n2 4 0.66667 15\n1 2''') == '10.00005'\nassert solution('''3 4 1 0\n0 2 0.25 8\n2 4 0.66667 15\n1 2''') == '2.0'\n'''\n'''"
    },
    {
        "number": 3034,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('20 60 2 1\\n5 15 0.33333 30\\n22 60 0.66666 70\\n0 10\\n') == '466.662'\nassert solution('3 4 2 1\\n1 3 0.25 8\\n2 4 0.66667 15\\n1 2\\n') == '10.00005'\n"
    },
    {
        "number": 3034,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''20 60 2 1''') == '466.662'\nassert solution('''3 4 2 1''') == '10.00005'\nassert solution('''3 4 1 0''') == '2.0'\nassert solution('''0 2 0.25 8''') == '2.0'\nassert solution('''1 3 0.25 8''') == '10.00005'\n"
    },
    {
        "number": 3035,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\nblue pink 1.0\nred pink 1.5\nblue red 1.0\n''') == '1.500000000000000'\nassert solution('''2\nblue red 1.0\nred pink 1.5\n''') == '0.000000000000000'\nassert solution('''4\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9\n''') == '10.000000000000000'\nassert solution('''2\nblue red 1.0\nred pink 1.5\n''') == '0.000000000000000'\nassert solution('''1\nblue red 1.0\n''') == '0.000000000000000'\n"
    },
    {
        "number": 3035,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n3\nblue pink 1.0\nred pink 1.5\nblue red 1.0\n''') == '1.500000000000000'\nassert solution(\n'''\n2\nblue red 1.0\nred pink 1.5\n''') == '0.000000000000000'\nassert solution(\n'''\n4\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9\n''') == '10.000000000000000'\n"
    },
    {
        "number": 3035,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''blue pink 1.0\nred pink 1.5\nblue red 1.0\n''') == '1.500000000000000'\nassert solution('''blue red 1.0\nred pink 1.5\nblue pink 1.0\n''') == '0.000000000000000'\nassert solution('''blue red 1.0\nred pink 1.5\nblue pink 1.0\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9\n''') == '10.000000000000000'\nassert solution('''blue red 1.0\nred pink 1.5\nblue pink 1.0\ngreen yellow 1.9\ngreen yellow 1.9\nblue green 1.9\n''') == '10.000000000000000'\nassert solution('''blue red 1.0\nred pink 1.5\nblue pink 1.0\nred pink 1.5\nblue red 1.0\n''') == '10.000000000000000'\n"
    },
    {
        "number": 3035,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '10.000000000000000'\n"
    },
    {
        "number": 3035,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\nblue pink 1.0\nred pink 1.5\nblue red 1.0''') == '1.500000000000000'\nassert solution('''2\nblue red 1.0\nred pink 1.5''') == '0.000000000000000'\nassert solution('''4\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9''') == '10.000000000000000'\nprint('All test cases passed successfully.')\n"
    },
    {
        "number": 3035,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\n"
    },
    {
        "number": 3035,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\nblue pink 1.0\nred pink 1.5\nblue red 1.0''') == '1.500000000000000'\nassert solution('''2\nblue red 1.0\nred pink 1.5\n''') == '0.000000000000000'\nassert solution('''4\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9''') == '10.000000000000000'\n"
    },
    {
        "number": 3035,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\nblue pink 1.0\nred pink 1.5\nblue red 1.0''') == '1.500000000000000'\nassert solution('''2\nblue red 1.0\nred pink 1.5''') == '0.000000000000000'\nassert solution('''4\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9''') == '10.000000000000000'\nassert solution('''3\nblue red 1.0\nred pink 1.5\nblue red 1.0''') == '1.500000000000000'\nassert solution('''4\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9''') == '10.000000000000000'\n"
    },
    {
        "number": 3035,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"3\nblue pink 1.0\nred pink 1.5\nblue red 1.0\n\"\"\") == \"1.500000000000000\"\nassert solution(\"\"\"2\nblue red 1.0\nred pink 1.5\n\"\"\") == \"0.000000000000000\"\nassert solution(\"\"\"4\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9\n\"\"\") == \"10.000000000000000\"\nassert solution(\"\"\"3\ngreen yellow 1.0\ngreen yellow 1.5\ngreen yellow 1.8\n\"\"\") == \"1.0000000000000000\"\nassert solution(\"\"\"1\nblue red 1.0\nred pink 1.5\nblue red 1.0\n\"\"\") == \"0.0000000000000000\"\n"
    },
    {
        "number": 3035,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''blue red 1.0\nred pink 1.5\nblue red 1.0''') == '1.500000000000000'\nassert solution('''blue red 1.0\nred pink 1.5\nblue red 1.0\nblue red 1.0\nblue red 1.0\nblue red 1.0''') == '1.000000000000000'\nassert solution('''blue red 1.0\nred pink 1.5\nblue red 1.0\nblue red 1.0\nblue red 1.0\nblue red 1.0''') == '1.000000000000000'\nassert solution('''blue red 1.0\nred pink 1.5\nblue red 1.0\nblue red 1.0\nblue red 1.0\nblue red 1.0\nblue red 1.0\nblue red 1.0\nblue red 1.0\nblue red 1.0\nblue red 1.0\nblue red 1.0\nblue red 1.0\nblue red 1.0''') == '1.000000000000000'\nassert solution('''blue red 1.0\nred pink 1.5\nblue red 1.0\nblue red 1.0\nblue red 1.0\nblue red 1.0\nblue red 1.0\nblue red 1.0\nblue red 1.0\nblue red 1.0\nblue red 1.0\nblue red 1.0\nblue red 1.0\nblue red 1.0\nblue red 1.0\nblue red 1.0\nblue red 1.0\nblue red 1.0\nblue red 1.0\nblue red 1.0\nblue red 1.0''') == '1.000000000000000'\n"
    },
    {
        "number": 3036,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n''') == '180'\nassert solution('''3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\n''') == '22'\nassert solution('''3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n1 2\n1 3\n1 1\n2 3\n''') == '0'\nassert solution('''3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n1 2\n1 3\n1 1\n2 3\n''') == '0'\nassert solution('''3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n1 2\n1 3\n1 1\n2 3\n''') == '0'\n"
    },
    {
        "number": 3036,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''6 1 1 1 0''') == '180'\nassert solution('''2 3 1 5 3 2\n2 1 2\n3 3 4 5''') == '22'\nassert solution('''3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1''') == '0'\n"
    },
    {
        "number": 3036,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n''') == '180'\nassert solution(\n'''\n3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\n''') == '22'\nassert solution(\n'''\n3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n''') == '0'\n"
    },
    {
        "number": 3036,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n2 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n''') == '180'\nassert solution(\n'''\n3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\n''') == '22'\n"
    },
    {
        "number": 3036,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3036,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n\"\"\"\n    ) == '180'\n\nassert solution(\n    \"\"\"\n3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\n\"\"\"\n    ) == '22'\n\nassert solution(\n    \"\"\"\n3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n\"\"\"\n    ) == '0'\n"
    },
    {
        "number": 3036,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin1) == '180'\nassert solution(stdin2) == '22'\nassert solution(stdin3) == '0'\nassert solution(stdin4) == 'too many'\nassert solution(stdin5) == '100'\n"
    },
    {
        "number": 3036,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n''') == '180'\nassert solution('''\n3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\n''') == '22'\nassert solution('''\n3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n''') == '0'\nassert solution('''\n3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n''') == '0'\nassert solution('''\n3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n''') == '0'\n"
    },
    {
        "number": 3036,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n''') == '180'\nassert solution('''3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\n''') == '22'\nassert solution('''3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n''') == '0'\n"
    },
    {
        "number": 3036,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1 1 1') == '180'\nassert solution('2 3 1 5 3 2') == '180'\nassert solution('2 1 2') == '22'\nassert solution('3 3 4 5') == '0'\nassert solution('1 6') == 'too many'\n"
    },
    {
        "number": 3037,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1\\n') == '-1 -1'\nassert solution('1\\n1\\n2\\n') == '-1 -1'\nassert solution('2\\n1\\n1\\n') == '2 2'\nassert solution('2\\n2\\n1\\n') == '-1 -1'\nassert solution('3\\n2\\n1\\n') == '3 3'\n"
    },
    {
        "number": 3037,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"...#....\\n........\\n.......\\n......#.\\n......#.\\n#..#...#\\n#..#...#\\n#..#####\\n#..#...#\\n#..#...#\\n#..#...#\\n#..#...#\\n#..#####\\n#..#...#\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#...#\\n#..#...#\\n#..#####\\n#..#...#\\n#..#...#\\n#..#####\\n#..#...#\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\n#..#...#\\n#..#####\\"
    },
    {
        "number": 3037,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 8 5') == '20 20'\nassert solution('6 8 5') == '17 17'\nassert solution('6 8 5') == '-1 -1'\nassert solution('6 8 5') == '-1 -1'\nassert solution('3 3 2') == '-1 -1'\n"
    },
    {
        "number": 3037,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\n' == '20 20')\nassert solution('3 3 2\\n...\\n.#.\\n...\\nup 2\\nright 2\\n' == '-1 -1')\nassert solution('6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\n' == '20 20')\nassert solution('6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\n' == '-1 -1')\nassert solution('6 8 5\\n........\\n.#.###.\\n#..#...#\\n#..#####\\n.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\n' == '-1 -1')\n"
    },
    {
        "number": 3037,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''6 8 5\n........\n...#....\n########\n"
    },
    {
        "number": 3037,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\n\") == \"20 20\"\n\"\"\"\n"
    },
    {
        "number": 3037,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6 8 5') == '20 20'\nassert solution('6 8 5') == '17 17'\nassert solution('3 3 2') == '-1 -1'\nassert solution('1 1 1') == '-1 -1'\nassert solution('3 4 1') == '2 3'\n"
    },
    {
        "number": 3037,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n6 8 5\n........\n...#....\n########\n"
    },
    {
        "number": 3037,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6 8 5') == '20 20'\nassert solution('3 3 2') == '17 17'\nassert solution('3 3 2\\n....\\n...\\n...\\n.###\\n.##.\\n.##.\\n...\\n...\\n...\\n....\\n....') == '17 17'\nassert solution('4 6 1\\n#.##.#\\n#..###\\n#.#.#.\\n.#...#\\n#.#...#\\n.#.#.#.\\n#...#.#\\n#####.#\\n.....#.#') == '14 21'\nassert solution('2 2 1\\n...\\n....') == '-1 -1'\n"
    },
    {
        "number": 3037,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6 8 5\n........\n...#....\n########\n"
    },
    {
        "number": 3038,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\") == \"impossible\"\nassert solution(\"310\\n3\\n2 40 65\\n2 100 150\\n2 300 320\") == \"300\"\nassert solution(\"90\\n2\\n2 20 35\\n2 88 200\") == \"88\"\nassert solution(\"100\\n2\\n2 20 35\\n2 88 200\") == \"impossible\"\nassert solution(\"42\\n1\\n1 1\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 3038,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    371\n    3\n    2 40 65\n    2 100 150\n    2 300 320\n    \"\"\"\n) == \"300\"\n\nassert solution(\n    \"\"\"\n    310\n    3\n    2 40 65\n    2 100 150\n    2 300 320\n    \"\"\"\n) == \"impossible\"\n\nassert solution(\n    \"\"\"\n    90\n    2\n    2 20 35\n    2 88 200\n    \"\"\"\n) == \"88\"\n\nassert solution(\n    \"\"\"\n    110\n    2\n    2 50 90\n    2 30 60\n    \"\"\"\n) == \"30\"\n\nassert solution(\n    \"\"\"\n    100\n    2\n    2 50 90\n    2 30 60\n    \"\"\"\n) == \"50\""
    },
    {
        "number": 3038,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3038,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n10\n2\n2 10 35\n2 88 200\n2 300 320\n''') == '88'\nassert solution('''\n5\n2\n2 10 35\n2 88 200\n2 300 320\n''') == 'impossible'\nassert solution('''\n30\n3\n2 20 35\n2 88 200\n2 300 320\n''') == 'impossible'\nassert solution('''\n100\n2\n2 10 35\n2 88 200\n2 300 320\n''') == 'impossible'\nassert solution('''\n91\n2\n2 10 35\n2 88 200\n2 300 320\n''') == 'impossible'\n"
    },
    {
        "number": 3038,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\") == \"impossible\"\nassert solution(\"2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\"
    },
    {
        "number": 3038,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n2\\n2 3\\n2 1 3\\n2 4 4 2\\n2 4 4 2') == '3\\n2'\nassert solution('2\\n2\\n2 3\\n2 1 3\\n2 4 4 2\\n2 4 4 2') == 'impossible'\nassert solution('1\\n1\\n1 1\\n1 1 1 1\\n1 1 1 1') == '1'\nassert solution('1\\n1\\n1 1\\n1 1 1 1\\n1 1 1 1') == '1'\nassert solution('1\\n1\\n1 1\\n1 1 1 1\\n1 1 1 1') == '1'\n"
    },
    {
        "number": 3038,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"impossible\"\nassert solution(\"2\") == \"impossible\"\nassert solution(\"3\") == \"impossible\"\nassert solution(\"4\") == \"impossible\"\n"
    },
    {
        "number": 3038,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n') == 'impossible'\nassert solution('310\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n') == '300'\nassert solution('90\\n2\\n2 20 35\\n2 88 200\\n') == '88'\nassert solution('1000\\n1\\n10 9 40 17 60 26 22 37 100 142 42 156 132 127 64 34 96 30 65 67 58 17 24 91 46 89 36 91 47 73 93 76 85 92 59 22 71 56 62 58 14 51 52 30 54 50 57 26 21 27 52 87 89 52 92 51 17 25 86 18 86 48 65 59 70 57 31 32 33 82 83 83 35 89 73 74 71 45 47 42 65 57 33 27 68 18 48 65 39 50 35 34 31 66 58 38 49 51 56 60 49 69 56 34 65 79 52 46 55 51 40 57 33 52 33 58 50 39 49 47 38 37 76 71 30 30 30 69 56 35 74 57 39 31 48 64 31 39 57 39 74 66 73 40 59 70 31 37 44 36 63 59 48 71 41 33 50 51 40 61 39 51 59 38 42 74 61 34 57 40 62 48 49 48 57 65 76 41 61 48 44 71 37 48 50 45 43 40 50 33 52 33 59 60 59 49 64 57 39 50 61 33 59 61 49 62 49 68 56 63 49 63 61 32 40 50 64 43 40 54 40 57 50 48 71 60 41 30 33 70 45 50 52 43 44 45 47 39 43 58 39 49 51 39 30 32 29 58 44 54 31 39 22 78 26 89 57 50 22 62 50 62 57 58 50 52 32 48 46 64 61 57 31 49 61 30 44 45 65 74 65 48 56 57 19 26 22 28 65 35 66 78 56 34 26 22 37 85 35 25 30 34 30 22 16 71 30 26 57 62 41 22 41 59 29 66 60 57 48 37 84 36 68 56 33 47 46 57 57 46 45 67 35 37 30 65 63 52 43 26 71 30 59 55 57 51 52 57 48 50 59 49 46 49 40 59 60 51 48 60 57 47 57 57 44 61 40 59 41 50 57 33 50 57 61 59 19 47 40 59 44 50 58 56 50 57 47 60 57 61 58 51 52 41 44 61 50 54 58 57 46 57 45 65 45 49 55 54 57 43 58 50 62 50 43 63 51 56 57 48 57 43 58 43 61 42 62 62 22 60 30 22 65 50 59 49 52 45 35 47 41 39 40 49 56 59 57 56 56 59 56 50 61 48 70 22 22 52 66 61 47 48 49 58 57 47 61 49 48 46 70 30 56 57 44 50 56 43 58 59 37 53 39 76 71 19 48 52 62 50 39 70 21 22 47 43 44 45 46 40 61 57 31 64 19 57 35 24 61 61 49 65 29 53 43 61 40 70 45 37 44 46 55 50 55 49 52 50 59 59 50 50 50 49 58 50 48 62 48 59 62 50 62 58 60 52 52 37 46 51 45 48 57 46 51 63 51 50 57 39 43 64 61 36 50 57 36 59 49 59 51 19 22 59 40 59 51 59 19 61 19 44 43 52 54 45 55 56 50 61 31 59 19 61 19 61 19 48 44 61 51 57 65 64 61 57 47 49 61 59 76 21 48 51 55 51 63 46 49 51 45 51 45 56 55 54 61 51 59 57 60 51 58 57 61 58 59 51 48 57 61 50 59 61 49 50 58 61 57 63 61 58 59 51 50 61 61 57 61 58 57 64 61 50 61 62 57 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61"
    },
    {
        "number": 3038,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 3038,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('\\n'.join([\n    '371',\n    '3',\n    '2 40 65',\n    '2 100 150',\n    '2 300 320',\n    '310'\n])) == 'impossible'\n\nassert solution('\\n'.join([\n    '271',\n    '2',\n    '2 30 10',\n    '2 17 9',\n    '2 11 6',\n    '2 8 5',\n    '2 2 4',\n    '2 3 3',\n    '2 1 1',\n    '2 2 2',\n    '2 3 3',\n    '2 4 4',\n    '2 5 5',\n    '2 6 6',\n    '2 7 7',\n    '2 8 8',\n    '2 9 9',\n    '2 10 10',\n    '2 11 11',\n    '2 12 12',\n    '2 13 13',\n    '2 14 14',\n    '2 15 15',\n    '2 16 16',\n    '2 17 17',\n    '2 18 18',\n    '2 19 19',\n    '2 20 20',\n    '2 21 21',\n    '2 22 22',\n    '2 23 23',\n    '2 24 24',\n    '2 25 25',\n    '2 26 26',\n    '2 27 27',\n    '2 28 28',\n    '2 29 29',\n    '2 30 30',\n    '2 31 31',\n    '2 32 32',\n    '2 33 33',\n    '2 34 34',\n    '2 35 35',\n    '2 36 36',\n    '2 37 37',\n    '2 38 38',\n    '2 39 39',\n    '2 40 40',\n    '2 41 41',\n    '2 42 42',\n    '2 43 43',\n    '2 44 44',\n    '2 45 45',\n    '2 46 46',\n    '2 47 47',\n    '2 48 48',\n    '2 49 49',\n    '2 50 50',\n    '2 51 51',\n    '2 52 52',\n    '2 53 53',\n    '2 54 54',\n    '2 55 55',\n    '2 56 56',\n    '2 57 57',\n    '2 58 58',\n    '2 59 59',\n    '2 60 60',\n    '2 61 61',\n    '2 62 62',\n    '2 63 63',\n    '2 64 64',\n    '2 65 65',\n    '2 66 66',\n    '2 67 67',\n    '2 68 68',\n    '2 69 69',\n    '2 70 70',\n    '2 71 71',\n    '2 72 72',\n    '2 73 73',\n    '2 74 74',\n    '2 75 75',\n    '2 76 76',\n    '2 77 77',\n    '2 78 78',\n    '2 79 79',\n    '2 80 80',\n    '2 81 81',\n    '2 82 82',\n    '2 83 83',\n    '2 84 84',\n    '2 85 85',\n    '2 86 86',\n    '2 87 87',\n    '2 88 88',\n    '2 89 89',\n    '2 90 90',\n    '2 91 91',\n    '2 92 92',\n    '2 93 93',\n    '2 94 94',\n    '2 95 95',\n    '2 96 96',\n    '2 97 97',\n    '2 98 98',\n    '2 99 99',\n    '2 100 100',\n    '2 101 101',\n    '2 102 102',\n    '2 103 103',\n    '2 104 104',\n    '2 105 105',\n    '2 106 106',\n    '2 107 107',\n    '2 108 108',\n    '2 109 109',"
    },
    {
        "number": 3039,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n....\n....\n"
    },
    {
        "number": 3039,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n......') == 'can fold'\nassert solution('..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n......') == 'cannot fold'\nassert solution('..##..\\n....#..\\n..##..\\n....#..\\n......\\n......\\n......') == 'cannot fold'\nassert solution('..##..\\n....#..\\n..##..\\n....#..\\n..##..\\n....#..\\n......') == 'can fold'\nassert solution('..##..\\n....#..\\n..##..\\n....#..\\n...#..\\n....#..\\n......') == 'cannot fold'\n"
    },
    {
        "number": 3039,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\") == \"can fold\"\nassert solution(\"......\\n......\\n#.....\\n......\\n......\\n......\") == \"cannot fold\"\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n......\") == \"can fold\"\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n......\") == \"cannot fold\"\nassert solution(\"..##..\\n...#..\\n..##..\\n..##..\\n......\\n......\\n......\") == \"can fold\"\n"
    },
    {
        "number": 3039,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('...#..') == 'can fold'\nassert solution('....#') == 'cannot fold'\nassert solution('....##') == 'cannot fold'\nassert solution('###..#') == 'cannot fold'\nassert solution('#.###') == 'can fold'\n"
    },
    {
        "number": 3039,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('......\\n......\\n######\\n......\\n......\\n......') == 'can fold'\nassert solution('......\\n......\\n####..\\n......\\n......\\n......') == 'cannot fold'\nassert solution('..##..\\n...#..\\n..##..\\n...#..\\n......\\n......') == 'can fold'\nassert solution('..##..\\n...#..\\n..##..\\n...#..\\n......\\n......') == 'cannot fold'\nassert solution('..##..\\n...#..\\n..##..\\n...#..\\n......\\n......') == 'cannot fold'\n"
    },
    {
        "number": 3039,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''..#\n"
    },
    {
        "number": 3039,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n......\n......\n######\n......\n......\n......\n''') == \"can fold\"\nassert solution('''\n......\n......\n###..\n......\n......\n......\n''') == \"cannot fold\"\nassert solution('''\n......\n......\n###..\n......\n....#\n......\n''') == \"cannot fold\"\nassert solution('''\n......\n......\n..###\n......\n......\n......\n''') == \"can fold\"\nassert solution('''\n......\n......\n#####\n......\n......\n......\n''') == \"can fold\"\n"
    },
    {
        "number": 3039,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''......\n......\n######\n......\n......\n......''') == 'can fold'\n\nassert solution(\n'''......\n....##\n######\n......\n......\n......''') == 'cannot fold'\n\nassert solution(\n'''....#\n"
    },
    {
        "number": 3039,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\") == \"can fold\"\nassert solution(\"......\\n......\\n..##..\\n...#..\\n..##..\\n...#..\\n......\") == \"cannot fold\"\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n......\") == \"cannot fold\"\nassert solution(\"..#..\\n..#..\\n..#..\\n..#..\\n......\\n......\\n......\") == \"cannot fold\"\nassert solution(\"......\\n......\\n..##..\\n...#..\\n..##..\\n...#..\\n......\") == \"can fold\"\n"
    },
    {
        "number": 3039,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('..##..\\n...#..\\n..##..\\n...#..\\n......\\n......') == 'can fold'\nassert solution('#...\\n#...\\n.#.#\\n#...\\n#...\\n#...') == 'cannot fold'\nassert solution('......\\n#..#..\\n#..#..\\n#..#..\\n......\\n......') == 'can fold'\nassert solution('#...\\n#...\\n#...\\n.#.#\\n#...\\n#...') == 'cannot fold'\nassert solution('##..\\n#.#\\n#.#\\n#.#\\n#.#\\n##..') == 'cannot fold'\n"
    },
    {
        "number": 3040,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'\nassert solution('aaa') == 'aaa'\nassert solution('aaaaa') == 'aaa'\n"
    },
    {
        "number": 3040,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"abcabcdef\") == \"abcdef\"\nassert solution(\"abcabcbb\") == \"abc\"\nassert solution(\"abcabcbb\") == \"abc\"\nassert solution(\"bbbbb\") == \"b\"\nassert solution(\"pwwkew\") == \"wke\"\n"
    },
    {
        "number": 3040,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'\nassert solution('abcbabcbaa') == 'abcba'\nassert solution('abcd') == ''\n"
    },
    {
        "number": 3040,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\"\nassert solution(\"aaaaa\") == \"aaaa\"\nassert solution(\"aaaaaabcbabcba\") == \"aaaaa\"\n"
    },
    {
        "number": 3040,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'"
    },
    {
        "number": 3040,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'\nprint(\"All tests passed.\")"
    },
    {
        "number": 3040,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'\nprint(\"All set? Click 'Check' to earn cool rewards!\")\n"
    },
    {
        "number": 3040,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'\n"
    },
    {
        "number": 3040,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'\nassert solution('abcdefghijk') == 'abcdefghijk'\nassert solution('aaaa') == 'aaa'\n"
    },
    {
        "number": 3040,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\"\nassert solution(\"defghabcdefghabcd\") == \"abcd\"\nassert solution(\"ghijklmnopqrstuvwxyz\") == \"a\"\n"
    },
    {
        "number": 3041,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0\n2\n1 4\n2 10005''') == '4'\nassert solution('''0\n2\n1 4\n2 10005\n0 15\n''') == '6'\nassert solution('''0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 3041,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"0\"\nassert solution(\"1 2\\n2 3\") == \"0\"\nassert solution(\"1 2\\n1 2\") == \"0\"\nassert solution(\"1 2\\n2 3\\n3 4\") == \"3\"\nassert solution(\"1 2\\n2 3\\n3 4\\n4 5\") == \"5\"\n"
    },
    {
        "number": 3041,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3041,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\n1 4\n2 10005''') == '4'\nassert solution('''2\n1 4\n2 10005\n0 15005''') == '6'\nassert solution('''2\n1 4\n2 10005\n0 15005\n0 15005''') == '4'\nassert solution('''2\n1 4\n2 10005\n0 15005\n0 15005''') == '4'\nassert solution('''3\n1 4\n2 10005\n0 15005\n0 15005\n0 15005''') == '4'\n"
    },
    {
        "number": 3041,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n448\\n449\\n450\\n451\\n452\\n453\\n454\\n455\\n456\\n457\\n458\\n459\\n460\\n461\\n462\\n463\\n464\\n465\\n466\\n467\\n468\\n469\\n470\\n471\\n472\\n473\\n474\\n475\\n476\\n477\\n478\\n479\\n480\\n481\\n482\\n483\\n484\\n485\\n486\\n487\\n488\\n489\\n490\\n491\\n492\\n493\\n494\\n495\\n496\\n497\\n498\\n499\\n500\\n501\\n502\\n503\\n504\\n505\\n506\\n507\\n508\\n509\\n510\\n511\\n512\\n513\\n514\\n515\\n516\\n517\\n518\\n519\\n520\\n521\\n522\\n523\\n"
    },
    {
        "number": 3041,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n1 4\n2 10005\n0 15\n''') == '4'\n\nassert solution('''2\n1 4\n2 10005\n0 15\n''') == '6'\n\nassert solution('''2\n1 4\n2 10005\n0 10005\n''') == '4'\n\nassert solution('''2\n1 4\n2 10005\n0 10005\n''') == '4'\n\nassert solution('''4\n1 4\n2 10005\n0 10005\n0 10005\n''') == '4'"
    },
    {
        "number": 3041,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\\n0\\n10\") == \"4\"\nassert solution(\"2\\n1 4\\n2 5\\n0 15\") == \"4\"\nassert solution(\"2\\n1 4\\n2 10005\\n0 15\") == \"6\"\nassert solution(\"3\\n1 4\\n2 10\\n0 15\") == \"4\"\nassert solution(\"3\\n1 4\\n2 10\\n0 1005\\n0 15\") == \"4\"\n"
    },
    {
        "number": 3041,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3') == '4'\nassert solution('2\\n1 4\\n2 5') == '6'\nassert solution('2\\n1 4\\n2 10005') == '6'\nassert solution('2\\n1 4\\n2 10\\n0 15') == '4'\nassert solution('3\\n1 4\\n2 10\\n0 15') == '4'\n"
    },
    {
        "number": 3041,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\") == 3\nassert solution(\"1 2 3 4\") == 1\nassert solution(\"1 2 3 4 5\") == 1\nassert solution(\"1 2 3 4 5 6\") == 3\nassert solution(\"1 2 3 4 5 6 7\") == 3\n"
    },
    {
        "number": 3041,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1 4') == '4'\nassert solution('2\\n1 4\\n2 10005') == '6'\nassert solution('3\\n1 4\\n2 10\\n0 15') == '4'\nassert solution('2\\n1 4\\n2 10005\\n0 15') == '4'\nassert solution('2\\n1 4\\n2 10\\n0 15\\n0 10005') == '4'\n"
    },
    {
        "number": 3042,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7\n2 3 4 4 8 12 24\n''') == '2'\nassert solution('''3\n7 7 7\n''') == '3'\nassert solution('''5\n1 2 3 2 1\n''') == '0'\nassert solution('''3\n7 7 7\n''') == '3'\nassert solution('''3\n1 2 3\n''') == '1'\n"
    },
    {
        "number": 3042,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3042,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n2 3 2 1') == '2'\nassert solution('2\\n7 7 7') == '3'\nassert solution('2\\n1 2 3 2 1') == '0'\nassert solution('7\\n1 2 3 2 4 4 8 12 24') == '2'\nassert solution('7\\n2 2 4 4 8 12 24') == '3'\n"
    },
    {
        "number": 3042,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n7 7 7\\n') == '3'\nassert solution('2\\n2 2\\n') == '0'\nassert solution('2\\n1 2\\n') == '1'\nassert solution('7\\n2 3 4 4 8 12 24\\n') == '2'\nassert solution('1\\n1\\n') == '1'\n"
    },
    {
        "number": 3042,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3 2 1') == 2\nassert solution('7 7 7') == 3\nassert solution('1 2 3 2 1') == 0\nassert solution('7 7 7') == 3\nassert solution('1 2 3 4 2 2') == 0\n"
    },
    {
        "number": 3042,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3 4 4 8 12 24\\n2 3 4 4 8 12 24\\n2 3 4 4 8 12 24') == '2'\nassert solution('2 3 4 4 8 12 24\\n7 7 7\\n2 3 4 4 8 12 24\\n2 3 4 4 8 12 24\\n2 3 4 4 8 12 24') == '3'\nassert solution('2 3 4 4 8 12 24\\n2 3 4 4 8 12 24\\n2 3 4 4 8 12 24\\n2 3 4 4 8 12 24\\n2 3 4 4 8 12 24\\n2 3 4 4 8 12 24\\n2 3 4 4 8 12 24\\n2 3 4 4 8 12 24\\n2 3 4 4 8 12 24\\n2 3 4 4 8 12 24\\n2 3 4 4 8 12 24\\n2 3 4 4 8 12 24\\n2 3 4 4 8 12 24\\n2 3 4 4 8 12 24\\n2 3 4 4 8 12 24\\n2 3 4 4 8 12 24') == '0'\nassert solution('2 3 4 4 8 12 24\\n2 3 4 4 8 12 24\\n2 3 4 4 8 12 24\\n2 3 4 4 8 12 24\\n2 3 4 4 8 12 24\\n2 3 4 4 8 12 24\\n2 3 4 4 8 12 24\\n2 3 4 4 8 12 24\\n2 3 4 4 8 12 24\\n2 3 4 4 8 12 24\\n2 3 4 4 8 12 24\\n2 3 4 4 8 12 24\\n2 3 4 4 8 12 24\\n2 3 4 4 8 12 24\\n2 3 4 4 8 12 24\\n2 3 4 4 8 12 24\\n2 3 4 4 8 12 24\\n2 3 4 4 8 12 24\\n2 3 4 4 8 12 24\\n2 3 4 4 8 12 24\\n2 3 4 4 8 12 24\\n2 3 4 4 8 12 24\\n2 3 4 4 8 12 24\\n2 3 4 4 8 12 24') == '0'\nassert solution('1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1 2 3 2 1\\n1"
    },
    {
        "number": 3042,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3042,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7\n2 3 4 4 8 12 24\n''') == '2'\nassert solution('''3\n7 7 7\n''') == '3'\nassert solution('''5\n1 2 3 2 1\n''') == '0'\n"
    },
    {
        "number": 3042,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3\\n2\\n1\\n') == '2'\nassert solution('7\\n7\\n7\\n') == '3'\nassert solution('3\\n2\\n2\\n') == '0'\nassert solution('5\\n1 2 3 2 1\\n') == '0'\nassert solution('9\\n9\\n9\\n') == '3'\n"
    },
    {
        "number": 3042,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"7\\n2 3 4 4 8 12 24\") == \"2\"\nassert solution(\"3\\n7 7 7\") == \"3\"\nassert solution(\"5\\n1 2 3 2 1\") == \"0\"\nassert solution(\"11\\n
    },
    {
        "number": 3043,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3043,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 5 4\\nS#.F.\\n.MFMG') == '3'\nassert solution('1 2 1\\nGS') == '1'\nassert solution('2 2 10\\nS#\\n#G') == '-1'\nassert solution('2 3 4\\nS#F#.\\n.M.F.F.F.F.F.F.F.F.\\n#.M.F.F.F.F.F.F.F.F.F.F.F.\\n.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.\\n#.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.\\n.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.\\n#.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.\\n.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.\\n.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.\\n.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.\\n.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.\\n.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.\\n.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.\\n.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.F.\\n.F.F.F."
    },
    {
        "number": 3043,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4\\n1#.\\n.F.G#\\n#F.G#\\n') == '-1'\nassert solution('2 5 4\\nS#.F.\\n.MFMG') == '3'\nassert solution('2 2 10\\nS#\\n#G') == '1'\nassert solution('2 2 1\\nGS') == '1'\nassert solution('1 1 1\\nG\\nG') == '-1'\nprint(solution(''))\n"
    },
    {
        "number": 3043,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 1') == '3'\nassert solution('2 5 4') == '3'\nassert solution('2 3 0') == '-1'\nassert solution('2 3 4') == '-1'\nassert solution('1 1 1') == '-1'\n"
    },
    {
        "number": 3043,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n2 5 4\nS#.F.\n.MFMG\n''') == '3'\nassert solution('''\n1 2 1\nGS\n''') == '1'\nassert solution('''\n2 2 10\nS#\n"
    },
    {
        "number": 3043,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3043,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"1\"\nassert solution(\"2 5 4\") == \"3\"\nassert solution(\"2 2 2\") == \"-1\"\nassert solution(\"2 3 1\") == \"2\"\n"
    },
    {
        "number": 3043,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('1 2 3') == '-1'\nassert solution('10 10 10') == '0'\nassert solution('3 5 2') == '3'\nassert solution('4 3 6') == '3'\n"
    },
    {
        "number": 3043,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 5 4\nS#.F.\n.MFMG''') == '3'\nassert solution('''1 2 1\nGS\nSample Output 2:\n1\n\nSample Input 3:\n2 2 10\nS#\n"
    },
    {
        "number": 3043,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 5 4\nS#.F.\n.MFMG''') == '3'\nassert solution('''1 2 1\nGS''') == '1'\nassert solution('''2 2 10\nS#\n"
    },
    {
        "number": 3044,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('DRRDD') == 1\nassert solution('LDLDLLDR') == 1\nassert solution('DDRRDRRDRRDRDRDRDRDRDRDRDRRDRRDRRDRRDRDRDRDRDRDRD') == 1\nassert solution
    },
    {
        "number": 3044,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin.strip()\n"
    },
    {
        "number": 3044,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''3 3\nS..\n.#.\n..G\nDRRDD''') == '1'\nassert solution(\n'''3 7\n.......\n.G.#.S.\n.......\nLDLDLLDR''') == '1'\nassert solution(\n'''3 7\n.#.....\n.G.##S.\n.......\nLDLDLLDR''') == '2'\nassert solution(\n'''3 7\n.#.....\n.G.##S.\n.......\nRRDDDDD''') == '3'\nassert solution(\n'''3 7\n.#.....\n.G.##S.\n.......\nRRDDDDD''') == '2'\n"
    },
    {
        "number": 3044,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input_mock.read()) == output_mock.read()\n\"\"\"\n"
    },
    {
        "number": 3044,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"3 3\nS..\n.#.\n..G\nDRRDD\"\"\"\n) == '1'\nassert solution(\n\"\"\"3 7\n.......\n.G.#.S.\n.......\nLDLDLLDR\"\"\"\n) == '1'\nassert solution(\n\"\"\"3 7\n.......\n.G.##S.\n.......\nLDLDLLDR\"\"\"\n) == '2'\nassert solution(\n\"\"\"3 5\nSSSSSSS\n....G..\nS......\nSSSSSSS\nSSSSSSS\nSSSSSSS\nS.G..G.\n\"\"\"\n) == '5'\nassert solution(\n\"\"\"3 5\nSSSSSSS\n....G..\nS......\nSSSSSSS\nSSSSSSS\nSSSSSSS\nS.G..G.\n\"\"\"\n) == '3'\n"
    },
    {
        "number": 3044,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('L') == 'L'\nassert solution('R') == 'R'\nassert solution('D') == 'D'\nassert solution('LDRRR') == 'LDRRR'\n"
    },
    {
        "number": 3044,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\") == 1\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\\n\") == 1\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\\n\") == 1\n"
    },
    {
        "number": 3044,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('DRRDD') == 1\nassert solution('LDLDLLDR') == 1\nassert solution('LDLDLLDR') == 1\n"
    },
    {
        "number": 3044,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 3044,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''3 3\nS..\n.#.\n..G\nDRRDD'''\n    ) == '1'\nassert solution(\n'''3 7\n.......\n.G.##S.\n.......\nLDLDLLDR'''\n    ) == '1'\nassert solution(\n'''3 7\n.#.....\n.G.##S.\n.......\nLDLDLLDR'''\n    ) == '2'\nassert solution(\n'''3 7\n..G.##S.\n.......\nLDLDLLDR'''\n    ) == '2'\nassert solution(\n'''3 7\n..G#S.##\n.......\nLDLDLLDR'''\n    ) == '3'\n"
    },
    {
        "number": 3045,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n2\n999999 0 1000\n999900 950 451\n987654 123 13222\n''') == '1000200 799'\nassert solution('''\n2\n100 0 100\n0 200 199\n''') == 'uncertain'\nassert solution('''\n2\n0 0 100\n0 200 199\n''') == 'impossible'\nassert solution('''\n2\n999999 0 1000\n999900 950 451\n987654 123 13222\n''') == '1000200 799'\nassert solution('''\n2\n999999 0 1000\n999900 950 451\n987654 123 13222\n''') == '1000200 799'\n"
    },
    {
        "number": 3045,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\\\n3\n999999 0 1000\n999900 950 451\n987654 123 13222\n''') == '1000200 799'\n\nassert solution('''\\\n2\n100 0 100\n0 200 199\n''') == 'uncertain'\n\nassert solution('''\\\n2\n100 0 100\n0 200 199\n''') == 'impossible'\n"
    },
    {
        "number": 3045,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n3\n999999 0 1000\n999900 950 451\n987654 123 13222\n''') == \"1000200 799\"\nassert solution(\n'''\n2\n100 0 101\n0 200 199\n''') == \"uncertain\"\nassert solution(\n'''\n2\n100 0 100\n0 200 199\n''') == \"impossible\"\n"
    },
    {
        "number": 3045,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n3') == None\nassert solution('1\\n0 0 5\\n0 0 10\\n0 1 1\\n1 1 2') == None\nassert solution('2\\n0 0 100\\n0 0 100\\n0 0 100\\n0 0 100') == None\nassert solution('2\\n100 0 0\\n0 200 199\\n0 200 199') == None\nassert solution('1\\n0 0 0\\n0 0 0\\n0 0 0') == None\n"
    },
    {
        "number": 3045,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n100 0 100\\n0 200 199') == 'impossible'\nassert solution('2\\n999999 0 1000\\n999899 900 451\\n987654 123 13222') == '1000200 799'\nassert solution('2\\n999999 0 1000\\n999900 950 451\\n987654 123 13222') == '1000200 799'\nassert solution('2\\n99999 0 1000\\n9999 0 9999\\n99999 0 9999\\n99999 0 9999\\n9999 0 9999') == '999200 799'\nassert solution('3\\n999999 0 1000\\n999900 950 451\\n987654 123 13222') == '999200 799'\n"
    },
    {
        "number": 3045,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n0 0\\n2 0\\n0 2\\n') == '1000200 799'\nassert solution('4\\n1 0\\n2 0\\n0 2\\n') == 'impossible'\nassert solution('3\\n99999 0 100000\\n90000 90000 1\\n100000 0 99999\\n99999 100000 1\\n99999 100000 2\\n100000 99999 2\\n99999 99999 3\\n99999 99999 3\\n100000 99999 3\\n99999 99999 3\\n90000 99999 3\\n100000 99999 3\\n90000 99999 3\\n99999 99999 3\\n99999 99999 3\\n90000 99999 3\\n100000 99999 3') == '1000200 799'\nassert solution('2\\n100 0 100\\n0 200 199\\n') == 'uncertain'\nassert solution('2\\n100 0 100\\n0 200 199\\n') == 'impossible'\n"
    },
    {
        "number": 3045,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n3\n999999 0 1000\n999900 950 451\n987654 123 13222\n''') == '1000200 799'\nassert solution('''\n2\n100 0 100\n0 200 199\n''') == 'uncertain'\nassert solution('''\n2\n100 0 100\n0 200 199\n''') == 'impossible'\nassert solution('''\n2\n100 0 100\n100 0 100\n''') == 'impossible'\nassert solution('''\n3\n999999 0 1000\n999900 950 451\n987654 123 13222\n''') == '1000200 799'\n"
    },
    {
        "number": 3045,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n3\n999999 0 1000\n999900 950 451\n987654 123 13222\n''') == '1000200 799'\n\nassert solution(\n'''\n1\n100 0 100\n0 200 199\n''') == 'uncertain'\n\nassert solution(\n'''\n1\n0 0 0\n0 0 0\n''') == 'impossible'\n\nassert solution(\n'''\n6\n1000000 0 1000\n0 200 199\n0 100 1\n2 4 1\n4 500 1\n500 100 1\n500 1 1\n''') == '1000200 799'\n"
    },
    {
        "number": 3045,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\") == \"0 3\"\nassert solution(\"999999 0 1000\") == \"1000200 799\"\nassert solution(\"999900 950 451\") == \"9997599 51\"\nassert solution(\"987654 123 13222\") == \"9998999 89\"\nassert solution(\"100 0 101\") == \"0 200 199\"\n"
    },
    {
        "number": 3045,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3046,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n4 7\\n9 8\\n14 17\\n19 18') == '2\\n1'\nassert solution('2\\n4 8\\n9 7\\n14 18\\n19 17\\n1 2') == '1\\n2'\nassert solution('2\\n4 8\\n9 7\\n14 18\\n19 17\\n0 0') =='syntax error'\nassert solution('2\\n4 7\\n9 8\\n14 17\\n19 18\\n5') =='syntax error'\nassert solution('2\\n4 7\\n9 8\\n14 17\\n19 18\\n5 5') =='syntax error'\n"
    },
    {
        "number": 3046,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 7\n9 8\n14 17\n19 18''') == '1 2'\nassert solution('''4 7\n14 17\n9 8\n19 18''') == '2 1'\nassert solution('''4 7\n9 8\n14 17\n19 18\n4 8''') == '2 1'\nassert solution('''4 8\n9 7\n14 18\n19 17\n4 8''') == '2 1'\nassert solution('''4 8\n14 17\n9 8\n19 18''') == '1 2'\n"
    },
    {
        "number": 3046,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 7\\n9 8\\n14 17\\n19 18\\n') == '2\\n1\\n'\nassert solution('4 8\\n9 7\\n14 18\\n19 17\\n') == '1\\n2\\n'\nassert solution('4 8\\n14 17\\n19 18\\n9 7\\n') == '1\\n2\\n'\nassert solution('4 8\\n14 17\\n19 18\\n9 7\\n') == '1\\n2\\n'\nassert solution('4 8\\n14 17\\n19 18\\n9 7\\n') == '1\\n2\\n'\n"
    },
    {
        "number": 3046,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 7\n9 8\n14 17\n19 18''') == '2\\n1'\nassert solution('''2\n4 7\n14 17\n9 8\n19 18''') == '1\\n2'\nassert solution('''2\n4 8\n9 7\n14 18\n19 17''') == '1\\n2'\nassert solution('''2\n4 8\n14 17\n9 8\n19 18\n''') == '1\\n2'\n'''\n"
    },
    {
        "number": 3046,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\nprint('Passed')\n------------------------------------------"
    },
    {
        "number": 3046,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\n\nfrom sys import stdin, stdout\nfrom collections import defaultdict\n"
    },
    {
        "number": 3046,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 3046,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 7\\n9 8\\n14 17\\n19 18\\n') == '2\\n1\\n'\nassert solution('4 7\\n14 17\\n9 8\\n19 18\\n') == '1\\n2\\n'\nassert solution('4 8\\n9 7\\n14 18\\n19 17\\n') == '1\\n2\\n'\nassert solution('4 8\\n19 17\\n9 7\\n14 18\\n') == '2\\n1\\n'\nassert solution('4 8\\n19 17\\n9 7\\n14 18\\n') == '1\\n2\\n'\n"
    },
    {
        "number": 3046,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2\\n4 7\\n9 8\\n14 17\\n19 18\") == \"2\\n1\"\nassert solution(\"2\\n4 7\\n14 17\\n19 18\") == \"1\\n2\"\nassert solution(\"2\\n4 7\\n9 8\\n14 17\\n19 18\") == \"1\\n2\"\nassert solution(\"2\\n4 7\\n9 8\\n14 17\\n19 17\") == \"1\"\nassert solution(\"2\\n4 7\\n9 8\\n14 17\\n19 18\") == \"syntax error\"\n\"\"\"\n\nfrom itertools import groupby"
    },
    {
        "number": 3046,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 7\\n9 8\\n14 17\\n19 18\\n') == '2\\n1\\n'\nassert solution('2\\n4 7\\n14 17\\n9 8\\n19 18\\n') == '1\\n2\\n'\nassert solution('2\\n4 8\\n9 7\\n14 18\\n19 17\\n') == '1\\n2\\n'\nassert solution('2\\n4 8\\n9 7\\n14 18\\n19 17\\n1') == '1\\n2\\n'\nassert solution('2\\n4 8\\n9 7\\n14 18\\n19 17\\n1 2') == '1\\n2\\n'\n"
    },
    {
        "number": 3047,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n        '''\n        _ 90 22 _ 6 _ _ _ _ 81\n        _ 40 _ _ _ 12 60 _ 90 _\n        ''') == '1'\nassert solution(\n        '''\n        85 55 _ 99 51 _ _ _ _ _\n        _ _ _ _ _ _ _ 85 63 153\n        ''') == '1'\nassert solution(\n        '''\n        160 _ _ 136 _ _ _ _ _ 170\n        _ _ _ _ 120 _ _ 144 _ _\n        ''') == '8640'\nprint(solution(input()))\n"
    },
    {
        "number": 3047,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(sample0) =='many'\nassert solution(sample1) == '1'\nassert solution(sample2) == '8640'\n"
    },
    {
        "number": 3047,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3_3 4_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3 3_3"
    },
    {
        "number": 3047,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('_ 90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\\n') == '1\\n'\nassert solution('85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\\n') == '1\\n'\nassert solution('160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\\n') == '8640\\n'\nassert solution('160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\\n') == '8640\\n'\nassert solution('_ 160 _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\\n') == '8640\\n'\n"
    },
    {
        "number": 3047,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('_ 90 22 _ 6 _ _ _ _ 81\\n'\n'_ 40 _ _ _ 12 60 _ 90 _\\n') == '1'\nassert solution('85 55 _ 99 51 _ _ _ _ _\\n'\n'_ _ _ _ _ _ _ 85 63 153\\n') == '1'\nassert solution('160 _ _ 136 _ _ _ _ _ 170\\n'\n'_ _ _ _ 120 _ _ 144 _ _\\n') == '8640'\nprint('Testcases passed')\n"
    },
    {
        "number": 3047,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''_ 90 22 _ 6 _ _ _ _ 81\n_ 40 _ _ _ 12 60 _ 90 _'''\n) == '1'\nassert solution(\n'''85 55 _ 99 51 _ _ _ _ _\n_ _ _ _ _ _ _ 85 63 153'''\n) == '1'\nassert solution(\n'''160 _ _ 136 _ _ _ _ _ 170\n_ _ _ _ 120 _ _ 144 _ _'''\n) == '8640'\nprint(solution('''38 59 _ 54 89 _ 73 91\n_ 82 _ 100 _ 76 _ 41 40 _ 93\n_ 37 _ 66 57 41 93 92 82 _'''))\nassert solution('''38 59 _ 54 89 _ 73 91\n_ 82 _ 100 _ 76 _ 41 40 _ 93\n_ 37 _ 66 57 41 93 92 82''') == '64'\nassert solution('''38 59 _ 54 89 _ 73 91\n_ 82 _ 100 _ 76 _ 41 40 _ 93\n_ 37 _ 66 57 41 93 92 82''') == '64'\n"
    },
    {
        "number": 3047,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"_ 90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\\n\") == \"1\"\nassert solution(\"85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\\n\") == \"1\"\nassert solution(\"160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\\n\") == \"8640\"\nprint(\"Testcases passed.\")\n\"\"\""
    },
    {
        "number": 3047,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(open('test_input/solutions/sample_solution_1.txt', 'r').read()) == '1'\nassert solution(open('test_input/solutions/sample_solution_2.txt', 'r').read()) == '1'\nassert solution(open('test_input/solutions/sample_solution_3.txt', 'r').read()) == '8640'\nprint(solution(open('input/solutions/solution_1.txt', 'r').read()))\nprint(solution(open('input/solutions/solution_2.txt', 'r').read()))\nprint(solution(open('input/solutions/solution_3.txt', 'r').read()))\n"
    },
    {
        "number": 3047,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3\n\n--- 82.66/100 ---\n--- 55.22/100 ---\n--- 15.00/100 ---\n"
    },
    {
        "number": 3047,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"_ 90 22 _ 6 _ _ _ _ 81\") == \"1\\n\"\nassert solution(\"_ 40 _ _ 12 60 _ 90 _\") == \"1\\n\"\nassert solution(\"85 55 _ 99 51 _ _ _ _ _\") == \"1\\n\"\nassert solution(\"160 _ _ 136 _ _ _ _ _ 170\") == \"1\\n\"\nassert solution(\"_ _ _ _ _ _ _ 85 63 153\") == \"1\\n\"\n"
    },
    {
        "number": 3048,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''3\n1 2\n1 3\n''') == '2'\nassert solution('''5\n2 1\n1 5\n3 1\n4 3\n''') == '8'\nassert solution('''10\n2 1\n2 3\n2 4\n1 5\n3 6\n2 7\n7 8\n5 9\n5 10\n''') == '24'\nassert solution('''1\n2 1\n3 1\n4 3\n''') == '1'\nassert solution('''2\n1 2\n2 3\n2 4\n1 5\n3 6\n2 7\n7 8\n5 9\n5 10\n''') == '2'\n"
    },
    {
        "number": 3048,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3048,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3048,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3048,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n1 2\n1 3\n''') == '2'\nassert solution('''5\n2 1\n1 5\n3 1\n4 3\n''') == '8'\nassert solution('''10\n1 2\n2 3\n2 4\n1 5\n3 6\n2 7\n7 8\n5 9\n5 10\n''') == '24'\nassert solution('''10\n1 2\n2 3\n2 4\n1 5\n3 6\n2 7\n7 8\n5 9\n5 10\n6 11\n7 11\n''') == '24'\nassert solution('''10\n1 2\n2 3\n2 4\n1 5\n3 6\n2 7\n7 8\n5 9\n5 10\n6 11\n7 11\n9 12\n10 12\n''') == '24'\n"
    },
    {
        "number": 3048,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output\nprint(f\"Successfully finished in {time.time() - start_time}\")\n"
    },
    {
        "number": 3048,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"1\"\n"
    },
    {
        "number": 3048,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n1 2\n1 3\n''') == '2'\nassert solution('''5\n2 1\n1 5\n3 1\n4 3\n''') == '8'\nassert solution('''10\n1 2\n2 3\n2 4\n1 5\n3 6\n2 7\n7 8\n5 9\n5 10\n''') == '24'\nassert solution('''3\n1 2\n1 3\n2 3\n''') == '2'\nassert solution('''1\n1 2\n2 3\n''') == '1'\n"
    },
    {
        "number": 3048,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n1 2\\n1 3\\n') == '2'\nassert solution('3\\n1 2\\n1 3\\n2 4\\n') == '2'\nassert solution('5\\n2 1\\n1 5\\n3 1\\n4 3\\n') == '8'\nassert solution('10\\n2 1\\n1 5\\n3 1\\n4 3\\n5 9\\n5 10\\n3 7\\n7 8\\n') == '24'\n\n-----Suggested Solutions-----\n* DP: https://www.youtube.com/watch?v=cKic1i-qYps&t=226s\n* Recursive: https://www.youtube.com/watch?v=cKic1i-qYps&t=206s\n"
    },
    {
        "number": 3048,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1 2\n1 3\n''') == '2'\nassert solution('''\n5\n1 2\n2 3\n2 4\n1 5\n3 1\n''') == '8'\nassert solution('''\n10\n1 2\n2 3\n2 4\n1 5\n3 6\n2 7\n7 8\n5 9\n5 10\n''') == '24'\nprint(solution('''\n1000\n1005\n1 1\n1 2\n1 3\n1 4\n2 1\n2 2\n2 3\n2 4\n3 1\n3 2\n3 3\n3 4\n4 1\n4 2\n4 3\n4 4\n5 1\n5 2\n5 3\n5 4\n6 1\n6 2\n6 3\n6 4\n7 1\n7 2\n7 3\n7 4\n8 1\n8 2\n8 3\n8 4\n9 1\n9 2\n9 3\n9 4\n'''))\n"
    },
    {
        "number": 3049,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    secretmessage\n    boot\n    \"\"\") == \"essa\"\n\nassert solution(\n    \"\"\"\n    treetreetreetree\n    wood\n    \"\"\") == \"3\"\n\nassert solution(\n    \"\"\"\n    oranges\n    apples\n    \"\"\") == \"0\"\n"
    },
    {
        "number": 3049,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('secretmessage') == 'essa'\nassert solution('treetreetreetree') == 'wood'\nassert solution('oranges') == '0'\nassert solution('apples') == '3'\nassert solution('aaaaa') == '0'\n"
    },
    {
        "number": 3049,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''secretmessage\nboot''') == 'essa'\nassert solution('''treetreetreetree\nwood''') == 'apples'\nassert solution('''oranges\napples''') == '0'\n\n---"
    },
    {
        "number": 3049,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('secretmessage', 'boot') == 'essa'\nassert solution('treetreetreetree', 'wood') == 'oranges'\nassert solution('oranges', 'apples') == '0'\n\"\"\"\n"
    },
    {
        "number": 3049,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''secretmessage\nboot\n''') == 'essa'\nassert solution('''treetreetreetree\nwood\n''') == 'apples'\nassert solution('''oranges\napples\n''') == '0'"
    },
    {
        "number": 3049,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 3049,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"secretmessage\") == \"essa\"\nassert solution(\"treetreetreetree\") == \"wood\"\nassert solution(\"oranges\") == \"0\"\n\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 3049,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"secretmessage\") == \"essa\"\nassert solution(\"treetreetreetree\") == \"wood\"\nassert solution(\"oranges\") == \"0\"\n"
    },
    {
        "number": 3049,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('treetreetreetree') == 'treet', \"treet\"\nassert solution('secretmessage') == 'essa', \"essa\"\nassert solution('oranges') == '0', \"0\"\nassert solution('apples') == '3', \"3\"\nassert solution('wood') == '3', \"3\"\n"
    },
    {
        "number": 3049,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('The quick brown fox jumps over the lazy dog.') == ''\nassert solution('The secret message is: donuts are not the solution') == 'The secret message is:  '\nassert solution('jgsdijjguugjguugjguugjujdgdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdgujdguj"
    },
    {
        "number": 3050,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\">^<^\") == \"2\"\nassert solution(\"<^><\") == \"1\"\nassert solution(\"v^v\") == \"2\"\nassert solution(\"<<<\") == \"4\"\nassert solution(\"<^><^<^<^\") == \"1\"\n"
    },
    {
        "number": 3050,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\">v<\") == \"2\"\nassert solution(\"^>v<\") == \"4\"\nassert solution(\"^<v^\") == \"2\"\nassert solution(\"^>^<\") == \"2\"\nassert solution(\"v^v\") == \"2\"\n"
    },
    {
        "number": 3050,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n    6\n    >^<^\n    ######\n    #.#..#\n    #....#\n    #..R.#\n    #....#\n    ######\n    ''') == '2'\n\nassert solution('''\n    5\n    <v^>\n    ###\n    #.R#\n    #..#\n    ####\n    ''') == '4'\n\nassert solution('''\n    5\n    ^v<v>\n    ####\n    #.R#\n    #..#\n    ####\n    ''') == '1'\nassert solution('''\n    10\n    <v<v>\n    ###\n    #.R#\n    #..#\n    ####\n    ''') == '3'\n\nassert solution('''\n    10\n    <v^v>\n    ####\n    #.R#\n    #..#\n    ####\n    ''') == '1'"
    },
    {
        "number": 3050,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\">^^<\") == \"1\"\nassert solution(\"^v<^^\") == \"4\"\nassert solution(\">vv^<v\") == \"1\"\nassert solution(\"^<^<^<^^\") == \"1\"\nassert solution(\"<^^<\") == \"1\"\n"
    },
    {
        "number": 3050,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\">^v<\") == \"1\"\nassert solution(\"<><><>\") == \"1\"\nassert solution(\"<>><<>\") == \"3\"\nassert solution(\"<<<>^>><>><>>\") == \"4\"\nassert solution(\"<<<<<>\") == \"1\"\n"
    },
    {
        "number": 3050,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5') == '1'\nassert solution('6') == '1'\nassert solution('7') == '2'\nassert solution('8') == '2'\nassert solution('9') == '3'\n"
    },
    {
        "number": 3050,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6\\n>^<^') == '2'\nassert solution('4\\n<>') == '4'\nassert solution('4\\n<<<') == '1'\nassert solution('4\\n<><') == '2'\nassert solution('4\\n<<<\\n<><') == '2'\n"
    },
    {
        "number": 3050,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"7\\n<<<\") == \"1\"\nassert solution(\"7\\n<>\") == \"4\"\nassert solution(\"7\\n<><\") == \"2\"\nassert solution(\"7\\nv<>\") == \"2\"\nassert solution(\"7\\n<^>\") == \"2\"\n"
    },
    {
        "number": 3050,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\">v<\") == \"1\"\nassert solution(\">^<\") == \"1\"\nassert solution(\">v^<\") == \"2\"\nassert solution(\"^v<\") == \"2\"\nassert solution(\"^<^<vv<vv<v<v\") == \"1\"\n"
    },
    {
        "number": 3050,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\">^<^\") == \"2\"\nassert solution(\"####\") == \"1\"\nassert solution(\"v<^>\") == \"4\"\nassert solution(\"<<<\") == \"1\"\nprint(\"All set? Click \\\"Check\\\" to earn cool rewards!\")\n"
    },
    {
        "number": 3051,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\\n') == '3'\nassert solution('3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n') == '6'\nassert solution('2\\n7 0 0 20 10 3 0 10\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n') == '11'\nprint(solution(open('/home/user/Documents/data.txt').read()))"
    },
    {
        "number": 3051,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\n2 3 0 2 9 2 3 0\n1 6 1 4 6 3 -1 -2''') == '3'\nassert solution('''3\n4 0 0 10 10 1 15 0\n3 5 50 55 8 1 -16 2\n3 10 7 10 4 1 8 -1\nSample Output 2:\n6''') == '11'\nassert solution('''4\n1 0 0 10 10 1 15 0\n10 1 0 2 5 2 2 7\n3 10 7 10 4 1 8 -1\n3 5 50 55 8 1 -16 2\nSample Output 3:\n11''') == '11'\nassert solution('''4\n4 0 0 10 10 1 15 0\n3 5 50 55 8 1 -16 2\n3 10 7 10 4 1 8 -1\n2 3 -2 -2 0 -3 -5\nSample Output 4:\n3''') == '3'\nassert solution('''4\n4 0 0 10 10 1 15 0\n3 5 50 55 8 1 -16 2\n3 10 7 10 4 1 8 -1\n2 3 -2 -2 0 -3 -5\n1 6 1 4 6 3 -1 -2\nSample Output 5:\n5''') == '5'\n"
    },
    {
        "number": 3051,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3051,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\\n') == '3'\nassert solution('3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n') == '6'\nassert solution('2\\n7 0 0 20 10 3 0 10\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n') == '11'"
    },
    {
        "number": 3051,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\\n') == '3\\n'\nassert solution('3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n') == '6\\n'\nassert solution('7\\n0 0 0 20 10 3 0 10\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n') == '11\\n'\nassert solution('7\\n0 0 0 1 10 3 0 10\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n') == '6\\n'\nassert solution('7\\n0 0 0 10 10 3 0 10\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n') == '11\\n'\n"
    },
    {
        "number": 3051,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2\\n2 3 0 2 9 2 3 0\") == \"3\"\nassert solution(\"3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\") == \"6\"\nassert solution(\"3\\n7 0 0 20 10 3 0 10\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\") == \"11\"\nassert solution(\"3\\n7 0 0 20 10 3 0 10\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n7 0 0 21 0 5 2 0 0\") == \"6\"\nassert solution(\"4\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n7 0 0 21 0 5 2 0 0\") == \"6\"\n"
    },
    {
        "number": 3051,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\\n') == '3'\nassert solution('3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n') == '6'\nassert solution('1\\n1 6 1 4 6 3 -1 -2\\n') == '3'\nassert solution('1\\n1 6 1 4 6 3 -1 -2\\n1 6 1 4 6 3 -1 -2\\n') == '3'\nassert solution('1\\n1 6 1 4 6 3 -1 -2\\n1 6 1 4 6 3 -1 -2\\n1 6 1 4 6 3 -1 -2\\n') == '3'\n"
    },
    {
        "number": 3051,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\\n3 4 0 0 10 10 1 15 0\") == \"3\"\nassert solution(\"3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n3\\n4 0 0 10 10 1 15 0\") == \"6\"\nassert solution(\"3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n3\\n4 0 0 10 10 1 15 0\") == \"11\"\n"
    },
    {
        "number": 3051,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3051,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\\n') == '3'\nassert solution('2\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n') == '6'\nassert solution('2\\n7 0 0 20 10 3 0 10\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n') == '11'\n"
    },
    {
        "number": 3052,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == \"168.7916512460\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == \"163.5274740179\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\\n\") == \"3.7320508076\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\\n0.0 0.0 5.0 0.0\\n\") == \"3.7320508076\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\\n0.0 0.0 5.0 0.0\\n0.0 0.0 6.0 0.0\\n\") == \"3.7320508076\"\n"
    },
    {
        "number": 3052,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 80.0''') == '168.7916512460'\nassert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 100.0''') == '163.5274740179'\nassert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 80.0\n50.0 0.0 50.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 100.0''') == '28.82976930736'\nassert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 80.0\n50.0 0.0 50.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 100.0\n50.0 0.0 50.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 100.0''') == '28.82976930736'\nassert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 80.0\n50.0 0.0 50.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 100.0\n50.0 0.0 50.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 100.0''') == '28.82976930736'\n"
    },
    {
        "number": 3052,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 80.0''') == '168.7916512460'\nassert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 100.0''') == '163.5274740179'\nassert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 80.0''') == '3.7320508076'\nprint(solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 80.0'''))\n"
    },
    {
        "number": 3052,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 80.0''') == '168.7916512460'\nassert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 100.0''') == '163.5274740179'\nassert solution('''0.0 1.0 4.0 1.0\n1\n0.0 0.0 4.0 0.0\nSample Output 3:\n3.7320508076''') == '3.7320508076'\nassert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 100.0''') == '163.5274740179'\nassert solution('''0.0 1.0 4.0 1.0\n1\n0.0 0.0 4.0 0.0\nSample Output 3:\n3.7320508076''') == '3.7320508076'\n"
    },
    {
        "number": 3052,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 80.0''') == '168.7916512460'\n\nassert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 100.0''') == '163.5274740179'\n"
    },
    {
        "number": 3052,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 80.0''') == '168.7916512460'\nassert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 100.0''') == '163.5274740179'\nassert solution('''10.0 10.0 10.0 10.0\n3\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10.0\n10.0 10.0 10.0 10"
    },
    {
        "number": 3052,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 80.0\n''') == '168.7916512460'\nassert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 100.0\n''') == '163.5274740179'\nassert solution('''0.0 1.0 4.0 1.0\n1\n0.0 0.0 4.0 0.0\n''') == '3.7320508076'\nassert solution('''0.0 1.0 4.0 1.0\n1\n0.0 0.0 4.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 100.0\n''') == '163.5274740179'\nassert solution('''0.0 1.0 4.0 1.0\n1\n0.0 0.0 4.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 80.0\n''') == '168.7916512460'\n"
    },
    {
        "number": 3052,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0') == '168.7916512460\\n'\nassert solution('60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\\n') == '163.5274740179\\n'\nassert solution('50.0 -100.0 5.0 -10.0\\n2\\n-50.0 100.0 5.0 -100.0\\n5.0 -50.0 -100.0 -10.0\\n-99.0 100.0 5.0 -100.0\\n') == '0.013002\\n'\nassert solution('60.0 -100.0 50.0 -10.0\\n2\\n-50.0 100.0 5.0 -100.0\\n5.0 -50.0 -100.0 -10.0\\n-99.0 100.0 5.0 -100.0\\n') == '3.7320508076\\n'\nassert solution('60.0 -100.0 50.0 -10.0\\n2\\n-50.0 100.0 5.0 -100.0\\n5.0 -50.0 -100.0 -10.0\\n-99.0 100.0 5.0 -100.0\\n') == '4.7212336004\\n'\n"
    },
    {
        "number": 3052,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0') == '168.7916512460'\nassert solution('60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0') == '163.5274740179'\nassert solution('60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0') == '163.5274740179'\nassert solution('60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0') == '163.5274740179'\nassert solution('60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0') == '163.5274740179'\n"
    },
    {
        "number": 3052,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 3053,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"6 5 3\") == \"rarity\"\nassert solution(\"9 8 1\") == \"canterlot\"\nassert solution(\"5 3 5\") == \"madam\"\nassert solution(\"10 22 3\") == \"canterlot\"\nassert solution(\"3 5 1\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3053,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 5 3') == 'rarity'\nassert solution('9 8 1') == 'canterlot'\nassert solution('5 3 5') =='madam'\nassert solution('0 0 0') == 'IMPOSSIBLE'\n\n'''\n\nfrom itertools import combinations"
    },
    {
        "number": 3053,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 5 3') == 'rarity'\nassert solution('9 8 1') == 'canterlot'\nassert solution('5 3 5') =='madam'\nassert solution('0 0 0') == 'IMPOSSIBLE'\nassert solution('0 0 1') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3053,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6 5 3') == 'rarity'\nassert solution('9 8 1') == 'canterlot'\nassert solution('5 3 5') =='madam'\nassert solution('5 3 5') =='madam'\nprint(\"tests passed\")\n"
    },
    {
        "number": 3053,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"6 5 3\") == \"rarity\"\nassert solution(\"9 8 1\") == \"canterlot\"\nassert solution(\"5 3 5\") == \"madam\"\nassert solution(\"9 7 2\") == \"impossible\"\nassert solution(\"8 9 3\") == \"impossible\"\n"
    },
    {
        "number": 3053,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6 5 3') == 'rarity'\nassert solution('9 8 1') == 'canterlot'\nassert solution('5 3 5') =='madam'\n"
    },
    {
        "number": 3053,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6 5 3''') == 'rarity'\nassert solution('''9 8 1''') == 'canterlot'\nassert solution('''5 3 5''') =='madam'\n'''\n\n\"\"\"\n\n\n\"\"\"\n\"\"\"\nEXAMPLE:\n\nRarity wants to design a shirt that can be printed in a fashionable way, and it wants to know how to get this done. Her print size is specified as the width and length of the shirt, the width and length of the long pants, and the size of the short pants.\n\nWhat is the maximum possible length of the shirt that Rarity can design?\n\n\"\"\""
    },
    {
        "number": 3053,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6 5 3') == 'rarity'\nassert solution('9 8 1') == 'canterlot'\nassert solution('5 3 5') =='madam'\nassert solution('5 5 5') == 'impossible'\nassert solution('9 9 9') == 'impossible'\n"
    },
    {
        "number": 3053,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6 5 3') == 'rarity'\nassert solution('9 8 1') == 'canterlot'\nassert solution('5 3 5') =='madam'\nassert solution('4 1 6') == 'IMPOSSIBLE'\nassert solution('5 8 6') == 'canterlot'\n"
    },
    {
        "number": 3053,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"6 5 3\") == \"rarity\"\nassert solution(\"9 8 1\") == \"canterlot\"\nassert solution(\"5 3 5\") == \"madam\"\nassert solution(\"\") == \"IMPOSSIBLE\"\nassert solution(\"10 5 1\") == \"canterlot\"\n\n\"\"\"\n"
    },
    {
        "number": 3054,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!.\\n\") == \"International contest- motivation high\\nProgrammers have fun!\"\n\"\"\"\n\nfrom collections import Counter\n"
    },
    {
        "number": 3054,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.') == 'Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.'\nassert solution('I') == 'I'\nassert solution('!') == '!'\nassert solution('??') == '?'\nassert solution('QU') == 'QU'\n"
    },
    {
        "number": 3054,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''Blue Ridge mountain road.\nLeaves, glowing in autumn sun, fall in Virginia. ''') == '''Blue Ridge mountain road.\nLeaves, glowing in autumn sun,\nfall in Virginia. '''\nassert solution('''Who would know if we had too few syllables?\n''') == '''Who would know if we had too few syllables?\n'''\nassert solution('''abcdefghijklmnopqrstuvwxyz.\n''') == '''abcdefghijklmnopqrstuvwxyz.\n'''\nassert solution('''We are the champions.\nWe are the champions.\nWe are the champions.\n''') == '''We are the champions.\nWe are the champions.\nWe are the champions.\n'''\nassert solution('''Fly.\nI.\n!?.\nSsshhh!''') == '''Fly.\nI.\n!?.\nSsshhh!'''\n"
    },
    {
        "number": 3054,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('Long sentence\\n' * 4) == 'Long sentence\\n' * 4\nassert solution('One two three four.\\n' * 4) == 'One two three four.\\n' * 4\nassert solution('a b c d e\\n' * 4) == 'a b c d e\\n' * 4\nassert solution('Fred, Christine, Mary and Ted.\\n' * 4) == 'Fred, Christine, Mary and Ted.\\n' * 4\n"
    },
    {
        "number": 3054,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    \"Blue Ridge mountain road.\\n\"\n    \"    Leaves, glowing in autumn sun,\\n\"\n    \"    fall in Virginia.\"\n) == \"Blue Ridge mountain road.\\n\"\n\nassert solution(\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    \"\\n\"\n    "
    },
    {
        "number": 3054,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia. ') == 'Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.'\nassert solution('Who would know if we had too few syllables?') == 'Who would know if we had too few syllables?'\nassert solution('international contest- motivation high Programmers have fun!. ') == 'international contest- motivation high\\nProgrammers have fun!'\nassert solution('Is this the best football? We dont talk like that. ') == 'Is this the best football?\\nWe dont talk like that.'\nassert solution('Is this the best football? We dont talk like that. ') == 'Is this the best football?\\nWe dont talk like that.'\n"
    },
    {
        "number": 3054,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('Blue Ridge mountain road.\\n\\\n    Leaves, glowing in autumn sun,\\n\\\n    fall in Virginia.') == 'Blue Ridge mountain road.\\n\\\n    Leaves, glowing in autumn sun,\\n\\\n    fall in Virginia.'\nassert solution('I\u2019d never believe that any human being would have \\\n    actually participated in an Olympic Games!') == 'I\u2019d never believe that any human being would have \\\n    actually participated in an Olympic Games!'\nassert solution('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus ut tortor quis metus ullamcorper, \\\n    a lobortis est at nibh. Integer id sollicitudin nibh. Pellentesque eget nisl non ligula. Duis eget bibendum arcu. \\\n    Nulla id, dui vitae mattis commodo, lacus sapien rutrum et, erat dolor est, ligula nibh erat, euismod eu est euismod ipsum. \\\n    In tristique turpis nec erat. Donec ante diam, commodo eu, vulputate in, tristique in, fermentum sed, justo. \\\n    Etiam dapibus ante neque, vel fringilla nunc malesuada nec. Sed at dolor in nibh tristique, non ullamcorper lorem. \\\n    Curabitur et diam dui, sit amet varius leo. Maecenas luctus, nunc eget tempus ornare, purus est metus, \\\n    nec fringilla erat erat id ligula. Pellentesque ornare fermentum leo, non interdum ipsum. Pellentesque eu arcu metus. \\\n    In ornare mi. Curabitur tincidunt, neque et tempus cursus, enim tellus ornare sapien, in finibus nibh nisl rhoncus orci. \\\n    Praesent fermentum, leo nec tristique ultricies, nisi neque eros, auctor dolor arcu, in sodales dui mollis sapien. \\\n    Morbi tincidunt, leo id tristique laoreet, libero orci lorem, et tempus nulla fringilla nunc nec nisl. In a erat volutpat. \\\n    Curabitur id ante sapien, aliquam aliquam metus. Nam vitae semper nunc. Quisque ultricies dignissim leo, non mattis \\\n    lobortis. Nulla et dolor nunc. Morbi dictum, ante vitae malesuada commodo, nibh dapibus augue, eu tincidunt risus dapibus erat, \\\n    quis bibendum erat nibh. Phasellus eu ligula ut nunc rutrum tempus. Etiam tempor, est et tempus laoreet dictum, nulla \\\n    eros est, at pulvinar odio hendrerit erat sit amet, quisque in lectus sem. Duis facilisis, massa a bibendum blandit, nisi \\\n    eros urna, quis dictum metus nisl faucibus tincidunt. Nulla pharetra, massa id cursus commodo, enim ipsum quis eros, \\\n    nec fringilla risus erat cursus urna, eu lobortis nisl nibh at sapien. Suspendisse quis tincidunt erat, quis elementum eros. \\\n    Aenean pellentesque lacus non sapien aliquet, quis rutrum nibh. Morbi, diam eu lobortis rhoncus, turpis sit amet est, \\\n    nec erat rhoncus leo, sit amet lobortis erat nibh nec purus. Duis sapien, dignissim et pretium euismod, felis quis massa, \\\n    quis lacinia leo dignissim. Aenean sit amet quis mauris tempus, interdum eros congue, lobortis est. Pellentesque porta, \\\n    nibh eu convallis fringilla, eros rutrum odio, in semper augue ligula, ut sagittis metus erat in nisl. Aenean fermentum, \\\n    neque et tempus ornare, justo metus, in semper nisi rhoncus urna, nulla eros et sapien in sapien. In quis nunc, luctus"
    },
    {
        "number": 3054,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    \"Blue Ridge mountain road. \"\n    \"Leaves, glowing in autumn sun, \"\n    \"fall in Virginia.\") == \"Blue Ridge mountain road.\\n\"\nassert solution(\n    \"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\\n\"\nassert solution(\n    \"International contest- motivation high Programmers have fun!\") == \"International\\n\"\nassert solution(\n    \"I'm so tired.\") == \"I'm so tired.\\n\"\nassert solution(\n    \"No matter how hard you try, you will always get what you want.\") == \"No matter how hard you try, you will always get what you want.\\n\"\n"
    },
    {
        "number": 3054,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"Blue\nRidge\nMountain\nroad.\nLeaves,\nglowing\nin\nautumn\nsun.\nFall\nin\nVirginia.\n\"\"\") == \"\"\"Blue\nRidge\nMountain\nroad.\nLeaves,\nglowing\nin\nautumn\nsun.\nFall\nin\nVirginia.\"\"\"\nassert solution(\n\"\"\"Yellow\nfawn,\nwhere\nto\npansy\nHave\nmade\nmy\nmother.\n\"\"\") == \"\"\"Yellow\nfawn,\nwhere\nto\npansy\nHave\nmade\nmy\nmother.\"\"\"\n"
    },
    {
        "number": 3054,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.') == 'Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.'\nassert solution('I') == 'I\\nI\\nI\\nI'\nassert solution('!?') == '!\\n!\\n!'\nassert solution('!?!') == '!\\n!\\n!'\nassert solution('??!?') == '?\\n?\\n?'\n"
    },
    {
        "number": 3055,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\nThoreTiemann\nThoreHusfeldt''') == 'ThoreH'\nassert solution('''2\nThoreTiemann\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt''') == 'ThoreH'\nassert solution('''2\nThoreTiemann\nThoreHusfeldt\nJohanSannemo\nJohanSannemo\nJohanSannemo''') == 'Thore is awesome'\n'''\n"
    },
    {
        "number": 3055,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin[0]"
    },
    {
        "number": 3055,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\nThoreTiemann\nThoreHusfeldt''') == 'ThoreH'\nassert solution('''2\nThoreHusfeldt\nJohanSannemo''') == 'Thore is awesome'\nassert solution('''2\nThoreHusfeldt\nThoreHusfeldt''') == 'Thore is awesome'\nassert solution('''2\nThoreTiemann\nJohanSannemo''') == 'Thore sucks'\nassert solution('''2\nThoreHusfeldt\nJohanSannemo''') == 'Thore sucks'\n"
    },
    {
        "number": 3055,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ab') == 'a'\nassert solution('abc') == 'a'\nassert solution('abcd') == 'ab'\nassert solution('abcdc') == 'ab'\nassert solution('abcdefg') == 'ab'\n"
    },
    {
        "number": 3055,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    2\n    ThoreTiemann\n    ThoreHusfeldt\n    \"\"\"\n) == \"ThoreH\"\n\nassert solution(\n    \"\"\"\n    2\n    JohanSannemo\n    ThoreHusfeldt\n    \"\"\"\n) == \"Thore is awesome\"\n\nassert solution(\n    \"\"\"\n    1\n    ThoreHusfeldt\n    \"\"\"\n) == \"ThoreH\"\n\nassert solution(\n    \"\"\"\n    2\n    ThoreHusfeldt\n    JohanSannemo\n    \"\"\"\n) == \"Thore is awesome\"\n\nassert solution(\n    \"\"\"\n    2\n    ThoreHusfeldt\n    JohanSannemo\n    ThoreHusfeldt\n    \"\"\"\n) == \"Thore is awesome\"\n"
    },
    {
        "number": 3055,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\nThoreTiemann\\nThoreHusfeldt\\n') == 'ThoreH'\nassert solution('2\\nThoreHusfeldt\\nJohanSannemo\\n') == 'Thore is awesome'\nassert solution('2\\nThoreHusfeldt\\nThoreHusfeldt\\n') == 'Thore sucks'\nassert solution('2\\nThoreHusfeldt\\nJohanSannemo\\nJohanSannemo\\n') == 'ThoreHusfeldt'\nassert solution('2\\nThoreHusfeldt\\nJohanSannemo\\nJohanSannemo\\nJohanSannemo\\n') == 'Thore is awesome'\n"
    },
    {
        "number": 3055,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(sample1) == \"ThoreH\"\nassert solution(sample2) == \"Thore is awesome\"\nassert solution(sample3) == \"ThoreHusfeldt\"\n\nsolution = lambda n: \"Thore is awesome\" if n == 1 else min(set(s[:i] for s in stdin.strip().split(\"\\n\") for i in range(1, len(s) + 1) if s.startswith(\"ThoreHusfeldt\") and all(s[i] <= s[i+1] for i in range(len(s)-1))), key=lambda s: s.lower())\n\nassert solution(sample1) == \"ThoreH\"\nassert solution(sample2) == \"Thore is awesome\"\n"
    },
    {
        "number": 3055,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin.split('\\n')[1]\n"
    },
    {
        "number": 3055,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    '''1\nThoreHusfeldt\nThoreHusfeldt''') == 'ThoreH'\n\nassert solution(\n    '''2\nThoreTiemann\nThoreHusfeldt\nThoreHusfeldt''') == 'ThoreH'\n\nassert solution(\n    '''2\nThoreTiemann\nJohanSannemo\nThoreHusfeldt''') == 'ThoreH'\n\nassert solution(\n    '''3\nThoreTiemann\nJohanSannemo\nThoreHusfeldt\nThoreHusfeldt''') == 'ThoreH'\n\nassert solution(\n    '''4\nThoreTiemann\nJohanSannemo\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt''') == 'ThoreH'\n"
    },
    {
        "number": 3055,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''2\nThoreTiemann\nThoreHusfeldt''') == 'ThoreH'\nassert solution(\n'''2\nThoreHusfeldt\nJohanSannemo''') == 'Thore is awesome'\nassert solution(\n'''2\nThoreHusfeldter\nThoreHusfeldt''') == 'Thore sucks'\nassert solution(\n'''4\nThoreHusfeldter\nThoreHusfeldt\nJohanSannemo\nThoreTiemann''') == 'Thore is awesome'\nassert solution(\n'''4\nThoreHusfeldter\nThoreHusfeldt\nJohanSannemo\nThoreTiemann''') == 'Thore sucks'\n"
    },
    {
        "number": 3056,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('LL') == 0\nassert solution('LR') == 0\nassert solution('L') == 0\nassert solution('P') == 0\n"
    },
    {
        "number": 3056,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('P*P') == 6\nassert solution('L*R') == 25\nassert solution('**') == 33\n\nprint('solution passed')"
    },
    {
        "number": 3056,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('PP') == 3\nassert solution('L**R') == 6\nassert solution('*') == 33\nassert solution('LP') == 22\nassert solution('LLR') == 25\n"
    },
    {
        "number": 3056,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"P*P\") == 6\nassert solution(\"L*R\") == 25\nassert solution(\"**\") == 33\n"
    },
    {
        "number": 3056,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('LL*RL') == 6\nassert solution('PP*PL') == 3\nassert solution('**') == 33\n"
    },
    {
        "number": 3056,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 0\nassert solution('L*R') == 25\nassert solution('P*P') == 6\nassert solution('P*P*P') == 0\nassert solution('*P*P') == 33\n"
    },
    {
        "number": 3056,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"P*P\") == 6\nassert solution(\"L*R\") == 25\nassert solution(\"**\") == 33\n"
    },
    {
        "number": 3056,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(**parse_input(get_input(__name__, test1))) == '6'\nassert solution(**parse_input(get_input(__name__, test2))) == '25'\nassert solution(**parse_input(get_input(__name__, test3))) == '33'\nprint(solution(**parse_input(get_input(__name__))))\n"
    },
    {
        "number": 3056,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == str(0)\n"
    },
    {
        "number": 3056,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\nassert solution('LL') == 'LL'\nassert solution
    },
    {
        "number": 3057,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"herp is derp\nderp is herp\nherp is herp\nderp is derp\nherp is derp\nherp is herp\nherp is herp\nderp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is herp\nherp is herp\nherp is herp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\n"
    },
    {
        "number": 3057,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('herp is derp') == 'yes'\nassert solution('derp is herp') == 'wait what?'\nassert solution('oskar not lukas') == 'wait what?'\nassert solution('oskar is poptart') == 'no'\nassert solution('lukas is smart') == 'no'\n"
    },
    {
        "number": 3057,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('\"\"') == 'wait what?'\nassert solution('\"moo\" \"foo\" \"huh\" \"huh\"') == 'wait what?'\nassert solution('\"herp\" \"derp\"') == 'yes'\nassert solution('\"herp\" \"derp\" \"herp\" \"derp\"') == 'wait what?'\nassert solution('\"oskar\" \"lukas\" \"oskar\" \"lukas\" \"herp\"') == 'wait what?'\n"
    },
    {
        "number": 3057,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''herp is derp\nderp is herp\nherp is herp\nderp is derp''') == 'yes'\nassert solution('''oskar not lukas\noskar is poptart\nlukas is smart''') == 'wait what?'\nassert solution('''moo not foo\noskar is poptart\nlukas is smart''') == 'yes'''') == 'no'\nassert solution('''moo not foo\noskar is poptart\nlukas is smart\nlukas is poptart\noskar is poptart''') == 'wait what?'\n'''"
    },
    {
        "number": 3057,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abracadabra') == 'wait what?'\nassert solution('lukas is lame') == 'wait what?'\nassert solution('moo is lame') == 'yes'\nassert solution('moo not foo') == 'yes'\nassert solution('lakkmadeeeekkkkkeeeeelalaaa') == 'wait what?'\n"
    },
    {
        "number": 3057,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('in:herp is derp\\nin:derp is herp\\nin:herp is herp\\nin:derp is derp\\nout:yes') == 'out:yes'\nassert solution('in:oskar not lukas\\nin:oskar is poptart\\nin:lukas is smart\\nout:wait what?') == 'out:yes'\nassert solution('in:moo not foo\\nin:moo is foo\\nin:foo is foo\\nin:foo is foo\\nout:yes') == 'out:yes'\nassert solution('in:lukas is smart\\nin:oskar is lukas\\nin:lukas is lukas\\nin:lukas is lukas\\nout:wait what?') == 'out:wait what?'\nassert solution('in:lukas is lukas\\nin:lukas is lukas\\nin:lukas is lukas\\nin:lukas is lukas\\nout:wait what?') == 'out:wait what?'\n"
    },
    {
        "number": 3057,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('herp is derp') == 'yes'\nassert solution('derp is herp') == 'wait what?'\nassert solution('oskar not lukas') == 'wait what?'\nassert solution('oskar is poptart') == 'wait what?'\nassert solution('lukas is smart') == 'wait what?'\n"
    },
    {
        "number": 3057,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"herp is derp\nderp is herp\nherp is herp\nderp is derp\"\"\"\n) == \"yes\"\nassert solution(\n\"\"\"oskar not lukas\noskar is poptart\nlukas is smart\"\"\"\n) == \"wait what?\"\nassert solution(\n\"\"\"moo not foo\noskar is poptart\nlukas is smart\"\"\"\n) == \"yes\""
    },
    {
        "number": 3057,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n4\nherp is derp\nderp is herp\nherp is herp\nderp is derp\n''') == 'yes'\nassert solution('''\n3\noskar not lukas\noskar is poptart\nlukas is smart\n''') == 'wait what?'\nassert solution('''\n1\nmoo not foo\n''') == 'yes'\nassert solution('''\n1\nalfred lu walfred\nalfred is alfred\n''') == 'no'\nassert solution('''\n1\ndwarf is dwarf\ndwarf is dwarf\ndwarf is dwarf\n''') == 'yes'\n"
    },
    {
        "number": 3057,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n4\nherp is derp\nderp is herp\nherp is herp\nderp is derp\n''') == 'yes'\nassert solution('''\n3\noskar not lukas\noskar is poptart\nlukas is smart\n''') == 'wait what?'\nassert solution('''\n2\nmoo not foo\n''') == 'yes'\nassert solution('''\n3\noskar not foo\noskar is foo\nlukas is smart\n''') == 'wait what?'\nassert solution('''\n4\nherp is derp\nderp is herp\nherp is herp\nderp is derp\n''') == 'wait what?'\n"
    },
    {
        "number": 3058,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\nAACCMMAA\\nACA\\nMM\\nACMAA\\nAA\\nA\\n') == '1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n'\nassert solution('1\\nAM\\nMA\\n') == 'impossible'\nprint(solution(stdin))\n"
    },
    {
        "number": 3058,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\nACMA') == 'impossible'\nassert solution('2\\nAM') == 'impossible'\nassert solution('3\\nACM') == 'impossible'\nassert solution('4\\nAM') == 'impossible'\nassert solution('5\\nAACCMMAA') == '1 4'\n"
    },
    {
        "number": 3058,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n5\nAACCMMAA\nACA\nMM\nACMAA\nAA\nA\n''') == 'impossible'\nassert solution('''\n3\nACMA\nACM\nACA\n''') == 'impossible'\nassert solution('''\n1\nAM\nMA\n''') == 'impossible'\nassert solution('''\n5\nAMAA\nAMA\nAA\nACM\nACMA\n''') == 'impossible'\nassert solution('''\n2\nAB\nBA\nAB\n''') == 'impossible'\n"
    },
    {
        "number": 3058,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n5\nAACCMMAA\nACA\nMM\nACMAA\nAA\nA\n''') == 'impossible'\nassert solution('''\n1\nACMA\nACM\nACA\nAMA\n''') == '1 4'\nassert solution('''\n3\nACM\nACM\nACA\n''') == 'impossible'\nassert solution('''\n4\nAM\nACM\nACM\nACM\n''') == '1 4'\nassert solution('''\n5\nACCCMM\nCC\nMM\nAC\nAC\nAC\n''') == 'impossible'\n"
    },
    {
        "number": 3058,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    input) == \"impossible\"\n"
    },
    {
        "number": 3058,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\\\n5\nAACCMMAA\nACA\nMM\nACMAA\nAA\nA\n''') == '1 4'\nassert solution('''\\\n5\nACMA\nACM\nACA\nAMA\n''') == 'impossible'\nassert solution('''\\\n5\nAACCMMAA\nACA\nMM\nACMAA\nAA\nA\n''') == '1 4'\nassert solution('''\\\n3\nACMA\nACM\nACA\nAMA\n''') == 'impossible'\nassert solution('''\\\n1\nAM\nMA\n''') == 'impossible'\n"
    },
    {
        "number": 3058,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"ACMA\") == \"impossible\"\nassert solution(\"AAC\") == \"1 4\"\nassert solution(\"M\") == \"impossible\"\nassert solution(\"MCA\") == \"1 4\"\nassert solution(\"AC\") == \"impossible\"\n"
    },
    {
        "number": 3058,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('1') == 'impossible'\nassert solution('AA') == 'impossible'\nassert solution('AAAA') == 'impossible'\nassert solution('ACCA') == '1 4'\n"
    },
    {
        "number": 3058,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3058,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\nAAAA\\nMM') == 'impossible'\nassert solution('2\\nAA\\nA') == '1 2'\nassert solution('2\\nAAA\\nAA') == 'impossible'\nassert solution('5\\nAACCMMAA\\nACA\\nMM\\nACMAA\\nAA\\nA\\n') == '1 4'\nassert solution('7\\nACMA\\nACM\\nACA\\nAMA\\nA\\nAA\\n') == 'impossible'\n"
    },
    {
        "number": 3059,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n''') == '124'\nassert solution('''\n2 4 1\n1 0.5 5\n''') == '3'\nassert solution('''\n10 20 3\n5 0.3 8\n6 0.8 3\n8 0.9 3\n''') == '18.9029850746'\nassert solution('''\n2 3 1\n1 0.5 1\n2 0.5 1\n3 0.5 1\n''') == '2.5'\nassert solution('''\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n''') == '124'\n"
    },
    {
        "number": 3059,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2''') == '124'\nassert solution('''10 20 3\n5 0.3 8\n6 0.8 3\n8 0.9 3\n''') == '18.9029850746'\nassert solution('''2 4 1\n1 0.5 5\n''') == '3'\nassert solution('''2 4 1\n1 0.5 5\n2 0.5 5\n3 0.5 5\n4 0.5 5\n5 0.5 5\n6 0.5 5\n7 0.5 5\n8 0.5 5\n9 0.5 5\n''') == '18.90429507460'"
    },
    {
        "number": 3059,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n100 11 0') == '3'\nassert solution('2\\n1 0.5 10\\n85 0.5 2') == '3'\nassert solution('2\\n1 0.5 10\\n85 0.5 2\\n100 0.1 10') == '18.9'\nassert solution('2\\n1 0.5 10\\n85 0.5 2\\n100 0.1 10\\n100 0.5 10') == '18.9'\nassert solution('2\\n1 0.5 10\\n85 0.5 2\\n100 0.1 10\\n100 0.5 10\\n1 0.1 10') == '18.9'\n"
    },
    {
        "number": 3059,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('100 111 5\\n20 0.5 10\\n80 0.5 2\\n85 0.5 2\\n90 0.5 2\\n95 0.5 2') == '124'\nassert solution('2 4 1\\n1 0.5 5\\n\\nSample Output 2:') == '3'\nassert solution('10 20 3\\n5 0.3 8\\n6 0.8 3\\n8 0.9 3') == '18.9029850746'\nassert solution('100 100 3\\n5 0.3 8\\n6 0.8 3\\n8 0.9 3') == '118.869322433'\nassert solution('10 10 3\\n5 0.3 8\\n6 0.8 3\\n8 0.9 3') == '11.8479899918'\n"
    },
    {
        "number": 3059,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('100 111 5') == '124'\nassert solution('2 4 1') == '3'\nassert solution('10 20 3') == '18.9029850746'\nassert solution('10 100 5') == '124'\nassert solution('10 20 3') == '18.9029850746'\n"
    },
    {
        "number": 3059,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('100 110 5\\n20 0.5 10\\n80 0.5 2\\n85 0.5 2\\n90 0.5 2\\n95 0.5 2\\n') == '124'\nassert solution('2 4 1\\n1 0.5 5\\n') == '3'\nassert solution('10 20 3\\n5 0.3 8\\n6 0.8 3\\n8 0.9 3\\n') == '18.9029850746'\n"
    },
    {
        "number": 3059,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''100 111 5''') == \"124\"\nassert solution('''2 4 1''') == \"3\"\nassert solution('''10 20 3''') == \"18.9029850746\"\n"
    },
    {
        "number": 3059,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''100 111 5''') == '124'\nassert solution('''2 4 1''') == '3'\nassert solution('''10 20 3''') == '18.9029850746'\n"
    },
    {
        "number": 3059,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"100 111 5\\n20 0.5 10\\n80 0.5 2\\n85 0.5 2\\n90 0.5 2\\n95 0.5 2\") == \"124\"\n"
    },
    {
        "number": 3059,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''10 2 5\n5 0.3 8\n6 0.8 3\n8 0.9 3''') == '18.9029850746'\nassert solution('''100 110 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2''') == '124'\nassert solution('''2 4 1\n1 0.5 5\nSample Output 2:\n3\n\nSample Input 3:\n10 20 3\n5 0.3 8\n6 0.8 3\n8 0.9 3''') == '18.9029850746'\n"
    },
    {
        "number": 3060,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin.split()[-1]\n"
    },
    {
        "number": 3060,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 3\n''') == '2 1 2'\nassert solution('''2 1\n''') == '1'\nassert solution('''5 22\n''') == '4 3 4 2'\n"
    },
    {
        "number": 3060,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 3''') == '''2 1 2'''\nassert solution('''2 1''') == '''1'''\nassert solution('''5 22''') == '''4 3 4 2'''\nassert solution('''3 4''') == '''2 1 2'''\nassert solution('''3 3''') == '''2 1 2'''\n"
    },
    {
        "number": 3060,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3060,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('1\\n1') == '1'\nassert solution('1\\n2') == '1'\nassert solution('2\\n1') == '1'\nassert solution('2\\n2') == '2'\n"
    },
    {
        "number": 3060,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 3\\n2 1\\n2 1\\n2 1\\n2 1') == '2 1 2\\n'\nassert solution('5 22\\n4 3 4 2\\n') == '4 3 4 2\\n'\nassert solution('2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n"
    },
    {
        "number": 3060,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 3\n''') == '2 1 2'\nassert solution('''2 1\n''') == '1'\nassert solution('''5 22\n''') == '4 3 4 2'\nassert solution('''1\n''') == '1'\nassert solution('''7 22\n''') == '5 4 5 3 2 1'\n\nfrom itertools import product\n"
    },
    {
        "number": 3060,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 3\\n2 1 2') == '2 1 2'\nassert solution('2 1\\n1') == '1'\nassert solution('5 22\\n4 3 4 2') == '4 3 4 2'\nprint('All test cases passed successfully.')\n"
    },
    {
        "number": 3060,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2\\n2 3\\n') == '3\\n'\nassert solution('2 1\\n1 2\\n') == '1\\n'\nassert solution('2 1\\n1 3\\n') == '2\\n'\nassert solution('5 22\\n1 2\\n1 3\\n1 4\\n1 5\\n2 6\\n3 7\\n4 8\\n5 9\\n6 10\\n7 11\\n8 12\\n9 13\\n10 14\\n11 15\\n12 16\\n13 17\\n14 18\\n15 19\\n16 20\\n17 21\\n18 22\\n19 22\\n20 22\\n') == '5\\n'\nassert solution('5 9\\n1 2\\n1 3\\n1 4\\n1 5\\n2 6\\n3 7\\n4 8\\n5 9\\n6 10\\n7 11\\n8 12\\n9 13\\n10 14\\n11 15\\n12 16\\n13 17\\n14 18\\n15 19\\n16 20\\n17 21\\n18 22\\n19 22\\n20 22\\n') == '2\\n'\n"
    },
    {
        "number": 3060,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 3') == '2'\nassert solution('5 4') == '4'\nassert solution('3 2') == '2'\nassert solution('3 22') == '1'\n"
    },
    {
        "number": 3061,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\\n2\\n\") == \"0\"\nassert solution(\"3\\n2\\n\") == \"2\"\nassert solution(\"3\\n3\\n\") == \"1\"\nassert solution(\"4\\n2\\n\") == \"2\"\nassert solution(\"4\\n3\\n\") == \"1\"\n"
    },
    {
        "number": 3061,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 4\") == \"2\"\nassert solution(\"7 6\") == \"2\"\nassert solution(\"2 3\") == \"0\"\nassert solution(\"4 7\") == \"0\"\nassert solution(\"10 7\") == \"1\"\n"
    },
    {
        "number": 3061,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(open('./tests/testing_all.txt', 'r').read()) == '2'\nassert solution(open('./tests/testing_1.txt', 'r').read()) == '2'\nassert solution(open('./tests/testing_2.txt', 'r').read()) == '2'\nassert solution(open('./tests/testing_3.txt', 'r').read()) == '1'\nassert solution(open('./tests/testing_4.txt', 'r').read()) == '0'\n"
    },
    {
        "number": 3061,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\n1 3\\n3 4\\n2 4\\n') == '2'\nassert solution('2 4\\n1 2\\n2 3\\n3 4\\n') == '2'\nassert solution('2 5\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7\\n') == '0'\nassert solution('3 4\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7\\n8 7\\n') == '2'\nassert solution('4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 7\\n') == '0'\n"
    },
    {
        "number": 3061,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n3 4\\n2 4\\n2 4\\n3 4\\n3 4\") == \"2\"\nassert solution(\"7 6\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7\\n7 2\") == \"0\"\nassert solution(\"7 5\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7\\n7 2\") == \"2\"\nassert solution(\"1 2\\n2 3\\n3 4\") == \"2\"\nassert solution(\"3 4\\n3 4\\n3 4\") == \"0\"\n"
    },
    {
        "number": 3061,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\n1 2\\n2 3\\n3 4\\n2 4\\n1 3\\n3 5\\n1 2\") == \"2\"\nassert solution(\"5 3\\n1 2\\n2 3\\n3 4\\n2 4\\n1 3\\n3 5\\n1 2\") == \"0\"\nassert solution(\"7 6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\") == \"2\"\nassert solution(\"7 6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n1 3\") == \"0\"\nassert solution(\"8 7\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\") == \"2\"\n"
    },
    {
        "number": 3061,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(open(\"fibonacci.txt\", \"r\").read()) == '1'\nassert solution(open(\"fibonacci2.txt\", \"r\").read()) == '4'\nassert solution(open(\"fibonacci3.txt\", \"r\").read()) == '5'\nassert solution(open(\"fibonacci4.txt\", \"r\").read()) == '8'\nassert solution(open(\"fibonacci5.txt\", \"r\").read()) == '13'\n"
    },
    {
        "number": 3061,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3061,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''4 4\n1 2\n1 3\n3 4\n2 4''') == '2'\nassert solution(\n'''7 6\n1 2\n2 3\n2 5\n6 3\n7 2\n3 4\nSample Output 3''') == '0'\nassert solution(\n'''8 5\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 4\n4 1''') == '2'\n"
    },
    {
        "number": 3061,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 4\n1 2\n1 3\n3 4\n2 4\n''') == '2'\nassert solution('''7 6\n1 2\n2 3\n2 5\n6 3\n7 2\n3 4\n''') == '0'\nassert solution('''7 5\n1 2\n2 3\n3 4\n5 6\n6 7\n''') == '2'\n"
    },
    {
        "number": 3062,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 0\\n1 1\\n') == '0.00000000'\nassert solution('-10 10\\n10.00 1.00\\n') == '3.14159265'\nassert solution('-10 10\\n1.00 0.10\\n') == '28.26445910'\nassert solution('20 0\\n1.00 0.10\\n') == '20.00000000'\nassert solution('0 0\\n1 1\\n') == '0.00000000'\n"
    },
    {
        "number": 3062,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 0\\n1.00 0.10\\n') == '20.00000000'\nassert solution('-10 10\\n10.00 1.00\\n') == '3.14159265'\nassert solution('-10 10\\n0.1 0.01\\n') == '28.26445910'\nassert solution('-10 10\\n1.0 1.0\\n') == '28.26445910'\nassert solution('-10 10\\n0.1 1.0\\n') == '28.26445910'\n"
    },
    {
        "number": 3062,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"20 0\\n1.00 0.10\") == \"20.00000000\"\nassert solution(\"-10 10\\n10.00 1.00\") == \"3.14159265\"\nassert solution(\"0 20\\n1.00 0.10\") == \"28.26445910\"\n\"\"\"\n"
    },
    {
        "number": 3062,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(open(\"test_files/A1.txt\").read()) == 12.34\nassert solution(open(\"test_files/A2.txt\").read()) == 22.22\nassert solution(open(\"test_files/A3.txt\").read()) == 27.27\nassert solution(open(\"test_files/A4.txt\").read()) == 43.43\nassert solution(open(\"test_files/A5.txt\").read()) == 59.59\n"
    },
    {
        "number": 3062,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('20 0') == '20.00000000'\nassert solution('-10 10') == '3.14159265'\nassert solution('0 20') == '28.26445910'\n\nprint('Testcases passed')\n"
    },
    {
        "number": 3062,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"20 0\\n1.00 0.10\") == \"20.00000000\"\nassert solution(\"-10 10\\n10.00 1.00\") == \"3.14159265\"\nassert solution(\"0 20\\n1.00 0.10\") == \"28.26445910\"\n"
    },
    {
        "number": 3062,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''20 0\n1.00 0.10''') == '20.00000000'\nassert solution('''-10 10\n10.00 1.00''') == '3.14159265'\nassert solution('''0 20\n1.00 0.10''') == '28.26445910'\nassert solution('''2 -1\n-10.00 1.00''') == '0.5'\nassert solution('''1 0\n10.00 1.00''') == '4.5'\n"
    },
    {
        "number": 3062,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''20 0\n1.00 0.10''') == '20.00000000'\nassert solution('''-10 10\n10.00 1.00''') == '3.14159265'\nassert solution('''0 20\n1.00 0.10''') == '28.26445910'\nassert solution('''10 10\n1.00 0.10''') == '1.99999990'\nassert solution('''20 -20\n1.00 0.10''') == '1.99999989'\n"
    },
    {
        "number": 3062,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''20 0\n1.00 0.10''') == '20.00000000'\nassert solution('''-10 10\n10.00 1.00''') == '3.14159265'\nassert solution('''0 20\n1.00 0.10''') == '28.26445910'\nassert solution('''4 0\n1.00 0.10''') == '1.56303208'\nassert solution('''4 1\n1.00 0.10''') == '1.56296524'\n"
    },
    {
        "number": 3062,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n20 0\n1.00 0.10\n''') == '20.00000000'\nassert solution('''\n-10 10\n10.00 1.00\n''') == '3.14159265'\nassert solution('''\n0 20\n1.00 0.10\n''') == '28.26445910'\n\nprint(solution(input()))"
    },
    {
        "number": 3063,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n4\n2 100\n1 100\n4 70\n3 70\n''') == \"170\"\nassert solution(\n'''\n4\n2 120\n3 50\n2 80\n''') == \"150\"\nassert solution(\n'''\n4\n3 80\n2 70\n1 70\n3 50\n''') == \"150\"\nassert solution(\n'''\n4\n3 80\n2 70\n1 70\n3 50\n''') == \"150\"\nassert solution(\n'''\n4\n2 100\n3 50\n2 80\n3 70\n''') == \"150\"\n"
    },
    {
        "number": 3063,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n2 100\n1 100\n4 70\n3 70''') == '170'\nassert solution('''5\n2 120\n3 50\n2 80\n3 70\n2 90\nSample Output 2:\n165\n''') == '165'\nassert solution('''4\n2 120\n3 50\n2 80\n3 70\nSample Output 2:\n165''') == '165'\n"
    },
    {
        "number": 3063,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\nprint(solution(stdin))\n"
    },
    {
        "number": 3063,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n2 100\n1 100\n4 70\n3 70''') == '170'\nassert solution('''3\n2 120\n3 50\n2 80\n''') == '150'\nassert solution('''2\n2 150\n1 150\n''') == '110'\nassert solution('''3\n2 10\n1 10\n2 5\n3 5\n''') == '15'\nassert solution('''2\n2 150\n1 150\n''') == '40'\n"
    },
    {
        "number": 3063,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n4\\n2\\n100\\n1\\n100') == '170'\nassert solution('2\\n3\\n2\\n100\\n1\\n100') == '150'\nassert solution('3\\n2\\n1\\n100\\n3\\n100') == '210'\nassert solution('2\\n3\\n2\\n100\\n1\\n100') == '150'\nassert solution('3\\n2\\n1\\n100\\n3\\n100') == '210'\n"
    },
    {
        "number": 3063,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    4\n    2 100\n    1 100\n    4 70\n    3 70\n    \"\"\") == '170'\n\nassert solution(\n    \"\"\"\n    4\n    2 120\n    3 50\n    2 80\n    \"\"\") == '150'\n\nassert solution(\n    \"\"\"\n    2\n    1 10\n    2 10\n    \"\"\") == '10'\n\nassert solution(\n    \"\"\"\n    3\n    2 120\n    3 50\n    2 80\n    \"\"\") == '170'\n\nassert solution(\n    \"\"\"\n    3\n    2 120\n    3 50\n    2 80\n    \"\"\") == '100'"
    },
    {
        "number": 3063,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1 100\\n2 100') == '100'\nassert solution('2\\n1 100\\n2 100\\n3 50') == '150'\nassert solution('2\\n1 100\\n2 70\\n2 80\\n3 70') == '100'\nassert solution('2\\n2 50\\n3 50') == '200'\n"
    },
    {
        "number": 3063,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n2 100\n1 100\n4 70\n3 70''') == \"170\"\nassert solution('''4\n2 120\n3 50\n2 80\n''') == \"150\"\nassert solution('''3\n2 120\n3 50\n2 80\n''') == \"150\"\nassert solution('''2\n3 120\n2 80\n''') == \"150\"\nassert solution('''2\n3 120\n2 80\n''') == \"150\"\n"
    },
    {
        "number": 3063,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n4\n2 100\n1 100\n4 70\n3 70\n''') == \"170\"\nassert solution('''\n3\n2 120\n3 50\n2 80\n''') == \"150\"\nassert solution('''\n3\n1 10\n2 10\n3 10\n''') == \"120\"\nassert solution('''\n3\n1 10\n2 10\n3 10\n2 40\n''') == \"100\"\nassert solution('''\n3\n1 10\n2 10\n3 10\n2 40\n2 40\n''') == \"50\"\n"
    },
    {
        "number": 3063,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\\n3\") == \"3\"\nassert solution(\"2\\n1\\n3\") == \"3\"\nassert solution(\"2\\n3\\n1\") == \"3\"\nassert solution(\"2\\n3\\n3\") == \"6\"\nassert solution(\"2\\n3\\n5\") == \"6\"\n"
    },
    {
        "number": 3064,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 3\\n1 2\\n1 3\\n2 4') == 2\nassert solution('6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6') == 5\nprint(\"All tests passed successfully.\")\n\n----END OF PROGRAM----\n"
    },
    {
        "number": 3064,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 3\n1 2\n1 3\n2 4\n3 4\n''') == '2'\nassert solution('''5 4\n1 2\n1 3\n2 4\n3 4\n4 5\n''') == '5'\nassert solution('''6 6\n1 2\n1 3\n2 4\n3 4\n3 5\n5 6\n''') == '5'\nassert solution('''7 7\n1 2\n1 3\n2 4\n3 4\n3 5\n4 5\n5 6\n6 7\n''') == '6'\nassert solution('''8 8\n1 2\n1 3\n2 4\n3 4\n3 5\n4 5\n5 6\n6 7\n7 8\n''') == '6'\n"
    },
    {
        "number": 3064,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n4 3\n1 2\n1 3\n2 4\n\"\"\"\n) == '2'\n\nassert solution(\n\"\"\"\n4 4\n1 2\n1 3\n2 4\n3 4\n\"\"\"\n) == '4'\n\nassert solution(\n\"\"\"\n4 4\n1 2\n1 3\n2 4\n1 4\n\"\"\"\n) == '4'\n\nassert solution(\n\"\"\"\n6 7\n1 2\n1 3\n2 4\n3 4\n3 5\n5 6\n\"\"\"\n) == '5'\n"
    },
    {
        "number": 3064,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 3\n1 2\n1 3\n2 4\n3 4''') == 2\nassert solution('''6 6\n1 2\n1 3\n2 4\n3 4\n3 5\n5 6''') == 5\nassert solution('''10 10\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 9\n2 8\n2 7\n2 6\n2 5\n2 4\n3 5\n3 4\n3 3\n3 2\n3 1\n4 3\n5 6\n6 7\n7 8\n8 9\n9 10''') == 10\nassert solution('''10 10\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 9\n2 8\n2 7\n2 6\n2 5\n2 4\n3 5\n3 4\n3 3\n3 2\n3 1\n4 3\n5 6\n6 7\n7 8\n8 9\n9 10''') == 10\nassert solution('''10 10\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 9\n2 8\n2 7\n2 6\n2 5\n2 4\n3 5\n3 4\n3 3\n3 2\n3 1\n4 3\n5 6\n6 7\n7 8\n8 9\n9 10''') == 10\n"
    },
    {
        "number": 3064,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 3\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6') == '2'\nassert solution('6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6') == '5'\nassert solution('5 5\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 4') == '4'\nassert solution('6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 4') == '5'\nassert solution('5 5\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 4') == '4'\n"
    },
    {
        "number": 3064,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n2\\n') == \"1\"\nassert solution('4\\n3\\n') == \"2\"\nassert solution('3\\n3\\n') == \"2\"\nassert solution('5\\n3\\n') == \"4\"\nassert solution('5\\n4\\n') == \"3\"\n"
    },
    {
        "number": 3064,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 3\n1 2\n1 3\n2 4\n''') == '2'\nassert solution('''6 6\n1 2\n1 3\n2 4\n3 4\n3 5\n5 6\n''') == '5'\n"
    },
    {
        "number": 3064,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '[input_string]'\n"
    },
    {
        "number": 3064,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6') == '2'\nassert solution('2\\n1\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6') == '5'\nassert solution('1\\n2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6') == '5'\nassert solution('2\\n1\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6') == '5'\nassert solution('2\\n1\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6') == '5'\n"
    },
    {
        "number": 3064,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 3\n1 2\n1 3\n2 4''') == \"2\"\nassert solution('''5 2\n1 2\n1 3\n2 4\n3 4\n3 5''') == \"5\"\nassert solution('''6 5\n1 2\n1 3\n2 4\n3 4\n3 5\n5 6''') == \"5\"\nassert solution('''6 3\n1 2\n1 3\n1 4\n1 5\n1 6\n2 6\n3 6''') == \"6\"\nassert solution('''7 7\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 6\n3 6\n4 7\n5 7\n6 7''') == \"7\"\n"
    },
    {
        "number": 3065,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1\n0\n2 1 2\n1 0\n1 0\n''') == '0.5'\nassert solution('''8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\nSample Output 2:\n0.0446429\n''') == '0.0446429'\nassert solution('''2\n1\n0\n1 0\n''') == '0.5'\nassert solution('''10\n10\n0\n1 0\n2 0\n3 0\n4 0\n5 0\n6 0\n7 0\n8 0\n9 0\nSample Output 2:\n0.116230\n''') == '0.116230'\n"
    },
    {
        "number": 3065,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n1\n0\n2 1 2\n1 0\n1 0\n''') == '0.5'\nassert solution('''8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\nSample Output 2:\n0.0446429\n\n''') == '0.0446429'\n"
    },
    {
        "number": 3065,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3065,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n1\\n0\\n2 1 2\\n1 0\\n1 0\\n') == '0.5\\n'\nassert solution('8\\n6\\n1 0 2 3 0 1\\n7 1 2 3 4 5 6 7\\n1 0\\n2 0 3\\n2 0 2\\n1 0\\n1 0\\n1 0\\n1 0\\n') == '0.0446429\\n'\n"
    },
    {
        "number": 3065,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"3\n1\n0\n2 1 2\n1 0\n1 0\n\"\"\") == \"0.5\"\nassert solution(\"\"\"8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n\"\"\") == \"0.0446429\"\nassert solution(\"\"\"4\n3\n0\n1 2 3\n1 2\n1 2\n1 2\n1 2\n1 2\n\"\"\") == \"0.28125\"\nassert solution(\"\"\"4\n3\n0\n1 2 3\n1 2\n1 2\n1 2\n1 2\n1 2\n\"\"\") == \"0.125\"\nassert solution(\"\"\"4\n3\n0\n1 2 3\n1 2\n1 2\n1 2\n1 2\n1 2\n\"\"\") == \"0.125\"\n"
    },
    {
        "number": 3065,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n4\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n''') == '0.0446429'\nassert solution('''\n3\n2\n1 2\n1 2\n1 2\n''') == '0.5'\nassert solution('''\n9\n5\n0 2 0 2 1 0 1\n0 2 0 2 0 2 0\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n''') == '0.000833'\nassert solution('''\n10\n10\n0 1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9\n1 0 2 0 3 0 4"
    },
    {
        "number": 3065,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1\n0\n2 1 2\n1 0\n1 0\n''') == '0.5'\nassert solution('''\n5\n2\n2 1 2 0 0\n2 1 2 0 0\n2 1 2 0 0\n2 1 2 0 0\n2 1 2 0 0\n''') == '0.0'\nassert solution('''\n4\n3\n1 2 0\n2 1 1\n2 3\n3 1\n''') == '0.03125'\nassert solution('''\n4\n3\n2 1 0\n2 2 1\n2 3\n3 1\n''') == '0.0625'\nassert solution('''\n8\n7\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n''') == '0.0304'\n"
    },
    {
        "number": 3065,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n1\n0\n2 1 2\n1 0\n1 0\n''') == '0.5'\nassert solution('''3\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n''') == '0.0446429'\nassert solution('''7\n3\n0 1 0 2 1 2\n0 0 0 1 0 1\n0 0 0 0 0 1\n0 0 0 0 0 1\n0 0 0 0 0 1\n0 0 0 0 0 1\n0 0 0 0 0 1\n''') == '0.8355908221250463'\nassert solution('''7\n7\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n''') == '0.05298866778832736'\nassert solution('''7\n7\n1 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n''') == '0.05592026761087357'\n"
    },
    {
        "number": 3065,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution
    },
    {
        "number": 3065,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n1\n0\n2 1 2\n1 0\n1 0\n''') == '0.5'\n\nassert solution('''8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n''') == '0.0446429'\n\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n''') == '1.0'\n\nassert solution('''8\n2\n2\n2\n2\n2\n2\n2\n2\n''') == '0.56'\n\nassert solution('''6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n''') == '0.0446429'"
    },
    {
        "number": 3066,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n2\\n3') == '3\\n1 6 1\\n2 5 2\\n3 4 3'\nassert solution('1\\n2\\n3\\n4') == 'IMPOSSIBLE'\nassert solution('2\\n1\\n2\\n3') == 'IMPOSSIBLE'\nassert solution('2\\n1\\n2\\n1') == 'IMPOSSIBLE'\nassert solution('2\\n2\\n1\\n3') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3066,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n6\n1 2 3 3 2 1\n''') == '3\\n1 6 1\\n2 5 2\\n3 4 3'\nassert solution('''\n1\n1 2 1 2\n''') == 'IMPOSSIBLE'\nassert solution('''\n7\n1 2 1 2 1 2\n''') == 'IMPOSSIBLE'\nassert solution('''\n8\n1 2 1 2 1 2 1 2\n''') == 'IMPOSSIBLE'\nassert solution('''\n6\n1 2 1 2 1 2\n''') == '3\\n1 6 1\\n2 5 2\\n3 4 3'\n"
    },
    {
        "number": 3066,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin.strip()\n"
    },
    {
        "number": 3066,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6\\n1 2 3 3 2 1\\n3 2 1') == '3\\n1 6 1\\n2 5 2\\n3 4 3'\nassert solution('4\\n1 2 1 2\\n3 2 1') == 'IMPOSSIBLE'\nassert solution('3\\n1 2 1\\n2 1 1\\n3 1 1\\n1 1 3\\n1 2 3\\n2 1 1\\n3 2 1') == '1 1 3\\n2 1 2\\n3 2 3'\nassert solution('5\\n1 2 1 2 1\\n2 1 1 1 2\\n3 1 1 1 2\\n4 1 1 1 2\\n5 1 1 1 2') == '1 1 3\\n2 1 2\\n3 2 3\\n4 3 4'\nassert solution('5\\n1 2 1 2 1\\n2 1 1 1 2\\n3 1 1 1 2\\n4 1 1 1 2\\n5 1 1 1 2') == '1 1 3\\n2 1 2\\n3 2 3\\n4 3 4'\n"
    },
    {
        "number": 3066,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6\n1 2 3 3 2 1\n''') == '3\\n1 6 1\\n2 5 2\\n3 4 3\\n'\nassert solution('''4\n1 2 1 2\n''') == 'IMPOSSIBLE\\n'\n'''"
    },
    {
        "number": 3066,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"1 2\"\nassert solution(\"7\") == \"1 6 1\"\nassert solution(\"5\") == \"IMPOSSIBLE\"\nassert solution(\"1\") == \"1 1 1\"\nassert solution(\"7\") == \"1 6 1\"\n"
    },
    {
        "number": 3066,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6\n1 2 3 3 2 1''') == '3\\n1 6 1\\n2 5 2\\n3 4 3'\nassert solution('''4\n1 2 1 2''') == 'IMPOSSIBLE'\nassert solution('''6\n2 2 1 2 1 2''') == '3\\n1 6 1\\n2 5 2\\n3 4 3'\nassert solution('''2\n1 2 1''') == 'IMPOSSIBLE'\nassert solution('''4\n1 2 1 2 1''') == '3\\n1 6 1\\n2 5 2\\n3 4 3'\n"
    },
    {
        "number": 3066,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6\\n1 2 3 3 2 1') == '3\\n1 6 1\\n2 5 2\\n3 4 3'\nassert solution('4\\n1 2 1 2') == 'IMPOSSIBLE'\nassert solution('6\\n1 2 3 3 2 1') == '3\\n1 6 1\\n2 5 2\\n3 4 3'\nassert solution('6\\n1 2 3 2 1') == '3\\n1 6 1\\n2 5 2\\n3 4 3'\nassert solution('6\\n1 1 1 1 1 1') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3066,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3066,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6\\n1 2 3 3 2 1\\n') == '3\\n1 6 1\\n2 5 2\\n3 4 3'\nassert solution('4\\n1 2 1 2\\n') == 'IMPOSSIBLE'\nassert solution('3\\n1 2 1\\n') == 'IMPOSSIBLE'\nassert solution('2\\n1 2\\n') == 'IMPOSSIBLE'\nassert solution('2\\n1 1\\n') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3067,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == '1 2 3'\nassert solution('1 2') == '1 2'\nassert solution('1 100') == '1 2'\nassert solution('1 1') == '1'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 3067,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2\\n1 100\\n1 1') == '1 2 100'\nassert solution('3\\n1 2\\n1 100\\n1 1') == '1 2 100'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 3067,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n1 100\\n1 1\\n') == '1 2 100\\n10 20 28 27 30 40 50'\nassert solution('2\\n5 10 20 30 40 50\\n2 28 27\\n') == '10 20 28 27 30 40 50'\nassert solution('1\\n2\\n1 100\\n1 1\\n') == '1 2 100\\n1 2 100'\n\n-----Template------\n\n<https://www.codewars.com/kata/52be4e68d0fc43e2a2000064>\n\n\"\"\"\n\nfrom collections import OrderedDict"
    },
    {
        "number": 3067,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(open(\"test_cases/5.txt\", \"r\").read()) == '10 28 27 30 40 50'\nassert solution(open(\"test_cases/1.txt\", \"r\").read()) == '1 2 100'\nassert solution(open(\"test_cases/2.txt\", \"r\").read()) == '10 20 28 27 30 40 50'\nassert solution(open(\"test_cases/3.txt\", \"r\").read()) == '1 2 100'\nassert solution(open(\"test_cases/4.txt\", \"r\").read()) == '10 20 28 27 30 40 50'\n"
    },
    {
        "number": 3067,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"1 2 100\"\nassert solution(\"1 100\") == \"1 2 100\"\nassert solution(\"1 1\") == \"1 2 100\"\nassert solution(\"1 2 1 3 4 5\") == \"1 2 1 3 4 5 100\"\nassert solution(\"2 28 27\") == \"10 20 28 27 30 40 50\"\n"
    },
    {
        "number": 3067,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3067,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"2\\n1 2\") == \"\"\nassert solution(\"2\\n1 100\") == \"\"\nassert solution(\"3\\n1 2\\n1 100\") == \"\"\n"
    },
    {
        "number": 3067,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 2\n1 100\n1 1''') == '1 2 100'\nassert solution('''2 28 27\n5 10 20 30 40 50''') == '10 20 28 27 30 40 50'\n"
    },
    {
        "number": 3067,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n1 2\\n1 100\\n1 1') == '1 2 100\\n'\nassert solution('2\\n5 10 20 30 40 50\\n2 28 27\\n') == '10 20 28 27 30 40 50\\n'\nassert solution('2\\n1 3\\n1 3\\n') == '1 3 3\\n'\nassert solution('2\\n1 2\\n1 3\\n') == '1 3 2\\n'\nassert solution('2\\n1 2\\n1 2\\n') == '1 2 1\\n'\n"
    },
    {
        "number": 3067,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n1\n1 2\n1 100\n1 1\n''') == '1 2 100'\nassert solution(\n'''\n3\n1 2\n1 100\n1 1\n''') == '1 2 100'\nassert solution(\n'''\n2\n5 10 20 30 40 50\n2 28 27\n''') == '10 20 28 27 30 40 50'\nassert solution(\n'''\n4\n1 2\n1 100\n1 1\n1 1\n''') == '1 2 100'\nassert solution(\n'''\n2\n5 10 20 30 40 50\n2 28 27\n1 1\n''') == '10 20 28 27 30 40 50'\n"
    },
    {
        "number": 3068,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('AB 1 1\\nAC 2 1\\nBC 2 1') == '506'\nassert solution('AB 2 1\\nAC 1 1\\nBC 2 1\\nAB 2 1\\nAC 1 1\\nBC 2 1') == '2600'\nassert solution('AB 2 1\\nAC 1 1\\nBC 2 1\\nAB 2 1\\nAC 1 1\\nBC 2 1\\nAB 2 1\\nAC 1 1\\nBC 2 1\\nAB 2 1\\nAC 1 1\\nBC 2 1\\nAB 2 1\\nAC 1 1\\nBC 2 1') == '2600'\nassert solution('AB 1 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1 1\\nAB 2 1\\nAC 1 1\\nBC 1"
    },
    {
        "number": 3068,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"AB 1 1\") == \"2\"\nassert solution(\"AC 2 1\") == \"3\"\n"
    },
    {
        "number": 3068,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\nAB 1 1\\nAC 2 1\\nBC 2 1') == '506'\nassert solution('3\\nAB 1 1\\nAC 2 1\\nBC 2 1\\nAB 2 1') == '506'\nassert solution('4\\nAB 1 1\\nAC 2 1\\nBC 2 1\\nAB 2 1\\nAC 2 1') == '506'\nassert solution('4\\nAB 1 1\\nAC 2 1\\nBC 2 1\\nAB 2 1\\nAC 2 1\\nAB 2 1') == '506'\nassert solution('4\\nAB 1 1\\nAC 2 1\\nBC 2 1\\nAB 2 1\\nAB 2 1\\nAC 2 1') == '506'\n"
    },
    {
        "number": 3068,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''AB 1 1\nAC 2 1\nBC 2 1''') == '506'\n\nassert solution('''AB 1 1\nAC 2 1\nBC 1 1\nAC 1 1\nBC 1 1\nAC 2 1\nBC 2 1''') == '1056'\n\nassert solution('''AB 1 1\nAC 2 1\nBC 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1''') == '2056'\n\nassert solution('''AB 1 1\nAC 2 1\nBC 1 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 1\nBC 1 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 1\nBC 1 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 1\nBC 1 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 1\nBC 1 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 1\nBC 1 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 1\nBC 1 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 1\nBC 1 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 1\nBC 1 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 1\nBC 1 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 1\nBC 1 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 1\nBC 1 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 1\nBC 1 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 1\nBC 1 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 1\nBC 1 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 1\nBC 1 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 1\nBC 1 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 1\nBC 1 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 1\nBC 1 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 1\nBC 1 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 1\nBC 1 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 1\nBC 1 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 1\nBC 1 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 1\nBC 1 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 1\nBC 1 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 1\nBC 1 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 1\nBC 1 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 1\nBC 1 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 1\nBC 1 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 1\nBC 1 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 1\nBC 1 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 1\nBC 1 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 1\nBC 1 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 1\nBC 1 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 1\nBC 1 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 1\nBC 1 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 1\nBC 1 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 1\nBC 1 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 1\nBC 1 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 1\nBC 1 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 1\nBC 1 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 1\nBC 1 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 1\nBC 1 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 1\nBC 1 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 1\nBC 1 1\nAB 1 1\nAC 2 1\nBC 2 1\nAB 1 1\nAC 2 1\nBC"
    },
    {
        "number": 3068,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"AB 1 1\\nAC 2 1\\nBC 2 1\") == \"506\"\nassert solution(\"AB 1 1\\nAC 2 1\\nAB 1 1\") == \"13\"\nassert solution(\"AB 1 1\\nAC 2 1\\nAC 2 1\") == \"13\"\nassert solution(\"AB 1 1\\nAC 2 1\\nAB 1 1\\nAB 1 1\\nAB 1 1\") == \"13\"\nassert solution(\"AB 1 1\\nAC 2 1\\nAB 1 1\\nAC 2 1\") == \"13\"\n"
    },
    {
        "number": 3068,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\"
    },
    {
        "number": 3068,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0\\n0\") == \"\"\nassert solution(\"3\\nAB 1 1\\nAC 2 1\\nBC 2 1\") == \"\"\nassert solution(\"3\\nAB 1 1\\nAC 2 1\\nBC 2 1\\nCD 3 1\\nAC 4 1\") == \"\"\nassert solution(\"3\\nAB 1 1\\nAC 2 1\\nBC 2 1\\nCD 3 1\\nAC 4 1\\nAD 2 1\\nAE 4 1\\nCD 2 1\\nAC 4 1\\nAD 4 1\\nAE 2 1\\nAF 2 1\\nAD 2 1\\nAD 4 1\\nAE 2 1\") == \"\"\nassert solution(\"3\\nAB 1 1\\nAC 2 1\\nBC 2 1\\nCD 3 1\\nAC 4 1\\nAD 2 1\\nAE 4 1\\nCD 2 1\\nAC 4 1\\nAD 4 1\\nAE 2 1\\nAF 2 1\\nAD 2 1\\nAD 4 1\\nAE 2 1\\nCD 2 1\") == \"\"\n"
    },
    {
        "number": 3068,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0\") == \"2600\"\nassert solution(\"3\") == \"506\"\nassert solution(\"3\") == \"506\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\n"
    },
    {
        "number": 3068,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('AB 1 1\\nAC 2 1\\nBC 2 1') == '506'\nassert solution('AB 1 1\\nAC 2 1\\nBC 2 2\\nAB 1 1\\nBC 2 2\\nAC 2 1') == '2600'\nassert solution('AB 1 1\\nAC 2 1\\nBC 2 2\\nAB 1 1\\nBC 2 2\\nAC 2 1\\nAB 1 1') == '2600'\nassert solution('AB 1 1\\nAC 2 1\\nBC 2 2\\nAB 1 1\\nBC 2 2\\nAC 2 1\\nBC 1 1\\nAC 2 1') == '29'\nassert solution('AB 1 1\\nAC 2 1\\nBC 2 2\\nAB 1 1\\nBC 2 2\\nAC 2 1\\nAC 1 1\\nAC 2 1') == '2600'\n"
    },
    {
        "number": 3068,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''0\nAB 1 1\nAC 2 1\nBC 2 1\n''') == '2600'\nassert solution('''0\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 0\n''') == '506'\nassert solution('''0\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 0\nAB 1 1\nAC 1 0\nBC 1 0\n''') == '601'\nassert solution('''0\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 0\nAB 1 1\nAC 2 1\nBC 2 1\nAB 2 1\nAB 1 0\nAC 1 0\nBC 1 0\n''') == '2601'\nassert solution('''0\nAB 1 1\nAC 2 1\nBC 2 1\nAC 1 0\nAB 1 1\nAC 2 1\nBC 2 1\nAB 2 1\nAB 1 0\nAC 1 0\nBC 1 0\n''') == '2601'\n"
    },
    {
        "number": 3069,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(')())())') == 'possible'\nassert solution(')())())') == 'impossible'\nassert solution(')(') == 'impossible'\nassert solution('(()') == 'impossible'\nassert solution('(())') == 'possible'\n"
    },
    {
        "number": 3069,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('()()') == 'possible'\nassert solution('))()())') == 'possible'\nassert solution('())()') == 'impossible'\nassert solution('((()()())())') == 'possible'\nassert solution(')())(') == 'impossible'\n"
    },
    {
        "number": 3069,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"()))\") == \"possible\"\nassert solution(\")())\") == \"impossible\"\nassert solution(\"())(\") == \"impossible\"\nassert solution(\"())(())(()))\") == \"possible\"\nassert solution(\"(()())((()))\") == \"possible\"\n"
    },
    {
        "number": 3069,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"(()())\") == \"possible\"\nassert solution(\")()(\") == \"impossible\"\nassert solution(\"())(\") == \"impossible\"\nassert solution(\"()()())\") == \"possible\"\nassert solution(\"(()()(()(\") == \"impossible\"\n"
    },
    {
        "number": 3069,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(')()())()') == 'possible'\nassert solution('(()())()') == 'impossible'\nassert solution('())(') == 'impossible'\nassert solution('(()())(') == 'impossible'\nassert solution('()()()') == 'possible'\n"
    },
    {
        "number": 3069,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('()))') == 'possible'\nassert solution('))()()') == 'possible'\nassert solution(')))(') == 'impossible'\nassert solution(')(') == 'impossible'\nassert solution('((') == 'impossible'\n"
    },
    {
        "number": 3069,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('()))') == 'possible'\nassert solution('()))') == 'impossible'\nassert solution('(()') == 'impossible'\nassert solution('(((') == 'impossible'\n"
    },
    {
        "number": 3069,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('())(') == 'impossible'\nassert solution('())') == 'possible'\nassert solution('()()())()())') == 'possible'\nassert solution(')())') == 'impossible'\nassert solution('(()())()())()()') == 'possible'\n"
    },
    {
        "number": 3069,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'possible'\n\"\"\"\n"
    },
    {
        "number": 3069,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"()()\") == \"possible\"\nassert solution(\")()(\") == \"impossible\"\nassert solution(\"(())\") == \"possible\"\nassert solution(\"(()())\") == \"possible\"\nassert solution(\")(\") == \"impossible\"\n"
    },
    {
        "number": 3070,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 3070,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2') == 'impossible'\nassert solution('2\\n1') == '1800'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == 'impossible'\nassert solution('10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == 'impossible'\nassert solution('10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == 'impossible'\n"
    },
    {
        "number": 3070,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2\\n2 2') == 'impossible'\nassert solution('1 2\\n1 0\\n1 0\\n1 0') == 'impossible'\nassert solution('1 2\\n2 2\\n1 1\\n1 0\\n1 0\\n1 0') == '1800'\n"
    },
    {
        "number": 3070,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 3\n1 1800 9000 1800\n1 2000 9200 1600\n1 2200 9400 1400\n''') == '1800'\nassert solution('''2 2\n1 1800 3600 1800\n1 1900 3600 1600\n''') == 'impossible'\nassert solution('''2 3\n1 2 1000 1000\n1 2 1001 1001\n1 2 1002 1002\n''') == '1000'\nassert solution('''2 3\n1 1 1000 1000\n1 1 1001 1001\n1 1 1002 1002\n''') == '1000'\nassert solution('''3 4\n1 1 1000 1000\n2 2 1001 1001\n3 3 1002 1002\n''') == '1000'\n"
    },
    {
        "number": 3070,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '1800'\n\"\"\"\n"
    },
    {
        "number": 3070,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    r'''\n2 2\n1 1800 3600 1800\n1 1900 3600 1600\n''') == '1800'\nassert solution(\n    r'''\n2 4\n1 1800 900 900 900 1800\n1 1900 900 900 900 1800\n1 2100 900 900 900 1800\n1 2200 900 900 900 1800\n1 2300 900 900 900 1800\n1 2400 900 900 900 1800\n''') == 'impossible'"
    },
    {
        "number": 3070,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400\\n\") == \"1800\"\nassert solution(\"2 2\\n1 1800 3600 1800\\n1 1900 3600 1600\\n\") == \"impossible\"\n\"\"\"\n"
    },
    {
        "number": 3070,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') is None\nassert solution('1 2 3') == 'impossible'\nassert solution('1 4 2') == 'impossible'\nassert solution('1 2 1') == 'impossible'\nassert solution('2 2 1') == '1800'\n"
    },
    {
        "number": 3070,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n1\\n1\") == \"impossible\"\nassert solution(\"1\\n2\\n1\\n1\") == \"1800\"\nassert solution(\"2\\n1\\n1\\n1\") == \"1800\"\nassert solution(\"1\\n2\\n1\\n1\") == \"1800\"\nassert solution(\"2\\n2\\n1\\n1\") == \"1800\"\n"
    },
    {
        "number": 3070,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 3\n1 1800 9000 1800\n1 2000 9200 1600\n1 2200 9400 1400\n''') == '1800'\n\nassert solution('''2 2\n1 1800 3600 1800\n1 1900 3600 1600\n''') == 'impossible'\n\"\"\""
    },
    {
        "number": 3071,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == ''\nassert solution('3 2') == 'A1-B2 B1-A2 A3-B3'\nassert solution('2 3') == 'A1-C2 B2-C1'\nassert solution('3 3') == 'A1-B2 B1-C2 B2-C1 B3-A3'\nassert solution('4 4') == 'A1-B1 B2-C1 C1-B2 C2-A3'\n"
    },
    {
        "number": 3071,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\"\nassert solution(\"2 3\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\"\nassert solution(\"1 1\") == \"A1-A2\"\nassert solution(\"2 1\") == \"A1-A2\"\nassert solution(\"2 2\") == \"A1-A2\"\n"
    },
    {
        "number": 3071,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 3') == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\"\nassert solution('3 3') == \"A1-B2 B1-C2 C1-C2 A1-B1 B2-C1\\nA1-C1 A2-B1 B2-C2 A1-C2 A2-B2\"\nassert solution('4 4') == \"A1-B2 B1-C2 C1-C2 D1-D2 A1-D1 D2-C1 B1-C2 B2-D1\\nA1-D1 D2-C2 A1-C1 A2-D2 D1-C2 B1-C2 B2-D2 A1-B1 B2-C1\"\nassert solution('5 5') == \"A1-B2 B1-C2 C1-C2 D1-D2 E1-E2 A1-D1 D2-C1 E1-C2 E2-D1 B1-C2 B2-D1\\nA1-D1 D2-C2 E1-C2 A1-C1 A2-D2 D1-C2 E1-C2 A1-C1 A2-D2 E1-C2 E2-D1 B1-C2 B2-D1\"\nassert solution('6 6') == \"A1-B2 B1-C2 C1-C2 D1-D2 E1-E2 F1-F2 A1-D1 D2-C1 E1-C2 E2-D1 B1-C2 B2-D1\\nA1-D1 D2-C2 E1-C2 F1-C2 A1-C1 A2-D2 D1-C2 E1-C2 A1-C1 A2-D2 E1-C2 E2-D1 B1-C2 B2-D1\"\n"
    },
    {
        "number": 3071,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3071,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 2\") == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\"\nassert solution(\"2 3\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\"\nassert solution(\"2 4\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\"\nassert solution(\"2 5\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\"\nassert solution(\"2 5\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\"\n"
    },
    {
        "number": 3071,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 2') == 'A1-B2 B1-A2 A3-B3'\nassert solution('2 3') == 'A1-C2 B2-C1'\nassert solution('10 8') == 'A1-A2 A2-B1 B2-C2 C2-B3 C3-A3 A3-B2 B3-C1'\nassert solution('4 1') == 'A1-A2 A1-B1 A2-C2 A3-C3'\nassert solution('20 22') == 'A1-A2 A1-B1 A1-C1 A1-D1 A1-E1 A1-F1 A1-G1 A1-H1 A1-I1 A1-J1 A1-K1 A1-L1 A1-M1 A1-N1 A2-A3 A2-B3 A2-C3 A2-D3 A2-E3 A2-F3 A2-G3 A2-H3 A2-I3 A2-J3 A2-K3 A2-L3 A2-M3 A2-N3 A3-A4 A3-B4 A3-C4 A3-D4 A3-E4 A3-F4 A3-G4 A3-H4 A3-I4 A3-J4 A3-K4 A3-L4 A3-M4 A3-N4 A4-A5 A4-B5 A4-C5 A4-D5 A4-E5 A4-F5 A4-G5 A4-H5 A4-I5 A4-J5 A4-K5 A4-L5'\n"
    },
    {
        "number": 3071,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\"\nassert solution(\"3 2\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\"\nassert solution(\"4 2\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\"\nassert solution(\"5 2\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\"\nassert solution(\"6 2\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\\nA1-B3 A2-C3 B3-C2\\nA1-C3 A2-B3 B3-C1\"\n\n>>> from itertools import product\n>>> for p in product('ABC', repeat=2):\n...     print(''.join(p))\n...\nAB\nAC\nBA\nBC\nCA\nCB\n>>> for p in product('ABC', repeat=2):\n...     if 'A' not in p and 'B' not in p:\n...         print(''.join(p))\n...\nAB\nAC\nBA\nBC\nCA\nCB\n>>> for p in product('AB', repeat=2):\n...     print(''.join(p))\n...\nAB\nBA\n\n>>> for p in product('AB', repeat=2):\n...     if 'A' in p and 'B' not in p:\n...         print(''.join(p))\n...\nAB\nBA\n\n>>> for p in product('AB', repeat=2):\n...     if 'A' not in p and 'B' in p:\n...         print(''.join(p))\n...\nAB\nBA\n\n>>> for p in product('AB', repeat=2):\n...     if 'A' not in p and 'B' not in p:\n...         print(''.join(p))\n...\nAB\nBA\n\n>>> for p in product('AB', repeat=2):\n...     if 'A' in p and 'B' not in p:\n...         print(''.join(p))\n...\nAB\nBA\n\n>>> for p in product('AB', repeat=2):\n...     if 'A' not in p and 'B' in p:\n...         print(''.join(p))\n...\nAB\nBA\n\n>>> for p in product('AB', repeat=2):\n...     if 'A' not in p and 'B' not in p:\n...         print(''.join(p))\n...\nAB\nBA\n\n>>> for p in product('AB', repeat=2):\n...     if 'A' in p and 'B' not in p:\n...         print(''.join(p))\n...\nAB\nBA\n\n>>> for p in product('AB', repeat=2):\n...     if 'A' not in p and 'B' in p:\n...         print(''.join(p))\n...\nAB\nBA\n\n>>> for p in product('AB', repeat=2):\n...     if 'A' not in p and 'B' not in p:\n...         print(''.join(p))\n...\nAB\nBA\n\n>>> for p in product('AB', repeat=2):\n...     if 'A' in p and 'B' not in p:\n...         print(''.join(p))\n...\nAB\nBA\n\n>>> for p in product('AB', repeat=2):\n...     if 'A' not in p and 'B' in p:\n...         print(''.join(p))\n...\nAB\nBA\n\n>>> for p in product('AB', repeat=2):\n...     if 'A' not in p and 'B' not in p:\n...         print(''.join(p))\n...\nAB\nBA\n\n>>> for p in product('AB', repeat=2):\n...     if 'A' in p and 'B' not in p:\n...         print(''.join(p))\n...\nAB\nBA\n\n>>> for p in product('AB', repeat=2):\n...     if 'A' not in p and 'B' in p:\n...         print(''.join(p))\n...\nAB\nBA\n\n>>> for p in product('AB', repeat=2):\n...     if 'A' not in p and 'B' not in p:\n...         print(''.join(p))\n...\nAB\nBA\n\n>>> for p in product('AB', repeat=2):\n...     if 'A' in p and 'B' not in p:\n...         print(''.join(p))\n...\nAB\nBA\n\n>>> for p in product('AB', repeat=2):\n...     if 'A' not in p and 'B' in p:\n...         print(''.join(p))\n...\nAB\nBA\n\n>>> for p in product('AB', repeat=2):\n...     if 'A' not in p and 'B' not in p:\n...         print(''.join(p))\n...\nAB\nBA\n\n>>> for p in product('AB', repeat=2):\n...     if 'A' in p and 'B' not in p:\n...         print(''.join(p))\n...\nAB\nBA\n\n>>> for p in product('AB', repeat=2):\n...     if 'A' not in p and 'B' in p:\n...         print(''.join(p))\n...\nAB\nBA\n\n>>> for p in product('AB', repeat=2):\n...     if 'A' not in p and 'B' not in p:\n...         print(''.join(p))\n...\nAB\nBA\n\n>>> for p in product('AB', repeat=2):\n...     if 'A' in p and 'B' not in p:\n..."
    },
    {
        "number": 3071,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 2') == 'A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\nA1-B1 A2-C2 B2-C1'\nassert solution('2 3') == 'A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2'\nassert solution('2 3') == 'A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2'\nassert solution('2 3') == 'A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2'\nassert solution('2 3') == 'A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2'\n"
    },
    {
        "number": 3071,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3') == 'A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2'\nassert solution('1 2') == 'A1-B1'\nassert solution('10 1') == 'A1-B1 A2-C2 A3-D3 A4-E4 A5-F5 A6-G6 A7-H7 A8-I8 A9-J9 A10-K10 A11-L11 A12-M12 A13-N13 A14-O14 A15-P15 A16-Q16 A17-R17 A18-S18 A19-T19 A20-V20 A21-W21 A22-Y22 A23-U23 A24-Q24 A25-E25'\nassert solution('10 4') == 'A1-B1 A2-C2 A3-D3 A4-E4 A5-F5 A6-G6 A7-H7 A8-I8 A9-J9 A10-K10 A11-L11 A12-M12 A13-N13 A14-O14 A15-P15 A16-Q16 A17-R17 A18-S18 A19-T19 A20-V20 A21-W21 A22-Y22 A23-U23 A24-Q24 A25-E25'\nassert solution('10 5') == 'A1-B1 A2-C2 A3-D3 A4-E4 A5-F5 A6-G6 A7-H7 A8-I8 A9-J9 A10-K10 A11-L11 A12-M12 A13-N13 A14-O14 A15-P15 A16-Q16 A17-R17 A18-S18 A19-T19 A20-V20 A21-W21 A22-Y22 A23-U23 A24-Q24 A25-E25'\n"
    },
    {
        "number": 3071,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 2') == 'A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2'\nassert solution('2 3') == 'A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2'\n"
    },
    {
        "number": 3072,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2\n..\n..\n''') == '7'\nassert solution('''3 3\n.X...\n...X.\nX...X\n.X...\n''') == '9'\nassert solution('''10 10\nXXXXXXXX\nX.....X\n.XX...X\nX.X..X\nXX.XX..\n..X...X\n.X....X\nXX.....\nX.....X\nXXXXXXXX\n''') == '49'\nassert solution('''1 1\n..\n''') == '1'\nassert solution('''4 4\nX..X\nX..X\n.XX.\nX...X\n''') == '9'\n"
    },
    {
        "number": 3072,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\") == \"7\"\nassert solution(\"4 4\\nX.XX\\nX..X\\n..X.\\n..XX\\n\") == \"9\"\nassert solution(\"1 1\\n.\\n\") == \"1\"\nassert solution(\"5 5\\n.X.\\n.X.\\n.X.\\n.X.\\n\") == \"9\"\n\nassert solution(\"1 1\\n.\\n\") == \"1\"\n"
    },
    {
        "number": 3072,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == 7\nprint(solution(stdin))\n"
    },
    {
        "number": 3072,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"2 3\") == \"0\"\nassert solution(\"3 3\") == \"2\"\n"
    },
    {
        "number": 3072,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('.X..X.X') == '5'\nassert solution('..X..') == '0'\nassert solution('.X.X.X.X') == '0'\nassert solution('X.X.X.X.X') == '1'\nassert solution('X.X.X.X.X') == '1'\n"
    },
    {
        "number": 3072,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"7\"\nassert solution(\"3 3\") == \"9\"\nassert solution(\"3 4\") == \"9\"\nassert solution(\"2 3\") == \"6\"\nassert solution(\"2 4\") == \"8\"\n"
    },
    {
        "number": 3072,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2\\n..\\n..\\n') == '7'\nassert solution('4 4\\nX.XX\\nX..X\\n..X.\\n..XX\\n') == '9'\nassert solution('2 3\\nXX\\nXX\\n') == '4'\nassert solution('3 5\\nX..\\nX.X\\n..X\\n') == '2'\nassert solution('5 8\\nX....\\nX....\\nXX....\\nX....\\n') == '5'\n"
    },
    {
        "number": 3072,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"9\"\n\"\"\"\n"
    },
    {
        "number": 3072,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"2 2\\n..\\n..\\n\") == \"7\"\nassert solution(\n    \"4 4\\nX.XX\\nX..X\\n..X.\\n..XX\\n\") == \"9\"\n"
    },
    {
        "number": 3072,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2') == '7'\nassert solution('4 4') == '9'\nassert solution('1 1') == '1'\nassert solution('10 10') == '1'\nassert solution('1000 1') == '1000'\n"
    },
    {
        "number": 3073,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1 1 1 1') == '1'\nassert solution('1 1 1 1 1') == '-1'\nassert solution('1 1 1 1 1') == '1'\nassert solution('1 1 1 1 1') == '-1'\nassert solution('1 1 1 1 1') == '1'\n"
    },
    {
        "number": 3073,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1 1 500\") == \"600\"\nassert solution(\"1 1 1 1 500\") == \"100\"\nassert solution(\"2 0 2 1 100\") == \"600\"\nassert solution(\"2 0 2 1 100\") == \"100\"\nassert solution(\"2 0 2 1 1\") == \"100\"\n"
    },
    {
        "number": 3073,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''2''') == '''600'''\nassert solution(\n'''5''') == '''-1'''\nassert solution(\n'''4''') == '''100'''\nassert solution(\n'''3''') == '''-1'''\nassert solution(\n'''3''') == '''100'''\n"
    },
    {
        "number": 3073,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 3073,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"100\"\nassert solution(\"3 4 5\") == \"100\"\nassert solution(\"1 1 1 1 500\") == \"100\"\nassert solution(\"2 0 2 1 100\") == \"600\"\nassert solution(\"2 0 2 1 100\") == \"100\"\n"
    },
    {
        "number": 3073,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '-1'\n'''\n"
    },
    {
        "number": 3073,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1 1 1') == '100'\nassert solution('2 3 2 2 100') == '600'\nassert solution('2 0 2 1 100') == '100'\nassert solution('2 0 2 1 100\\n6 0 8 1 1') == '100'\nassert solution('2 0 2 1 100\\n6 0 8 1 1\\n6 0 8 1 1\\n6 0 8 1 1\\n6 0 8 1 1') == '100'\n"
    },
    {
        "number": 3073,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 3 2 2 100\\n1 1 1 1 500\") == \"600\"\nassert solution(\"2\\n2 0 2 1 100\\n6 0 8 1 1\") == \"100\"\n"
    },
    {
        "number": 3073,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys\nfrom functools import lru_cache\nfrom typing import List\n\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 3073,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n3 3 2 2 100\\n1 1 1 1 500\\n2 2 2 2 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1') == '600'\nassert solution('1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1') == '100'\nassert solution('1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1') == '-1'\nassert solution('1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1') == '-1'\n"
    },
    {
        "number": 3074,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n361''') == '3'\nassert solution('''2\n11''') == '0'\nassert solution('''8\n14343579''') == '4'\nassert solution('''8\n14345460''') == '0'\nassert solution('''3\n44351416''') == '0'\n"
    },
    {
        "number": 3074,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\nprint(solution(stdin))\n"
    },
    {
        "number": 3074,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n3\\n') == '0'\nassert solution('2\\n3\\n') == '0'\nassert solution('2\\n2\\n') == '0'\nassert solution('2\\n1\\n') == '1'\nassert solution('3\\n1\\n') == '1'\n"
    },
    {
        "number": 3074,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('stdin') == '0'\nassert solution('sample stdin') == '3'\n"
    },
    {
        "number": 3074,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1\n361''') == '3'\nassert solution('''2\n11''') == '0'\nassert solution('''10\n101101''') == '6'\n'''\nprint(solution(input()))\n"
    },
    {
        "number": 3074,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3074,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''3\n361\n''') == '3'\n\nassert solution(\n'''2\n11\n''') == '0'\n"
    },
    {
        "number": 3074,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n361''') == '3'\nassert solution('''2\n11''') == '0'\nassert solution('''4\n1111\n''') == '3'\nassert solution('''100\n11314\n''') == '3'\nassert solution('''1000\n111111\n''') == '1'\n"
    },
    {
        "number": 3074,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('\\n'.join([\n    '3',\n    '361',\n    ])) == '3'\nassert solution('\\n'.join([\n    '2',\n    '11',\n    ])) == '0'\nassert solution('\\n'.join([\n    '1',\n    '111',\n    ])) == '0'\nassert solution('\\n'.join([\n    '2',\n    '11111',\n    ])) == '3'\nassert solution('\\n'.join([\n    '12',\n    '2222',\n    ])) == '6'\n"
    },
    {
        "number": 3074,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') is None\nassert solution('3') == '0'\nassert solution('0') == '0'\nassert solution('10') == '0'\nassert solution('101') == '1'\n"
    },
    {
        "number": 3075,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 10') == '10'\nassert solution('2 100') == 'cancel road trip'\nassert solution('1 10\\n2 100\\n1 10') == '10'\nassert solution('3 10\\n2 100\\n1 10\\n13 5') == 'cancel road trip'\nassert solution('2\\n2\\n2') == 'cancel road trip'\n"
    },
    {
        "number": 3075,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 10\n2 100\n1 10\n11 5''') == '10'\nassert solution('''3 10\n2 100\n1 10\n13 5''') == 'cancel road trip'\nassert solution('''3 10\n2 100\n1 10\n2 100\n3 100\n4 100\n5 100\n6 100\n7 100\n8 100\n9 100\n10 100''') == 'cancel road trip'\nassert solution('''3 10\n2 100\n1 10\n2 100\n3 100\n4 100\n5 100\n6 100\n7 100\n8 100\n9 100\n10 100\n11 100\n12 100\n13 100\n14 100\n15 100\n16 100\n17 100\n18 100\n19 100\n20 100\n21 100\n22 100\n23 100\n24 100\n25 100\n26 100\n27 100\n28 100\n29 100\n30 100\n31 100\n32 100\n33 100\n34 100\n35 100\n36 100\n37 100\n38 100\n39 100\n40 100\n41 100\n42 100\n43 100\n44 100\n45 100\n46 100\n47 100\n48 100\n49 100\n50 100\n51 100\n52 100\n53 100\n54 100\n55 100\n56 100\n57 100\n58 100\n59 100\n60 100\n61 100\n62 100\n63 100\n64 100\n65 100\n66 100\n67 100\n68 100\n69 100\n70 100\n71 100\n72 100\n73 100\n74 100\n75 100\n76 100\n77 100\n78 100\n79 100\n80 100\n81 100\n82 100\n83 100\n84 100\n85 100\n86 100\n87 100\n88 100\n89 100\n90 100\n91 100\n92 100\n93 100\n94 100\n95 100\n96 100\n97 100\n98 100\n99 100''') == 'cancel road trip'\nassert solution('''3 10\n2 100\n1 10\n2 100\n3 100\n4 100\n5 100\n6 100\n7 100\n8 100\n9 100\n10 100\n11 100\n12 100\n13 100\n14 100\n15 100\n16 100\n17 100\n18 100\n19 100\n20 100\n21 100\n22 100\n23 100\n24 100\n25 100\n26 100\n27 100\n28 100\n29 100\n30 100\n31 100\n32 100\n33 100\n34 100\n35 100\n36 100\n37 100\n38 100\n39 100\n40 100\n41 100\n42 100\n43 100\n44 100\n45 100\n46 100\n47 100\n48 100\n49 100\n50 100\n51 100\n52 100\n53 100\n54 100\n55 100\n56 100\n57 100\n58 100\n59 100\n60 100\n61 100\n62 100\n63 100\n64 100\n65 100\n66 100\n67 100\n68 100\n69 100\n70 100\n71 100\n72 100\n73 100\n74 100\n75 100\n76 100\n77 100\n78 100\n79 100\n80 100\n81 100\n82 100\n83 100\n84 100\n85 100\n86 100\n87 100\n88 100\n89 100\n90 100\n91 100\n92 100\n93 100\n94 100\n95 100\n96 100\n97 100\n98 100\n99 100''') == '10'\n"
    },
    {
        "number": 3075,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 10\\n2 100\\n1 10\\n13 5') == '10'\nassert solution('2 10\\n2 100\\n1 10\\n13 5') == 'cancel road trip'\nassert solution('3 10\\n2 100\\n1 10\\n13 5') == '10'\nassert solution('3 10\\n2 100\\n1 10\\n13 5') == 'cancel road trip'\nassert solution('3 10\\n2 100\\n1 10\\n13 5') == 'cancel road trip'\n"
    },
    {
        "number": 3075,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 10\\n2 100\\n1 10\\n11 5\") == 10\nassert solution(\"1 10\\n2 100\\n1 10\\n13 5\") == \"cancel road trip\"\nassert solution(\"2 3\\n1 1\\n1 1\") == 3\nassert solution(\"2 3\\n1 1\\n1 1\\n1 1\") == \"cancel road trip\"\nassert solution(\"2 3\\n1 1\\n1 1\\n1 1\\n1 1\") == \"cancel road trip\"\n"
    },
    {
        "number": 3075,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 2') == '2'\nassert solution('3 3') == '2'\nassert solution('4 4') == '2'\nassert solution('5 5') == 'cancel road trip'\n"
    },
    {
        "number": 3075,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3\\n1 1\\n2 2\\n') == '0'\nassert solution('3 5\\n1 4\\n2 3\\n3 2\\n3 4\\n4 3\\n3 2\\n2 1\\n1 5\\n2 2\\n') == '3'\nassert solution('3 2\\n1 1\\n2 2\\n') == '2'\nassert solution('2 3\\n1 1\\n2 2\\n') == '0'\nassert solution('3 10\\n1 100\\n2 1000\\n') == '3'\n"
    },
    {
        "number": 3075,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2') == 'cancel road trip'\nassert solution('1\\n2\\n3') == '10'\nassert solution('2\\n1\\n2') == 'cancel road trip'\nassert solution('2\\n4\\n5\\n2') == '10'\nassert solution('3\\n2\\n4') == '10'\n"
    },
    {
        "number": 3075,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 10\\n2 100\\n1 10\\n11 5\") == \"10\"\nassert solution(\"3 10\\n2 100\\n1 10\\n13 5\") == \"cancel road trip\"\nassert solution(\"3 10\\n2 100\\n1 10\\n11 5\") == \"cancel road trip\"\nassert solution(\"3 10\\n2 100\\n1 10\\n11 5\") == \"cancel road trip\"\nassert solution(\"3 10\\n2 100\\n1 10\\n11 5\") == \"cancel road trip\"\n"
    },
    {
        "number": 3075,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 10\n2 100\n1 10\n11 5''') == '10'\nassert solution('''3 10\n2 100\n1 10\n11 5''') == '10'\nassert solution('''3 10\n2 100\n1 10\n13 5''') == 'cancel road trip'\nassert solution('''3 10\n2 100\n1 10\n14 5''') == 'cancel road trip'\nassert solution('''3 10\n2 100\n1 10\n17 5''') == 'cancel road trip'\n"
    },
    {
        "number": 3075,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 10\n2 100\n1 10\n11 5''') == '10'\nassert solution('''3 10\n2 100\n1 10\n13 5''') == 'cancel road trip'\nassert solution('''3 100\n2 10\n1 100\n13 5''') == 'cancel road trip'\nassert solution('''3 100\n2 10\n1 10\n13 5''') == 'cancel road trip'\nassert solution('''3 100\n2 10\n1 100\n13 5''') == 'cancel road trip'\n"
    },
    {
        "number": 3076,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 8\\n1 1\\n3 4\\n5 100\") == \"1 8 9 9 100 101 108 109 109\\n0 7 8 11 15 16 19\\n\"\nassert solution(\"1 2\\n1 1\\n3 4\\n5 100\") == \"0 7 8 11 15 16 19\\n1 1 1 1 1 1 1 1 1 1\\n\"\n"
    },
    {
        "number": 3076,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n4 9\n2 8\n1 1\n3 4\n5 100\n''') == \"1 8 9 9 100 101 108 109 109\"\n\nassert solution(\n'''\n5 7\n2 2\n3 8\n2 7\n2 4\n3 8\n''') == \"0 7 8 11 15 16 19\"\n"
    },
    {
        "number": 3076,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n3 9\n2 8\n1 1\n3 4\n5 100\n''') == '1 8 9 9 100 101 108 109 109'\n\nassert solution(\n'''\n6 10\n2 8\n3 7\n2 4\n3 8\n2 7\n2 4\n3 8\n''') == '0 7 8 11 15 16 19'\n"
    },
    {
        "number": 3076,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 7') == '0 7 8 11 15 16 19'\nassert solution('2 2') == '0 0 0 0 0 0 0'\nassert solution('2 9') == '1 8 9 9 100 101 108 109'\nassert solution('4 9') == '1 8 9 9 100 101 108 109'\nassert solution('3 7') == '0 7 8 11 15 16 19'\n"
    },
    {
        "number": 3076,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(solution_sample1) == solution_sample1_result\nassert solution(solution_sample2) == solution_sample2_result"
    },
    {
        "number": 3076,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''4 9\n2 8\n1 1\n3 4\n5 100\n''') == '1 8 9 9 100 101 108 109 109'\n\nassert solution(\n'''5 7\n2 2\n3 8\n2 7\n2 4\n3 8\n''') == '0 7 8 11 15 16 19'\n"
    },
    {
        "number": 3076,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 3') == '0 8 9 9 100 101 108 109 109'\nassert solution('2 9') == '0 8 9 9 100 101 108 109 109'\nassert solution('1 4') == '0 8 9 9 100 101 108 109 109'\nassert solution('2 7') == '0 7 8 11 15 16 19'\nassert solution('3 9') == '0 7 8 11 15 16 19'\n"
    },
    {
        "number": 3076,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 2\\n1 3\\n2 4\\n3 5\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10') == '1 8 9 9 10 11 12 13 14 15 16 17 18 19'\nassert solution('1 3\\n2 4\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10') == '0 7 8 11 15 16 19'\nassert solution('1 5\\n2 5\\n3 5\\n4 5\\n5 5\\n6 5\\n7 5\\n8 5\\n9 5\\n10 5') == '0 7 8 11 15 16 19'\nassert solution('1 6\\n2 7\\n3 8\\n4 9\\n5 10\\n6 11\\n7 11\\n8 11\\n9 11\\n10 11') == '0 7 8 11 15 16 19'\nassert solution('1 7\\n2 7\\n3 7\\n4 7\\n5 7\\n6 7\\n7 7\\n8 7\\n9 7\\n10 7') == '0 7 8 11 15 16 19'\n"
    },
    {
        "number": 3076,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3076,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2') == '1 2'\nassert solution('1 1') == '1'\nassert solution('1 2 2') == '1'\nassert solution('1 1 1') == '1'\nassert solution('1 2 2 3') == '1'\n"
    },
    {
        "number": 3077,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0 0 1\\n3 3\") == \"1\"\nassert solution(\"0 0 1\\n3 3\\n3 -3\\n3 0\") == \"1\"\nassert solution(\"0 0 1\\n3 3\\n-3 3\\n3 -3\") == \"1\"\nassert solution(\"0 0 1\\n3 3\\n3 -3\\n3 0\\n0 3\\n3 0\") == \"3\"\nassert solution(\"0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n3 0\\n0 3\\n3 0\\n0 3\") == \"3\"\n"
    },
    {
        "number": 3077,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3') == '1'\nassert solution('1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n') == '3'"
    },
    {
        "number": 3077,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n') == '1'\nassert solution('1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n') == '3'\n"
    },
    {
        "number": 3077,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '1'\nassert solution(stdin) == '3'\nassert solution(stdin) == '2'\n\"\"\"\n"
    },
    {
        "number": 3077,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\") == \"1\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 0\\n0 3\") == \"3\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\") == \"1\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 3\") == \"0\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n0 0\") == \"0\"\n"
    },
    {
        "number": 3077,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n0\\n3\\n-3\\n3\\n-3\\n3\\n0\\n3\\n-3\\n3\\n-3\") == \"1\"\nassert solution(\"1\\n0\\n3\\n-3\\n3\\n-3\\n3\\n0\\n3\\n-3\\n3\\n-3\") == \"3\"\nassert solution(\"2\\n0\\n3\\n-3\\n3\\n-3\\n3\\n0\\n3\\n-3\\n3\\n-3\") == \"2\"\nassert solution(\"1\\n0\\n3\\n-3\\n3\\n-3\\n3\\n0\\n3\\n-3\\n3\\n-3\") == \"1\"\nassert solution(\"1\\n0\\n3\\n-3\\n3\\n-3\\n3\\n0\\n3\\n-3\\n3\\n-3\") == \"3\"\n"
    },
    {
        "number": 3077,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 3 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3''') == '1'\nassert solution('''1 5 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3''') == '3'\nassert solution('''1 5 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3''') == '3'\nassert solution('''1 5 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 4\n-4 4\n-4 -4\n-4 -4\n-4 -4''') == '3'\nassert solution('''1 5 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n-3 3\n-3 3\n-3 -3\n-3 -3''') == '3'\n"
    },
    {
        "number": 3077,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 3 3''') == '1'\nassert solution('''0 0 1''') == '1'\nassert solution('''3 3\n-3 3''') == '1'\nassert solution('''3 -3\n3 -3''') == '1'\nassert solution('''3 0\n0 3''') == '3'\n"
    },
    {
        "number": 3077,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3 2\\n-1 0 1\\n2 -2 -1\\n0 1\\n1 1\\n-1 0\\n3 2\\n-2 1\\n1 2\\n-1 3') == '3'\nassert solution('2 3 2\\n-1 0 1\\n2 -2 -1\\n0 1\\n1 1\\n-1 0\\n3 2\\n-2 1\\n1 2\\n-1 3') == '3'\nassert solution('1 1 1\\n0 0 2\\n1 -2 -3\\n2 3\\n2 2\\n1 1\\n1 1\\n-1 0\\n1 1\\n-1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\"
    },
    {
        "number": 3077,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(open(\"input/input0.txt\").read()) == \"3\"\nassert solution(open(\"input/input1.txt\").read()) == \"1\"\nassert solution(open(\"input/input2.txt\").read()) == \"3\"\nassert solution(open(\"input/input3.txt\").read()) == \"2\"\nassert solution(open(\"input/input4.txt\").read()) == \"0\"\n"
    },
    {
        "number": 3078,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '4'\nassert solution('5\\n10000\\n1\\n1\\n1\\n1\\n1') == '4\\n4\\n2\\n2\\n0\\n'\nassert solution('5\\n9\\n1\\n1\\n10\\n1\\n9') == '2\\n0\\n0\\n2\\n0\\n'\nassert solution('10\\n9\\n1\\n1\\n10\\n1\\n9\\n1\\n1\\n1\\n1\\n1') == '4\\n2\\n0\\n2\\n0\\n'\n"
    },
    {
        "number": 3078,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3078,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 10000\n1\n1\n1\n1\n1\n''') == '4\\n4\\n2\\n2\\n0\\n'\n\nassert solution('''5 9\n1\n1\n10\n1\n9\n''') == '2\\n0\\n0\\n2\\n0\\n'\n\nassert solution('''5 9\n1\n1\n10\n1\n9\n''') == '2\\n0\\n0\\n2\\n0\\n'\n\nassert solution('''3 7\n6\n9\n1\n''') == '3\\n1\\n2\\n2\\n1\\n'\n\nassert solution('''3 7\n1\n2\n3\n''') == '2\\n1\\n2\\n1\\n'"
    },
    {
        "number": 3078,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''5 10000\n1\n1\n1\n1\n1\n''') == '4\\n4\\n2\\n2\\n0\\n'\nassert solution(\n'''5 9\n1\n1\n10\n1\n9\n''') == '2\\n0\\n0\\n2\\n0\\n'\nassert solution(\n'''5 9\n1\n1\n10\n1\n9\n2\n2\n2\n2\n2\n2\n''') == '2\\n0\\n0\\n2\\n0\\n'\nassert solution(\n'''5 10000\n1\n1\n1\n1\n1\n''') == '4\\n4\\n2\\n2\\n0\\n'\nassert solution(\n'''5 9\n1\n1\n10\n1\n9\n2\n2\n2\n2\n2\n2\n''') == '2\\n0\\n0\\n2\\n0\\n'\n"
    },
    {
        "number": 3078,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n1\\n1') == '2'\nassert solution('2\\n1') == '0'\nassert solution('2\\n1\\n2') == '2'\nassert solution('3\\n1') == '0'\n"
    },
    {
        "number": 3078,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1\\n1') == '4'\nassert solution('1\\n2\\n3\\n4\\n5\\n1') == '4'\nassert solution('5 9\\n1\\n1\\n10\\n1\\n9') == '2'\nassert solution('5 9\\n1\\n1\\n10\\n1\\n9\\n9\\n10\\n9') == '2'\n"
    },
    {
        "number": 3078,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n5\\n1\\n1\\n1\\n') == '4\\n4\\n2\\n2\\n0\\n'\nassert solution('4\\n5\\n1\\n1\\n1\\n3\\n') == '4\\n4\\n2\\n2\\n0\\n'\nassert solution('2\\n4\\n2\\n2\\n2') == '0\\n0\\n0\\n0\\n0\\n'\nassert solution('5\\n9\\n1\\n1\\n1\\n10\\n') == '2\\n0\\n0\\n2\\n0\\n'\n"
    },
    {
        "number": 3078,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''5 10000\n1\n1\n1\n1\n1\n''') == '''4\n4\n2\n2\n0\n'''\n\nassert solution(\n'''5 9\n1\n1\n10\n1\n9\n''') == '''2\n0\n0\n2\n0\n0\n'''\n\nassert solution(\n'''3 2000\n1\n1\n1\nSample Output 2:\n0\n0\n0\n''') == '''0\n0\n0\n'''\n"
    },
    {
        "number": 3078,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 10\\n1\") == \"1\"\nassert solution(\"1 9\\n1\") == \"2\"\nassert solution(\"1 9\\n1\") == \"2\"\nassert solution(\"1 9\\n1\") == \"2\"\nassert solution(\"1 9\\n1\") == \"2\"\n"
    },
    {
        "number": 3078,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1') == '4'\nassert solution('1\\n2\\n3') == '4'\nassert solution('2\\n2') == '0'\nassert solution('1\\n2\\n3\\n4\\n5') == '3'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7') == '3'\n"
    },
    {
        "number": 3079,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ne') == 'NE'\nassert solution('kaa') == 'DA'\nassert solution('kava') == 'ak'\nassert solution('kava') == 'ak'\n\nprint(solution(input()))\n"
    },
    {
        "number": 3079,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\nne''') == 'NE'\nassert solution('''4\nkava''') == 'DA'\nassert solution('''9\niuiuiuiuiu''') == 'IUIUIUIU'\nassert solution('''100\nhello''') == 'hello'\nassert solution('''10\na''') == 'a'\n"
    },
    {
        "number": 3079,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''ne\nn''') == 'NE'\nassert solution('''ka\nva''') == 'DA'\nassert solution('''kava\nkavaa''') == 'ak'\nassert solution('''kava\nkava''') == 'NE'\nassert solution('''kava\nkav''') == 'NE'\n"
    },
    {
        "number": 3079,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''ne\n    kava\n''') == 'NE'\nassert solution('''kava\n    ne\n''') == 'ak'\nassert solution('''kava\n    kava\n''') == 'k'\nassert solution('''kava\n    ka\n''') == 'k'\nassert solution('''kava\n    kaa\n''') == 'ka'\n"
    },
    {
        "number": 3079,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"ne\\n\\n\\n\\n\") == \"NE\\nak\"\nassert solution(\"kava\\n\\n\\n\\n\") == \"DA\\nak\"\nassert solution(\"kava\\nak\\n\\n\\n\") == \"DA\\nak\"\nassert solution(\"kava\\nak\\n\\n\\n\") == \"DA\\nak\"\nassert solution(\"kava\\nak\\nk\\n\\n\\n\") == \"DA\\nak\"\n"
    },
    {
        "number": 3079,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('ne') == 'NE'\nassert solution('kava') == 'DA'\nassert solution('abba') == 'NE'\nassert solution('kaba') == 'NE'\nassert solution('g') == 'NE'\n"
    },
    {
        "number": 3079,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('ne') == 'NE'\nassert solution('ka') == 'kA'\nassert solution('na') == 'Ne'\nassert solution('ka') == 'kA'\nassert solution('na') == 'Ne'\n"
    },
    {
        "number": 3079,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('ne') == 'NE'\nassert solution('kava') == 'DA'\nassert solution('lk') == 'ak'\nassert solution('kavat') == 'ak'\nassert solution('kavadad') == 'DA'\n"
    },
    {
        "number": 3079,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ne') == 'NE'\nassert solution('kava') == 'ak'\nassert solution('akava') == 'ak'\nassert solution('aaaaa') == 'DA'\nassert solution('kava') == 'ak'\n\"\"\""
    },
    {
        "number": 3079,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"ne\") == \"NE\"\nassert solution(\"ka\") == \"D\"\nassert solution(\"kat\") == \"D\"\nassert solution(\"kava\") == \"DA\"\nassert solution(\"katd\") == \"DA\"\n"
    },
    {
        "number": 3080,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\"\"\"\"\"\nassert solution(stdin) == \"\"\"\"\"\"\nassert solution(stdin) == \"\"\"\"\"\"\nassert solution(stdin) == \"\"\"\"\"\"\nassert solution(stdin) == \"\"\"\"\"\"\n"
    },
    {
        "number": 3080,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\n''') == '2\\n0\\n2\\n1'\nassert solution('''8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '0\\n0\\n3\\n2'\nassert solution('''4 4 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '2\\n0\\n2\\n1'\nassert solution('''8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '0\\n0\\n3\\n2'\nassert solution('''4 4 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '2\\n0\\n2\\n1'\n"
    },
    {
        "number": 3080,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\n\"\"\"\n\"\"\""
    },
    {
        "number": 3080,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\n''') == \"0\\n0\\n3\\n2\"\nassert solution('''8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == \"2\\n0\\n3\\n2\"\nassert solution('''8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == \"0\\n0\\n3\\n2\"\nassert solution('''8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == \"0\\n0\\n3\\n2\"\nassert solution('''8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == \"0\\n0\\n3\\n2\"\n"
    },
    {
        "number": 3080,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\n''') == '''2\n0\n2\n1\n'''\n\nassert solution('''8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '''0\n0\n3\n2\n'''\n"
    },
    {
        "number": 3080,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n1\\n2\\n1\\n2\") == \"2\\n0\\n2\\n1\"\nassert solution(\"2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\") == \"2\\n0\\n2\\n1\"\nassert solution(\"4\\n4\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n"
    },
    {
        "number": 3080,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\n''') == '2\\n0\\n2\\n1'\nassert solution('''8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '0\\n0\\n3\\n2'\n"
    },
    {
        "number": 3080,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\n''') == '2\\n0\\n2\\n1'\nassert solution('''10 10 5\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '0\\n0\\n3\\n2'\nassert solution('''6 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '0\\n0\\n3\\n2'\nassert solution('''6 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '0\\n0\\n3\\n2'\nassert solution('''6 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '0\\n0\\n3\\n2'\n"
    },
    {
        "number": 3080,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2\\n') == '2\\n0\\n2\\n1'\nassert solution('8 10 4\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8\\n') == '0\\n0\\n3\\n2'\nassert solution('8 10 5\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8\\n') == '0\\n0\\n2\\n1'\nassert solution('6 7 3\\n4 5 1\\n3 2 1\\n5 6 2\\n2 6 1\\n3 5 4\\n1 5 1\\n1 3 2\\n') == '3\\n0\\n3'\nassert solution('6 7 3\\n4 5 1\\n3 2 1\\n5 6 2\\n2 6 1\\n3 5 4\\n1 5 1\\n1 3 2\\n') == '3\\n0\\n3'\n"
    },
    {
        "number": 3080,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3\\n') == '0'\nassert solution('1\\n1\\n1\\n') == '1'\nassert solution('1\\n2\\n1\\n') == '0'\nassert solution('2\\n3\\n4\\n') == '1'\nassert solution('2\\n2\\n2\\n') == '0'\n"
    },
    {
        "number": 3081,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1') == '2'\nassert solution('1 0') == '2'\nassert solution('0 1') == '2'\nassert solution('1 0 1') == '2'\nassert solution('1 0 1 2 1') == '2'\n"
    },
    {
        "number": 3081,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n''') == '2'\nassert solution('''2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n''') == '1'\nassert solution('''2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n''') == '2'\nassert solution('''2 2\n2 1 2\n2 1 3\n2 3 2\n1 2 2\n2 1 3\n2 3 2\n''') == '2'\nassert solution('''2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n''') == '2'\n"
    },
    {
        "number": 3081,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3081,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0\\n2\\n1') == 2\nassert solution('2\\n2\\n1') == 1\nassert solution('1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 3081,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0 2\\n1 1\") == \"2\"\nassert solution(\"3 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\") == \"1\"\nassert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 3\") == \"1\"\n"
    },
    {
        "number": 3081,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3081,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1') == '2'\nassert solution('3 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 3\\n3 2 1') == '1'\nassert solution('4 3\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 3\\n3 2 1\\n3 2 2\\n4 1 3\\n1 1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 3\\n3 2 1') == '2'\nassert solution('4 4\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 3\\n3 2 1\\n3 2 2\\n4 1 3\\n1 1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 3\\n3 2 1') == '1'\nassert solution('3 3\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 3\\n3 2 1\\n3 2 2\\n4 1 3\\n1 1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 3\\n3 2 1') == '2'\n"
    },
    {
        "number": 3081,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 1\n"
    },
    {
        "number": 3081,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2\\n0 1') == '2'\nassert solution('1 1\\n0 1') == '1'\nassert solution('1 1\\n0 1') == '1'\nassert solution('1 1\\n0 1\\n1 2 1\\n2 1 3') == '1'\nassert solution('2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 3') == '2'\n"
    },
    {
        "number": 3081,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 1''') == '2'\nassert solution('''2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\nSample Output 2:\n1''') == '1'\n\nfrom collections import Counter"
    },
    {
        "number": 3082,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 3082,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input_) == output_\n\"\"\"\n\n\"\"\"\nThis problem was inspired by a Russian chef in a bar. He likes to order drinks from a menu. He usually drinks two-dimensional arrays of drinks. There are N drinks in the menu, and each drink consists of a name, a cost, and a taste rating. However, he likes not to spend all the time ordering drinks, so he wants to order drinks in such a way that the sum of the cost of all the drinks he drinks is minimal. The cost of a drink is equal to the taste rating of the drink, but the taste rating of a drink is different for each array element in the array.\n\nGiven an array of taste ratings, you are required to return the minimum cost so that all the drinks you order are at least taste-wise equally good.\n\nFor example, given a taste ratings array of:\n\n[4, 7, 7, 4, 5, 5, 6, 5, 7, 6]\n\nyou should return the minimum cost so that all the drinks you order are at least taste-wise equally good:\n\n2 + 7 + 7 + 4 + 6 + 5 + 5 + 6 + 6 + 7\n\nThe cost for the first array is 2, since the first three elements of the taste ratings array are 4, 7, and 7, so their taste ratings are 2, 7, and 7 respectively, and each drink is considered taste-wise equally good. The cost for the second array is 7, since all elements are 7, and all drinks are considered taste-wise equally good. The cost for the third array is 7, since it is not possible to order drinks that are all 7, but the first four elements are 4, 7, 7, and 4, which are considered to be the lowest in taste rating.\n\nThe cost of the array is then the sum of the costs for each of the three arrays, which is then minimized.\n\n-----Input-----\nThe first line of the input contains a single integer, $N$ (1 \\le N \\le 20), representing the number of elements in the array.\n\nThe second line contains N space-separated integers representing the taste ratings for the elements of the array.\n\nThe cost of the array is the sum of the taste ratings of the elements of the array, which is then minimized.\n\n-----Output-----\nIf it is possible to make the drinks taste-wise equally good by ordering the drinks from the menu, then print the minimum cost. Otherwise, print impossible.\n\n-----Examples-----\nInput\n3\n4 7 7 4 5 5 6 5 7 6\n\nOutput\n2 + 7 + 7 + 4 + 6 + 5 + 5 + 6 + 6 + 7\n\nInput\n4\n3 1 4 7 4 7\n\nOutput\n0\n\nInput\n6\n9 3 6 1 4 1 8 1\n\nOutput\n20\n\"\"\"\n\n\"\"\"\nTaste rating array:\n\n[4, 7, 7, 4, 5, 5, 6, 5, 7, 6]\n\nThe cost of the drinks is the sum of the taste ratings.\n\n\n2 + 7 + 7 + 4 + 6 + 5 + 5 + 6 + 6 + 7\n\nO(N*log(N))\n\"\"\"\n\nfrom typing import Tuple"
    },
    {
        "number": 3082,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''D 4 10 1\nC 6 1''') == '40.500000000'\nassert solution('''D 4 10 1\nC 6 1''') == '40.500000000'\nassert solution('''D 4 10 1\nC 9 3''') == '49.000000000'\nassert solution('''D 4 10 1\nC 9 3''') == '49.000000000'\nassert solution('''D 4 10 1\nD 5 8 1\nC 6 1\nC 7 4\nC 8 2\nD 9 9 1\nD 10 4 4\nD 11 4 3''') == '57.995555556'\n"
    },
    {
        "number": 3082,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3082,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''D 2 5 10\nC 9 3''') == '40.500000000'\nassert solution('''D 4 10 1\nC 6 1''') == '49.000000000'\nassert solution('''D 4 10 1\nC 6 1\nC 9 3''') == '49.000000000'\nassert solution('''D 2 15\nD 2 15\nC 3 1\nD 3 4\nC 1 2\nD 2 4\nC 4 5\nC 2 5\nD 5 6\nD 1 7\nD 1 3\nD 1 4\nD 1 1\nC 1 3\nD 1 4\nD 1 3\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nC 1 2\nC 1 2\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nD 1 3\nC 1 2\nD 1 4\nC 1 2\nD 1 3\nD 1 3\nD 1 3\nD 1 3\nD 1 3\nD 1 3\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2\nD 1 1\nC 1 2\nC 1 2"
    },
    {
        "number": 3082,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''D 4 10 1\nC 6 1''') == '40.500000000'\nassert solution('''D 4 10 1\nC 6 1\nC 9 3''') == '49.000000000'\nassert solution('''D 4 10 1\nD 7 15 1\nC 6 1\nC 9 3''') == 'impossible'\nassert solution('''D 4 10 1\nD 7 15 1\nD 1 1\nD 1 1\nD 1 1\nD 1 1\nD 1 1\nD 1 1\nD 1 1\nC 6 1\nC 9 3''') == 'impossible'\nassert solution('''D 4 10 1\nD 7 15 1\nD 1 1\nD 1 1\nD 1 1\nD 1 1\nD 1 1\nD 1 1\nD 1 1\nD 1 1\nC 6 1\nC 9 3''') == 'impossible'\n"
    },
    {
        "number": 3082,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3082,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"D 4 10 1\nC 6 1\"\"\"\n) == \"40.500000000\"\nassert solution(\n\"\"\"D 4 10 1\nC 6 1\"\"\"\n) == \"40.500000000\"\n"
    },
    {
        "number": 3082,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('D 4 10 1\\nC 6 1\\n') == '40.500000000'\nassert solution('D 4 10 1\\nC 6 1\\nD 9 3\\n') == '49.000000000'\n\"\"\"\n\nfrom functools import reduce\nfrom typing import List\n"
    },
    {
        "number": 3082,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2') == 'impossible'\nassert solution('2 1') == 'impossible'\nassert solution('2 3') == 'impossible'\nassert solution('5 4') == 'impossible'\nassert solution('3 2') == 'impossible'\n"
    },
    {
        "number": 3083,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('a 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7') == '5 4 9 3 1 10 7 6 2'\nassert solution('a 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\na 1 3\\na 2 8\\na 6') == '5 4 9 3 1 10 7 6 2'\nassert solution('a 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\na 1 3\\na 2 8\\na 6\\na 2 1 8\\na 2') == '5 4 9 3 1 10 7 6 2'\nassert solution('a 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\na 1 3\\na 2 8\\na 6\\na 2 1 8\\na 2\\na 2') == '5 4 9 3 1 10 7 6 2'\nassert solution('a 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\na 1 3\\na 2 8\\na 6\\na 2 1 8\\na 2\\na 1 7\\na 2') == '5 4 9 3 1 10 7 6 2'\n"
    },
    {
        "number": 3083,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input_data) == output_data\n\n\"\"\""
    },
    {
        "number": 3083,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n10\na 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n'''\n) == '5 4 9 3 1 10 7 6 2'\nassert solution(\n'''\n5\na 1 2\nb 1 2\nc 1 2\nd 1 2\ne 1 2\nf 1 2\ng 1 2\nh 0\ni 1 3\nj 1 7\n'''\n) == '1 3 7'\nassert solution(\n'''\n1\na 1 1\nb 1 1\nc 1 1\nd 1 1\ne 1 1\nf 1 1\ng 1 1\nh 0\ni 1 3\nj 1 7\n'''\n) == '1 3'\nassert solution(\n'''\n2\na 2\nb 1 2\nc 1 2\nd 1 2\ne 1 2\nf 1 2\ng 1 2\nh 0\ni 1 3\nj 1 7\n'''\n) == '1'\nassert solution(\n'''\n3\na 2\nb 1 2\nc 1 2\nd 1 2\ne 1 2\nf 1 2\ng 1 2\nh 0\ni 1 3\nj 1 7\n'''\n) == '2'\n"
    },
    {
        "number": 3083,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('a 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7') == '5 4 9 3 1 10 7 6 2'\nassert solution('a 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7') == '5 4 9 3 1 10 7 6 2'\nassert solution('a 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\na"
    },
    {
        "number": 3083,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''a 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7''') == '5 4 9 3 1 10 7 6 2'\n\nassert solution('''a 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7''') == 'fail'\n\nassert solution('''a 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7''') == 'fail'\n\nassert solution('''a 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7''') == 'fail'\n\nassert solution('''a 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7''') == 'fail'"
    },
    {
        "number": 3083,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''a 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7''') == '5 4 9 3 1 10 7 6 2'\nassert solution('''a 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7''') == 'fail'\nassert solution('''a 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7''') == '5 4 9 3 1 10 7 6 2'\nassert solution('''a 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\nk 3\nl 3\nm 1 4\nn 1 6\no 1 2\np 2 7\nq 1 8\nr 0\ns 1 5\nt 1 9\nu 1 3\nv 1 7\nw 2 9\nx 2 8\ny 1 4\nz 1 2\n''') == '5 4 9 3 1 10 7 6 2'\nassert solution('''a 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\nk 3\nl 3\nm 1 4\nn 1 6\no 1 2\np 2 7\nq 1 8\nr 0\ns 1 5\nt 1 9\nu 1 3\nv 1 7\nw 2 9\nx 2 8\ny 1 4\nz 1 2''') == '5 4 9 3 1 10 7 6 2'\n"
    },
    {
        "number": 3083,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''a 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7''') == \"5 4 9 3 1 10 7 6 2\"\nassert solution('''a 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\nb 1 2\nc 1 5\nd 2 4\ne 3 7\nf 2 1\ng 1 8\nh 3 9\ni 6''') == \"5 4 9 3 1 10 7 6 2\"\nassert solution('''a 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\nb 1 2\nc 1 5\nd 2 4\ne 3 7\nf 2 1\ng 1 8\nh 3 9\ni 6\nj 4 2\nk 3 1\nl 2 9\nm 2 4\nn 1 7\no 1 3\np 1 1\nq 1 9\nr 3 5\ns 4 4\nt 2 2\nu 1 6\nv 1 8\nw 1 5\nx 1 7\ny 1 9\nz 2 3\n''') == \"5 4 9 3 1 10 7 6 2\"\nassert solution('''a 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\nb 1 2\nc 1 5\nd 2 4\ne 3 7\nf 2 1\ng 1 8\nh 3 9\ni 6\nj 4 2\nk 3 1\nl 2 9\nm 2 4\nn 1 7\no 1 3\np 1 1\nq 1 9\nr 3 5\ns 4 4\nt 2 2\nu 1 6\nv 1 8\nw 1 5\nx 1 7\ny 1 9\nz 2 3\n''') == \"5 4 9 3 1 10 7 6 2\"\nassert solution('''a 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\nb 1 2\nc 1 5\nd 2 4\ne 3 7\nf 2 1\ng 1 8\nh 3 9\ni 6\nj 4 2\nk 3 1\nl 2 9\nm 2 4\nn 1 7\no 1 3\np 1 1\nq 1 9\nr 3 5\ns 4 4\nt 2 2\nu 1 6\nv 1 8\nw 1 5\nx 1 7\ny 1 9\nz 2 3\n''') == \"5 4 9 3 1 10 7 6 2\"\n"
    },
    {
        "number": 3083,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('a 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7') == '5 4 9 3 1 10 7 6 2'\nassert solution('b 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7') == 'fail'\nassert solution('a 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\ni 1 3\\nj 1 7') == '5 4 9 3 1 10 7 6 2'\nassert solution('a 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\nj 1 7') == 'fail'\nassert solution('a 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\ni 1 3\\nj 1 7\\nj 1 7\\ni 1 3\\nj 1 7') == 'fail'\n"
    },
    {
        "number": 3083,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''10\na 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7''') == '5 4 9 3 1 10 7 6 2','should work'\nassert solution('''5\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7''') == '5 4 9 3 1 10 7 6 2','should work'\nassert solution('''20\na 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\nk 1 12\nl 1 11\nm 1 5\nn 0\no 1 9\np 1 4\nq 1 8\nr 1 7\ns 1 6\nt 1 1\nu 1 2\nv 1 3\nw 1 1\nx 1 4\ny 1 5\nz 1 2\nSample Output 2:\n7 4 1 9 2 6 3 5 8 10 7 6 5 4 1 9 2 6 3\nfail\n"
    },
    {
        "number": 3083,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\\n2\\n2\\n2\\n2\\n2\\n1\\n2\\n2\\n1\\n3\\n2\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 3084,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''00:00\n01:01\n''') == '3\\n00:00\\n01:00\\n01:01'\nassert solution('''00:08\n00:00\n''') == '3\\n00:08\\n00:09\\n00:00'\nassert solution('''00:09\n00:08\n''') == '3\\n00:09\\n00:08\\n00:09'\nassert solution('''00:10\n00:09\n''') == '2\\n00:10\\n00:09'\nassert solution('''00:00\n23:59\n''') == '3\\n00:00\\n23:59\\n23:59'\n"
    },
    {
        "number": 3084,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('00:08') == 3\nassert solution('00:00') == 1\nassert solution('01:01') == 1\nassert solution('00:08') == 3\nassert solution('00:09') == 1\n"
    },
    {
        "number": 3084,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''00:00\n01:01''') == '3\\n00:00\\n01:00\\n01:01'\nassert solution('''00:08\n00:00\nSample Output 2:\n3\n00:08\n00:09\n00:00\n''') == '3\\n00:08\\n00:09\\n00:00'\nprint('All Tests Passed.')\n"
    },
    {
        "number": 3084,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"00:00\") == \"3\"\nassert solution(\"01:01\") == \"00:00\"\nassert solution(\"01:00\") == \"00:09\"\nassert solution(\"00:09\") == \"00:00\"\nassert solution(\"00:10\") == \"00:01\"\n"
    },
    {
        "number": 3084,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"00:00\\n01:01\") == \"3\\n00:00\\n01:00\\n01:01\"\nassert solution(\"00:08\\n00:00\\n\") == \"3\\n00:08\\n00:09\\n00:00\"\nassert solution(\"00:08\\n00:00\") == \"3\\n00:08\\n00:09\\n00:00\"\nassert solution(\"00:08\\n01:01\") == \"3\\n00:08\\n00:09\\n00:00\"\nassert solution(\"00:08\\n01:01\") == \"3\\n00:08\\n00:09\\n00:00\"\n"
    },
    {
        "number": 3084,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('00:00') == '3\\n00:00\\n01:00\\n01:01\\n'\nassert solution('01:01') == '3\\n00:00\\n01:00\\n01:01\\n'\nassert solution('24:00') == '1\\n23:59\\n00:00\\n23:59\\n'\nassert solution('23:59') == '1\\n23:59\\n00:00\\n23:59\\n'\nassert solution('12:00') == '1\\n00:00\\n01:00\\n01:01\\n'\n"
    },
    {
        "number": 3084,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"00:00\\n01:01\\n\") == \"3\\n00:00\\n01:00\\n01:01\\n\"\nassert solution(\"00:10\\n01:30\\n\") == \"2\\n00:10\\n00:09\\n00:01\\n\"\nassert solution(\"00:00\\n00:00\\n\") == \"0\\n00:00\\n00:00\\n\"\nassert solution(\"00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:"
    },
    {
        "number": 3084,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"00:00\") == \"3\"\nassert solution(\"00:01\") == \"00:00\"\nassert solution(\"01:01\") == \"00:00\"\nassert solution(\"08:08\") == \"3\"\nassert solution(\"10:00\") == \"3\"\n"
    },
    {
        "number": 3084,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('00:00') == '3'\nassert solution('01:00') == '3'\nassert solution('01:01') == '3'\nassert solution('21:01') == '3'\nassert solution('21:00') == '3'\n"
    },
    {
        "number": 3084,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"00:08\\n00:09\\n00:00\\n01:00\\n01:00\\n01:01\\n\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"00:00\\n00:08\\n00:09\\n00:00\\n00:09\\n00:08\\n\"\nassert solution(input()) == \"3\"\n"
    },
    {
        "number": 3085,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('()') == '4,4:4,4:'\nassert solution('(())') == '4,8:8,8:4,4:'\nassert solution('())') == '4,4:4,4:4,4:'\nassert solution('(((') == '4,8:8,8:4,4:4,4:4,4:'\nassert solution('(()())()') == '4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4"
    },
    {
        "number": 3085,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('(())') == '4,8:8,8:'\nassert solution('()') == '4,4:'"
    },
    {
        "number": 3085,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('(()') == '4,4:4,4:'\nassert solution('(())') == '4,4:4,4:'\nassert solution(')') == '4,4:4,4:'\nassert solution('()(') == '4,4:4,4:'\nassert solution('(((') == '4,4:4,4:'\n"
    },
    {
        "number": 3085,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('(())') == '4,8:8,8:', \"should be '4,8:8,8:'\"\nassert solution('())') == '4,4:', \"should be '4,4:'\"\nassert solution('()') == '4,4:4,4:', \"should be '4,4:4,4:'\"\nassert solution('((()))') == '4,8:4,8:8,8:8,8:', \"should be '4,8:4,8:8,8:8,8:'\"\nassert solution('((())') == '4,8:4,8:8,8:8,8:', \"should be '4,8:4,8:8,8:8,8:'\"\n"
    },
    {
        "number": 3085,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('(())') == '4,8:8,8:', 'test 1'\nassert solution('()') == '4,4:', 'test 2'\n\"\"\""
    },
    {
        "number": 3085,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\", \"Test 1\"\nassert solution(\"()\") == \"4,4:\", \"Test 2\"\n\"\"\"\n\nimport sys\nfrom collections import defaultdict"
    },
    {
        "number": 3085,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('(((((((()))))))') == '4,8:8,8:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:"
    },
    {
        "number": 3085,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('()') == ''\nassert solution('(()') == ''\nassert solution('(())') == ''\nassert solution('((()))') == ''\n"
    },
    {
        "number": 3085,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('(()') == '(4,8:8,8:)'\nassert solution('()') == '(4,4:4,4:)'\nassert solution('(()'*100) == '(4,4:4,4:)')\nassert solution('()'*100) == '(4,4:4,4:)'\nassert solution('()'*100) == '(4,4:4,4:)'\n"
    },
    {
        "number": 3085,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\")(\") == \"4,4:4,4:\"\n\nassert solution(\"()\") == \"4,0:0,0:0:\"\n\nassert solution(\"((())((()))())\") == \"4,0:0,0:0:4,0:0:4,0:0:4,0:0:4:\"\n\nassert solution(\"((((())(())))(())()))\") == \"4,0:0,0:0:4,0:0:4,0:0:4,0:0:4:0,0:0:4:4,0:0:4:4,0:0:4:4,0:0:4:4,0:0:4:4:\"\n\nassert solution(\"(((())(())))(())()))\") == \"4,0:0,0:0:4,0:0:4,0:0:4,0:0:4:0,0:0:4:4,0:0:4:4,0:0:4:4,0:0:4:4:0,0:0:4:4:4,0:0:4:4:\""
    },
    {
        "number": 3086,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"5\"\nassert solution(\"1 1\") == \"5\"\nassert solution(\"1 1\") == \"5\"\nassert solution(\"1 1\") == \"5\"\nassert solution(\"1 1\") == \"5\"\n"
    },
    {
        "number": 3086,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"185\"\n"
    },
    {
        "number": 3086,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 1\n26 02 03 03 1\n''') == '5'\nassert solution('''1 1\n26 02 03 03 2\n''') == '185'\nassert solution('''1 1\n26 02 03 03 3\n''') == '-1'\nassert solution('''1 1\n26 02 03 03 4\n''') == '-1'\nassert solution('''1 1\n26 02 03 03 5\n''') == '-1'\n"
    },
    {
        "number": 3086,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3086,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\n"
    },
    {
        "number": 3086,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(SAMPLE_INPUT_1) == SAMPLE_OUTPUT_1\nassert solution(SAMPLE_INPUT_2) == SAMPLE_OUTPUT_2\n"
    },
    {
        "number": 3086,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 3086,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\").read()) == open(\"output.txt\").read()\n"
    },
    {
        "number": 3086,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1') == '5'\nassert solution('26 02 03 03 1') == '5'\nassert solution('26 02 03 03 2') == '185'\nassert solution
    },
    {
        "number": 3086,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1') == '5'\nassert solution('1 1') == '5'\nassert solution('3 3') == '1'\nassert solution('100 1 1') == '17'\nassert solution('3 3') == '1'\n"
    },
    {
        "number": 3087,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 2\n3 4 5 6 1 2\n''') == '5 6 1 2 3 4'\nassert solution('''4 2\n3 4 1 2\n''') == '2 3 4 1'\nassert solution('''4 6\n1 2 3 4 5 6\n''') == 'Impossible'\nassert solution('''6 4\n1 2 3 4 5 6 7\n''') == '1 2 3 4 5 6'\nassert solution('''5 2\n1 2 3 4 5\n''') == '2 3 4 1'\n"
    },
    {
        "number": 3087,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6 2\n3 4 5 6 1 2''') == '5 6 1 2 3 4'\nassert solution('''4 2\n3 4 1 2''') == '2 3 4 1'\n\nassert solution('''6 7\n1 2 3 4 5 6 7''') == '1 2 2 3 4 4 5'\nassert solution('''6 7\n3 4 5 6 7 1 2''') == '2 3 3 4 4 4 5'\nassert solution('''6 7\n5 4 3 2 1 6 7''') == '2 3 3 4 4 4 5'\n"
    },
    {
        "number": 3087,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'Impossible'\nassert solution(stdin) == '5 6 1 2 3 4'\nassert solution(stdin) == '2 3 4 1'\nassert solution(stdin) == '1 2 3 4'\nassert solution(stdin) == '2 4 1'\n"
    },
    {
        "number": 3087,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6 2\n3 4 5 6 1 2''') == '5 6 1 2 3 4'\nassert solution('''6 4\n3 4 5 6 1 2''') == 'Impossible'\nassert solution('''10 3\n3 4 5 6 7 8 9 10 1 2''') == '1 2 3 4 5 6 7 8 9 10'\n'''\n"
    },
    {
        "number": 3087,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"6 2\") == \"5 6 1 2 3 4 \"\nassert solution(\"4 2\") == \"2 3 4 1 \"\nassert solution(\"6 3\") == \"Impossible\"\nassert solution(\"4 3\") == \"2 3 4 1 \"\nassert solution(\"10 4\") == \"Impossible\"\n"
    },
    {
        "number": 3087,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == expected\n"
    },
    {
        "number": 3087,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n6 2\n3 4 5 6 1 2\n\"\"\") == \"5 6 1 2 3 4\"\nassert solution(\n\"\"\"\n6 2\n3 4 5 6 1 2\n\"\"\") == \"2 3 4 1\"\nassert solution(\n\"\"\"\n6 2\n3 4 5 6 1 2\n\"\"\") == \"Impossible\"\nassert solution(\n\"\"\"\n9 6\n3 4 5 6 1 2 3 4 5 6 7 8\n\"\"\") == \"2 3 4 1\"\nassert solution(\n\"\"\"\n6 2\n1 2 3 4 5 6\n\"\"\") == \"5 6 1 2 3 4\"\n"
    },
    {
        "number": 3087,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3087,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3087,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\"\nassert solution(\"1 1\\n1\") == \"1\"\nassert solution(\"1 2\\n1\") == \"1\"\nassert solution(\"2 2\\n1\") == \"Impossible\"\nassert solution(\"1 3\\n1 3\") == \"Impossible\"\n"
    },
    {
        "number": 3088,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3088,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1374 2') == '7413'\nassert solution('210 1') == '201'\nprint(solution('1374 2'))\nprint(solution('210 1'))\n"
    },
    {
        "number": 3088,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\nprint(solution(stdin))\n"
    },
    {
        "number": 3088,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"214:9438 15:1750\") == \"9415:1749\"\nassert solution(\"214:9438 15:1750\") == \"9415:1749\"\nassert solution(\"1234 5678:9012 3456:5678\") == \"3456:56789:0123\"\nassert solution(\"1234 5678:9012 3456:5678\") == \"3456:56789:0123\"\nassert solution(\"1234 5678:9012 3456:5678\") == \"3456:56789:0123\"\n"
    },
    {
        "number": 3088,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 3088,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin.split()[0]\n"
    },
    {
        "number": 3088,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"1 2\"\nassert solution(\"1374 2\") == \"7413\"\nassert solution(\"210 1\") == \"201\"\nassert solution(\"131949347818958\") == \"91949347818958\"\n\nprint(\"Testcases passed!\")"
    },
    {
        "number": 3088,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 3\") == \"3412\"\nassert solution(\"1 10\") == \"1101\"\nassert solution(\"3 9\") == \"132\"\nassert solution(\"222222222222222222222\") == \"222222222222222222222\"\nassert solution(\"222222222222222222222\") == \"222222222222222222222\"\n"
    },
    {
        "number": 3088,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3088,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1') == '11'\nassert solution('1 2') == '21'\nassert solution('5 3') == '3521'\nassert solution('1234 5678 9012 3456 7890') == '95123467890123456'\n"
    },
    {
        "number": 3089,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 0\\n0 1\\n1 1') == '0.666666666666667'\nassert solution('0 1\\n1 1\\n2 0') == '0.733333333333333'\nassert solution('2\\n0 0\\n1 1') == '0.666666666666667'\nassert solution('2\\n0 0\\n1 1\\n2 0') == '0.733333333333333'\nassert solution('2\\n0 0\\n1 1\\n2 0\\n3 0\\n4 0') == '0.6'\n"
    },
    {
        "number": 3089,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2') == '0.5'\nassert solution('2 3') == '0.5'\nassert solution('3 4') == '0.5'\nassert solution('4 5') == '0.5'\nassert solution('5 6') == '0.5'\n"
    },
    {
        "number": 3089,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 0') == '0.666666666666667'\nassert solution('0 1') == '0.666666666666667'\nassert solution('1 1') == '0.666666666666667'\nassert solution('1 0') == '0.666666666666667'\nassert solution('-0.11 -1.8 2.3') == '-0.0333333333333333'\n"
    },
    {
        "number": 3089,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0.666666666666667\"\n"
    },
    {
        "number": 3089,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == 0.6666666666666667\n"
    },
    {
        "number": 3089,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 1\\n1 0\") == \"0.666666666666667\"\nassert solution(\"3\\n0 0\\n1 1\\n2 0\") == \"0.733333333333333\"\nassert solution(\"2\\n0 0\\n1 1\") == \"0.3333333333333333\"\nassert solution(\"1\\n0 0\") == \"0.0\""
    },
    {
        "number": 3089,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 0\\n0 1\\n1 1\\n1 0') == '0.666666666666667'\nassert solution('1\\n1\\n1\\n0') == '0.666666666666667'\nassert solution('3\\n0 0\\n1 1\\n2 0') == '0.733333333333333'\nassert solution('3\\n0 0\\n1 1\\n2 0\\n3 1') == '0.833333333333333'\nassert solution('5\\n0 0\\n0 0\\n0 0\\n0 1\\n0 1\\n0 1\\n0 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1') == '0.9555555555555556'\n"
    },
    {
        "number": 3089,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''0 0\n0 1\n1 1\n1 0''') == '0.666666666666667'\nassert solution('''2\n0 0\n1 1\n2 0''') == '0.733333333333333'\nassert solution('''4\n0 0\n0 1\n1 1\n1 0''') == '0.666666666666667'\nassert solution('''6\n0 0\n1 1\n2 0\n3 1\n4 2\n5 2\n''') == '0.3588127774346985'\nassert solution('''12\n1 1\n2 1\n3 1\n4 1\n5 1\n6 1\n7 1\n8 1\n9 1\n10 1\n11 1\n12 1''') == '0.2583842766220764'\n"
    },
    {
        "number": 3089,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0 0\n0 1\n1 1\n1 0''') == '0.666666666666667'\nassert solution('''1\n2\n3\n4\n5\n6\n7''') == '1.166666666666667'\nassert solution('''0 0\n1 1\n3 3\n5 3\n7 5\n9 5\n11 5\n13 5\n15 5\n17 5\n19 5\n''') == '1.1833333333333335'\nassert solution('''0 0\n0 1\n1 1\n1 0\n''') == '0.666666666666667'\nassert solution('''0 0\n0 1\n0 1\n1 1\n2 1\n''') == '0.8'\n"
    },
    {
        "number": 3089,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 0\\n0 1\\n1 1') == '0.666666666666667'\nassert solution('0 0\\n0 1\\n1 1\\n1 0') == '0.733333333333333'\nassert solution('1 1\\n0 0') == '1.0'\nassert solution('4\\n0 0\\n0 1\\n1 1\\n1 0\\n2 0\\n3 0') == '0.666666666666667'\nassert solution('2\\n0 0\\n0 1\\n1 1\\n2 0') == '0.733333333333333'\n"
    },
    {
        "number": 3090,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3090,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0 2 3\") == \"9\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 1 3\") == \"7\"\nassert solution(\"3 3 3\") == \"2\"\nassert solution(\"3 4 5\") == \"11\"\n"
    },
    {
        "number": 3090,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3090,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 3 4\\n10 1 3\\n0 1 20\") == \"9\"\nassert solution(\"2 3 100\\n10 1 10\\n10 1 10\") == \"21\"\nassert solution(\"1 1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1 1\\n1 1 1\") == \"0\"\nassert solution(\"2 3 4\\n10 1 3\\n0 1 20\") == \"9\"\n"
    },
    {
        "number": 3090,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 3 4\n10 1 3\n0 1 20''') == '9'\nassert solution('''2 3 100\n10 1 10\n10 1 10''') == '21'\nassert solution('''2 2 2\n1 1 1\n1 1 1''') == '4'\nassert solution('''2 2 2\n1 1 1\n1 1 1''') == '6'\nassert solution('''2 2 2\n1 1 1\n1 1 1''') == '8'\n"
    },
    {
        "number": 3090,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3 4\\n10 1 3\\n0 1 20') == '9'\nassert solution('2 3 100\\n10 1 10\\n10 1 10') == '21'\nassert solution('2 3 2\\n10 1 3\\n0 1 20') == '5'\nassert solution('2 3 1\\n10 1 3\\n0 1 20') == '4'\nassert solution('2 3 5\\n10 1 3\\n0 1 20') == '5'\n"
    },
    {
        "number": 3090,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"2 3 4\\n\"\n    \"10 1 3\\n\"\n    \"0 1 20\"\n) == \"9\"\n\nassert solution(\n    \"2 3 100\\n\"\n    \"10 1 10\\n\"\n    \"10 1 10\"\n) == \"21\"\n\nassert solution(\n    \"2 3 50\\n\"\n    \"10 1 30\\n\"\n    \"10 1 30\\n\"\n    \"10 1 30\"\n) == \"90\"\n"
    },
    {
        "number": 3090,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 3 4\n10 1 3\n0 1 20''') == '9'\nassert solution('''2 3 4\n10 1 3\n0 1 10\n10 1 10''') == '21'\nassert solution('''3 3 4\n1 1 1\n2 2 2\n3 3 3''') == '12'\nassert solution('''3 3 100\n1 1 10\n2 2 10\n3 3 10''') == '12'\nassert solution('''4 4 100\n1 1 1 1\n2 2 2 2\n3 3 3 3\n4 4 4 4''') == '22'\n"
    },
    {
        "number": 3090,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3090,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3091,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"8 2 7 -\") == \"2\"\nassert solution(\"9 2 7 -\") == \"4\"\n\nprint(\"Your solutions are correct!\")\n"
    },
    {
        "number": 3091,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''8 2 7 -''') == '2'\nassert solution('''9 2 7 -''') == '4'\nassert solution('''3 2 3 -''') == '0'\nassert solution('''7 7 7 -''') == '1'\nassert solution('''10 2 3 -''') == '4'\n'''\n    pass\n"
    },
    {
        "number": 3091,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"8 2 7 -\") == \"2\"\nassert solution(\"9 2 7 -\") == \"4\"\nassert solution(\"9 3 7 *\") == \"0\"\nassert solution(\"9 3 5 /\") == \"0\"\nassert solution(\"9 3 10\") == \"0\"\n"
    },
    {
        "number": 3091,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"8 2 7 -\") == \"2\", \"Should return 2\"\nassert solution(\n    \"9 2 7 -\") == \"4\", \"Should return 4\"\nassert solution(\n    \"10 3 3 *\") == \"27\", \"Should return 27\"\nassert solution(\n    \"10 3 4 /\") == \"12\", \"Should return 12\"\nassert solution(\n    \"10 3 5 /\") == \"15\", \"Should return 15\"\n"
    },
    {
        "number": 3091,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''8 2 7 -\n1 1 1 2\n''') == '4'\n\nassert solution('''9 2 7 -\n1 1 1 2\n''') == '8'\n\nassert solution('''10 2 7 -\n1 1 1 2\n''') == '3'\n\nassert solution('''8 2 7 +\n1 1 1 2\n''') == '2'\n\nassert solution('''9 2 7 *\n1 1 1 2\n''') == '0'"
    },
    {
        "number": 3091,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 2 7 -\\n1 1 1 2\\n') == '2'\nassert solution('9 2 7 -\\n1 1 1 2\\n') == '4'\nassert solution('8 2 3 -\\n1 1 1 2\\n') == '2'\nassert solution('9 2 7 -\\n1 1 1 2\\n') == '8'\nassert solution('10 2 7 -\\n1 1 1 2\\n') == '4'\n"
    },
    {
        "number": 3091,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8 2 7 -\\n1 1 1 2') == '2'\nassert solution('9 2 7 -\\n1 1 1 2') == '4'\nassert solution('15 2 7 -\\n1 1 1 2\\n3 3 3 4') == '6'\nassert solution('10 2 7 -\\n1 1 1 2\\n3 3 3 4\\n5 5 5 6') == '8'\nassert solution('15 2 7 -\\n1 1 1 2\\n3 3 3 4\\n5 5 5 6\\n7 7 7 8') == '10'\n"
    },
    {
        "number": 3091,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''8 2 7 -''') == '2'\nassert solution('''9 2 7 -''') == '4'\nassert solution('''7 1 1 2''') == '2'\nassert solution('''6 1 1 2''') == '3'\nassert solution('''4 1 1 2''') == '1'\n"
    },
    {
        "number": 3091,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''8 2 7 -\n1 1 1 2\n''') == '2'\nassert solution('''9 2 7 -\n1 1 1 2\n''') == '4'\n"
    },
    {
        "number": 3091,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\\n\") == \"2\"\nassert solution(\"9 2 7 -\\n1 1 1 2\\n\") == \"4\"\nassert solution(\"3 3 2 *\\n1 1 1 1\\n1 2 1 2\\n1 3 1 3\\n2 1 1 2\\n3 1 1 3\\n3 2 2 3\\n4 2 1 2\\n5 1 1 3\\n6 1 1 3\\n\") == \"16\"\nassert solution(\"3 3 3 *\\n1 1 1 1\\n1 2 1 2\\n1 3 1 3\\n2 1 1 2\\n3 1 1 3\\n4 1 1 3\\n5 1 1 3\\n6 1 1 3\\n7 1 1 3\\n8 1 1 3\\n9 1 1 3\\n\") == \"256\"\nassert solution(\"2 2 2 *\\n1 1 1 1\\n1 2 1 2\\n2 1 1 1\\n1 1 1 1\\n1 2 1 2\\n2 1 1 1\\n3 1 1 3\\n4 1 1 3\\n5 1 1 3\\n6 1 1 3\\n7 1 1 3\\n8 1 1 3\\n9 1 1 3\\n\") == \"1024\"\n"
    },
    {
        "number": 3092,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == solution(\n    \"\"\"\n4 3\n1 2 5\n2 3 5\n3 4 5\n1 4 8\n\"\"\"\n) == \"\"\"\n3\n4\n3\n2\n1\n\"\"\"\n\nassert solution(stdin) == solution(\n    \"\"\"\n1 1\n1 2\n1 3\n\"\"\"\n) == \"\"\"\n1\n1\n1\n\"\"\"\n\nassert solution(stdin) == solution(\n    \"\"\"\n2 2\n1 2\n2 1\n\"\"\"\n) == \"\"\"\n2\n2\n\"\"\"\n\nassert solution(stdin) == solution(\n    \"\"\"\n3 3\n1 2\n2 3\n3 1\n\"\"\"\n) == \"\"\"\n2\n2\n2\n1\n1\n\"\"\"\n\nassert solution(stdin) == solution(\n    \"\"\"\n4 4\n1 2\n2 3\n3 4\n1 4\n\"\"\"\n) == \"\"\"\n1\n3\n1\n1\n\"\"\""
    },
    {
        "number": 3092,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n4 3\n1 2 5\n2 3 5\n3 4 5\n1 4 8\n\"\"\") == \"\"\"\n3\n4\n3\n2\n\"\"\"\n"
    },
    {
        "number": 3092,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 3\n1 2 5\n2 3 5\n3 4 5\n1 4 8''') == '''3\n4\n3\n2\n1'''\n"
    },
    {
        "number": 3092,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n2\\n\") == \"\"\nassert solution(\"4 2\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\\n\") == \"3\\n4\\n3\"\nassert solution(\"5 2\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\\n\") == \"3\\n4\\n3\"\nassert solution(\"5 2\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\\n\") == \"3\\n4\\n3\"\n"
    },
    {
        "number": 3092,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4 3\") == \"\"\nassert solution(\"1 2 5\\n2 3 5\\n3 4 5\") == \"3\\n4\\n3\\n\"\nassert solution(\"1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\") == \"2\\n3\\n2\\n1\\n\"\n"
    },
    {
        "number": 3092,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3\\n4') == '3\\n4\\n3'\nassert solution('3\\n2\\n2\\n2\\n2\\n2\\n2') == '3\\n2'\nassert solution('4\\n4\\n4\\n4\\n4\\n4\\n4') == '4\\n4\\n4'\nassert solution('5\\n5\\n5\\n5\\n5\\n5\\n5') == '5\\n5'\nassert solution('5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5') == '5\\n5'\n"
    },
    {
        "number": 3092,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\") == \"3\\n4\\n3\\n2\\n\"\nassert solution(\"2 3 5\\n2 3 5\\n3 4 5\\n1 4 8\") == \"3\\n4\\n3\\n2\\n\"\nassert solution(\"4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\") == \"2\\n3\\n2\\n1\\n\"\nassert solution(\"3 5\\n1 2 3\\n2 3 4\\n3 4 5\") == \"3\\n4\\n3\\n2\\n\"\nassert solution(\"4 4\\n1 2 3\\n2 3 4\\n3 4 5\\n1 4 8\") == \"2\\n3\\n2\\n1\\n\"\n"
    },
    {
        "number": 3092,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\\\n4 3\n1 2 5\n2 3 5\n3 4 5\n1 4 8''') == '''\\\n3\n4\n3\n2\n'''\n"
    },
    {
        "number": 3092,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3092,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3093,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3\\n2 1') == '6'\nassert solution('3 4\\n2 3 1') == '24'\n"
    },
    {
        "number": 3093,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '6'\n"
    },
    {
        "number": 3093,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\\n3\\n4\") == \"6\"\nassert solution(\"2\\n3\\n4\") == \"24\"\nassert solution(\"2\\n3\") == \"12\"\nassert solution(\"1\\n2\") == \"2\"\nassert solution(\"3\\n4\") == \"24\"\n"
    },
    {
        "number": 3093,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '24'\nassert solution(stdin) == '24'\n\n## Test Inputs\n"
    },
    {
        "number": 3093,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3') == '6'\nassert solution('1\\n2\\n3\\n4') == '24'\nassert solution('2\\n2') == '1'\n"
    },
    {
        "number": 3093,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 3093,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"6\"\nassert solution(\"3 4\") == \"24\"\n\"\"\"\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 3093,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 3\n2 1''') == '6'\nassert solution('''3 4\n2 3 1''') == '24'\nassert solution('''5 4\n1 2 3 4 5''') == '10'\nassert solution('''5 5\n1 2 3 4 5''') == '60'\nassert solution('''3 5\n2 4 3 4''') == '15'\n"
    },
    {
        "number": 3093,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 3\n2 1''') == '6'\nassert solution('''3 4\n2 3 1''') == '24'\nprint(solution(input()))"
    },
    {
        "number": 3093,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\nassert solution(\"2 3\\n2 1\") == '6'\nassert solution(\"3 4\\n2 3 1\") == '24'\nassert solution(\"3 4\\n2 3 1\") == '24'\nassert solution(\"1000000000 5000000000\") == '1000000007'"
    },
    {
        "number": 3094,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2\\n2 1') == '2'\nassert solution('2\\n1 2\\n2 1') == '2'\nassert solution('3\\n3 2 1\\n3 2 1\\n2 3 1') == '3'\nassert solution('4\\n4 3 2 1\\n3 4 2 1\\n2 4 3 1\\n2 4 3 1\\n3 4 2 1') == '4'\nassert solution('5\\n5 4 3 2 1\\n5 4 3 2 1\\n5 4 3 2 1\\n5 4 3 2 1\\n4 5 3 2 1\\n4 5 3 2 1\\n4 5 3 2 1') == '1'\n"
    },
    {
        "number": 3094,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3094,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2') == '2'\nassert solution('2 4 3 6 9') == '1'\nassert solution('3 4 5 1 2') == '3'\nassert solution('3 4 5 1 2 4') == '3'\nassert solution('3 4 5 1 2 4 5 6 7') == '8'\n"
    },
    {
        "number": 3094,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('2\\n1 2') == '2'\nassert solution('2\\n2 4') == '4'\nassert solution('5\\n3 4 5 1 2') == '1'\n"
    },
    {
        "number": 3094,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2\\n2 3') == '2'\nassert solution('1 2\\n3 4') == '1'\nassert solution('3 4\\n4 5 2 1') == '1'\nassert solution('5 4\\n3 4 2 1') == '4'\nassert solution('5 4\\n1 2 3 4 5') == '6'\nprint('All tests passed successfully')\n"
    },
    {
        "number": 3094,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 2''') == '2'\nassert solution('''2 4''') == '2'\nassert solution('''1 2 3''') == '4'\nassert solution('''2 3 4''') == '8'\nassert solution('''3 4 5''') == '4'\n"
    },
    {
        "number": 3094,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"2\"\"\") == \"\"\"2\n\"\"\".strip()\n\nassert solution(\"\"\"5\"\"\") == \"\"\"1\n\"\"\".strip()\n\nassert solution(\"\"\"3 4 5 1 2\"\"\") == \"\"\"2\n\"\"\".strip()\n\nassert solution(\"\"\"5 2 7 3 2 3\"\"\") == \"\"\"1\n\"\"\".strip()\n\nassert solution(\"\"\"3 4 5 1 2\"\"\") == \"\"\"2\n\"\"\".strip()"
    },
    {
        "number": 3094,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n1 2') == '2'\nassert solution('5\\n3 4 5 1 2') == '1'\nassert solution('2\\n1 2') == '2'\nassert solution('10\\n8 9 10 7 6 5 4 3 2 1') == '2'\nprint(\"Test cases passed.\")\n"
    },
    {
        "number": 3094,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n') == '1'\nassert solution('2\\n1 2\\n') == '2'\nassert solution('3\\n1 2 3\\n') == '1'\nassert solution('3\\n2 3 1\\n') == '2'\nassert solution('3\\n1 2 3\\n') == '3'\n"
    },
    {
        "number": 3094,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"1\n1 2\n2 1\"\"\") == \"2\"\nassert solution(\"\"\"3\n3 4 5 1 2\n3 4 5 1 2\n3 4 5 1 2\n3 4 5 1 2\n\"\"\") == \"6\"\nassert solution(\"\"\"6\n1 2 3 4 5 6 7\n1 2 3 4 5 6 7\n1 2 3 4 5 6 7\n1 2 3 4 5 6 7\n1 2 3 4 5 6 7\n1 2 3 4 5 6 7\n\"\"\") == \"4\"\nassert solution(\"\"\"10\n4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2 3 4 2 4 1 5 2"
    },
    {
        "number": 3095,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n1 4 10\\n5 2 6\\n11 1 3\") == \"9\"\nassert solution(\"3 3\\n1 3 1\\n2 1 2\\n1 1 1\") == \"4\"\nassert solution(\"3 3\\n1 3 1\\n2 1 2\\n1 1 1\") == \"4\"\nassert solution(\"3 3\\n1 3 1\\n2 1 2\\n1 1 1\") == \"4\"\nassert solution(\"3 3\\n1 3 1\\n2 1 2\\n1 1 1\") == \"4\"\n"
    },
    {
        "number": 3095,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\\n4 5 6\\n7 8 9\") == '9'\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\\n19 20 21\\n22 23 24\\n25 26 27\\n28 29 30\\n31 32 33\\n34 35 36\") == '26'\nassert solution(\"2 3\\n1 2 4\\n3 4 5\\n1 2 3\") == '9'\nassert solution(\"2 3\\n1 2 4\\n3 4 5\\n1 2 3\\n4 5 6\") == '18'\nassert solution(\"2 3\\n1 2 4\\n3 4 5\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\\n19 20 21\\n22 23 24\\n25 26 27\\n28 29 30\\n31 32 33\\n34 35 36\\n37 38 39\\n40 41 42\\n43 44 45\\n46 47 48\") == '34'\n"
    },
    {
        "number": 3095,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 4 10\\n5 2 6\\n11 1 3\\n') == '9'\nassert solution('3 3\\n1 3 1\\n2 1 2\\n1 1 1\\n') == '4'\nassert solution('3 3\\n1 4 1\\n2 1 2\\n1 1 1\\n') == '4'\nassert solution('3 3\\n1 2 1\\n2 3 2\\n1 1 1\\n') == '4'\nassert solution('3 3\\n1 4 2\\n2 1 2\\n1 1 1\\n') == '9'\n"
    },
    {
        "number": 3095,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''3 3\n1 4 10\n5 2 6\n11 1 3'''\n    ) == '9'\nassert solution(\n'''3 3\n1 3 1\n2 1 2\n1 1 1'''\n    ) == '4'\nassert solution(\n'''2 1\n4 1\n-1 1'''\n    ) == '0'\nassert solution(\n'''10 4\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n9 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n7 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1'''\n    ) == '10'\nassert solution(\n'''3 2\n1 3 1\n1 2 1'''\n    ) == '4'\n"
    },
    {
        "number": 3095,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"1\\n2\") == \"\"\nassert solution(\"1\\n2\\n3\") == \"\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"\"\n"
    },
    {
        "number": 3095,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''3 3\n1 4 10\n5 2 6\n11 1 3''') == '9'\nassert solution(\n'''3 3\n1 3 1\n2 1 2\n1 1 1''') == '4'\nassert solution(\n'''3 3\n1 4 1\n5 2 6\n11 1 3''') == '0'\nassert solution(\n'''3 3\n1 4 1\n5 2 6\n11 1 3''') == '4'\nassert solution(\n'''3 3\n1 3 1\n2 1 2\n1 1 1''') == '4'\n"
    },
    {
        "number": 3095,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(open(\"test_extreme_cool_submatrix.txt\", \"r\").read()) == \"8\"\nassert solution(open(\"test_extreme_cool_submatrix_2.txt\", \"r\").read()) == \"6\"\nassert solution(open(\"test_extreme_cool_submatrix_3.txt\", \"r\").read()) == \"4\"\nassert solution(open(\"test_extreme_cool_submatrix_4.txt\", \"r\").read()) == \"0\"\nassert solution(open(\"test_extreme_cool_submatrix_5.txt\", \"r\").read()) == \"5\"\n"
    },
    {
        "number": 3095,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n3 3\n1 4 10\n5 2 6\n11 1 3\n\"\"\") == \"9\"\nassert solution(\n    \"\"\"\n3 3\n1 3 1\n2 1 2\n1 1 1\n\"\"\") == \"4\"\nassert solution(\n    \"\"\"\n2 3\n-3 1 1\n2 -1 -1\n1 1 1\n\"\"\") == \"2\"\n\n---4.17.py---\n"
    },
    {
        "number": 3095,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n3 3\\n1 3 1\\n2 1 2\\n1 1 1\") == \"9\"\nassert solution(\"3 3\\n1 4 10\\n5 2 6\\n11 1 3\\n2 1 2\\n1 1 1\\n1 1 1\") == \"4\"\nassert solution(\"2\\n4 4\\n-1000 0\\n2 -1000 2\\n1 0 -1000\\n1 2 -1000\") == \"0\"\nassert solution(\"2\\n4 4\\n1 0 1\\n1 1 1\\n1 1 1\") == \"4\"\nassert solution(\"2\\n4 4\\n-1000 -1000\\n2 -1000 2\\n1 0 1\\n1 1 1\\n1 1 1\") == \"4\"\n"
    },
    {
        "number": 3095,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == str(4)\n'''\n"
    },
    {
        "number": 3096,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n2\\n1 3') == '3'\nassert solution('4\\n2 1 3 4\\n1 2\\n1 3\\n3 4\\n') == '6'\nassert solution('4\\n3 4 5 6\\n1 2\\n1 3\\n2 4\\n') == '3'\nassert solution('5\\n3 4 5 6 7\\n1 2\\n1 3\\n2 4\\n3 5\\n4 5\\n5 6\\n') == '3'\nassert solution('7\\n3 4 5 6 7 8\\n1 2\\n1 3\\n2 4\\n3 5\\n4 6\\n5 6\\n6 7\\n') == '4'\n"
    },
    {
        "number": 3096,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3096,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3096,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"2 0\") == \"\"\nassert solution(\"2 0 0\") == \"\"\n"
    },
    {
        "number": 3096,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == str(3)\n\n\"\"\""
    },
    {
        "number": 3096,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n2 1 3 4\n1 2\n1 3\n3 4\n''') == '6'\nassert solution('''2\n3 4 5\n1 2\n1 3\n''') == '3'\nassert solution('''3\n1 2\n1 3\n2 3\n''') == '1'\nassert solution('''4\n1 2\n1 3\n2 3\n2 4\n''') == '2'\nassert solution('''5\n5 5 5 5 5\n1 2\n2 3\n3 4\n4 5\n1 1\n''') == '0'\n"
    },
    {
        "number": 3096,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\") == \"1\\n\"\nassert solution(\"2\\n1\") == \"1\\n\"\nassert solution(\"1\\n2\\n1\\n\") == \"2\\n\"\nassert solution(\"3\\n1\\n3\\n1\") == \"1\\n\"\nassert solution(\"3\\n1\\n1\\n1\") == \"3\\n\"\n"
    },
    {
        "number": 3096,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n2 1 3 4\\n1 2\\n1 3\\n3 4\\n') == '6'\nassert solution('5\\n3 4 5 6\\n1 2\\n1 3\\n2 4\\n1 2\\n3 4\\n') == '3'\nassert solution('5\\n1 1 1 1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n') == '5'\nassert solution('5\\n1 1 1 1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n') == '5'\nassert solution('5\\n1 1 1 1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n') == '5'\n"
    },
    {
        "number": 3096,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\\\n4\n2 1 3 4\n1 2\n1 3\n3 4\n''') == \"6\"\nassert solution('''\\\n4\n2 1 3 4\n1 2\n1 3\n2 4\n''') == \"3\"\nassert solution('''\\\n10\n1 2 3 4 5 6 7 8 9 10\n2 2\n1 3\n2 4\n2 3\n4 5\n2 1\n4 4\n2 2\n3 4\n1 4\n5 5\n2 4\n5 7\n1 5\n2 3\n1 2\n1 4\n1 6\n2 5\n1 3\n4 6\n2 3\n5 6\n''') == \"14\"\n"
    },
    {
        "number": 3096,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\nprint(f\"Correct! Pass it now.\")\n"
    },
    {
        "number": 3097,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n1 10\n5 8''') == '18'\nassert solution('''3\n17 144\n121 121\n89 98\n''') == '265 25 10'\n'''"
    },
    {
        "number": 3097,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(TEST_1) == TEST_1_EXPECTED\nassert solution(TEST_2) == TEST_2_EXPECTED\n"
    },
    {
        "number": 3097,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"1\n1 10\"\"\"\n) == \"18\"\nassert solution(\n    \"\"\"2\n1 10\n5 8\n\"\"\"\n) == \"265\"\nassert solution(\n    \"\"\"3\n17 144\n121 121\n89 98\n\"\"\"\n) == \"10\"\n\nassert solution(\n    \"\"\"4\n1 10\n5 8\n7 4\n3 3\n\"\"\"\n) == \"165\"\nassert solution(\n    \"\"\"5\n1 10\n5 8\n7 4\n3 3\n1 1\n\"\"\"\n) == \"165\""
    },
    {
        "number": 3097,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\n1 10\n5 8\n''') == '18\\n8\\n'\nassert solution('''1\n2 3\n1 1\n2 2\n''') == '12\\n1\\n'\nassert solution('''1\n2 10\n5 8\n''') == '265\\n25\\n10\\n'\nassert solution('''2\n2 4\n1 1\n1 2\n''') == '9\\n4\\n'\nassert solution('''1\n2 10\n5 8\n''') == '265\\n25\\n10\\n'\n"
    },
    {
        "number": 3097,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n1 10\n5 8''') == '18\\n8'\nassert solution('''3\n17 144\n121 121\n89 98''') == '265\\n25\\n10'\nprint(solution('''5\n1 10\n1 100\n1 1000\n1 10000\n1 100000'''))"
    },
    {
        "number": 3097,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"1\n1 10\n5 8\"\"\"\n) == \"\"\"18\n8\n265\"\"\"\n\nassert solution(\n\"\"\"1\n17 144\n121 121\n89 98\"\"\"\n) == \"\"\"265\n25\n10\"\"\"\n\nassert solution(\n\"\"\"1\n1 10\n5 8\n5 8\n5 8\n5 8\"\"\"\n) == \"\"\"18\n8\n265\"\"\"\n\nassert solution(\n\"\"\"1\n1 10\n5 8\n17 144\n121 121\n89 98\"\"\"\n) == \"\"\"265\n25\n10\"\"\"\n\nassert solution(\n\"\"\"1\n1 10\n5 8\n3 7\n5 7\n17 144\n121 121\n89 98\"\"\"\n) == \"\"\"265\n25\n10\"\"\""
    },
    {
        "number": 3097,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(open(\"test_data/test_2.txt\").read()) == \"265\\n25\\n10\"\nassert solution(open(\"test_data/test_3.txt\").read()) == \"14\"\nprint(solution(open(\"input/queries.txt\").read()))\n"
    },
    {
        "number": 3097,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n2\n1 10\n5 8\n''') == '18\\n8\\n'\nassert solution('''\n3\n17 144\n121 121\n89 98\n''') == '265\\n25\\n10\\n'\nassert solution('''\n1\n1\n1\n1\n1\n''') == '1\\n'\nassert solution('''\n10\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n''') == '1\\n'\nassert solution('''\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n''') == '1\\n'\n"
    },
    {
        "number": 3097,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(open('test').read()) == open('test_output').read()\n"
    },
    {
        "number": 3097,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\nprint('Correct')\n\"\"\"\n\n__author__ = 'chenheqing'\n"
    },
    {
        "number": 3098,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3\n0 0\n1 1\n2 1\n1 0''') == '0.50000000'\nassert solution('''5 5\n0 4\n4 2\n4 1\n3 -1\n-2 4''') == '12.50000000'\nassert solution('''10 10\n0 9\n1 1\n2 1\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10''') == '29.50000000'\nassert solution('''1 10\n0 1\n1 1\n2 1\n3 2\n4 2\n5 2\n6 2\n7 3\n8 3\n9 4\n10 4''') == '6.50000000'\nassert solution('''10 10\n-2 1\n1 2\n3 2\n4 2\n5 2\n6 2\n7 3\n8 3\n9 4\n10 4''') == '4.50000000'\n"
    },
    {
        "number": 3098,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 3\n0 0\n1 1\n2 1\n1 0''') == '0.50000000'\nassert solution('''4 3\n0 4\n4 2\n4 1\n3 -1\n-2 4''') == '12.50000000'\nassert solution('''5 5\n0 4\n4 2\n4 1\n3 -1\n-2 4\n''') == '12.50000000'\n'''\n"
    },
    {
        "number": 3098,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 3\n0 0\n1 1\n2 1\n1 0''') == '0.50000000'\nassert solution('''4 3\n0 0\n1 1\n2 1\n1 0''') == '12.50000000'\nassert solution('''4 3\n0 0\n1 1\n2 1\n1 0''') == '12.50000000'\nassert solution('''4 2\n0 0\n1 1\n2 1\n1 0''') == '0.50000000'\nassert solution('''4 2\n0 0\n0 1\n1 1\n1 0''') == '0.50000000'\n"
    },
    {
        "number": 3098,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3098,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''4 3\n0 0\n1 1\n2 1\n1 0'''\n) == '0.50000000'\n\nassert solution(\n'''5 5\n0 4\n4 2\n4 1\n3 -1\n-2 4'''\n) == '12.50000000'\n\nassert solution(\n'''10 10\n0 0\n0 4\n4 5\n5 -2\n-5 5\n-3 -4\n-1 3\n-4 2\n5 -2\n4 3'''\n) == '12.10000000'\n"
    },
    {
        "number": 3098,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 3\n0 0\n1 1\n2 1\n1 0''') == \"0.50000000\"\nassert solution('''5 5\n0 4\n4 2\n4 1\n3 -1\n-2 4''') == \"12.50000000\"\nassert solution('''4 3\n0 0\n1 1\n2 1\n1 0''') == \"0.50000000\"\nassert solution('''5 5\n0 4\n4 2\n4 1\n3 -1\n-2 4''') == \"12.50000000\"\n'''"
    },
    {
        "number": 3098,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 0\\n1 1\\n2 1\\n1 0') == 0.5\nassert solution('4 3\\n0 0\\n1 1\\n2 1\\n1 0') == 0.5\nassert solution('5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\\n') == 12.5\n\"\"\"\n"
    },
    {
        "number": 3098,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3098,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    '4 3\\n0 0\\n1 1\\n2 1\\n1 0\\n'\n    ) == '0.50000000'\n\nassert solution(\n    '5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\\n'\n    ) == '12.50000000'"
    },
    {
        "number": 3098,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 3\n0 0\n1 1\n2 1\n1 0''') == '0.50000000'\nassert solution('''5 5\n0 4\n4 2\n4 1\n3 -1\n-2 4''') == '12.50000000''''"
    },
    {
        "number": 3099,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 1 3\n0 1\n1 2\n2 3\n1\n''') == '2'\n\nassert solution('''4 0 4\n0 2\n0 1\n2 1\n2 3\n''') == '1'\n\nassert solution('''4 5 2\n0 3\n1 4\n2 4\n3 4\n2\n4\n''') == '4'\n'''\n"
    },
    {
        "number": 3099,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3\\n0 1\\n1 2\\n2 3\\n1') == 2\nassert solution('1 2 3\\n0 1\\n1 2\\n2 3\\n1\\n2\\n3') == 1\n"
    },
    {
        "number": 3099,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"4 1 3\\n0 1\\n1 2\\n2 3\\n1\\n\"\n) == '2'\n\nassert solution(\n    \"4 1 3\\n0 1\\n1 2\\n2 3\\n1\\n\"\n) == '1'\n\nassert solution(\n    \"4 1 3\\n0 1\\n1 2\\n2 3\\n1\\n\"\n) == '1'\n\nassert solution(\n    \"4 2 3\\n0 1\\n1 2\\n2 3\\n1\\n\"\n) == '1'\n\nassert solution(\n    \"10 10 1\\n9 8\\n8 7\\n7 6\\n6 5\\n5 4\\n4 3\\n3 2\\n2 1\\n1\\n\"\n) == '0'"
    },
    {
        "number": 3099,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3099,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 1 3') == '2'\nassert solution('3 0 4') == '1'\nassert solution('1 2 1') == '0'\nassert solution('1 1 1') == '1'\nassert solution('1 1 3') == '1'\n"
    },
    {
        "number": 3099,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 1 3\n0 1\n1 2\n2 3\n1\n''') == '2'\nassert solution('''4 0 4\n0 2\n0 1\n2 1\n2 3\n''') == '1'\n"
    },
    {
        "number": 3099,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3099,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3099,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == '2'\nassert solution('1 2 3') == '1'\nassert solution('2 2') == '3'\nassert solution('0 1') == '1'\nassert solution('0 1 2') == '0'\n"
    },
    {
        "number": 3099,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 1 3\n0 1\n1 2\n2 3\n1\n''') == '2'\nassert solution('''4 0 4\n0 2\n0 1\n2 1\n2 3\n''') == '1'\nassert solution('''3 4 5\n0 1\n1 2\n2 3\n1\n''') == '3'\nassert solution('''3 2 3\n2 1\n2 3\n''') == '1'\nassert solution('''3 2 4\n2 1\n2 3\n2 4\n''') == '2'\n"
    },
    {
        "number": 3100,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 1') == '6'\nassert solution('2 2 2') == '30'\nassert solution('1 1 1') == '0'\nassert solution('0 0 0') == '0'\nassert solution('1 1 1') == '0'\n"
    },
    {
        "number": 3100,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 1\") == \"6\"\nassert solution(\"2 2 2\") == \"30\"\n\n\"\"\"\n\n\"\"\"\nIf N is the number of boxes of apples, C is the number of boxes of cherries, and M is the number of boxes of mangos,\n\nand A[i] is the type of the ith box:\n\n\"Apple\" if A[i] == 1\n\"Cherry\" if A[i] == 2\n\"Mango\" if A[i] == 3\n\nand A[i+1] is the type of the (i+1)th box:\n\n\"Apple\" if A[i+1] == 1\n\"Cherry\" if A[i+1] == 2\n\"Mango\" if A[i+1] == 3\n\nthen the ith box will eat the (i+1)th box iff A[i] and A[i+1] are different.\n\nIf A[i] and A[i+1] are the same, then the ith box will not eat the (i+1)th box.\n\nReturn the number of ways to pick N boxes of apples, C boxes of cherries, and M boxes of mangos such that the ith box doesn't eat the (i+1)th box.\n\nNote:\n\nThe number of apples, cherries, and mangos each be between 1 and 2000.\nThe number of boxes is a positive integer and fits in a 32 bit integer.\n\"\"\"\n"
    },
    {
        "number": 3100,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 2 2\") == 30\nassert solution(\"5 3 1\") == 120\nassert solution(\"10 10 10\") == 20000000\nassert solution(\"1 2 1\") == 1\nassert solution(\"1 1 1\") == 0\n"
    },
    {
        "number": 3100,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 2 1''') == '6'\nassert solution('''2 2 2''') == '30'"
    },
    {
        "number": 3100,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == 0\nassert solution('0 0 0') == 0\nassert solution('1 2 1') == 1\nassert solution('2 2 2') == 0\nassert solution('1 1 1') == 1\n"
    },
    {
        "number": 3100,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 1') == '6'\nassert solution('2 2 2') == '30'\nprint(solution(stdin))\n"
    },
    {
        "number": 3100,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 1') == '6'\nassert solution('2 2 2') == '30'\nassert solution('1 2 2') == '0'\nassert solution('1 2 1') == '6'\nassert solution('2 1 1') == '0'\n"
    },
    {
        "number": 3100,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 1\") == \"6\"\nassert solution(\"2 2 2\") == \"30\"\nprint(\"Well done! Click on 'Check' to earn sweet rewards!\")\n\"\"\"\n\nfrom fractions import Fraction\n"
    },
    {
        "number": 3100,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 1\") == \"\"\nassert solution(\"1 2 2\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"1 3 1\") == \"\"\n"
    },
    {
        "number": 3100,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == 0\nassert solution(\"1 2 1\") == 6\nassert solution(\"2 2 2\") == 30\nassert solution(\"1 3 1\") == 0\nassert solution(\"2 4 2\") == 60\n"
    },
    {
        "number": 3101,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1 1 1') == 'impossible'\nassert solution('1 2 3') == 'impossible'\nassert solution('3 1 3') == '2021 2020 2020'\nassert solution('1 2 3') == '2021 2020 2020'\n"
    },
    {
        "number": 3101,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1') == 'impossible'\nassert solution('1 2') == 'impossible'\nassert solution('1 2 3') == 'impossible'\nassert solution('1 2 3 4') == 'impossible'\n"
    },
    {
        "number": 3101,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"impossible\"\nprint(\"Success!!!\")\n\"\"\"\n\nn = int(stdin.readline().strip())\nA = [int(x) for x in stdin.readline().strip().split(\" \")]\nB = [x for x in A]\n"
    },
    {
        "number": 3101,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n2020 2020 2020''') == '2021 2020 2020'\nassert solution('''2\n1 9999999''') == 'impossible'\nassert solution('''2\n1 9999999''') == 'impossible'\nassert solution('''2\n1 3 1''') == 'impossible'\nassert solution('''2\n1 5 2''') == 'impossible'\n"
    },
    {
        "number": 3101,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"impossible\"\nassert solution(\"1\") == \"impossible\"\nassert solution(\"1 1\") == \"impossible\"\nassert solution(\"1 1 1\") == \"impossible\"\nassert solution(\"1 9999999\") == \"impossible\"\n"
    },
    {
        "number": 3101,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"impossible\"\nassert solution(\"1\") == \"impossible\"\nassert solution(\"2\") == \"impossible\"\nassert solution(\"3\") == \"impossible\"\n"
    },
    {
        "number": 3101,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') is None\nassert solution('1 2 3 4') == '1 2 4 3'\nassert solution('1 9999999') == '1 9999999'\nassert solution('1 9999999 2 9999999') == '1 9999999 2 9999999'\nassert solution('1 9999999 2 9999999 3 9999999') == '1 9999999 2 9999999 3 9999999'\n"
    },
    {
        "number": 3101,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1,2,3') == 'impossible'\nassert solution('1,2,4') == 'impossible'\nassert solution('1,2,3') == 'impossible'\nassert solution('1,2,4') == 'impossible'\nassert solution('1,3,4') == 'impossible'\n"
    },
    {
        "number": 3101,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n2020 2020 2020\n''') == '2021 2020 2020'\nassert solution('''2\n1 9999999\nSample Output 2:\nimpossible\n''') == 'impossible'\nassert solution('''1\n0\nSample Output 2:\nimpossible\n''') == 'impossible'\nassert solution('''2\n0\n0\nSample Output 2:\nimpossible\n''') == 'impossible'\nassert solution('''4\n0 0 0 0\nSample Output 2:\nimpossible\n''') == 'impossible'\n"
    },
    {
        "number": 3101,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n2020 2020 2020''') == '''2021 2020 2020'''\nassert solution('''2\n1 9999999''') == '''impossible'''\nassert solution('''2\n2020 2020''') == '''impossible'''\nassert solution('''3\n3 1 7''') == '''3 1 7'''\nassert solution('''3\n1 1 1''') == '''impossible'''\n"
    },
    {
        "number": 3102,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 70') == '11'\nassert solution('66 69') == '2'\nassert solution('1 10') == '1'\nassert solution('11 11') == '0'\nassert solution('1 9') == '1'\n"
    },
    {
        "number": 3102,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''30 70''') == '''11'''\nassert solution('''66 69''') == '''2'''\nassert solution('''30 70''') == '''11'''\nassert solution('''36 78''') == '''0'''\nassert solution('''5 6''') == '''1'''\n"
    },
    {
        "number": 3102,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"30 70\") == \"11\"\nassert solution(\"30 70\") == \"11\"\nassert solution(\"50 52\") == \"2\"\nassert solution(\"50 52\") == \"2\"\nassert solution(\"5 15\") == \"0\"\n"
    },
    {
        "number": 3102,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''30 70\n''') == '11', 'Testing for sample case #1'\nassert solution(\n'''60 100\n''') == '2', 'Testing for sample case #2'\nassert solution(\n'''101 000\n''') == '0', 'Testing for sample case #3'\nassert solution(\n'''711 1111\n''') == '0', 'Testing for sample case #4'\nassert solution(\n'''30000 70000\n''') == '0', 'Testing for sample case #5'\n"
    },
    {
        "number": 3102,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('30 70') == '11'\nassert solution('66 69') == '2'\nassert solution('30 70') == '11'\nassert solution('66 69') == '2'\nassert solution('-10') == '-1'\n"
    },
    {
        "number": 3102,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"11\"\n\"\"\"\n"
    },
    {
        "number": 3102,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"11\""
    },
    {
        "number": 3102,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3102,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"30 70\") == \"11\"\nassert solution(\"66 69\") == \"2\"\n"
    },
    {
        "number": 3102,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('30 70') == '11'\nassert solution('66 69') == '2'\nassert solution('100 30') == '4'\nassert solution('40 46') == '3'\nassert solution('23 68') == '1'\n"
    },
    {
        "number": 3103,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 'begin repairs'\nassert solution('1 1 1') == '2'\nassert solution('4 4 4') == '6'\nassert solution('3 3 3') == '10'\nassert solution('2 2 2') == '10'\n"
    },
    {
        "number": 3103,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'begin repairs'\nassert solution(stdin.strip()) == '4'\nassert solution(stdin.strip()) == '4'\nassert solution(stdin.strip()) == '4'\nassert solution(stdin.strip()) == '4'\n"
    },
    {
        "number": 3103,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2 0') == '2'\nassert solution('3 5 1') == '4'\nassert solution('5 2 0') == 'begin repairs'\n\n\"\"\"\n\nY, X, x_init = [int(x) for x in stdin.split()]\nlines = []\nfor _ in range(Y):\n    lines.append(stdin.readline().strip())"
    },
    {
        "number": 3103,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2 0') == '2'\nassert solution('3 5 1') == '4'\nassert solution('4 4 1') == '4'\nassert solution('3 3 2') == '3'\nassert solution('4 3 2') == '3'\n"
    },
    {
        "number": 3103,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 2 0\n>@\n>~''') == '2'\nassert solution('''3 5 1\n>>@<<\n>~#~<\n>>>>~''') == '4'\nassert solution('''3 5 1\n>@\n>~\n>>@<<\n>~#~<\n>>>>~''') == '4'\nassert solution('''3 5 1\n>@\n>~\n>>@<<\n>~#~<\n>>>>~''') == '4'\nassert solution('''3 5 1\n>@\n>~\n>>@<<\n>~#~<\n>>>>~''') == '4'\n"
    },
    {
        "number": 3103,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 1 0\") == \"2\"\nassert solution(\"2 3 1\") == \"2\"\nassert solution(\"1 2 0\") == \"2\"\nassert solution(\"1 2 0\") == \"begin repairs\"\nassert solution(\"1 1 0\") == \"begin repairs\"\n"
    },
    {
        "number": 3103,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == 'begin repairs'\nassert solution('>@<') == '4'\nassert solution('^>~<~') == '4'\nassert solution('^>~~<~') == '4'\nassert solution('^>~~~<~') == '4'\n"
    },
    {
        "number": 3103,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2 0') == '2'\nassert solution('3 5 1') == '4'\nassert solution('2 2 0') == '2'\nassert solution('3 5 1') == '4'\nassert solution('2 2 0') == '2'\n"
    },
    {
        "number": 3103,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"begin repairs\""
    },
    {
        "number": 3103,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == \"begin repairs\"\n"
    },
    {
        "number": 3104,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\"\nprint(\"All set? Click 'Check' to earn cool rewards!\")\n\n--------------------------------------------------------"
    },
    {
        "number": 3104,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\"\nprint(\"Tests passed\")\n"
    },
    {
        "number": 3104,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('143175=120') == '14+31+75=120'\nassert solution('5025=30') == '5+025=30'\n"
    },
    {
        "number": 3104,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('143175=120') == '14+31+75=120'\nassert solution('5025=30') == '5+025=30'\nassert solution('2000=2000') == '2000=2000'\nassert solution('9000=10000') == '9+00+0=10000'\nassert solution('5050=5050') == '5+050=5050'\n"
    },
    {
        "number": 3104,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('143175=120') == '14+31+75=120'\nassert solution('5025=30') == '5+025=30'\nprint(solution(stdin))\n"
    },
    {
        "number": 3104,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\"\n\"\"\"\n\n\"\"\"\n[14+31+75=120][5+025=30]\n[144143][52452]\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 3104,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('143175=120') == '14+31+75=120'\nassert solution('5025=30') == '5+025=30'\n"
    },
    {
        "number": 3104,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    '143175=120'\n) == '14+31+75=120'\nassert solution(\n    '5025=30'\n) == '5+025=30'"
    },
    {
        "number": 3104,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\"\nassert solution(\"1415=20\") == \"14+15=20\"\nassert solution(\"789123=456\") == \"7+89+1+2+3=456\"\nassert solution(\"2456=2359\") == \"24+56=2359\"\n"
    },
    {
        "number": 3104,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('143175=120') == '14+31+75=120'\nassert solution('5025=30') == '5+025=30'\n"
    },
    {
        "number": 3105,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8') == '-1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8') == '1 2'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8') == '-1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8') == '1 2'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n"
    },
    {
        "number": 3105,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1\n1\n3\n2\n4\n1\n5\n2\n4\n''') == '1 2'\nassert solution('''2\n1\n1\n2\n3\n4\n5\n6\n7\n8\n''') == '-1'\nassert solution('''3\n1\n1\n2\n3\n4\n5\n6\n7\n8\n''') == '1 2'\nassert solution('''4\n1\n1\n1\n1\n2\n3\n4\n5\n6\n7\n8\n''') == '-1'\nassert solution('''4\n1\n2\n1\n1\n1\n2\n3\n4\n5\n6\n7\n8\n''') == '1 2'\n"
    },
    {
        "number": 3105,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3') == '-1'\nassert solution('8') == '1 2'\nassert solution('8') == '1 2'\nassert solution('3') == '-1'\nassert solution('5') == '1 2'\n"
    },
    {
        "number": 3105,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\\n') == '1 2'\nassert solution('8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n1\\n') == '-1'\nassert solution('8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n') == '1 2'\nassert solution('8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n1\\n') == '-1'\nassert solution('8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n1\\n') == '1 2'\n"
    },
    {
        "number": 3105,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\\n') == '1 2\\n'\nassert solution('8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n1\\n') == '-1\\n'\nassert solution('8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n1\\n') == '1 2\\n'\nassert solution('8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n1\\n') == '-1\\n'\nassert solution('8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n1\\n') == '1 2\\n'\n"
    },
    {
        "number": 3105,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"8\"\n\"1\"\n\"3\"\n\"2\"\n\"4\"\n\"1\"\n\"5\"\n\"2\"\n\"4\"\n\"8\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"1\"\n\"2\"\n"
    },
    {
        "number": 3105,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\\n') == '1 2'\nassert solution('3\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\\n') == '-1'\nassert solution('5\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n') == '-1'\nassert solution('10\\n5\\n7\\n8\\n9\\n7\\n9\\n9\\n7\\n9\\n') == '9 7'\nassert solution('10\\n5\\n7\\n8\\n9\\n7\\n9\\n9\\n7\\n9\\n') == '7 7'\n"
    },
    {
        "number": 3105,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1') == '1 2'\nassert solution('2\\n1\\n1\\n1\\n1\\n1\\n1') == '1 2'\nassert solution('2\\n2\\n1\\n1\\n1\\n1\\n1') == '1 2'\nassert solution('2\\n2\\n2\\n1\\n1\\n1\\n1') == '2 1'\nassert solution('2\\n2\\n2\\n2\\n1\\n1\\n1') == '1 2'\n"
    },
    {
        "number": 3105,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10''') == '1 2'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n''') == '1 2'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n"
    },
    {
        "number": 3105,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1 2\"\n"
    },
    {
        "number": 3106,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('1101') == 1\nassert solution('100') == 0\nassert solution('111') == 1\nassert solution('000111') == 1\n"
    },
    {
        "number": 3106,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1101') == 1\nassert solution('0001') == 0\nassert solution('11011') == 2\nassert solution('0') == 0\nassert solution('111') == 3\n"
    },
    {
        "number": 3106,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1') == 0\nassert solution('1101') == 1\nassert solution('01111') == 3\nassert solution('011111') == 4\nassert solution('110101') == 3\n"
    },
    {
        "number": 3106,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1101') == '1'\nassert solution('110110') == '1'\nassert solution('1') == '0'\nassert solution('0000') == '0'\nassert solution('111') == '1'\n"
    },
    {
        "number": 3106,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(1101) == 1\nassert solution('1') == 0\nassert solution('101') == 2\nassert solution('111') == 3\nassert solution('1111') == 4\n"
    },
    {
        "number": 3106,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(1101) == 1\nassert solution('') == 0\nassert solution('1101') == 1\nassert solution('101') == 0\nassert solution('0') == 0\n"
    },
    {
        "number": 3106,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1010\") == 0\nassert solution(\"111\") == 1\nassert solution(\"111\") == 1\nassert solution(\"0011\") == 1\nassert solution(\"1111\") == 3\n"
    },
    {
        "number": 3106,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1101\") == 1\nassert solution(\"101\") == 0\nassert solution(\"1111\") == 3\nassert solution(\"10000\") == 4\nassert solution(\"1111111\") == 5\n"
    },
    {
        "number": 3106,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 0\nassert solution('1101') == 1\nassert solution('0') == 0\nassert solution('1101010101') == 1\nassert solution('11010101011101010101') == 4\n"
    },
    {
        "number": 3106,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1101') == 1\nassert solution('1') == 0\nassert solution('00011101010100101010001011101010111011110101001') == 112\nassert solution('00000000') == 0\nassert solution('0000000000') == 0\n"
    },
    {
        "number": 3107,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\n'''\n\n\nimport sys\nassert sys.version_info >= (3, 9)\n\nimport itertools\n\nSUBJECTS = 3"
    },
    {
        "number": 3107,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3 1\\n1 2\\n2 3\\n3 1\\n') == '1\\n0\\n2'\nassert solution('3 4\\n4 1 6 3 6\\n3 2 4 2 6 5 6 1\\n1 2\\n3 3 1\\n2 3\\n3 1\\n') == '2\\n1\\n1'\nassert solution('2 2\\n4 1 6 3 6\\n7 3 4 2 6 5 6 1\\n1 2\\n1 3\\n2 3\\n2 1\\n') == '3\\n0\\n1'\nassert solution('1 1\\n1 1\\n1 1\\n') == '3\\n0\\n1'\n\"\"\"\nfrom typing import List\nfrom collections import Counter"
    },
    {
        "number": 3107,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3 1\\n1 2\\n2 3\\n3 1\\n1 2\") == \"1\\n0\\n2\"\nassert solution(\"3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3 1\\n1 2\\n2 3\\n3 1\\n1 2\") == \"1\\n0\\n2\"\nassert solution(\"3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3 1\\n1 2\\n2 3\\n3 1\\n1 2\") == \"1\\n0\\n2\"\nassert solution(\"3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3 1\\n1 2\\n2 3\\n3 1\\n1 2\") == \"1\\n0\\n2\"\nassert solution(\"3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3 1\\n1 2\\n2 3\\n3 1\\n1 2\") == \"1\\n0\\n2\"\n"
    },
    {
        "number": 3107,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 2') == '1\\n0'\nassert solution('3 2') == '1\\n0\\n0'\nassert solution('2 2') == '0\\n0'\nassert solution('2 1') == '0\\n0'\nassert solution('1 2') == '0\\n0'\n"
    },
    {
        "number": 3107,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1\n''') == '1\\n0\\n2'\nassert solution('''2 1\n4 1 6 3 6\n7 3 4 2 6 5 6 1\n1 2\n2 3\n3 1\n''') == '3'\nassert solution('''5 2\n4 1 6 3 6\n7 3 4 2 6 5 6 1\n1 2\n2 3\n1 4\n3 4\n2 3\n1 1\n3 2\n1 3\n2 2\n2 1\n''') == '0\\n1'\nassert solution('''3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1\n''') == '1\\n0\\n2'\nassert solution('''2 1\n4 1 6 3 6\n7 3 4 2 6 5 6 1\n1 2\n2 3\n1 4\n3 4\n2 3\n1 1\n3 2\n1 3\n2 2\n2 1\n''') == '3'\n"
    },
    {
        "number": 3107,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 2\\n2 4 3\\n5 4 1 3\\n7 3 2\\n3 1') == '1 0 2'\nassert solution('5 2\\n2 4 3\\n5 4 1 3\\n6 4 2 4 1\\n7 3 2\\n3 1') == '0 2'\nassert solution('5 2\\n2 4 3\\n5 4 1 3\\n6 4 2 4 1\\n7 3 2\\n3 1') == '1 0 2'\nassert solution('6 3\\n3 1 3 1 1\\n1 4 2 2\\n1 3 2 3 2\\n2 1 5 3\\n5 1 2\\n5 2 3\\n2 3 4\\n2 1 1\\n2 4 3') == '0 0 0'\nassert solution('6 3\\n3 1 3 1 1\\n1 4 2 2\\n1 3 2 3 2\\n2 1 5 3\\n5 1 2\\n5 2 3\\n2 3 4\\n2 1 1\\n2 4 3') == '0 0 0'\n"
    },
    {
        "number": 3107,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1\n\"\"\") == \"\"\"1\n0\n2\"\"\"\nassert solution(\n\"\"\"3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1\n\"\"\") == \"\"\"3\n0\n2\"\"\"\nassert solution(\n\"\"\"3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1\n\"\"\") == \"\"\"3\n0\n1\"\"\"\nassert solution(\n\"\"\"4 4\n4 1 6 3 6\n7 3 4 2 6 5 6 1\n1 2\n2 3\n1 3\n2 3\n2 3\n1 3\n\"\"\") == \"\"\"1\n0\n3\n\"\"\"\nassert solution(\n\"\"\"5 5\n4 1 6 3 6\n7 3 4 2 6 5 6 1\n1 2\n2 3\n1 3\n2 3\n2 3\n1 3\n\"\"\") == \"\"\"0\n0\n3\n\"\"\"\n"
    },
    {
        "number": 3107,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n') == \\\n    '4\\n7\\n9\\n12\\n18\\n'\n\nassert solution('4\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n') == \\\n    '6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n"
    },
    {
        "number": 3107,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2\n"
    },
    {
        "number": 3107,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2\\n1 3') == '1'\nassert solution('2 2\\n2 3') == '1'\nassert solution('2 3\\n2 1') == '1'\nassert solution('3 2\\n3 1') == '0'\nassert solution('2 2\\n2 1\\n1 3\\n1 2') == '0'\n"
    },
    {
        "number": 3108,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3108,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4') == '4.000000'\nassert solution('2 4 3 4') == '3.666666'\nassert solution('1 2 3 4') == '4.000000'\nassert solution('1 2 3 4') == '4.000000'\nassert solution('1 2 3 4') == '4.000000'\n"
    },
    {
        "number": 3108,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3108,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 1\n1 2 3 4\n''') == '4.000000'\n\nassert solution('''4 2\n2 4 3 4\n''') == '3.666666'\n\nassert solution('''5 1\n1 2 3 4 5\n''') == '4.000000'\n\nassert solution('''5 2\n1 2 3 4 5\n''') == '3.666666'\n\nassert solution('''6 1\n1 2 3 4 5 6\n''') == '4.000000'"
    },
    {
        "number": 3108,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 3 5 7 9\\n4\\n2 3 4 5 6\") == \"7.000000\"\nassert solution(\"4 2\\n2 4 3 4\\n2 3 4 5 6\") == \"3.666666\"\nprint(\"Passed\")\n"
    },
    {
        "number": 3108,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3108,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == '0.666'\nassert solution(\"1 2\") == '2.00000'\nassert solution(\"2 1\") == '1.66667'\nassert solution(\"3 2\") == '0.0000'\nassert solution(\"2 1 4 3\") == '2.66667'\n"
    },
    {
        "number": 3108,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '3.666666'\n"
    },
    {
        "number": 3108,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == output_a\n\n\"\"\"\"\"\n\n\"\"\""
    },
    {
        "number": 3108,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3109,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 2 5 5\") == \"0.750\"\nassert solution(\"2 2 5 5\") == \"0.750\"\nassert solution(\"2 2 5 5\") == \"0.750\"\nassert solution(\"2 2 5 5\") == \"0.750\"\nassert solution(\"2 2 5 5\") == \"0.750\"\n"
    },
    {
        "number": 3109,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 2 5 5\") == '0.750'\nassert solution(\"2 2 5 5\\n0.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\") == '0.625'\n"
    },
    {
        "number": 3109,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 2 5 5\") == \"0.750\"\nassert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\") == \"0.750\"\nassert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.5\\n1.0 0.0\\n0.0 2.0\") == \"0.625\"\n"
    },
    {
        "number": 3109,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 2 5 5\") == 0.750\nassert solution(\"2 2 5 5\") == 0.625\nassert solution(\"2 2 5 5\") == 0.750\nassert solution(\"2 2 5 5\") == 0.625\nassert solution(\"2 2 5 5\") == 0.750\n"
    },
    {
        "number": 3109,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\"\"\"\n) == \"0.750\"\nassert solution(\n\"\"\"2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\"\"\"\n) == \"0.625\"\nassert solution(\n\"\"\"3 3 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\n1.0 0.0\n0.0 2.0\n1.5 0.0\n0.0 2.0\n2.0 2.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\"\"\"\n) == \"0.50\"\nassert solution(\n\"\"\"3 3 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\n1.0 0.0\n0.0 2.0\n1.5 0.0\n0.0 2.0\n2.0 2.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\"\"\"\n) == \"0.750\"\n\nfrom math import floor\n"
    },
    {
        "number": 3109,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.0 0.0\n0.0 2.0''') == '0.750'\nassert solution(\n'''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0''') == '0.625'\nassert solution(\n'''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n2.0 0.0\n0.0 2.0''') == '0.375'\nassert solution(\n'''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n2.0 0.0\n0.0 2.0''') == '0.125'\nassert solution(\n'''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n2.0 0.0\n0.0 2.0\n3.0 0.0\n0.0 3.0''') == '0.0625'\n"
    },
    {
        "number": 3109,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2 5 5') == '0.750'\nassert solution('2 2 5 5') == '0.750'\nassert solution('2 2 5 5') == '0.750'\nassert solution('2 2 5 5') == '0.750'\nassert solution('2 2 5 5') == '0.750'\n"
    },
    {
        "number": 3109,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    \"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\") == \"0.750\"\nassert solution(\n    \"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\") == \"0.625\"\nassert solution(\n    \"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\") == \"0.750\"\nassert solution(\n    \"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\") == \"0.750\""
    },
    {
        "number": 3109,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\\n\") == \"0.750\"\nassert solution(\n\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\\n\") == \"0.750\"\nassert solution(\n\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\\n\") == \"0.750\"\nassert solution(\n\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\\n\") == \"0.750\"\nassert solution(\n\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\\n\") == \"0.750\"\n"
    },
    {
        "number": 3109,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 3 5 5\") == \"0.750\"\nassert solution(\"1 1 1 1\") == \"0.000\"\nassert solution(\"2 3 5 5\") == \"0.750\"\nassert solution(\"2 3 5 5\") == \"0.750\"\nassert solution(\"2 3 5 5\") == \"0.750\"\n"
    },
    {
        "number": 3110,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(open(\"test_input.txt\")) == open(\"test_output.txt\").read().strip()\nassert solution(open(\"input.txt\")) == open(\"output.txt\").read().strip()\nprint(\"All tests passed successfully.\")"
    },
    {
        "number": 3110,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 4\n2 3 0 7\n0 0 2 1\n0 0 3 0\n''') == '37'\nassert solution('''4 6\n9 9 4 4\n9 8 7 7\n9 7 6 6\n0 0 6 6\n0 0 2 1\n''') == '6'\nassert solution('''2 2\n9 9 0\n9 8 7\n9 7 6\n0 0 6\n0 0 2\n''') == '3'\nassert solution('''5 5\n7 7 0 1 1\n0 0 0 0 4\n7 4 0 0 5\n0 7 0 0 1\n4 5 0 7 0\n0 1 2 1 0\n''') == '3'\nassert solution('''10 10\n9 9 3 8 6 7 7 8 9 9\n8 8 8 8 8 8 8 8 8 8\n8 8 8 8 8 8 8 8 8 8\n8 8 8 8 8 8 8 8 8 8\n8 8 8 8 8 8 8 8 8 8\n8 8 8 8 8 8 8 8 8 8\n8 8 8 8 8 8 8 8 8 8\n8 8 8 8 8 8 8 8 8 8\n''') == '6'\n"
    },
    {
        "number": 3110,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('2 2') == '0'\nassert solution('1 1') == '1'\nassert solution('1 2') == '2'\nassert solution('2 2') == '2'\n"
    },
    {
        "number": 3110,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 4\n1 2 4\n0 3 6\n4 0 3''') == '2'\nassert solution('''3 5\n1 2 4\n0 3 6\n4 0 3\n0 0 2 1\n0 0 3 0\n0 0 3 0''') == '1'\nassert solution('''1 1\n0 0 2 1\n0 0 3 0\n0 0 3 0''') == '1'\nassert solution('''1 2\n0 0 2 1\n0 0 3 0\n0 0 3 0''') == '1'\nassert solution('''1 2\n0 0 2 1\n0 0 3 0\n0 0 3 0''') == '1'\n"
    },
    {
        "number": 3110,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 3\n1 2 4\n0 3 6\n4 0 3''') == '2'\nassert solution('''5 6\n5 1 0 1 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1''') == '33'\nassert solution('''6 3\n0 0 0 0 0 0\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1''') == '96'\nassert solution('''6 6\n5 5 0 0 0 0 0\n5 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0''') == '77'\nassert solution('''8 4\n8 3 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0''') == '100'\n"
    },
    {
        "number": 3110,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1') == '1'\nassert solution('1 2') == '2'\nassert solution('2 2') == '3'\nassert solution('2 2') == '1'\nassert solution('1 3') == '3'\n"
    },
    {
        "number": 3110,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 3\n1 2 4\n0 3 6\n4 0 3''') == '2'\nassert solution('''3 3\n2 3 0 7\n0 0 2 1\n0 0 3 0\n''') == '37'\nassert solution('''3 4\n2 3 0 7\n0 0 2 1\n0 0 3 0\n''') == '37'\nassert solution('''3 4\n2 3 0 7\n0 0 2 1\n0 0 3 0\n''') == '37'\nassert solution('''3 4\n2 3 0 7\n0 0 2 1\n0 0 3 0\n''') == '37'\n"
    },
    {
        "number": 3110,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n2\") == \"2\"\nassert solution(\"4\\n4\\n2\\n2\") == \"5\"\nassert solution(\"4\\n2\\n2\\n2\") == \"6\"\nassert solution(\"4\\n2\\n2\\n2\\n2\") == \"16\"\nassert solution(\"3\\n3\\n2\\n2\") == \"7\"\n"
    },
    {
        "number": 3110,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(open(\"test_input.txt\", \"r\").read()) == open(\"expected_output.txt\", \"r\").read()\n"
    },
    {
        "number": 3110,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 3\n1 2 4\n0 3 6\n4 0 3''') == '2'\nassert solution('''3 4\n2 3 0 7\n0 0 2 1\n0 0 3 0''') == '37'\n'''\n"
    },
    {
        "number": 3111,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3\n1234\n1 4\n1 4\n1 4\n''') == '10\\n14\\n18\\n'\nassert solution('''4 4\n1234\n1 1\n1 2\n1 3\n1 4\n''') == '1\\n4\\n9\\n16\\n'\nassert solution('''4 4\n123456789\n12345678\n12345\n123\n''') == '1\\n4\\n9\\n16\\n'\n"
    },
    {
        "number": 3111,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 3\n1234\n1 4\n1 4\n1 4\n''') == \"10\\n14\\n18\"\nassert solution('''4 4\n1234\n1 1\n1 2\n1 3\n1 4\n''') == \"1\\n4\\n9\\n16\"\nassert solution('''2 2\n123\n1 1\n''') == \"1\"\nassert solution('''4 4\n1234\n1 1\n1 2\n1 3\n1 4\n''') == \"1\\n4\\n9\\n16\"\n'''\nassert solution('''5 4\n12345\n1 1\n1 2\n1 3\n1 4\n1 5\n''') == \"1\\n4\\n9\\n16\"\n"
    },
    {
        "number": 3111,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 3\n1234\n1 4\n1 4\n1 4\n''') == '1\\n4\\n9\\n16'\n\nassert solution('''4 2\n5 3\n1 5\n1 4\n1 4\n''') == '1\\n4\\n10\\n15'\n\nassert solution('''5 3\n12345\n1 2\n1 4\n1 4\n1 4\n''') == '1\\n2\\n3\\n4\\n5'\n"
    },
    {
        "number": 3111,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\\n\") == \"10\\n14\\n18\"\nassert solution(\"2 3\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\\n\") == \"1\\n4\\n9\\n16\"\n"
    },
    {
        "number": 3111,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 3\n1234\n1 4\n1 4\n1 4\n''') == '10\\n14\\n18\\n'\nassert solution('''4 4\n1234\n1 1\n1 2\n1 3\n1 4\n''') == '1\\n4\\n9\\n16\\n'\nassert solution('''4 10\n1234\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n''') == '1\\n4\\n9\\n16\\n25\\n36\\n49\\n64\\n81\\n100\\n'\nassert solution('''4 100\n1234\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n1 30\n1 31\n1 32\n1 33\n1 34\n1 35\n1 36\n1 37\n1 38\n1 39\n1 40\n1 41\n1 42\n1 43\n1 44\n1 45\n1 46\n1 47\n1 48\n1 49\n1 50\n1 51\n1 52\n1 53\n1 54\n1 55\n1 56\n1 57\n1 58\n1 59\n1 60\n1 61\n1 62\n1 63\n1 64\n1 65\n1 66\n1 67\n1 68\n1 69\n1 70\n1 71\n1 72\n1 73\n1 74\n1 75\n1 76\n1 77\n1 78\n1 79\n1 80\n1 81\n1 82\n1 83\n1 84\n1 85\n1 86\n1 87\n1 88\n1 89\n1 90\n1 91\n1 92\n1 93\n1 94\n1 95\n1 96\n1 97\n1 98\n1 99\n1 100\n1 101\n1 102\n1 103\n1 104\n1 105\n1 106\n1 107\n1 108\n1 109\n1 110\n1 111\n1 112\n1 113\n1 114\n1 115\n1 116\n1 117\n1 118\n1 119\n1 120\n1 121\n1 122\n1 123\n1 124\n1 125\n1 126\n1 127\n1 128\n1 129\n1 130\n1 131\n1 132\n1 133\n1 134\n1 135\n1 136\n1 137\n1 138\n1 139\n1 140\n1 141\n1 142\n1 143\n1 144\n1 145\n1 146\n1 147\n1 148\n1 149\n1 150\n1 151\n1 152\n1 153\n1 154\n1 155\n1 156\n1 157\n1 158\n1 159\n1 160\n1 161\n1 162\n1 163\n1 164\n1 165\n1 166\n1 167\n1 168\n1 169\n1 170\n1 171\n1 172\n1 173\n1 174\n1 175\n1 176\n1 177\n1 178\n1 179\n1 180\n1 181\n1 182\n1 183\n1 184\n1 185\n1 186\n1 187\n1 188\n1 189\n1 190\n1 191\n1 192\n1 193\n1 194\n1 195\n1 196\n1 197\n1 198\n1 199\n1 200\n1 201\n1 202\n1 203\n1 204\n1 205\n1 206\n1 207\n1 208\n1 209\n1 210\n1 211\n1 212\n1 213\n1 214\n1 215\n1 216\n1 217\n1 218\n1 219\n1 220\n1 221\n1 222\n1 223\n1 224\n1 225\n1 226\n1 227\n1 228\n1 229\n1 230\n1 231\n1 232\n1 233\n1 234\n1 235\n1 236\n1 237\n1 238\n1 239\n1 240\n1 241\n1 242\n1 243\n1 244\n1 245\n1 246\n1 247\n1 248\n1 249\n1 250\n1 251\n1 252\n1 253\n1 254\n1 255\n1 256\n1 257\n1 258\n1 259\n1 260\n1 261\n1 262\n1 263\n1 264\n1 265\n1 266\n1 267\n1 268\n1 269\n1 270\n1 271\n1 272\n1 273\n1 274\n1 275\n1 276\n1 277\n1 278\n1 279\n1 280\n1 281\n1 282\n1 283\n1 284\n1 285\n1 286\n1 287\n1 288\n1 289\n1 290\n1 291\n1 292\n1 293\n1 294\n1 295\n1 296\n1 297\n1 298\n1 299\n1 300\n1 301\n1 302\n1 303\n1 304\n1 305\n1 306\n1 307\n1 308\n1 309\n1 310\n1 311\n1 312\n1 313\n1 314\n1 315\n1 316\n1 317\n1 318\n1 319\n1 320\n1 321\n1 322\n1 323\n1 324\n1 325\n1 326\n1 327\n1 328\n1 329\n1 330\n1 331\n1 332\n1 333\n1 334\n1 335\n1 336\n1 337\n1 338\n1 339\n1 340\n1 341\n1 342\n1 343\n1 344\n1 345\n1 346\n1 347\n1 348\n1 349\n1 350\n1 351\n1 352\n1 353\n1 354\n1 355\n1 356\n1 357\n1 358\n1 359\n1 360\n1 361\n1 362\n1 363\n1 364\n1 365\n1 366\n1 367\n1 368\n1 369\n1 370\n1 371\n1 372\n1 373\n1 374\n1 375\n1 376\n1 377\n1 378\n1 379\n1 380\n1 381\n1 382\n1 383\n1 384\n1 385\n1 386\n1 387\n1 388\n1 389\n1 390\n1 391\n1 392\n1 393\n1 394\n1 395\n1 396\n1 397\n1 398\n1 399\n1 400\n1 401\n1 402\n1 403\n1 404\n1 405\n1 406\n1 407\n1 408\n1 409\n1 410\n1 411\n1 412\n1 413\n1 414\n1 415\n1 416\n1 417\n1 418\n1 419\n1 420\n1 421\n1 422\n1 423\n1 424\n1 425\n1 426\n1 427\n1 428\n1 429\n1 430\n1 431\n1 432\n1 433\n1 434\n1 435\n1 436\n1 437\n1 438\n1 439\n1 440\n1 441"
    },
    {
        "number": 3111,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3111,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(open(\"test_inputs/input1.txt\").read()) == \"10\\n14\\n18\\n\"\nassert solution(open(\"test_inputs/input2.txt\").read()) == \"1\\n4\\n9\\n16\\n\"\nassert solution(open(\"test_inputs/input3.txt\").read()) == \"1\\n4\\n9\\n16\\n\"\n"
    },
    {
        "number": 3111,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n4\\n1\\n1\\n1\\n') == '1\\n4\\n9\\n16'\nassert solution('1\\n4\\n1\\n1\\n1\\n') == '1\\n4\\n9\\n16'\n"
    },
    {
        "number": 3111,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3111,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3112,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 2 3\\n1 3\\n2 3\\n3 4\\n\") == \"2\"\nassert solution(\"5 2 4\\n1 3\\n3 4\\n2 4\\n4 5\\n\") == \"1\"\nassert solution(\"6 2 5\\n1 3\\n3 4\\n4 5\\n5 6\\n\") == \"0\"\nassert solution(\"7 2 6\\n1 3\\n3 4\\n4 5\\n5 6\\n6 7\\n\") == \"0\"\nassert solution(\"8 2 7\\n1 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n\") == \"1\"\n"
    },
    {
        "number": 3112,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '[3, 1]'\n\"\"\"\n\nfrom functools import lru_cache"
    },
    {
        "number": 3112,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n4 2 3\n1 3\n2 3\n3 4\n''') == \"2\"\n\nassert solution(\n'''\n5 2 4\n1 3\n3 4\n2 4\n4 5\n''') == \"1\"\n\nassert solution(\n'''\n4 1 2\n1 3\n2 3\n3 4\n''') == \"1\"\n\nassert solution(\n'''\n5 3 3\n1 2\n2 3\n3 4\n4 5\n''') == \"3\"\n\nassert solution(\n'''\n4 2 4\n1 3\n2 3\n3 4\n''') == \"2\""
    },
    {
        "number": 3112,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == str(2)\nprint('Passed')\n"
    },
    {
        "number": 3112,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 2 3\n1 3\n2 3\n3 4''') == '2'\nassert solution('''5 2 4\n1 3\n3 4\n2 4\n4 5''') == '1'\nassert solution('''5 3 4\n1 3\n3 4\n2 4\n4 5''') == '2'\nassert solution('''5 4 4\n1 3\n3 4\n2 4\n4 5''') == '1'\nassert solution('''5 4 4\n1 3\n1 3\n2 4\n4 5''') == '2'\n"
    },
    {
        "number": 3112,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 2 3\n1 3\n2 3\n3 4\n''') == '2'\nassert solution('''5 2 4\n1 3\n3 4\n2 4\n4 5\n''') == '1'\nassert solution('''5 2 4\n1 3\n1 4\n2 3\n3 4\n''') == '0'\nassert solution('''5 2 4\n1 3\n3 4\n4 5\n1 4\n''') == '2'\nassert solution('''5 2 4\n1 3\n1 4\n2 3\n2 4\n''') == '1'\n"
    },
    {
        "number": 3112,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 2 3\n1 3\n2 3\n3 4''') == '2'\nassert solution('''5 2 4\n1 3\n3 4\n2 4\n4 5''') == '1'\nassert solution('''2 4 4\n1 2\n1 3\n2 3\n2 4\n3 4\n3 2\n3 5\n4 5\n4 3\n5 2''') == '0'\nassert solution('''4 2 1\n1 2\n1 3\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n20 21\n21 22\n22 23\n23 24\n24 25\n25 26\n26 27\n27 28\n28 29\n29 30\n30 31\n31 32\n32 33\n33 34\n34 35\n35 36\n36 37\n37 38\n38 39\n39 40\n40 41\n41 42\n42 43\n43 44\n44 45\n45 46\n46 47\n47 48\n48 49\n49 50\n50 51\n51 52\n52 53\n53 54\n54 55\n55 56\n56 57\n57 58\n58 59\n59 60\n60 61\n61 62\n62 63\n63 64\n64 65\n65 66\n66 67\n67 68\n68 69\n69 70\n70 71\n71 72\n72 73\n73 74\n74 75\n75 76\n76 77\n77 78\n78 79\n79 80\n80 81\n81 82\n82 83\n83 84\n84 85\n85 86\n86 87\n87 88\n88 89\n89 90\n90 91\n91 92\n92 93\n93 94\n94 95\n95 96\n96 97\n97 98\n98 99\n99 100\n100 101\n101 102\n102 103\n103 104\n104 105\n105 106\n106 107\n107 108\n108 109\n109 110\n110 111\n111 112\n112 113\n113 114\n114 115\n115 116\n116 117\n117 118\n118 119\n119 120\n120 121\n121 122\n122 123\n123 124\n124 125\n125 126\n126 127\n127 128\n128 129\n129 130\n130 131\n131 132\n132 133\n133 134\n134 135\n135 136\n136 137\n137 138\n138 139\n139 140\n140 141\n141 142\n142 143\n143 144\n144 145\n145 146\n146 147\n147 148\n148 149\n149 150\n150 151\n151 152\n152 153\n153 154\n155 156\n157 157\n157 158\n158 159\n159 160\n160 161\n161 162\n163 164\n165 166\n167 168\n169 170\n171 172\n173 174\n175 176\n177 178\n179 180\n181 181\n182 182\n183 184\n185 186\n187 188\n189 190\n191 192\n193 194\n195 196\n197 198\n199 200\n201 202\n203 204\n205 206\n207 208\n209 210\n211 212\n213 214\n215 216\n217 218\n219 220\n221 222\n223 224\n225 226\n227 228\n229 230\n231 232\n233 234\n235 236\n237 238\n239 240\n241 242\n243 244\n245 246\n247 248\n249 250\n251 252\n253 254\n255 256\n257 258\n259 260\n261 262\n263 264\n265 266\n267 268\n269 270\n271 272\n273 274\n275 276\n277 278\n279 280\n281 282\n283 284\n285 286\n287 288\n289 290\n291 292\n293 294\n295 296\n297 298\n299 300\n301 302\n303 304\n305 306\n307 308\n309 310\n311 312\n313 314\n315 316\n317 318\n319 320\n321 322\n323 324\n325 326\n327 328\n329 330\n331 332\n333 334\n335 336\n337 338\n339 340\n341 342\n343 344\n345 346\n347 348\n349 350\n351 352\n353 354\n355 356\n357 358\n359 360\n361 362\n363 364\n365 366\n367 368\n369 370\n371 372\n373 374\n375 376\n377 378\n379 380\n381 382\n383 384\n385 386\n387 388\n389 390\n391 392\n393 394\n395 396\n397 398\n399 400\n401 402\n403 404\n405 406\n407 408\n409 410\n411 412\n413 414\n415 416\n417 418\n419"
    },
    {
        "number": 3112,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '2'\n\"\"\"\n\nfrom collections import defaultdict\nfrom typing import Dict, List\n\nimport sys\n"
    },
    {
        "number": 3112,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\\n1 3\\n2 3\\n3 4\") == \"2\"\nassert solution(\"4 2 3\\n1 3\\n2 3\\n3 4\") == \"1\"\nassert solution(\"5 2 4\\n1 3\\n3 4\\n2 4\\n4 5\") == \"1\"\nassert solution(\"7 2 4\\n1 3\\n3 4\\n2 4\\n4 5\\n5 6\\n6 7\") == \"1\"\nassert solution(\"8 2 4\\n1 3\\n3 4\\n2 4\\n4 5\\n5 6\\n6 7\\n7 8\") == \"0\"\n"
    },
    {
        "number": 3112,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\n"
    },
    {
        "number": 3113,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0''') == 'no'\nassert solution('''1\n9996 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1''') == 'yes'\nassert solution('''1\n9996 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1''') == 'no'\nassert solution('''1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1''') == 'yes'\nassert solution('''1\n9999 0 10000 0 0 1\n2\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1''') == 'no'\n'''"
    },
    {
        "number": 3113,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'yes'\n"
    },
    {
        "number": 3113,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3113,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''1\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0\n''') == 'yes'\nassert solution(\n'''2\n9996 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\nSample Output 2:\nno\n''') == 'yes'\nassert solution(\n'''1\n9194 61875 0 6849 133372 0 9699 48985\n0 0 0 50 30 1309975 0 9699 48985\n-30 -90 990 -71917 0 -9699 -48985\n-30 -36 942539 0 9799 -48985\n-20 -90 990 -71917 0 -9699 -48985\n-30 -36 942539 0 9799 -48985\n-20 -36 -27 71917 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36 -27 -7719 17 -9699 -48985\n-20 -36"
    },
    {
        "number": 3113,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin.split('\\n')[0]\n"
    },
    {
        "number": 3113,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0\n''') == 'no'\nassert solution('''1\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0\n''') == 'yes'\nassert solution('''1\n9996 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\n''') == 'no'\nassert solution('''1\n9996 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\n''') == 'yes'\nassert solution('''1\n0 0 0 1000 1000 0\n9999 0 10000 0 0 1\n2\n0 0 0 1000 1000 0\n''') == 'yes'\n"
    },
    {
        "number": 3113,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\\n\"\n) == \"yes\"\nassert solution(\n    \"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\\n\"\n) == \"no\"\nassert solution(\n    \"3\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\\n\"\n) == \"yes\"\nassert solution(\n    \"4\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\\n0 0 0 1000 1000 0\\n\"\n) == \"no\"\nassert solution(\n    \"4\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\\n999 0 0 1000 1000 0\\n\"\n) == \"no\"\n"
    },
    {
        "number": 3113,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n1\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0\n''') == 'yes'\nassert solution(\n'''\n2\n9996 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\n''') == 'no'\nassert solution(\n'''\n2\n9996 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\n''') == 'no'\nassert solution(\n'''\n3\n9996 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\n''') == 'yes'\nassert solution(\n'''\n4\n9996 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\n''') == 'no'\n"
    },
    {
        "number": 3113,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3113,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3114,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") is None\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\") == \"NO\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\") == \"NO\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\") == \"NO\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"NO\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 3\\n1 2\\n2 3\\n1 3\") == \"YES\\n1 3\\n2 1\\n3 2\"\nassert solution(\"2 2\\n1 2\") == \"NO\"\nassert solution(\"3 3\\n1 2\\n2 3\\n1 3\") == \"YES\\n1 3\\n2 1\\n3 2\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\") == \"NO\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n2 3\\n1 3\\n\") == \"YES\\n1 3\\n2 1\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"NO\"\nassert solution(\"2 2\\n1 2\\n\") == \"YES\\n1 1\"\nassert solution(\"3 3\\n1 2\\n2 3\\n1 3\\n\") == \"NO\"\nassert solution(\"5 3\\n1 2\\n2 3\\n2 4\\n3 4\\n\") == \"NO\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n4') == 'NO'\nassert solution('2\\n4\\n2 3\\n1 3\\n1 4\\n1 2\\n2 4\\n1 4') == 'YES'\nassert solution('4\\n4\\n2 3\\n1 3\\n1 4\\n1 2\\n2 4\\n1 4') == 'NO'\nassert solution('3\\n3\\n1 2\\n2 3\\n1 3\\n1 2\\n1 3') == 'NO'\nassert solution('3\\n3\\n1 2\\n2 3\\n1 3\\n1 2\\n2 3') == 'YES'\n"
    },
    {
        "number": 3114,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 3\\n1 2\\n2 3\\n1 3\\n') == 'YES'\nassert solution('4 3\\n1 2\\n1 3\\n1 4\\n') == 'NO'\nassert solution('5 2\\n1 2\\n2 3\\n1 3\\n') == 'NO'\nassert solution('5 2\\n1 2\\n1 3\\n1 4\\n1 5\\n') == 'NO'\nassert solution('5 3\\n1 2\\n2 3\\n1 3\\n') == 'NO'\n"
    },
    {
        "number": 3114,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''3 3\n1 2\n2 3\n1 3''') == 'YES'\nassert solution(\n'''4 3\n1 2\n1 3\n1 4\n2 3''') == 'NO'\nassert solution(\n'''1 1\n1 2''') == 'YES'\nassert solution(\n'''2 1\n2 2''') == 'NO'\nassert solution(\n'''1 1\n2 1\n3 1''') == 'YES'\n"
    },
    {
        "number": 3114,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 3\n1 2\n2 3\n1 3\n''') == 'YES'\nassert solution('''4 3\n1 2\n1 3\n1 4\n2 3\n2 4\n''') == 'NO'\nassert solution('''4 3\n1 2\n2 3\n1 3\n1 4\n2 4\n''') == 'YES'\nassert solution('''5 4\n1 2\n1 3\n1 4\n1 5\n2 4\n2 5\n3 4\n3 5\n''') == 'YES'\nassert solution('''5 4\n1 2\n1 3\n1 4\n1 5\n2 4\n2 5\n3 4\n3 5\n4 5\n''') == 'NO'\n"
    },
    {
        "number": 3114,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 2\") == \"YES\\n1 3\\n2 1\"\nassert solution(\"2 3\") == \"YES\\n1 3\\n2 1\"\nassert solution(\"3 3\") == \"NO\"\nassert solution(\"1 1\") == \"YES\\n1 1\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 3\\n1 2\\n1 3\\n1 4\\n2 3') == 'YES\\n1 3\\n2 1\\n3 2'\nassert solution('3 2\\n1 2') == 'YES\\n1 2'\nassert solution('3 3\\n1 2\\n2 3') == 'NO'\nassert solution('5 3\\n1 2\\n1 3\\n1 4\\n1 5\\n2 3') == 'NO'\nassert solution('5 3\\n1 2\\n1 3\\n2 3\\n2 4\\n2 5\\n3 4') == 'NO'\n"
    },
    {
        "number": 3114,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n2\") == \"NO\"\nassert solution(\"1\\n2\\n2\") == \"YES\"\nassert solution(\"1\\n2\\n2\\n2\") == \"NO\"\nassert solution(\"1\\n2\\n2\\n3\") == \"NO\"\n"
    },
    {
        "number": 3115,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0 0\") == \"consistent\"\nassert solution(\"3 3\") == \"inconsistent\"\nassert solution(\"1 1\") == \"consistent\"\nassert solution(\"2 1\") == \"consistent\"\nassert solution(\"2 2\") == \"consistent\"\n"
    },
    {
        "number": 3115,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n0 > 1\\n1 = 2\\n0 = 2\") == \"consistent\"\nassert solution(\"5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\") == \"consistent\"\n"
    },
    {
        "number": 3115,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2\\n0 = 1\\n1 = 2\\n') == 'consistent'\nassert solution('2 2\\n0 > 1\\n1 = 2\\n') == 'inconsistent'\nassert solution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\\n') == 'consistent'\n"
    },
    {
        "number": 3115,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 3\\n0 > 1\\n1 = 2\\n0 = 2\\n') == 'inconsistent'\nassert solution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\\n') == 'consistent'\nassert solution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 4\\n1 > 4\\n') == 'inconsistent'\nassert solution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\\n') == 'inconsistent'\nassert solution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 4\\n1 > 4\\n') == 'inconsistent'\n"
    },
    {
        "number": 3115,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"consistent\"\n"
    },
    {
        "number": 3115,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n0 > 1\\n1 = 2\\n0 = 2\") == \"inconsistent\"\nassert solution(\"3 3\\n0 > 1\\n1 = 2\\n0 = 3\") == \"consistent\"\nassert solution(\"3 3\\n0 > 1\\n1 = 2\\n2 = 3\") == \"inconsistent\"\nassert solution(\"5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\\n2 > 4\") == \"consistent\"\nassert solution(\"3 3\\n0 > 1\\n1 = 2\\n0 = 3\") == \"inconsistent\"\n"
    },
    {
        "number": 3115,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'consistent'\nassert solution('2 3\\n0 > 1\\n1 = 2\\n0 = 2') == 'consistent'\nassert solution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4') == 'consistent'\nassert solution('3 3\\n0 > 1\\n1 = 2\\n0 = 2') == 'inconsistent'\nassert solution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4') == 'inconsistent'\n"
    },
    {
        "number": 3115,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0\\n1\\n0\\n2\\n0\\n0') == \"inconsistent\"\nassert solution('0\\n2\\n0\\n2\\n0\\n0') == \"consistent\"\nassert solution('1\\n2\\n1\\n2\\n1\\n1') == \"consistent\"\nassert solution('1\\n2\\n1\\n2\\n1\\n0') == \"inconsistent\"\nassert solution('0\\n0\\n2\\n0\\n1\\n1') == \"inconsistent\"\n"
    },
    {
        "number": 3115,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"inconsistent\"\nassert solution(\"1 1\") == \"consistent\"\nassert solution(\"2 2\") == \"inconsistent\"\nassert solution(\"1 1\") == \"consistent\"\nassert solution(\"1 1\") == \"consistent\"\n"
    },
    {
        "number": 3115,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 3\n0 > 1\n1 = 2\n0 = 2\n''') == 'inconsistent'\nassert solution('''3 3\n1 = 2\n0 > 1\n1 = 2\n0 = 2\n''') == 'consistent'\nassert solution('''5 5\n0 = 1\n1 = 2\n3 = 4\n0 > 3\n1 > 4\n''') == 'consistent'\nassert solution('''5 5\n0 = 1\n1 = 2\n0 = 1\n0 > 1\n1 > 2\n''') == 'inconsistent'\nassert solution('''5 5\n0 = 1\n1 = 2\n1 = 3\n3 = 4\n0 > 3\n1 > 4\n''') == 'consistent'\n"
    },
    {
        "number": 3116,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 0 0\n1 1 0\n0 0 0\n0 0 1''') == '1.57079633'\nassert solution('''4\n-100 0 0\n10 0 10\n-10 -10 -10\n0 0 0''') == '41938.65135885'\nassert solution('''4\n1 0 0\n1 1 0\n1 1 0\n0 0 0''') == '1.57079633'\nassert solution('''4\n-1 0 0\n0 0 0\n0 0 1\n0 0 -1''') == '0.97067163'\nassert solution('''4\n1 1 1\n0 0 0\n1 0 0\n0 1 0''') == '1.57079633'\n"
    },
    {
        "number": 3116,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n1 0 0\n1 1 0\n0 0 0\n0 0 1''') == '1.57079633'\nassert solution('''4\n-100 0 0\n10 0 10\n-10 -10 -10\n0 0 0\nSample Output 2:\n41938.65135885\n''') == '41938.65135885'\nassert solution('''6\n1 1 2\n2 3 1\n2 2 1\n2 3 1\n2 3 1\n4 4 3\nSample Output 3:\n0.82889797499999\n''') == '0.82889797499999'\nassert solution('''6\n3 1 1\n2 2 1\n2 3 1\n2 3 1\n2 3 1\n4 4 3\nSample Output 4:\n0.82889797499999\n''') == '0.82889797499999'\nassert solution('''6\n3 -1 1\n2 2 1\n2 3 1\n2 3 1\n2 3 1\n4 4 3\nSample Output 5:\n0.053912811955940246\n''') == '0.053912811955940246'\n"
    },
    {
        "number": 3116,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1 2 3\\n-1 -2 -3\\n0 0 0\\n0 0 1') == '1.57079633'\nassert solution('2\\n-100 0 0\\n10 0 10\\n-10 -10 -10') == '41938.65135885'\nassert solution('3\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0') == '0.00000000'\nassert solution('4\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0\\n0 0 1') == '1.57079633'\nassert solution('5\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0\\n0 0 1\\n0 0 -1') == '1.57079633'\n"
    },
    {
        "number": 3116,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1.57079633\"\n\nprint(\"All tests passed successfully.\")"
    },
    {
        "number": 3116,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n1 0 0\n1 1 0\n0 0 0\n0 0 1''') == \"1.57079633\"\nassert solution('''4\n-100 0 0\n10 0 10\n-10 -10 -10\n0 0 0\nSample Output 2:\n41938.65135885''') == \"41938.65135885\"\n"
    },
    {
        "number": 3116,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n4\n-100 0 0\n10 0 10\n-10 -10 -10\n0 0 0\n''') == '1.57079633'\n'''\nimport sys"
    },
    {
        "number": 3116,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1 0 0\\n0 0 0\\n0 0 1') == '1.57079633'\nassert solution('2\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0\\n0 0 1\\n0 0 -10') == '41938.65135885'\nassert solution('3\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0\\n0 0 1\\n0 0 -10\\n0 -10 0') == '1.57079633'\nassert solution('4\\n1 0 0\\n0 0 0\\n0 0 1\\n0 0 -10\\n-10 0 0\\n0 0 -10\\n0 0 1') == '3.14159265'\nassert solution('5\\n1 0 0\\n0 0 0\\n0 0 1\\n0 0 -10\\n-10 0 0\\n0 0 -10\\n0 0 1\\n0 0 1') == '3.14159265'\n"
    },
    {
        "number": 3116,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''4\n1 0 0\n1 1 0\n0 0 0\n0 0 1''') == '1.57079633'\n\nassert solution(\n'''8\n-100 0 0\n10 0 10\n-10 -10 -10\n0 0 0\n1 1 1\n1 1 -1\n1 -1 1\n1 -1 -1''') == '4.8054884'\n\nassert solution(\n'''5\n1 1 1 1 1\n1 -1 -1 -1\n1 1 1 -1\n-1 -1 -1 1\n1 1 1 1''') == '0.262459'\n"
    },
    {
        "number": 3116,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 0 0\\n1 1 0\\n0 0 0\\n0 0 1') == '1.57079633'\nassert solution('-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0\\n0 0 1') == '41938.65135885'\n\"\"\"\n"
    },
    {
        "number": 3116,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 0 0\\n1 1 0\\n0 0 0\\n0 0 1') == '1.57079633'\nassert solution('0 0 0\\n1 1 0\\n-10 -10 -10\\n0 0 0') == '41938.65135885'\nassert solution('0 0 0\\n0 0 0\\n0 0 0') == '0.0'\nassert solution('0 0 0\\n0 0 0\\n0 0 0') == '0.0'\nassert solution('0 0 0\\n0 0 0\\n0 0 0') == '0.0'\n"
    },
    {
        "number": 3117,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('11\\nsabcabcfabc') == '3'\nassert solution('18\\ntrutrutiktiktappop') == '4'\n\n\"\"\""
    },
    {
        "number": 3117,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == \"3\"\nassert solution(sample_input_2) == \"4\"\n"
    },
    {
        "number": 3117,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    11\n    sabcabcfabc\n    \"\"\") == '3'\n"
    },
    {
        "number": 3117,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('abcabc') == 0\nassert solution('abccc') == 3\nassert solution('abccc') == 3\nassert solution('abcabc') == 3\nassert solution('abcabc') == 3\n"
    },
    {
        "number": 3117,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"4\"\n\n'''\n"
    },
    {
        "number": 3117,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('abcd') == 0\nassert solution('ac') == 1\nassert solution('abcd') == 2\nassert solution('abcd') == 2\nassert solution('abc') == 2\n"
    },
    {
        "number": 3117,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    '11\\nsabcabcfabc'\n    '18\\ntrutrutiktiktappop') == '3'\nassert solution(\n    '11\\ntrutrutiktiktappop'\n    '18\\nsabcabcfabc') == '4'\n"
    },
    {
        "number": 3117,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'trutrutiktiktappop'\nassert solution(stdin) == 'abc'\nassert solution(stdin) == 'abc'\nassert solution(stdin) == 'abc'\nassert solution(stdin) == 'abc'\n"
    },
    {
        "number": 3117,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('11\\nsabcabcfabc') == 3\nassert solution('18\\ntruutrutiktiktappop') == 4\nassert solution('3\\nabcef') == 3\nassert solution('5\\nabcd') == 0\nassert solution('2\\nba') == 0\n"
    },
    {
        "number": 3117,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('11') == 3\nassert solution('abcabcfabc') == 3\nassert solution('trutrutiktiktappop') == 4\nassert solution('trutrutiktiktappopp') == 4\nassert solution('trutrutiktiktappopppp') == 4\n"
    },
    {
        "number": 3118,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n2 3 1''') == '2'\nassert solution('''3\n3 1 2\n3 1 2''') == '5'\nassert solution('''6\n5 1 6 3 2 4\n4 6 5 1 3 2''') == '5'\nassert solution('''3\n5 1 6 3 2 4\n1 2 3 4 5 6''') == '5'\nassert solution('''3\n5 1 6 3 2 4\n1 1 1 1 1 1''') == '1'\n"
    },
    {
        "number": 3118,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('inputs/input17.txt') == '5'\n'''\n'''\n"
    },
    {
        "number": 3118,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1\\n') == '2'\nassert solution('1\\n1\\n1\\n2\\n2\\n2\\n3\\n3\\n3\\n') == '12'\nassert solution('1\\n1\\n1\\n2\\n2\\n2\\n3\\n3\\n3\\n4\\n4\\n4\\n5\\n5\\n5\\n') == '109'\nassert solution('1\\n1\\n1\\n2\\n2\\n2\\n3\\n3\\n3\\n4\\n4\\n4\\n5\\n5\\n5\\n6\\n6\\n6\\n') == '12'\nassert solution('1\\n1\\n1\\n2\\n2\\n2\\n3\\n3\\n3\\n4\\n4\\n4\\n5\\n5\\n5\\n6\\n6\\n6\\n7\\n7\\n7\\n8\\n8\\n8\\n9\\n9\\n9\\n') == '12'\n"
    },
    {
        "number": 3118,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n2 3 1\\n3 1 2\\n') == '2'\nassert solution('3\\n3 1 2\\n3 1 2\\n') == '5'\nassert solution('6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\\n') == '5'\nassert solution('10\\n1 1 3 1 4 1 5 1 6 1 7 1 8 1 9 1 10\\n10 1 8 1 7 1 6 1 5 1 4 1 3 1 2 1\\n') == 'huge'\nassert solution('10\\n1 1 3 1 4 1 5 1 6 1 7 1 8 1 9 1 10\\n10 1 8 1 7 1 6 1 5 1 4 1 3 1 2 1\\n') == 'huge'\n"
    },
    {
        "number": 3118,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n2 3 1\n3 1 2\n''') == '2'\nassert solution('''6\n5 1 6 3 2 4\n4 6 5 1 3 2\n''') == '5'\nassert solution('''100\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\n''') == 'huge'\n'''\n"
    },
    {
        "number": 3118,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n2 3 1\\n3 1 2\\n') == '2'\nassert solution('3\\n3 1 2\\n2 3 1\\n') == '3'\nassert solution('3\\n3 1 2\\n2 3 1\\n') == '2'\nassert solution('3\\n3 1 2\\n2 3 1\\n') == '2'\nassert solution('3\\n3 1 2\\n3 1 2\\n') == '3'\n"
    },
    {
        "number": 3118,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n2 3 1\n3 1 2\n''') == \"2\"\nassert solution('''6\n5 1 6 3 2 4\n4 6 5 1 3 2\n''') == \"5\"\nassert solution('''10\n9 1 2 3 4 5 6 7 8 9 10\n4 5 6 7 8 9 10 1 2 3\n''') == \"7\"\nassert solution('''12\n9 1 2 3 4 5 6 7 8 9 10 11 12\n4 5 6 7 8 9 10 11 12 1 2 3\n''') == \"huge\"\nassert solution('''0\n100\n100\n''') == \"huge\"\n"
    },
    {
        "number": 3118,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n3\\n2 3 1\") == \"2\"\nassert solution(\"2\\n3 1 2\") == \"2\"\nassert solution(\"2\\n1 2\") == \"huge\"\nassert solution(\"2\\n2 1\") == \"huge\"\nassert solution(\"2\\n2 2\") == \"huge\"\n"
    },
    {
        "number": 3118,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n1 3\\n2 3 1\\n3 1 2\\n1 2 3\\n2 3 1') == '2'\nassert solution('3\\n1 3\\n2 3 1\\n3 1 2\\n2 3 1\\n1 3 2\\n1 3 2') == '5'\nassert solution('6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\\n1 3 2 4 6 5\\n3 2 4 1 6 5') == '5'\nassert solution('3\\n1 3\\n2 3 1\\n3 1 2\\n3 2 1\\n1 3 2') == '4'\nassert solution('6\\n1 3 4 2 5 6\\n2 5 3 4 6 1\\n6 1 2 3 4 5\\n5 6 1 2 3 4') == '6'\n"
    },
    {
        "number": 3118,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n2 3 1\n3 1 2\n''') == '2'\nassert solution('''6\n5 1 6 3 2 4\n4 6 5 1 3 2\n''') == '5'\nassert solution('''12\n1\n1 2 1 3 2 3 3\n1 1 1 1 1 1 1 1\n''') == 'huge'\nassert solution('''8\n5 1 4 2 3 3 4 1\n1 1 1 1 1 1 1 1\n''') == '6'\nassert solution('''32\n1\n
    },
    {
        "number": 3119,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 1\\n0 10 20\\n0 10') == '4'\nassert solution('6 1\\n0 10 20 26 40 50\\n0 40') == '9'\nassert solution('4 1\\n0 10 2 5\\n0 20') == '5'\nassert solution('4 1\\n0 10 2 5\\n0 20') == '5'\nassert solution('5 1\\n0 10 2 5 6 7\\n0 30') == '6'\n"
    },
    {
        "number": 3119,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0 0\") == \"0\"\nassert solution(\"0 1\") == \"0\"\nassert solution(\"0 0\\n0 1\") == \"0\"\nassert solution(\"0 0\\n0 1\\n0 1\") == \"0\"\nassert solution(\"0 0\\n0 1\\n0 1\\n0 1\") == \"0\"\n"
    },
    {
        "number": 3119,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 1') == '4'\nassert solution('1 0') == '4'\nassert solution('2 2') == '8'\nassert solution('3 1') == '4'\nassert solution('4 2') == '6'\n"
    },
    {
        "number": 3119,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input('')) == output('')\n'''"
    },
    {
        "number": 3119,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 1\\n0 10\\n0 40') == '4'\nassert solution('3 1\\n0 10 20\\n0 40\\n0 70\\n0 100') == '9'\nassert solution('3 1\\n0 10\\n0 40\\n0 70\\n0 100\\n0 120\\n0 130\\n0 140\\n0 150\\n0 160\\n0 170\\n0 180\\n0 190\\n0 200') == '16'\n"
    },
    {
        "number": 3119,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0 10 20\\n0 10\") == \"4\"\nassert solution(\"0 10 20\\n0 40\") == \"9\"\nassert solution(\"0 10 20\\n0 40\\n0 10\\n0 40\") == \"9\"\nassert solution(\"0 10 20\\n0 40\\n0 10\\n0 40\\n0 10\\n0 40\") == \"9\"\nassert solution(\"0 10 20\\n0 40\\n0 10\\n0 40\\n0 10\\n0 40\\n0 10\\n0 40\\n0 10\\n0 40\\n0 10\\n0 40\") == \"9\"\n"
    },
    {
        "number": 3119,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0 5\") == \"4\"\nassert solution(\"1 5\") == \"4\"\nassert solution(\"2 5\") == \"4\"\nassert solution(\"3 5\") == \"4\"\nassert solution(\"4 5\") == \"4\"\n"
    },
    {
        "number": 3119,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3119,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"4\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"3 3\") == \"4\"\nassert solution(\"3 3 3 3\") == \"4\"\nassert solution(\"4 1\") == \"5\"\n"
    },
    {
        "number": 3119,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 10 20\\n0 10\\n0 40') == '4'\nassert solution('0 10 20\\n0 10\\n0 40\\n0 40') == '9'\nassert solution('0 10 20\\n0 10\\n0 40\\n0 40\\n0 40') == '9'\nassert solution('0 10 20\\n0 10\\n0 40\\n0 40\\n0 40\\n0 40') == '9'\nassert solution('0 10 20\\n0 10\\n0 40\\n0 40\\n0 40\\n0 40\\n0 40') == '9'\n"
    },
    {
        "number": 3120,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('concat(shuffle([1,2]),shuffle([1,2]))') == 'equal'\nassert solution('shuffle([1,2,1,2])') == 'not equal'\nassert solution('sorted(concat([3,2,1],[4,5,6]))') == 'equal'\nprint(solution('stdin'))\n\"\"\"\n\nimport sys\nimport math\n\n\nclass Solution:\n    def __init__(self):\n        self.has_run = False\n\n    def is_equal(self, a: str, b: str) -> bool:\n        a = self.get_list(a)\n        b = self.get_list(b)\n        self.has_run = True\n\n        return a == b\n\n    def get_list(self, program: str) -> list:\n        program = program.replace('[', '(').replace(']', ')')\n        program = program.split(' ')\n        out = []\n\n        for token in program:\n            if token.isdigit():\n                out.append(int(token))\n\n        return out\n"
    },
    {
        "number": 3120,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('concat([shuffle([1,2]),shuffle([1,2])],[shuffle([1,2]),shuffle([1,2])])') == 'equal'\nassert solution('shuffle([1,2,1,2])') == 'not equal'\nassert solution('sorted(concat([3,2,1],[4,5,6]))') == 'equal'\nassert solution('sorted(concat([3,2,1],[4,5,6]))') == 'not equal'\nassert solution('sorted(concat([3,2,1],[4,5,6]))') == 'not equal'\n"
    },
    {
        "number": 3120,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('concat(shuffle([1,2]),shuffle([1,2]))') == 'equal'\nassert solution('shuffle([1,2,1,2])') == 'not equal'\n"
    },
    {
        "number": 3120,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('concat(shuffle([1,2]),shuffle([1,2]))') == 'equal'\nassert solution('shuffle([1,2,1,2])') == 'not equal'\nassert solution('sorted(concat([3,2,1],[4,5,6]))') == 'equal'\nassert solution('[1,2,3,4,5,6]') == 'equal'\nassert solution('[3,2,1,4,5,6]') == 'not equal'\n"
    },
    {
        "number": 3120,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('concat(shuffle([1,2]),shuffle([1,2]))') == 'not equal'\nassert solution('shuffle([1,2,1,2])') == 'equal'\nassert solution('sorted(concat([3,2,1],[4,5,6]))') == 'equal'\n\"\"\""
    },
    {
        "number": 3120,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"equal\"\n\"\"\""
    },
    {
        "number": 3120,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\") == \"equal\"\nassert solution(\"shuffle([1,2,1,2])\") == \"not equal\"\n\"\"\"\n\nimport sys\nfrom collections import Counter\n\nclass Solution:\n    def __init__(self):\n        self.A = None\n        self.B = None\n\n    def read_input(self):\n        self.A = [int(x) for x in input().split(\"$\")[1].split(\" \")]\n        self.B = [int(x) for x in input().split(\"$\")[1].split(\" \")]\n\n    def solution(self):\n        a_counter = Counter(self.A)\n        b_counter = Counter(self.B)\n        intersection = a_counter & b_counter\n        union = a_counter | b_counter\n        intersection_size = sum(intersection.values())\n        union_size = sum(union.values())\n        return \"equal\" if intersection_size == union_size else \"not equal\"\n\nSolution().read_input()\nprint(Solution().solution())"
    },
    {
        "number": 3120,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\") == \"equal\"\nassert solution(\"shuffle([1,2,1,2])\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\") == \"equal\"\nassert solution(\"[1,2,3,4,5,6]\") == \"equal\"\nassert solution(\"[2,1,2,3,4,5,6]\") == \"not equal\"\n"
    },
    {
        "number": 3120,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('concat(shuffle([1,2]),shuffle([1,2]))') == 'equal'\nassert solution('shuffle([1,2,1,2])') == 'equal'\nassert solution('sorted(concat([3,2,1],[4,5,6]))') == 'not equal'\n\"\"\"\n\n\nfrom itertools import permutations\n"
    },
    {
        "number": 3120,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('concat(shuffle([1,2]),shuffle([1,2]))') == 'equal'\nassert solution('shuffle([1,2,1,2])') == 'not equal'\nassert solution('sorted(concat([3,2,1],[4,5,6]))') == 'equal'\nassert solution('shuffle([1,2,1,2])') == 'equal'\nassert solution('shuffle([1,2,3,4])') == 'equal'\n"
    },
    {
        "number": 3121,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n') == 'Oh no'\nassert solution('1\\n2\\n1 2 1 2\\n2 3 1 2') == '1'\nassert solution('2\\n3\\n1 2 1 2\\n2 3 1 2') == '3'\nassert solution('1\\n4\\n1 2 1 2\\n2 3 1 2') == '3'\nassert solution('2\\n6\\n1 2 1 2\\n2 3 1 2\\n1 2 1 2') == '6'\n"
    },
    {
        "number": 3121,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 2\n3 2\n1 2 1 2\n2 3 1 2''') == \"Oh no\"\nassert solution('''1 3\n3 2\n1 2 1 2\n2 3 1 2''') == \"1\"\n\n\"\"\""
    },
    {
        "number": 3121,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1\"\n\n'''\n"
    },
    {
        "number": 3121,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 2\n3 2\n1 2 1 2\n2 3 1 2''') == '1'\nassert solution('''3 3\n3 2\n1 2 1 2\n2 3 1 2''') == '1'\nassert solution('''1 3\n3 2\n1 2 1 2\n2 3 1 2''') == '1'\nassert solution('''2 3\n3 2\n1 2 1 2\n2 3 1 2''') == '1'\nassert solution('''2 3\n3 2\n1 2 1 2\n2 3 1 2''') == '1'\n"
    },
    {
        "number": 3121,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"1 2\n3 2\n1 2 1 2\n2 3 1 2\"\"\"\n) == \"1\"\n\nassert solution(\n\"\"\"1 2\n3 2\n1 2 1 2\n2 3 1 2\"\"\"\n) == \"1\"\n"
    },
    {
        "number": 3121,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == \"\" or solution(input) == \"Oh no\"\n"
    },
    {
        "number": 3121,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2') == 'Oh no'\nassert solution('1 3') == '1'\nassert solution('2 3') == '1'\nassert solution('1 3') == '1'\nassert solution('1 2') == 'Oh no'\n"
    },
    {
        "number": 3121,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''1 2\n3 2\n1 2 1 2\n2 3 1 2\n''') == '1'\nassert solution(\n'''1 10\n3 2\n1 2 1 2\n2 3 1 2\n''') == '9'\nassert solution(\n'''1 10\n4 2\n1 2 1 2\n2 3 1 2\n1 3 1 2\n3 2 1 2\n2 3 1 2\n1 3 1 2\n3 2 1 2\n''') == '1'\nassert solution(\n'''1 10\n4 2\n1 2 1 2\n2 3 1 2\n1 3 1 2\n3 2 1 2\n2 3 1 2\n1 3 1 2\n3 2 1 2\n''') == '1'\nassert solution(\n'''1 10\n2 4\n1 2 1 2\n2 3 1 2\n1 3 1 2\n3 2 1 2\n2 3 1 2\n1 3 1 2\n3 2 1 2\n''') == '1'\n"
    },
    {
        "number": 3121,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"1 2\n3 2\n1 2 1 2\n2 3 1 2\"\"\"\n) == \"1\"\nassert solution(\n\"\"\"1 3\n3 2\n1 2 1 2\n2 3 1 2\"\"\"\n) == \"1\"\nassert solution(\n\"\"\"1 3\n3 2\n1 3 3 1\n2 3 1 2\"\"\"\n) == \"3\"\nassert solution(\n\"\"\"1 3\n3 2\n1 2 1 2\n2 3 1 2\"\"\"\n) == \"2\"\nassert solution(\n\"\"\"1 3\n3 2\n1 2 1 2\n2 3 1 2\"\"\"\n) == \"1\"\n"
    },
    {
        "number": 3121,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'Oh no'\n"
    },
    {
        "number": 3122,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"4 4\n1 2 2\n2 3 1\n3 4 1\n4 1 2\n\"\"\") == \"3\"\n\nassert solution(\n    \"\"\"5 5\n1 2 1\n2 3 1\n2 4 1\n2 5 1\n4 5 1\n\"\"\") == \"impossible\"\n\nassert solution(\n    \"\"\"3 3\n1 1 0\n2 1 0\n1 3 1\n\"\"\") == \"impossible\"\n\nassert solution(\n    \"\"\"5 5\n1 2 1\n2 3 1\n2 4 1\n2 5 1\n4 5 1\n\"\"\") == \"impossible\"\n\nassert solution(\n    \"\"\"4 3\n1 2 0\n2 3 0\n1 3 1\n\"\"\") == \"impossible\""
    },
    {
        "number": 3122,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2\\n') == '3'\nassert solution('2 2\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\\n') == 'impossible'\n"
    },
    {
        "number": 3122,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output\n"
    },
    {
        "number": 3122,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1') == '0'\nassert solution('2 2') == '0'\nassert solution('1 1 1') == 'impossible'\nassert solution('1 2 2') == '3'\nassert solution('1 2 2 1') == 'impossible'\n"
    },
    {
        "number": 3122,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 4\n1 2 2\n2 3 1\n3 4 1\n4 1 2\n''') == '3'\nassert solution('''5 5\n1 2 1\n2 3 1\n2 4 1\n2 5 1\n4 5 1\n''') == 'impossible'\nassert solution('''3 3\n1 2 1\n2 3 1\n3 4 1\n4 1 2\n''') == '3'\nassert solution('''3 4\n1 2 1\n2 3 1\n3 4 1\n4 1 2\n''') == 'impossible'\nassert solution('''4 4\n1 2 1\n2 3 1\n2 4 1\n2 5 1\n4 5 1\n''') == '3'\n"
    },
    {
        "number": 3122,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"impossible\"\n"
    },
    {
        "number": 3122,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"impossible\"\n\"\"\""
    },
    {
        "number": 3122,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 4\n1 2 2\n2 3 1\n3 4 1\n4 1 2\n''') == '3'\n\nassert solution('''4 4\n1 2 1\n2 3 1\n3 4 1\n4 1 2\n''') == 'impossible'\n\nassert solution('''5 5\n1 2 1\n2 3 1\n2 4 1\n2 5 1\n4 5 1\n''') == 'impossible'\n'''\n"
    },
    {
        "number": 3122,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4 4\n1 2 2\n2 3 1\n3 4 1\n4 1 2\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n4 4\n1 2 1\n2 3 1\n3 4 1\n4 1 2\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n3 3\n1 2 1\n2 3 1\n2 4 1\n2 5 1\n4 5 1\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n3 3\n1 2 1\n2 3 1\n2 4 1\n2 5 1\n3 1 2\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n3 3\n1 2 1\n2 3 1\n2 4 1\n2 5 1\n3 1 2\n1 2 3\n2 4 3\n2 5 3\n1 4 2\n1 5 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n1 4 2\n1 5 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4 2\n2 4 3\n2 5 3\n3 4 2\n1 4"
    },
    {
        "number": 3122,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n4 4\n1 2 2\n2 3 1\n3 4 1\n4 1 2\n''') == '3'\nassert solution('''\n4 4\n1 2 1\n2 3 1\n2 4 1\n2 5 1\n4 5 1\n''') == 'impossible'\nassert solution('''\n4 4\n1 2 1\n2 3 1\n3 4 1\n4 1 2\n''') == 'impossible'\n"
    },
    {
        "number": 3123,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('22') == '4'\nassert solution('2222') == '2'\nassert solution('222222') == '2'\nassert solution('22222222') == '2'\n"
    },
    {
        "number": 3123,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n1 1 1 1 3\\n') == '2'\nassert solution('2\\n2 2 2 2 2\\n') == '2'\nassert solution('2\\n2 1 1 1 2\\n') == '4'\nassert solution('2\\n1 1 1 2 1 1 1\\n') == '5'\nassert solution('2\\n
    },
    {
        "number": 3123,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('\"ab\"c\"d') == \"ab\"\nassert solution('\"ab\"c\"d\"') == \"ab\"\nassert solution('\"ab\"c\"d\"') == \"ab\"\nassert solution('\"ab\"c\"d\"') == \"ab\"\nassert solution('\"ab\"c\"d\"') == \"ab\"\n"
    },
    {
        "number": 3123,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n2 1 1 1 3') == 2\nassert solution('5\\n2 1 1 1 3') == 2\nassert solution('6\\n2 1 1 1 3') == 3\nassert solution('7\\n2 1 1 1 3') == 4\nassert solution('8\\n2 1 1 1 3') == 4\n"
    },
    {
        "number": 3123,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0') == ''\nassert solution('\"\"') == '\"\"'\nassert solution('\"ab\"\"') == '\"\"'\nassert solution('\"\"ab\"\"') == '\"\"'\nassert solution('\"\\\"\"') == '\"\"'\n"
    },
    {
        "number": 3123,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('12') == '1'\nassert solution('1212') == '2'\nassert solution('123') == '1'\nassert solution('1111') == '1'\nassert solution('22222222222') == '4'\n"
    },
    {
        "number": 3123,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('this is a string') == '1'\nassert solution('\"this is a string\"') == '1'\nassert solution('\"this is a string\"') == '1'\nassert solution('\"this is a string\"') == '1'\nassert solution('\"this is a string\"') == '1'\n"
    },
    {
        "number": 3123,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n2 1 1 1 3') == '2'\nassert solution('5\\n22') == '4'\nassert solution('1\\n22') == '4'\nassert solution('1\\n-12') == ''"
    },
    {
        "number": 3123,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    '''\n    5\n    2 1 1 1 3\n    '''\n    ) == '2'\nassert solution(\n    '''\n    1\n    22\n    '''\n    ) == '4'\n"
    },
    {
        "number": 3123,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 1 1 1 3') == '2'\nassert solution('22') == '4'\nassert solution('2 1 1 1 3') == '2'\nassert solution
    },
    {
        "number": 3124,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n3 1 5\\n') == '3'\nassert solution('4\\n1 2 3 4\\n') == '2'\nassert solution('5\\n1 2 3 4 5\\n') == '1'\nassert solution('6\\n1 2 3 4 5 6\\n') == '3'\nassert solution('7\\n1 2 3 4 5 6 7\\n') == '4'\n"
    },
    {
        "number": 3124,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"\\n1\") == \"1\"\nassert solution(\"\\n1 2\") == \"2\"\nassert solution(\"\\n1 2 3\") == \"2\"\n"
    },
    {
        "number": 3124,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5 1 5\") == \"3\"\nassert solution(\"1 2 3 4\") == \"2\"\n"
    },
    {
        "number": 3124,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('3\\n3 1 5') == '3'\nassert solution('4\\n1 2 3 4') == '2'\n\"\"\"\n\n\nimport sys"
    },
    {
        "number": 3124,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '3'\nassert solution(stdin) == '2'\nassert solution(stdin) == '1'\n\n\"\"\"\n\n\"\"\"\n- If a player has taken a number, the next player will take one of the two adjacent numbers.\n- If a player has taken a number, the next player will take a number adjacent to it.\n- The player who takes the last odd number will win.\n- If there is a tie, the player who is about to take the last odd number will win.\n- The next player may choose to take an even number or an odd number.\n- There is a tie between the two, the player who takes the last even number will win.\n- If there is a tie, the next player may choose to take any number.\n- If there is a tie, the player who takes the last even number will win.\n\"\"\""
    },
    {
        "number": 3124,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1 2') == '2'\nassert solution('3\\n1 2 3') == '1'\nassert solution('4\\n1 2 3 4') == '2'\nassert solution('5\\n1 2 3 4 5') == '3'\n"
    },
    {
        "number": 3124,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n3 1 5\n''') == '3'\nassert solution('''4\n1 2 3 4\n''') == '2'\nassert solution('''10\n31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 31 9 21 4 26 21 319\n''') == '12'\n\nassert solution('''10\n33 9 29 5 19 12 2 22 8 17 21 22 18 2 22 9 26 16 17 22 22 18 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22"
    },
    {
        "number": 3124,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n4\n1 2 3 4\n''') == '2'\nassert solution('''\n5\n1 2 3 4 5\n''') == '1'\nassert solution('''\n6\n1 2 3 4 5 6\n''') == '2'\nassert solution('''\n6\n2 2 2 2 2 2\n''') == '3'\nassert solution('''\n10\n1 2 3 4 5 6 7 8 9 10\n''') == '1'\n"
    },
    {
        "number": 3124,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n3 1 5''') == '3'\nassert solution('''4\n1 2 3 4''') == '2'\nassert solution('''100\n99 1 98 2 96 3 95 4 94 5 93 6 92 7 91 8 90 9 91''') == '1'\nprint('Tests passed')\n"
    },
    {
        "number": 3124,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3125,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"a+b-c\\na-b+d-c\") == \" -d-\\na-b+d-c\"\nassert solution(\"knuth-morris-pratt\") == \"knuthmorrispratt\"\nassert solution(\"\") == \"<empty>\"\n\"\"\"\n"
    },
    {
        "number": 3125,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('a+b-c') == '- +d-'\nassert solution('a-b+d-c') == '- +d-'\nassert solution('knuth-morris-pratt') == '<any> <empty>'\nassert solution('knuthmorrispratt') == '<any> <empty>'\nassert solution('sdf') == '<corrupted>'\n"
    },
    {
        "number": 3125,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"a+b-c\") == \"- +d-\"\nassert solution(\"a-b+d-c\") == \"<any> <empty>\"\nassert solution(\"knuth-morris-pratt\") == \"<any> <empty>\"\nassert solution(\"knuthmorrispratt\") == \"<any> <empty>\"\nassert solution(\"\") == \"<any>\"\n"
    },
    {
        "number": 3125,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('a+b-c\\na-b+d-c') == '- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d-\\na- +d"
    },
    {
        "number": 3125,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('a+b-c') == '- +d-'\nassert solution('a-b+d-c') == '<any> <empty>'\nassert solution('knuth-morris-pratt') == '<any> <empty>'\nassert solution('knuth-morris-pratt') == '<any> <empty>'\nassert solution('abab') == '<any> <empty>'\n"
    },
    {
        "number": 3125,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"a+b-c\") == \"- +d-\"\nassert solution(\"a-b+d-c\") == \"<any> <empty>\"\n\n\"\"\"\n\n\nfrom collections import deque\n"
    },
    {
        "number": 3125,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"a+b-c\"\n) == \"- +d-\", \"Should be - +d-: %s\" % (\n\"solution('a+b-c')\"\n)\nassert solution(\n\"a-b+d-c\"\n) == \"<any> <empty>\", \"Should be <any>: %s\" % (\n\"solution('a-b+d-c')\"\n)\nassert solution(\n\"knuth-morris-pratt\"\n) == \"<any> <empty>\", \"Should be <any>: %s\" % (\n\"solution('knuth-morris-pratt')\"\n)\nassert solution(\n\"knuthmorrispratt\"\n) == \"knuthmorrispratt <any>\", \"Should be knuthmorrispratt <any>: %s\" % (\n\"solution('knuthmorrispratt')\"\n)\nassert solution(\n\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
        "number": 3125,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('a+b-c') == '- +d-'\nassert solution('a-b+d-c') == '<any> <empty>'\nassert solution('knuth-morris-pratt') == '<any> <empty>'\nassert solution('knuth-morris-pratt') == '<any> <empty>'\nassert solution('knuth-morris-pratt') == '<any> <empty>'\n"
    },
    {
        "number": 3125,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('a+b-c') == '- +d-'\nassert solution('a-b+d-c') == '- +d-'\nassert solution('knuth-morris-pratt') == '<any> <empty>'\n\"\"\"\n"
    },
    {
        "number": 3125,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('a+b-c') == '- +d-'\nassert solution('a-b+d-c') == '- -d-'\nassert solution('knuth-morris-pratt') == '<any> <empty>'\nassert solution('knuthmorrispratt') == '<any> <empty>'\nassert solution('a+b-c') == '- +d-'\n"
    },
    {
        "number": 3126,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0 0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\") == \"6\"\nassert solution(\"1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\") == \"0\"\nassert solution(\"3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\") == \"3\"\nassert solution(\"1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\") == \"0\"\nassert solution(\"3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\") == \"3\"\n"
    },
    {
        "number": 3126,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"0\") == \"\"\nassert solution(\"7\") == \"1\"\nassert solution(\"t 0\") == \"t 1\"\nassert solution(\"t 1\") == \"t 2\"\n"
    },
    {
        "number": 3126,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''1 1\n0\n7\nt 0\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6''') == '0'\n\nassert solution(\n'''3 0\n2 6 6\n10\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10''') == '11'\n\nassert solution(\n'''3 0\n2 6 6\n10\nt 0\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10''') == '6'\n\nassert solution(\n'''3 0\n2 6 6\n10\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10\nt 11''') == '9'\n\nassert solution(\n'''3 0\n2 6 6\n10\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10\nt 11''') == '9'"
    },
    {
        "number": 3126,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 1''') == '0'\nassert solution('''2 0''') == '1'\nassert solution('''3 2''') == '2'\nassert solution('''10 9''') == '8'\nassert solution('''20 10''') == '10'\n"
    },
    {
        "number": 3126,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''1 1\n0''') == '0'\nassert solution(\n'''2 2\n2 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10''') == '1'\nassert solution(\n'''3 0\n3 2 4\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10\nt 11\nt 12\nt 13\nt 14''') == '2'\nassert solution(\n'''3 0\n0\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10\nt 11\nt 12\nt 13\nt 14''') == '1'\nassert solution(\n'''3 0\n0\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10\nt 11\nt 12\nt 13\nt 14\nt 15\nt 16''') == '3'\n"
    },
    {
        "number": 3126,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''1 1\n0''') == '0'\nassert solution(\n'''3 0\n2 6 6\n10\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10\n''') == '11'\nassert solution(\n'''1 1\n0\n7\nt 0\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\n''') == '3'\nassert solution(\n'''3 0\n2 6 6\n10\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10\n''') == '5'\nassert solution(\n'''1 1\n0\n7\nt 0\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\n''') == '3'\n"
    },
    {
        "number": 3126,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1') == '0'\nassert solution('2 3') == '1'\nassert solution('1 0') == '1'\nassert solution('0 3') == '0'\nassert solution('0 1') == '0'\n"
    },
    {
        "number": 3126,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3126,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 1\n0''') == '0'\nassert solution('''1 1\n0''') == '1'\nassert solution('''2 2\n0\n1\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10''') == '7'\nassert solution('''2 2\n0\n1\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10''') == '3'\nassert solution('''2 3\n0\n1\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10\nt 11''') == '3'\n"
    },
    {
        "number": 3126,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin1) == expected1\nassert solution(stdin2) == expected2\nassert solution(stdin3) == expected3\n"
    },
    {
        "number": 3127,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2 4 6\"\nassert solution(stdin) == \"0 4 6\"\n\n\"\"\"\n\n\"\"\"\n\n-----Solution-----\n\n\"\"\""
    },
    {
        "number": 3127,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1''') == '2 4 6\\n0'\nassert solution('''7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1\n1 1 1''') == '0'\nassert solution('''7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1\n1 1 1''') == '0'\nassert solution('''7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1''') == '0'\nassert solution('''7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1''') == '0'\n"
    },
    {
        "number": 3127,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 6\n1 2 2\n2 3 2\n3 5 2\n1 4 3\n4 5 3\n1 5 6''') == '2\\n4 6'\nassert solution('''5 8\n1 2 2\n2 3 2\n3 5 2\n1 4 3\n4 5 3\n1 5 6\n2 4 3\n3 4 2\n4 1 3\n5 5 3\n6 5 4\n7 5 2\n8 4 1''') == '0\\n3 4\\n'\nassert solution('''5 6\n1 2 2\n2 3 2\n3 5 2\n1 4 3\n4 5 3\n1 5 6\n2 3 3\n3 5 3\n4 5 2\n1 4 2\n1 3 1\n5 1 5\n1 1 1''') == '1\\n'\nassert solution('''4 7\n1 2 2\n2 3 2\n3 5 2\n1 4 3\n4 5 3\n1 5 6\n1 3 5\n2 1 3\n3 1 2\n2 1 1\n4 1 1''') == '0\\n'\n"
    },
    {
        "number": 3127,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == \"2\\n4 6\"\nassert solution(\"7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == \"0\\n4 6\"\nassert solution(\"7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == \"2\\n4 6\"\nassert solution(\"7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == \"2\\n4 6\"\nassert solution(\"7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == \"2\\n4 6\"\n"
    },
    {
        "number": 3127,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1\n''') == '0 4 6'\n\nassert solution('''\n10 10\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1\n6 8 2\n7 9 2\n8 9 1\n9 10 2\n''') == '3 8 9'\n\nassert solution('''\n2 10\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1\n6 8 2\n7 9 2\n8 9 1\n9 10 2\n''') == '0 4 6'\n\nassert solution('''\n3 3\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1\n6 8 2\n7 9 2\n8 9 1\n9 10 2\n''') == '0 4 6'\n\nassert solution('''\n7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1\n6 8 2\n7 9 2\n8 9 1\n9 10 2\n''') == '3'\n"
    },
    {
        "number": 3127,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1''') == \"2\\n4 6\\n\"\n\nassert solution('''2 10\n1 1 1\n2 1 1''') == \"0\\n\"\n\nassert solution('''3 3\n1 2 1\n2 1 1\n3 1 1''') == \"2\\n\"\n\nassert solution('''6 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1''') == \"0\\n\"\n\nassert solution('''2 10\n1 1 1\n2 1 1''') == \"0\\n\"\n'''\nTest.describe(\"Basic tests\")\nTest."
    },
    {
        "number": 3127,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1''') == '2 4 6'\n\nassert solution('''10 10\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1\n6 8 2\n7 9 2\n8 9 2\n9 10 2''') == '0 2 3 4 5 6 7 8 9 10'\n\nassert solution('''100 100\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1\n6 8 2\n7 9 2\n8 9 2\n9 10 2\n10 11 2\n11 12 2\n12 13 2\n13 14 2\n14 15 2\n15 16 2\n16 17 2\n17 18 2\n18 19 2\n19 20 2\n20 21 2\n20 22 2\n20 23 2\n20 24 2\n20 25 2\n20 26 2\n20 27 2\n20 28 2\n20 29 2\n20 30 2\n20 31 2\n20 32 2\n20 33 2\n20 34 2\n20 35 2\n20 36 2\n20 37 2\n20 38 2\n20 39 2\n20 40 2\n20 41 2\n20 42 2\n20 43 2\n20 44 2\n20 45 2\n20 46 2\n20 47 2\n20 48 2\n20 49 2\n20 50 2\n20 51 2\n20 52 2\n20 53 2\n20 54 2\n20 55 2\n20 56 2\n20 57 2\n20 58 2\n20 59 2\n20 60 2\n20 61 2\n20 62 2\n20 63 2\n20 64 2\n20 65 2\n20 66 2\n20 67 2\n20 68 2\n20 69 2\n20 70 2\n20 71 2\n20 72 2\n20 73 2\n20 74 2\n20 75 2\n20 76 2\n20 77 2\n20 78 2\n20 79 2\n20 80 2\n20 81 2\n20 82 2\n20 83 2\n20 84 2\n20 85 2\n20 86 2\n20 87 2\n20 88 2\n20 89 2\n20 90 2\n20 91 2\n20 92 2\n20 93 2\n20 94 2\n20 95 2\n20 96 2\n20 97 2\n20 98 2\n20 99 2\n20 100 2\n20 101 2\n20 102 2\n20 103 2\n20 104 2\n20 105 2\n20 106 2\n20 107 2\n20 108 2\n20 109 2\n20 110 2\n20 111 2\n20 112 2\n20 113 2\n20 114 2\n20 115 2\n20 116 2\n20 117 2\n20 118 2\n20 119 2\n20 120 2\n20 121 2\n20 122 2\n20 123 2\n20 124 2\n20 125 2\n20 126 2\n20 127 2\n20 128 2\n20 129 2\n20 130 2\n20 131 2\n20 132 2\n20 133 2\n20 134 2\n20 135 2\n20 136 2\n20 137 2\n20 138 2\n20 139 2\n20 140 2\n20 141 2\n20 142 2\n20 143 2\n20 144 2\n20 145 2\n20 146 2\n20 147 2\n20 148 2\n20 149 2\n20 150 2\n20 151 2\n20 152 2\n20 153 2\n20 154 2\n20 155 2\n20 156 2\n20 157 2\n20 158 2\n20 159 2\n20 160 2\n20 161 2\n20 162 2\n20 163 2\n20 164 2\n20 165 2\n20 166 2\n20 167 2\n20 168 2\n20 169 2\n20 170 2\n20 171 2\n20 172 2\n20 173 2\n20 174 2\n20 175 2\n20 176 2\n20 177 2\n20 178 2\n20 179 2\n20 180 2\n20 181 2\n20 182 2\n20 183 2\n20 184 2\n20 185 2\n20 186 2\n20 187 2\n20 188 2\n20 189 2\n20 190 2\n20 191 2\n20 192 2\n20 193 2\n20 194 2\n20 195 2\n20 196 2\n20 197 2\n20 198 2\n20 199 2\n20 200 2\n20 201 2\n20 202 2\n20 203 2\n20 204 2\n20 205 2\n20 206 2\n20 207 2\n20 208 2\n20 209 2\n20 210 2\n20 211 2\n20 212 2\n20 213 2\n20 214 2\n20 215 2\n20 216 2\n20 217 2\n20 218 2\n20 219 2\n20 220 2\n20 221 2\n20 222 2\n20 223 2\n20 224 2\n20 225 2\n20 226 2\n20 227 2\n20 228 2\n20 229 2\n20 230 2\n20 231 2\n20 232 2\n20 233 2\n20 234 2\n20 235 2\n20 236 2\n20 237 2\n20 238 2\n20 239 2\n20 240 2\n20 241 2\n20 242 2\n20 243 2\n20 244 2\n20 245 2\n20 246 2\n20 247 2\n20 248 2\n20 249 2\n20 250 2\n20 251 2\n20 252 2\n20 253 2\n20 254 2\n20 255 2\n20 256 2\n20 257 2\n20 258 2\n20 259 2\n20 260 2\n20 261 2\n20 262 2\n20 263 2\n20 264 2\n20 265 2\n20 266 2\n20 267 2\n20 268 2\n20 269 2\n20 270 2\n20 271 2\n20 272 2\n20 273 2\n20 274 2\n20 275 2\n20 276 2\n20 277 2\n20 278 2\n20 279 2\n20 280 2\n20 281 2\n20 282 2\n20 283 2\n20 284 2\n20 285 2\n20 286 2\n20 287 2\n20 288 2\n20 289 2\n20 290 2\n20 291 2\n20 292 2\n20 293 2\n20 294 2\n20 295 2\n20 296 2\n20 297 2\n20 298 2\n20 299 2\n20"
    },
    {
        "number": 3127,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(open(\"test_2.txt\", \"r\").read()) == \"2 3 4 5\"\nassert solution(open(\"test_3.txt\", \"r\").read()) == \"0 1 2 3\"\nassert solution(open(\"test_4.txt\", \"r\").read()) == \"0 1\"\nassert solution(open(\"test_5.txt\", \"r\").read()) == \"3 4\"\nassert solution(open(\"test_6.txt\", \"r\").read()) == \"0 1 3\"\n"
    },
    {
        "number": 3127,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n'''"
    },
    {
        "number": 3127,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1''') == '2\\n4 6'\n\nassert solution('''5 6\n1 2 2\n2 3 2\n3 5 2\n1 4 3\n4 5 3\n1 5 6''') == '0\\n5 6'\n\nassert solution('''1 1\n1 1\n1 1''') == '0'\n\nassert solution('''2 2\n1 1\n1 1''') == '0'\n\nassert solution('''5 4\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1''') == '0\\n4 7\\n4 7\\n5 7'"
    },
    {
        "number": 3128,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n12\n1 1\n1 2\n1 3\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n''') == '4\\n5\\n6\\n1\\n2\\n3'\n\nassert solution(\n'''\n3\n1 1\n1 2\n1 3\nSample Output 2:\n1\n2\n3\n''') == '1\\n2\\n3'\n"
    },
    {
        "number": 3128,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"2\"\n"
    },
    {
        "number": 3128,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == ''\n"
    },
    {
        "number": 3128,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(open(\"/home/phucanh/Desktop/Lec/Algo/ImplementStuff/Algorithms1/Ch8/9.1-EulerPhi.txt\").read()))\n"
    },
    {
        "number": 3128,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''12\n1 1\n1 2\n1 3\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6''') == '4\\n5\\n6\\n1\\n2\\n3\\n1\\n2\\n3'\nassert solution('''20\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n2 11\n2 12\n2 13\n2 14\n2 15\n2 16\n2 17\n2 18\n2 19\n2 20''') == '1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n1\\n2\\n3'\n\nprint(solution('''12\n1 1\n1 2\n1 3\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6'''))\n"
    },
    {
        "number": 3128,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 3128,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''12''') == '4'\nassert solution('''6''') == '1'\nassert solution('''12\\n1\\n1\\n1\\n1\\n1\\n''') == '4'\nassert solution('''6\\n1\\n1\\n1\\n1\\n1\\n''') == '1'\nassert solution('''12\\n1\\n1\\n1\\n1\\n1\\n''') == '4'\n"
    },
    {
        "number": 3128,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"12\\n1 1\\n1 2\\n1 3\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\") == '4\\n5\\n6\\n1\\n2\\n3'\nassert solution(\"12\\n1 1\\n1 2\\n1 3\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\") == '1\\n2\\n3'\nassert solution(\"6\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\") == '1\\n2\\n3'\nassert solution(\"1\\n1\") == '1'\nassert solution(\"6\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\") == '1'\n"
    },
    {
        "number": 3128,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == ''\n\"\"\""
    },
    {
        "number": 3128,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''12\n1 1\n1 2\n1 3\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6''') == '4 5 6 1 2 3'\n\nassert solution('''6\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6''') == '1 2 3 4 5 6'\n\nassert solution('''12\n1 1\n1 2\n1 3\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6''') == '4 5 6 1 2 3'\n"
    },
    {
        "number": 3129,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\"\nassert solution(\"PCP\") == \"2\"\nassert solution(\"PPPC\") == \"2\"\nassert solution(\"CPCC\") == \"1\"\n"
    },
    {
        "number": 3129,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3129,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\"\nassert solution(\"CPCPCPCPCP\") == \"4\"\nassert solutionnassert solution(\"CCCCC\") == \"0\"\n"
    },
    {
        "number": 3129,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('CPCC') == 1\nassert solution('PPPPCCCC') == 8"
    },
    {
        "number": 3129,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\"\nassert solution(\"CPCPPCPCPPCP\") == \"1\"\nassert solution(\"CPCCPCPPCPCP\") == \"2\"\nassert solution(\"CPCCPPCPCPCP\") == \"3\"\n"
    },
    {
        "number": 3129,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin[::-1]\n\"\"\"\n"
    },
    {
        "number": 3129,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"CPCC\") == 1\nassert solution(\"PPPPCCCC\") == 8\nassert solution(\"PPCCCC\") == 2\nassert solution(\"CCCC\") == 0\nassert solution(\"\") == 0\n"
    },
    {
        "number": 3129,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 0\nassert solution('C') == 1\nassert solution('CPP') == 1\nassert solution('CC') == 2\nassert solution('PPPP') == 1\n"
    },
    {
        "number": 3129,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\"\nassert solution(\"CCP\") == \"2\"\nassert solution(\"P\") == \"1\"\nassert solution(\"\") == \"\"\nprint(\"Successful\")\n"
    },
    {
        "number": 3129,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 0\nassert solution('C') == 1\nassert solution('CP') == 2\nassert solution('CPCCCCP') == 5\nassert solution('CPCCCCPP') == 8\n"
    },
    {
        "number": 3130,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1') == '1'\nassert solution('2\\n1\\n1\\n2\\n1') == '2'\nassert solution('2\\n1\\n2\\n1\\n1') == '1 2'\nassert solution('3\\n1\\n2\\n1\\n1\\n1') == '1'\nassert solution('3\\n1\\n1\\n2\\n1\\n1') == '1'\n"
    },
    {
        "number": 3130,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"3\"\nassert solution(\"1 3\") == \"1 2 3\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"2 3\") == \"2 3\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 3130,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 2 1''') == '''1 2 3'''\nassert solution('''3 2 1''') == '''1 2 3'''\nassert solution('''3 2 1''') == '''1 2 3'''\nassert solution('''3 2 1''') == '''1 2 3'''\nassert solution('''3 2 1''') == '''1 2 3'''\n"
    },
    {
        "number": 3130,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 2 1\n1 2\n2 3\n2\n''') == '1 2 3'\nassert solution('''3 2 1\n1 3\n2 3\n3\n''') == '3'\nassert solution('''3 2 1\n1 3\n2 3\n3\n''') == '3'\nassert solution('''3 2 1\n1 3\n2 3\n1\n''') == '3'\nassert solution('''3 2 1\n1 3\n2 3\n3\n''') == '3'\n"
    },
    {
        "number": 3130,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 2 1\n1 2\n2 3\n2''') == '1 2 3'\nassert solution('''3 2 1\n1 3\n2 3\n3\n''') == '3'\nassert solution('''3 2 1\n1 2\n3\n2''') == '2'\nassert solution('''3 2 1\n1 3\n2 3\n3\n''') == '3'\nassert solution('''3 2 1\n1 3\n2 3\n3\n1\n2\n3\n4\n''') == '1 2 3'\n"
    },
    {
        "number": 3130,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2 1\\n1 2\\n2 3\\n2\\n') == '1 2 3'\nassert solution('3 2 1\\n1 2\\n2 3\\n2\\n') == '1 2 3'\nassert solution('3 2 1\\n1 3\\n2 3\\n3\\n') == '3'\nassert solution('3 2 1\\n1 3\\n2 3\\n3\\n') == '3'\nassert solution('3 2 1\\n1 3\\n2 3\\n3\\n') == '3'\n"
    },
    {
        "number": 3130,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 2 1\n1 2\n2 3\n2\n''') == '1 2 3'\nassert solution('''3 2 1\n1 3\n2 3\n3\n''') == '3'\nassert solution('''3 2 1\n1 3\n2 3\n3\n''') == '3'\nassert solution('''3 2 1\n1 3\n2 3\n1\n''') == '3'\nassert solution('''3 2 1\n1 3\n2 3\n2\n''') == '3'\n"
    },
    {
        "number": 3130,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 2 1''') == '1 2 3'\nassert solution('''3 2 1''') == '1 2 3'\nassert solution('''3 2 1''') == '1 2 3'\nassert solution('''3 2 1''') == '1 2 3'\nassert solution('''3 2 1''') == '1 2 3'\n"
    },
    {
        "number": 3130,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 2 1\n1 2\n2 3\n2\n''') == '1 2 3'\nassert solution('''3 2 1\n1 2\n1 3\n2 3\n''') == '3'\nassert solution('''3 2 1\n1 3\n1 3\n2 3\n''') == '1 2'\nassert solution('''3 2 1\n1 3\n1 3\n2 3\n''') == '3'\nassert solution('''3 2 1\n2 3\n1 3\n2 3\n''') == '2 1'\n"
    },
    {
        "number": 3130,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 2 1\n1 2\n2 3\n2\n''') == '1 2 3'\nassert solution('''3 2 1\n1 3\n2 3\n3\n''') == '3'\nassert solution('''3 2 1\n1 2\n2 3\n3\n''') == '3'\nassert solution('''3 2 1\n2 3\n3\n''') == '3'\nassert solution('''3 2 1\n2 3\n3\n''') == '3'\n"
    },
    {
        "number": 3131,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1\") == \"4\"\nassert solution(\"2\\n2\\n1\") == \"4\"\nassert solution(\"3\\n2\\n3\") == \"4\"\nassert solution(\"4\\n2\\n4\") == \"0\"\nassert solution(\"5\\n2\\n5\") == \"6\"\n"
    },
    {
        "number": 3131,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"5 3\n2 4 2 3 4\"\"\") == \"39\"\nassert solution(\"\"\"5 1\n1 0 1 1 1\"\"\") == \"4\"\n\nprint(\"solution(): All tests passed successfully!\")\n"
    },
    {
        "number": 3131,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 3\n2 4 2 3 4''') == '39'\nassert solution('''5 1\n1 0 1 1 1''') == '4'\n"
    },
    {
        "number": 3131,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 3\n2 4 2 3 4''') == '39'\nassert solution('''5 1\n1 0 1 1 1''') == '4'\nassert solution('''5 1\n1 0 1 1 1''') == '4'\nassert solution('''5 100000\n1 0 1 1 1''') == '0'\nassert solution('''10 6\n
    },
    {
        "number": 3131,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 3\\n2 4 2 3 4\\n') == '39'"
    },
    {
        "number": 3131,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3131,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n2 4 2 3 4\") == \"39\""
    },
    {
        "number": 3131,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 3\\n2 4 2 3 4') == '39'\nassert solution('5 1\\n1 0 1 1 1') == '4'\nassert solution('9 9\\n1 1 1 1 1 1 1 1 1') == '2'\nassert solution('5 1\\n1 0 1 1 1') == '4'\nassert solution('7 10\\n1 1 1 1 1 1 1 1 1 1 1 1') == '27'\n"
    },
    {
        "number": 3131,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 3131,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n0') == '0'\nassert solution('3\\n2 4 2 3 4') == '39'\nassert solution('5\\n2 3 4 5 6 7') == '10'\nassert solution('1000\\n
    },
    {
        "number": 3132,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2'\n    'xx.\\nxxx'\n    'xxx.\\n...'\n    'xxx.\\n...') == \"1 1 2\"\n'''\n\nimport sys"
    },
    {
        "number": 3132,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 3\\nxx.\\nxxx\\n...') == '1 1 2\\n2 3 1\\n'\nassert solution('3 3\\nxxx.\\nxxx\\n...') == '1 1 2\\n2 3 1\\n'\nassert solution('3 2\\nx..\\nx.x\\n') == '1 1 2\\n2 1 3\\n'\nassert solution('2 3\\nx..\\nx.x\\n') == '1 1 2\\n2 1 3\\n'\nassert solution('2 2\\nxx..\\nx.x\\n') == '1 1 2\\n2 1 3\\n'\n"
    },
    {
        "number": 3132,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(sample_input) == expected_output\nprint(solution(input))\n'''\n"
    },
    {
        "number": 3132,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 3\nxx.\nxxx\n...''') == '1 1 2\\n2 3 1'\nassert solution('''4 6\nxx....\nxx.xxx\n...xxx\n...xxx\n''') == '1 1 2\\n2 4 3'\n"
    },
    {
        "number": 3132,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 3\\nxx.\\nxxx\\n...\\n') == '1 1 2\\n2 3 1'\nassert solution('4 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx') == '1 1 2\\n2 4 3'\nassert solution('1 1\\n1') == '1 1 1'\n\"\"\"\n"
    },
    {
        "number": 3132,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"4 6\"\n) == '1 1 2'\nassert solution(\n    \"3 3\"\n) == '1 1 2'\nassert solution(\n    \"1 1 2\"\n) == '1 1 2'\nassert solution(\n    \"1 1 2\"\n) == '1 1 2'\nassert solution(\n    \"1 1 2\"\n) == '1 1 2'\n"
    },
    {
        "number": 3132,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('a') == ''\nassert solution('a.a') == ''\nassert solution('aaaa') == ''\nassert solution('aa.aa') == ''\n"
    },
    {
        "number": 3132,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('xx...') == '1 1 2'\nassert solution('x.xx') == '1 1 2'\nassert solution('x.xx') == '1 1 2'\nassert solution('x.xxx') == '1 1 2'\nassert solution('xxx.x') == '2 3 1'\n"
    },
    {
        "number": 3132,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') is None\nassert solution('2 1') == '1 1 2'\nassert solution('3 3\\nxx.\\nxxx\\n...\\n...\\n...') == '1 1 2\\n2 3 1\\n'\nassert solution('1 10\\nx.xxx') == '1 1 10\\n'\nassert solution('3 2\\nx..\\nx.x\\n.xxx') == '1 1 10\\n2 3 1\\n'\n"
    },
    {
        "number": 3132,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('\\n'.join([\n    '3 3',\n    'xx.',\n    'xxx',\n    '...',\n])) == '\\n'.join([\n    '1 1 2',\n    '2 3 1',\n])\n\"\"\"\n"
    },
    {
        "number": 3133,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 0 0\\n1 1 1\\n0 0 0\\n0 1 0') == 'indistinguishable'\nassert solution('1 0 1\\n1 1 1\\n0 0 0\\n0 1 0') == '0'\nassert solution('2 1 2\\n1 1 1\\n0 0 0\\n0 1 0') == '0'\nassert solution('2 2 2\\n1 1 1\\n0 0 0\\n0 1 0') == 'indistinguishable'\nassert solution('2 3 2\\n1 1 1\\n0 0 0\\n0 1 0') == '0'\n"
    },
    {
        "number": 3133,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 1 2\") == \"0\"\nassert solution(\"2 0 1\") == \"indistinguishable\"\nassert solution(\"1 0 0\") == \"0\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"0 0 0\") == \"0\"\n"
    },
    {
        "number": 3133,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 2 3\n2 3 1\n0 2 0\n0 1 0''') == \"indistinguishable\"\nassert solution('''4 2 3\n1 2 1\n0 2 0\n0 1 0\n0 1 0\n0 2 0\n1 2 1\n0 0 0\n1 1 0\n0 1 0\n''') == \"0\"\nassert solution('''1 3 2\n0 2 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n''') == \"0\"\nassert solution('''1 2 0\n1 2 1\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n''') == \"1\"\nassert solution('''2 2 1\n1 2 1\n0 2 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n''') == \"0\"\n"
    },
    {
        "number": 3133,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 1 2\n1 2 1\n0 2 0\n0 1 0''') == '0'\nassert solution('''2 0 1\n1 1 1\n0 0 0''') == 'indistinguishable'\nassert solution('''2 2 2\n1 2 1\n1 1 1\n0 0 0''') == '0'\nassert solution('''3 3 3\n2 2 2\n0 1 1\n1 0 1\n0 0 0''') == 'indistinguishable'\nassert solution('''4 4 4\n2 2 2\n0 1 1\n1 0 1\n1 1 1\n0 0 0''') == '1'\n"
    },
    {
        "number": 3133,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 3133,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 1 2\\n1 2 1\\n0 2 0\\n0 1 0\\n') == '0'\nassert solution('2 0 1\\n1 1 1\\n0 0 0\\n0 1 0\\n') == 'indistinguishable'\n"
    },
    {
        "number": 3133,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input_string) == output_string\n"
    },
    {
        "number": 3133,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 1 2\n1 2 1\n0 2 0\n0 1 0''') == '0'\nassert solution('''2 0 1\n1 1 1\n0 0 0''') == 'indistinguishable'\nassert solution('''3 3 1 2\n1 2 1\n0 2 0\n0 1 0\n''') == '0'\nassert solution('''7 4 1 2\n1 2 1\n0 2 0\n0 1 0\n0 1 0\n1 2 1\n0 2 0\n0 1 0\n''') == 'indistinguishable'\nassert solution('''7 4 2 1\n1 2 1\n0 2 0\n0 1 0\n0 1 0\n1 2 1\n0 2 0\n0 1 0\n''') == '1'\n"
    },
    {
        "number": 3133,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 1\") == \"indistinguishable\"\nassert solution(\"3 1 2\") == \"0\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"0 2 0\") == \"0\"\n"
    },
    {
        "number": 3133,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0 2 1\") == \"0\"\nassert solution(\"2 0 1\") == \"indistinguishable\"\nassert solution(\"2 1 1\") == \"0\"\nassert solution(\"0 0 0\") == \"indistinguishable\"\nassert solution(\"1 1 1\") == \"0\"\n"
    },
    {
        "number": 3134,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1010\") == \"1111\"\nassert solution(\"0110\") == \"1110\"\nassert solution(\"1010\") == \"1110\"\nassert solution(\"1001\") == \"1111\"\nassert solution(\"0001\") == \"-1\"\n"
    },
    {
        "number": 3134,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0100\\n0001') == '0111'\nassert solution('0110\\n1001') == '1111'\nassert solution('0101\\n1101') == '1110'\nassert solution('1010\\n1110') == '1111'\nassert solution('0101\\n1101') == '1110'\n"
    },
    {
        "number": 3134,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0110\") == \"1111\"\nassert solution(\"1001\") == \"0111\"\nassert solution(\"0\") == \"-1\"\nassert solution(\"1\") == \"-1\"\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 3134,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0110\\n1001') == '1111\\n0111\\n1110\\n1111'\nassert solution('0101\\n0101') == '0101\\n0101\\n0100\\n0100'\nassert solution('0001\\n0001') == '-1'\nassert solution('001\\n001') == '-1'\nassert solution('0100\\n0100') == '0101\\n0101\\n0100\\n0100'\n"
    },
    {
        "number": 3134,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0110') == '1111'\nassert solution('1001') == '0111'\nassert solution('0101') == '1010'\nassert solution('00') == '-1'\nassert solution('1111') == '1111'\n"
    },
    {
        "number": 3134,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0110') == '1111'\nassert solution('1001') == '0111'\nassert solution('0101') == '0011'\nassert solution('01') == '-1'\nassert solution('0011') == '0'\n"
    },
    {
        "number": 3134,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    '''\n    0110\n    1001\n    '''\n) == '''\n1111\n0111\n1110\n1111\n'''\nassert solution(\n    '''\n    1010111\n    01010011\n    '''\n) == '''\n1111\n0111\n1110\n1111\n'''\nassert solution(\n    '''\n    010111\n    11010101\n    '''\n) == '''\n0111\n0110\n1110\n'''\nassert solution(\n    '''\n    1010111\n    01010011\n    '''\n) == '''\n-1\n'''\nassert solution(\n    '''\n    1010111\n    11010101\n    '''\n) == '''\n-1\n'''\n"
    },
    {
        "number": 3134,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0110') == '1111'\nassert solution('1001') == '0111'\nassert solution('10101') == '1110'\nassert solution('1011') == '1110'\nassert solution('1') == '-1'\n"
    },
    {
        "number": 3134,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0110') == '1111'\nassert solution('1001') == '0111'\nassert solution('0110') == '1111'\nassert solution('0') == '-1'\nassert solution('1') == '-1'\n"
    },
    {
        "number": 3134,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''0110\n1001''') == '''1111\n0111\n1110\n1111'''\n\nassert solution('''0\n1''') == '-1'\nassert solution('''010111000111100111\n010111000111100111''') == '''111011111100111111\n11111011111100111111\n111011111100111111\n11111011111100111111\n11111011111100111111\n111011111100111111\n111011111100111111'''\nassert solution('''0000\n0011''') == '-1'\nassert solution('''0001\n0100''') == '-1'\n"
    },
    {
        "number": 3135,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10000') == '+0000'\nassert solution('1111') == '+000-', '+000- should be the lexicographically smallest.'\nassert solution('10000') == '+0000'\nassert solution('1111') == '+000-', '+000- should be the lexicographically smallest.'\nassert solution('1111') == '+000-', '+000- should be the lexicographically smallest.'\n"
    },
    {
        "number": 3135,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10000') == '+0000'\nassert solution('1111') == '+000-'\nassert solution('10100') == '+00+'\nassert solution('00011') == '+001'\nassert solution('00001') == '+0'\n"
    },
    {
        "number": 3135,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1000') == '0000'\nassert solution('10000') == '+0000'\nassert solution('1111') == '+000-'\nassert solution('1101') == '+00-1'\nassert solution('1100') == '+00-1'\n"
    },
    {
        "number": 3135,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(10000) == \"+0000\"\nassert solution(1111) == \"+000-\", \"1111\"\nassert solution(13) == \"+0001\", \"13\"\nassert solution(15) == \"+0015\", \"15\"\nassert solution(16) == \"+0110\", \"16\"\n"
    },
    {
        "number": 3135,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10000') == '+0000'\nassert solution('1111') == '+000-'\nassert solution('-22') == '-000-2'\nassert solution('-22.1') == '-000-20'\nassert solution('-22.100000000') == '-000-200'\n"
    },
    {
        "number": 3135,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1010\") == \"+000\"\nassert solution(\"11\") == \"+-1\"\nassert solution(\"101\") == \"+-1\"\nassert solution(\"1\") == \"+0\"\n"
    },
    {
        "number": 3135,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10000') == '+0000'\nassert solution('1110') == '+000-', '+000-'\nassert solution('1111') == '+000-', '+000-'\nassert solution('11111') == '+0000', '+0000'\nassert solution('111111111111111111111111111111') == '+1111111111111111111111111111111', '+1111111111111111111111111111111'\n"
    },
    {
        "number": 3135,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10000') == '+0000'\nassert solution('1111') == '+000-'\nassert solution('111100') == '+000-00'\nassert solution('11111') == '+000-000'\nassert solution('1111101') == '+000-00-00'\n"
    },
    {
        "number": 3135,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10000') == '+0000'\nassert solution('1111') == '+000-'\nassert solution('1110') == '+0001'\nassert solution('1010') == '-0000'\nassert solution('1011') == '-0001'\n"
    },
    {
        "number": 3135,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('10001100') == '+0000'\nassert solution('1111') == '+000-000-000'\nassert solution('10101101') == '+0000-0000-0000'\nassert solution('10111101') == '+0000-0000-0000'\n"
    },
    {
        "number": 3136,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 1 1 1\") == \"2\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"2 1 1 1\") == \"9\"\nassert solution(\"7 8 3 2\") == \"9\"\nassert solution(\"1 2\") == \"1\"\n"
    },
    {
        "number": 3136,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '2'\nassert solution(stdin) == '2'\nassert solution(stdin) == '3'\nassert solution(stdin) == '3'\nassert solution(stdin) == '4'\n"
    },
    {
        "number": 3136,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7 8 3 2''') == '9'\nassert solution('''2 1 1 1''') == '2'\nassert solution('''7 3 4 2''') == '9'\nassert solution('''5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4''') == '9'\nassert solution('''7 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4''') == '9'\n"
    },
    {
        "number": 3136,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3136,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '''7 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4''') == '9'\nassert solution(\n    '''2 1 1 1\n2 2\n1\n1\n1 2 1''') == '2'\nassert solution(\n    '''2 1 1 1\n2 2\n1\n1\n1 2 1''') == '2'\nassert solution(\n    '''7 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4''') == '9'\nassert solution(\n    '''1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000"
    },
    {
        "number": 3136,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n7 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5\n''') == '9'\nassert solution('''\n3 4 3\n2 3\n3 4 3\n1 3\n1 2 1\n2 3 3\n1 1 2\n3 1 1\n''') == '3'\nassert solution('''\n4 4 2 2\n1 2\n2 3 2\n2 3\n1 1 2\n1 2 1\n2 1 1\n2 3 2\n2 1 1\n1 3\n1 2 1\n2 3 3\n1 1 2\n''') == '2'\nassert solution('''\n5 4 4\n1 2\n1 3 1\n2 3 2\n3 4 4\n1 2 1\n2 3 3\n2 1 2\n2 4 2\n3 1 3\n3 4 2\n1 1 2\n2 1 1\n1 4 1\n1 3 1\n1 4 1\n2 2 1\n2 1 2\n2 4 2\n1 1 2\n1 1 2\n2 3 3\n1 3 1\n1 2 1\n2 3 3\n1 1 2\n2 1 1\n1 4 1\n1 3 1\n1 4 1\n2 2 1\n2 1 2\n2 4 2\n1 1 2\n1 1 2\n2 3 3\n1 3 1\n1 2 1\n2 3 3\n1 1 2\n2 1 1\n1 4 1\n1 3 1\n1 4 1\n2 2 1\n2 1 2\n2 4 2\n1 1 2\n1 1 2\n2 3 3\n1 3 1\n1 2 1\n2 3 3\n1 1 2\n2 1 1\n1 4 1\n1 3 1\n1 4 1\n2 2 1\n2 1 2\n2 4 2\n1 1 2\n1 1 2\n2 3 3\n1 3 1\n1 2 1\n2 3 3\n1 1 2\n2 1 1\n1 4 1\n1 3 1\n1 4 1\n2 2 1\n2 1 2\n2 4 2\n1 1 2\n1 1 2\n2 3 3\n1 3 1\n1 2 1\n2 3 3\n1 1 2\n2 1 1\n1 4 1\n1 3 1\n1 4 1\n2 2 1\n2 1 2\n2 4 2\n1 1 2\n1 1 2\n2 3 3\n1 3 1\n1 2 1\n2 3 3\n1 1 2\n2 1 1\n1 4 1\n1 3 1\n1 4 1\n2 2 1\n2 1 2\n2 4 2\n1 1 2\n1 1 2\n2 3 3\n1 3 1\n1 2 1\n2 3 3\n1 1 2\n2 1 1\n1 4 1\n1 3 1\n1 4 1\n2 2 1\n2 1 2\n2 4 2\n1 1 2\n1 1 2\n2 3 3\n1 3 1\n1 2 1\n2 3 3\n1 1 2\n2 1 1\n1 4 1\n1 3 1\n1 4 1\n2 2 1\n2 1 2\n2 4 2\n1 1 2\n1 1 2\n2 3 3\n1 3 1\n1 2 1\n2 3 3\n1 1 2\n2 1 1\n1 4 1\n1 3 1\n1 4 1\n2 2 1\n2 1 2\n2 4 2\n1 1 2\n1 1 2\n2 3 3\n1 3 1\n1 2 1\n2 3 3\n1 1 2\n2 1 1\n1 4 1\n1 3 1\n1 4 1\n2 2 1\n2 1 2\n2 4 2\n1 1 2\n1 1 2\n2 3 3\n1 3 1\n1 2 1\n2 3 3\n1 1 2\n2 1 1\n1 4 1\n1 3 1\n1 4 1\n2 2 1\n2 1 2\n2 4 2\n1 1 2\n1 1 2\n2 3 3\n1 3 1\n1 2 1\n2 3 3\n1 1 2\n2 1 1\n1 4 1\n1 3 1\n1 4 1\n2 2 1\n2 1 2\n2 4 2\n1 1 2\n1 1 2\n2 3 3\n1 3 1\n1 2 1\n2 3 3\n1 1 2\n2 1 1\n1 4 1\n1 3 1\n1 4 1\n2 2 1\n2 1 2\n2 4 2\n1 1 2\n1 1 2\n2 3 3\n1 3 1\n1 2 1\n2 3 3\n1 1 2\n2 1 1\n1 4 1\n1 3 1\n1 4 1\n2 2 1\n2 1 2\n2 4 2\n1 1 2\n1 1 2\n2 3 3\n1 3 1\n1 2 1\n2 3 3\n1 1 2\n2 1 1\n1 4 1\n1 3 1\n1 4 1\n2 2 1\n2 1 2\n2 4 2\n1 1 2\n1 1 2\n2 3 3\n1 3 1\n1 2 1\n2 3 3\n1 1 2\n2 1 1\n1 4 1\n1 3 1\n1 4 1\n2 2 1\n2 1 2\n2 4 2\n1 1 2\n1 1 2\n2 3 3\n1 3 1\n1 2 1\n2 3 3\n1 1 2\n2 1 1\n1 4 1\n1 3 1\n1 4 1\n2 2 1\n2 1 2\n2 4 2\n1 1 2\n1 1 2\n2 3 3\n1 3 1\n1 2 1\n2 3 3\n1 1 2\n2 1 1\n1 4 1\n1 3 1\n1 4 1\n2 2 1\n2 1 2\n2 4 2\n1 1 2\n1 1 2\n2 3 3\n1 3 1\n1 2 1\n2 3 3\n1 1 2\n2 1 1\n1 4 1\n1 3 1\n1 4 1\n2 2 1\n2 1 2\n2 4 2\n1 1 2\n1 1 2\n2 3 3\n1 3 1\n1 2 1\n2 3 3\n1 1 2\n2 1 1"
    },
    {
        "number": 3136,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 2 3 1\") == \"2\"\nassert solution(\"2 2 4 1\") == \"2\"\nassert solution(\"2 2 4 2\") == \"2\"\nassert solution(\"2 2 3 2\") == \"3\"\nassert solution(\"2 2 3 2 1\") == \"6\"\n"
    },
    {
        "number": 3136,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 1 1 1\\n2 2\\n1\\n1\\n1 2 1\\n') == '9'\nassert solution('7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\\n') == '9'\nassert solution('2 1 1 1\\n2 2\\n1\\n1\\n1 2 1\\n') == '2'\nassert solution('7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\\n') == '9'\nassert solution('7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\\n') == '9'\n"
    },
    {
        "number": 3136,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4''') == '9'\nassert solution('''2 1 1 1\n2 2\n1\n1\n1 2 1\nSample Output 2:\n2''') == '2'\nassert solution('''8 8 6 4\n1 2\n3 4\n5 6\n7 8\n1 2\n1 5\n2 3\n1 4\n1 6\n3 7\n4 8\n1 2\n1 5\n2 3\n1 6\n2 4\n2 7\n3 5\n3 8\n4 7\n4 6\n1 6\n2 4\n2 7\n3 5\n3 8\n4 7\n4 6''') == '16'\nassert solution('''8 8 4 4\n1 2\n3 4\n5 6\n7 8\n1 2\n1 5\n2 3\n1 4\n1 6\n3 7\n4 8\n1 2\n1 5\n2 3\n1 6\n2 4\n2 7\n3 5\n3 8\n4 7\n4 6\n1 6\n2 4\n2 7\n3 5\n3 8\n4 7\n4 6''') == '16'\nassert solution('''4 2 4 2\n1 2\n3 4\n5 6\n7 8\n1 2\n1 5\n2 3\n1 4\n1 6\n3 7\n4 8\n1 2\n1 5\n2 3\n1 6\n2 4\n2 7\n3 5\n3 8\n4 7\n4 6\n1 6\n2 4\n2 7\n3 5\n3 8\n4 7\n4 6''') == '14'\n"
    },
    {
        "number": 3136,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"7 8 3 2\") == \"9\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"7 3 4\") == \"1\"\nassert solution(\"5 6\") == \"1\"\nassert solution(\"1 3 2\") == \"1\"\n"
    },
    {
        "number": 3137,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''3 4 2\n2 2\n3 4 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301''') == '7'\nassert solution(\n'''5 5 3\n2 2\n1 1 U\n000\n111\n000\n000\n111\n111\n000''') == '-1'\nassert solution(\n'''6 6 5\n2 2\n5 5 U\n000\n111\n000\n000\n111\n111\n000''') == '-1'\nassert solution(\n'''3 3 2\n1 1 U\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010\n010"
    },
    {
        "number": 3137,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''3 3 1\n2 2\n1 1 R\n010\n000\n000\n''') == '2'\n\nassert solution(\n'''3 4 2\n2 2\n3 4 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301\n''') == '7'\n"
    },
    {
        "number": 3137,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 4 2\n2 2\n3 4 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301''') == '7'\nassert solution('''1 1 U\n1 1 U\n2 2 R\n3 2 R\n4 3 D\n3 3 D\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1 1 R\n1"
    },
    {
        "number": 3137,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 4 2\\n2 2\\n1 1 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\\n') == '7'\nassert solution('1 1 R\\n010\\n000\\n000\\n') == '2'\nassert solution('3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000\\n') == '2'\nassert solution('3 3 2\\n2 2\\n1 1 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\\n') == '7'\nprint(solution('3 4 2\\n2 2\\n1 1 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\\n'))\nassert solution('3 4 2\\n2 2\\n1 1 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\\n') == '7'\n"
    },
    {
        "number": 3137,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 3 1\") == \"2\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"1 1 R\") == \"0\"\nassert solution(\"010\") == \"0\"\nassert solution(\"000\") == \"0\"\n"
    },
    {
        "number": 3137,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 4 2\n2 2\n1 1 R\n10\n0 9 0\n11 11 1\n0 0 0''') == '7'\nassert solution('''3 4 2\n2 2\n3 4 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301\n''') == '7'\nprint('All tests passed successfully.')\n"
    },
    {
        "number": 3137,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000\\n000') == '2'\nassert solution('3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301') == '7'\nassert solution('3 3 1\\n2 2\\n1 1 R\\n0110\\n000\\n000\\n000') == '-1'\nassert solution('3 3 1\\n2 2\\n1 1 R\\n1 1 U\\n0110\\n000\\n000\\n000') == '7'\nassert solution('3 3 1\\n2 2\\n1 1 R\\n10 10\\n000\\n000\\n000') == '-1'\n"
    },
    {
        "number": 3137,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 4 2\\n2 2\\n1 1 R\\n010\\n000\\n000\\n3 2 R\\n1310\\n2101\\n1301') == '7'\nassert solution('3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301') == '7'\nassert solution('3 4 2\\n2 2\\n1 1 R\\n010\\n000\\n000\\n3 2 R\\n1310\\n2101\\n1301') == '7'\nassert solution('3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301') == '7'\nassert solution('3 4 2\\n2 2\\n1 1 R\\n010\\n000\\n000\\n3 2 R\\n1310\\n2101\\n1301') == '7'\n"
    },
    {
        "number": 3137,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3137,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 3 1\n2 2\n1 1 R\n010\n000\n000\n''') == '2'\nassert solution('''3 4 2\n2 2\n3 4 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301\n''') == '7'\n'''\n"
    },
    {
        "number": 3138,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n2 2 1 2 3''') == '2'\nassert solution('''8\n1 2 4 1 1 2 5 1''') == '4'\n"
    },
    {
        "number": 3138,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n2') == '2'\nassert solution('5\\n2 1 2 3 4 1') == '4'\nassert solution('5\\n2 2 1 2 3') == '2'\nassert solution('5\\n2 2 1 2 3 4') == '4'\n"
    },
    {
        "number": 3138,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"5\n    2 2 1 2 3\"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"8\n    1 2 4 1 1 2 5 1\"\"\"\n) == \"4\"\n\nassert solution(\n    \"\"\"4\n    1 2 1 2\"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"8\n    1 2 1 1 2 1 2 1\"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"10\n    1 2 3 4 5 6 7 8 9 10\"\"\"\n) == \"2\""
    },
    {
        "number": 3138,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 4 1 1 2 5 1') == '4'\nassert solution('2 2 1 2 3') == '2'\nassert solution('4') == '0'\nassert solution('5') == '0'\nassert solution('8') == '0'\n"
    },
    {
        "number": 3138,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3138,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n2 2 1 2 3\\n') == '2'\nassert solution('8\\n1 2 4 1 1 2 5 1\\n') == '4'\nassert solution('1000\\n
    },
    {
        "number": 3138,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 2 1 2 3\\n2 1 2 1 2 3\") == \"4\"\nassert solution(\"4\\n1 2 1 2 3\\n3 2 1 2 1 3\") == \"4\"\nassert solution(\"4\\n1 2 1 2 3\\n1 1 1 1 1 3\") == \"2\"\nassert solution(\"5\\n1 2 1 2 3 1\\n2 1 2 1 2 3\") == \"2\"\nassert solution(\"8\\n1 2 4 1 1 2 5 1\\n1 1 1 1 1 1 3\") == \"4\"\n"
    },
    {
        "number": 3138,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n2 2 1 2 3''') == '2'\nassert solution('''8\n1 2 4 1 1 2 5 1''') == '4'\nassert solution('''3\n1 1 1''') == '1'\nassert solution('''6\n2 2 2 2 2 2''') == '1'\nassert solution('''7\n2 2 2 2 2 2 2''') == '2'\n"
    },
    {
        "number": 3138,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3138,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == str(solution(stdin))\n\"\"\"\n\n\nimport sys"
    },
    {
        "number": 3139,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('D 1 2') == 'NE'\nassert solution('P 1') == '1'\nassert solution('P 2') == '2'\nassert solution('P 3') == 'NE'\n"
    },
    {
        "number": 3139,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''D 1 1\nD 2 2\nD 3 3\nP 1\nP 2\nP 3''') == '1', \"Simple\"\nassert solution(\n'''D 1 2\nD 2 3\nP 1\nP 2\nP 3''') == '1', \"All\"\nassert solution(\n'''D 1 1\nD 2 1\nP 1\nP 2\nP 3''') == '1', \"1 & 2\"\nassert solution(\n'''D 1 1\nD 2 1\nP 1\nP 2\nP 3''') == '1', \"1 & 3\"\nassert solution(\n'''D 1 1\nD 2 1\nP 1\nP 2\nP 3''') == '2', \"1 & 3\"\n"
    },
    {
        "number": 3139,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\\\n6\nD 3 1\nD 2 2\nD 1 3\nP 1\nP 2\nP 3\n''') == 'NE'\nassert solution('''\\\n6\nD 8 8\nD 2 4\nD 5 6\nP 2\nD 6 2\nP 4\n''') == '3'\nassert solution('''\\\n7\nD 8 8\nD 2 4\nD 5 6\nP 2\nD 6 2\nP 4\n''') == '1'\nassert solution('''\\\n8\nD 8 8\nD 2 4\nD 5 6\nP 2\nD 6 2\nP 4\n''') == '5'\nassert solution('''\\\n8\nD 8 8\nD 2 4\nD 5 6\nP 2\nD 6 2\nP 4\n''') == '3'\n"
    },
    {
        "number": 3139,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"6\nD 3 1\nD 2 2\nD 1 3\nP 1\nP 2\nP 3\"\"\") == \"NE\"\nassert solution(\"\"\"6\nD 8 8\nD 2 4\nD 5 6\nP 2\nD 6 2\nP 4\"\"\") == \"3\"\n"
    },
    {
        "number": 3139,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6\\nD 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3') == 'NE\\nNE\\nNE'\nassert solution('2\\nD 1 1\\nP 1') == '1'\nassert solution('1\\nD 1 1\\nP 1') == '1'\nassert solution('6\\nD 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3') == '3\\n1\\n'\nassert solution('6\\nD 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 3\\nP 2') == '3\\n1\\n'\n"
    },
    {
        "number": 3139,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n    6\n    D 3 1\n    D 2 2\n    D 1 3\n    P 1\n    P 2\n    P 3\n''') == '3'\n\nassert solution('''\n    6\n    D 8 8\n    D 2 4\n    D 5 6\n    P 2\n    D 6 2\n    P 4\n''') == '1'\n\nassert solution('''\n    3\n    D 10\n    D 2 4\n    D 5 6\n    P 2\n    D 6 2\n    P 4\n''') == 'NE'\n\nassert solution('''\n    4\n    D 3\n    D 2 4\n    D 1 3\n    P 1\n    P 2\n    P 3\n    P 4\n''') == '2'\n\nassert solution('''\n    4\n    D 5\n    D 2 4\n    D 1 3\n    P 1\n    P 2\n    P 3\n    P 4\n''') == '1'"
    },
    {
        "number": 3139,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6\nD 3 1\nD 2 2\nD 1 3\nP 1\nP 2\nP 3''') == 'NE'\nassert solution('''6\nD 8 8\nD 2 4\nD 5 6\nP 2\nD 6 2\nP 4''') == '3'\nprint('Passed')\n'''"
    },
    {
        "number": 3139,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''D 1 2\nD 2 1\nD 3 4\nP 2''') == \"1\"\nassert solution('''D 1 2\nD 2 1\nD 3 4\nP 2''') == \"2\"\nassert solution('''D 1 2\nD 2 1\nD 3 4\nP 2''') == \"3\"\nassert solution('''D 1 2\nD 2 1\nD 3 4\nP 2''') == \"NE\"\nassert solution('''D 1 2\nD 2 1\nD 3 4\nP 1''') == \"1\"\n"
    },
    {
        "number": 3139,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('D 1 3\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\\n') == 'NE\\nNE\\nNE'\n\"\"\"\n\nfrom sys import stdin"
    },
    {
        "number": 3139,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n6\nD 3 1\nD 2 2\nD 1 3\nP 1\nP 2\nP 3\n'''\n    ) == '3'\n\nassert solution(\n'''\n6\nD 8 8\nD 2 4\nD 5 6\nP 2\nD 6 2\nP 4\n'''\n    ) == '1'\n\nassert solution(\n'''\n3\nD 1 1\nP 1\nP 1\n'''\n    ) == 'NE'\n\nassert solution(\n'''\n3\nD 1 1\nP 1\nP 1\n'''\n    ) == 'NE'\n\nassert solution(\n'''\n10\nD 1 1\nD 2 2\nD 1 3\nD 5 6\nP 2\nD 6 2\nP 4\nP 2\nP 2\nP 1\nP 2\nP 1\nD 1 1\nD 2 2\nD 1 3\n'''\n    ) == '2'"
    },
    {
        "number": 3140,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2 1 10\n0 0\n1 4\n3 2''') == '2'\nassert solution('''2 3 5 6\n1 1\n1 1 6\n1 2 2\n''') == '5'\nassert solution('''2 3 5 6\n1 1\n1 1 6\n1 2 2\n''') == '5'\nassert solution('''5 4 5 2\n1 1\n1 1 2\n1 1 2\n1 1 2\n1 1 2\n1 1 2\n1 1 2\n1 1 2\n''') == '7'\nassert solution('''5 4 5 2\n1 1\n1 1 2\n1 1 2\n1 1 2\n1 1 2\n1 1 2\n1 1 2\n1 1 2\n''') == '7'\n"
    },
    {
        "number": 3140,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 2 1 10\n0 0\n1 4\n3 2''') == '2'\nassert solution('''2 3 5 6\n1 1\n1 1 6\n1 2 2\n''') == '5'\nprint(solution('''3 3 1 10\n1 1\n1 2 2\n1 3 2\n2 1 3\n2 2 3\n3 2 1\n3 3\n'''))\nassert solution('''2 3 5 6\n1 1\n1 1 6\n1 2 2\n''') == '5'\nassert solution('''2 3 4 2\n1 1\n1 1 1\n1 2 2\n1 3 3\n1 4 4\n2 1 1\n2 2 3\n2 3 4\n''') == '6'\nassert solution('''2 3 4 2\n1 1\n1 1 1\n1 2 2\n1 3 3\n1 4 4\n2 1 1\n2 2 3\n2 3 4\n2 4 4\n''') == '4'\n"
    },
    {
        "number": 3140,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2 1 10\\n0 0\\n1 4\\n3 2') == '2'\nassert solution('2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\\n') == '5'\nassert solution('2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\\n3 1\\n') == '5'\nassert solution('2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\\n3 1\\n3 2\\n') == '5'\nassert solution('2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\\n3 1\\n3 2\\n3 3\\n') == '7'\n"
    },
    {
        "number": 3140,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') is None\nassert solution('1 2') == 2\nassert solution('1 1') == 1\nassert solution
    },
    {
        "number": 3140,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n2 3 5 6\n1 1\n1 1 6\n1 2 2\n\"\"\"\n) == \"5\"\nassert solution(\n\"\"\"\n5 4 3 2\n1 1\n1 1 2\n1 2 1\n1 3 1\n1 4 1\n\"\"\"\n) == \"4\"\nassert solution(\n\"\"\"\n9 5 3 2\n4 2\n5 2\n2 2\n4 3\n3 4\n3 5\n3 6\n3 7\n\"\"\"\n) == \"3\"\nassert solution(\n\"\"\"\n2 2 1 10\n0 0\n1 4\n3 2\n\"\"\"\n) == \"2\"\nassert solution(\n\"\"\"\n3 3 5 6\n1 1\n1 1 6\n1 2 2\n\"\"\"\n) == \"5\"\n"
    },
    {
        "number": 3140,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '2'\nassert solution('2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\\n') == '5'\nassert solution('2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\\n') == '5'\nassert solution('2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\\n') == '5'\nassert solution('2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\\n') == '5'\n"
    },
    {
        "number": 3140,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 2 1 10\n0 0\n1 4\n3 2''') == '2'\nassert solution('''2 3 5 6\n1 1\n1 1 6\n1 2 2\n''') == '5'\nassert solution('''2 2 1 10\n0 0\n1 4\n1 2 2\n1 2 2\n''') == '5'\nassert solution('''1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n''') == '1'\nassert solution('''1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n''') == '1'\n"
    },
    {
        "number": 3140,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '5'\n'''\n"
    },
    {
        "number": 3140,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 2 1 10\\n0 0\\n1 4\\n3 2') == '2'\nassert solution('1 1 6\\n1 2 2\\n1 1 6') == '5'\nassert solution('2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\\n1 1 6') == '5'\nassert solution
    },
    {
        "number": 3140,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n2 2 1 10\n0 0\n1 4\n3 2\n\"\"\") == \"5\"\n\nassert solution(\n\"\"\"\n2 3 5 6\n1 1\n1 1 6\n1 2 2\n\"\"\") == \"5\"\n\nassert solution(\n\"\"\"\n3 3 5 9\n0 0\n1 1 2\n2 3 2\n\"\"\") == \"7\"\n\nassert solution(\n\"\"\"\n3 3 5 9\n0 0\n1 1 1\n1 1 1\n\"\"\") == \"7\"\n\nassert solution(\n\"\"\"\n2 2 1 10\n0 0\n1 1\n1 2\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3141,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1.0 0.0 1.4\n-1.0 0.0 -1.4\n0.0 1.0 -0.2\n''') == '2.0000000000'\nassert solution('''5\n1.4 1.0 0.0\n-0.4 -1.0 0.0\n-0.1 -0.25 -0.5\n-1.2 0.0 0.9\n0.2 0.5 0.5\n''') == '2.0000000000'"
    },
    {
        "number": 3141,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''3\n1.0 0.0 1.4\n-1.0 0.0 -1.4\n0.0 1.0 -0.2\n'''\n) == '2.0000000000'\n\nassert solution(\n'''5\n1.4 1.0 0.0\n-0.4 -1.0 0.0\n-0.1 -0.25 -0.5\n-1.2 0.0 0.9\n0.2 0.5 0.5\n'''\n) == '2.0000000000'\n\nassert solution(\n'''4\n-1.0 0.0 1.4\n1.0 0.0 -1.4\n0.0 1.0 -0.2\n-1.3 0.5 0.0\n'''\n) == '0.50000'\n\nassert solution(\n'''4\n1.0 0.0 1.4\n1.0 0.0 -1.4\n0.0 1.0 -0.2\n1.3 0.5 0.0\n'''\n) == '0.50000'\n\nassert solution(\n'''2\n1.0 0.0 1.4\n1.0 0.0 -1.4\n-0.2 1.0 -0.2\n-0.5 0.0 -0.5\n'''\n) == '1.0000000000'"
    },
    {
        "number": 3141,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n1.0 0.0 1.4\n-1.0 0.0 -1.4\n0.0 1.0 -0.2''') == \"2.0000000000\"\nassert solution('''5\n1.4 1.0 0.0\n-0.4 -1.0 0.0\n-0.1 -0.25 -0.5\n-1.2 0.0 0.9\n0.2 0.5 0.5''') == \"2.0000000000\"\n\nprint('Passed!')\n\n\"\"\"\n"
    },
    {
        "number": 3141,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1.4\\n-1.0\\n-0.4\\n-0.1\\n-1.2\\n0.2\\n0.5\\n0.5') == '2.0000000000'\nassert solution('1.4\\n-1.0\\n-0.4\\n-0.1\\n-1.2\\n0.2\\n0.5\\n0.5') == '2.0000000000'\nassert solution('1.4\\n-1.0\\n-0.4\\n-0.1\\n-1.2\\n0.2\\n0.5\\n0.5') == '2.0000000000'\nassert solution('1.4\\n-1.0\\n-0.4\\n-0.1\\n-1.2\\n0.2\\n0.5\\n0.5') == '2.0000000000'\nassert solution('1.4\\n-1.0\\n-0.4\\n-0.1\\n-1.2\\n0.2\\n0.5\\n0.5') == '2.0000000000'\n"
    },
    {
        "number": 3141,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n1.0 0.0 1.4\n-1.0 0.0 -1.4\n0.0 1.0 -0.2''') == '2.0000000000'\nassert solution('''5\n1.4 1.0 0.0\n-0.4 -1.0 0.0\n-0.1 -0.25 -0.5\n-1.2 0.0 0.9\n0.2 0.5 0.5''') == '2.0000000000'\nassert solution('''10\n-8.6 10.0 -7.3\n3.2 -1.2 -2.2\n5.8 -3.2 -5.6\n2.2 -2.5 -2.4\n-8.1 -5.6 -4.3\n-3.3 -1.5 -2.1\n-1.2 -0.8 -0.9\n1.4 -0.5 -0.3\n-0.8 -1.5 -1.1\n0.0 -1.0 -1.2\n-1.0 -1.5 -0.3\n1.0 -0.2 -0.5\nSample Output 2:\n2.6000000000000\n''') == '2.6000000000000'\nassert solution('''20\n-17.9 -2.3 -4.1\n2.8 -1.7 -3.9\n-3.0 -1.4 -4.2\n4.4 -0.9 -3.7\n-2.7 -2.0 -3.3\n-3.8 -0.7 -4.3\n1.7 -1.1 -2.6\n-0.3 -2.6 -1.5\n2.1 -1.7 -1.0\n-1.6 -0.7 -0.5\n-1.9 -0.1 -0.8\n-0.5 -0.8 -0.9\n0.1 -0.9 -1.0\n-0.7 -1.1 -1.4\n1.1 -0.9 -1.2\n0.9 -1.4 -1.1\n-1.4 -0.9 -0.9\n-0.5 -1.0 -0.9\n-1.4 -1.1 -0.8\n-1.1 -1.4 -0.8\n-1.4 -0.9 -0.7\n0.6 -0.9 -0.5\n-1.2 -1.5 -0.6\n1.4 -0.8 -0.7\n1.2 -1.4 -0.5\n1.2 -1.0 -0.6\n-0.6 -1.1 -0.4\n0.9 -1.2 -0.4\n-1.1 -0.5 -0.3\n-0.9 -0.7 -0.3\n1.2 -1.2 -0.4\n0.2 -0.7 -0.3\n1.0 -1.0 -0.4\n-0.8 -0.9 -0.4\n-0.3 -1.1 -0.4\n0.0 -1.2 -0.3\n-1.0 -1.0 -0.2\n0.0 -1.1 -0.2\n1.0 -0.7 -0.1\n-1.1 -0.9 -0.2\n-0.7 -1.0 -0.1\n0.0 -1.4 -0.1\n-1.0 -1.5 -0.1\n-0.9 -1.0 -0.2\n-1.1 -1.1 -0.2\n0.8 -1.2 -0.2\n-1.0 -1.3 -0.2\n1.3 -1.0 -0.2\n1.3 -0.8 -0.2\n1.1 -1.1 -0.1\n0.7 -1.2 -0.1\n1.0 -1.3 -0.1\n0.2 -1.4 -0.1\n0.0 -1.4 -0.1\n0.5 -1.5 -0.1\n0.5 -1.0 -0.1\n0.4 -1.3 -0.1\n0.5 -1.5 -0.1\n0.1 -1.2 -0.3\n0.0 -1.3 -0.3\n0.5 -1.5 -0.3\n0.8 -1.0 -0.3\n0.1 -1.4 -0.3\n0.1 -1.1 -0.3\n1.1 -1.1 -0.2\n-0.2 -0.5 -0.4\n-0.8 -0.7 -0.4\n-0.9 -0.7 -0.4\n-1.2 -0.9 -0.4\n-1.0 -1.3 -0.4\n-0.2 -1.4 -0.4\n-0.5 -1.5 -0.4\n-0.3 -1.1 -0.4\n-0.1 -1.1 -0.4\n-1.2 -1.0 -0.4\n-0.7 -1.0 -0.4\n-0.8 -0.9 -0.4\n-0.9 -0.8 -0.4\n-0.8 -1.0 -0.4\n-1.2 -0.9 -0.4\n-1.1 -0.8 -0.4\n-1.0 -1.3 -0.4\n-0.9 -1.2 -0.4\n-0.8 -1.2 -0.4\n-0.9 -1.1 -0.4\n-1.1 -1.0 -0.4\n-0.7 -1.2 -0.4\n-1.0 -1.3 -0.4\n-0.2 -1.4 -0.4\n-0.5 -1.5 -0.4\n-0.3 -1.1 -0.4\n-0.1 -1.1 -0.4\n-1.2 -1.0 -0.4\n-0.7 -1.0 -0.4\n-0.8 -0.9 -0.4\n-0.9 -0.8 -0.4\n-0.8 -1.0 -0.4\n-1.2 -0.9 -0.4\n-1.1 -"
    },
    {
        "number": 3141,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1.4 0.0 1.4') == '2.0000000000'\nassert solution('2\\n1.4 1.0 0.0\\n-1.4 -1.0 0.0') == '2.0000000000'\nassert solution('3\\n1.4 0.0 1.4\\n-1.4 -1.0 0.0\\n0.0 1.0 -0.2') == '2.0000000000'\nassert solution('4\\n1.4 1.0 0.0\\n-1.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9') == '2.0000000000'\nassert solution('5\\n1.4 1.0 0.0\\n-1.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5') == '2.0000000000'\n"
    },
    {
        "number": 3141,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2') == '2.0000000000'\nassert solution('3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\\n-1.2 0.0 0.9\\n0.2 0.5 0.5') == '2.0000000000'\nassert solution('4\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5\\n-0.4 0.0 0.8\\n1.0 0.0 1.4') == '2.0000000000'\nassert solution('2\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4') == '2.0000000000'\nassert solution('3\\n0.0 1.0 -0.2\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2') == '2.0000000000'\n"
    },
    {
        "number": 3141,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\n\n\"\"\"\nfrom math import sqrt\nfrom sys import stdin\nfrom numpy import array, linalg\n"
    },
    {
        "number": 3141,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n1.0 0.0 1.4\n-1.0 0.0 -1.4\n0.0 1.0 -0.2''') == '2.0000000000'\nassert solution('''5\n1.4 1.0 0.0\n-0.4 -1.0 0.0\n-0.1 -0.25 -0.5\n-1.2 0.0 0.9\n0.2 0.5 0.5''') == '2.0000000000'\nassert solution('''6\n1.0 0.0 1.4\n-1.0 0.0 -1.4\n0.0 1.0 -0.2\n1.1 0.1 0.5\n0.0 0.0 -0.2\n0.5 0.5 0.0''') == '1.85714285714'\nassert solution('''7\n1.0 0.0 1.4\n-1.0 0.0 -1.4\n0.0 1.0 -0.2\n1.1 0.1 0.5\n0.0 0.0 -0.2\n0.5 0.5 0.0\n0.4 0.4 0.3''') == '1.85714285714'\nassert solution('''6\n0.0 0.0 1.4\n-0.0 0.0 -1.4\n-0.1 -0.25 -0.5\n-1.2 0.0 0.9\n0.2 0.5 0.5\n1.5 0.5 0.5''') == '2.0000000000'\n"
    },
    {
        "number": 3141,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2') == '2.0000000000'\nassert solution('3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\\n1.0 1.0 0.0\\n0.0 0.0 0.0') == '2.0000000000'\nassert solution('3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\\n1.0 1.0 1.0\\n0.0 0.0 1.0') == '6.0000000000'\nassert solution('3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\\n1.0 1.0 0.0\\n0.0 0.0 1.0\\n1.0 1.0 1.0') == '2.0000000000'\nassert solution('3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\\n1.0 1.0 0.0\\n0.0 0.0 1.0\\n1.0 1.0 1.0\\n0.0 0.0 0.0') == '2.0000000000'\n"
    },
    {
        "number": 3142,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3142,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 3142,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input().split()) == stdout\n"
    },
    {
        "number": 3142,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 9 5\\n1 10 1\\n') == '1\\n5\\n'\nassert solution('1 100 10\\n1 100 1\\n') == '9\\n19\\n'\nassert solution('1 1000 10\\n1 100 9\\n') == '9\\n19\\n'\nassert solution('1 1001 10\\n1 100 10\\n') == '1\\n5\\n'\nassert solution('1 10001 10\\n1 100 1\\n') == '9\\n19\\n'\n\n\"\"\"\n"
    },
    {
        "number": 3142,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''1 9 5'''\n) == '1\\n5'\n\nassert solution(\n'''1 100 10'''\n) == '9\\n19'\n"
    },
    {
        "number": 3142,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\"\nassert solution(\"1 100 10\") == \"9\\n19\"\n\nprint(solution(stdin))\n"
    },
    {
        "number": 3142,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 9 5''') == '1\\n5'\nassert solution('''1 100 10''') == '9\\n19'\nassert solution('''6 10 100''') == '1\\n4'\nassert solution('''2 9 1''') == '2\\n2'\nassert solution('''2 9 5''') == '2\\n5'\n"
    },
    {
        "number": 3142,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n1 9 5\n\"\"\") == '1\\n5\\n'\nassert solution(\n\"\"\"\n1 100 10\n\"\"\") == '9\\n19\\n'\nassert solution(\n\"\"\"\n1 1 1\n\"\"\") == '1\\n1\\n'\nassert solution(\n\"\"\"\n1 2 2\n\"\"\") == '1\\n2\\n'\nassert solution(\n\"\"\"\n1 10 2\n\"\"\") == '1\\n2\\n'\n"
    },
    {
        "number": 3142,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 9 5\\n') == '1\\n5'\nassert solution('1 100 10\\n') == '9\\n19'\nprint(\"Success!! Testcases passed.\")\n"
    },
    {
        "number": 3142,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output\nprint(\"Test success.\")\n"
    },
    {
        "number": 3143,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3143,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3143,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1\\n1\") == \"1\\n1\"\nassert solution(\"1\\n1\\n1\") == \"1\\n1\"\nassert solution(\"2\\n1\\n1\") == \"1\\n1\"\nassert solution(\"2\\n1\\n1\") == \"1\\n1\"\nassert solution(\"5\\n1\\n1\") == \"1\\n1\"\n"
    },
    {
        "number": 3143,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3143,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('3\\n2 3 1') == '2'\nassert solution('3\\n1 1 2') == '2'\nassert solution('3\\n3 1 2') == '1'\nassert solution('3\\n1 3 2') == '2'\n"
    },
    {
        "number": 3143,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3143,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n1\\n1\\n\") == \"1\"\nassert solution(\"3 2\\n1 2 3\") == \"3\"\nassert solution(\"1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1 1\\n1\\n1\\n\") == \"1\"\nassert solution(\"3 2\\n2 3 1\") == \"3\"\n"
    },
    {
        "number": 3143,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('2 1\\n1') == '1'\nassert solution('2\\n1\\n1') == '1'\nassert solution('2\\n1\\n2') == '1'\n"
    },
    {
        "number": 3143,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 1''') == '1'\nassert solution('''2 2''') == '1'\nassert solution('''2 3''') == '1'\nassert solution('''2 4''') == '1'\nassert solution('''3 4''') == '1'\n"
    },
    {
        "number": 3143,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 1\n1\n1''') == '1'\nassert solution('''2 3\n1 2 3\n2 3 1''') == '1 2 3'\nassert solution('''7 6\n5 4 3 6 1 7 1''') == '1 2 4 5'\nassert solution('''7 8\n5 4 3 6 1 7 1 5 2 6\n2 4 5 1 2 3 4 1 3 3''') == '1 2 4 5 6 7 8'\nassert solution('''10 11\n1 2 3 4 5 6 7 8 9 10 11\n1 2 3 4 5 6 7 8 9 10 11''') == '1 2 4 5 6 7 8 9 10 11'\n\nprint('All tests passed successfully.')"
    },
    {
        "number": 3144,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 10 3 2') == '4'\nassert solution('10 10 5 0') == '10'\nprint(solution('2 10 3 2'))\nprint(solution('10 10 5 0'))\n\"\"\"\n"
    },
    {
        "number": 3144,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 10 3 2') == 4\nassert solution('10 10 5 0') == 10\nassert solution('10 10 3 2') == 4\nassert solution('10 10 3 0') == 10\nassert solution('10 10 5 0') == 10\n"
    },
    {
        "number": 3144,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3144,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n"
    },
    {
        "number": 3144,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3144,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3144,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 10 3 2''') == '4'\nassert solution('''10 10 5 0''') == '10'"
    },
    {
        "number": 3144,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 10 3 2') == '4'\nassert solution('10 10 5 0') == '10'\n\"\"\"\n\"\"\"\n1. 1 and 2\n2. (1-1) and 3\n3. (1-2) and 4\n4. (2-1) and 4\n5. (1-3) and 4\n6. (2-1) and 4\n7. (1-4) and 4\n8. (2-2) and 4\n9. (1-4) and 4\n10. (2-3) and 4\n11. (1-4) and 4\n12. (2-3) and 4\n13. (1-4) and 4\n14. (2-4) and 4\n15. (1-4) and 4\n16. (2-4) and 4\n17. (1-4) and 4\n18. (2-5) and 4\n19. (1-4) and 4\n20. (2-5) and 4\n21. (1-4) and 4\n22. (2-5) and 4\n23. (1-4) and 4\n24. (2-5) and 4\n25. (1-4) and 4\n26. (2-5) and 4\n27. (1-4) and 4\n28. (2-5) and 4\n29. (1-4) and 4\n30. (2-5) and 4\n31. (1-4) and 4\n32. (2-5) and 4\n33. (1-4) and 4\n34. (2-5) and 4\n35. (1-4) and 4\n36. (2-5) and 4\n37. (1-4) and 4\n38. (2-5) and 4\n39. (1-4) and 4\n40. (2-5) and 4\n41. (1-4) and 4\n42. (2-5) and 4\n43. (1-4) and 4\n44. (2-5) and 4\n45. (1-4) and 4\n46. (2-5) and 4\n47. (1-4) and 4\n48. (2-5) and 4\n49. (1-4) and 4\n50. (2-5) and 4\n51. (1-4) and 4\n52. (2-5) and 4\n53. (1-4) and 4\n54. (2-5) and 4\n55. (1-4) and 4\n56. (2-5) and 4\n57. (1-4) and 4\n58. (2-5) and 4\n59. (1-4) and 4\n60. (2-5) and 4\n61. (1-4) and 4\n62. (2-5) and 4\n63. (1-4) and 4\n64. (2-5) and 4\n65. (1-4) and 4\n66. (2-5) and 4\n67. (1-4) and 4\n68. (2-5) and 4\n69. (1-4) and 4\n70. (2-5) and 4\n71. (1-4) and 4\n72. (2-5) and 4\n73. (1-4) and 4\n74. (2-5) and 4\n75. (1-4) and 4\n76. (2-5) and 4\n77. (1-4) and 4\n78. (2-5) and 4\n79. (1-4) and 4\n80. (2-5) and 4\n81. (1-4) and 4\n82. (2-5) and 4\n83. (1-4) and 4\n84. (2-5) and 4\n85. (1-4) and 4\n86. (2-5) and 4\n87. (1-4) and 4\n88. (2-5) and 4\n89. (1-4) and 4\n90. (2-5) and 4\n91. (1-4) and 4\n92. (2-5) and 4\n93. (1-4) and 4\n94. (2-5) and 4\n95. (1-4) and 4\n96. (2-5) and 4\n97. (1-4) and 4\n98. (2-5) and 4\n99. (1-4) and 4\n100. (2-5) and 4\n101. (1-4) and 4\n102. (2-5) and 4\n103. (1-4) and 4\n104. (2-5) and 4\n105. (1-4) and 4\n106. (2-5) and 4\n107. (1-4) and 4\n108. (2-5) and 4\n109. (1-4) and 4\n110. (2-5) and 4\n111. (1-4) and 4\n112. (2-5) and 4\n113. (1-4) and 4\n114. (2-5) and 4\n115. (1-4) and 4\n116. (2-5) and 4\n117. (1-4) and 4\n118. (2-5) and 4\n119. (1-4) and 4\n120. (2-5) and 4\n121. (1-4) and 4\n122. (2-5) and 4\n123. (1-4) and 4\n124. (2-5) and 4\n125. (1-4) and 4\n126. (2-5) and 4\n127. (1-4) and 4\n128. (2-5) and 4\n129. (1-4) and 4\n130. (2-5) and 4\n131. (1-4) and 4\n132. (2-5) and 4\n133. (1-4) and 4\n134. (2-5) and 4\n135. (1-4) and 4\n136. (2-5) and 4\n137. (1-4) and 4\n138. (2-5) and 4\n139. (1-4) and 4\n140. (2-5) and 4\n141. (1-4) and 4\n142. (2-5) and 4\n143. (1-4) and 4\n144. (2-5) and 4\n145. (1-4) and 4\n146. (2-5) and 4\n147. (1-4) and 4\n148. (2-5) and 4\n149. (1-4) and 4\n150. (2-5) and 4"
    },
    {
        "number": 3144,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3144,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 3145,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(open(\"test_input.txt\", \"r\").read()) == \"112\"\n"
    },
    {
        "number": 3145,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 1 20\") == \"10\"\nassert solution(\"6 100 9294\") == \"111\"\n"
    },
    {
        "number": 3145,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 1 20\n0123456789''') == \"10\"\nassert solution('''6 100 9294\n23689''') == \"111\"\nassert solution('''1 2 3\n0123456789''') == \"10\"\nassert solution('''2 2 10\n11111111''') == \"1\"\nassert solution('''20 100 9294\n23689''') == \"1\"\n"
    },
    {
        "number": 3145,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 1 2 3 4 5 6 7 8 9 9 9 9 9\") == 10\nassert solution(\"1 1 2 3 4 5 6 7 8 9 9 9 9 9 9\") == 111\nassert solution(\"2 1 3 4 5 6 7 8 9 9 9 9 9 9\") == 9\nassert solution(\"2 1 3 4 5 6 7 8 9 9 9 9 9 9\") == 9\nassert solution(\"2 1 2 3 4 5 6 7 8 9 9 9 9 9\") == 9\n"
    },
    {
        "number": 3145,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('3') == ''\nassert solution('4') == ''\n"
    },
    {
        "number": 3145,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''2 1 20\n0123456789'''\n) == '10'\n\nassert solution(\n'''6 100 9294\n23689'''\n) == '111'\n"
    },
    {
        "number": 3145,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3145,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 1 20\\n0123456789\\n\") == \"10\"\nassert solution(\"6 100 9294\\n23689\\n\") == \"111\""
    },
    {
        "number": 3145,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 1 20\\n0123456789') == '10'\nassert solution('6 100 9294\\n23689') == '111'\nassert solution('1 1 1\\n1') == '0'\nassert solution('6 100 9293\\n23689') == '110'\nassert solution('1 1 1\\n1') == '0'\n"
    },
    {
        "number": 3145,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(open(\"input/01.txt\").read()) == open(\"output/01.txt\").read().strip()\n"
    },
    {
        "number": 3146,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    '''5 3\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1''') == '1.500000 2.666667'\nassert solution(\n    '''5 2\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1''') == '1.500000 3.666667'\nassert solution(\n    '''5 3\n1 R 4\n2 S 2\n3 S 2\n4 S 2\n5 S 1''') == '1.500000 2.666667'\nassert solution(\n    '''5 3\n1 S 2\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1''') == '1.500000 2.666667'\nassert solution(\n    '''5 3\n1 R 2\n1 S 2\n2 S 2\n3 S 2\n4 S 2\n5 S 1''') == '1.000000 2.666667'\n"
    },
    {
        "number": 3146,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n') == '1.500000 2.666667'\nassert solution('5 2\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n') == '1.500000 3.666667'\nassert solution('5 4\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n') == '2.500000 4.333333'\nassert solution('5 4\\n1 R 4\\n2 R 2\\n3 S 2\\n4 S 2\\n5 S 1\\n') == '2.333333 4.000000'\nassert solution('5 4\\n1 R 4\\n2 R 2\\n3 S 2\\n4 S 1\\n5 S 1\\n') == '2.333333 4.000000'\n"
    },
    {
        "number": 3146,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"1.5 1.5\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 3146,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 3\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1''') == '1.500000 2.666667'\nassert solution('''5 2\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1''') == '1.500000 3.666667'\nassert solution('''4 2\n1 R 2\n2 R 2\n3 R 2\n4 S 2\n5 S 1''') == '0'\nassert solution('''5 2\n1 R 2\n2 R 2\n3 S 2\n4 S 2\n5 S 1''') == '0'\nassert solution('''4 2\n1 R 2\n2 S 2\n3 S 2\n4 S 2\n5 S 1''') == '0'\n"
    },
    {
        "number": 3146,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\\n\") == \"1.000000 2.666667\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 3146,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n') == '1.500000 2.666667'\nassert solution('5 2\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n') == '1.500000 3.666667'\nassert solution('5 1\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n') == '1.500000 3.666667'\nassert solution('5 1\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n') == '1.500000 3.666667'\nassert solution('1 5\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n') == '1.500000 3.666667'\n"
    },
    {
        "number": 3146,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n\") == \"1.500000 2.666667\"\nassert solution(\"1 2\\n1 S 2\\n2 S 1\\n\") == \"1.500000 3.666667\"\nassert solution(\"2 2\\n1 R 2\\n2 S 2\\n\") == \"1.500000 2.666667\"\nassert solution(\"2 2\\n1 S 2\\n2 S 1\\n\") == \"1.500000 3.666667\"\nassert solution(\"2 2\\n1 R 2\\n2 S 2\\n\") == \"1.500000 2.666667\"\n"
    },
    {
        "number": 3146,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n5 3\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1\n''') == '1.500000 2.666667'\nassert solution('''\n5 2\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1\n''') == '1.500000 3.666667'\nassert solution('''\n0 2\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1\n''') == '0.500000 1.25'\nassert solution('''\n5 2\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1\n''') == '1.500000 2.666667'\nassert solution('''\n5 2\n1 R 4\n2 R 2\n3 R 2\n4 R 2\n5 R 2\n''') == '1.500000 2.333333'\n"
    },
    {
        "number": 3146,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == '1.0\\n1.0'\nassert solution('1\\n2\\n3\\n4\\n5') == '1.0\\n3.0'\nassert solution('1\\n1\\n1\\n1\\n1') == '0.0\\n0.0'\nassert solution('2\\n1\\n2\\n3\\n4\\n5') == '1.0\\n3.0'\nassert solution('2\\n2\\n3\\n4\\n5\\n6') == '2.0\\n3.0'\n"
    },
    {
        "number": 3146,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '1.500000 2.666667'\nassert solution(stdin) == '1.500000 3.666667'\nassert solution(stdin) == '1.500000 3.666667'\nassert solution(stdin) == '1.500000 3.666667'\nassert solution(stdin) == '1.500000 3.666667'\n"
    },
    {
        "number": 3147,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 6\n101010\n111001\n101001\n''') == '3'\nassert solution('''4 5\n10010\n01010\n10101\n01001\n''') == '-1'\n'''"
    },
    {
        "number": 3147,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 6\n101010\n111001\n101001''') == '3'\nassert solution('''4 5\n10010\n01010\n10101\n01001''') == '3'\nassert solution('''2 1\n00\n1''') == '1'\nassert solution('''2 2\n11\n11\n''') == '-1'\nassert solution('''2 1\n11\n11\n11\n''') == '-1'\n"
    },
    {
        "number": 3147,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n3\n101010\n111001\n101001\n''') == '3'\nassert solution('''3\n3\n101010\n111001\n101001\n''') == '3'\nassert solution('''6\n6\n101010\n111001\n101001\n01010\n01001\n''') == '3'\nassert solution('''4\n4\n101010\n111001\n101001\n01010\n01001\n''') == '-1'\nassert solution('''7\n7\n101010\n111001\n101001\n01010\n01001\n01010\n01001\n''') == '4'\n"
    },
    {
        "number": 3147,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 6\n101010\n111001\n101001''') == '3'\nassert solution('''4 5\n10010\n01010\n10101\n01001''') == '-1'\nassert solution('''9 3\n000000000\n000000000\n000000000\n000000000\n000000000\n000000000\n000000000\n000000000\n000000000''') == '4'\nassert solution('''10 10\n1010101010\n1110111011\n1110111011\n1010101010\n0000110000\n0000110000\n0000110000\n0000110000\n0000110000\n0000110000\n0000110000''') == '4'\nassert solution('''15 15\n000000000\n000000000\n000000000\n000000000\n000000000\n000000000\n000000000\n000000000\n000000000\n000000000\n000000000\n000000000\n000000000\n000000000''') == '3'\n"
    },
    {
        "number": 3147,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10010') == 3\nassert solution('11101') == 3\nassert solution('11110') == 3\nassert solution('10100') == 2\nassert solution('11110') == -1\n"
    },
    {
        "number": 3147,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 6\") == \"\"\nassert solution(\"3 5\") == \"\"\nassert solution(\"3 1\") == \"\"\nassert solution(\"1 1\") == \"\"\n"
    },
    {
        "number": 3147,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 6\n101010\n111001\n101001''') == '3'\nassert solution('''4 5\n10010\n01010\n10101\n01001''') == '3'\nassert solution('''4 6\n101010\n111001\n101001\n01010\nSample Output 2:\n-1''') == '-1'\nassert solution('''1 1\n1 1''') == '1'\nassert solution('''1 1\n1 1''') == '1'\n"
    },
    {
        "number": 3147,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 6\n101010\n111001\n101001''') == '3'\n\nassert solution('''4 5\n10010\n01010\n10101\n01001''') == '3'\n\nassert solution('''10 10\n111111011111110\n111111011111110\n111111011111110\n111111011111110\n111111011111110\n111111011111110\n111111011111110\n111111011111110\n111111011111110\n111111011111110''') == '9'\n\nassert solution('''10 10\n111111011111110\n111111011111110\n111111011111110\n111111011111110\n111111011111110\n111111011111110\n111111011111110\n111111011111110\n111111011111110\n111111011111110''') == '1'\n\nassert solution('''10 10\n000000000\n000000000\n000000000\n000000000\n000000000\n000000000\n000000000\n000000000\n000000000\n000000000\n000000000\n000000000''') == '-1'"
    },
    {
        "number": 3147,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''1 2\n0 1 0\n0 0 1\n0 1 0\n1 0 0\n1 0 1'''\n) == '3'\n\nassert solution(\n'''2 3\n011010\n01010\n01001\n011010\n01010\n01010\n011010'''\n) == '2'\n\nassert solution(\n'''10 10\n1 0 0 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3147,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0\\n0\\n0\\n0\\n0\\n0\\n0\\n0') == '0'\nassert solution('0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0') == '0'\nassert solution('0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0') == '0'\nassert solution('0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0') == '0'\nassert solution('0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0') == '0'\n"
    },
    {
        "number": 3148,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0') == '-3 1\\n3 1'\nassert solution('5\\n2 4\\n6 -1\\n3 5\\n-1 -1\\n') == '3 4\\n3 -1\\n'\nassert solution('5\\n-2 4\\n6 -1\\n3 5\\n-1 -1\\n') == '3 4\\n3 -1\\n'\nassert solution('7\\n-2 4\\n6 -1\\n3 5\\n-1 -1\\n5 2\\n-1 -1\\n') == '3 4\\n3 -1\\n5 2\\n'\nassert solution('5\\n-1 4\\n3 5\\n-1 -1\\n4 -1\\n-1 1\\n') == '3 4\\n3 -1\\n4 -1\\n'\n"
    },
    {
        "number": 3148,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 0') == '-3 -1'\nassert solution('0 1') == '3 1'\nassert solution('1 0') == '-3 1'\nassert solution('0 -1') == '3 -1'\nassert solution('-1 0') == '-3 -1'\n"
    },
    {
        "number": 3148,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"5\n0 0\n0 1\n1 0\n0 -1\n-1 0\"\"\") == \"-3 -1\"\n\nassert solution(\n    \"\"\"5\n2 4\n6 -1\n3 5\n-1 -1\"\"\") == \"3 4\"\n\nassert solution(\n    \"\"\"5\n7 10\n-1 -2\n5 2\n-1 -1\n3 7\n1 4\n5 -1\n1 4\n-1 -1\n5 7\n-1 4\n1 4\n-1 -1\n-1 5\n2 5\n-1 -1\n-1 -2\n-2 -1\"\"\") == \"-1 4\"\n\nassert solution(\n    \"\"\"3\n3 1\n-1 -2\n3 2\n-1 -2\n2 3\n1 2\n-1 -2\"\"\") == \"2 3\"\n\nassert solution(\n    \"\"\"3\n0 1\n-1 -2\n0 2\n-1 -2\n2 3\n1 2\n-1 -2\"\"\") == \"1 2\"\n"
    },
    {
        "number": 3148,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3148,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n0 0\n0 1\n1 0\n0 -1\n-1 0''') == '-3 1'\n\nassert solution('''6\n2 4\n6 -1\n3 5\n-1 -1\n''') == '3 4'\n"
    },
    {
        "number": 3148,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n0 0\n0 1\n1 0\n0 -1\n-1 0''') == '-3 -1'\nassert solution('''4\n2 4\n6 -1\n3 5\n-1 -1''') == '3 4'\nassert solution('''6\n-1\n-1\n3\n5\n4\n2\n1\n0\n-1\n1\n-1\n0\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-"
    },
    {
        "number": 3148,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n0 0\n0 1\n1 0\n0 -1\n-1 0''') == '-3 -1'\nassert solution('''4\n2 4\n6 -1\n3 5\n-1 -1''') == '3 4'\nassert solution('''10\n99999 99999\n99999 100000\n99999 99999\n99998 100000\n99998 100000\n99998 100000\n99997 100000\n99997 100000\n99997 100000\n99997 100000\n99996 100000''') == '3 4'\n"
    },
    {
        "number": 3148,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5\\n0 0\\n0 1\\n1 0\\n0 -1\") == \"3 1\"\nassert solution(\"4\\n2 4\\n6 -1\\n3 5\\n-1 -1\") == \"3 4\"\nassert solution(\"4\\n2 4\\n6 1\\n3 5\\n-1 -1\") == \"3 4\"\nassert solution(\"4\\n2 4\\n6 -1\\n3 5\\n-1 -1\") == \"3 4\"\nassert solution(\"4\\n2 4\\n6 -1\\n3 5\\n-1 -1\") == \"3 4\"\n"
    },
    {
        "number": 3148,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 3\\n0 2\") == \"0 -1\\n2 3\"\nassert solution(\"5\\n3 2\\n0 4\\n0 1\\n1 0\\n1 1\\n2 0\") == \"-3 -1\\n2 3\\n4 1\\n0 -1\"\nassert solution(\"5\\n1 -3\\n3 1\\n0 4\\n-1 -1\\n2 0\") == \"0 -3\\n1 3\\n2 -1\\n4 1\"\nassert solution(\"5\\n1 0\\n1 0\\n0 -1\\n-1 0\\n-1 -1\") == \"-3 -1\\n2 3\\n0 2\\n0 -1\"\nassert solution(\"5\\n1 0\\n0 0\\n0 0\\n0 0\") == \"-3 -1\\n1 0\\n0 0\\n0 0\"\n"
    },
    {
        "number": 3148,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n0 0\n0 1\n1 0\n0 -1\n-1 0''') == '-3 -1'\nassert solution('''6\n2 4\n6 -1\n3 5\n-1 -1\nSample Output 2:\n3 4\n3 -1\n''') == '3 4'"
    },
    {
        "number": 3149,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''3 6 5 45 20\n0 0\n2 0\n1 1.5''') == '2 5.086781'\n\nassert solution(\n'''3 1.5 2 45 20\n0 0\n2 0\n1 1.5''') == '1 12.715255'\n\nassert solution(\n'''3 0.25 2 45 20\n0 0\n2 0\n1 1.5''') == '1 12.715255'\n"
    },
    {
        "number": 3149,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 6 5 45 20\n0 0\n2 0\n1 1.5''') == '2 5.086781'\nassert solution('''3 0.25 2 45 20\n0 0\n2 0\n1 1.5''') == '1 12.715255'\n'''\nNotes\nThe two test cases in the second one were given as a single line, so they are converted to two separate lines.\n'''\n"
    },
    {
        "number": 3149,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 0 10 1 5\\n1 0\\n0 0') == '1 5.086781'\nassert solution('2 0 10 1 1\\n1 0\\n0 0') == '1 6.917081'\nassert solution('1 0 10 1 5\\n0 0\\n2 0\\n1 1.5') == '1 5.086781'\nassert solution('1 0 10 1 5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5') == '1 5.086781'\n\nprint(solution(input()))"
    },
    {
        "number": 3149,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\"
    },
    {
        "number": 3149,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 6 5 45 20\n0 0\n2 0\n1 1.5\n''') == '2 5.086781'\nassert solution('''3 0.25 2 45 20\n0 0\n2 0\n1 1.5\n''') == '1 12.715255'\nassert solution('''3 0.25 2 45 20\n0 0\n2 0\n1 1.5\n''') == '1 12.715255'\nassert solution('''3 0.25 2 45 20\n1 1.5\n2 0\n1 1.5\n''') == '1 12.715255'\nassert solution('''3 0.25 2 45 20\n1 1.5\n2 0\n1 1.5\n''') == '1 12.715255'\n"
    },
    {
        "number": 3149,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 1 5 45 20\\n0 0\\n2 0\\n1 1.5\\n') == '2 5.086781'\nassert solution('2 2 5 45 20\\n0 0\\n2 0\\n1 1.5\\n') == '1 12.715255'\nassert solution('3 2 5 45 20\\n0 0\\n2 0\\n1 1.5\\n') == '1 12.715255'\nassert solution('3 1 5 45 20\\n0 0\\n2 0\\n1 1.5\\n') == '2 5.086781'\nassert solution('3 1 5 45 20\\n1 1.5 0 0\\n2 0\\n1 1.5\\n') == '2 12.715255'\n"
    },
    {
        "number": 3149,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4\\n0 0\\n2 0\\n1 1.5') == '2 5.086781'\nassert solution('3 4 5\\n0 0\\n2 0\\n1 1.5') == '1 12.715255'\nassert solution('3 4 2 3\\n1 1 1\\n0 0\\n2 0\\n1 1.5') == '1 3.946553'\nassert solution('3 4 2 2\\n0 0\\n2 0\\n1 1.5\\n1 1 1') == '0 2.752769'\nassert solution('3 4 2 3\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5') == '1 3.946553'\n"
    },
    {
        "number": 3149,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n3 6 5 45 20\n0 0\n2 0\n1 1.5\n''') == \"2 5.086781\"\nassert solution('''\n3 0.25 2 45 20\n0 0\n2 0\n1 1.5\n''') == \"1 12.715255\"\nassert solution('''\n3 6 10 15 22 24 30 30 31 32\n0 0\n2 0\n1 1\n''') == \"2 3.079076\"\nassert solution('''\n3 6 10 15 22 24 30 30 31 32\n0 0\n2 0\n1 1\n''') == \"1 3.415926\"\nassert solution('''\n3 6 10 15 22 24 30 30 31 32\n0 0\n2 0\n0 1\n''') == \"1 3.415926\"\n"
    },
    {
        "number": 3149,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3149,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"1 2 3 4 5\") == \"\"\nassert solution(\"1 2 3 4 5\") == \"\"\nassert solution(\"1 2 3 4 5 6 7 8\") == \"\"\n"
    },
    {
        "number": 3150,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n''') == '8'\nassert solution('''1\n2 1 1 2\n3 2 1 3\n4 3 1 4\n5 4 1 5\n6 5 1 6\n7 6 1 7\n8 7 1 8\n9 7 1 9\n10 8 1 10\n''') == '1'\nassert solution('''1\n0 1 1 2\n0 2 1 3\n0 3 1 4\n0 4 1 5\n0 5 1 6\n0 6 1 7\n0 7 1 8\n0 8 1 9\n0 9 1 10\n''') == '0'\nassert solution('''1\n1 1 1 2\n1 2 1 3\n1 3 1 4\n1 4 1 5\n1 5 1 6\n1 6 1 7\n1 7 1 8\n1 8 1 9\n1 9 1 10\n1 10 1 11\n1 11 1 12\n1 12 1 13\n1 13 1 14\n1 14 1 15\n1 15 1 16\n1 16 1 17\n1 17 1 18\n1 18 1 19\n1 19 1 20\n1 20 1 21\n1 21 1 22\n1 22 1 23\n1 23 1 24\n1 24 1 25\n1 25 1 26\n1 26 1 27\n1 27 1 28\n1 28 1 29\n1 29 1 30\n1 30 1 31\n1 31 1 32\n1 32 1 33\n1 33 1 34\n1 34 1 35\n1 35 1 36\n1 36 1 37\n1 37 1 38\n1 38 1 39\n1 39 1 40\n1 40 1 41\n1 41 1 42\n1 42 1 43\n1 43 1 44\n1 44 1 45\n1 45 1 46\n1 46 1 47\n1 47 1 48\n1 48 1 49\n1 49 1 50\n1 50 1 51\n1 51 1 52\n1 52 1 53\n1 53 1 54\n1 54 1 55\n1 55 1 56\n1 56 1 57\n1 57 1 58\n1 58 1 59\n1 59 1 60\n1 60 1 61\n1 61 1 62\n1 62 1 63\n1 63 1 64\n1 64 1 65\n1 65 1 66\n1 66 1 67\n1 67 1 68\n1 68 1 69\n1 69 1 70\n1 70 1 71\n1 71 1 72\n1 72 1 73\n1 73 1 74\n1 74 1 75\n1 75 1 76\n1 76 1 77\n1 77 1 78\n1 78 1 79\n1 79 1 80\n1 80 1 81\n1 81 1 82\n1 82 1 83\n1 83 1 84\n1 84 1 85\n1 85 1 86\n1 86 1 87\n1 87 1 88\n1 88 1 89\n1 89 1 90\n1 90 1 91\n1 91 1 92\n1 92 1 93\n1 93 1 94\n1 94 1 95\n1 95 1 96\n1 96 1 97\n1 97 1 98\n1 98 1 99\n1 99 1 100\n1 100 1 101\n1 101 1 102\n1 102 1 103\n1 103 1 104\n1 104 1 105\n1 105 1 106\n1 106 1 107\n1 107 1 108\n1 108 1 109\n1 109 1 110\n1 110 1 111\n1 111 1 112\n1 112 1 113\n1 113 1 114\n1 114 1 115\n1 115 1 116\n1 116 1 117\n1 117 1 118\n1 118 1 119\n1 119 1 120\n1 120 1 121\n1 121 1 122\n1 122 1 123\n1 123 1 124\n1 124 1 125\n1 125 1 126\n1 126 1 127\n1 127 1 128\n1 128 1 129\n1 129 1 130\n1 130 1 131\n1 131 1 132\n1 132 1 133\n1 133 1 134\n1 134 1 135\n1 135 1 136\n1 136 1 137\n1 137 1 138\n1 138 1 139\n1 139 1 140\n1 140 1 141\n1 141 1 142\n1 142 1 143\n1 143 1 144\n1 144 1 145\n1 145 1 146\n1 146 1 147\n1 147 1 148\n1 148 1 149\n1 149 1 150\n1 150 1 151\n1 151 1 152\n1 152 1 153\n1 153 1 154\n1 154 1 155\n1 155 1 156\n1 156 1 157\n1 157 1 158\n1 158 1 159\n1 159 1 160\n1 160 1 161\n1 161 1 162\n1 162 1 163\n1 163 1 164\n1 164 1 165\n1 165 1 166\n1 166 1 167\n1 167 1 168\n1 168 1 169\n1 169 1 170\n1 170 1 171\n1 171 1 172\n1 172 1 173\n1 173 1 174\n1 174 1 175\n1 175 1 176\n1 176 1 177\n1 177 1 178\n1 178 1 179\n1 179 1 180\n1 180 1 181\n1 181 1 182\n1 182 1 183\n1 183 1 184\n1 184 1 185\n1 185 1 186\n1 186 1 187\n1 187 1 188\n1 188 1 189\n1 189 1 190\n1 190 1 191\n1 191 1 192\n1 192 1 193\n1 193 1 194\n1 194 1 195\n1 195 1 196\n1 196 1 197\n1 197 1 198\n1 198 1 199\n1 199 1 200\n1 200 1 201\n1 201 1 202\n1 202 1 203\n1 203 1 204\n1 204 1 205\n1 205 1 206\n1 206 1 207\n1 207 1 208\n1 208 1 209\n1 209 1 210\n1 210 1 211\n1 211 1 212\n1 212 1 213\n1 213 1 214\n1 214 1 215\n1 215 1 216\n1 216 1 217\n1 217 1 218\n1 218 1 219\n1 219 1 220\n1 220 1 221\n1 221 1 222\n1 222 1 223\n1 223 1 224\n1 224 1 225\n1 225 1 226\n1 226 1 227\n1 227 1 228\n1 228 1 229\n1 229 1 230\n1 230 1 231\n1 231 1 232\n1 232 1 233\n1 233 1 234\n1 234 1 235\n1 235 1 236\n1 236 1 237\n1 237 1 238\n1 238 1 239\n1 239 1 240\n1 240 1 241\n1 241 1 242\n1 242 1 243\n1 243 1 244\n1 244 1 245\n1 245 1 246\n1 246 1 247\n1 247 1 248\n1 248 1 249\n1 249 1 250\n1 250 1 251\n1 251 1 252\n1 252 1 253\n1 253 1 254\n1 254 1 255\n1 255 1 256\n1 256 1 257\n1 257 1 258\n1 258 1 259\n1 259 1 260\n1 260 1 261\n1 261 1 262\n1 262 1 263\n1 263 1 264\n1 264 1 265\n1 265 1 266\n1 266 1 267\n1 267 1 268\n1 268 1 269\n1 269 1 270\n1 270 1 271\n1 271 1 272\n1 272 1 273\n1 273 1 274\n1 274 1 275\n1 275 1 276\n1 276 1 277\n1 277 1 278\n1 278 1 279\n1 279 1 280\n1 280 1 281\n1 281 1 282\n1 282 1 283\n1 283 1 284\n1 284 1 285\n1 285 1 286\n1 286 1 287\n1 287 1 288\n1 288 1 289\n1 289 1 290\n1 290 1 291\n1 291 1 292\n1 292 1 293\n1 293 1 294\n1 294 1 295\n1 295 1 296\n1 296 1 297\n1 297 1 298\n1 298 1 299\n1 299 1 300\n1 300 1 301\n1 301 1 302\n1 302 1 303\n"
    },
    {
        "number": 3150,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3150,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0\\n0\\n1\\n0') == '1\\n'\nassert solution('2\\n2\\n1\\n2') == '1\\n'\nassert solution('2\\n2\\n1\\n2\\n2\\n2') == '1\\n'\nassert solution('2\\n2\\n1\\n2\\n2\\n2\\n2') == '0\\n'\nassert solution('2\\n2\\n1\\n2\\n2\\n2\\n2\\n2') == '1\\n'\n"
    },
    {
        "number": 3150,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n''') == '8'\nassert solution('''4\n5 1 7 1\n1 1 5 1\n4 0 4 4\n7 0 3 4\n''') == '1'\nassert solution('''3\n5 1 7 1\n1 1 5 1\n4 0 4 4\n2 1 2 1\n''') == '2'"
    },
    {
        "number": 3150,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1') == '1'\nassert solution('5\\n5 3 7 1\\n3 1 5 1\\n4 0 4 4\\n7 0 3 4\\n3 4 2 5') == '8'\nassert solution('5\\n5 3 7 1\\n3 1 5 1\\n4 0 4 4\\n7 0 3 4\\n3 4 2 5\\n7 0 0 4\\n4 0 0 4') == '1'\nassert solution('5\\n5 3 7 1\\n3 1 5 1\\n4 0 4 4\\n7 0 3 4\\n3 4 2 5\\n7 0 0 4\\n4 0 0 4\\n7 0 0 4') == '2'\nassert solution('5\\n5 3 7 1\\n3 1 5 1\\n4 0 4 4\\n7 0 3 4\\n3 4 2 5\\n7 0 0 4\\n4 0 0 4\\n7 0 0 4\\n4 0 0 4') == '2'\n"
    },
    {
        "number": 3150,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n6\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n\"\"\"\n) == '8'\nassert solution(\n\"\"\"\n5\n5 1 7 1\n1 1 5 1\n4 0 4 4\n7 0 3 4\n\"\"\"\n) == '1'\nassert solution(\n\"\"\"\n1\n1 1 1\n\"\"\"\n) == '1'\nassert solution(\n\"\"\"\n2\n1 1 1\n1 1 1\n\"\"\"\n) == '1'\n"
    },
    {
        "number": 3150,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n0 0 1 0\") == \"1\"\nassert solution(\"2\\n0 0 1 0\") == \"4\"\nassert solution(\"3\\n0 0 1 0\") == \"8\"\nassert solution(\"4\\n0 0 1 0\") == \"16\"\nassert solution(\"5\\n0 0 1 0\") == \"32\"\n"
    },
    {
        "number": 3150,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n') == '8'\nassert solution('2\\n1 1 0 1\\n4 0 4 4\\n7 0 3 4\\n') == '1'\nassert solution('3\\n1 1 0 1\\n4 0 4 4\\n7 0 3 4\\n') == '0'\nassert solution('4\\n1 1 0 1\\n4 0 4 4\\n7 0 3 4\\n') == '1'\nassert solution('5\\n1 1 0 1\\n4 0 4 4\\n7 0 3 4\\n') == '0'\n"
    },
    {
        "number": 3150,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1''') == '8'\nassert solution('''4\n5 1 7 1\n1 1 5 1\n4 0 4 4\n7 0 3 4''') == '1'\n"
    },
    {
        "number": 3150,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1') == '8'\nassert solution('1 0 1 1\\n1 0 0 1\\n4 0 4 4\\n7 0 3 4\\n') == '1'\nprint(solution('5 0 5 5'))\n"
    },
    {
        "number": 3151,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"7\") == \"4 3\"\nassert solution(\"10\") == \"impossible\"\n\"\"\""
    },
    {
        "number": 3151,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7') == '4 3'\nassert solution('10') == 'impossible'\nassert solution('1') == 'impossible'\nassert solution('4') == 'impossible'\nassert solution('9') == 'impossible'\n"
    },
    {
        "number": 3151,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7') == '4 3'\nassert solution('10') == 'impossible'\nassert solution('1') == 'impossible'\nassert solution('9') == 'impossible'\nassert solution('123456789') == 'impossible'\n\nimport pytest\n"
    },
    {
        "number": 3151,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"7\") == \"4 3\"\nassert solution(\"10\") == \"impossible\"\n\nprint('Test success!')"
    },
    {
        "number": 3151,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7') == '4 3'\nassert solution('10') == 'impossible'"
    },
    {
        "number": 3151,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7') == '4 3'\nassert solution('10') == 'impossible'\nprint('Test success!')"
    },
    {
        "number": 3151,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3151,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'impossible'\n"
    },
    {
        "number": 3151,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 'impossible'\nassert solution('1') == 'impossible'\nassert solution('2') == 'impossible'\nassert solution('3') == 'impossible'\nassert solution('4') == 'impossible'\n"
    },
    {
        "number": 3151,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7') == '4 3'\nassert solution('10') == 'impossible'\n\nimport sys\n\nfor line in sys.stdin:\n    n = int(line)\n    if n >= 1 and n <= 10**9:\n        print(solution(line))\n    else:\n        print('impossible')\n"
    },
    {
        "number": 3152,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n2') == '4'\nassert solution('1\\n3') == '8'\nassert solution('1\\n4') == '12'\nassert solution('1\\n5') == '16'\n"
    },
    {
        "number": 3152,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n4\\n3\\n2\\n5\") == \"109\"\n"
    },
    {
        "number": 3152,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2\\n4\\n1\\n4\") == \"109\"\nassert solution(\"1\\n3\\n4\\n5\\n6\\n7\\n8\\n9\") == \"45789091\"\nassert solution(\"2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\") == \"45789091\"\nassert solution(\"7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\") == \"45789091\"\nassert solution(\"10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\") == \"45789091\"\n"
    },
    {
        "number": 3152,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\") == \"1\\n\"\nassert solution(\"1\\n3\") == \"16\\n\"\nassert solution(\"1\\n2\\n3\") == \"5\\n\"\nassert solution(\"1\\n2\\n3\\n4\") == \"10\\n\"\nassert solution(\"1\\n3\\n2\") == \"8\\n\"\n"
    },
    {
        "number": 3152,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3') == '16'\nassert solution('2\\n4\\n1') == '109'\nassert solution('4\\n2\\n4\\n1') == '109'\nassert solution('2\\n2\\n1') == '8'\nassert solution('4\\n2\\n4\\n1') == '109'\n"
    },
    {
        "number": 3152,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('3\\n3') == '9'\nassert solution('2\\n3') == '0'\nassert solution('1\\n2') == '1'\nassert solution('1\\n3') == '9'\n"
    },
    {
        "number": 3152,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2''') == '16'\nassert solution('''4''') == '109'\nassert solution('''1''') == '1'\nassert solution('''3''') == '9'\nassert solution('''4''') == '109'\n"
    },
    {
        "number": 3152,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == '16'\nassert solution('2\\n1\\n3') == '16'\nassert solution('4\\n2\\n4\\n1\\n4') == '109'\nassert solution('5\\n1\\n3\\n2\\n4\\n5') == '95'\nassert solution('1000000\\n1000000\\n1000000\\n1000000\\n1000000') == '24969'\n'''"
    },
    {
        "number": 3152,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"1\\n2\") == \"1\\n2\"\nassert solution(\"1\\n2\\n3\") == \"1\\n2\\n3\"\nassert solution(\"1\\n2\\n3\\n4\") == \"1\\n2\\n3\\n4\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"1\\n2\\n3\\n4\\n5\"\n"
    },
    {
        "number": 3152,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"1\n    5\n    7\n    2\n    6\n    4\n    3\n    \"\"\") == \"109\"\nassert solution(\n    \"\"\"5\n    7\n    2\n    6\n    4\n    3\n    \"\"\") == \"109\"\nassert solution(\n    \"\"\"3\n    5\n    7\n    2\n    6\n    4\n    3\n    \"\"\") == \"109\"\nassert solution(\n    \"\"\"2\n    5\n    7\n    2\n    6\n    4\n    3\n    \"\"\") == \"109\"\nassert solution(\n    \"\"\"2\n    5\n    7\n    2\n    6\n    4\n    3\n    \"\"\") == \"109\"\n"
    },
    {
        "number": 3153,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3\n5 1\n1 2\n1 2\n1 2\n''') == '3\\n1 2 1\\n1 2 2\\n1 2 2\\n'\nassert solution('''4 3\n5 3 1 1\n1 3\n2 3\n4 1\n''') == '5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\\n'\nassert solution('''4 5\n5 4 3 2 1\n1 3\n1 3\n1 3\n4 1\n''') == '5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\\n'\nassert solution('''4 5\n5 4 3 2 1\n1 3\n2 3\n1 3\n4 1\n''') == '5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\\n'\nassert solution('''3 4\n5 2 1\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n"
    },
    {
        "number": 3153,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3\\n5 1\\n1 2\\n1 2\\n1 2') == '3\\n1 2 1\\n1 2 2\\n1 2 2\\n'\nassert solution('3 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1') == '5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\\n'\nassert solution('3 4\\n5 3 1 1\\n1 3\\n2 3\\n4 1') == '5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\\n'\nassert solution('5 5\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n4 1') == '5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\\n2 4 1\\n'\nassert solution('5 4\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n4 1') == '5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\\n2 4 1\\n'\n"
    },
    {
        "number": 3153,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 3''') == '1 2 1'\nassert solution('''2 2''') == '1 1'\nassert solution('''3 3''') == '1 2 1'\nassert solution('''1 2''') == '1 2'\nassert solution('''1 2''') == '1 2'\n"
    },
    {
        "number": 3153,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 3\n5 3 1 1\n1 3\n2 3\n4 1\n''') == '5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\\n'\n\nassert solution('''5 2\n5 3 1 1\n2 3\n2 3\n2 3\n5 1\n5 3 1 1\n1 3\n2 3\n2 3\n2 3\n2 3\n''') == '5\\n1 3 1\\n2 3 2\\n2 3 2\\n2 3 2\\n2 3 2\\n2 3 2\\n'\n\nassert solution('''4 3\n5 3 1 1\n1 3\n2 3\n4 1\n''') == '5\\n1 3 1\\n2 3 2\\n4 1 0\\n'\n\nassert solution('''3 2\n3 3 1 1\n1 3\n1 3\n2 3\n2 3\n''') == '5\\n1 3 1\\n2 3 2\\n2 3 2\\n2 3 2\\n'\n\nassert solution('''3 2\n3 3 1 1\n1 3\n1 3\n1 3\n2 3\n2 3\n''') == '5\\n1 3 1\\n2 3 2\\n2 3 2\\n2 3 2\\n'"
    },
    {
        "number": 3153,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n') == '5\\n1 3 1\\n2 3 2\\n4 1 0'\nassert solution('4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n') == '5\\n1 3 1\\n2 3 2\\n4 1 0'\nassert solution('2 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n') == '3'\nassert solution('3 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n') == '2'\nassert solution('2 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n') == '1'\n"
    },
    {
        "number": 3153,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3\\n5 1\\n1 2\\n1 2\\n1 2\\n') == '3\\n1 2 1\\n1 2 2\\n1 2 2\\n'\nassert solution('2 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n') == '5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\\n'\nassert solution('2 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n1 3\\n1 1\\n4 1\\n1 3\\n') == '5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\\n'\nassert solution('4 2\\n2 1\\n1 2\\n1 2\\n2 3\\n3 1\\n3 2\\n2 1\\n2 3\\n1 2\\n2 3\\n1 2\\n') == '3\\n1 2 1\\n1 2 2\\n1 2 2\\n1 2 2\\n'\nassert solution('4 2\\n2 1\\n1 2\\n1 2\\n2 3\\n3 1\\n3 2\\n2 1\\n2 3\\n1 2\\n2 3\\n1 2\\n1 2\\n') == '3\\n1 2 1\\n1 2 2\\n1 2 2\\n1 2 2\\n'\n"
    },
    {
        "number": 3153,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3153,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 3\n5 1\n1 2\n1 2\n1 2\n''') == '3\\n1 2 1\\n1 2 2\\n1 2 2\\n'\nassert solution('''4 3\n5 3 1 1\n1 3\n2 3\n4 1\n''') == '5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\\n'\nassert solution('''2 3\n5 1\n1 2\n2 3\n3 1\n1 2\n''') == '3\\n1 2 1\\n2 3 2\\n3 1 0\\n'\nassert solution('''2 3\n5 1\n2 3\n2 3\n2 3\n1 3\n1 2\n''') == '3\\n1 2 1\\n2 3 2\\n3 1 0\\n'\nassert solution('''2 3\n5 1\n2 3\n1 2\n1 2\n1 3\n1 2\n''') == '3\\n1 2 1\\n2 3 2\\n3 1 0\\n'\n"
    },
    {
        "number": 3153,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"2 3\") == \"3\"\n\nassert solution(\n\"4 3\") == \"5\"\n\nassert solution(\n\"5 4\") == \"5\"\n\nassert solution(\n\"5 4 3 2 1\") == \"2\"\n\nassert solution(\n\"5 4 3 2 1\") == \"1 2 1\""
    },
    {
        "number": 3153,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 3\n5 1\n1 2\n1 2\n1 2\n''') == '''3\n1 2 1\n1 2 2\n1 2 2\n'''\nassert solution('''1 1\n1\n1\n2\n''') == '''1\n1 1\n1 1\n2\n'''\nassert solution('''2 2\n1 1\n1\n1\n1\n''') == '''1\n1 1 1\n1 1 2\n1 1 2\n'''\nassert solution('''10 5\n5 3 1 1\n1 3\n2 3\n3 3\n4 3\n5 3\n6 3\n7 3\n8 3\n9 3\n''') == '''7\n1 3 1 3\n1 3 1 3\n1 3 1 3\n1 3 2 3\n1 3 2 3\n1 3 2 3\n1 3 2 3\n1 3 2 3\n1 3 2 3\n'''\nassert solution('''5 3\n5 3 1 1\n1 3\n2 3\n3 3\n4 3\n''') == '''6\n1 3 1 3\n1 3 1 3\n1 3 1 3\n1 3 2 3\n1 3 2 3\n1 3 2 3\n1 3 2 3\n'''\n"
    },
    {
        "number": 3154,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 1\n20 3\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1''') == '1 2'\nassert solution('''2 1\n20 3\n0 1 1\n10 1 0\n10 2 1\nSample Output 2:\nimpossible\n''') == 'impossible'\nassert solution('''4 2\n4 9\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1''') == '1 2'\nassert solution('''2 1\n20 3\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1''') == '1 2'\n'''\n"
    },
    {
        "number": 3154,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 3\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1''') == '1 2'\nassert solution('''2 1\n20 3\n0 1 1\n10 1 0\n10 2 1''') == 'impossible'\n'''\n"
    },
    {
        "number": 3154,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin1) == expected1\nassert solution(stdin2) == expected2\nassert solution(stdin3) == expected3\nassert solution(stdin4) == expected4\nassert solution(stdin5) == expected5\n"
    },
    {
        "number": 3154,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''0\n1\n''') == 'impossible'\nassert solution('''1\n1\n''') == '1'\nassert solution('''2\n2\n''') == '1 2'\nassert solution('''2\n3\n''') == '1 2'\nassert solution('''2\n4\n''') == 'impossible'\n"
    },
    {
        "number": 3154,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 1\n20 3\n0 1 1\n10 1 0\n10 2 1''') == '1 2'\nassert solution('''2 1\n20 3\n0 1 1\n10 1 0\n10 2 1''') == 'impossible'\nassert solution('''2 1\n20 3\n0 1 1\n10 1 0\n10 2 1\n0 3 2\n''') == '1 2'\nassert solution('''2 1\n20 3\n0 1 1\n10 1 0\n10 2 1\n0 3 2\n''') == 'impossible'\nassert solution('''2 1\n20 3\n0 1 1\n10 1 0\n10 2 1\n0 3 2\n''') == '1 2'\n"
    },
    {
        "number": 3154,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 3\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1''') == '1 2'\nassert solution('''2 1\n20 3\n0 1 1\n10 1 0\n10 2 1''') == 'impossible''''\nprint(solution(stdin))\n"
    },
    {
        "number": 3154,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''2 3\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1\n'''\n) == '1 2'\n\nassert solution(\n'''2 1\n20 3\n0 1 1\n10 1 0\n10 2 1\n'''\n) == 'impossible'\n\nassert solution(\n'''3 2\n20 3\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1\n'''\n) == '1 2'\n\nassert solution(\n'''3 2\n7 8\n0 0 0\n0 3 4\n0 2 2\n1 2 3\n1 3 2\n3 2 1\n3 2 4\n'''\n) == '1 2'\n\nassert solution(\n'''4 2\n7 8\n0 0 0\n0 3 4\n0 2 2\n1 2 3\n1 3 2\n3 2 1\n3 2 4\n'''\n) == '1 2'"
    },
    {
        "number": 3154,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 3\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1''') == '1 2'\nassert solution('''2 1\n20 3\n0 1 1\n10 1 0\n10 2 1''') == 'impossible'\n'''"
    },
    {
        "number": 3154,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '1 2'\nstdin = \"\"\"3 4\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1\"\"\"\nassert solution(stdin) == '1 2'\nstdin = \"\"\"5 3\n20 6\n10 7\n10 8\n10 9\n10 10\n11 11\n12 10\n13 11\n14 9\nSample Input 3:\n10 10\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n"
    },
    {
        "number": 3154,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n2 1\n20 3\n0 1 1\n10 1 0\n10 2 1\n\"\"\"\n    ) == \"1 2\"\n\nassert solution(\n\"\"\"\n3 2\n20 3\n0 1 1\n1 1 2\n1 2 1\n2 1 2\n2 2 1\n3 2 3\n\"\"\"\n    ) == \"1 2\"\n\nassert solution(\n\"\"\"\n3 2\n0 0 2\n1 2 0\n3 2 1\n\"\"\"\n    ) == \"impossible\"\n\nassert solution(\n\"\"\"\n4 3\n14 16 19\n1 1 2\n1 3 0\n1 4 0\n1 2 4\n1 3 3\n2 1 2\n2 2 1\n3 2 3\n2 4 2\n2 1 3\n3 1 3\n\"\"\"\n    ) == \"2 3\"\n\nassert solution(\n\"\"\"\n4 4\n14 16 19\n1 1 2\n1 3 0\n1 4 0\n1 2 4\n1 3 3\n2 1 2\n2 2 1\n3 2 3\n2 4 2\n2 1 3\n3 1 3\n\"\"\"\n    ) == \"1 2\""
    },
    {
        "number": 3155,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10') == '5 2'\nassert solution('2020') == '2020 1'\nassert solution('20') == '1 1'\nassert solution('20') == '1 2'\nassert solution('20') == '2 1'\n"
    },
    {
        "number": 3155,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"10\") == \"5 2\"\nassert solution(\"20\") == \"2020 1\"\nassert solution(\"2020\") == \"2020 1\"\nassert solution(\"2021\") == \"2020 2\"\nassert solution(\"2022\") == \"2020 3\"\n"
    },
    {
        "number": 3155,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3155,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10') == '5 2'\nassert solution('2020') == '2020 1'\n\n\"\"\"\n\n\"\"\"\n\n\"\"\""
    },
    {
        "number": 3155,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5') == '5 2'\nassert solution('20') == '2020 1'\nassert solution('2020') == '2020 1'\nassert solution('20') == '2020 1'\nassert solution('200') == '400 1'\n"
    },
    {
        "number": 3155,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(10) == '5 2'\nassert solution(2020) == '2020 1'\n"
    },
    {
        "number": 3155,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10') == '5 2'\nassert solution('20') == '2020 1'\nassert solution('21') == '2020 2'\nassert solution('123456789') == '1 0'\nassert solution('123456789012345678901234567890') == '1 0'\n"
    },
    {
        "number": 3155,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 3155,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10') == '5 2'\nassert solution('2020') == '2020 1'\n\"\"\"\n\nfrom math import factorial\n"
    },
    {
        "number": 3155,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"20\") == \"2020 1\"\nassert solution(\"2020\") == \"2020 1\"\nassert solution(\"2010\") == \"5 2\"\nassert solution(\"2002\") == \"6 1\"\nassert solution(\"2010\") == \"5 2\"\n"
    },
    {
        "number": 3156,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\n\") == \"impossible\"\nassert solution(\"3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\n\") == \"ambiguous\"\nassert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\n\") == \"unique\"\nassert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\nicecream\\ncookies\\n\") == \"unique\"\nassert solution(\"2\\n2\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\n\") == \"unique\"\n"
    },
    {
        "number": 3156,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n3\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\ncookies\nicecream''') == 'unique'\nassert solution('''3\n4\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\ncookies\nicecream''') == 'impossible'\nassert solution('''4\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies''') == 'ambiguous'\nassert solution('''3\n3\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\ncookies\nicecream''') == 'ambiguous'\nassert solution('''3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies''') == 'ambiguous'\n"
    },
    {
        "number": 3156,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n3') == 'impossible'\nassert solution('1\\n3\\n0 chocolate\\n1 icecream\\n2 cookies') == 'impossible'\nassert solution('1\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate icecream') == 'unique'\nassert solution('1\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate cookies') == 'ambiguous'\nassert solution('1\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\n0 chocolate icecream') == 'impossible'\n"
    },
    {
        "number": 3156,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n3\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\ncookies\nicecream''') == 'impossible'\n\nassert solution('''3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies''') == 'unique'\n\nassert solution('''3\n2\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\nicecream\ncookies''') == 'ambiguous'\n"
    },
    {
        "number": 3156,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\n3\") == \"impossible\"\nassert solution(\"3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\nicecream\\ncookies\\n3\") == \"unique\"\nassert solution(\"3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\n3\") == \"ambiguous\"\nassert solution(\"2\\n2\\n0 apple\\n1 banana\\n0 peach\\n1 grapefruit\\n0 pear\\n1 peach\\n0 grapes\\n1 grapefruit\\n0 grapes\\n1 grapefruit\\n0 peach\\n0 apple\\n1 pear\\n0 grapes\\n0 apple\\n1 apple\\n0 pear\\n1 pear\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0 apple\\n0"
    },
    {
        "number": 3156,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 'impossible'\nassert solution('0') == 'impossible'\nassert solution('0 1') == 'impossible'\nassert solution('0 1 2') == 'impossible'\nassert solution('0 1 2 3') == 'impossible'\n"
    },
    {
        "number": 3156,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"unique\"\n"
    },
    {
        "number": 3156,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n"
    },
    {
        "number": 3156,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 3156,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin_) == expected\n"
    },
    {
        "number": 3157,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 0 10') == '0'\nassert solution('1 2 10') == '1'\n\nprint(solution(stdin))\n"
    },
    {
        "number": 3157,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 0 10''') == '0'\nassert solution('''1 2 10''') == '1'\n'''\n    N, K, M = map(int, stdin.split())\n\n    def f(s):\n        if len(s) == 0:\n            return 0\n        return ( ( f(s[:-1]) * 33 ) + ord(s[-1]) ) % M\n\n    result = 0\n    for i in range(1, N + 1):\n        if f('a' * i) == K:\n            result += 1\n    return str(result)"
    },
    {
        "number": 3157,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 2 10''') == '0'\nassert solution('''1 2 3''') == '1'\nassert solution('''2 4 10''') == '1'\nassert solution('''1 3 9''') == '1'\nassert solution('''1 1 9''') == '1'\n"
    },
    {
        "number": 3157,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 0 10\") == \"0\"\nassert solution(\"1 2 10\") == \"1\"\n\n\"\"\"\n\nimport sys\n\nN, K, M = map(int, sys.stdin.readline().strip().split())\n"
    },
    {
        "number": 3157,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 2 10''') == '0'\nassert solution('''2 2 10''') == '1'\nassert solution('''4 4 10''') == '2'\nassert solution('''9 4 10''') == '5'\nassert solution('''3 4 10''') == '6'\n"
    },
    {
        "number": 3157,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 0\nassert solution(' ') == 0\nassert solution('a') == 1\nassert solution('aa') == 32\nassert solution('kit') == 438\n'''"
    },
    {
        "number": 3157,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 0 10\\n') == '0'\nassert solution('1 2 10\\n') == '1'\nprint('Testcases passed')\n"
    },
    {
        "number": 3157,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('aa') == 'a'\nassert solution('aaabc') == 'a'\nassert solution('aaacb') == 'aa'\n"
    },
    {
        "number": 3157,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 0 10\\n') == '0'\nassert solution('1 2 10\\n') == '1'\nprint('Test success!')"
    },
    {
        "number": 3157,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 0 10\\n') == '0'\nassert solution('1 2 10\\n') == '1'\n\"\"\"\n"
    },
    {
        "number": 3158,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''..............................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n"
    },
    {
        "number": 3158,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n............................................................\n............................................................\n..........................................XXXX...........\n.....................................XXX......XXXX.........\n....................................XXXX........X...........\n........XXX....XXX....................X.....................\n.........XXX...XX...........................................\n............................................................\n............XX..............................................\n...........XXX..............................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n"
    },
    {
        "number": 3158,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''..............................\n..............................\n............XXXX............\n.........XXXXX....XXXX.......\n........XXXX...XX..........\n.......XXX...XXX..XX......\n........XXXXXXXXX.........\n...........XX..............\n..........XXX..............\n...X....XXX.................\n...X...XXX..................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n..............................\n..............................''') == '3 pan'\n\nassert solution('''..............................\n..............................\n............XXXX............\n.........XXXXX....XXXX.......\n........XXXX...XX..........\n........XXXX...XXXX........\n...........XX..............\n..........XXX..............\n...X....XXX.................\n...X...XXX..................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n..............................\n..............................''') == '3 zoom out'\n\nassert solution('''..............................\n..............................\n............XXXX............\n.........XXXXX....XXXX.......\n........XXXX...XX..........\n........XXXX...XXXX........\n...........XX..............\n..........XXX..............\n...X....XXX.................\n...X...XXX..................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n..............................\n..............................''') == '3 pan'\n\nassert solution('''..............................\n..............................\n............XXXX............\n.........XXXXX....XXXX.......\n........XXXX...XX..........\n........XXXX...XXXX........\n...........XX..............\n..........XXX..............\n...X....XXX.................\n...X...XXX..................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n..............................\n..............................''') == '3 pan'\n\nassert solution('''..............................\n..............................\n............XXXX............\n.........XXXXX....XXXX.......\n........XXXX...XX..........\n........XXXX...XXXX........\n...........XX..............\n..........XXX..............\n...X....XXX.................\n...X...XXX..................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n...X...X....................\n..............................\n..............................''') == '3 pan'"
    },
    {
        "number": 3158,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''..............................\n..........................................XX\n....................................XXXX.....\n........XXX....XXX..................XXXX..X....\n.........XXX...XX...........................................\n............................................................\n............XX..............................................\n...........XXX..............................................\n............................................................\n......................................XX..............\n...........................................XXXX...........\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................''') == '3 zoom out'\n"
    },
    {
        "number": 3158,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('..............................') == '3 zoom out'\nassert solution('..............................') == '3 rotate'\nassert solution('..............................') == '3 rotate'\nassert solution('..............................') == '2 pan'\nassert solution('..............................') == '2 pan'\n"
    },
    {
        "number": 3158,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('..X.X.X......XX...X...X....X..X..X.X.X.X.X...X.X...X...X..X..X...X.X.X.X.X..X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X."
    },
    {
        "number": 3158,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''............................................................\n............................................................\n....XXXX....................................................\n....XXXX..................................XXXX..............\n....XXXX...................................XXX..............\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................"
    },
    {
        "number": 3158,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3 zoom out\"\n\n\"\"\"\n\n\nfrom __future__ import annotations\n\nimport unittest\n"
    },
    {
        "number": 3158,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n"
    },
    {
        "number": 3158,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n.X.\n.X.\n''') == '2 pan\\n'\nassert solution('''\n.X.\nX..\n''') == '2 pan\\n'\nassert solution('''\n.X.\n.X.\n''') == '2 pan\\n'\nassert solution('''\n.X.\n.X.\n''') == '2 pan\\n'\nassert solution('''\n.X.\n..X\n''') == '2 pan\\n'\n"
    },
    {
        "number": 3159,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\\\n7 7\n+++++++\n+  =  +\n+ +++ +\n+ + + +\n+ +++ +\n+     +\n+++++++\n''') == \\\n'''\n       \n       \n       \n       \n       \n       \n       \n'''\n\nassert solution('''\\\n3 3\nabcab\n++++++++\n+++++++\n''') == \\\n'''\nababab\n      \n      \n      \n      \n'''\n\nassert solution('''\\\n7 7\n+++++++\n+  =  +\n+ +++ +\n+ + + +\n+ +++ +\n+     +\n+++++++\n''') == \\\n'''\n       \n       \n       \n       \n       \n       \n       \n       \n'''\n\nassert solution('''\\\n2 2\nabca\nba\n''') == \\\n'''\nba\na\n'''\n\nassert solution('''\\\n1 1\nb''') == \\\n'''\nb'''"
    },
    {
        "number": 3159,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n8 20\n apples are great!  \n+ oranges are      +\n+ way better!      +\n+ #oranges>apples  +\n++++++++++++++++++++\ncheck out our      \n fresh apples!      \n''') == \\\n'''\napples are great!  \ncheck out our      \n fresh apples!      \n'''\nassert solution('''\n8 20\n+++\n+++\n+++\n+++\n+++\n+++\n+++\n+++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n++++\n"
    },
    {
        "number": 3159,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n') == '       \\n       \\n       \\n       \\n'\nassert solution('8 20\\n apples are great!\\n++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\n fresh apples!\\n') == 'apples are great!\\n                    \\n                    \\n                    \\n                    \\n check out our\\n fresh apples!\\n'\nprint(solution(stdin.read()))\n"
    },
    {
        "number": 3159,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8 20\\napples are great!\\n+++\\n+oranges are better!\\n+++\\n#oranges>apples\\n+++++++\\ncheck out our\\nfresh apples!\\n') == 'apples are great!\\ncheck out our\\nfresh apples!\\n'"
    },
    {
        "number": 3159,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 20\\napples are great!\\n\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\\ncheck out our\\nfresh apples!\\n') == 'apples are great!\\n\\ncheck out our\\nfresh apples!\\n'\nassert solution('7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\\ncheck out our\\nfresh apples!\\n') == '       \\n       \\n       \\n       \\n       \\n       \\nfresh apples!\\n'\nassert solution('7 5\\n+++++++\\n+ +++ +\\n+ +++ +\\n+ +++ +\\n+  + +\\n+++++++\\n\\ncheck out our\\nfresh apples!\\n') == '       \\n       \\n       \\nfresh apples!\\n'\nassert solution('8 10\\n+++++++\\n+ ++ ++\\n+ +++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++ ++\\n+ ++"
    },
    {
        "number": 3159,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"8 20\\napples are great!  \\n++++++++++++++++++++\\n+ oranges are      +\\n+ way better!      +\\n+ #oranges>apples  +\\n++++++++++++++++++++\\ncheck out our      \\nfresh apples!      \") == \"apples are great!  \\ncheck out our      \\nfresh apples!      \"\nassert solution(\"5 3\\n#?*&$+$#$++#*$+$\\n\\nabc\\n&&*+&#$+#&*%#&&#$#%#&&*+&#$@#$@#$@##\\n\") == \"#?*&$+$#$++#*$+$\\n\\nabc\\n&&*+&#$+#&*%#&&#$#%#&&*+&#$@#$@#$@##\"\nassert solution(\"5 2\\n\\n##\\nabc#\\n\") == \"\\n\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n# check out our      \\nfresh apples!      \") == \"       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n\"\n"
    },
    {
        "number": 3159,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3159,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''8 20\n apples are great!  \n++++++++++++++++++++\n+ oranges are      +\n+ way better!      +\n+ #oranges>apples  +\n++++++++++++++++++++\n check out our      \n fresh apples!      \n''') == 'apples are great!\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "number": 3159,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n10 8\n+++++++\n+  =  +\n+ +++ +\n+ + + +\n+ +++ +\n+     +\n+++++++\n''') == '''\n+++++++\n+  =  +\n+ +++ +\n+ + + +\n+ +++ +\n+     +\n+++++++\n'''\n\nassert solution(\n'''\n5 8\n+++++++\n+ = + +\n+ +++ +\n+ + + +\n+ +++ +\n+     +\n+++++++\n''') == '''\n+++++++\n+ = + +\n+ +++ +\n+ + + +\n+ +++ +\n+     +\n+++++++\n'''\n\nassert solution(\n'''\n8 8\n+++++++\n+ = + +\n+ +++ +\n+ + + +\n+ +++ +\n+     +\n+++++++\n''') == '''\n+++++++\n+ = + +\n+ +++ +\n+ + + +\n+ +++ +\n+     +\n+++++++\n'''\n\nassert solution(\n'''\n6 6\n+++++++\n+ = + +\n+ +++ +\n+ + + +\n+ +++ +\n+     +\n+++++++\n''') == '''\n+++++++\n+ = + +\n+ +++ +\n+ + + +\n+ +++ +\n+     +\n+++++++\n'''\n\nassert solution(\n'''\n9 7\n+++++++\n+ = + =\n+ +++ +\n+ + + +\n+ +++ +\n+     +\n+++++++\n''') == '''\n+++++++\n+ = + =\n+ +++ +\n+ + + +\n+ +++ +\n+     +\n+++++++\n'''"
    },
    {
        "number": 3159,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3160,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('HH') == 2.0\nassert solution('H?') == 1.5\nassert solution('H1') == 1.5\nassert solution('H') == 2.0\nassert solution('H0') == 2.0\n"
    },
    {
        "number": 3160,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == '1.0'\nassert solution('HH') == '2.0'\nassert solution('H?') == '1.5'\nassert solution('HT') == '0.5'\nassert solution('HTT') == '0.0'\n"
    },
    {
        "number": 3160,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('HH') == '2.0'\nassert solution('H?') == '1.5'\n\nassert (solution('HH') == '2.0' and solution('H?') == '1.5')\nassert (solution('HH') == '2.0' and solution('H?') == '1.5')\n\nassert (solution('HHH') == '3.5' and solution('HHT') == '2.0')\n"
    },
    {
        "number": 3160,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('H') == '2.0'\nassert solution('HH') == '2.0'\nassert solution('H?') == '1.5'\nassert solution('HH?') == '1.5'\nassert solution('HHH') == '3.0'\n"
    },
    {
        "number": 3160,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('HH') == 2.0\nassert solution('H?') == 1.5\nassert solution('T?') == 1.5\nassert solution('?') == 1.5\nassert solution('?T') == 2.0\n"
    },
    {
        "number": 3160,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('HH') == 2.0\nassert solution('H?') == 1.5\nassert solution('HTH') == 1.0\nassert solution('HTHH') == 1.0\nassert solution('HTHTH') == 1.0\n"
    },
    {
        "number": 3160,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"HH\") == \"2.0\"\nassert solution(\"H?H\") == \"2.0\"\nassert solution(\"HTH\") == \"2.5\"\nassert solution(\"HHHT\") == \"2.0\"\nassert solution(\"HTHHTH\") == \"2.5\"\n"
    },
    {
        "number": 3160,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('H') == '2.0'\nassert solution('HT') == '1.5'\nassert solution('HH') == '2.0'\nassert solution('HTHHTH') == '1.0'\nassert solution('HTH') == '1.5'\n"
    },
    {
        "number": 3160,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('HH') == '2.0'\nassert solution('H?') == '1.5'\nassert solution('H?T?') == '0.5'\nassert solution('H?T?T?') == '1.0'\nassert solution('H?T?T?T?') == '1.0'\n"
    },
    {
        "number": 3160,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('HH') == '2.0'\nassert solution('H?') == '1.5'\nassert solution('HT') == '0.0'\nassert solution('HH') == '2.0'\nassert solution('HHH') == '3.0'\n"
    },
    {
        "number": 3161,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"4\") == \"0001\"\nassert solution(\"4\") == \"0011\"\nassert solution(\"4\") == \"1111\"\nassert solution(\"4\") == \"1111\"\n"
    },
    {
        "number": 3161,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    '4\\n'\n    '1111\\n'\n    '1111\\n'\n    '1111\\n'\n    '1111\\n') == '6'\n"
    },
    {
        "number": 3161,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n0001\n0001\n0011\n1110''') == '1'\nassert solution('''4\n1111\n1111\n1111\n1111''') == '6'\nassert solution('''7\n0111\n0001\n0011\n0011\n1110\n1110\n1111\n1111''') == '2'\nassert solution('''16\n1111111111111111\n11101111111101111\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n11101111011110110\n"
    },
    {
        "number": 3161,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n4\n0001\n0001\n0011\n1110\n''') == '1'\nassert solution(\n'''\n2\n01\n10\n''') == '0'\nassert solution(\n'''\n3\n11\n00\n00\n11\n11\n11\n00\n10\n00\n''') == '6'\nassert solution(\n'''\n2\n11\n11\n11\n11\n''') == '0'\nassert solution(\n'''\n4\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n"
    },
    {
        "number": 3161,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n0\n01\n1\n\"\"\") == '0'\nassert solution(\n\"\"\"\n1\n11\n1\n\"\"\") == '1'\nassert solution(\n\"\"\"\n2\n00\n01\n11\n10\n\"\"\") == '2'\nassert solution(\n\"\"\"\n3\n000\n001\n010\n011\n100\n101\n110\n111\n200\n201\n210\n211\n300\n301\n310\n311\n\"\"\") == '2'\nassert solution(\n\"\"\"\n4\n0000\n0001\n0010\n0011\n0100\n0101\n0110\n0111\n1000\n1001\n1010\n1011\n1100\n1101\n1110\n1111\n\"\"\") == '2'\n"
    },
    {
        "number": 3161,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3161,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3161,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n0001\n0001\n0011\n1110''') == '1'\nassert solution('''4\n1111\n1111\n1111\n1111\n''') == '6'\nassert solution('''16\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n"
    },
    {
        "number": 3161,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3161,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\nassert solution(\"2\") == \"1\"\nassert solution(\"8\") == \"2\"\nassert solution(\"32\") == \"1\"\nassert solution(\"128\") == \"4\"\n"
    },
    {
        "number": 3162,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\nh 1 4 1\nv 2 4 2\nh 10 2 2\nv 11 2 3''') == '2'\nassert solution('''1\nh 1 10 1\nh 5 10 2\nv 1 10 1\nv 5 10 3''') == '4'\nassert solution('''1\nh 1 10 1\nh 5 10 2\nv 1 10 1\nv 5 10 3''') == '4'\nassert solution('''1\nh 1 10 1\nh 5 10 2\nv 1 10 1\nv 5 10 3''') == '4'\nassert solution('''1\nh 1 10 1\nh 5 10 2\nv 1 10 1\nv 5 10 3''') == '4'\n"
    },
    {
        "number": 3162,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''h 1 4 1\nv 2 4 2\nh 10 2 2\nv 11 2 3''') == '2'\nassert solution('''h 1 10 1\nh 5 10 2\nv 1 10 1\nv 5 10 3''') == '4'\nassert solution('''h 1 4 1\nv 2 4 2\nh 10 2 2\nv 11 2 3''') == '2'\nassert solution('''h 1 4 1\nv 2 4 2\nh 10 2 2\nv 11 2 3''') == '2'\nassert solution('''h 1 4 1\nh 5 4 1\nv 2 4 2\nh 10 2 2\nv 11 2 3''') == '2'\n"
    },
    {
        "number": 3162,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\nh 1 4 1\nv 2 4 2\nh 10 2 2\nv 11 2 3''') == \"2\"\nassert solution('''2\nh 1 10 1\nh 5 10 2\nv 1 10 1\nv 5 10 3''') == \"4\"\nassert solution('''1\nh 1 10 1\nv 2 4 2\nh 10 2 2\nv 11 2 3''') == \"1\"\nassert solution('''10\nh 1 10 1\nh 5 10 2\nv 1 10 1\nv 5 10 3''') == \"4\"\nassert solution('''1\nh 1 10 1\nh 5 10 2\nv 1 10 1\nv 5 10 3''') == \"1\"\n"
    },
    {
        "number": 3162,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''h 1 4 1\nv 2 4 2\nh 10 2 2\nv 11 2 3''') == '2'\nassert solution('''h 1 10 1\nh 5 10 2\nv 1 10 1\nv 5 10 3''') == '4'\nassert solution('''h 1 1 2\nh 1 3 3\nh 1 1 1\nv 1 3 2\nv 1 1 1\nv 1 3 3''') == '0'\nassert solution('''h 1 1 2\nh 1 3 3\nh 1 1 1\nv 1 3 2\nv 1 1 1\nv 1 3 3''') == '4'\nassert solution('''h 1 2 3\nh 3 3 4\nh 1 1 2\nv 1 3 4\nv 2 1 3\nv 1 2 4\nv 3 1 2\nv 1 3 4\nv 3 2 3\nv 3 3 4\nv 3 4 3\nv 4 3 4\nv 2 1 2\nv 1 2 2\nv 2 1 2\nv 1 1 1\nv 1 1 1\nv 1 1 1\nv 1 3 3\nv 3 1 1\nv 3 1 1\nv 3 1 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv 3 3 3\nv"
    },
    {
        "number": 3162,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\nh 1 4 1\\nh 10 2 2\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\\n\") == \"2\"\nassert solution(\"1\\nh 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\\n\") == \"4\"\nassert solution(\"1\\nh 1 10 1\\nh 5 10 2\\nh 1 4 1\\nh 10 2 2\\nv 1 10 1\\nv 5 10 3\\n\") == \"2\"\nassert solution(\"1\\nh 1 10 1\\nv 1 10 1\\nv 5 10 3\\n\") == \"4\"\nassert solution(\"1\\nh 1 10 1\\nv 1 10 1\\nv 1 10 1\\nv 5 10 3\\n\") == \"4\"\n"
    },
    {
        "number": 3162,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''h 1 4 1\nv 2 4 2\nh 10 2 2\nv 11 2 3''') == '2'\nassert solution('''h 1 10 1\nh 5 10 2\nv 1 10 1\nv 5 10 3''') == '4'\nassert solution('''h 1 10 1\nh 10 2 2\nv 1 10 1\nv 5 10 3''') == '4'\nassert solution('''h 1 4 1\nh 2 4 2\nh 3 4 3\nh 4 4 4\nh 5 4 5\nh 6 4 6\nh 7 4 7\nh 8 4 8\nh 9 4 9\nh 10 4 10\nh 11 4 11\nh 12 4 12\nh 13 4 13\nh 14 4 14\nh 15 4 15\nh 16 4 16\nh 17 4 17\nh 18 4 18\nh 19 4 19\nh 20 4 20\nh 21 4 21\nh 22 4 22\nh 23 4 23\nh 24 4 24\nh 25 4 25\nh 26 4 26\nh 27 4 27\nh 28 4 28\nh 29 4 29\nh 30 4 30\nh 31 4 31\nh 32 4 32\nh 33 4 33\nh 34 4 34\nh 35 4 35\nh 36 4 36\nh 37 4 37\nh 38 4 38\nh 39 4 39\nh 40 4 40\nh 41 4 41\nh 42 4 42\nh 43 4 43\nh 44 4 44\nh 45 4 45\nh 46 4 46\nh 47 4 47\nh 48 4 48\nh 49 4 49\nh 50 4 50\nh 51 4 51\nh 52 4 52\nh 53 4 53\nh 54 4 54\nh 55 4 55\nh 56 4 56\nh 57 4 57\nh 58 4 58\nh 59 4 59\nh 60 4 60\nh 61 4 61\nh 62 4 62\nh 63 4 63\nh 64 4 64\nh 65 4 65\nh 66 4 66\nh 67 4 67\nh 68 4 68\nh 69 4 69\nh 70 4 70\nh 71 4 71\nh 72 4 72\nh 73 4 73\nh 74 4 74\nh 75 4 75\nh 76 4 76\nh 77 4 77\nh 78 4 78\nh 79 4 79\nh 80 4 80\nh 81 4 81\nh 82 4 82\nh 83 4 83\nh 84 4 84\nh 85 4 85\nh 86 4 86\nh 87 4 87\nh 88 4 88\nh 89 4 89\nh 90 4 90\nh 91 4 91\nh 92 4 92\nh 93 4 93\nh 94 4 94\nh 95 4 95\nh 96 4 96\nh 97 4 97\nh 98 4 98\nh 99 4 99\nh 100 4 100\nh 101 4 101\nh 102 4 102\nh 103 4 103\nh 104 4 104\nh 105 4 105\nh 106 4 106\nh 107 4 107\nh 108 4 108\nh 109 4 109\nh 110 4 110\nh 111 4 111\nh 112 4 112\nh 113 4 113\nh 114 4 114\nh 115 4 115\nh 116 4 116\nh 117 4 117\nh 118 4 118\nh 119 4 119\nh 120 4 120\nh 121 4 121\nh 122 4 122\nh 123 4 123\nh 124 4 124\nh 125 4 125\nh 126 4 126\nh 127 4 127\nh 128 4 128\nh 129 4 129\nh 130 4 130\nh 131 4 131\nh 132 4 132\nh 133 4 133\nh 134 4 134\nh 135 4 135\nh 136 4 136\nh 137 4 137\nh 138 4 138\nh 139 4 139\nh 140 4 140\nh 141 4 141\nh 142 4 142\nh 143 4 143\nh 144 4 144\nh 145 4 145\nh 146 4 146\nh 147 4 147\nh 148 4 148\nh 149 4 149\nh 150 4 150\nh 151 4 151\nh 152 4 152\nh 153 4 153\nh 154 4 154\nh 155 4 155\nh 156 4 156\nh 157 4 157\nh 158 4 158\nh 159 4 159\nh 160 4 160\nh 161 4 161\nh 162 4 162\nh 163 4 163\nh 164 4 164\nh 165 4 165\nh 166 4 166\nh 167 4 167\nh 168 4 168\nh 169 4 169\nh 170 4 170\nh 171 4 171\nh 172 4 172\nh 173 4 173\nh 174 4 174\nh 175 4 175\nh 176 4 176\nh 177 4 177\nh 178 4 178\nh 179 4 179\nh 180 4 180\nh 181 4 181\nh 182 4 182\nh 183 4 183\nh 184 4 184\nh 185 4 185\nh 186 4 186\nh 187 4 187\nh 188 4 188\nh 189 4 189\nh 190 4 190\nh 191 4 191\nh 192 4 192\nh 193 4 193\nh 194 4 194\nh 195 4 195\nh 196 4 196\nh 197 4 197\nh 198 4 198\nh 199 4 199\nh 200 4 200\nh 201 4 201\nh 202 4 202\nh 203 4 203\nh 204 4 204\nh 205 4 205\nh 206 4 206\nh 207 4 207\nh 208 4 208\nh 209 4 209\nh 210 4 210\nh 211 4 211\nh 212 4 212\nh 213 4 213\nh 214 4 214\nh 215 4 215\nh 216 4 216\nh 217 4 217\nh 218 4 218\nh 219 4 219\nh 220 4 220\nh 221 4 221\nh 222 4 222\nh 223 4 223\nh 224 4 224\nh 225 4 225\nh 226 4 226\nh 227 4 227\nh 228 4 228\nh 229 4 229\nh 230 4 230\nh 231 4 231\nh 232 4 232\nh 233 4 233\nh 234 4 234\nh 235 4 235\nh 236 4 236\nh 237 4 237\nh 238 4 238\nh 239 4 239\nh 240 4 240\nh 241 4 241\nh 242 4 242\nh 243 4 243\nh 244 4 244\nh 245 4 245\nh 246 4 246\nh 247 4 247\nh 248 4 248\nh 249 4 249\nh 250 4 250\nh 251 4 251\nh 252 4 252\nh 253 4 253\nh 254 4 254\nh 255 4 255\nh 256 4 256\nh 257 4 257\nh 258"
    },
    {
        "number": 3162,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"1\\n\") == \"\"\nassert solution(\"\\n1\") == \"\"\n"
    },
    {
        "number": 3162,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3162,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5\\nh 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3\") == \"2\"\nassert solution(\"3\\nh 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\") == \"4\"\nassert solution(\"5\\nh 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3\") == \"2\"\nassert solution(\"4\\nh 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\") == \"4\"\nassert solution(\"2\\nh 1 10 1\\nv 1 10 1\") == \"0\"\n"
    },
    {
        "number": 3162,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\nprint(f\"solution successfully passed\")\n\n\"\"\"\n"
    },
    {
        "number": 3163,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 4\n1 0 2 0\n3 5 4 0\n2 1 0 0\n3 0 4 5''') == '2'\nassert solution('''4 4\n1 2 3 4\n5 6 7 8\n9 0 10 11\n2 3 4 0\n3 0 4 5''') == '-1'\nassert solution('''2 4\n1 0 2 0\n3 5 4 0\n2 1 0 0\n3 0 4 5''') == '4'\n\n'''\n"
    },
    {
        "number": 3163,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 4') == '2'\nassert solution('3 3') == '-1'\nassert solution('1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5') == '2'\nassert solution('2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\\n4 2 3\\n6 5 1\\n0 7 8') == '4'\nassert solution('3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8') == '-1'\n"
    },
    {
        "number": 3163,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('3 5 4') == '-1'\nassert solution('2 1 0 0') == '4'\nassert solution('3 0 4 5') == '-1'\nassert solution('6 5 4 2 1 0') == '3'\n"
    },
    {
        "number": 3163,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"2 3\") == \"-1\"\nassert solution(\"1 3\") == \"2\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"2 2\") == \"0\"\n"
    },
    {
        "number": 3163,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 4\n1 0 2 0\n3 5 4 0\n2 1 0 0\n3 0 4 5''') == '2'\nassert solution('''2 3\n1 2 3\n4 5 6\n7 8 0\n4 2 3\n6 5 1\n0 7 8''') == '4'\nassert solution('''1 1\n1''') == '-1'\nassert solution('''1\n1\n1''') == '-1'\nassert solution('''2 3\n1 2 3\n4 5 6\n7 8 0\n4 2 3\n6 5 1\n0 7 8''') == '2'\n"
    },
    {
        "number": 3163,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 4\n1 0 2 0\n3 5 4 0\n2 1 0 0\n3 0 4 5\n''') == '2'\n\nassert solution('''3 3\n1 2 3\n4 5 6\n7 8 0\n4 2 3\n6 5 1\n0 7 8\n''') == '4'\n\nassert solution('''2 2\n1 2\n3 4\n''') == '-1'\n\nassert solution('''2 1\n1 0\n3 4\n''') == '-1'\n\nassert solution('''2 4\n1 0 2 0\n3 5 4 0\n2 1 0 0\n3 0 4 5\n''') == '2'"
    },
    {
        "number": 3163,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\\n2 3 4 5\\n3 1 4 5\\n2 3 4 5\\n3 0 4 5\\n2 3 4 5\\n3 0 4 5\") == \"2\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\\n0 0 0\\n2 3 4 5\\n3 1 4 5\\n3 0 4 5\") == \"4\"\nassert solution(\"1\\n2\\n3\") == \"-1\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\\n0 0 0\\n2 3 4 5\\n3 1 4 5\\n3 0 4 5\") == \"4\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\") == \"8\"\n"
    },
    {
        "number": 3163,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 4\n1 0 2 0\n3 5 4 0\n2 1 0 0\n3 0 4 5\n''') == '2'\nassert solution('''3 3\n1 2 3\n4 5 6\n7 8 0\n4 2 3\n6 5 1\n0 7 8\n''') == '4'\nassert solution('''5 5\n1 2 3 0\n4 5 6 0\n7 8 9 0\n0 0 10 0\n0 0 0 0\n1 1 1 0\n''') == '3'\nassert solution('''6 5\n1 2 3 0\n4 5 6 0\n7 8 9 0\n0 0 10 0\n0 0 0 0\n1 1 1 0\n''') == '2'\nassert solution('''6 5\n1 2 3 0\n4 5 6 0\n7 8 9 0\n0 0 10 0\n0 0 0 0\n1 1 1 0\n''') == '0'\n"
    },
    {
        "number": 3163,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\") == \"4\"\nassert solution(\"2 4 3\") == \"2\"\nassert solution(\"2 1 0 0\") == \"-1\"\nassert solution(\"3 0 4 5\") == \"6\"\nassert solution(\"2 1 0 0\") == \"4\"\n"
    },
    {
        "number": 3163,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\\n4 5 6\\n7 8 0\") == \"4\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n3 2 1\") == \"4\"\nassert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\") == \"2\"\nassert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\\n1 1 1 1\") == \"-1\"\nassert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\\n1 1 1 1\\n2 2 2 2\") == \"-1\"\n"
    },
    {
        "number": 3164,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1 2 1 3 1 3 1 2') == 2\nassert solution('2\\n1 2 1 3 1 3 1 2') == 4\nassert solution('3\\n1 2 1 3 1 3 1 2') == 2\nassert solution('4\\n1 2 1 3 1 3 1 2') == 4\nassert solution('5\\n1 2 1 3 1 3 1 2') == 2\n"
    },
    {
        "number": 3164,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 2 1 3 1 3 1 2''') == 4\nassert solution('''1 2 3 4 5 6 7 8 9''') == 5\nassert solution('''1 2 3 4 5 6 7 8 9 10''') == 5\nassert solution('''1 2 3 4 5 6 7 8 9 10 11''') == 4\nassert solution('''1 2 3 4 5 6 7 8 9 10 11 12''') == 3\n"
    },
    {
        "number": 3164,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\"\n\n\"\"\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 3164,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin[0]"
    },
    {
        "number": 3164,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 3 4 2\") == 2\nassert solution(\"1 2 3 3 4 2\") == 2\nassert solution(\"1 2 3 3 4 5\") == 4\nassert solution(\"1 2 3 3 4 4\") == 4\nassert solution(\"1 2 3 3 4 4\") == 4\n"
    },
    {
        "number": 3164,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"6\n    1 2 3 3 4 2\"\"\") == \"2\"\nassert solution(\n    \"\"\"8\n    1 2 1 3 1 3 1 2\"\"\") == \"4\"\nprint(\"All set? Click 'Check' to earn cool rewards!\")\n"
    },
    {
        "number": 3164,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3164,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 3 4 2\") == 2\nassert solution(\"1 2 1 3 1 3 1 2\") == 4\nassert solution(\"1 2 1 3 1 3 1 2\") == 4\nassert solution(\"1 2 1 3 1 3 1\") == 4\nassert solution(\"1 2 1 3 1 3 1 3 1 2\") == 4\n"
    },
    {
        "number": 3164,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3 3 4 2') == 2\nassert solution('1 2 1 3 1 3 1 2') == 4\nprint(\"Tests passed successfully.\")\n"
    },
    {
        "number": 3164,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3 3 4 2\") == 2\nassert solution(\"1 2 3 3 4 1\") == 4\nassert solution(\"1 2 1 3 1 3 1 2\") == 4\n"
    },
    {
        "number": 3165,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 2 2\") == \"4\\n0\"\nassert solution(\"2 2 2\") == \"4\\n0\"\nassert solution(\"2 2 2\") == \"4\\n0\"\nassert solution(\"2 2 2\") == \"4\\n0\"\nassert solution(\"2 2 2\") == \"4\\n0\"\n"
    },
    {
        "number": 3165,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\\n\") == \"4\\n0\\n\"\nassert solution(\"2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\\n\") == \"4\\n2\\n\"\nassert solution(\"2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\\n\") == \"4\\n2\\n\"\n\"\"\"\n"
    },
    {
        "number": 3165,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected(stdin)\nprint(solution(stdin))\n\"\"\""
    },
    {
        "number": 3165,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 2 2\n1 1 1\n2 2 2\n2 2 2 1\n1 1 1 2\n''') == '4\\n0\\n'\nassert solution('''1 1 1\n1 1 1\n2 2 2\n2 2 2 1\n1 1 1 2\n''') == '4\\n2\\n'\n\nprint(solution('''10 10 10\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2"
    },
    {
        "number": 3165,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 2 2\n1 1 1\n2 2 1\n2 2 2 1\n1 1 1 2''') == '4\\n0\\n'\nassert solution('''2 2 2\n1 1 1\n2 2 2\n2 2 2 1\n1 1 1 2''') == '4\\n2\\n'\nassert solution('''2 2 2\n1 1 1\n2 2 2\n2 2 2 1\n1 1 1 2''') == '4\\n2\\n'\nassert solution('''2 2 2\n1 1 1\n2 2 2\n2 2 2 1\n1 1 1 2''') == '4\\n2\\n'\nassert solution('''2 2 2\n1 1 1\n2 2 2\n2 2 2 1\n1 1 1 2''') == '4\\n2\\n'\n"
    },
    {
        "number": 3165,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    '2 2 2\\n' +\n    '1 1 1\\n' +\n    '2 2 1\\n' +\n    '2 2 2 1\\n' +\n    '1 1 1 2'\n) == '4\\n0'\nassert solution(\n    '2 2 2\\n' +\n    '1 1 1\\n' +\n    '2 2 1\\n' +\n    '2 2 2 1\\n' +\n    '1 1 1 2'\n) == '4\\n2'\nprint('Passed')\n"
    },
    {
        "number": 3165,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3165,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\\n') == '4\\n0\\n'\nassert solution('2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\\n') == '4\\n2\\n'\nassert solution('2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\\n') == '4\\n2\\n'\nassert solution('2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\\n') == '4\\n2\\n'\nassert solution('2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\\n') == '4\\n2\\n'\n"
    },
    {
        "number": 3165,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 2 2\n1 1 1\n2 2 1\n2 2 2 1\n1 1 1 2\n''') == '4\\n0\\n'\nassert solution('''3 3 3\n1 1 1 1\n2 2 2 2\n2 2 2 2 1\n1 1 1 1 2\n''') == '8\\n0\\n'\nassert solution('''3 3 3\n2 2 2 2\n1 1 1 1\n2 2 2 2 1\n1 1 1 1 2\n''') == '8\\n0\\n'\nassert solution('''3 3 3\n2 2 2 2\n1 1 1 1\n1 2 2 2 1\n1 1 1 1 2\n''') == '8\\n0\\n'\nassert solution('''3 3 3\n2 2 2 2\n1 1 1 1\n1 1 1 1\n1 1 1 1 1\n''') == '8\\n0\\n'\n"
    },
    {
        "number": 3165,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2 2') == '4\\n0'\nassert solution('1 1 1') == '0\\n0'\nassert solution('2 2 1') == '4\\n0'\nassert solution('2 2 2 1') == '4\\n2'\n'''\n\nfrom functools import reduce\n\nn, k, p = map(int, stdin.strip().split(' '))\n\nR = [int(stdin.strip().split(' ')[i]) for i in range(k)]\n\nC = [int(stdin.strip().split(' ')[i]) for i in range(k, 2 * k)]\n\nP = [int(stdin.strip().split(' ')[i]) for i in range(2 * k, 3 * k)]\n\nR_C = [reduce(lambda x, y: x ^ y, [R[i] for i in range(0, l)]) for l in range(k)]\n\nC_R = [reduce(lambda x, y: x ^ y, [C[i] for i in range(0, l)]) for l in range(k)]"
    },
    {
        "number": 3166,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n4 2\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n0 2\n\"\"\") == \"1\"\nassert solution(\n\"\"\"\n4 2\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n1 2\n\"\"\") == \"impossible\"\nassert solution(\n\"\"\"\n4 2\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n0 2\n\"\"\") == \"impossible\"\nassert solution(\n\"\"\"\n10 10\n0 0 1 0 0 1 1 1 1 1 1 1\n1 0 0 1 1 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n\"\"\") == \"impossible\"\nassert solution(\n\"\"\"\n6 2\n0 0 1 0 0 1 1\n1 0 0 1 1 1 0\n1 1 1 1 1 0 0\n1 1 1 1 1 0 0\n1 1 1 1 1 0 0\n1 1 1 1 1 1 0\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3166,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"impossible\"\n"
    },
    {
        "number": 3166,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3166,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"3 2\") == \"\"\nassert solution(\"3 3\") == \"\"\nassert solution(\"1 2 3 4\") == \"\"\n"
    },
    {
        "number": 3166,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2') == '1'\nassert solution('3 3') == '0'\nassert solution('10 10') == 'impossible'\nassert solution('5 5') == '0'\nassert solution('1000 2') == '19'\n"
    },
    {
        "number": 3166,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n        '4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2'\n    ) == '1'\nassert solution(\n        '4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2'\n    ) == 'impossible'\nassert solution(\n        '4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2'\n    ) == 'impossible'\nassert solution(\n        '4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2'\n    ) == 'impossible'\nassert solution(\n        '4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2'\n    ) == 'impossible'\n"
    },
    {
        "number": 3166,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == None\nassert solution(stdin) == None\nassert solution(stdin) == None\nassert solution(stdin) == None\nassert solution(stdin) == None\n"
    },
    {
        "number": 3166,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\") == \"1\"\nassert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\") == \"impossible\"\nassert solution(\"2 2\\n0 0\\n0 1\") == \"impossible\"\nassert solution(\"1 1\\n0\") == \"0\"\nassert solution(\"3 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\") == \"1\"\n"
    },
    {
        "number": 3166,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3166,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3167,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"3 3\") == \"\"\nassert solution(\"1 1 2 1\") == \"35\"\n"
    },
    {
        "number": 3167,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3167,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 3\\n3 7 10\\n3\\n0 10\\n2 6\\n7 7') == '8\\n2\\n1'\nassert solution('10 10\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7') == '35\\n18\\n3'\nassert solution('10 10\\n3 7 10\\n3\\n0 9\\n2 6\\n7 7') == '8\\n2\\n1'\nassert solution('10 10\\n3 7 10\\n3\\n0 9\\n2 6\\n7 7') == '8\\n2\\n1'\n\"\"\"\nimport sys\n"
    },
    {
        "number": 3167,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n10 4\n1 1 2 1\n3\n0 9\n2 6\n7 7\n''') == '35\\n18\\n3'\nassert solution('''\n10 4\n1 1 2 1\n3\n0 9\n2 6\n7 7\n''') == '8\\n2\\n1'\nassert solution('''\n100 10\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n7 7\n8 8\n3 3\n0 0\n"
    },
    {
        "number": 3167,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n1\\n1') == '1'\nassert solution('2\\n2\\n2\\n2') == '2'\nassert solution('1\\n1\\n2\\n2\\n1') == '4'\nassert solution('1\\n2\\n3\\n4\\n1') == '3'\nassert solution('1\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 3167,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10 4\n1 1 2 1\n3\n0 9\n2 6\n7 7''') == '35\\n18\\n3'\n'''\n    pass\n"
    },
    {
        "number": 3167,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"10 4\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7\\n\") == \"35\\n18\\n3\"\n\"\"\"\n\nimport sys\n\nn, k = list(map(int, sys.stdin.readline().split()))\nseq = [0] * n\n\nfor _ in range(k):\n    seq[int(sys.stdin.readline())] += 1\n\nfor _ in range(int(sys.stdin.readline())):\n    l, r = list(map(int, sys.stdin.readline().split()))\n    print(sum(seq[l-1:r]))\n"
    },
    {
        "number": 3167,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10 4\n1 1 2 1\n3\n0 9\n2 6\n7 7''') == '35\\n18\\n3\\n'\nassert solution('''10 3\n3 7 10\n3\n0 10\n2 6\n7 7''') == '8\\n2\\n1\\n'\n'''\n'''\n"
    },
    {
        "number": 3167,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3167,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''10 4\n1 1 2 1\n3\n0 9\n2 6\n7 7''') == '''35\n18\n3'''\n\nassert solution(\n'''10 4\n1 1 2 1\n3\n0 9\n2 6\n7 7\n0 10\n2 6\n7 7\n0 10''') == '''8\n2\n1\n1'''\n\nassert solution(\n'''10 4\n1 1 2 1\n3\n0 9\n2 6\n7 7\n0 10\n2 6\n7 7\n0 10''') == '''8\n2\n1\n1'''\n\nassert solution(\n'''10 4\n1 1 2 1\n3\n0 9\n2 6\n7 7\n0 10\n2 6\n7 7\n0 10''') == '''8\n2\n1\n1'''\n\nassert solution(\n'''10 4\n1 1 2 1\n3\n0 9\n2 6\n7 7\n0 10\n2 6\n7 7\n0 10\n2 6\n7 7\n0 10''') == '''8\n2\n1\n1'''\n"
    },
    {
        "number": 3168,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '3', 'Aborting because of wrong result'\nprint('Test1 passed')\n\n'''\n"
    },
    {
        "number": 3168,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''4\n1\n2\n3\n4\n'''\n) == '0\\n1\\n3\\n6'\n\nassert solution(\n'''5\n3\n2\n4\n1\n5\n'''\n) == '0\\n1\\n2\\n4\\n6'\n\nassert solution(\n'''3\n2\n4\n1\n5\n'''\n) == '0\\n1\\n3'\n"
    },
    {
        "number": 3168,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3168,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"4\n1\n2\n3\n4\n\"\"\") == '0\\n1\\n3\\n6'\n\nassert solution(\n\"\"\"5\n3\n2\n4\n1\n5\n\"\"\") == '0\\n1\\n2\\n4\\n6'\n\nassert solution(\n\"\"\"6\n3\n2\n4\n1\n5\n6\n\"\"\") == '0\\n1\\n2\\n4\\n6\\n9'\n\nassert solution(\n\"\"\"7\n1\n2\n3\n4\n5\n6\n7\n\"\"\") == '0\\n1\\n3\\n6\\n9\\n12'\n\nassert solution(\n\"\"\"8\n1\n2\n3\n4\n5\n6\n7\n8\n\"\"\") == '0\\n1\\n3\\n6\\n9\\n12\\n15'"
    },
    {
        "number": 3168,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == ''\n\"\"\"\n\nfrom sys import stdin\nfrom math import ceil, log\n\nN = int(stdin.readline())\nnums = [int(x) for x in stdin.readlines()]"
    },
    {
        "number": 3168,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n1\n2\n3\n4''') == '0\\n1\\n3\\n6'\nassert solution('''5\n3\n2\n4\n1\n5''') == '0\\n1\\n2\\n4\\n6'\nassert solution('''9\n1\n2\n3\n4\n5\n6\n7\n8\n9''') == '0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8'\nassert solution('''10\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2''') == '0\\n1\\n1\\n2\\n3\\n4\\n5\\n7\\n8\\n9'\nassert solution('''20\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2''') == '0\\n1\\n1\\n2\\n3\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19'\n"
    },
    {
        "number": 3168,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n1\n2\n3\n4''') == '0\\n1\\n3\\n6'\n\nassert solution('''5\n3\n2\n4\n1\n5''') == '0\\n1\\n2\\n4\\n6'\n"
    },
    {
        "number": 3168,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3168,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3168,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n1\n2\n3\n4''') == '0\\n1\\n3\\n6'\nassert solution('''5\n3\n2\n4\n1\n5''') == '0\\n1\\n2\\n4\\n6'\nassert solution('''5\n3\n2\n4\n1\n5''') == '0\\n1\\n2\\n4\\n6'\nassert solution('''5\n3\n2\n4\n1\n5\n1\n4\n1\n3\n1\n''') == '0\\n1\\n2\\n4\\n3\\n6\\n7\\n8\\n9'\nassert solution('''5\n3\n2\n4\n1\n5\n2\n4\n1\n3\n1\n''') == '0\\n1\\n2\\n4\\n3\\n6\\n7\\n8\\n9'\n"
    },
    {
        "number": 3169,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3169,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n0\\n1\\n1\") == \"4 3 1 2\"\nassert solution(\"2\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\") == \"4 3 1 2\"\nassert solution(\"3\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\") == \"4 3 1 2\"\nassert solution(\"4\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\") == \"4 3 1 2\"\nassert solution(\"5\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\") == \"4 3 1 2\"\n"
    },
    {
        "number": 3169,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0\\n1\\n2\\n3\\n\") == \"2 1 3 0\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"0 1 1 1\"\nassert solution(\"2\\n1 2 0 1\\n2 1 2 0\\n2 1 2 0\\n2 1 2 0\\n\") == \"1 2 1 2\"\nassert solution(\"3\\n0 0 1 1\\n0 1 2 0\\n2 1 2 0\\n2 2 3 3\\n\") == \"1 2 3 0\"\nassert solution(\"4\\n0 0 1 1\\n0 1 2 0\\n2 1 2 0\\n2 2 3 3\\n4 0 3 1\\n\") == \"4 3 2 1\"\n"
    },
    {
        "number": 3169,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n1 3 2 2\n1 1 3 2\n2 4 7 3\n3 3 5 3\n''') == '4 3 1 2'\nassert solution('''2\n0 0 1 1\n1 2 0 3\n2 2 3 3\n4 0 3 1\n''') == '2 4 1 3'\nassert solution('''3\n0 0 1 1\n1 2 0 3\n2 2 3 3\n4 0 3 1\n''') == '4 3 1 2'\nassert solution('''4\n0 0 1 1\n1 2 0 3\n2 2 3 3\n4 0 3 1\n''') == '4 3 1 2'\nassert solution('''5\n0 0 1 1\n1 2 0 3\n2 2 3 3\n4 0 3 1\n5 4 3 2\n''') == '4 3 1 2'\n"
    },
    {
        "number": 3169,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n1 3 2 2\n1 1 3 2\n2 4 7 3\n3 3 5 3''') == '2 4 1 3'\nassert solution('''4\n0 0 1 1\n1 2 0 3\n2 2 3 3\n4 0 3 1''') == '4 3 1 2'\nassert solution('''2\n0 0 1 1\n1 2 0 3\n2 2 3 3\n4 0 3 1''') == '2 1 4 3'\nassert solution('''3\n0 0 1 1\n1 2 0 3\n2 2 3 3\n4 0 3 1''') == '2 3 1 4'\nassert solution('''5\n0 0 1 1\n1 2 0 3\n2 2 3 3\n4 0 3 1\n3 4 0 1''') == '2 4 1 3'\n"
    },
    {
        "number": 3169,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n1 3 2 2\n1 1 3 2\n2 4 7 3\n3 3 5 3\n''') == '2 4 1 3'\nassert solution('''4\n0 0 1 1\n1 2 0 3\n2 2 3 3\n4 0 3 1\n''') == '4 3 1 2'\nassert solution('''4\n0 0 1 1\n1 2 0 3\n2 2 3 3\n4 0 3 1\n''') == '4 3 1 2'\nassert solution('''4\n1 3 2 2\n1 1 3 2\n2 4 7 3\n3 3 5 3\n''') == '1 2 3 4'\nassert solution('''4\n0 0 1 1\n1 2 0 3\n2 2 3 3\n4 0 3 1\n''') == '1 2 3 4'\n"
    },
    {
        "number": 3169,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 3169,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0\\n0 1 1 3\\n1 2 0 3\") == \"2 4 1 3\"\nassert solution(\"0\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\") == \"4 3 1 2\"\nassert solution(\"0\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\\n2 0 1 3\") == \"4 3 1 2\"\nassert solution(\"0\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\\n3 3 3 3\\n2 0 1 3\") == \"4 3 1 2\"\nassert solution(\"0\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\\n3 3 3 3\\n2 0 1 3\\n0 0 1 1\") == \"4 3 1 2\"\n"
    },
    {
        "number": 3169,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\\n') == '2 4 1 3'\nassert solution('4\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\\n') == '4 3 1 2'\nassert solution('2\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\\n') == '2 4 1 3'\nassert solution('2\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\\n') == '2 4 1 3'\nassert solution('5\\n1 1 1 1 1\\n2 2 2 2 2\\n3 3 3 3 3\\n4 4 4 4 4\\n5 5 5 5 5\\n') == '1 2 3 4 5'\n"
    },
    {
        "number": 3169,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1 1\\n2 2\\n3 3\\n4 4\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1') == '4 3 1 2'\nassert solution('1\\n1 1\\n2 2\\n3 3\\n4 4\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1"
    },
    {
        "number": 3170,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5') == 'Theta wins'\nassert solution('89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49') == 'Theta wins'\nassert solution('9678547TJQ37A6JT82864QA982QA9K5K5QJK4A9TK4AQA5J5A3K7') == 'Theta wins'\nassert solution('9678547TJQ37A6JT82864QA982QA9K5K5QJK4A9TK4AQA5J5A3K7') == 'Theta wins'\n\"\"\"\n\nfrom collections import deque\nfrom functools import lru_cache\n\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 3170,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"123456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\"\n\n\"\"\"\n\nfrom collections import Counter"
    },
    {
        "number": 3170,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == output"
    },
    {
        "number": 3170,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\"\n"
    },
    {
        "number": 3170,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5') == 'Theta wins'\nassert solution('89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49') == 'Theta wins'\nassert solution('3456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5') == 'Theta wins'\nassert solution('J56789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5') == 'Theta wins'\nassert solution('3456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5') == 'Theta wins'\n"
    },
    {
        "number": 3170,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(sample_input) == \"Theta wins\"\nprint(solution(input()))\n"
    },
    {
        "number": 3170,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5') == 'Theta wins'\nassert solution('89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49') == 'Theta wins'\n\"\"\"\n\nimport collections\nimport sys\n\n\nclass Hand:\n    def __init__(self, deck):\n        self.deck = deck\n        self.cards = collections.deque()\n\n    def draw(self):\n        return self.deck.popleft()\n\n    def __getitem__(self, item):\n        return self.cards[item]\n\n    def __setitem__(self, key, value):\n        self.cards[key] = value\n\n    def __str__(self):\n        return str(self.cards)\n\n    def __repr__(self):\n        return self.__str__()\n"
    },
    {
        "number": 3170,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5') == 'Theta wins'\nassert solution('89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49') == 'Theta wins'\n\n\"\"\"\n\nfrom collections import defaultdict\n\n\nclass Deck:\n    def __init__(self):\n        self.cards = self.__generate_deck()\n        self.shuffle()\n\n    def __generate_deck(self):\n        cards = []\n        cards.extend('A' for _ in range(1, 11))\n        cards.extend('T' for _ in range(11, 22))\n        cards.extend('J' for _ in range(22, 32))\n        cards.extend('Q' for _ in range(32, 42))\n        cards.extend('K' for _ in range(42, 52))\n        return cards\n\n    def shuffle(self):\n        self.cards = self.cards * 2\n        shuffled = self.cards[:52]\n        self.cards = shuffled\n\n    def draw(self):\n        return self.cards.pop(0)\n\n    def remaining_cards(self):\n        return len(self.cards)\n\n    def place_card(self, card):\n        self.cards.remove(card)\n"
    },
    {
        "number": 3170,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5') == 'Theta wins'\nassert solution('89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49') == 'Theta wins'\nassert solution('123456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5') == 'Theta loses'\nassert solution('89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49') == 'Theta loses'\nassert solution('23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5') == 'Theta loses'\n"
    },
    {
        "number": 3171,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2\\n1 charlatan 1\\n1 not charlatan 1') == 'charlatan'\nassert solution('2 1\\n1 and fabulist 1 fabulist 2') == 'fabulist'\nassert solution('1 2\\n1 truther 1\\n1 not truther 1\\n1 fabulist 1 fabulist 2') == 'truther'\nassert solution('1 2\\n1 not truther 1\\n1 fabulist 1 fabulist 2') == 'truther'\nassert solution('1 2\\n1 fabulist 1 fabulist 2') == 'fabulist'\n"
    },
    {
        "number": 3171,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2\\n1 charlatan 1\\n1 not charlatan 1') == 'charlatan\\nfabulist\\ntruther'\nassert solution('2 1\\n1 and fabulist 1 fabulist 2') == 'fabulist\\ntruther'\n\n\"\"\"\n"
    },
    {
        "number": 3171,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n1 2\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n\"\"\".strip()\n) == 'fabulist'\n\nassert solution(\n    \"\"\"\n1 2\n1 fabulist 1 fabulist 2\n1 and charlatan 1\n\"\"\".strip()\n) == 'fabulist'\n\nassert solution(\n    \"\"\"\n1 2\n1 fabulist 1 fabulist 2\n1 and charlatan 1\n\"\"\".strip()\n) == 'fabulist'\n\nassert solution(\n    \"\"\"\n1 2\n1 fabulist 1 fabulist 2\n1 and charlatan 1\n1 charlatan 2\n1 not charlatan 1\n\"\"\".strip()\n) == 'truther'\n\nassert solution(\n    \"\"\"\n1 2\n1 fabulist 1 fabulist 2\n1 and charlatan 1\n1 charlatan 2\n1 not charlatan 1\n1 not charlatan 2\n\"\"\".strip()\n) == 'fabulist'"
    },
    {
        "number": 3171,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 2\n1 charlatan 1\n1 not charlatan 1\n''') == 'charlatan'\nassert solution('''2 1\n1 and fabulist 1 fabulist 2\nSample Output 2:\nfabulist\ntruther\n"
    },
    {
        "number": 3171,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(sys.stdin.read()))\n\n--- Part Two ---\nCongratulations! You have completed this challenge. But you were only able to figure out the character types of the candidates. Can you go back and investigate what was going on?\n\nFor the curious, here is the same input as above:\n1 2\n1 and fabulist 1 fabulist 2\n1 not charlatan 1\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n1 charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n1 truther 1\n1 not charlatan 1\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n1 truther 1\n1 not charlatan 1\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n1 truther 1\n1 not charlatan 1\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n1 truther 1\n1 not charlatan 1\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n1 truther 1\n1 not charlatan 1\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n1 truther 1\n1 not charlatan 1\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n1 truther 1\n1 not charlatan 1\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n1 truther 1\n1 not charlatan 1\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n1 truther 1\n1 not charlatan 1\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n1 truther 1\n1 not charlatan 1\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n1 truther 1\n1 not charlatan 1\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n1 truther 1\n1 not charlatan 1\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n1 truther 1\n1 not charlatan 1\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n1 truther 1\n1 not charlatan 1\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n1 truther 1\n1 not charlatan 1\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n1 truther 1\n1 not charlatan 1\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n1 truther 1\n1 not charlatan 1\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n1 truther 1\n1 not charlatan 1\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n1 truther 1\n1 not charlatan 1\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n1 truther 1\n1 not char"
    },
    {
        "number": 3171,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2\\n1 charlatan 1\\n1 not charlatan 1') == 'charlatan\\n'\nassert solution('2 1\\n1 and fabulist 1 fabulist 2') == 'fabulist\\ntruther\\n'\nassert solution('1 3\\n1 truther 1\\n1 truther 2\\n1 fabulist 1 fabulist 2') == 'truther\\n'\nassert solution('1 1\\n1 truther 1\\n1 fabulist 1 fabulist 2') == 'truther\\n'\nassert solution('1 1\\n1 truther 1\\n1 fabulist 1 fabulist 2\\n1 charlatan 1') == 'truther\\n'\n"
    },
    {
        "number": 3171,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(dedent(\"\"\"\n    1 2\n    1 charlatan 1\n    1 not charlatan 1\n\"\"\")) == \"fabulist\"\n\nassert solution(dedent(\"\"\"\n    2 1\n    1 and fabulist 1 fabulist 2\n\"\"\")) == \"fabulist\"\n\nassert solution(dedent(\"\"\"\n    1 1\n    1 and fabulist 1 fabulist 2\n\"\"\")) == \"fabulist\"\n\nassert solution(dedent(\"\"\"\n    3 2\n    1 and fabulist 1 fabulist 2\n    1 charlatan 1\n    1 not charlatan 1\n\"\"\")) == \"fabulist\"\n\nassert solution(dedent(\"\"\"\n    1 1\n    1 and fabulist 1 fabulist 2\n    1 charlatan 1\n    1 not charlatan 1\n\"\"\")) == \"fabulist\""
    },
    {
        "number": 3171,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 2\n1 charlatan 1\n1 not charlatan 1''') == 'fabulist'\nassert solution('''2 1\n1 and fabulist 1 fabulist 2''') == 'fabulist'\nassert solution('''3 1\n1 and fabulist 1 fabulist 2\n1 and truther 1\n1 not fabulist 1\n1 not truther 1\n1 truther 1\n1 not charlatan 1\n1 charlatan 1\n1 not truther 1\n1 not charlatan 1\n1 not fabulist 1\n1 not charlatan 1\n1 not fabulist 1\n1 not fabulist 1\n1 not charlatan 1\n1 not fabulist 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n"
    },
    {
        "number": 3171,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1 charlatan 1\\n1 not charlatan 1\") == \"charlatan\"\nassert solution(\"2\\n1 and fabulist 1 fabulist 2\") == \"fabulist\"\nassert solution(\"1\\n1 truther 1\") == \"truther\"\nassert solution(\"2\\n1 truther 1\\n1 not 1 1\") == \"truther\"\nassert solution(\"2\\n1 fabulist 1 fabulist 2\\n1 not 1 1\") == \"fabulist\"\n"
    },
    {
        "number": 3171,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"1 2\n1 truther 1\n1 not charlatan 1\n1 not charlatan 1\"\"\") == \"fabulist\"\nassert solution(\n    \"\"\"1 2\n1 fabulist 1\n1 not charlatan 1\n1 not charlatan 1\"\"\") == \"fabulist\"\nassert solution(\n    \"\"\"1 2\n1 fabulist 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\"\"\") == \"fabulist\"\nassert solution(\n    \"\"\"1 2\n1 fabulist 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\"\"\") == \"fabulist\"\nassert solution(\n    \"\"\"1 2\n1 truther 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\"\"\") == \"fabulist\"\n"
    },
    {
        "number": 3172,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1.00 5.00\n3.00 3.00\n4.00 2.00\n6.00 4.50\n7.00 1.00\n''') == '4'\nassert solution('''\n5\n-1.50 -1.00\n1.50 -1.00\n0.00 1.00\n''') == '3'\nassert solution('''\n3\n-1.50 -1.00\n1.50 -1.00\n0.00 1.00\n''') == '3'\nassert solution('''\n2\n-1.50 -1.00\n1.50 -1.00\n0.00 1.00\n''') == '2'\nassert solution('''\n2\n-1.50 -1.00\n1.50 -1.00\n-0.00 1.00\n''') == '1'\n"
    },
    {
        "number": 3172,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3172,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\") == \"4\"\nassert solution(\"-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\") == \"3\"\nassert solution(\"1.50 -1.00\\n-1.50 -1.00\\n0.00 1.00\") == \"3\"\nassert solution(\"-1.50 -1.00\\n1.50 -1.00\\n-1.50 -1.00\") == \"3\"\nassert solution(\"1.50 -1.00\\n-1.50 -1.00\\n-1.50 -1.00\") == \"3\"\n"
    },
    {
        "number": 3172,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\") == \"4\"\nassert solution(\"5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\") == \"5\"\nassert solution(\"3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\\n\") == \"3\"\nassert solution(\"1\\n1.00 1.00\\n0.00 1.00\\n\") == \"1\"\nassert solution(\"2\\n1.00 2.00\\n1.00 1.00\\n\") == \"2\"\n"
    },
    {
        "number": 3172,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"-1.50 -1.00\") == \"\"\nassert solution(\"1.50 -1.00\") == \"\"\nassert solution(\"-1.00 1.00\") == \"\"\n"
    },
    {
        "number": 3172,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\") == \"4\"\nassert solution(\"3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\") == \"3\"\n"
    },
    {
        "number": 3172,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4\"\n"
    },
    {
        "number": 3172,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n1.00 5.00\n3.00 3.00\n4.00 2.00\n6.00 4.50\n7.00 1.00''') == '4'\nassert solution('''3\n-1.50 -1.00\n1.50 -1.00\n0.00 1.00''') == '3'\nassert solution('''1\n1.00 1.00\n1.00 1.00\n1.00 1.00''') == '1'\nassert solution('''1\n1.00 1.00\n1.00 1.00\n1.00 1.00\n1.00 1.00''') == '1'\nassert solution('''1\n1.00 1.00\n1.00 1.00\n1.00 1.00\n1.00 1.00\n1.00 1.00''') == '1'\n"
    },
    {
        "number": 3172,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output\n"
    },
    {
        "number": 3172,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1.00 5.00\n3.00 3.00\n4.00 2.00\n6.00 4.50\n7.00 1.00''') == '4'\nassert solution('''-1.50 -1.00\n1.50 -1.00\n0.00 1.00''') == '3'\nassert solution('''0.00 -1.00\n0.00 -1.00\n0.00 1.00''') == '3'\nassert solution('''-1.00 -1.00\n-1.00 -1.00\n-1.00 1.00''') == '3'\nassert solution('''-1.00 -1.00\n0.00 -1.00\n0.00 1.00''') == '3'\n"
    },
    {
        "number": 3173,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\".X..\") == \"X..\"\nassert solution(\"R...X.\") == \"X..\"\nassert solution(\"X..L.L.X.\") == \"X..\"\nassert solution(\"X..L.L.X.\") == \"X..\"\nassert solution(\"X..L.L.X.\") == \"X..\"\n"
    },
    {
        "number": 3173,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 3 1\nX..\n?.?\n100 100 1''') == '10'\n\nassert solution('''2 2 1\nR...\n..?\nX..\n1''') == '8'\n\nassert solution('''10 10 1\nX....\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n....?\n"
    },
    {
        "number": 3173,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 5 2') == '16'\nassert solution('2 3 1') == '10'\nassert solution('5 4 2') == '11'\nassert solution('1 2 3') == '3'\nassert solution('10 100 7 100 8') == '16'\n"
    },
    {
        "number": 3173,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 5 2\nR..?.\n.X...\n100 100 7 100 8''') == '16'\nassert solution('''2 3 1\nX..\n.?.\n10 1000 1''') == '10'\nassert solution('''2 3 1\n.X..\n.?.\n1 1000 1''') == '10'\nassert solution('''2 3 1\n..X..\n.?.\n1000 1''') == '10'\nassert solution('''2 3 1\n.X...\n.?.\n100 1000 1''') == '10'\n"
    },
    {
        "number": 3173,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''2 5 2\nR..?.\n.X...\n100 100 7 100 8\n''') == '16'\n\nassert solution(\n'''2 3 1\nX..\n.?.\n10 1000 1\n''') == '10'\n"
    },
    {
        "number": 3173,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\\n1 2 3\\n\") == \"10\"\nassert solution(\"1 1 1\\n1 1 1\\n\") == \"1\"\nassert solution(\"5 5 2\\nR....\\nX..X\\n.RX.\\n.X...\\n.X...\\n100 100 7 100 8\\n\") == \"16\"\nassert solution(\"2 3 1\\nX..\\n.X.\\n100 100 1\\n\") == \"10\"\nassert solution(\"3 3 1\\n.R.\\n.R.\\n.R.\\n.R.\\n.R.\\n.R.\\n\") == \"1\"\n"
    },
    {
        "number": 3173,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n2 5 2\nR..?.\n.X...\n100 100 7 100 8\n''') == '16'\nassert solution('''\n2 3 1\nX..\n.?.\n10 1000 1\n''') == '10'\n\nassert solution('''\n2 3 3\nX..X..\nX..X..\nX..X..\n100 1000 1\n''') == '100'\n\nassert solution('''\n2 3 3\nX..X..\nX..X..\nX..X..\n100 1000 1\n''') == '100'\n\nassert solution('''\n3 3 1\n.X..X.\n.X..X.\nX..X..\n100 1000 1\n''') == '100'"
    },
    {
        "number": 3173,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('2 5 2') == '16'\nassert solution('2 3 1') == '10'\nassert solution('2 5 2') == '16'\nassert solution('2 3 1') == '10'\n"
    },
    {
        "number": 3173,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 5 2') == '16'\nassert solution('3 5 2') == '18'\nassert solution('4 5 2') == '20'\nassert solution('4 4 2') == '40'\nassert solution('4 1 2') == '10'\n"
    },
    {
        "number": 3173,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '2 3 1\\nR..?.\\n.X...\\n100 100 7 100 8'\n) == '16'\nassert solution(\n    '2 4 1\\nR....\\n..R...\\nR...X\\n100 100 7 100 8'\n) == '40'\nassert solution(\n    '2 3 2\\nR..?.\\n.X...\\n.X...\\n100 100 7 100 8'\n) == '15'\nassert solution(\n    '2 3 2\\nR....\\n.X...\\nR...X\\n100 100 7 100 8'\n) == '17'\nassert solution(\n    '3 2 1\\nRR.L.\\n.X...\\n100 100 7 100 8'\n) == '17'\n"
    },
    {
        "number": 3174,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n0 4 4\n1 5 1\n2 6 1''') == '1.414'\nassert solution('''6 11\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n20 20 10''') == '5.657'\nprint(solution('''15 24\n0 0 0\n0 0 1\n0 1 2\n0 2 3\n1 0 3\n1 1 4\n2 0 4\n2 1 5\n2 2 6\n3 0 6\n3 1 7\n3 2 8\n4 0 9\n4 1 10\n5 0 11\n5 1 12\n6 0 13\n6 1 14\n6 2 15\n7 0 16\n7 1 17\n7 2 18\n8 0 19\n8 1 20\n8 2 21\n9 0 22\n9 1 23\n9 2 24'''))\n"
    },
    {
        "number": 3174,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\") == \"1.414\"\nassert solution(\"0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\") == \"5.657\""
    },
    {
        "number": 3174,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(open(\"1.in\").read()) == open(\"1.out\").read()\n"
    },
    {
        "number": 3174,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 3\n0 4 4\n1 5 1\n2 6 1''') == '1.414'\nassert solution('''6 11\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n20 20 10''') == '5.657'\nassert solution('''3 3\n0 0 1\n1 1 2\n2 2 1''') == '-1'\nassert solution('''3 3\n0 0 1\n0 1 2\n2 2 1''') == '-1'\nassert solution('''3 3\n0 0 1\n0 1 2\n2 2 1''') == '-1'\n"
    },
    {
        "number": 3174,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 3\n0 4 4\n1 5 1\n2 6 1''') == '1.414'\nassert solution('''6 11\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n20 20 10''') == '5.657'\nassert solution('''10 10\n1 1 1\n1 1 2\n1 1 3\n1 1 4\n1 1 5\n1 1 6\n1 1 7\n1 1 8\n1 1 9\n1 1 10''') == '0'\nassert solution('''10 10\n0 1 1\n1 1 2\n2 1 3\n3 1 4\n4 1 5\n5 1 6\n6 1 7\n7 1 8\n8 1 9\n9 1 10''') == '1.414'\nassert solution('''10 10\n0 1 1\n1 1 2\n2 1 3\n3 1 4\n4 1 5\n5 1 6\n6 1 7\n7 1 8\n8 1 9\n9 1 10''') == '1.414'\n"
    },
    {
        "number": 3174,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 3\n0 4 4\n1 5 1\n2 6 1''') == '1.414'\nassert solution('''6 11\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n20 20 10''') == '5.657'\nassert solution('''3 2\n0 0 1\n1 1 2\n2 2 1''') == '2'\nassert solution('''2 2\n0 0 1\n0 1 2''') == '1'\nassert solution('''3 4\n0 0 1\n1 1 2\n2 2 1''') == '1.414'\n"
    },
    {
        "number": 3174,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"3 3\n0 4 4\n1 5 1\n2 6 1\"\"\") == \"1.414\"\nassert solution(\"\"\"6 11\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n20 20 10\"\"\") == \"5.657\"\nprint(solution(stdin))\n"
    },
    {
        "number": 3174,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10') == '5.657'\nassert solution('0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10') == '5.657'\nassert solution('0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 21 10') == '9.939'\nassert solution('0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 21 10') == '9.939'\nassert solution('0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 22 10') == '6.639'\n"
    },
    {
        "number": 3174,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 3\n0 4 4\n1 5 1\n2 6 1''') == '1.414'\nassert solution('''6 11\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n20 20 10''') == '5.657'\n"
    },
    {
        "number": 3174,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0\\n0\\n0\\n0\\n0\\n0\\n0') == '0.0'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1') == '1.0'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1') == '1.0'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1') == '1.0'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1') == '1.0'\n"
    },
    {
        "number": 3175,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 1 1 1 1''') == '1.0'\nassert solution('''3 1 1 1''') == '0.433'\nassert solution('''3 1 1 1''') == '0.433'\nassert solution('''5 1 1 1 1 1''') == '1.0'\nassert solution('''6 1 1 1 1 1 1''') == '0.433'\n"
    },
    {
        "number": 3175,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n1\\n1') == '1.0'\nassert solution('2\\n1\\n1') == '0.5'\nassert solution('3\\n1\\n1') == '0.5'\nassert solution('4\\n1\\n1\\n1') == '0.25'\nassert solution('5\\n1\\n1\\n1\\n1') == '0.125'\n"
    },
    {
        "number": 3175,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 3175,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"4 1 1 1 1\n\"\"\") == \"1.0\"\nassert solution(\"\"\"3 1 1 1\n\"\"\") == \"0.433\"\nassert solution
    },
    {
        "number": 3175,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(solution.read_input(__file__)) == \"1.0\"\n"
    },
    {
        "number": 3175,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('$n$ 1 1 1 1') == '1.0'\nassert solution('$n$ 1 1 1 1') == '1.0'\nassert solution('$n$ 3 1 1 1') == '0.433'\nassert solution('$n$ 3 1 1 1') == '0.433'\nassert solution('$n$ 3 1 1 1') == '0.433'\n"
    },
    {
        "number": 3175,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 1 1 1 1') == '1.0'\nassert solution('3 1 1 1') == '0.433'\nassert solution('3 1 1 1') == '0.433'\nassert solution('3 1 1 1 1') == '1.0'\nassert solution('1 1 1 1 1') == '0.433'\n"
    },
    {
        "number": 3175,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1\n3 1 1 1\n''') == '1.0'\nassert solution('''2\n1 1 1\n2 1 1\n''') == '0.5'\nassert solution('''4\n1 1 1 1\n2 1 1\n1 1 1\n1 1 1\n''') == '1.0'\nassert solution('''5\n3 1 1 1 1\n3 1 1\n1 1 1\n2 1 1\n1 1 1\n''') == '0.44'\nassert solution('''6\n5 1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n''') == '1.0'\n"
    },
    {
        "number": 3175,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''4\n1 1 1 1\n'''\n) == '1.0'\n\nassert solution(\n'''3\n1 1 1\n'''\n) == '0.433'\n"
    },
    {
        "number": 3175,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('$n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $n$ $"
    },
    {
        "number": 3176,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == output\nprint(solution(open(\"/test/p081_test.txt\", \"r\").read()))"
    },
    {
        "number": 3176,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6 5\n1 1 5\n2 1 5\n1 2 4\n2 3 5\n3 2 30\n3 3 5''') == '5'\nassert solution('''8 10\n1 1 15\n2 2 30\n1 2 8\n2 1 7\n3 2 8\n2 3 7\n4 2 100\n3 3 15''') == '36'\nassert solution('''2 1 2\n3 1 1\n3 2 3\n3 3 3\n2 3 1''') == '1 1'\nassert solution('''2 1 2\n1 2 1\n2 1 2\n3 2 3\n3 1 3\n3 2 1''') == '1 3'\nassert solution('''2 1 2\n1 2 1\n2 1 2\n3 2 3\n3 1 3\n3 2 1''') == '3 3'\n"
    },
    {
        "number": 3176,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 2\") == \"1 1\"\nassert solution(\"8 10\") == \"5\"\nassert solution(\"6 5\") == \"5\"\nassert solution(\"2 3\") == \"2 1\"\nassert solution(\"2 4\") == \"2 3\"\n"
    },
    {
        "number": 3176,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''6 5\n1 1 5\n2 1 5\n1 2 4\n2 3 5\n3 2 30\n3 3 5''') == '5'\nassert solution('''8 10\n1 1 15\n2 2 30\n1 2 8\n2 1 7\n3 2 8\n2 3 7\n4 2 100\n3 3 15''') == '36'\nassert solution(\n'''8 10\n1 1 15\n2 2 30\n1 2 8\n2 1 7\n3 2 8\n2 3 7\n4 2 100\n3 3 15''') == '5'\nassert solution(\n'''8 10\n1 1 15\n2 2 30\n1 2 8\n2 1 7\n3 2 8\n2 3 7\n4 2 100\n3 3 15''') == '5'\nassert solution(\n'''8 10\n1 1 15\n2 2 30\n1 2 8\n2 1 7\n3 2 8\n2 3 7\n4 2 100\n3 3 15''') == '5'\n"
    },
    {
        "number": 3176,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('1 1 5') == '1 1'\nassert solution('2 1 5') == '2 1'\nassert solution('1 2 4') == '1 1'\nassert solution('2 3 5') == '2 1'\n"
    },
    {
        "number": 3176,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6 5\n1 1 5\n2 1 5\n1 2 4\n2 3 5\n3 2 30\n3 3 5''') == '5'\nassert solution('''8 10\n1 1 15\n2 2 30\n1 2 8\n2 1 7\n3 2 8\n2 3 7\n4 2 100\n3 3 15''') == '36'\nassert solution('''9 10\n1 1 17\n2 2 32\n1 2 19\n2 3 32\n3 2 13\n3 3 9\n4 3 21\n5 3 17\n6 3 24\n7 3 19''') == '41'\nassert solution('''4 10\n1 1 2\n2 1 2\n3 1 2\n4 1 2''') == '4'\nassert solution('''4 10\n1 1 8\n2 1 5\n3 1 8\n4 1 5''') == '1'\n"
    },
    {
        "number": 3176,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3176,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    '6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5'\n) == '5'\n\nassert solution(\n    '8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15'\n) == '36'\n\"\"\""
    },
    {
        "number": 3176,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3176,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 3\") == \"5\"\nassert solution(\"4 5\") == \"4\"\nassert solution(\"1 1 5\") == \"5\"\nassert solution(\"2 1 5\") == \"4\"\nassert solution(\"1 2 4\") == \"4\"\n"
    },
    {
        "number": 3177,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\""
    },
    {
        "number": 3177,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"2 1 3\") == \"1\"\nassert solution(\"2 2 3\") == \"1\"\nassert solution(\"2 2\") == \"1\"\n"
    },
    {
        "number": 3177,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 1\n2 1\n1 2\n''') == '1'\n\nassert solution('''3 2\n2 1 3\n1 3\n2 3\n''') == '3'\n\nassert solution('''4 3\n2 3 1\n1 3\n2 3\n''') == '2'\n\nassert solution('''5 4\n3 2 4 1\n2 1 3\n3 4\n2 1\n1 3\n''') == '2'\n\nassert solution('''6 5\n4 3 2 1\n2 1 3\n2 3\n2 3\n2 3\n2 3\n2 3\n''') == '1'"
    },
    {
        "number": 3177,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 1\n2 1\n1 2\n''') == '1'\nassert solution('''3 2\n2 1 3\n1 3\n2 3\n''') == '3'\nassert solution('''2 10\n1 2 2 3 3 4 5 6 7 8 9 10\n9 8 7 6 5 4 3 2 1\n''') == '7'\nassert solution('''7 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n4 5 3 6 7 8 9 10 11 12 13 14 15\n3 4 2 1 8 7 10 9 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n2 4 3 1 8 7 10 9 11 12 13 14 15\n2 4 3 1 8 7 10 9 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n2 4 3 1 8 7 10 9 11 12 13 14 15\n2 4 3 1 8 7 10 9 11 12 13 14 15\n2 4 3 1 8 7 10 9 11 12 13 14 15\n2 4 3 1 8 7 10 9 11 12 13 14 15\n2 4 3 1 8 7 10 9 11 12 13 14 15\n2 4 3 1 8 7 10 9 11 12 13 14 15\n2 4 3 1 8 7 10 9 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n2 4 3 1 8 7 10 9 11 12 13 14 15\n2 4 3 1 8 7 10 9 11 12 13 14 15\n2 4 3 1 8 7 10 9 11 12 13 14 15\n2 4 3 1 8 7 10 9 11 12 13 14 15\n2 4 3 1 8 7 10 9 11 12 13 14 15\n2 4 3 1 8 7 10 9 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n2 4 3 1 8 7 10 9 11 12 13 14 15\n2 4 3 1 8 7 10 9 11 12 13 14 15\n2 4 3 1 8 7 10 9 11 12 13 14 15\n2 4 3 1 8 7 10 9 11 12 13 14 15\n2 4 3 1 8 7 10 9 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n2 4 3 1 8 7 10 9 11 12 13 14 15\n2 4 3 1 8 7 10 9 11 12 13 14 15\n2 4 3 1 8 7 10 9 11 12 13 14 15\n2 4 3 1 8 7 10 9 11 12 13 14 15\n2 4 3 1 8 7 10 9 11 12 13 14 15\n2 4 3 1 8 7 10 9 11 12 13 14 15\n2 4 3 1 8 7 10 9 11 12 13 14 15\n2 4 3 1 8 7 10 9 11 12 13 14 15\n2 4 3 1 8 7 10 9 11 12 13 14 15\n2 4 3 1 8 7 10 9 11 12 13 14 15\n2 4 3 1 8 7 10 9 11 12 13 14 15\n2 4 3 1 8 7 10 9 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11 12 13 14 15\n1 2 4 3 5 6 7 8 9 10 11"
    },
    {
        "number": 3177,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    \"2 1\") == '1'\nassert solution(\n    \"3 2\") == '3'\nassert solution(\n    \"2 1 3\") == '1'\nassert solution(\n    \"1 2 3\") == '3'\nassert solution(\n    \"1 3 2\") == '3'\n"
    },
    {
        "number": 3177,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"2 1\") == \"1\"\n"
    },
    {
        "number": 3177,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == str(solution(stdin))\n"
    },
    {
        "number": 3177,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 1') == '1'\nassert solution('2 1\\n2 1\\n1 2') == '1'\nassert solution('2 1\\n2 1\\n1 2\\n1 3') == '3'\nassert solution('2 1\\n2 1\\n1 2\\n1 3\\n2 3') == '3'\nassert solution('2 1\\n2 1\\n1 2\\n3 1') == '2'\n"
    },
    {
        "number": 3177,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 1\n2 1\n1 2\n''') == '1'\nassert solution('''3 2\n2 1 3\n1 3\n2 3\n''') == '3'\nassert solution('''4 2\n2 3 1\n2 1 3\n3 1 2\n1 3\n''') == '2'\nassert solution('''5 2\n2 3 1 4 5\n1 3\n2 3\n2 4\n2 5\n1 3\n''') == '2'\nassert solution('''6 2\n2 3 1 4 5 6\n1 3\n2 3\n2 4\n2 5\n2 6\n2 1\n1 3\n1 4\n1 5\n1 6\n1 2\n''') == '3'\n"
    },
    {
        "number": 3177,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 1''') == '1'\nassert solution('''3 2''') == '3'\nassert solution('''2 3\n1 3''') == '2'\nassert solution('''3 1\n2 3''') == '1'\nassert solution('''2 3\n3 1''') == '1'\n"
    },
    {
        "number": 3178,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == 1\nassert solution('2 3') == 2\nassert solution('1 3') == -1\nassert solution('3 4') == 2\nassert solution('1 2') == 1\n"
    },
    {
        "number": 3178,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 8\n1 4\n4 5\n1 5\n1 2\n1 3\n2 3\n3 5\n2 5\n''') == '5'\n\nassert solution('''6 5\n2 4\n3 5\n1 5\n3 6\n1 6\n''') == '5'\n"
    },
    {
        "number": 3178,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == answer(input())\n\n-----Show your answer-----\n'''\nHere\u2019s the answer to the problem:"
    },
    {
        "number": 3178,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 8\n1 4\n4 5\n1 5\n1 2\n1 3\n2 3\n3 5\n2 5\n''') == \"5\"\n'''\nassert solution('''10 11\n1 2\n1 3\n1 4\n1 5\n2 3\n3 5\n4 5\n5 6\n3 7\n2 8\n3 8\n3 9\n5 8\n4 9\n2 9\n1 10\n1 11\n''') == \"-1\"\n\nassert solution('''8 9\n1 2\n1 3\n1 4\n1 5\n1 6\n2 3\n2 4\n2 5\n3 4\n3 5\n3 6\n3 7\n2 8\n2 9\n2 10\n3 9\n4 8\n4 9\n''') == \"6\"\n\nassert solution('''6 7\n1 2\n1 3\n1 4\n1 5\n1 6\n2 3\n2 4\n2 5\n3 4\n3 5\n3 6\n4 5\n4 6\n4 7\n3 8\n3 9\n3 10\n3 11\n2 11\n2 12\n3 12\n3 13\n5 12\n5 13\n5 14\n5 15\n5 16\n5 17\n5 18\n5 19\n5 20\n5 21\n4 21\n5 22\n5 23\n5 24\n5 25\n5 26\n5 27\n5 28\n5 29\n5 30\n5 31\n5 32\n5 33\n5 34\n5 35\n5 36\n5 37\n5 38\n5 39\n5 40\n5 41\n5 42\n5 43\n5 44\n5 45\n5 46\n5 47\n5 48\n5 49\n5 50\n5 51\n5 52\n5 53\n5 54\n5 55\n5 56\n5 57\n5 58\n5 59\n5 60\n5 61\n5 62\n5 63\n5 64\n5 65\n5 66\n5 67\n5 68\n5 69\n5 70\n5 71\n5 72\n5 73\n5 74\n5 75\n5 76\n5 77\n5 78\n5 79\n5 80\n5 81\n5 82\n5 83\n5 84\n5 85\n5 86\n5 87\n5 88\n5 89\n5 90\n5 91\n5 92\n5 93\n5 94\n5 95\n5 96\n5 97\n5 98\n5 99\n5 100\n5 101\n5 102\n5 103\n5 104\n5 105\n5 106\n5 107\n5 108\n5 109\n5 110\n5 111\n5 112\n5 113\n5 114\n5 115\n5 116\n5 117\n5 118\n5 119\n5 120\n5 121\n5 122\n5 123\n5 124\n5 125\n5 126\n5 127\n5 128\n5 129\n5 130\n5 131\n5 132\n5 133\n5 134\n5 135\n5 136\n5 137\n5 138\n5 139\n5 140\n5 141\n5 142\n5 143\n5 144\n5 145\n5 146\n5 147\n5 148\n5 149\n5 150\n5 151\n5 152\n5 153\n5 154\n5 155\n5 156\n5 157\n5 158\n5 159\n5 160\n5 161\n5 162\n5 163\n5 164\n5 165\n5 166\n5 167\n5 168\n5 169\n5 170\n5 171\n5 172\n5 173\n5 174\n5 175\n5 176\n5 177\n5 178\n5 179\n5 180\n5 181\n5 182\n5 183\n5 184\n5 185\n5 186\n5 187\n5 188\n5 189\n5 190\n5 191\n5 192\n5 193\n5 194\n5 195\n5 196\n5 197\n5 198\n5 199\n5 200\n5 201\n5 202\n5 203\n5 204\n5 205\n5 206\n5 207\n5 208\n5 209\n5 210\n5 211\n5 212\n5 213\n5 214\n5 215\n5 216\n5 217\n5 218\n5 219\n5 220\n5 221\n5 222\n5 223\n5 224\n5 225\n5 226\n5 227\n5 228\n5 229\n5 230\n5 231\n5 232\n5 233\n5 234\n5 235\n5 236\n5 237\n5 238\n5 239\n5 240\n5 241\n5 242\n5 243\n5 244\n5 245\n5 246\n5 247\n5 248\n5 249\n5 250\n5 251\n5 252\n5 253\n5 254\n5 255\n5 256\n5 257\n5 258\n5 259\n5 260\n5 261\n5 262\n5 263\n5 264\n5 265\n5 266\n5 267\n5 268\n5 269\n5 270\n5 271\n5 272\n5 273\n5 274\n5 275\n5 276\n5 277\n5 278\n5 279\n5 280\n5 281\n5 282\n5 283\n5 284\n5 285\n5 286\n5 287\n5 288\n5 289\n5 290\n5 291\n5 292\n5 293\n5 294\n5 295\n5 296\n5 297\n5 298\n5 299\n5 300\n5 301\n5 302\n5 303\n5 304\n5 305\n5 306\n5 307\n5 308\n5 309\n5 310\n5 311\n5 312\n5 313\n5 314\n5 315\n5 316\n5 317\n5 318\n5 319\n5 320\n5 321\n5 322\n5 323\n5 324\n5 325\n5 326\n5 327\n5 328\n5 329\n5 330\n5 331\n5 332\n5 333\n5 334\n5 335\n5 336\n5 337\n5 338\n5 339\n5 340\n5 341\n5 342\n5 343\n5 344\n5 345\n5 346\n5 347\n5 348\n5 349\n5 350\n5 351\n5 352\n5 353\n5 354\n5 355\n5 356\n5 357\n5 358\n5 359\n5 360\n5 361\n5 362\n5 363\n5 364\n5 365\n5 366\n5 367\n5 368\n5 369\n5 370\n5 371\n5 372\n5 373\n5 374\n5 375\n5 376\n5 377\n5 378\n5 379\n5 380\n5 381\n5 382\n5 383\n5 384\n5 385\n5 386\n5 387\n5 388\n5 389\n5 390\n5 391\n5 392\n5 393\n5 394\n5 395\n5 396\n5 397\n5 398\n5 399\n5 400\n5 401\n5 402\n5 403\n5 404\n5 405\n5 406\n5 407\n5 408\n5 409\n5 410\n5 411\n5 412\n5 413\n5 414\n5 415\n5 416\n5 417\n5 418\n5 419\n5 420\n5 421\n5 422\n5 423\n5 424\n5 425\n5 426\n5 427\n"
    },
    {
        "number": 3178,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''5 8\n1 4\n4 5\n1 5\n1 2\n1 3\n2 3\n3 5\n2 5\n''') == '5'\n\nassert solution(\n'''6 5\n2 4\n3 5\n1 5\n3 6\n1 6\n''') == '-1'\n\nassert solution(\n'''6 8\n1 4\n4 5\n1 5\n1 2\n1 3\n2 3\n3 5\n2 5\n''') == '5'\n\nassert solution(\n'''7 10\n1 2\n2 3\n1 5\n1 6\n3 5\n3 7\n4 5\n4 6\n4 7\n5 7\n5 9\n6 7\n6 9\n7 9\n''') == '12'\n"
    },
    {
        "number": 3178,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 8\n1 4\n4 5\n1 5\n1 2\n1 3\n2 3\n3 5\n2 5\n''') == \"5\"\nassert solution('''4 6\n3 4\n5 4\n1 2\n1 3\n2 3\n3 4\n''') == \"5\"\nassert solution('''4 6\n3 4\n5 4\n1 2\n1 3\n2 3\n3 4\n''') == \"5\"\nassert solution('''6 6\n3 4\n5 4\n1 2\n1 3\n2 3\n3 4\n4 5\n5 4\n''') == \"5\"\nassert solution('''6 6\n3 4\n5 4\n1 2\n1 3\n2 3\n3 4\n4 5\n5 4\n''') == \"5\"\n"
    },
    {
        "number": 3178,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 8\n1 4\n4 5\n1 5\n1 2\n1 3\n2 3\n3 5\n2 5\n''') == '5'\nassert solution('''6 5\n2 4\n3 5\n1 5\n3 6\n1 6\n''') == '-1'\nassert solution('''5 5\n1 4\n1 5\n1 2\n1 3\n2 3\n3 4\n3 5\n2 4\n2 5\n2 3\n2 1\n3 4\n4 5\n5 1\n1 2\n1 3\n1 4\n2 4\n3 4\n4 5\n5 1\n''') == '3'\n\n-----Testcases-----\n"
    },
    {
        "number": 3178,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10') == 5\nassert solution('1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10') == -1\nassert solution('1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10') == -1\nassert solution('1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10') == -1\nassert solution('1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10') == -1\n"
    },
    {
        "number": 3178,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 8\n1 4\n4 5\n1 5\n1 2\n1 3\n2 3\n3 5\n2 5\n''') == '-1'\nassert solution('''6 5\n2 4\n3 5\n1 5\n3 6\n1 6\n''') == '5'\nassert solution('''5 6\n2 4\n3 5\n1 5\n3 6\n1 6\n''') == '4'\nassert solution('''6 7\n3 4\n1 2\n2 4\n1 5\n2 6\n1 6\n''') == '-1'\nassert solution('''6 7\n3 4\n1 2\n2 4\n1 5\n2 6\n1 6\n3 7\n2 7\n1 7\n''') == '7'\n"
    },
    {
        "number": 3178,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 8\n1 4\n4 5\n1 5\n1 2\n1 3\n2 3\n3 5\n2 5\n''') == '5'\nassert solution('''6 5\n2 4\n3 5\n1 5\n3 6\n1 6\n''') == '-1'\nassert solution('''3 6\n3 3\n1 2\n1 3\n2 3\n1 2\n2 3\n''') == '1'\nassert solution('''10 8\n1 9\n4 10\n1 5\n4 10\n1 5\n1 8\n1 9\n1 10\n1 5\n1 7\n1 8\n4 9\n2 8\n4 10\n1 2\n''') == '2'\nassert solution('''10 8\n1 9\n4 10\n1 5\n4 10\n1 5\n1 8\n1 9\n1 10\n1 5\n1 7\n1 8\n4 9\n2 8\n4 10\n1 2\n''') == '0'\n"
    },
    {
        "number": 3179,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 1\n1 1\n5 1\n5 5\n4 2\n''') == '4.00'\nassert solution('''6 3\n-8 -8\n0 -1\n8 -8\n1 0\n0 10\n-1 0\n''') == '9.00'\nassert solution('''1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1"
    },
    {
        "number": 3179,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 1\n1 1\n5 1\n5 5\n4 2\n''') == '4.00'\nassert solution('''6 3\n-8 -8\n0 -1\n8 -8\n1 0\n0 10\n-1 0\n''') == '9.00'\nassert solution('''6 3\n-8 -8\n0 -1\n8 -8\n1 0\n0 10\n-1 0\n''') == '9.00'\nassert solution('''6 3\n-8 -8\n0 -1\n8 -8\n1 0\n0 10\n-1 0\n''') == '9.00'\nassert solution('''6 3\n-8 -8\n0 -1\n8 -8\n1 0\n0 10\n-1 0\n''') == '9.00'\n"
    },
    {
        "number": 3179,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"4 1\n1 1\n5 1\n5 5\n4 2\n-8 -8\n0 -1\n8 -8\n1 0\n0 10\n-1 0\"\"\"\n) == \"4.00\"\nassert solution(\n    \"\"\"6 3\n-8 -8\n0 -1\n8 -8\n1 0\n0 10\n-1 0\"\"\"\n) == \"9.00\"\nassert solution(\n    \"\"\"10 3\n0 0\n1 1\n1 2\n2 1\n2 3\n3 2\n3 4\n4 3\n4 5\n5 4\n5 6\n6 4\n6 5\"\"\"\n) == \"9.00\"\nassert solution(\n    \"\"\"6 3\n-8 -8\n0 -1\n8 -8\n1 0\n0 10\n-1 0\"\"\"\n) == \"9.00\"\nassert solution(\n    \"\"\"10 3\n0 0\n1 1\n1 2\n2 1\n2 3\n3 2\n3 4\n4 3\n4 5\n5 4\n5 6\n6 4\n6 5\"\"\"\n) == \"9.00\"\n"
    },
    {
        "number": 3179,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''4 1\n1 1\n5 1\n5 5\n4 2\n''') == '4.00'\nassert solution(\n'''6 3\n-8 -8\n0 -1\n8 -8\n1 0\n0 10\n-1 0\n''') == '9.00'\n\nassert solution(\n'''2 3\n1 1\n5 1\n5 5\n4 2\n''') == '9.00'\n\nassert solution(\n'''6 3\n-8 -8\n0 -1\n8 -8\n1 0\n0 10\n-1 0\n''') == '9.00'\nassert solution(\n'''4 3\n1 1\n5 1\n5 5\n4 2\n''') == '4.00'\n"
    },
    {
        "number": 3179,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 1\n1 1\n5 1\n5 5\n4 2''') == '4.00'\nassert solution('''6 3\n-8 -8\n0 -1\n8 -8\n1 0\n0 10\n-1 0''') == '9.00'\nassert solution('''6 1\n10 1\n1 -1\n1 1\n1 -1\n1 -1\n1 -1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '2.00'\nassert solution('''6 3\n-8 -8\n0 -1\n8 -8\n1 0\n0 10\n-1 0''') == '7.00'\n'''\n'''"
    },
    {
        "number": 3179,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 1\\n1 1\\n5 1\\n5 5\\n4 2\\n') == '4.00'\n\"\"\"\n"
    },
    {
        "number": 3179,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 1\n1 1\n5 1\n5 5\n4 2\n''') == '4.00'\nassert solution('''6 3\n-8 -8\n0 -1\n8 -8\n1 0\n0 10\n-1 0\n''') == '9.00'\nassert solution('''1\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n"
    },
    {
        "number": 3179,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n5\\n5\\n4\\n') == '4.00'\nassert solution('5\\n1\\n5\\n5\\n4\\n') == '4.00'\nassert solution('6\\n-8\\n-8\\n0\\n8\\n8\\n') == '9.00'\nassert solution('7\\n-8\\n-8\\n0\\n8\\n8\\n-8\\n') == '9.00'\nassert solution('8\\n-8\\n0\\n8\\n8\\n-8\\n-8\\n0\\n') == '9.00'\n"
    },
    {
        "number": 3179,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''5 2\n1 1\n5 1\n5 5\n4 2\n''') == '9.00'\nassert solution(\n'''6 3\n-8 -8\n0 -1\n8 -8\n1 0\n0 10\n-1 0\n''') == '9.00'\nassert solution(\n'''9 3\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n''') == '12.00'\nassert solution(\n'''10 10\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n''') == '18.00'\nassert solution(\n'''11 10\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n11 11\n''') == '26.00'\n"
    },
    {
        "number": 3179,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3180,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3180,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"4 3 2\nPAINT 2 0 0 3 3\nPAINT 3 0 3 3 3\n\"\"\") == \"\"\"2 1 2 3\n1 2 1 2\n2 1 2 3\n1 2 1 2\n\"\"\"\n"
    },
    {
        "number": 3180,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 2 4\") == \"1 2 1 2\"\nassert solution(\"3 2 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\") == \"3 1 1\\n1 3 1\\n1 1 1\"\nassert solution(\"3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\nPAINT 2 0 0 3 3\\nLOAD 1\") == \"3 1 1\\n1 3 1\\n1 1 1\\n3 1 1\"\nprint(solution(\"3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\nPAINT 2 0 0 3 3\\nLOAD 1\"))\n"
    },
    {
        "number": 3180,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\nimport sys\nsys.stdin = open(\"test_files/Y11R5P1/A.in\")"
    },
    {
        "number": 3180,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"4 3 2\nPAINT 2 0 0 3 3\nPAINT 3 0 3 3 3\n\"\"\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n\"\n\nassert solution(\"\"\"4 2 0\nPAINT 2 0 0 3 3\nSAVE\nPAINT 3 0 3 3 3\nLOAD 1\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 1 1\nSAVE\nPAINT 1 1 1 2 2\nPAINT 2 0 0 2 2\nPAINT 1 1 1 2 2\nPAINT 1 1 1 2 2\nPAINT 1 1 1 2 2\nPAINT 1 1 1 2 2\nPAINT 1 1 1 2 2\nPAINT 1 1 1 2 2\nPAINT 1 1 1 2 2\nPAINT 1 1 1 2 2\n\"\"\") == \"3 1 1\\n1 3 1\\n1 1 1\\n\"\n\nassert solution(\"\"\"3 3 4\nPAINT 3 0 0 1 1\nSAVE\nPAINT 2 1 1 2 2\nLOAD 1\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 1 1\nPAINT 2 1 1 2 2\nPAINT"
    },
    {
        "number": 3180,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('PAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n') == '2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2'\nassert solution('PAINT 1 0 0 0 0\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n') == '3 1 1\\n1 3 1\\n1 1 1\\n3 1 1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n"
    },
    {
        "number": 3180,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 3 2\nPAINT 2 0 0 3 3\nPAINT 3 0 3 3 3\n''') == '''2 1 2 3\n1 2 1 2\n2 1 2 3\n1 2 1 2\n'''\nassert solution('''3 3 4\nPAINT 3 0 0 1 1\nSAVE\nPAINT 2 1 1 2 2\nLOAD 1\n''') == '''3 1 1\n1 3 1\n1 1 1\n'''\nassert solution('''5 3 2\nPAINT 3 0 0 1 1\nSAVE\nPAINT 4 1 1 1 1\nPAINT 3 2 2 2 2\nLOAD 1\nPAINT 4 0 0 1 1\nPAINT 1 1 1 1 1\nSAVE\nPAINT 3 3 3 3 3\nLOAD 2\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1 1 1 1\nPAINT 1 1"
    },
    {
        "number": 3180,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''3 3 4\nPAINT 3 0 0 1 1\nSAVE\nPAINT 2 1 1 2 2\nLOAD 1''') == '''3 1 1\n1 3 1\n1 1 1\n'''\n\nassert solution(\n'''10 10 10\nPAINT 1 0 0 0 0\nPAINT 2 1 1 1 1\nPAINT 3 2 2 2 2\nPAINT 4 3 3 3 3\nPAINT 5 4 4 4 4\nPAINT 6 5 5 5 5\nSAVE\nPAINT 7 6 6 6 6\nPAINT 8 7 7 7 7\nPAINT 9 8 8 8 8\nLOAD 8\nPAINT 9 9 9 9 9\nPAINT 10 10 10 10 10\nLOAD 9\nPAINT 11 11 11 11 11\nSAVE\nPAINT 12 12 12 12 12\nPAINT 13 13 13 13 13\nPAINT 14 14 14 14 14\nSAVE\nPAINT 15 15 15 15 15\nPAINT 16 16 16 16 16\nPAINT 17 17 17 17 17\nPAINT 18 18 18 18 18\nPAINT 19 19 19 19 19\nLOAD 17\nPAINT 19 19 19 19 19\nPAINT 20 20 20 20 20\nPAINT 21 21 21 21 21\nLOAD 20\nPAINT 22 22 22 22 22\nPAINT 23 23 23 23 23\nPAINT 24 24 24 24 24\nPAINT 25 25 25 25 25\nLOAD 21\nPAINT 25 25 25 25 25\nPAINT 26 26 26 26 26\nPAINT 27 27 27 27 27\nPAINT 28 28 28 28 28\nPAINT 29 29 29 29 29\nLOAD 22\nPAINT 29 29 29 29 29\nPAINT 30 30 30 30 30\nPAINT 31 31 31 31 31\nPAINT 32 32 32 32 32\nSAVE\nPAINT 33 33 33 33 33\nPAINT 34 34 34 34 34\nPAINT 35 35 35 35 35\nPAINT 36 36 36 36 36\nPAINT 37 37 37 37 37\nPAINT 38 38 38 38 38\nPAINT 39 39 39 39 39\nPAINT 40 40 40 40 40\nPAINT 41 41 41 41 41\nSAVE\nPAINT 42 42 42 42 42\nPAINT 43 43 43 43 43\nPAINT 44 44 44 44 44\nPAINT 45 45 45 45 45\nPAINT 46 46 46 46 46\nPAINT 47 47 47 47 47\nPAINT 48 48 48 48 48\nPAINT 49 49 49 49 49\nLOAD 48\nPAINT 49 49 49 49 49\nPAINT 50 50 50 50 50\nPAINT 51 51 51 51 51\nPAINT 52 52 52 52 52\nPAINT 53 53 53 53 53\nPAINT 54 54 54 54 54\nPAINT 55 55 55 55 55\nPAINT 56 56 56 56 56\nPAINT 57 57 57 57 57\nPAINT 58 58 58 58 58\nSAVE\nPAINT 59 59 59 59 59\nPAINT 60 60 60 60 60\nPAINT 61 61 61 61 61\nPAINT 62 62 62 62 62\nPAINT 63 63 63 63 63\nPAINT 64 64 64 64 64\nPAINT 65 65 65 65 65\nPAINT 66 66 66 66 66\nPAINT 67 67 67 67 67\nPAINT 68 68 68 68 68\nPAINT 69 69 69 69 69\nLOAD 69\nPAINT 69 69 69 69 69\nPAINT 70 70 70 70 70\nPAINT 71 71 71 71 71\nPAINT 72 72 72 72 72\nPAINT 73 73 73 73 73\nPAINT 74 74 74 74 74\nPAINT 75 75 75 75 75\nPAINT 76 76 76 76 76\nPAINT 77 77 77 77 77\nPAINT 78 78 78 78 78\nSAVE\nPAINT 79 79 79 79 79\nPAINT 80 80 80 80 80\nPAINT 81 81 81 81 81\nPAINT 82 82 82 82 82\nPAINT 83 83 83 83 83\nPAINT 84 84 84 84 84\nPAINT 85 85 85 85 85\nPAINT 86 86 86 86 86\nPAINT 87 87 87 87 87\nPAINT 88 88 88 88 88\nPAINT 89 89 89 89 89\nLOAD 88\nPAINT 89 89 89 89 89\nPAINT 90 90 90 90 90\nPAINT 91 91 91 91 91\nPAINT 92 92 92 92 92\nPAINT 93 93 93 93 93\nPAINT 94 94 94 94 94\nPAINT 95 95 95 95 95\nPAINT 96 96 96 96 96\nPAINT 97 97 97 97 97\nSAVE\nPAINT 98 98 98 98 98\nPAINT 99 99 99 99 99\nPAINT 100 100 100 100\nPAINT 101 101 101 101\nPAINT 102 102 102 102\nPAINT 103 103 103 103\nPAINT 104 104 104 104\nPAINT 105 105 105 105\nPAINT 106 106 106 106\nPAINT 107 107 107 107\nPAINT 108 108 108 108\nPAINT 109 109 109 109\nPAINT 110 110 110 110\nLOAD 109\nPAINT 110 110 110 110\nPAINT 111 111 111 111\nPAINT 112 112 112 112\nPAINT 113 113 113 113\nPAINT 114 114 114 114\nPAINT 115 115 115 115\nPAINT 116 116 116 116\nPAINT 117 117 117 117\nPAINT 118 118 118 118\nPAINT 119 119 119 119\nPAINT 120 120 120 120\nSAVE\nPAINT 121 121 121 121 121\nPAINT 122 122 122 122 122\nPAINT 123 123 123 123 123\nPAINT 124 124 124 124 124\nPAINT 125 125 125 125 125\nPAINT 126 126 126 126 126\nPAINT 127 127 127 127 127\nPAINT 128 128 128 128 128\nPAINT 129 129 129 129 129\nPAINT 130 130 130 130 130\nPAINT 131 131 131 131 131\nPAINT 132 132 132 132 132\nSAVE\nPAINT 133 133 133 133 133\nPAINT 134 134 134 134 134\nPAINT 135 135 135 135 135\nPAINT 136 136 136 136 136\nPAINT 137 137 137 137 137\nPAINT 138 138 138 138 138\nPAINT 139 139 139 139 139\nPAINT 140 140 140 140 140\nPAINT 141 141 141 141 141\nPAINT 142 142 142 142 142\nPAINT 143 143 143 143 143\nPAINT 144 144 144 144 144\nPAINT 145 145 145 145 145\nSAVE\nPAINT 146 146 146 146 146\nPAINT 147 147 147 147 147\nPAINT 148 148 148 148 148\nPAINT 149 149 149 149 149\nPAINT 150 150 150 150 150\nPAINT 151 151 151 151 151\nPAINT 152 152 152 152 152\nPAINT 153 153 153 153 153\nPAINT 154 154 154 154 154\nPAINT 155 155 155 155 155\nPAINT 156 156 156 156 156\nPAINT 157 157 157 157 157\nPAINT 158 158 158 158 158\nSAVE\nPAINT 159 159 159 159 159"
    },
    {
        "number": 3180,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3180,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 3 2\nPAINT 2 0 0 3 3\nPAINT 3 0 3 3 3\n''') == '''2 1 2 3\n1 2 1 2\n2 1 2 3\n1 2 1 2\n'''\nassert solution('''4 3 2\nPAINT 2 0 0 3 3\nPAINT 3 0 3 3 3\n''') == '''2 1 2 3\n1 2 1 2\n2 1 2 3\n1 2 1 2\n'''\nassert solution('''4 3 4\nPAINT 2 0 0 1 1\nSAVE\nPAINT 3 0 0 2 2\nLOAD 1\nPAINT 2 1 1 2 2\nPAINT 3 0 0 3 3\nPAINT 2 0 3 3 3\nPAINT 1 0 0 3 3\nPAINT 3 0 3 3 3\nPAINT 2 0 1 1 2\nPAINT 3 0 0 3 3\nPAINT 3 0 3 3 3\nPAINT 2 0 1 1 2\nPAINT 3 0 0 3 3\nPAINT 2 0 3 3 3\nPAINT 1 0 0 3 3\nPAINT 3 0 3 3 3\nPAINT 2 0 1 1 2\nPAINT 3 0 0 3 3\nPAINT 3 0 3 3 3\nPAINT 2 0 1 1 2\nPAINT 3 0 0 3 3\nPAINT 2 0 3 3 3\nPAINT 1 0 0 3 3\nPAINT 3 0 3 3 3\nPAINT 2 0 1 1 2\nPAINT 3 0 0 3 3\nPAINT 2 0 3 3 3\nPAINT 1 0 0 3 3\nPAINT 3 0 3 3 3\nPAINT 2 0 1 1 2\nPAINT 3 0 0 3 3\nPAINT 2 0 3 3 3\nPAINT 1 0 0 3 3\nPAINT 3 0 3 3 3\nPAINT 2 0 1 1 2\nPAINT 3 0 0 3 3\nPAINT 2 0 3 3 3\nPAINT 1 0 0 3 3\nPAINT 3 0 3 3 3\nPAINT 2 0 1 1 2\nPAINT 3 0 0 3 3\nPAINT 2 0 3 3 3\nPAINT 1 0 0 3 3\nPAINT 3 0 3 3 3\nPAINT 2 0 1 1 2\nPAINT 3 0 0 3 3\nPAINT 2 0 3 3 3\nPAINT 1 0 0 3 3\nPAINT 3 0 3 3 3\nPAINT 2 0 1 1 2\nPAINT 3 0 0 3 3\nPAINT 2 0 3 3 3\nPAINT 1 0 0 3 3\nPAINT 3 0 3 3 3\nPAINT 2 0 1 1 2\nPAINT 3 0 0 3 3\nPAINT 2 0 3 3 3\nPAINT 1 0 0 3 3\nPAINT 3 0 3 3 3\nPAINT 2 0 1 1 2\nPAINT 3 0 0 3 3\nPAINT 2 0 3 3 3\nPAINT 1 0 0 3 3\nPAINT 3 0 3 3 3\nPAINT 2 0 1 1 2\nPAINT 3 0 0 3 3\nPAINT 2 0 3 3 3\nPAINT 1 0 0 3 3\nPAINT 3 0 3 3 3\nPAINT 2 0 1 1 2\nPAINT 3 0 0 3 3\nPAINT 2 0 3 3 3\nPAINT 1 0 0 3 3\nPAINT 3 0 3 3 3\nPAINT 2 0 1 1 2\nPAINT 3 0 0 3 3\nPAINT 2 0 3 3 3\nPAINT 1 0 0 3 3\nPAINT 3 0 3 3 3\nPAINT 2 0 1 1 2\nPAINT 3 0 0 3 3\nPAINT 2 0 3 3 3\nPAINT 1 0 0 3 3\nPAINT 3 0 3 3 3\nPAINT 2 0 1 1 2\nPAINT 3 0 0 3 3\nPAINT 2 0 3 3 3\nPAINT 1 0 0 3 3\nPAINT 3 0 3 3 3\nPAINT 2 0 1 1 2\nPAINT 3 0 0 3 3\nPAINT 2 0 3 3 3\nPAINT 1 0 0 3 3\nPAINT 3 0 3 3 3\nPAINT 2 0 1 1 2\nPAINT 3 0 0 3 3\nPAINT 2 0 3 3 3\nPAINT 1 0 0 3 3\nPAINT 3 0 3 3 3\nPAINT 2 0 1 1 2\nPAINT 3 0 0 3 3\nPAINT 2 0 3 3 3\nPAINT 1 0 0 3 3\nPAINT 3 0 3 3 3\nPAINT 2 0 1 1 2\nPAINT 3 0 0 3 3\nPAINT 2 0 3 3 3\nPAINT 1 0 0 3 3\nPAINT 3 0 3 3 3\nPAINT 2 0 1 1 2\nPAINT 3 0 0 3 3\nPAINT 2 0 3 3 3\nPAINT 1 0 0 3 3\nPAINT 3 0 3 3 3\nPAINT 2 0 1 1 2\nPAINT 3 0 0 3 3\nPAINT 2 0 3 3 3\nPAINT 1 0 0 3 3\nPAINT 3 0 3 3 3\nPAINT 2 0 1 1 2\nPAINT 3 0 0 3 3\nPAINT 2 0 3 3 3\nPAINT 1 0 0 3 3\nPAINT 3 0 3 3 3\nPAINT 2 0 1 1 2\nPAINT 3 0 0 3 3\nPAINT 2 0 3 3 3\nPAINT 1 0 0 3 3\nPAINT 3 0 3 3 3\nPAINT 2 0 1 1 2\nPAINT 3 0 0 3 3\nPAINT 2 0 3 3 3\nPAINT 1 0 0 3 3\nPAINT 3 0 3 3 3\nPAINT 2 0 1 1 2\nPAINT 3 0 0 3 3\nPAINT 2 0 3 3 3\nPAINT 1 0 0 3 3\nPAINT 3 0 3 3 3\nPAINT 2 0 1 1 2\nPAINT 3 0 0 3 3\nPAINT 2 0 3 3 3\nPAINT 1 0 0 3 3\nPAINT 3 0 3 3 3\nPAINT 2 0 1 1 2\nPAINT 3 0 0 3 3\nPAINT 2 0 3 3 3\nPAINT 1 0 0 3 3\nPAINT 3 0 3 3 3\nPAINT 2 0 1 1 2\nPAINT 3 0 0 3 3\nPAINT 2 0 3 3 3\nPAINT 1 0 0 3 3\nPAINT 3 0 3 3 3\nPAINT 2 0 1 1 2\nPAINT 3 0 0 3 3\nPAINT 2 0 3 3 3\nPAINT 1 0 0 3 3\nPAINT 3 0 3 3 3\nPAINT 2 0 1 1 2\nPAINT 3 0 0 3 3\nPAINT 2 0 3 3 3\nPAINT 1 0 0 3 3\nPAINT 3 0 3 3 3\nPAINT 2 0 1 1 2\nPAINT 3 0 0 3 3\n"
    },
    {
        "number": 3181,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3\\n4 3') == '4 3 2 3\\n'\nassert solution('2 3\\n5 1') == '4 3 2 3\\n'\nassert solution('3 1\\n1 1 1') == '1\\n'\nassert solution('3 1\\n4 1') == '-1\\n'\nassert solution('4 2\\n5 1') == '4 3 2 3\\n'\n"
    },
    {
        "number": 3181,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3181,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 3\\n1 4 2 3\\n') == '1 4 2 3'\nassert solution('5 1\\n1 4 2 3 4 5\\n') == '-1'\nassert solution('6 3\\n1 4 3 2 5 6\\n') == '1 4 2 3'\nassert solution('7 3\\n1 4 3 2 5 6 7\\n') == '1 4 2 3'\nassert solution('8 3\\n1 4 3 2 5 6 7 8\\n') == '1 4 2 3'\n"
    },
    {
        "number": 3181,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3181,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3181,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output\nprint(solution(stdin))\n"
    },
    {
        "number": 3181,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 3') == '1 4 2 3'\nassert solution('5 1') == '-1'\nassert solution('1 1') == '1'\nassert solution('2 4') == '1 2 4'\nassert solution('5 1') == '-1'\n"
    },
    {
        "number": 3181,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3181,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4') == '1 4 2 3'\nassert solution('3 2') == '1 2 3'\nassert solution('5 1') == '1 2 3 4 5'\nassert solution('5 5') == '-1'\nassert solution('10 10') == '-1'\n"
    },
    {
        "number": 3181,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 3''') == '1 4 2 3'\nassert solution('''5 1''') == '-1'\nassert solution('''7 1''') == '1 2 3 4 5 6 7'\nassert solution('''10 1''') == '-1'\nassert solution('''8 1''') == '1 2 3 4 5 6 7 8'\n"
    },
    {
        "number": 3182,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n4\\n2\\n1\\n3\\n\") == \"1\"\nassert solution(\"2\\n1\\n1\\n1\\n1\\n\") == \"0\"\nassert solution(\"3\\n4\\n2\\n1\\n3\\n\") == \"1\"\nassert solution(\"4\\n5\\n0\\n2\\n6\\n\") == \"1\"\nassert solution(\"5\\n7\\n8\\n9\\n10\\n\") == \"0\"\n"
    },
    {
        "number": 3182,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3182,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 3182,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 0') == '0'\nassert solution('1 0') == '0'\nassert solution('1 1') == '0'\nassert solution('10 0') == '0'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 3182,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3182,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2') == 1\nassert solution('1') == 1\nassert solution('3') == 2\nassert solution('3') == 2\nassert solution('4') == 3\n"
    },
    {
        "number": 3182,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == 1\nassert solution('2\\n1') == 1\nassert solution('4\\n1 1\\n2 2\\n3 3\\n4 4') == 1\nassert solution('4\\n1 1\\n2 4\\n3 4\\n4 5') == 0\nassert solution('4\\n1 3\\n2 1\\n3 3') == 1\n"
    },
    {
        "number": 3182,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n4 2\\n2 1\\n1 3') == '1'\nassert solution('3\\n5 0\\n2 6\\n8 6\\n5 7') == '0'\nassert solution('4\\n5 0\\n2 6\\n8 6\\n5 7') == '1'\nassert solution('4\\n5 0\\n2 6\\n8 6\\n8 7') == '0'\nassert solution('4\\n5 0\\n2 6\\n8 6\\n8 8') == '1'\n"
    },
    {
        "number": 3182,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n2\n5 0\n2 6\n8 6\n5 7\n''') == '0'\nassert solution('''\n2\n2 1\n1 3\n''') == '1'\nassert solution('''\n3\n5 0\n2 6\n8 6\n5 7\n''') == '1'\nassert solution('''\n4\n5 0\n2 6\n8 6\n5 7\n''') == '2'\nassert solution('''\n5\n-1 0\n0 1\n0 3\n0 2\n4 5\n''') == '4'\n"
    },
    {
        "number": 3182,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n4 2\n2 1\n1 3\n''') == '1'\nassert solution('''4\n5 0\n2 6\n8 6\n5 7\n''') == '0'\nassert solution('''10\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n3 1\n3 2\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n4 1\n4 2\n4 3\n4 4\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n5 1\n5 2\n5 3\n5 4\n5 5\n5 6\n5 7\n5 8\n5 9\n5 10\n6 1\n6 2\n6 3\n6 4\n6 5\n6 6\n6 7\n6 8\n6 9\n6 10\n7 1\n7 2\n7 3\n7 4\n7 5\n7 6\n7 7\n7 8\n7 9\n7 10\n8 1\n8 2\n8 3\n8 4\n8 5\n8 6\n8 7\n8 8\n8 9\n8 10\n9 1\n9 2\n9 3\n9 4\n9 5\n9 6\n9 7\n9 8\n9 9\n9 10\n10 1\n10 2\n10 3\n10 4\n10 5\n10 6\n10 7\n10 8\n10 9\n10 10\n''') == '8'\n"
    },
    {
        "number": 3183,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 1 4 10\n0 2 2 10\n1 2 2 10\n0 2 4 30\n2 3 4 10''') == '0 140'\nassert solution('''1 1 0 1\n0 1 1000 100\n''') == '1000 100000'"
    },
    {
        "number": 3183,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\\n') == '4 140\\n'\nassert solution('2 1 0 1\\n0 1 1000 100\\n') == '1000 100000\\n'\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\n"
    },
    {
        "number": 3183,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3183,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3183,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3183,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 4 0 3\") == \"4 140\"\nassert solution(\"0 1 4 10\\n0 2 4 30\\n0 3 4 10\\n1 2 2 10\") == \"1000 100000\"\nassert solution(\"1 1 0 1\\n0 1 1000 100\\n\") == \"1000 100000\"\nassert solution(\"0 1 2 1\\n1 2 1 10\\n0 1 1 10\\n1 2 1 10\\n0 1 2 1\\n1 2 1 10\") == \"1 99999\"\nassert solution(\"0 1 2 1\\n1 2 1 10\\n0 1 1 10\\n1 2 1 10\\n0 1 2 1\\n1 2 1 10\") == \"1 99999\"\n"
    },
    {
        "number": 3183,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 0 0 0') == '0 0'\nassert solution('1 2 0 3') == '2 2'\nassert solution('0 0 0 0') == '0 0'\nassert solution('0 0 0 0') == '0 0'\nassert solution('0 0 0 0') == '0 0'\n"
    },
    {
        "number": 3183,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n4 4 0 3\n0 1 4 10\n1 2 2 10\n0 2 4 30\n2 3 4 10\n''') == \"4 140\"\n'''\n\n'''\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 3183,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0 1 4 10\\n0 2 2 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\\n\") == \"4 140\"\nassert solution(\"0 1 1000 100\\n0 1 1000 100\\n\") == \"1000 100000\"\nassert solution(\"0 1 10\\n0 2 100\\n1 2 100\\n\") == \"10 100000\"\nassert solution(\"0 1 100\\n0 2 1000\\n1 2 100\\n\") == \"100 100000\"\nassert solution(\"0 1 1000\\n0 2 1000\\n1 2 100\\n\") == \"1000 100000\"\nprint(\"Passed all test cases!\")\n\"\"\"\n"
    },
    {
        "number": 3183,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 1 2 3\\n0 2 1 4 3\\n0 3 2 1 4\\n0 4 3 2 1\\n1 2 1 0 3\\n2 3 4 1 4') == '4 140'\nassert solution('2 1 0 1\\n0 1 1000 100\\n2 1 2 3 4\\n0 2 1 4 3\\n0 3 2 1 4\\n0 4 3 2 1\\n1 2 1 0 3\\n2 3 4 1 4') == '1000 100000'\nassert solution('2 1 0 1\\n0 1 10 1\\n2 1 2 3 4\\n0 2 1 4 3\\n0 3 2 1 4\\n0 4 3 2 1\\n1 2 1 0 3\\n2 3 4 1 4') == '100 4'\nassert solution('2 1 0 1\\n0 1 10 1\\n2 1 2 3 4\\n0 2 1 4 3\\n0 3 2 1 4\\n0 4 3 2 1\\n1 2 1 0 3\\n2 3 4 1 4\\n0 2 1 4 3') == '10 4'\nassert solution('2 1 0 1\\n0 1 10 1\\n2 1 2 3 4\\n0 2 1 4 3\\n0 3 2 1 4\\n0 4 3 2 1\\n1 2 1 0 3\\n2 3 4 1 4\\n0 2 1 4 3\\n0 4 3 2 1\\n1 2 1 0 3') == '4 4'\n"
    },
    {
        "number": 3184,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3184,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''100 7\n1 50\n50 70\n70 90\n90 40\n20 60\n60 80\n80 20''') == '3'\nassert solution('''10 4\n1 10\n5 7\n4 9\n9 2\n2 6\n7 4\n3 3\n8 3\n4 2\n2 1\n1 5\n7 4\n5 2\n2 1\n1 3\n7 4\n5 2\n2 1''') == 'impossible'\nassert solution('''4 3\n4 5\n5 4\n5 3\n3 4\n1 2\n2 3''') == 'impossible'\nassert solution('''4 3\n5 4\n5 3\n5 1\n3 1\n4 4\n1 2\n2 3''') == '3'\nassert solution('''2 2\n1 1\n1 2\n2 1\n2 2\n1 3\n1 3''') == 'impossible'\n"
    },
    {
        "number": 3184,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"impossible\"\nassert solution(\"5 7\") == \"3\"\nassert solution(\"2 10\") == \"impossible\"\nassert solution(\"100 7\") == \"3\"\nassert solution(\"100 10\") == \"impossible\"\n"
    },
    {
        "number": 3184,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''100 7\n1 50\n50 70\n70 90\n90 40\n20 60\n60 80\n80 20''') == '3'\nassert solution(\n'''1 2\n1 3\n2 3\n1 4\n2 4\n2 5\n3 4\n3 5\n4 5\n1 5''') == 'impossible'\nassert solution(\n'''2 3\n1 4\n1 6\n1 7\n1 8\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n4 5\n4 6\n4 7\n4 8\n4 9\n5 6\n5 7\n5 8\n5 9\n6 7\n6 8\n6 9\n6 10\n7 8\n7 9\n7 10\n8 9\n8 10\n8 11\n9 10\n9 11\n9 12\n10 11\n10 12\n10 13\n11 12\n11 13\n11 14\n12 13\n12 14\n12 15\n13 14\n13 15\n13 16\n14 15\n14 16\n14 17\n15 16\n15 17\n15 18\n16 17\n16 18\n16 19\n17 18\n17 19\n17 20\n18 19\n18 20\n18 21\n19 20\n19 21\n19 22\n20 21\n20 22\n20 23\n21 22\n21 23\n21 24\n22 23\n22 24\n22 25\n23 24\n23 25\n23 26\n24 25\n24 26\n24 27\n25 26\n25 27\n25 28\n26 27\n26 28\n26 29\n27 28\n27 29\n27 30\n28 29\n28 30\n28 31\n29 30\n29 31\n29 32\n30 31\n30 32\n30 33\n31 32\n31 33\n31 34\n32 33\n32 34\n32 35\n33 34\n33 35\n33 36\n34 35\n34 36\n34 37\n35 36\n35 37\n35 38\n36 37\n36 38\n36 39\n37 38\n37 39\n37 40\n38 39\n38 40\n38 41\n39 38\n39 40\n39 41\n39 42\n40 38\n40 41\n40 42\n40 43\n41 38\n41 40\n41 42\n41 43\n41 44\n42 38\n42 40\n42 41\n42 42\n42 43\n42 44\n42 45\n43 38\n43 40\n43 41\n43 42\n43 44\n43 45\n43 46\n44 38\n44 40\n44 41\n44 42\n44 43\n44 44\n44 45\n44 46\n44 47\n45 38\n45 40\n45 41\n45 42\n45 43\n45 44\n45 45\n45 46\n45 47\n45 48\n46 37\n46 38\n46 39\n46 40\n46 41\n46 42\n46 43\n46 44\n46 45\n46 46\n46 47\n47 38\n47 40\n47 41\n47 42\n47 43\n47 44\n47 45\n47 46\n47 47\n47 48\n48 37\n48 39\n48 40\n48 41\n48 42\n48 43\n48 44\n48 45\n48 46\n48 47\n48 48\n''') == '3'\nassert solution(\n'''7 6\n1 2\n2 3\n3 4\n4 5\n5 6\n1 2\n2 3\n3 4\n4 5\n5 6\n1 6\n1 2\n1 3\n1 4\n1 5\n1 6\n2 5\n2 6\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n4 11\n4 12\n4 13\n5 6\n5 7\n5 8\n5 9\n5 10\n5 11\n5 12\n5 13\n6 7\n6 8\n6 9\n6 10\n6 11\n6 12\n6 13\n6 14\n7 8\n7 9\n7 10\n7 11\n7 12\n7 13\n7 14\n7 15\n7 16\n8 9\n8 10\n8 11\n8 12\n8 13\n8 14\n8 15\n8 16\n8 17\n9 10\n9 11\n9 12\n9 13\n9 14\n9 15\n9 16\n9 17\n9 18\n9 19\n9 20\n9 21\n10 11\n10 12\n10 13\n10 14\n10 15\n10 16\n10 17\n10 18\n10 19\n10 20\n10 21\n10 22\n10 23\n10 24\n10 25\n10 26\n10 27\n10 28\n10 29\n10 30\n10 31\n10 32\n10 33\n10 34\n10 35\n10 36\n10 37\n10 38\n10 39\n10 40\n10 41\n10 42\n10 43\n10 44\n10 45\n10 46\n10 47\n10 48\n10 49\n10 50\n10 51\n10 52\n10 53\n10 54\n10 55\n10 56\n10 57\n10 58\n10 59\n10 60\n10 61\n10 62\n10 63\n10 64\n10 65\n10 66\n10 67\n10 68\n10 69\n10 70\n10 71\n10 72\n10 73\n10 74\n10 75\n10 76\n10 77\n10 78\n10 79\n10 80\n10 81\n10 82\n10 83\n10 84\n10 85\n10 86\n10 87\n10 88\n10 89\n10 90\n10 91\n10 92\n10 93\n10 94\n10 95\n10 96\n10 97\n10 98\n10 99\n10 100\n10 101\n10 102\n10 103\n10 104\n10 105\n10 106\n10 107\n10 108\n10 109\n10 110\n10 111\n10 112\n10 113\n10 114\n10 115\n10 116\n10 117\n10 118\n10 119\n10 120\n10 121\n10 122\n10 123\n10 124\n10 125\n10 126\n10 127\n10 128\n10 129\n10 130\n10 131\n10 132\n10 133\n10 134\n10 135\n10 136\n10 137\n10 138\n10 139\n10 140\n10 141\n10 142\n10 143\n10 144\n10 145\n10 146\n10 147\n10 148\n10 149\n10 150\n10 151\n10 152\n10 153\n10 154\n10 155\n10 156\n10 157\n10 158\n10 159\n10 160\n10 161\n10 162\n10 163\n10 164\n10 165\n10 166\n10 167\n10 168\n10 169\n10 170\n10 171\n10 172\n10 173\n10 174\n10 175\n10 176\n10 177\n10 178\n10 179\n10 180\n10 181\n10 182\n10 183\n10 184\n10 185\n10 186\n10 187\n10 188\n10 189\n10 190\n10 191\n10 192\n10 193\n10 194\n10 195\n10 196\n10 197\n10 198\n10 199\n10 200\n10 201\n10 202\n10 203\n10 204\n10 205\n10 206\n10 207\n10 208\n10 209\n10 210\n10 211\n10 212\n10 213\n10 214\n10 215\n10 216\n10 217\n10 218\n"
    },
    {
        "number": 3184,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 7\n8 3\n5 7\n''') == '3'\nassert solution('''3 3\n2 1\n1 1\n''') == 'impossible'\nassert solution('''2 3\n1 1\n2 1\n''') == 'impossible'\nassert solution('''3 2\n2 1\n1 1\n''') == 'impossible'\nassert solution('''1 3\n2 1\n3 1\n''') == 'impossible'\n"
    },
    {
        "number": 3184,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n50') == '3'\nassert solution('2\\n8\\n5 7\\n7 1') == 'impossible'\nassert solution('3\\n8\\n5 7\\n7 1') == 'impossible'\nassert solution('4\\n8\\n5 7\\n7 1\\n7 1\\n5 1') == 'impossible'\nassert solution('5\\n8\\n5 7\\n7 1\\n7 1\\n5 1') == 'impossible'\n"
    },
    {
        "number": 3184,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''100 7\n1 50\n50 70\n70 90\n90 40\n20 60\n60 80\n80 20''') == '3'\nassert solution('''1 1\n1 2\n1 3\n2 4\n3 4''') == 'impossible'\nassert solution('''3 2\n4 4\n2 1\n3 4\n1 4''') == 'impossible'\nassert solution('''3 2\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7''') == 'impossible'\nassert solution('''4 4\n1 3\n2 5\n3 1\n4 5\n5 6\n6 4\n7 7\n8 8''') == 'impossible'\n"
    },
    {
        "number": 3184,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n100 7\n1 50\n50 70\n70 90\n90 40\n20 60\n60 80\n80 20\n\"\"\") == \"3\"\nassert solution(\n\"\"\"\n100 7\n1 50\n50 70\n70 90\n90 40\n20 60\n60 80\n80 20\n\"\"\") == \"impossible\"\nassert solution(\n\"\"\"\n1000 10\n1000 100\n1000 1000\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 1001\n1 100"
    },
    {
        "number": 3184,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"impossible\"\n\n\"\"\"\n\"\"\"\n- If n is odd, we need one camera in the center\n- If n is even, we need one camera in the middle and one on each side\n- If n is even and k is even, then we can place n/2 cameras\n- If n is even and k is odd, then we can place n/2 cameras\n- If n is even and k is even, then we can place n/2 cameras\n\"\"\""
    },
    {
        "number": 3184,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1') == 'impossible'\nassert solution('5\\n5\\n5\\n5\\n5\\n5\\n5') == '5'\nassert solution('5\\n5\\n5\\n5\\n5\\n5\\n5') == '5'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1') == 'impossible'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1') == 'impossible'\n"
    },
    {
        "number": 3185,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\") == 1\nassert solution(\"120\") == 5\nassert solution(\"51090942171709440000\") == 21\n"
    },
    {
        "number": 3185,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin[0] * int(stdin[1:])"
    },
    {
        "number": 3185,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"120\") == \"5\"\nassert solution(\"51090942171709440000\") == \"21\"\nprint(\"Tests passed\")\n"
    },
    {
        "number": 3185,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3185,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('120') == '5'\nassert solution('51090942171709440000') == '21'\nprint('Passed')\n"
    },
    {
        "number": 3185,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\nprint(solution(stdin))\n"
    },
    {
        "number": 3185,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('51090942171709440000') == '21'"
    },
    {
        "number": 3185,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == ''\nprint(solution(input()))\n"
    },
    {
        "number": 3185,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3185,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3186,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 1 2') == '45'\nassert solution('3 3 3') == '10'\nassert solution('5 5 7') == '45'\nassert solution('5 3 8') == '85'\nassert solution('4 5 11') == '45'\n"
    },
    {
        "number": 3186,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10 1 2') == 45\nassert solution('3 3 3') == 10\n"
    },
    {
        "number": 3186,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"10 1 2\") == \"45\"\nassert solution(\"3 3 3\") == \"10\"\nassert solution(\"10 10 10\") == \"45\"\nassert solution(\"10 10 10\") == \"45\"\nassert solution(\"10 1 10\") == \"45\"\n"
    },
    {
        "number": 3186,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"10 1 2\") == \"45\"\nassert solution(\"3 3 3\") == \"10\"\nassert solution(\"10 10 10\") == \"1000\"\nassert solution(\"3 3 3\") == \"10\"\nassert solution(\"5 5 5\") == \"100\"\n"
    },
    {
        "number": 3186,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''10 1 2''') == '45'\nassert solution('''3 3 3''') == '10'\nassert solution('''10 15 6''') == '249'\nassert solution('''100 5 8''') == '6410288'\nassert solution('''1000 1000 1000''') == '6410288'\n"
    },
    {
        "number": 3186,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 1 2') == '45'\nassert solution('3 3 3') == '10'\nassert solution('3 3 2') == '5'\nassert solution('10 1 10') == '9'\nassert solution('10 2 4') == '4'\n"
    },
    {
        "number": 3186,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"10 1 2\") == \"45\"\nassert solution(\"3 3 3\") == \"10\"\nprint(solution(\"10 1 2\"))\nprint(solution(\"3 3 3\"))\n"
    },
    {
        "number": 3186,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10 1 2') == 45\nassert solution('3 3 3') == 10\nassert solution('10 1 1') == 1\nassert solution('0 1 1') == 0\nassert solution('1 0 1') == 1\n"
    },
    {
        "number": 3186,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"10 1 2\") == \"45\"\n\"\"\"\n"
    },
    {
        "number": 3186,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 1 2') == '45'\nassert solution('3 3 3') == '10'\nassert solution('100000 100000 10000') == '14886700'\nassert solution('10 0 5') == '1'\nassert solution('3 2 3') == '1'\n"
    },
    {
        "number": 3187,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"impossible\"\n"
    },
    {
        "number": 3187,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"impossible\"\n\"\"\"\n"
    },
    {
        "number": 3187,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n1 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n5') == '18'\nassert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n5') == '20'\nassert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n4\\n5') == 'impossible'\nassert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n4') == 'impossible'\nassert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n2') == 'impossible'\n"
    },
    {
        "number": 3187,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n10') == '18'\nassert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n0') == 'impossible'\nassert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n1') == '20'\nassert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n0') == 'impossible'\nassert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n0') == 'impossible'\n"
    },
    {
        "number": 3187,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3\n5\n''') == '18'\n\nassert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3\n6\n''') == 'impossible'\n\nassert solution('''3\n2 2\n1 1\n1 1\n1 1\n''') == '0'\n\nassert solution('''1\n1 1\n''') == '0'\n\nassert solution('''1\n2 2\n1 2\n''') == '1'"
    },
    {
        "number": 3187,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n5\n3 1\n4 1\n5 9\n2 6\n5 3\n10\n''') == \"18\"\nassert solution('''\n5\n3 1\n4 1\n5 9\n2 6\n5 3\n5\n''') == \"20\"\nassert solution('''\n5\n3 1\n4 1\n5 9\n2 6\n5 3\n2\n''') == \"impossible\"\nassert solution('''\n5\n3 1\n4 1\n5 9\n2 6\n5 3\n5\n2\n''') == \"impossible\"\nassert solution('''\n5\n3 1\n4 1\n5 9\n2 6\n5 3\n5\n2\n5\n''') == \"18\"\n"
    },
    {
        "number": 3187,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n'\n    '1 1\\n'\n    '1 1\\n'\n    '1 1\\n'\n    '1 1') == '18'\nassert solution('3\\n'\n    '3 1\\n'\n    '4 1\\n'\n    '5 9\\n'\n    '2 6\\n'\n    '5 3') == '20'\nassert solution('7\\n'\n    '1 1\\n'\n    '1 1\\n'\n    '1 1\\n'\n    '1 1\\n'\n    '1 1\\n'\n    '1 1') == 'impossible'\n\n-----\n\n\"\"\""
    },
    {
        "number": 3187,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n2 2\\n3 2\\n4 4\\n5 4\\n5 5\\n1 2\\n2 4\\n3 4\\n4 5\\n5 3') == '12'\nassert solution('3\\n5 5\\n5 5\\n4 4\\n4 4\\n4 4\\n4 4\\n5 5\\n5 5') == '0'\nassert solution('5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 4\\n5 5') == 'impossible'\nassert solution('1\\n1 1\\n2 2\\n3 3\\n4 4\\n5 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 4\\n5 5') == 'impossible'\nassert solution('5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 4\\n5 5\\n2 3\\n4 5\\n3 4\\n5 4\\n5 5') == 'impossible'\n"
    },
    {
        "number": 3187,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3\n5\n''') == '18'\nassert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3\n10\n''') == 'impossible'\nassert solution('''1\n1 1\n5\n''') == '0'\nassert solution('''5\n1 1\n5\n''') == 'impossible'\nassert solution('''5\n1 1\n5\n4 1\n2 1\n1 1\n4 1\n2 1\n1 1\n5\n''') == '18'\n"
    },
    {
        "number": 3187,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''5\n3 1\n4 1\n5 9\n2 6\n5 3\n5\n''') == '18'\n\nassert solution(\n'''5\n3 1\n4 1\n5 9\n2 6\n5 3\n5\n1\n''') == '20'\n\nassert solution(\n'''5\n3 1\n4 1\n5 9\n2 6\n5 3\n5\n''') == 'impossible'\n\nassert solution(\n'''5\n3 1\n4 1\n5 9\n2 6\n5 3\n5\n2\n''') == 'impossible'\n\nassert solution(\n'''5\n3 1\n4 1\n5 9\n2 6\n5 3\n5\n1\n1\n''') == 'impossible'"
    },
    {
        "number": 3188,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 5 10\n7 8 2''') == '3'\nassert solution('''3\n-1 -1 -1\n5 5 5\n10 10 10''') == '11'\nassert solution('''3\n-1 -1 -1\n-1 -1 -1\n-1 -1 -1''') == '1'\nassert solution('''3\n-1 -1 -1\n10 10 10\n1 1 1''') == '1'\nassert solution('''10\n10 10 10\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n''') == '1'\n"
    },
    {
        "number": 3188,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3') == '3'\nassert solution('1\\n2\\n3\\n4') == '4'\nassert solution('-1\\n-2\\n-3') == '0'\nassert solution('1\\n2\\n3\\n4\\n5') == '5'\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == '6'\n"
    },
    {
        "number": 3188,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input_data) == output_data\n"
    },
    {
        "number": 3188,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\n1 5 10\n7 8 2''') == '3'\nassert solution('''3\n-1 -1 -1\n5 5 5\n10 10 10''') == '11'\nassert solution('''1\n2 3 4\n3 4 2''') == '0'\nassert solution('''1\n0 0 0\n4 5 6''') == '0'\nassert solution('''7\n8 8 9\n6 3 2\n8 8 7\n4 7 5\n7 6 8\n9 8 3\n5 7 3''') == '27'\n"
    },
    {
        "number": 3188,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1\\n1\\n\") == \"1\"\nassert solution(\"3\\n-1 -1 -1\\n5 5 5\\n10 10 10\\n\") == \"11\"\n\"\"\"\n"
    },
    {
        "number": 3188,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3188,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 5 10\\n7 8 2\") == \"3\"\nassert solution(\"3\\n-1 -1 -1\\n5 5 5\\n10 10 10\") == \"11\"\nassert solution(\"1\\n2 2 2\\n3 3 3\") == \"0\"\nassert solution(\"1\\n-2 -2 -2\\n3 3 3\") == \"2\"\nassert solution(\"2\\n1 5 10\\n7 8 2\") == \"3\"\n"
    },
    {
        "number": 3188,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3') == '3'\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == '6'\nassert solution('2\\n1\\n1') == '2'\nassert solution('1\\n1\\n1') == '0'\nassert solution('2\\n2\\n2') == '0'\n"
    },
    {
        "number": 3188,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"6\"\nassert solution(\"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"0\"\n"
    },
    {
        "number": 3188,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''2\n1 5 10\n7 8 2''') == '3'\nassert solution(\n'''3\n-1 -1 -1\n5 5 5\n10 10 10''') == '11'\nassert solution(\n'''4\n1 1 1\n1 1 1\n1 1 1\n1 1 1''') == '1'\n"
    },
    {
        "number": 3189,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3189,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3189,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 1') == '2'\nassert solution('5 2') == '0'\nassert solution('3 1') == '2'\nassert solution('6 4') == '0'\nassert solution('8 9') == '0'\n"
    },
    {
        "number": 3189,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 1\n110\n011''') == '2'\nassert solution('''4 2\n1000\n1000\n0000\n0010''') == '0'\nassert solution('''4 2\n1000\n1111\n0000\n0010''') == '0'\nassert solution('''4 1\n110\n011''') == '2'\nassert solution('''4 1\n1000\n1000\n0000\n0010''') == '0'\n"
    },
    {
        "number": 3189,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3189,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 1\") == \"2\"\nassert solution(\"4 2\") == \"0\"\nassert solution(\"2 1\") == \"0\"\nassert solution(\"4 0\") == \"0\"\nassert solution(\"4 0\") == \"0\"\n"
    },
    {
        "number": 3189,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 3189,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 1\n110\n011\n''') == '2'\nassert solution('''4 2\n1000\n1000\n0000\n0010\n''') == '0'\n"
    },
    {
        "number": 3189,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 3189,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3190,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n3\\n2') == '1'\nassert solution('2\\n1\\n3') == '5'\nassert solution('1\\n3\\n2') == '1'\nassert solution('2\\n1\\n3') == '5'\nassert solution('1\\n3\\n2') == '1'\n"
    },
    {
        "number": 3190,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n1 2 3''') == '1'\nassert solution('''3\n1 3 2''') == '5'\nassert solution('''3\n1 3 2''') == '1'\nassert solution('''3\n1 3 2''') == '5'\nassert solution('''3\n1 3 2''') == '5'\n"
    },
    {
        "number": 3190,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\nprint(f\"Finished testing.\")\n"
    },
    {
        "number": 3190,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3190,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3190,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3190,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3\\n3\\n3\\n3\\n3') == '1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('2\\n2\\n2\\n2\\n2\\n2') == '1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('2\\n2\\n2\\n2\\n2\\n2') == '1'\n"
    },
    {
        "number": 3190,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n3\\n2') == '1'\nassert solution('1\\n3\\n2\\n1\\n2') == '5'\nassert solution('1\\n2\\n3\\n4\\n5') == '5'\nassert solution('1\\n2\\n3\\n4\\n5\\n5') == '5'\nassert solution('1\\n2\\n3\\n4\\n5\\n5\\n5') == '5'\n"
    },
    {
        "number": 3190,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3190,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n1 2 3\n3\n3\n3\n''') == '1'\nassert solution('''3\n1 2 3\n2\n3\n2\n''') == '5'\nassert solution('''3\n1 2 3\n2\n3\n3\n''') == '3'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10\n8\n4\n''') == '2'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10\n8\n2\n''') == '2'\n"
    },
    {
        "number": 3191,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == '0'\n\nimport sys\nsys.stdin = open(\"sample_input_2.txt\", \"r\")\nassert solution(sys.stdin.read()) == '19'\n\nimport sys\nsys.stdin = open(\"sample_input_2.txt\", \"r\")\nassert solution(sys.stdin.read()) == '19'\n\nimport sys\nsys.stdin = open(\"sample_input_2.txt\", \"r\")\nassert solution(sys.stdin.read()) == '19'\n\nimport sys\nsys.stdin = open(\"sample_input_2.txt\", \"r\")\nassert solution(sys.stdin.read()) == '19'\n\nimport sys\nsys.stdin = open(\"sample_input_2.txt\", \"r\")\n"
    },
    {
        "number": 3191,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 100 20') == '0'\nassert solution('10 10 1') == '19'\nassert solution('100 100 1') == '0'\nassert solution('10 10 100') == '19'\nassert solution('1 1 1') == '0'\n"
    },
    {
        "number": 3191,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 100 20') == '0'\nassert solution('10 10 1') == '19'\n\n---"
    },
    {
        "number": 3191,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 100 20') == '0'\nassert solution('10 10 1') == '19'\nprint(solution('1 100 2'))\nprint(solution('10 10 100'))\nprint(solution('1 100 10'))\nprint(solution('1 100 100'))\nprint(solution('1 1000 1000'))\nprint(solution('10 10 1'))\nprint(solution('10 10 100'))\nprint(solution('1 1000 1000'))\nprint(solution('1 10000 1000'))\nprint(solution('1 100000 1000'))\nprint(solution('1 1000000 1000'))\nprint(solution('1 100000000 1000'))\n\"\"\"\n"
    },
    {
        "number": 3191,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"0\"\n\n-----Note-----\nYou may use whatever programming language you like, but you should be familiar with the solutions to the problem and should be able to solve it using a standard syntax.\n\n-----Best Practice-----\nPython has built-in support for automatic testing. If the code passes the test, the answer will be a random number between 1 and 10^9. If it doesn\u2019t pass the test, the answer will be 0.\n\n-----Alternate Approach-----\nFollow up:\nDo you think it is better to put the printf line in the middle of the program, or to add a new function that prints the line, and then run the program until it crashes?\n\"\"\"\n"
    },
    {
        "number": 3191,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 100 20\") == \"0\"\nassert solution(\"10 10 1\") == \"19\"\nassert solution(\"2 1 1\") == \"2\"\nassert solution(\"1 100 1\") == \"0\"\nassert solution(\"10 100 1\") == \"9\"\n"
    },
    {
        "number": 3191,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 100 20\") == \"0\"\nassert solution(\"10 10 1\") == \"19\"\nprint(\"tests passed\")\n"
    },
    {
        "number": 3191,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 100 20\") == \"0\"\nassert solution(\"10 10 1\") == \"19\"\n"
    },
    {
        "number": 3191,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 100 20\") == \"19\"\nassert solution(\"1 100 100\") == \"0\"\nassert solution(\"3 100 100\") == \"119\"\nassert solution(\"3 100 1\") == \"0\"\nassert solution(\"3 0 100\") == \"0\"\n"
    },
    {
        "number": 3191,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 19\n\"\"\"\n"
    },
    {
        "number": 3192,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\nclassa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0\n''') == 'classa, classb, libe, myfilec'\nassert solution('''\na aa aaa aaaa aaaaaaaaaaaaa aaaaaaaaaaaaaa aaaaaaaaaaaaaaa\na 1\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\nimport a\n"
    },
    {
        "number": 3192,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''classa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0''') == 'classa, classb, classa, classb, execd, libe, myfilec, libe, libe, myfilec, classa, classb, classa, classb, execd, libe, libe, myfilec, execd, libe, myfilec, classa, classb, classa, classb, execd, libe, libe, myfilec, execd, libe, myfilec, classa, classb, classa, classb, execd, libe, libe, myfilec, execd, libe, myfilec, classa, classb, classa, classb, execd, libe, libe, myfilec, execd, libe, myfilec, classa, classb, classa, classb, execd, libe, libe, myfilec, execd, libe, myfilec, classa, classb, classa, classb, execd, libe, libe, myfilec, execd, libe, myfilec, classa, classb, classa, classb, execd, libe, libe, myfilec, execd, libe, myfilec, classa, classb, classa, classb, execd, libe, libe, myfilec, execd, libe, myfilec, classa, classb, classa, classb, execd, libe, libe, myfilec, execd, libe, myfilec, classa, classb, classa, classb, execd, libe, libe, myfilec, execd, libe, myfilec, classa, classb, classa, classb, execd, libe, libe, myfilec, execd, libe, myfilec, classa, classb, classa, classb, execd, libe, libe, myfilec, execd, libe, myfilec, classa, classb, classa, classb, execd, libe, libe, myfilec, execd, libe, myfilec, classa, classb, classa, classb, execd, libe, libe, myfilec, execd, libe, myfilec, classa, classb, classa, classb, execd, libe, libe, myfilec, execd, libe, myfilec, classa, classb, classa, classb, execd, libe, libe, myfilec, execd, libe, myfilec, classa, classb, classa, classb, execd, libe, libe, myfilec, execd, libe, myfilec, classa, classb, classa, classb, execd, libe, libe, myfilec, execd, libe, myfilec, classa, classb, classa, classb, execd, libe, libe, myfilec, execd, libe, myfilec, classa, classb, classa, classb, execd, libe, libe, myfilec, execd, libe, myfilec, classa, classb, classa, classb, execd, libe, libe, myfilec, execd, libe, myfilec, classa, classb, classa, classb, execd, libe, libe, myfilec, execd, libe, myfilec, classa, classb, classa, classb, execd, libe, libe, myfilec, execd, libe, myfilec, classa, classb, classa, classb, execd, libe, libe, myfilec, execd, libe, myfilec, classa, classb, classa, classb, execd, libe, libe, myfilec, execd, libe, myfilec, classa, classb, classa, classb, execd, libe, libe, myfilec, execd, libe, myfilec, classa, classb, classa, classb, execd, libe, libe, myfilec, execd, libe, myfilec, classa, classb, classa, classb, execd, libe, libe, myfilec, execd, libe, myfilec, classa, classb, classa, classb, execd, libe, libe, myfilec, execd, libe, myfilec, classa, classb, classa, classb, execd, libe, libe, myfilec, execd, libe, myfilec, classa, classb, classa, classb, execd, libe, libe, myfilec, execd, libe, myfilec, classa, classb, classa, classb, execd, libe, libe, myfilec, execd, libe, myfilec, classa, classb, classa, classb, execd, libe, libe, myfilec, execd, libe, myfilec, classa, classb, classa, classb, execd, libe, libe, myfilec, execd, libe, myfilec, classa, classb, classa, classb, execd, libe, libe, myfilec, execd, libe, myfilec, classa, classb, classa, classb, execd, libe, libe, myfilec, execd, libe, myfilec, classa, classb, classa, classb, execd, libe, libe, myfilec, execd, libe, myfilec, classa, classb, classa, classb, execd, libe, libe, myfilec, execd, libe, myfilec, classa, classb, classa, classb, execd, libe, libe"
    },
    {
        "number": 3192,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''a b c d\na 1\nimport d, b, c\nb 2\nimport d\nimport c\nc 1\nimport c\nd 0\n''') == 'c'\nassert solution('''classa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0\n''') == 'SHIP IT'\nassert solution('''a b c d\na 1\nimport d, b, c\nb 2\nimport d\nimport c\nc 1\nimport c\nd 0\n''') == 'SHIP IT'\nassert solution('''classa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0\n''') == 'SHIP IT'\nassert solution('''a b c d\na 1\nimport d, b, c\nb 2\nimport d\nimport c\nc 1\nimport c\nd 0\n''') == 'SHIP IT'\n"
    },
    {
        "number": 3192,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4\\nalice,alice1,a,import a,b,c,a\\nb,b1,b,import b\\nc,c1,c,import c\\na,a1,a,import a\\na\\nb\\na1,b,a1,import a\\na\\n\\nb\\na1,b,import a\\na1,b1,a1,import a\") == \"a,b,c\"\nassert solution(\"7\\na,b,c,a,import a,b,a\\nb,b1,b,import b\\nc,c1,c,import c\\na,a1,a,import a\\na\\nb\\na1,b,a1,import a\\na\\n\\nb\\na1,b,import a\\na1,b1,a1,import a\\na1\\n\\nb1,a1,import a\") == \"a,b,a1\"\nassert solution(\"4\\nalice,bob,dave,mike\\nbob,alice,dave,bob\\nc,dave,bob,alice\\n\\n#5\\na,b,c,d\\na,b,c,d\\na,b,c,d\") == \"a,b,c,d\"\nassert solution(\"5\\na,b,c,d,e\\na,b,c,d,e\\na,b,c,d,e\\na,b,c,d,e\") == \"SHIP IT\"\n"
    },
    {
        "number": 3192,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"classa classb myfilec execd libe\") == \"c\"\nassert solution(\"classa 2\") == \"c\"\nassert solution(\"import classb\") == \"c\"\nassert solution(\"import myfilec, libe\") == \"c\"\n"
    },
    {
        "number": 3192,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"classa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\") == \"c\"\nassert solution(\"classa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\") == \"SHIP IT\"\nassert solution(\"classa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\") == \"SHIP IT\"\nassert solution(\"classa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\") == \"SHIP IT\"\nassert solution(\"classa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\") == \"SHIP IT\"\n"
    },
    {
        "number": 3192,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('classa classb myfilec execd libe'\n'classa 2'\n'import classb'\n'import myfilec, libe'\n'classb 1'\n'import execd'\n'myfilec 1'\n'import libe'\n'execd 1'\n'import libe'\n'libe 0') == 'classa'\n\nassert solution('a b c d'\n'a 1'\n'import d, b, c'\n'b 2'\n'import d'\n'import c'\n'c 1'\n'import c'\n'd 0'\n') == 'classb'\n\nassert solution('classa classb myfilec execd libe'\n'classa 2'\n'import classb'\n'import myfilec, libe'\n'classb 1'\n'import execd'\n'myfilec 1'\n'import libe'\n'execd 1'\n'import libe'\n'libe 0'\n') == 'classa'\n\nassert solution('classa classb myfilec execd libe'\n'classa 2'\n'import classb'\n'import myfilec, libe'\n'classb 1'\n'import execd'\n'myfilec 1'\n'import libe'\n'execd 1'\n'import libe'\n'libe 0'\n') == 'classb'\n\nassert solution('classa classb myfilec execd libe'\n'classa 2'\n'import classb'\n'import myfilec, libe'\n'classb 1'\n'import execd'\n'myfilec 1'\n'import libe'\n'execd 1'\n'import libe'\n'libe 0'\n') == 'classa'"
    },
    {
        "number": 3192,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input) == \"SHIP IT\"\n\"\"\"\n\nimport sys\nimport re\nfrom collections import defaultdict\n\nlines = sys.stdin.readlines()\n\nn = int(lines[0])\n\nfiles = []\ndeps = defaultdict(list)\n\nfor i in range(1, len(lines)):\n    imports = lines[i].strip().split(\",\")\n    files.append(imports[0])\n    for dep in imports[1:]:\n        deps[dep].append(imports[0])\n\nfor i in range(len(files)):\n    for j in range(i+1, len(files)):\n        first_file = files[i]\n        second_file = files[j]\n        if first_file == second_file:\n            continue\n\n        stack = [first_file]\n        seen = [first_file]\n        while stack:\n            current = stack.pop(0)\n            for dep in deps[current]:\n                if dep in seen:\n                    continue\n                else:\n                    stack.append(dep)\n                    seen.append(dep)\n\n            if current == second_file:\n                return \" \".join(stack)\n\nprint(\"SHIP IT\")"
    },
    {
        "number": 3192,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 3192,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    4\n    a b c d\n    a 1\n    import d, b, c\n    b 2\n    import d\n    import c\n    c 1\n    import c\n    d 0\n    \"\"\"\n) == 'c'\n\nassert solution(\n    \"\"\"\n    5\n    classa classb myfilec execd libe\n    classa 2\n    import classb\n    import myfilec, libe\n    classb 1\n    import execd\n    myfilec 1\n    import libe\n    execd 1\n    import libe\n    libe 0\n    \"\"\"\n) == 'SHIP IT'\n\nassert solution(\n    \"\"\"\n    2\n    a\n    import a\n    import b\n    b 0\n    import c\n    c 1\n    import d\n    d 1\n    import e\n    e 1\n    import f\n    f 1\n    \"\"\"\n) == 'SHIP IT'\n\nassert solution(\n    \"\"\"\n    3\n    a b c\n    a 1\n    import b, c, a\n    b 2\n    import c, a\n    c 1\n    import a\n    a 0\n    \"\"\"\n) == 'SHIP IT'\n\nassert solution(\n    \"\"\"\n    4\n    a b c d\n    a 1\n    import d, b, c\n    b 2\n    import d\n    import c\n    c 1\n    import c\n    d 0\n    \"\"\"\n) == 'c'"
    },
    {
        "number": 3193,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '0'\nassert solution('1+2') == '3'\nassert solution('3*2') == '6'\nassert solution('3*(2+1)') == '6'\n"
    },
    {
        "number": 3193,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '2'\n"
    },
    {
        "number": 3193,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 + 3 + x') == '1'\nassert solution('20 + 3 + x') == '2'\nassert solution('20 + x + x') == '2'\nassert solution('x') == '0'\nassert solution('x + x') == '0'\n"
    },
    {
        "number": 3193,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 + 3 + x''') == '1'\nassert solution('''20 + 3 + x''') == '2'\nassert solution('''20 + 3 + x\n5 + 3 + x\n10 + 3 + x''') == '2'\nassert solution('''20 + 3 + x\n5 + 3 + x\n10 + 3 + x\n1 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 + x\n10 + 3 + x\n5 + 3 +"
    },
    {
        "number": 3193,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5+3+x''') == '1'\nassert solution('''20+3+x''') == '2'\nassert solution('''4+2*3+x''') == '2'\nassert solution('''4+3*2+5*(3+3)''') == '4'\nassert solution('''2*(5+3+3)''') == '2'\n"
    },
    {
        "number": 3193,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5+3+x') == '1'\nassert solution('20+3+x') == '2'\nassert solution('5+3+x') == '1'\nassert solution('5+3+x') == '1'\nassert solution('5+3+x') == '1'\n"
    },
    {
        "number": 3193,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(solution.__doc__) == \"\""
    },
    {
        "number": 3193,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5+3+x') == '1'\nassert solution('20+3+x') == '2'\nassert solution('20+3+x') == '2'\nassert solution('5+3+x') == '1'\nassert solution('20+3+x') == '2'\n"
    },
    {
        "number": 3193,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5+3+x') == '1'\nassert solution('20+3+x') == '2'\nassert solution('20+3+x') == '2'\nassert solution('1+3+x') == '1'\nassert solution('1+3+x') == '1'\n"
    },
    {
        "number": 3193,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5+3+x\") == \"1\"\nassert solution(\"20+3+x\") == \"2\"\nassert solution(\"9*x*(x-1)*(x+1)*(x+2)*(x+3)\") == \"4\"\nassert solution(\"9*x*(x-1)*(x+1)*(x+2)*(x+3)*(x+4)*(x+5)*(x+6)*(x+7)*(x+8)*(x+9)*(x+10)*(x+11)*(x+12)*(x+13)*(x+14)*(x+15)*(x+16)*(x+17)*(x+18)*(x+19)*(x+20)\") == \"20\"\nassert solution(\"9*x*(x-1)*(x+1)*(x+2)*(x+3)*(x+4)*(x+5)*(x+6)*(x+7)*(x+8)*(x+9)*(x+10)*(x+11)*(x+12)*(x+13)*(x+14)*(x+15)*(x+16)*(x+17)*(x+18)*(x+19)*(x+20)*(x+21)*(x+22)*(x+23)*(x+24)*(x+25)*(x+26)*(x+27)*(x+28)*(x+29)*(x+30)*(x+31)*(x+32)*(x+33)*(x+34)*(x+35)*(x+36)*(x+37)*(x+38)*(x+39)*(x+40)*(x+41)*(x+42)*(x+43)*(x+44)*(x+45)*(x+46)*(x+47)*(x+48)*(x+49)*(x+50)*(x+51)*(x+52)*(x+53)*(x+54)*(x+55)*(x+56)*(x+57)*(x+58)*(x+59)*(x+60)*(x+61)*(x+62)*(x+63)*(x+64)*(x+65)*(x+66)*(x+67)*(x+68)*(x+69)*(x+70)*(x+71)*(x+72)*(x+73)*(x+74)*(x+75)*(x+76)*(x+77)*(x+78)*(x+79)*(x+80)*(x+81)*(x+82)*(x+83)*(x+84)*(x+85)*(x+86)*(x+87)*(x+88)*(x+89)*(x+90)*(x+91)*(x+92)*(x+93)*(x+94)*(x+95)*(x+96)*(x+97)*(x+98)*(x+99)*(x+100)\") == \"12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789"
    },
    {
        "number": 3194,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0 10\\n0 15\\n5 20\") == \"no\"\nassert solution(\"1 15\\n0 20\\n5 20\") == \"yes\"\nassert solution(\"1 15\\n5 20\\n0 20\") == \"no\"\nassert solution(\"2 10\\n0 15\\n5 20\") == \"no\"\nassert solution(\"2 10\\n0 15\\n5 20\\n0 10\") == \"no\"\n"
    },
    {
        "number": 3194,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 10\\n0 15\\n5 20') == 'yes'\nassert solution('2 10\\n0 15\\n5 19') == 'no'\nassert solution('2 10\\n0 15\\n0 17') == 'yes'\nassert solution('2 10\\n0 15\\n0 10') == 'no'\nassert solution('2 10\\n0 15\\n5 17') == 'no'\n"
    },
    {
        "number": 3194,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''0 15\n5 20\n''') == 'yes'\nassert solution('''0 15\n5 20\n0 10\n''') == 'no'\nassert solution('''0 15\n5 20\n1 15\n''') == 'yes'\nassert solution('''0 15\n5 20\n1 10\n''') == 'no'\nassert solution('''0 15\n5 20\n1 10\n5 0\n''') == 'no'\n"
    },
    {
        "number": 3194,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3194,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == 'yes'\nassert solution('1 1 2') == 'no'\nassert solution('0 1') == 'no'\nassert solution('1 0') == 'no'\nassert solution('0 0 1') == 'no'\n"
    },
    {
        "number": 3194,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0 15\\n5 20\") == \"yes\"\nassert solution(\"0 15\\n1 15\\n5 20\") == \"no\"\nassert solution(\"2 10\\n0 15\\n5 20\") == \"no\"\nassert solution(\"2 10\\n1 15\\n0 20\") == \"yes\"\nassert solution(\"0 10\\n1 10\\n5 10\") == \"yes\"\n"
    },
    {
        "number": 3194,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0 0\n10 10\n1 15\n2 20\n2 30''') == 'no'\nassert solution('''0 10\n10 10\n1 15\n2 20\n2 30''') == 'yes'\nassert solution('''0 10\n10 10\n1 15\n2 20\n2 30''') == 'yes'\nassert solution('''0 10\n10 10\n1 15\n2 20\n2 30\n30 30\n''') == 'yes'\nassert solution('''0 10\n10 10\n1 15\n2 20\n2 30\n30 30\n30 35\n''') == 'no'\n"
    },
    {
        "number": 3194,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 15\\n5 20\\n') == 'yes'\nassert solution('0 15\\n5 20\\n5 19\\n') == 'no'\nassert solution('1 15\\n0 20\\n5 19\\n') == 'no'\nassert solution('0 15\\n5 20\\n1 19\\n') == 'no'\nassert solution('0 15\\n5 20\\n1 19\\n') == 'yes'\n"
    },
    {
        "number": 3194,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 10\n0 15\n5 20''') == 'yes'\nassert solution('''2 10\n1 15\n0 20''') == 'no'\n"
    },
    {
        "number": 3194,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"0 15\n5 20\n\"\"\"\n) == \"yes\"\n\nassert solution(\n\"\"\"1 15\n0 20\n\"\"\"\n) == \"no\"\n\nassert solution(\n\"\"\"0 15\n1 15\n\"\"\"\n) == \"no\"\n\nassert solution(\n\"\"\"1 15\n0 15\n\"\"\"\n) == \"yes\"\n\nassert solution(\n\"\"\"1 15\n0 15\n\"\"\"\n) == \"no\""
    },
    {
        "number": 3195,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''4 4 4\n3\n2 green\n18 yellow\n34 red\n5 green\n''') == '0.25'\nassert solution(\n'''4 4 4\n4\n2 green\n6 yellow\n10 red\n14 green\n4 red\n''') == '0'\n"
    },
    {
        "number": 3195,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3195,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3195,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 4 4\n3\n2 green\n18 yellow\n34 red\n5 green\n''') == '0.25'\nassert solution('''4 4 4\n4\n2 green\n6 yellow\n10 red\n14 green\n4 red\n''') == '0'\nassert solution('''4 4 4\n4\n2 green\n6 yellow\n10 red\n14 green\n4 red\n4 green\n''') == '0.5'\nassert solution('''4 4 4\n4\n2 green\n6 yellow\n10 red\n14 green\n4 red\n4 green\n1 green\n14 green\n7 green\n7 green\n2 green\n10 green\n''') == '0.78125'\nassert solution('''4 4 4\n4\n2 green\n6 yellow\n10 red\n14 green\n4 red\n4 green\n1 green\n14 green\n7 green\n7 green\n2 green\n10 green\n5 green\n''') == '0.00625'\n"
    },
    {
        "number": 3195,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 4 4\n3\n2 green\n18 yellow\n34 red\n5 green\n''') == '0.25'\nassert solution('''4 4 4\n4\n2 green\n6 yellow\n10 red\n14 green\n4 red\n''') == '0'\nassert solution('''4 4 4\n4\n2 green\n6 yellow\n10 red\n14 green\n4 red\n''') == '0'\nassert solution('''4 4 4\n4\n2 green\n6 yellow\n10 red\n14 green\n4 red\n''') == '0'\nassert solution('''4 4 4\n4\n2 green\n5 yellow\n10 red\n14 green\n4 red\n''') == '0'\n"
    },
    {
        "number": 3195,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '0.25'\n"
    },
    {
        "number": 3195,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 4 4\n3\n2 green\n18 yellow\n34 red\n5 green\n''') == '0.25'\n\nassert solution('''4 4 4\n4\n2 green\n6 yellow\n10 red\n14 green\n4 red\n''') == '0'\n"
    },
    {
        "number": 3195,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0.25\"\n\"\"\"\n"
    },
    {
        "number": 3195,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\n\nprint(solution(stdin))"
    },
    {
        "number": 3195,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 4 4') == '0.25'\nassert solution('5 1 5') == '1.0'\nassert solution('5 5 5') == '1.0'\nassert solution('1 1 1') == '1.0'\nassert solution('4 4 2') == '0.0'\n"
    },
    {
        "number": 3196,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3') == '3'\nassert solution('6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3') == 'inf'\nassert solution('6 9\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3') == 'inf'\nassert solution('8 10\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3') == 'inf'\n"
    },
    {
        "number": 3196,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n2 4\\n1 4\") == \"3\"\nassert solution(\"2 1\\n1 1\") == \"2\"\nassert solution(\"1 1\\n1 1\") == \"1\"\nassert solution(\"2 1\\n2 1\") == \"inf\"\nassert solution(\"2 2\\n2 1\") == \"inf\"\n"
    },
    {
        "number": 3196,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '3'\nassert solution(stdin) == 'inf'\nassert solution(stdin) == 'inf'\nassert solution(stdin) == 'inf'\nassert solution(stdin) == 'inf'\n"
    },
    {
        "number": 3196,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n') == '3'\nassert solution('1 2\\n2 3\\n3 4\\n4 1\\n') == 'inf'\nassert solution('10 6\\n3 4\\n1 2\\n4 3\\n5 2\\n6 1\\n7 4\\n8 1\\n9 3') == '0'\nassert solution('7 8\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11') == '0'\nassert solution('7 11\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11') == 'inf'\n"
    },
    {
        "number": 3196,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6 7\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4\n4 3''') == '3'\nassert solution('''6 8\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4\n4 3''') == 'inf'\nassert solution('''4 0\n1 2\n3 4\n5 6\n7 8\n9 10\n11 12\n13 14\n''') == '2'\n'''\n"
    },
    {
        "number": 3196,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3196,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"2 3\") == \"inf\"\nassert solution(\"6 7\") == \"3\"\nassert solution(\"6 7\") == \"inf\"\n"
    },
    {
        "number": 3196,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(test1) == '3'\nassert solution(test2) == 'inf'\nassert solution(test3) == '3'\nprint('solution:', solution(read_input(input_filepath).strip()))\n"
    },
    {
        "number": 3196,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n6 7\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4\n4 3\n''') == '3'\n\nassert solution('''\n4 3\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4\n4 3\n''') == 'inf'\n\nassert solution('''\n6 8\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4\n4 3\n''') == 'inf'\n\nassert solution('''\n2 1\n3 1\n1 2\n1 3\n2 3\n''') == '6'\n\nassert solution('''\n5 2\n1 2\n1 3\n1 4\n3 2\n1 4\n4 2\n2 3\n2 4\n''') == 'inf'"
    },
    {
        "number": 3196,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6 7') == '3'\nassert solution('6 8') == 'inf'\n"
    },
    {
        "number": 3197,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0 1\") == \"1\"\nassert solution(\"1 0\") == \"1\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"0 0\") == \"0\"\n"
    },
    {
        "number": 3197,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 4\\n1 2 3 4\") == \"4\"\nassert solution(\"2 3 4\\n1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\\n4 1 2 3\") == \"4\"\nassert solution(\"2 3 4\\n4 1 2 3\") == \"2\"\nassert solution(\"1 2 3 4\\n4 1 2 3\") == \"2\"\n"
    },
    {
        "number": 3197,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4') == 4\nassert solution('2 3 4 5 6 7 4 7 8 8 12 12') == 2\nassert solution('1 2 3 4 5 6 7 4 7 8 8 12 12') == 2\nassert solution('1 2 3 4 5 6 7 4 7 8 9 10 12 12') == 2\nassert solution('1 2 3 4 5 6 7 4 7 8 9 10 11 12 12') == 2\n"
    },
    {
        "number": 3197,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3197,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3197,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2') == '0'\nassert solution('5 6') == '1'\nassert solution('11 10') == '1'\nassert solution('5 4') == '1'\nassert solution('2 10') == '2'\n"
    },
    {
        "number": 3197,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\n\") == \"4\"\nassert solution(\"2 2\\n1 1\\n\") == \"1\"\nassert solution(\"3 3\\n1 2 3\\n\") == \"3\"\nassert solution(\"2 2\\n2 1\\n\") == \"1\"\nassert solution(\"3 3\\n2 1 3\\n\") == \"3\"\n"
    },
    {
        "number": 3197,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin.strip()\n\n-----To Run-----\nnosetests -v solution.py\n\"\"\"\n"
    },
    {
        "number": 3197,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '2'\n\n\"\"\"\n\nimport sys\n\nn, k = [int(x) for x in input().split()]\npref = [int(x) for x in input().split()]\n\nans = 0\n\nfor p in pref:\n    if p < 0:\n        break\n    else:\n        if p == ans:\n            ans += 1"
    },
    {
        "number": 3197,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 4\\n1 2 3 4\\n') == '4'\nassert solution('12 3\\n2 3 4 5 6 7 4 7 8 8 12 12\\n') == '2'\nassert solution('3 1\\n1\\n1\\n1') == '3'\nassert solution('1 2\\n1\\n1\\n1') == '3'\nassert solution('1 2\\n1\\n1\\n1') == '3'\n"
    },
    {
        "number": 3198,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('hose') == 'hoose'\nassert solution('hoose') == 'hoose'\nassert solution('hoose') == 'hoose'\nassert solution('hoose') == 'hoose'\nassert solution('hose') == 'hoose'\n"
    },
    {
        "number": 3198,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\nhoose\nhose\nnose\nnoises\nnoise''') == 'hoose\\nnoises\\nnoise'\nassert solution('''5\nhose\nhoose\noose\nmoose\n''') == 'hoose\\nmoose'\nassert solution('''6\nhose\nhoose\noose\nmoose\n''') == 'hoose\\nmoose'\nassert solution('''7\nhose\nhoose\noose\nmoose\n''') == 'hoose\\nmoose'\nassert solution('''8\nhose\nhoose\noose\nmoose\n''') == 'hoose\\noose\\noise'\n"
    },
    {
        "number": 3198,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"NO TYPOS\"\nassert solution(\"hoose\") == \"hoose\"\nassert solution(\"hose\") == \"NO TYPOS\"\nassert solution(\"noises\") == \"noises\"\nassert solution(\"noise\") == \"noise\"\n"
    },
    {
        "number": 3198,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"hose\\nhoose\\nhose\\n\") == \"hoose\"\nassert solution(\"hose\\nhoose\\nhose\\n\") == \"hoose\"\nassert solution(\"hose\\nhoose\\nhoose\\n\") == \"hoose\"\nassert solution(\"hose\\nhoose\\nhoose\\n\") == \"hoose\"\n"
    },
    {
        "number": 3198,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abcd\\nab') == 'a\\nb\\nc\\nd'\nassert solution('abcd\\nab\\na') == 'a\\nb\\nc\\nd'\nassert solution('abcd\\na\\nb\\nc\\nd') == 'a\\nb\\nc\\nd'\nassert solution('abcd\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\"
    },
    {
        "number": 3198,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('hoose') == 'NO TYPOS'\nassert solution('hose') == 'NO TYPOS'\nassert solution('nose') == 'NO TYPOS'\nassert solution('noises') == 'NO TYPOS'\n"
    },
    {
        "number": 3198,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('\\n') == ''\nassert solution('hoose\\nhose\\nnose\\noises\\nnoise\\n') == 'hoose\\noise\\nnose'\nassert solution('\\nhoose\\nhose\\nnose\\noises\\nnoise\\n') == 'hoose\\nnose\\noises'\nassert solution('\\nhoose\\nhose\\nnose\\nnoises\\nnoise\\n') == 'noise\\nnose'\n"
    },
    {
        "number": 3198,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\nhose\\nhose\\nhose') == 'hose\\n'\nassert solution('2\\nhoose\\nhose\\nhose') == 'hose\\n'\nassert solution('3\\nhoose\\nhose\\nhose') == 'hose\\n'\nassert solution('4\\nhose\\nhoese\\nhose\\nhoese') == 'hose\\nhoese\\n'\nassert solution('5\\nhoose\\nhose\\nhose') == 'hoose\\n'\n"
    },
    {
        "number": 3198,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3198,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 'NO TYPOS'\nassert solution('hoose') == 'NO TYPOS'\nassert solution('hose') == 'hoose'\nassert solution('noises') == 'noise'\nassert solution('noise') == 'noise'\n"
    },
    {
        "number": 3199,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2\\n3') == '2\\n2\\n5'\nassert solution('1 1\\n3') == '2\\n2\\n5'\nassert solution('2 3\\n4') == '0\\n16\\n8'\nassert solution('2 2\\n4') == '0\\n16\\n8'\nassert solution('1 3\\n2') == '0\\n16\\n8'\n"
    },
    {
        "number": 3199,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1\\n3') == '2\\n2\\n5'\nassert solution('2 3\\n4') == '0\\n16\\n8'\n"
    },
    {
        "number": 3199,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1') == '2'\nassert solution('1 1\\n3') == '2'\nassert solution('1 1\\n3\\n3') == '2'\nassert solution('2 3\\n4') == '0'\nassert solution('2 3\\n4\\n4') == '16'\n"
    },
    {
        "number": 3199,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1') == '2\\n2\\n5'\nassert solution('2 3') == '0\\n16\\n8'\nassert solution('1 2') == '2\\n2\\n5'\nassert solution('1 1 1') == '2\\n2\\n5'\nassert solution('2 3') == '0\\n16\\n8'\n"
    },
    {
        "number": 3199,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == '2'\nassert solution('2 3') == '0'\nassert solution('3 3') == '3'\nassert solution('2 3\\n3 2') == '0'\nassert solution('4 1') == '5'\n"
    },
    {
        "number": 3199,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''1 1\n3\n'''\n) == '\\n'.join(map(str, [2, 2, 5]))\n\nassert solution(\n'''2 3\n4\n'''\n) == '\\n'.join(map(str, [0, 16, 8]))\n"
    },
    {
        "number": 3199,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1') == '2'\nassert solution('2 3') == '0\\n16\\n8'\nassert solution('1 1\\n3') == '2\\n2\\n5'\nassert solution('2 3\\n4') == '0\\n16\\n8'\n\"\"\"\n"
    },
    {
        "number": 3199,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\n\n\"\"\"\n\n\"\"\""
    },
    {
        "number": 3199,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"2\\n2\\n5\"\nassert solution(\"2 3\\n4\") == \"0\\n16\\n8\"\nassert solution(\"2 3\\n1\") == \"0\\n1\\n1\"\nassert solution(\"1 1\\n3\") == \"2\\n2\\n5\"\n\n---"
    },
    {
        "number": 3199,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1') == '2'\nassert solution('2 3') == '0'\nassert solution('2 3') == '16'\nassert solution('2 1') == '2'\nassert solution('10 10') == '5'\n"
    },
    {
        "number": 3200,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"11.42135955\"\nassert solution(\"2\") == \"35.33333333\"\nassert solution(\"15\") == \"72.88888888\"\nassert solution(\"16\") == \"103.58333333\"\nassert solution(\"1\") == \"44.72135955\"\n"
    },
    {
        "number": 3200,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1''') == \"44.72135955\"\nassert solution('''2''') == \"68.52419365\"\nassert solution('''5''') == \"87.83939855\"\nassert solution('''6''') == \"110.859375\"\nassert solution('''10''') == \"169.09804086\"\n"
    },
    {
        "number": 3200,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 3200,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3200,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1') == '44.72135955'\nassert solution('2') == '68.52419365'\nassert solution('3') == '27.26459839'\nassert solution('4') == '104.0'\nassert solution('5') == '22.9736716'\n"
    },
    {
        "number": 3200,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"44.72135955\"\nassert solution(\"2\") == \"68.52419365\"\n"
    },
    {
        "number": 3200,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == '44.72135955'\nassert solution('2') == '68.52419365'\nassert solution('3') == '49.50682641'\nassert solution('4') == '41.94500426'\nassert solution('5') == '43.86740845'\n"
    },
    {
        "number": 3200,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1\n2 45 45''') == '68.52419365'\nassert solution('''1\n2 45 45\n3 100 45''') == '46.77989915'\nassert solution('''1\n2 45 45\n3 100 45\n4 100 45''') == '45.82760906'\nassert solution('''3\n2 30 30\n4 30 30\n2 30 30''') == '22.51422681'\nassert solution('''5\n8 5 10 8 5''') == '22.51422681'\n"
    },
    {
        "number": 3200,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1\n2\n50 45 45\n''') == '68.52419365'\nassert solution('''2\n1\n5 5 5\n50 45 45\n''') == '48.535950'\nassert solution('''3\n10 5 5\n5 45 45\n10 45 45\n10 45 45\n''') == '35.235335'\nassert solution('''10\n5 5 5\n5 45 45\n10 45 45\n10 45 45\n10 45 45\n10 45 45\n10 45 45\n10 45 45\n10 45 45\n''') == '149.5291045'\nassert solution('''16\n50 45 45\n5 45 45\n10 45 45\n10 45 45\n10 45 45\n10 45 45\n10 45 45\n10 45 45\n10 45 45\n10 45 45\n10 45 45\n10 45 45\n10 45 45\n10 45 45\n10 45 45\n''') == '639.8457727'\n"
    },
    {
        "number": 3200,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n1\n50 45 45\n''') == '68.52419365'\n"
    },
    {
        "number": 3201,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''2 3 1 5\n1 2\n''') == '1\\n3\\n2\\n'\n\nassert solution(\n'''3 4 2 3\n1 3 1\n''') == '1\\n1\\n0\\n2\\n'\n\nassert solution(\n'''4 5 2 3\n1 3 1\n''') == '1\\n1\\n0\\n0\\n'\n\nassert solution(\n'''5 2 3 4 5\n1 2 3 4 5\n''') == '1\\n1\\n1\\n1\\n1\\n'\n\nassert solution(\n'''6 2 3 4 5 6\n1 2 3 4 5 6\n''') == '1\\n1\\n1\\n1\\n1\\n1\\n'"
    },
    {
        "number": 3201,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1 1 0 0\"\nprint(solution(stdin))\n"
    },
    {
        "number": 3201,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n\") == \"\"\nassert solution(\"1\\n2\\n\") == \"1\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"2\"\nassert solution(\"3\\n4\\n5\\n6\\n7\\n\") == \"1\"\n"
    },
    {
        "number": 3201,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\\n\") == \"1\\n\"\nassert solution(\"1\\n2\\n\") == \"0\\n\"\nassert solution(\"2\\n2\\n\") == \"1\\n\"\nassert solution(\"1\\n1\\n\") == \"1\\n\"\nassert solution(\"1\\n1\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3201,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3 1 5') == '1\\n3\\n2'\nassert solution('3 4 2 3') == '1\\n3\\n2'\n"
    },
    {
        "number": 3201,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3201,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 3 1 5\n1 2\n''') == '1\\n3\\n2'\nassert solution('''3 4 2 3\n1 3 1\n''') == '1\\n1\\n0\\n2'\nassert solution('''6 4 3 2\n3 4 3\n''') == '3\\n3\\n2\\n3\\n1\\n1'\nassert solution('''7 4 2 3\n3 4 3\n''') == '3\\n3\\n2\\n1\\n1\\n0\\n1'\nassert solution('''8 4 2 3\n3 4 3\n''') == '3\\n3\\n2\\n1\\n1\\n0\\n1\\n0'\n"
    },
    {
        "number": 3201,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n\") == \"\"\nassert solution(\"1\\n1\\n\") == \"\"\nassert solution(\"1\\n1\\n1\\n\") == \"\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"\"\n"
    },
    {
        "number": 3201,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3201,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"2 3 1 5\n1 2\n\"\"\") == \"\"\"1\n3\n2\n\"\"\"\nassert solution(\n\"\"\"4 2 5 4\n3 3\n\"\"\") == \"\"\"3\n1\n0\n2\n1\n\"\"\"\nassert solution(\n\"\"\"4 2 5 4\n1 1\n\"\"\") == \"\"\"1\n1\n0\n1\n\"\"\"\nassert solution(\n\"\"\"4 2 5 4\n1 1\n\"\"\") == \"\"\"1\n1\n0\n1\n\"\"\"\nassert solution(\n\"\"\"4 2 5 4\n1 1\n\"\"\") == \"\"\"1\n1\n0\n1\n\"\"\"\n"
    },
    {
        "number": 3202,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1') == '3'\nassert solution('1 1 2 2 2 2 2') == '2'\nassert solution('1 1 2 2 2 2 2 3 2 2 2 2 2') == '2'\nassert solution('1 1 2 2 2 2 2 3 2 2 2 2 2 2 3 2 2 2') == '2'\nassert solution('1 1 2 2 2 2 2 3 2 2 2 2 2 2 3 2 2 2 3 2 2 2 2 2 2') == '2'\n"
    },
    {
        "number": 3202,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 3\n2 2 3 2 2''') == '2'\nassert solution('''2 4\n1 1 2 2 3''') == '2'\nassert solution('''1 1\n1 1''') == '0'\nassert solution('''7 2\n2 2 2 2 2 2 2''') == '2'\nassert solution('''4 3\n2 2 2 2''') == '2'\n"
    },
    {
        "number": 3202,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 5\\n1 1\\n') == '3'\nassert solution('5 3\\n2 2 3 2 2\\n') == '2'"
    },
    {
        "number": 3202,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 1''') == 3\nassert solution('''2 5''') == 3\nassert solution('''5 3''') == 2\nassert solution('''1 1''') == 3\nassert solution('''2 1''') == 3\n"
    },
    {
        "number": 3202,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 5\n1 1''') == '3'\nassert solution('''5 3\n2 2 3 2 2''') == '2'\nassert solution('''1 1\n1 1''') == '0'\nassert solution('''3 2\n1 1 1''') == '2'\nassert solution('''3 3\n2 2 2''') == '1'\n"
    },
    {
        "number": 3202,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport unittest\n\nclass TestSolution(unittest.TestCase):\n\n    def test_solution(self):\n        self.assertEqual(solution(stdin), stdout)"
    },
    {
        "number": 3202,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"3\"\nassert solution(\"2 2 3 2 2\") == \"2\"\nassert solution(\"5 3\") == \"2\"\nassert solution(\"2 2 3 2 2\") == \"2\"\nassert solution(\"2 2 3 2 2\") == \"2\"\n"
    },
    {
        "number": 3202,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1') == '3'\nassert solution('2 2 3 2 2') == '2'\nassert solution('1 1') == '3'\nassert solution('5 3') == '2'\nassert solution('1 1 2 2 3 2 3') == '3'\n"
    },
    {
        "number": 3202,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output\n"
    },
    {
        "number": 3202,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 5\\n1 1\") == \"3\"\nassert solution(\"2 5\\n2 2 3 2 2\") == \"2\"\nassert solution(\"2 5\\n2 2 3 2 3\") == \"1\"\nassert solution(\"2 3\\n1 1 1\") == \"1\"\nassert solution(\"5 3\\n2 2 3 2 2\") == \"1\"\n"
    },
    {
        "number": 3203,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n100 100\\n50 50\\n') == '50'\nassert solution('1\\n0 50\\n50 0\\n') == '25'\nassert solution('2\\n0 50\\n50 0\\n') == '25'\n\"\"\"\nfrom fractions import Fraction\n"
    },
    {
        "number": 3203,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\n100 100\n50 50''') == '50'\nassert solution('''1\n0 50''') == '25'\nassert solution('''3\n0 50\n100 0\n50 0''') == '75'\nassert solution('''5\n0 50\n100 0\n50 0\n100 0\n50 0''') == '135'\nassert solution('''10\n0 50\n100 0\n50 0\n100 0\n50 0\n100 0\n50 0\n100 0\n50 0\n100 0''') == '200'\n"
    },
    {
        "number": 3203,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n100 100\n50 50''') == '50'\nassert solution('''2\n0 50\n50 0''') == '25'\nassert solution('''3\n100 100\n50 50\n0 0''') == '125'\nassert solution('''4\n100 100\n50 50\n100 0\n0 0''') == '125'\nassert solution('''5\n100 100\n50 50\n100 0\n0 0\n0 0''') == '125'\n"
    },
    {
        "number": 3203,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"50\"\n\"\"\"\n"
    },
    {
        "number": 3203,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '25'"
    },
    {
        "number": 3203,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n2\n100 100\n50 50\n\"\"\") == \"50\"\nassert solution(\"\"\"\n3\n10 10 10\n30 30 30\n50 50 50\n\"\"\") == \"25\"\nassert solution(\"\"\"\n3\n30 30 30\n10 10 10\n10 10 10\n50 50 50\n\"\"\") == \"25\"\nassert solution(\"\"\"\n4\n30 30 30 30\n30 30 30 30\n10 10 10 10\n10 10 10 10\n50 50 50 50\n\"\"\") == \"25\"\nassert solution(\"\"\"\n5\n30 30 30 30 30\n30 30 30 30 30\n10 10 10 10 10\n10 10 10 10 10\n50 50 50 50 50\n\"\"\") == \"25\"\n"
    },
    {
        "number": 3203,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n2\n100 50\n50 50\n\"\"\"\n) == \"50\"\n"
    },
    {
        "number": 3203,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"25\"\nassert solution(\"\") == \"\"\nassert solution(\"100 100\") == \"50\"\nassert solution(\"0 50\") == \"25\"\nassert solution(\"100 100\") == \"50\"\n"
    },
    {
        "number": 3203,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin.split('\\n')[1]\n\"\"\"\n"
    },
    {
        "number": 3203,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2\n100 100\n50 50\n''') == '50'\nassert solution('''2\n0 50\n50 0\n''') == '25'\nassert solution('''2\n1 10\n10 1\n''') == '100'\nassert solution('''2\n1 100\n10 1\n''') == '100'\nassert solution('''2\n1 10\n10 1\n''') == '100'\n"
    },
    {
        "number": 3204,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"60\"\nassert solution(\"3\") == \"120\"\nassert solution(\"4\") == \"180\"\nassert solution(\"5\") == \"240\"\n"
    },
    {
        "number": 3204,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n1\n100\n200\n''') == '20'\nassert solution('''\n1\n2000\n2010\n''') == '2000'\nassert solution('''\n2\n100\n200\n2010\n''') == '60'\nassert solution('''\n3\n100\n200\n2010\n''') == '60'\nassert solution('''\n4\n100\n200\n2010\n''') == '60'\n"
    },
    {
        "number": 3204,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n100\\n200') == '160'\nassert solution('3\\n100\\n200\\n2010') == '250'\n"
    },
    {
        "number": 3204,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n60\\n100\\n200\\n100\\n100\\n') == '60'\nassert solution('3\\n100\\n200\\n2010') == '250'\n"
    },
    {
        "number": 3204,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(open(\"test_input_1\").read()) == \"120\"\nassert solution(open(\"test_input_2\").read()) == \"250\""
    },
    {
        "number": 3204,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n100\\n200\") == \"160\"\nassert solution(\"2\\n100\\n200\") == \"250\"\nassert solution(\"3\\n100\\n200\\n2010\") == \"250\"\nassert solution(\"4\\n100\\n200\\n2010\\n2040\") == \"400\"\nassert solution(\"5\\n100\\n200\\n2010\\n2040\\n200\") == \"500\"\n"
    },
    {
        "number": 3204,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2\\n100\\n200\") == \"160\"\nassert solution(\"3\\n100\\n200\\n2010\") == \"250\"\n"
    },
    {
        "number": 3204,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n100\n200''') == '160'\nassert solution('''3\n100\n200\n2010''') == '250'\nassert solution('''10\n30\n5\n5\n1\n30\n15\n5\n1\n1''') == '50'\nassert solution('''15\n30\n5\n5\n1\n30\n15\n5\n1\n1''') == '200'\nassert solution('''20\n30\n5\n5\n1\n30\n15\n5\n1\n1''') == '100'\n"
    },
    {
        "number": 3204,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"200\"\nprint(\"Passed the test!\")\n"
    },
    {
        "number": 3204,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n100\\n200\\n') == '160'\nassert solution('3\\n100\\n200\\n2010\\n') == '250'\nassert solution('1\\n100\\n200\\n') == '0'\nassert solution('10\\n200\\n300\\n100\\n400\\n900\\n1000\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60\\n60"
    },
    {
        "number": 3205,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"4 2\n0 1 1\n2 3 1\"\"\") == \"2\"\nassert solution(\"\"\"5 5\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 0 3\"\"\") == \"0\"\nassert solution(\"\"\"5 5\n1 1 1\n1 1 2\n1 2 3\n2 3 3\n3 4 3\n4 0 3\"\"\") == \"2\"\nassert solution(\"\"\"6 3\n0 1 2\n1 2 3\n2 3 3\n3 4 5\n4 0 1\n5 0 3\nSample Output 3:\n1\n\"\"\"\n) == \"0\"\nassert solution(\"\"\"5 4\n0 1 2\n1 2 3\n2 3 3\n3 4 5\n4 0 1\n5 0 3\nSample Output 4:\n2\n\"\"\"\n) == \"2\"\n"
    },
    {
        "number": 3205,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 2\\n0 1 1\\n2 3 1\\n') == '2'\nassert solution('5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n') == '0'\nassert solution('3 2\\n0 1 1\\n2 3 1\\n') == '2'\nassert solution('5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n') == '0'\nassert solution('8 2\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 5 3\\n5 6 3\\n6 7 3\\n7 8 3\\n') == '0'\n"
    },
    {
        "number": 3205,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 2\\n0 1 1\\n2 3 1\\n0 0 1\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3') == '0'\nassert solution('3 4\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n0 1 1') == '2'\nassert solution('4 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n0 1 1') == '0'\nassert solution('3 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n0 1 1') == '0'\nassert solution('3 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n0 1 1') == '1'\n"
    },
    {
        "number": 3205,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2\\n0 1 1\\n2 3 1\\n0 1 1') == '0'\nassert solution('4 2\\n0 1 1\\n2 3 1\\n0 1 1\\n2 3 1\\n0 1 1') == '2'\nassert solution('10 7\\n0 1 2\\n0 1 4\\n0 1 2\\n1 3 1\\n2 1 1\\n2 3 4\\n2 1 1\\n2 2 3\\n2 1 4\\n2 2 4\\n3 1 2\\n3 2 1\\n4 3 4\\n4 1 3\\n4 1 1\\n4 2 4\\n4 1 1') == '8'\nassert solution('4 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 2 1\\n2 3 1\\n0 1 3\\n2 3 1\\n0 1 3\\n2 3 1\\n1 2 1\\n2 3 4\\n2 1 1\\n2 3 4\\n2 1 1\\n2 2 3\\n2 1 4\\n2 2 4\\n3 1 2\\n3 2 1\\n4 3 4\\n4 1 3\\n4 1 1\\n4 2 4\\n4 1 1') == '0'\nassert solution('5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 2 1\\n2 3 1\\n0 1 3\\n2 3 1\\n0 1 3\\n2 3 1\\n1 2 1\\n2 3 4\\n2 1 1\\n2 3 4\\n2 1 1\\n2 2 3\\n2 1 4\\n2 2 4\\n3 1 2\\n3 2 1\\n4 3 4\\n4 1 3\\n4 1 1\\n4 2 4\\n4 1 1') == '6'\n"
    },
    {
        "number": 3205,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 2\\n0 1 1\\n2 3 1\\n') == '0'\nassert solution('4 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n') == '2'\nassert solution('6 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n5 1 1\\n') == '1'\nassert solution('4 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 0 3\\n') == '1'\nassert solution('6 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n5 1 1\\n') == '0'\n"
    },
    {
        "number": 3205,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0 2\\n0 1 1\\n2 3 1\") == \"2\"\nassert solution(\"4 2\\n0 1 1\\n2 3 1\") == \"0\"\nassert solution(\"5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n\") == \"0\"\n"
    },
    {
        "number": 3205,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 2\\n0 1 1\\n2 3 1\\n0 1 1\\n2 3 1\\n0 1 1\\n2 3 1\\n0 1 1\\n2 3 1\\n0 1 1\\n2 3 1\\n0 1 1\\n2 3 1') == '0'\nassert solution('0 1\\n2 3 1\\n0 1 1\\n2 3 1\\n0 1 1\\n2 3 1\\n0 1 1\\n2 3 1\\n0 1 1\\n2 3 1\\n0 1 1\\n2 3 1') == '1'\nassert solution('2 2\\n0 1 1\\n2 3 1\\n0 1 1\\n2 3 1\\n0 1 1\\n2 3 1\\n0 1 1\\n2 3 1\\n0 1 1\\n2 3 1\\n0 1 1\\n2 3 1') == '3'\nassert solution('10 10\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1 5 3\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n1"
    },
    {
        "number": 3205,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3205,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 2\n0 1 1\n2 3 1''') == '2'\nassert solution('''10 10\n0 1 1\n2 3 1\n3 4 3\n4 0 3\n5 5 5\n6 7 5\n7 8 5\n8 9 5\n9 10 5\n10 11 5\nSample Output 2:\n0''') == '0'\nassert solution('''5 5\n0 1 1\n1 2 3\n2 3 3\n3 4 3\n4 0 3\n5 5 5\n6 7 5\n7 8 5\n8 9 5\n9 10 5\n10 11 5\nSample Output 3:\n1''') == '1'\nassert solution('''5 5\n0 1 1\n1 2 3\n2 3 3\n3 4 3\n4 0 3\n5 5 5\n6 7 5\n7 8 5\n8 9 5\n9 10 5\n10 11 5\nSample Output 4:\n5''') == '5'\nassert solution('''1 1\n0 1 1\n1 1 1\n2 2 1\n1 2 1\n1 3 1\n2 4 1\n1 3 1\n2 5 1\n1 4 1\n2 6 1\n2 7 1\n3 8 1\n1 4 1\n1 5 1\n1 6 1\n1 7 1\n1 8 1\n2 9 1\n2 10 1\n2 11 1\n3 12 1\n3 13 1\n3 14 1\n4 15 1\n3 16 1\n4 17 1\n2 18 1\n2 19 1\n1 20 1\n1 21 1\n1 22 1\n1 23 1\n1 24 1\n2 25 1\n1 26 1\n1 27 1\n1 28 1\n1 29 1\n2 30 1\n2 31 1\n2 32 1\n1 33 1\n1 34 1\n1 35 1\n1 36 1\n2 37 1\n1 38 1\n1 39 1\n1 40 1\n1 41 1\n2 42 1\n1 41 1\n2 43 1\n1 44 1\n2 45 1\n1 45 1\n2 46 1\n1 47 1\n2 48 1\n1 48 1\n2 49 1\n1 49 1\n2 50 1\n1 50 1\n2 51 1\n1 51 1\n2 52 1\n1 52 1\n2 53 1\n1 53 1\n2 54 1\n1 54 1\n2 55 1\n1 55 1\n2 56 1\n1 56 1\n2 57 1\n1 57 1\n2 58 1\n1 58 1\n2 59 1\n1 59 1\n2 60 1\n1 60 1\n2 61 1\n1 61 1\n2 62 1\n1 62 1\n2 63 1\n1 63 1\n2 64 1\n1 64 1\n2 65 1\n1 65 1\n2 66 1\n1 66 1\n2 67 1\n1 67 1\n2 68 1\n1 68 1\n2 69 1\n1 69 1\n2 70 1\n1 70 1\n2 71 1\n1 71 1\n2 72 1\n1 72 1\n2 73 1\n1 73 1\n2 74 1\n1 74 1\n2 75 1\n1 75 1\n2 76 1\n1 76 1\n2 77 1\n1 77 1\n2 78 1\n1 78 1\n2 79 1\n1 79 1\n2 80 1\n1 80 1\n2 81 1\n1 81 1\n2 82 1\n1 82 1\n2 83 1\n1 83 1\n2 84 1\n1 84 1\n2 85 1\n1 85 1\n2 86 1\n1 86 1\n2 87 1\n1 87 1\n2 88 1\n1 88 1\n2 89 1\n1 89 1\n2 90 1\n1 90 1\n2 91 1\n1 91 1\n2 92 1\n1 92 1\n2 93 1\n1 93 1\n2 94 1\n1 94 1\n2 95 1\n1 95 1\n2 96 1\n1 96 1\n2 97 1\n1 97 1\n2 98 1\n1 98 1\n2 99 1\n1 99 1\n2 100 1\n1 100 1\n2 101 1\n1 101 1\n2 102 1\n1 102 1\n2 103 1\n1 103 1\n2 104 1\n1 104 1\n2 105 1\n1 105 1\n2 106 1\n1 106 1\n2 107 1\n1 107 1\n2 108 1\n1 108 1\n2 109 1\n1 109 1\n2 110 1\n1 110 1\n2 111 1\n1 111 1\n2 112 1\n1 112 1\n2 113 1\n1 113 1\n2 114 1\n1 114 1\n2 115 1\n1 115 1\n2 116 1\n1 116 1\n2 117 1\n1 117 1\n2 118 1\n1 118 1\n2 119 1\n1 119 1\n2 120 1\n1 120 1\n2 121 1\n1 121 1\n2 122 1\n1 122 1\n2 123 1\n1 123 1\n2 124 1\n1 124 1\n2 125 1\n1 125 1\n2 126 1\n1 126 1\n2 127 1\n1 127 1\n2 128 1\n1 128 1\n2 129 1\n1 129 1\n2 130 1\n1 130 1\n2 131 1\n1 131 1\n2 132 1\n1 132 1\n2 133 1\n1 133 1\n2 134 1\n1 134 1\n2 135 1\n1 135 1\n2 136 1\n1 136 1\n2 137 1\n1 137 1\n2 138 1\n1 138 1\n2 139 1\n1 139 1\n2 140 1\n1 140 1\n2 141 1\n1 141 1\n2 142 1\n1 142 1\n2 143 1\n1 143 1\n2 144 1\n1 144 1\n2 145 1\n1 145 1\n2 146 1\n1 146 1\n2 147 1\n1 147 1\n2 148 1\n1 148 1\n2 149 1\n1 149 1\n2 150 1\n1 150 1\n2 151 1\n1 151 1\n2 152 1\n1 152 1\n2 153 1\n1 153 1\n2 154 1\n1 154 1\n2 155 1\n1 155 1\n2 156 1\n1 156 1\n2 157 1\n1 157 1\n2 158 1\n1 158 1\n2 159 1\n1 159 1\n2 160 1\n1 160 1\n2 161 1\n1 161 1\n2 162 1\n1 162 1\n2 163 1\n1 163 1\n2 164 1\n1 164 1\n2 165 1\n1 165 1\n2 166 1\n1 166 1\n2 167 1\n1 167 1\n2 168 1\n1 168 1\n2 169 1\n1 169 1\n2 170 1\n1 170 1\n2 171 1\n1 171 1\n2 172 1\n1 172 1\n2 173 1\n1 173 1\n2 174 1\n1 174 1\n2 175 1\n1 175 1\n2 176 1\n1 176 1\n2 177 1\n1 177 1\n2 178 1\n1 178 1\n2 179 1\n1 179 1\n2 180 1\n1 180 1\n2 181 1\n1 181 1\n2 182 1\n1 182 1\n2 183 1\n1 183 1\n2 184 1\n1 184 1\n2 185 1\n1 185 1\n2 186 1\n1 186 1\n2 187 1\n1 187 1\n2 188 1\n1 188 1\n2 189 1\n1 189 1\n2 190 1\n1 190 1\n2 191 1\n1 191 1\n2 192 1\n1 192 1\n2 193 1\n1 193 1\n"
    },
    {
        "number": 3205,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 2\n0 1 1\n2 3 1''') == '2'\nassert solution('''10 5\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 0 3\n5 6 7\n6 7 8\n7 8 9\n8 9 10\n9 10''') == '0'\nassert solution('''11 5\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 0 3\n5 6 7\n6 7 8\n7 8 9\n8 9 10\n9 10 11\n10 11 12\n11 12 13\n12 13 14\n13 14 15\n14 15 16\n15 16 17\n16 17 18\n17 18 19\n18 19 20\n19 20 21\n20 21 22\n21 22 23\n22 23 24\n23 24 25\n24 25 26\n25 26 27\n26 27 28\n27 28 29\n28 29 30\n29 30 31\n30 31''') == '3'\n"
    },
    {
        "number": 3206,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 3\\n3 3 2 1\\n3 3 3\\n3 3 3\\n3 3 3') == '1 1\\n1 2\\n2 3 4'\nassert solution('4 2\\n3 3 2 2\\n6 3\\n3 3 3\\n3 3 3') == '-1'\nassert solution('3 3\\n3 3 2 1\\n3 3 3\\n3 3 3') == '1 1\\n1 2\\n2 3 4'\nassert solution('4 3\\n3 3 2 1\\n3 3 3\\n3 3 3\\n3 3 3') == '1 1\\n1 2\\n2 3 4\\n2 3 4'\nassert solution('4 3\\n3 3 2 1\\n3 3 3\\n3 3 3\\n3 3 3') == '1 1\\n1 2\\n2 3 4\\n2 3 4'\n"
    },
    {
        "number": 3206,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(open('test/24-0.in').read()) == open('test/24-0.out').read()\nassert solution(open('test/24-1.in').read()) == open('test/24-1.out').read()\nassert solution(open('test/24-2.in').read()) == open('test/24-2.out').read()\nassert solution(open('test/24-3.in').read()) == open('test/24-3.out').read()\nassert solution(open('test/24-4.in').read()) == open('test/24-4.out').read()\n"
    },
    {
        "number": 3206,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('0') == '-1'\nassert solution('1 0') == '-1'\nassert solution('1 1 0') == '0'\nassert solution('1 1 1 0') == '1'\n"
    },
    {
        "number": 3206,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"4 3\n3 3 2 1\n3 3 3\n\"\"\") == \"\"\"1 1\n1 2\n2 3 4\"\"\"\n\nassert solution(\"\"\"4 2\n3 3 2 2\n6 3\n\"\"\") == \"\"\"-1\"\"\"\n\nassert solution(\"\"\"2 2\n1\n3\n\"\"\") == \"\"\"1 3\"\"\"\n\nassert solution(\"\"\"2 1\n2\n\"\"\") == \"\"\"1 2\"\"\"\n\nassert solution(\"\"\"2 2\n3\n5\n\"\"\") == \"\"\"1 2\"\"\""
    },
    {
        "number": 3206,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '''\n4 2\n3 3 2 2\n6 3\n'''\n) == '''\n1 1\n1 2\n2 3 4\n'''\nassert solution(\n    '''\n5 1\n3 3 1 4 1\n3 3 4\n'''\n) == '''\n1 3\n1 1\n2 2\n1 2 3 4\n'''\nassert solution(\n    '''\n5 2\n3 3 2 1\n2 2 1\n'''\n) == '''\n1 3\n1 2\n2 2 1\n-1\n'''\nassert solution(\n    '''\n3 2\n1 1\n1 1\n1 1\n'''\n) == '''\n-1\n'''\nassert solution(\n    '''\n1 1\n1 1\n1 1\n'''\n) == '''\n3\n1 1\n-1\n'''\n"
    },
    {
        "number": 3206,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(open(\"testing/test-7.txt\").read()) == open(\"testing/test-7-expected.txt\").read()\nassert solution(open(\"testing/test-8.txt\").read()) == open(\"testing/test-8-expected.txt\").read()\nassert solution(open(\"testing/test-9.txt\").read()) == open(\"testing/test-9-expected.txt\").read()\nassert solution(open(\"testing/test-10.txt\").read()) == open(\"testing/test-10-expected.txt\").read()\nassert solution(open(\"testing/test-11.txt\").read()) == open(\"testing/test-11-expected.txt\").read()\n"
    },
    {
        "number": 3206,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4\") == \"1 1\\n2 3 4\\n\"\nassert solution(\"2 3 3\") == \"1 1\\n1 2\\n2 3 3\\n\"\nassert solution(\"3 3 3\") == \"1 1\\n1 2\\n2 3 3 3\\n\"\nassert solution(\"4 2\") == \"2 -1\\n1 1\\n1 2\\n2 2 3 4\\n\"\nassert solution(\"5 2\") == \"2 -1\\n1 1\\n1 2\\n1 3 1 2\\n\"\n"
    },
    {
        "number": 3206,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1\\n1\\n\") == \"1 1\\n1 2\\n2 3\"\nassert solution(\"1\\n1\\n1\\n\") == \"-1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 3206,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output\n"
    },
    {
        "number": 3206,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 3\n3 3 2 1\n3 3 3\n''') == '1 1\\n1 2\\n2 3 4\\n'\nassert solution('''4 2\n3 3 2 2\n6 3\n''') == '-1\\n'\nprint(\"All tests passed.\")'''"
    },
    {
        "number": 3207,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 1 L\\n0 0 D\\n10 1 L\\n') == '10.0\\n4.0\\n1.0'\nassert solution('0 1 L\\n0 0 D\\n3 1 L\\n') == '10.0\\n4.0\\n0.0'\nassert solution('0 1 L\\n0 0 D\\n3 1 L\\n6 2 D\\n') == '10.0\\n4.0\\n1.0'\nassert solution('0 1 L\\n0 0 D\\n3 1 L\\n6 2 D\\n7 3 L\\n') == '10.0\\n4.0\\n1.0'\nassert solution('0 1 L\\n0 0 D\\n10 1 L\\n4 3 L\\n') == '10.0\\n4.0\\n1.0'\n"
    },
    {
        "number": 3207,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3207,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 3 10\") == \"10.0\"\nassert solution(\"3 3 7\") == \"10.0\"\nassert solution(\"4 3 7\") == \"4.0\"\nassert solution(\"4 2 3\") == \"10.0\"\nassert solution(\"10 4 2\") == \"10.0\"\n"
    },
    {
        "number": 3207,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\") == \"10.0\\n10.0\\n0.0\"\nassert solution(\"4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\\n\") == \"10.0\\n4.0\\n1.0\"\n\"\"\"\n"
    },
    {
        "number": 3207,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 3 10\n0 0 D\n10 1 L\n''') == '10.0'\nassert solution('''4 3 7\n1 0 D\n3 0 D\n4 1 L\n6 2 D\n''') == '10.0'\nassert solution('''8 3 9\n5 6 L\n5 1 D\n7 0 D\n9 2 L\n9 4 D\n9 6 D\n9 8 L\n''') == '10.0'\nassert solution('''10 4 4\n0 0 L\n1 0 L\n2 0 L\n3 0 L\n''') == '20.0'\nassert solution('''3 4 5\n1 2 L\n1 3 D\n2 3 D\n1 4 D\n2 4 L\n3 4 L\n''') == '15.0'\n"
    },
    {
        "number": 3207,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\\n0 0 D\\n10 1 L\") == \"10.0\\n10.0\\n0.0\"\nassert solution(\"2 3 4\\n1 0 D\\n2 1 D\\n3 1 D\\n4 1 L\\n5 2 D\\n6 2 D\\n7 2 L\") == \"10.0\\n4.0\\n1.0\\n\"\nprint(\"\")"
    },
    {
        "number": 3207,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0 0 D\\n10 1 L\\n\") == \"10.0\\n10.0\\n0.0\"\nassert solution(\"2 3 10\\n0 0 D\\n10 1 L\\n\") == \"10.0\\n10.0\\n0.0\"\nassert solution(\"4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\\n\") == \"10.0\\n4.0\\n1.0\"\nassert solution(\"2 3 10\\n0 0 D\\n10 1 L\\n0 0 D\\n10 1 L\\n\") == \"10.0\\n10.0\\n0.0\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n\") == \"2.0\\n3.0\\n1.0\\n5.0\\n\"\n"
    },
    {
        "number": 3207,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\n\"\"\"\n\n---SOLUTION---\n\nThe solution is just to find out the total distance travelled by each color. The following code will be used\n\nn, k, l = map(int, stdin.readline().split())\ncolors, directions = [0]*k, [0]*k\nfor i in range(n):\n    x, c, d = map(int, stdin.readline().split())\n    colors[c-1] += x\n    directions[c-1] += d\n\nfor c in range(k):\n    print(\"{:.1f}\".format(colors[c]))\n\"\"\"\n"
    },
    {
        "number": 3207,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''0 0 D\n10 1 L''') == '10.0\\n10.0\\n0.0'\nassert solution(\n'''4 3 7\n1 0 D\n3 0 D\n4 1 L\n6 2 D''') == '10.0\\n4.0\\n1.0'\n'''\nTime Limit: 5 seconds\nMemory Limit: 512 megabytes\nAlgorithmic Shortest Path: DP\nSource Limit: 100 megabytes\nSocial\n'''"
    },
    {
        "number": 3207,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 3 10\n0 0 D\n10 1 L\n''') == '10.0\\n10.0\\n0.0\\n'\nassert solution('''2 3 7\n1 0 D\n3 0 D\n4 1 L\n6 2 D\n''') == '10.0\\n4.0\\n1.0\\n'\n\nprint(solution(input()))"
    },
    {
        "number": 3208,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(sample1) == \"we will avenge our dead parrot arr\"\nassert solution(sample2) == \"Impossible\"\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 3208,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\n-----Test-----\nTest 1:\na e i o u\nw l j k d\n\"\"\""
    },
    {
        "number": 3208,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('wl jkd') == \"Impossible\"\nassert solution('ex eoii jpxbmx cvz uxju sjzzcn jzz') == \"we will avenge our dead parrot arr\"\nassert solution('we will avenge our dead parrot arr') == \"we will avenge our dead parrot arr\"\nassert solution('wl jkd') == \"Impossible\"\n\"\"\"\n\n\"\"\"\nSolution Details\n\n\"\"\"\n"
    },
    {
        "number": 3208,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\"\nassert solution(\"ccwllsdsledclwievcviepogcqyhjbxqrkqrlldclxzqibmwfsmkblcbjbqkczmctfvepqotnmrjxqrjzqzmmkqrkqrjxqxlrjqzmqbrjxqrjzqzmctfvepqotnmrjxqrjzqzmmkqrjxqxlrjqzmqbrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjzqzmmkqrjxqrjz"
    },
    {
        "number": 3208,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('wl jkd') == 'Impossible'\nassert solution('ex eoii jpxbmx cvz uxju sjzzcn jzz') == 'we will avenge our dead parrot arr'\nassert solution('be') == 'we will avenge our dead parrot arr'\nassert solution('be bee') == 'we bee'\nassert solution('we bee') == 'we bee'\n"
    },
    {
        "number": 3208,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3208,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('ex eoii jpxbmx cvz uxju sjzzcn jzz') == 'we will avenge our dead parrot arr'\nassert solution('wl jkd') == 'Impossible'\n'''\n\nimport sys"
    },
    {
        "number": 3208,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('ex eoii jpxbmx cvz uxju sjzzcn jzz') == 'we will avenge our dead parrot arr'\nassert solution('wl jkd') == 'Impossible'\nassert solution('wl v') == 'Impossible'\nassert solution('wl a') == 'Impossible'\nassert solution('wl b') == 'Impossible'\n"
    },
    {
        "number": 3208,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"wl jkd\"\n) == \"Impossible\"\n\nassert solution(\n    \"we will avenge our dead parrot arr\"\n) == \"we will avenge our dead parrot arr\"\n\nassert solution(\n    \"ex eoii jpxbmx cvz uxju sjzzcn jzz\"\n) == \"we will avenge our dead parrot arr\"\n\nassert solution(\n    \"eac ocqnmyjzgc oqnqznqzymj oqnqz\"\n) == \"impossible\"\n\nassert solution(\n    \"klqbqqgvnk oqnqznqzymj oqnqz\"\n) == \"impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\"\n\"\"\"\nfrom collections import defaultdict, Counter"
    },
    {
        "number": 3209,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"Hamburg Bremen\") == \"68.3\"\nassert solution(\"Hamburg Amsterdam\") == \"IMPOSSIBLE\"\nassert solution(\"Bremen Bremen\") == \"0.0\"\nassert solution(\"Amsterdam Utrecht\") == \"IMPOSSIBLE\"\nassert solution(\"Rotterdam Rotterdam\") == \"0.0\"\n"
    },
    {
        "number": 3209,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''Hamburg Bremen\n3\nHamburg Bremen 15 68 10 5\nHamburg Bremen 46 55 50 60\nBremen Frankfurt 14 226 10 120'''\n) == '68.3'\nassert solution(\n'''Amsterdam Rotterdam\n1\nAmsterdam Utrecht 10 22 5 10'''\n) == 'IMPOSSIBLE'"
    },
    {
        "number": 3209,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''Hamburg Bremen\n3\nHamburg Bremen 15 68 10 5\nHamburg Bremen 46 55 50 60\nBremen Frankfurt 14 226 10 120''') == '68.3'\n\nassert solution(\n'''Amsterdam Rotterdam\n1\nAmsterdam Utrecht 10 22 5 10''') == 'IMPOSSIBLE'\n\nassert solution(\n'''Hamburg Amsterdem\n3\nHamburg Amsterdem 15 68 10 5\nHamburg Amsterdem 46 55 50 60\nAmsterdam Utrecht 14 226 10 120\nBremen Berlin 15 22 10 10''') == '68.3'\n\nassert solution(\n'''Hamburg Bremen\n3\nHamburg Bremen 15 68 10 5\nHamburg Bremen 46 55 50 60\nBremen Frankfurt 14 226 10 120''') == '68.3'\n\nassert solution(\n'''Amsterdam Rotterdam\n1\nAmsterdam Utrecht 10 22 5 10''') == 'IMPOSSIBLE'"
    },
    {
        "number": 3209,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''Hamburg Bremen''') == '68.3'\n'''\nHamburg Bremen\n3\nHamburg Bremen 15 68 10 5\nHamburg Bremen 46 55 50 60\nBremen Frankfurt 14 226 10 120\nassert solution('''Amsterdam Rotterdam''') == 'IMPOSSIBLE'\n'''\nAmsterdam Rotterdam\n1\nAmsterdam Utrecht 10 22 5 10\nassert solution('''Hamburg Bremen''') == '68.3'\n'''\nHamburg Bremen\n3\nHamburg Bremen 15 68 10 5\nHamburg Bremen 46 55 50 60\nBremen Frankfurt 14 226 10 120\nassert solution('''Amsterdam Rotterdam''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3209,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"Hamburg Bremen\") == \"68.3\"\nassert solution(\"Amsterdam Rotterdam\") == \"IMPOSSIBLE\"\nassert solution(\"Hamburg Bremen 15 68 10 5\") == \"68.3\"\nassert solution(\"Hamburg Bremen 46 55 50 60\") == \"68.3\"\nassert solution(\"Bremen Frankfurt 14 226 10 120\") == \"68.3\"\n\"\"\"\n\nimport itertools\nimport collections"
    },
    {
        "number": 3209,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(open(\"0.txt\", \"r\").readline()) == \"67.0\"\nassert solution(open(\"1.txt\", \"r\").readline()) == \"1.0\"\nassert solution(open(\"2.txt\", \"r\").readline()) == \"71.0\"\nassert solution(open(\"3.txt\", \"r\").readline()) == \"1.0\"\nassert solution(open(\"4.txt\", \"r\").readline()) == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3209,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''Hamburg Bremen\n3\nHamburg Bremen 15 68 10 5\nHamburg Bremen 46 55 50 60\nBremen Frankfurt 14 226 10 120\n'''\n) == '68.3'\n\nassert solution(\n'''Amsterdam Rotterdam\n1\nAmsterdam Utrecht 10 22 5 10\n'''\n) == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3209,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''Hamburg Bremen\n3\nHamburg Bremen 15 68 10 5\nHamburg Bremen 46 55 50 60\nBremen Frankfurt 14 226 10 120\n''') == '68.3'\nassert solution('''Hamburg Amsterdam\n1\nAmsterdam Utrecht 10 22 5 10\nSample Output 2:\nIMPOSSIBLE\n''') == 'IMPOSSIBLE'\nassert solution('''Hamburg Bremen\n3\nHamburg Bremen 15 68 10 5\nHamburg Bremen 46 55 50 60\nBremen Amsterdam 14 226 10 120\n''') == '68.3'\nassert solution('''Hamburg Bremen\n2\nHamburg Amsterdam 14 22 5 10\nHamburg Bremen 46 55 50 60\nSample Output 2:\n68.3\n''') == '68.3'\nassert solution('''Hamburg Bremen\n2\nHamburg Amsterdam 14 22 5 10\nBremen Amsterdam 14 22 5 10\nSample Output 2:\n68.3\n''') == '68.3'\n"
    },
    {
        "number": 3209,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3209,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"Hamburg Bremen\") == \"68.3\"\nassert solution(\"Amsterdam Utrecht\") == \"IMPOSSIBLE\"\nassert solution(\"Berlin Amsterdam\") == \"IMPOSSIBLE\"\nassert solution(\"Berlin Hamburg\") == \"IMPOSSIBLE\"\nassert solution(\"Amsterdam Berlin\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3210,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3210,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"2\") == \"4\"\nassert solution(\"11\") == \"4\"\nassert solution(\"111\") == \"5\"\nassert solution(\"1111111\") == \"6\"\n"
    },
    {
        "number": 3210,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == output\n"
    },
    {
        "number": 3210,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''2\n*.*\n|.|.'''\n) == 3\n\nassert solution(\n'''2\n*.*\n|.|'''\n) == 2\n\nassert solution(\n'''2\n*.*\n|.|'''\n) == 1\n\nassert solution(\n'''8\n*.*.*.*.*.*.\n|.|*|.|*|.|\n*.*.*.*.*.*.*\n|.|.|*|.|*|\n*.*.*.*.*.*.*\n|.|.|*|.|*|\n*.*.*.*.*.*.*'''\n) == 12\n\nassert solution(\n'''8\n*.*.*.*.*.*.\n|.|*|.|*|.|\n*.*.*.*.*.*.*\n|.|.|*|.|*|\n*.*.*.*.*.*.*\n|.|.|*|.|*|\n*.*.*.*.*.*.*'''\n) == 0"
    },
    {
        "number": 3210,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n3\n*-*.*\n|.|.|\n*.*-*\n|...|\n*.*.*\n\"\"\".strip()) == \"3\"\n\nassert solution(\n\"\"\"\n2\n*.*\n...\n*.*\n\"\"\".strip()) == \"4\"\n"
    },
    {
        "number": 3210,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3') == '3'\nassert solution('*-*.*') == '3'\nassert solution('|.|.|') == '3'\nassert solution('*.*-*.*') == '3'\nassert solution('...|') == '4'\n"
    },
    {
        "number": 3210,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n*-*.*\n|.|.|\n*.*-*\n|...|\n*.*.*''') == '3'\nassert solution('''2\n*.*\n...\n*.*\n''') == '4'\nassert solution('''2\n*.*\n*.*\n''') == '4'\nassert solution('''2\n...\n*.*\n''') == '4'\nassert solution('''3\n*.*.*\n|...|\n*.*.*\n''') == '8'\n"
    },
    {
        "number": 3210,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"3\n*-*.*\n|.|.|\n*.*-*\n|...|\n*.*.*\"\"\") == \"3\"\nassert solution(\"\"\"2\n*.*\n...\n*.*\n\"\"\") == \"4\"\nassert solution(\"\"\"4\n.|.*\n-.|.\n*..\n.|.\n\"\"\") == \"5\"\nassert solution(\"\"\"5\n.|.*\n-.|.\n*..\n.|.\n.|.\n\"\"\") == \"0\"\nassert solution(\"\"\"6\n.|.*\n-.|.\n*..\n.|.\n.|.\n*.*\n\"\"\") == \"10\"\n"
    },
    {
        "number": 3210,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3210,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4') == '2'\nassert solution('5') == '3'\nassert solution('6') == '4'\nassert solution('7') == '5'\nassert solution('8') == '6'\n"
    },
    {
        "number": 3211,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1111\n''') == \"impossible\"\nassert solution('''8\n12210020\n''') == \"4\"\nassert solution('''8\n12210020\n10000000011\n''') == \"impossible\"\nassert solution('''8\n12210020\n10000000011\n10000000011\n''') == \"4\"\nassert solution('''8\n12210020\n10000000011\n10000000011\n10000000011\n''') == \"impossible\"\n"
    },
    {
        "number": 3211,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4\") == \"impossible\"\nassert solution(\"2\") == \"impossible\"\nassert solution(\"2124\") == \"impossible\"\nassert solution(\"12210020\") == \"4\"\nassert solution(\"12210023\") == \"impossible\"\n"
    },
    {
        "number": 3211,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"impossible\"\nassert solution(\"1\") == \"impossible\"\nassert solution(\"1 2 1\") == \"impossible\"\nassert solution(\"1110\") == \"impossible\"\nassert solution(\"100110110\") == \"4\"\n"
    },
    {
        "number": 3211,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1111\\n\") == \"impossible\"\nassert solution(\"8\\n12210020\\n\") == \"4\"\nassert solution(\"2\\n1100110\\n\") == \"impossible\"\nassert solution(\"3\\n1001110\\n\") == \"impossible\"\nassert solution(\"1\\n11110\\n\") == \"impossible\"\n"
    },
    {
        "number": 3211,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4') == 'impossible'\nassert solution('1') == '0'\nassert solution('12210020') == '4'\nassert solution('1111') == 'impossible'\nassert solution('1001010101010101010') == 'impossible'\n"
    },
    {
        "number": 3211,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('123') == 'impossible'\nassert solution('1120') == 'impossible'\nassert solution('111011110') == 'impossible'\nassert solution('00001') == '4'\nassert solution('01') == '1'\n"
    },
    {
        "number": 3211,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('12210020\\n22110012') == '4'\nassert solution('111211\\n222112') == 'impossible'\nassert solution('12210020\\n22110011') == '1'\nassert solution('123210020\\n22110022') == 'impossible'\nassert solution('111211\\n222112') == 'impossible'\n"
    },
    {
        "number": 3211,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n8\n12210020\n\"\"\") == \"impossible\"\n\nassert solution(\n\"\"\"\n8\n0111\n\"\"\") == \"impossible\"\n\nassert solution(\n\"\"\"\n8\n111221012\n\"\"\") == \"impossible\"\n\nassert solution(\n\"\"\"\n10\n011011011\n\"\"\") == \"4\"\n\nassert solution(\n\"\"\"\n10\n001111011\n\"\"\") == \"impossible\""
    },
    {
        "number": 3211,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''8''') == '''4'''\nassert solution('''12210020''') == '''4'''\nassert solution('''1111''') == '''impossible'''\nassert solution('''10101''') == '''impossible'''\nassert solution('''1010''') == '''impossible'''\n"
    },
    {
        "number": 3211,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\n\nprint(solution(input()))\n"
    },
    {
        "number": 3212,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 3212,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''0 0 999\n1000 1000 200\n'''\n) == 'Bill will be bitten.\\n'\n\nassert solution(\n'''3\n500 500 499\n0 0 999\n1000 1000 200\n'''\n) == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n'\n\nassert solution(\n'''4\n250 250 300\n750 250 300\n250 750 300\n750 750 300\n'''\n) == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n'\n"
    },
    {
        "number": 3212,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 3212,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"0 3 0\") == \"\"\nassert solution(\"500 500 499\") == \"\"\n"
    },
    {
        "number": 3212,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3212,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('1') == 'Bill will be bitten.'\nassert solution('10001') == '(0.00, 1000.00)'\nassert solution('100011000101') == '(0.0, 1000.0)'\nassert solution('10001100010110001') == '(0.0, 1000.0)'\n"
    },
    {
        "number": 3212,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''3\n500 500 499\n0 0 999\n1000 1000 200\n''') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\nassert solution(\n'''4\n250 250 300\n750 250 300\n250 750 300\n750 750 300\nSample Output 2:\nBill will be bitten.\n''') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\n\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 3212,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n500 500 499') == '(0.00, 1000.00)'\nassert solution('3\\n0 0 999\\n1000 1000 200') == '(0.00, 1000.00)'\nassert solution('3\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300') == '(0.00, 1000.00)'\nassert solution('5\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300\\n250 750 300') == '(0.00, 1000.00)'\nassert solution('5\\n0 0 999\\n1000 1000 200\\n1000 1000 300\\n1000 1000 400\\n1000 1000 500') == '(0.00, 1000.00)'\n"
    },
    {
        "number": 3212,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0 0 999\n1000 1000 200\n250 250 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300''') == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\"\n\nassert solution('''0 0 999\n1000 1000 200\n500 500 499\n0 0 999\n1000 1000 200\n250 250 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300''') == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\"\n\nassert solution('''0 0 999\n1000 1000 200\n250 250 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300''') == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\"\n'''"
    },
    {
        "number": 3212,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'Bill will be bitten.'\n\n'''\n\nimport sys\nfrom math import sqrt"
    },
    {
        "number": 3213,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(test_input) == test_output\nprint(solution(sys.stdin.readline()))\n"
    },
    {
        "number": 3213,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"8 3\\n++xx+x++\\n\") == \"++xx+o++\"\nassert solution(\"8 3\\nxxxxxxxx\\n\") == \"xxoooooo\"\nassert solution(\"8 1\\n++xx+x++\\n\") == \"++xx+o++\"\nassert solution(\"8 1\\nxxxxxxxx\\n\") == \"xxoooooo\"\nassert solution(\"8 3\\n++xx+x++\\n8 5\\n++ox+x++\\n\") == \"++xx+ox+o++\"\n"
    },
    {
        "number": 3213,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3213,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 3213,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n'''"
    },
    {
        "number": 3213,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 3') == '++xx+o++'\nassert solution('8 4') == '++x+x++'\nassert solution('1 1') == '+'\n\"\"\""
    },
    {
        "number": 3213,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2\", \"++xx+x++\") == \"++xx+o++\"\nassert solution(\"1 3\", \"++xx+x++\") == \"++xx+x++\"\nassert solution(\"3 2\", \"--xxx--\") == \"xxxxx\"\nassert solution(\"7 5\", \"xoxoxoxoxo\") == \"oxxxxxoxoxoxoxoxo\"\nassert solution(\"8 5\", \"oxoxoxoxoxo\") == \"oxoxoxoxoxoxoxoxoxoxoxoxoxooxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxox"
    },
    {
        "number": 3213,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin[:0]\n\"\"\"\n"
    },
    {
        "number": 3213,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8 3\\n++xx+x++') == '++xx+o++'\nassert solution('8 3\\nxxxxxxxx') == 'xxoooooo'\nassert solution('8 3\\n--xxxx--') == '--oooo--'\nassert solution('8 3\\n--xxxx--') == '--oooo--'\nassert solution('8 3\\n++xx++xx') == '++xx+o++xx'\n"
    },
    {
        "number": 3213,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('++xx+x++') == '++xx+o++'\nassert solution('xxxxxxxx') == 'xxoooooo'\n'''"
    },
    {
        "number": 3214,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"\\r\") == \"\"\nassert solution(\"\\n\\r\") == \"\"\nassert solution(\"\\n\\n\") == \"\"\n"
    },
    {
        "number": 3214,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\nLost is Close to Lose\n\"\"\") == \"\"\"\nclose: lose\nhe: the\nin: inc is\ninc: in\nis: in\nlose: close lost\nlost: lose\nthe: he\n\"\"\"\n\nassert solution(\"\"\"\nThe fox said, \"When?\"\n\"Not till 12 o'clock\", replied the hen.\n\"That clock is stopped, it will never strike.\", he said.\n\"\"\") == \"\"\"\nclock: oclock\nhe: hen the\nhen: he when\nis: it\nit: is\noclock: clock\nthe: he\ntill: will\nwhen: hen\nwill: till\n\"\"\"\n\nassert solution(\"\"\"\nWickedness is a dark place. You can never find it.\nAn explorer must have gone there, but he is still trying to find the way home.\nSomehow he came back home, and found this place the way it is.\nThat place is probably the right place to go for him.\nA strange feeling is standing in his gut, and you are guessing what it is.\nThe Pontefracts are in their hands and they have a special dish in their mouths.\nThey are also your people. You must not leave them alone, or lose them.\n\nThis is the last day of your vacation. It is also your last day on earth.\nThere is nothing left to do or have left to do.\nYou have to go home.\n***\n\"\"\") == \"\"\"\npontefracts: dish\npontefracts: people\npontefracts: leave\ndish: pontefracts\npeople: pontefracts\nleave: dish people\n\"\"\"\n\nassert solution(\"\"\"\nA pile of boxes piled up on top of each other.\nThere is a box at the bottom that you cannot get to.\nOnly one can go in, and that is the box at the top.\nIn the box, there are several white flowers and several blue ones.\n\nIn order to reach the box at the top, you need to take the white flowers\ninto the top box.\nIn order to reach the box at the top, you need to take the blue flowers\ninto the top box.\nIn order to reach the box at the top, you need to take the white flowers\ninto the top box.\nIn order to reach the box at the top, you need to take the blue flowers\ninto the top box.\nIn order to reach the box at the top, you need to take the white flowers\ninto the top box.\n\nIn order to reach the box at the top, you need to take the blue flowers\ninto the top box.\nIn order to reach the box at the top, you need to take the white flowers\ninto the top box.\nIn order to reach the box at the top, you need to take the blue flowers\ninto the top box.\nIn order to reach the box at the top, you need to take the white flowers\ninto the top box.\nIn order to reach the box at the top, you need to take the blue flowers\ninto the top box.\nIn order to reach the box at the top, you need to take the white flowers\ninto the top box.\n\nIn order to reach the box at the top, you need to take the blue flowers\ninto the top box.\nIn order to reach the box at the top, you need to take the white flowers\ninto the top box.\nIn order to reach the box at the top, you need to take the blue flowers\ninto the top box.\nIn order to reach the box at the top, you need to take the white flowers\ninto the top box.\nIn order to reach the box at the top, you need to take the blue flowers\ninto the top box.\nIn order to reach the box at the top, you need to take the white flowers\ninto the top box.\nIn order to reach the box at the top, you need to take the blue flowers\ninto the top box.\nIn order to reach the box at the top, you need to take the white flowers\ninto the top box.\nIn order to reach the box at the top, you need to take the blue flowers\ninto the top box.\nIn order to reach the box at the top, you need to take the white flowers\ninto the top box.\n\nIn order to reach the box at the top, you need to take the blue flowers\ninto the top box.\nIn order to reach the box at the top, you need to take the white flowers\ninto the top box.\nIn order to reach the box at the top, you need to take the blue flowers\ninto the top box.\nIn order to reach the box at the top, you need to take the white flowers\ninto the top box.\nIn order to reach the box at the top, you need to take the blue flowers\ninto the top box.\nIn order to reach the box at the top, you need to take the white flowers\ninto the top box.\nIn order to reach the box at the top, you need to take the blue flowers\ninto the top box.\nIn order to reach the box at the top, you need to take the white flowers\ninto the top box.\nIn order to reach the box at the top, you need to take the blue flowers\ninto the top box.\nIn order to reach the box at the top, you need to take the white flowers\ninto the top box.\nIn order to reach the box at the top, you need to take the blue flowers\ninto the top box.\nIn order to reach the box at the top, you need to take the white flowers\ninto the top box.\nIn order to reach the box at the top, you need to take the blue flowers\ninto the top box.\nIn order to reach the box at the top, you need to take the white flowers\ninto the top box.\nIn order to reach the box at the top, you need"
    },
    {
        "number": 3214,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('lost is close to lose') == 'close: lose\\nhe: he\\nin: inc is\\ninc: in\\nis: in\\nlose: close lost\\nthe: he\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str:pass\\n')\nassert solution('The fox said, \"When?\"') == 'clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\nthe: he\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str:pass\\n')\nassert solution('The fox said, \"When?\"') == 'clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\nthe: he\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str:pass\\n')\nassert solution('The fox said, \"When?\"') == 'clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\nthe: he\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str:pass\\n')\nassert solution('The fox said, \"When?\"') == 'clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\nthe: he\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str:pass\\n')\n"
    },
    {
        "number": 3214,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"This is an example.\") == \"This is an example.\"\nassert solution(\"The fox said, \\\"When?\\\"\") == \"When? he said, \\\"When?\\\"\"\nassert solution(\"The fox said, \\\"When?\\\" The clock is stopped, it will never strike.\\\"\") == \"When? he said, \\\"When?\\\" The clock is stopped, it will never strike.\\\"\"\nprint(\"Passed. (Add more tests to be more sure!)\")\n\"\"\"\n"
    },
    {
        "number": 3214,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"The fox said, \"When?\"\n\"Not till 12 o'clock\", replied the hen.\n\"That clock is stopped, it will never strike.\", he said.\n\"\"\") == \"\"\"clock: oclock\nhe: hen the\nhen: he when\nis: it\nit: is\noclock: clock\nthe: he\ntill: will\nwhen: hen\nwill: till\n"
    },
    {
        "number": 3214,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"Lost is Close to Lose\") == \"close: lose\\nhe: the\\nin: inc is\\ninc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\\nwhen: hen\\nwill: till\\n\"\nassert solution(\"The fox said, \\\"When?\") == \"clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nthe: he\\nwhen: hen\\nwill: till\\n\"\nassert solution(\"The fox said, \\\"When?\") == \"clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nthe: he\\nwhen: hen\\nwill: till\\n\"\nassert solution(\"The fox said, \\\"When?\") == \"clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nthe: he\\nwhen: hen\\nwill: till\\n\"\n"
    },
    {
        "number": 3214,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\nThe fox said, \"When?\"\n\"Not till 12 o'clock\", replied the hen.\n\"That clock is stopped, it will never strike.\", he said.\n''') == '''\nclock: oclock\nhe: hen the\nhen: he when\nis: it\nit: is\noclock: clock\nthe: he\ntill: will\nwhen: hen\nwill: till\n"
    },
    {
        "number": 3214,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\nLost is Close to Lose\n''') == 'close: lose\\nhe: the\\nin: inc is\\ninc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\\nclock: oclock\\nhen: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str:\n    pass\n\nassert solution('''\nThe fox said, \"When?\"\n\"Not till 12 o'clock\", replied the hen.\n\"That clock is stopped, it will never strike.\", he said.\n''') == 'clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str:\n    pass\n''') == 'clock: oclock\\nhe: hen the\\nhen: he when\\ni: it\\nit: is\\noclock: clock\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str:\n    pass\n\nassert solution('''\nLost is Close to Lose\n''') == 'close: lose\\nhe: the\\nin: inc is\\ninc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\\nclock: oclock\\nhen: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str:\n    pass\n''') == 'clock: oclock\\nhe: hen the\\nhen: he when\\ni: it\\nit: is\\noclock: clock\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str:\n    pass\n\nassert solution('''\nThe fox said, \"When?\"\n\"Not till 12 o'clock\", replied the hen.\n\"That clock is stopped, it will never strike.\", he said.\n''') == 'clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str:\n    pass\n''') == 'clock: oclock\\nhe: hen the\\nhen: he when\\ni: it\\nit: is\\noclock: clock\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str:\n    pass\n\nassert solution('''\nLost is Close to Lose\n''') == 'close: lose\\nhe: the\\nin: inc is\\ninc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\\nclock: oclock\\nhen: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str:\n    pass\n''') == 'clock: oclock\\nhe: hen the\\nhen: he when\\ni: it\\nit: is\\noclock: clock\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str:\n    pass"
    },
    {
        "number": 3214,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('sample') == 'clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\nthe: he\\nwill: till\\nwhen: hen\\ndef solution(stdin: str) -> str:\\npass'\nassert solution('Lost is Close to Lose\\nBetter Documents Inc. wants to add Typo Checking in to the\\nnext generation of word processors.\\n***\\n') == 'close: lose\\ne: he\\nin: inc is\\nlose: close lost\\nlost: lose\\nthe: he\\nlose: close lost\\nlost: close\\nthe: he\\nhe: the\\nhe: the\\ninc: in\\nit: in\\nhe: he\\nhe: he\\noclock: oclock\\nhe: hen the\\nhen: hen when\\nis: it\\nit: is\\nhe: he\\ntill: will\\nwhen: hen\\ntill: will\\ndef solution(stdin: str) -> str:\\npass'\nprint('the test is done! Go Check it!')\nprint(solution(input()))\n"
    },
    {
        "number": 3214,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('sample.txt') == 'lel'\nassert solution('test.txt') == 'lel'\nassert solution('the quick brown fox jumped over the lazy dog') == 'lel'\nassert solution('The fox said, \"When?\"\\n\"Not till 12 o'clock\", replied the hen.\\n\"That clock is stopped, it will never strike.\", he said.\\n'"
    },
    {
        "number": 3215,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    '1\\n'\n    '3 8 1 9 4 5 2 7 10 6\\n'\n) == '1'\n\nassert solution(\n    '1\\n'\n    '3 8 1 9 4 5 2 7 10 6\\n'\n) == '2'\n\nassert solution(\n    '1\\n'\n    '3 8 1 9 4 5 2 7 10 6\\n'\n) == '3'\n\nassert solution(\n    '1\\n'\n    '3 8 1 9 4 5 2 7 10 6\\n'\n) == '4'\n\nassert solution(\n    '1\\n'\n    '3 8 1 9 4 5 2 7 10 6\\n'\n) == '5'"
    },
    {
        "number": 3215,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\n-----Solution 1-----\nThe problem statement is simple, but in the real world we would not be allowed to build a deck of cards with a million cards. Instead, we would be given a deck of cards and a number of shuffles to make to get to the desired ordering. To make shuffles, we would pick two cards, and swap them into a new deck. Then we would do the same with the remaining cards and so on. At each stage of the shuffling, we would see if we could make the ordering we want.\n\nSince we would be allowed to build the deck of cards with a million cards, the maximum number of shuffles we are allowed to make is actually at most 1000. So we simply add all of the 1,000,000 shuffles to a list and sort it."
    },
    {
        "number": 3215,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3215,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n1 2 3 4') == '1'\nassert solution('5\\n1 2 3 4 5') == '2'\nassert solution('3\\n1 2 3') == '1'\nassert solution('7\\n1 2 3 4 5 6 7') == '6'"
    },
    {
        "number": 3215,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"10\") == \"\"\nassert solution(\"10\") == \"\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"\"\n"
    },
    {
        "number": 3215,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3215,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '2'\nassert solution('1\\n3') == '1'\nassert solution('1\\n4') == '1'\nassert solution('1\\n5') == '1'\n"
    },
    {
        "number": 3215,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '1'\n"
    },
    {
        "number": 3215,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n1') == '0'\nassert solution('2\\n1 2\\n') == '1'\nassert solution('5\\n1 2 3 4 5\\n') == '5'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10\\n') == '1'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10\\n') == '1'\n"
    },
    {
        "number": 3215,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2 3 4 5 6 7 8 9 10') == '1\\n'\nassert solution('10\\n1 2 7 3 8 9 4 5 10 6') == '1\\n'\nassert solution('10\\n3 8 1 9 4 5 2 7 10 6') == '1\\n'\nassert solution('10\\n3 8 1 9 4 5 2 7 10 6') == '2\\n'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '1\\n'\n"
    },
    {
        "number": 3216,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0.142857 6') == '1/7'\nassert solution('1.6 1') == '5/3'\nassert solution('1.2 2') == '3/5'\nassert solution('2 1') == '2/1'\nassert solution('3 5') == '25/1'\n"
    },
    {
        "number": 3216,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0.142857 0 6') == '1/7'\nassert solution('1.6 1') == '5/3'\nassert solution('1.64 0') == '5/3'\nassert solution('0.142857 6') == '1/7'\nassert solution('1.6 1') == '5/3'\n"
    },
    {
        "number": 3216,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0.142857 6') == '1/7'\nassert solution('1.6 1') == '5/3'\nprint('Testcases passed')\n"
    },
    {
        "number": 3216,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0.142857 6') == '1/7'\nassert solution('1.6 1') == '5/3'\n\"\"\"\n"
    },
    {
        "number": 3216,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0.142857 6') == '1/7'\nassert solution('1.6 1') == '5/3'\nassert solution('0.142857 0') == '0/1'\nassert solution('1.6 0') == '5/3'\nassert solution('1.6 7') == '5/3'\n"
    },
    {
        "number": 3216,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0.142857 6') == '1/7'\nassert solution('1.6 1') == '5/3'\nprint(solution('0.142857 6'))\nprint(solution('1.6 1'))"
    },
    {
        "number": 3216,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0.142857 6') == '1/7'\nassert solution('1.6 1') == '5/3'\nassert solution('0.5 2') == '0/1'\nassert solution('0.5 0') == '1/1'\nassert solution('0.5 0') == '1/1'\n"
    },
    {
        "number": 3216,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(s = \"0.142857 6\") == \"1/7\"\nassert solution(s = \"1.6 1\") == \"5/3\"\nassert solution(s = \"0.123 1\") == \"2/3\"\nassert solution(s = \"0.123 1\") == \"2/3\"\nassert solution(s = \"1.6 1\") == \"5/3\"\n"
    },
    {
        "number": 3216,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0.142857 6') == '1/7'\nassert solution('1.6 1') == '5/3'\nprint(\"Complete! Go Check unit tests.\")\n"
    },
    {
        "number": 3216,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"0.142857 6\") == \"1/7\"\nassert solution(\n    \"1.6 1\") == \"5/3\"\nassert solution(\n    \"1.142857\") == \"1/7\"\nassert solution(\n    \"1.142857 1\") == \"5/3\"\nassert solution(\n    \"1.142857 1 1\") == \"5/3\"\n"
    },
    {
        "number": 3217,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''0 0 0\n0 0 1\n''') == '6'\nassert solution(\n'''2\n0 0 0\n0 0 1\n''') == '10'\nassert solution(\n'''3\n0 0 0\n0 0 1\n0 0 2\n''') == '9'\nassert solution(\n'''4\n0 0 0\n0 0 1\n0 0 2\n0 0 3\n''') == '10'\nassert solution(\n'''5\n0 0 0\n0 0 1\n0 0 2\n0 0 3\n0 0 4\n''') == '14'"
    },
    {
        "number": 3217,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 0 0') == '6'\nassert solution('0 0 1') == '10'\nassert solution('1 0 0') == '6'\nassert solution('1 0 1') == '10'\nassert solution('2 0 0') == '6'\n"
    },
    {
        "number": 3217,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == expected\nprint(expected)\n"
    },
    {
        "number": 3217,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1\n0 0 0\n0 0 1''') == '6'\nassert solution('''2\n0 0 0\n0 0 1\n0 0 2''') == '10'\nassert solution('''5\n0 0 0\n0 0 1\n0 0 2\n0 0 3\n0 0 4''') == '5'\nassert solution('''6\n0 0 0\n0 0 1\n0 0 2\n0 0 3\n0 0 4\n0 0 5''') == '6'\nassert solution('''12\n2 5 2\n10 5 2\n12 3 2\n0 0 2\n0 0 3\n0 0 4\n0 0 5\n0 0 6\n0 0 7\n0 0 8\n0 0 9\n0 0 10\n0 0 11''') == '3'\n"
    },
    {
        "number": 3217,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n0 0 0\\n0 0 1\\n') == '6'\nassert solution('2\\n0 0 0\\n0 0 1\\n') == '10'\nassert solution('3\\n0 0 0\\n0 0 1\\n0 0 2\\n') == '15'\nassert solution('4\\n0 0 0\\n0 0 1\\n0 0 2\\n0 0 3\\n') == '24'\nassert solution('5\\n0 0 0\\n0 0 1\\n0 0 2\\n0 0 3\\n0 0 4\\n') == '36'\n"
    },
    {
        "number": 3217,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0\\n0\\n0\") == \"6\"\nassert solution(\"1\\n0\\n0\") == \"10\"\nassert solution(\"2\\n0\\n0\\n0\") == \"10\"\nassert solution(\"1\\n0\\n0\\n0\") == \"10\"\nassert solution(\"2\\n0\\n0\\n0\") == \"10\"\n"
    },
    {
        "number": 3217,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1''') == '6'\nassert solution('''2''') == '10'\nassert solution('''3''') == '9'\nassert solution('''4''') == '16'\nassert solution('''10''') == '45'\n"
    },
    {
        "number": 3217,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 0 0\\n0 0 1') == '6'\nassert solution('1\\n0 0 0') == '6'\nassert solution('1\\n0 0 1') == '10'\nassert solution('2\\n0 0 0\\n0 0 1') == '10'\nassert solution('2\\n0 0 0\\n0 0 1') == '10'\n"
    },
    {
        "number": 3217,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n\") == \"6\"\nassert solution(\"2\\n0 0 0\\n0 0 1\\n\") == \"10\"\nassert solution(\"1\\n0 0 0\\n\") == \"6\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3217,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n0 0 0\\n0 0 1\") == \"6\"\nassert solution(\"2\\n0 0 0\\n0 0 1\") == \"10\"\nassert solution(\"2\\n0 0 1\\n0 0 1\") == \"4\"\nassert solution(\"1\\n0 0 0\\n0 0 1\") == \"6\"\nassert solution(\"1\\n0 0 0\\n0 0 1\") == \"6\"\n"
    },
    {
        "number": 3218,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n"
    },
    {
        "number": 3218,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n3\n-1 2 -1\n2 2\n1 -1 1\n\"\"\"\n    ) == \"1\"\n\nassert solution(\n\"\"\"\n7\n-1 4 5 1 0 -1 -1\n-1 3 2 0 0 1\n-1 4 -1 1 0 -1 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n\"\"\"\n    ) == \"1\"\n\nassert solution(\n\"\"\"\n7\n-1 4 5 1 0 -1 -1\n-1 3 2 0 0 1\n-1 4 -1 1 0 -1 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n\"\"\"\n    ) == \"0\"\n\nassert solution(\n\"\"\"\n6\n-1 4 5 1 0 -1 -1\n-1 3 2 0 0 1\n-1 4 -1 1 0 -1 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n\"\"\"\n    ) == \"0\"\n\nassert solution(\n\"\"\"\n5\n-1 4 5 1 0 -1 -1\n-1 3 2 0 0 1\n-1 4 -1 1 0 -1 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n\"\"\"\n    ) == \"0\""
    },
    {
        "number": 3218,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n-1 4 2 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1') == '1'\nassert solution('5\\n-1 4 2 -1\\n2 2\\n1 -1 1\\n0 0\\n0 0\\n0 0\\n0 0') == '0'\nassert solution('8\\n-1 4 2 -1\\n2 2\\n1 -1 1\\n0 0\\n0 0\\n0 0\\n0 0') == '0'\nassert solution('1\\n-1') == '0'\nassert solution('1\\n-1 2') == '0'\n"
    },
    {
        "number": 3218,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3''') == ''\nassert solution('''7''') == ''\nassert solution('''5''') == ''\nassert solution('''6''') == ''\nassert solution('''12''') == ''\n"
    },
    {
        "number": 3218,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n' * 4 + '-1' * 16 + '2' * 16) == '1'\nassert solution('1\\n' * 4 + '2' * 16 + '1' * 16) == '2'\nassert solution('2\\n' * 8 + '1' * 16 + '1' * 16) == '2'\nassert solution('1\\n' * 8 + '2' * 16 + '1' * 16) == '2'\nassert solution('2\\n' * 10 + '1' * 16 + '2' * 16) == '1'\n"
    },
    {
        "number": 3218,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n    3\n    -1 2 -1\n    2 2\n    1 -1 1\n''') == '1'\n\nassert solution('''\n    5\n    -1 4 5 1 0 -1 -1\n    -1 3 2 0 0 1\n    -1 4 -1 1 0 -1 -1\n    1 3 4 2 2 4\n    0 2 3 -1 4 4 2\n    -1 4 4 3 3 2\n    1 -1 -1 -1 4 2 -1\n''') == '2'\n\nassert solution('''\n    7\n    -1 4 5 1 0 -1 -1\n    -1 3 2 0 0 1\n    -1 4 -1 1 0 -1 -1\n    1 3 4 2 2 4\n    0 2 3 -1 4 4 2\n    -1 4 4 3 3 2\n    1 -1 -1 -1 4 2 -1\n''') == '1'\n"
    },
    {
        "number": 3218,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n-1 2 -1') == '1'\nassert solution('3\\n-1 2 -1') == '0'\nassert solution('7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1') == '1'\nassert solution('1\\n-1\\n1') == '1'\nassert solution('7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1') == '1'\n"
    },
    {
        "number": 3218,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\") == \"1\\n\"\nassert solution(\"7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\\n1\") == \"1\\n\"\nassert solution(\"9\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\\n1\\n2 3 4 5 6 7 8 9\") == \"0\\n\"\nassert solution(\"9\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\\n1\\n1 2 3 4 5 6 7 8 9\") == \"1\\n\"\nassert solution(\"9\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\\n1\\n2 3 4 5 6 7 8 9\") == \"1\\n\"\n"
    },
    {
        "number": 3218,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n-1 1\\n2 2\\n1 -1 1') == '1'\nassert solution('7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1') == '1'\nassert solution('3\\n-1 4 -1\\n2 2\\n1 -1 1') == '1'\nassert solution('7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1') == '2'\n"
    },
    {
        "number": 3218,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n-1 1\\n1 1') == '1'\nassert solution('1\\n-1 -1\\n1 1') == '1'\nassert solution('1\\n-1 1\\n1 1') == '1'\nassert solution('1\\n-1 -1\\n-1 1') == '0'\nassert solution('1\\n-1 -1\\n-1 -1') == '0'\n"
    },
    {
        "number": 3219,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(1001) == 3\nassert solution(1111) == 1\nassert solution(1) == 1\nassert solution(0) == 0\nassert solution(2) == 1\n"
    },
    {
        "number": 3219,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == None\nassert solution('0') == None\nassert solution('1') == None\nassert solution('1001') == None\nassert solution('101') == 2\n"
    },
    {
        "number": 3219,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1111') == 1\nassert solution('101') == 1\nassert solution('1') == 1\nassert solution('00') == 1\nassert solution('000') == 1\n"
    },
    {
        "number": 3219,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('11111') == '2'\nassert solution('101') == '2'\n"
    },
    {
        "number": 3219,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1') == 0\nassert solution('101') == 0\nassert solution('00') == 0\nassert solution('11') == 1\nassert solution('10') == 2\n"
    },
    {
        "number": 3219,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"001\") == 1\nassert solution(\"101\") == 2\nassert solution(\"1110\") == 4\nassert solution(\"1111\") == 5\nassert solution(\"10001\") == 6\n"
    },
    {
        "number": 3219,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1001\") == \"3\"\nassert solution(\"1111\") == \"1\"\nassert solution(\"10101\") == \"5\"\nassert solution(\"00111\") == \"8\"\nassert solution(\"1110\") == \"10\"\n"
    },
    {
        "number": 3219,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1001\") == 3\nassert solution(\"1111\") == 1\nassert solution(\"101\") == 2\nassert solution(\"111\") == 3\nassert solution(\"10\") == 2\n"
    },
    {
        "number": 3219,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1111') == 1\nassert solution('1010') == 1\nassert solution('101') == 2\nassert solution('01001') == 3\nassert solution('010010000') == 4\n"
    },
    {
        "number": 3219,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1001\") == 3\nassert solution(\"0\") == 0\nassert solution(\"1111\") == 1\nassert solution(\"1111\") == 1\nassert solution(\"011\") == 1\n"
    },
    {
        "number": 3220,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"0 0 1 0 1\") == \"\"\nassert solution(\"0 0 0 1 1\") == \"\"\nassert solution(\"1 0 1 1 1\") == \"\"\n"
    },
    {
        "number": 3220,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n1 1 1 2 2') == 'LLL'\nassert solution('5\\n1 2 2 1 2 1') == 'LLRLR'\nassert solution('1\\n1') == 'no dance'\nassert solution('2\\n2') == 'no dance'\nassert solution('3\\n1 2 1') == 'no dance'\n"
    },
    {
        "number": 3220,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5\") == \"LLLRLR\"\nassert solution(\"4\") == \"LLLRLR\"\nassert solution(\"3\") == \"LLL\"\nassert solution(\"1\") == \"L\"\n"
    },
    {
        "number": 3220,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('123') == 'L'\nassert solution('123') == 'L'\nassert solution('12345') == 'LLRLRL'\nassert solution('12345') == 'LLRLRL'\nassert solution('1234') == 'LLR'\n"
    },
    {
        "number": 3220,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n1 2 2 1 2') == 'LLRLR'\nassert solution('5\\n2 1 2 1 2') == 'RRLLRR'\nassert solution('5\\n3 1 3 1 3') == 'RRRRRR'\nassert solution('5\\n4 1 4 1 4') == 'LLLLRR'\nassert solution('5\\n5 1 5 1 5') == 'LLRRLL'\n"
    },
    {
        "number": 3220,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n3\\n5\\n') == 'LLL'\nassert solution('2\\n3\\n5\\n') == 'LLR'\nassert solution('3\\n3\\n5\\n') == 'LLL'\nassert solution('4\\n3\\n5\\n') == 'LLRR'\nassert solution('5\\n3\\n5\\n') == 'LLRR'\n"
    },
    {
        "number": 3220,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == 'L'\nassert solution('2') == 'LL'\nassert solution('3') == 'LLL'\nassert solution('4') == 'LLR'\nassert solution('5') == 'LLRR'\n"
    },
    {
        "number": 3220,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    \"3\"\n    \"1 1 1\"\n) == \"LLL\"\nassert solution(\n    \"5\"\n    \"1 2 2 1 2\"\n) == \"LLRLR\"\n"
    },
    {
        "number": 3220,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n1 1 1''') == 'LLL'\nassert solution('''5\n1 2 2 1 2''') == 'LLRLR'\nassert solution('''100\n10 9 9 8 8 9 9 10 9 8 10 9 8 9 8 10''') == 'RL'\n"
    },
    {
        "number": 3220,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input_data) == solution(input_data_2)"
    },
    {
        "number": 3221,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"7 7 10\n1 2 1000000\n2 3 2000000\n3 4 3000000\n4 5 4000000\n5 6 5000000\n6 7 6000000\n7 1 7000000\"\"\") == \"Poor girl\"\nassert solution(\n\"\"\"5 2 5\n1 4 5000000\n2 5 4000000\n3 4 5000000\n4 5 1000000\n5 2 1000000\"\"\") == \"4000000000000\"\nassert solution(\n\"\"\"9 9 10\n1 2 1000000\n2 3 1000000\n3 4 3000000\n4 5 4000000\n5 6 5000000\n6 7 6000000\n7 8 7000000\n8 9 6000000\"\"\") == \"Poor girl\"\nassert solution(\n\"\"\"8 4 2\n1 7 5000000\n2 6 3000000\n3 6 100000\n4 7 1000000\n5 6 2\n6 7 1000000\n7 8 1000000\n8 9 1000000\"\"\") == \"Poor girl\"\nassert solution(\n\"\"\"8 5 3\n1 7 5000000\n2 6 3000000\n3 6 100000\n4 7 1000000\n5 6 2\n6 7 1000000\n7 8 1000000\n8 9 1000000\"\"\") == \"Poor girl\"\n"
    },
    {
        "number": 3221,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 1000000') == 'Poor girl'\nassert solution('1 2 3000000') == 'Poor girl'\nassert solution('1 3 1000000') == 'Poor girl'\nassert solution('1 3 5000000') == 'Poor girl'\nassert solution('1 3 3000000') == 'Poor girl'\n"
    },
    {
        "number": 3221,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''7 7 10\n1 2 1000000\n2 3 2000000\n3 4 3000000\n4 5 4000000\n5 6 5000000\n6 7 6000000\n7 1 7000000''') == '49000000000070'\nassert solution(\n'''6 6 7\n1 3 1000000\n3 5 3000000\n5 1 5000000\n2 4 2000000\n4 6 4000000\n6 2 6000000''') == '25000000000021'\nassert solution(\n'''5 4 3\n1 3 9\n1 4 7\n2 5 6\n2 4 2\n3 5 4\n3 4 3\n4 5 5\n4 3 2\n4 2 1''') == '100'\nassert solution(\n'''3 2 1\n1 2 2\n2 3 3''') == 'Poor girl'\nassert solution(\n'''7 7 10\n1 2 3\n2 3 3\n3 4 3\n4 5 4\n5 6 5\n6 7 6\n7 1 7''') == '49000000000070'\n"
    },
    {
        "number": 3221,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(open(\"test_big.txt\").read()) == \"Poor girl\"\n\"\"\"\n\nfrom sys import stdin, stdout\nfrom math import log2, ceil"
    },
    {
        "number": 3221,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7 7 10\n1 2 1000000\n2 3 2000000\n3 4 3000000\n4 5 4000000\n5 6 5000000\n6 7 6000000\n7 1 7000000''') == '49000000000070'\nassert solution('''6 6 7\n1 3 1000000\n3 5 3000000\n5 1 5000000\n2 4 2000000\n4 6 4000000\n6 2 6000000''') == '25000000000021'\nassert solution('''8 7 9\n1 2 1000000\n2 3 1000000\n3 4 3000000\n4 5 4000000\n5 6 5000000\n6 7 6000000\n7 8 7000000\n8 1 8000000''') == 'Poor girl'\nassert solution('''7 7 10\n1 2 1000000\n2 3 1000000\n3 4 3000000\n4 5 4000000\n5 6 5000000\n6 7 6000000\n7 1 7000000''') == 'Poor girl'\nassert solution('''7 7 10\n1 2 1000000\n2 3 1000000\n3 4 3000000\n4 5 4000000\n5 6 5000000\n6 7 6000000\n7 8 7000000''') == 'Poor girl'\n"
    },
    {
        "number": 3221,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000') == 'Poor girl'\nassert solution('7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000') == '49000000000070'\nassert solution('1 1 1\\n1 2 1') == 'Poor girl'\nassert solution('10 10 1\\n1 9 1\\n1 10 1') == 'Poor girl'\nassert solution('1000 1000 1\\n999 999 1\\n999 998 1\\n998 999 1\\n998 997 1\\n997 999 1\\n997 996 1\\n996 999 1\\n996 994 1\\n994 999 1\\n994 993 1\\n993 999 1\\n993 992 1\\n992 999 1\\n992 991 1\\n991 999 1\\n991 989 1\\n989 999 1\\n989 988 1\\n988 999 1\\n988 986 1\\n985 999 1\\n985 984 1\\n983 999 1\\n983 983 1\\n982 999 1\\n982 982 1\\n981 999 1\\n981 981 1\\n980 999 1\\n980 979 1\\n979 999 1\\n979 978 1\\n978 999 1\\n978 977 1\\n977 999 1\\n977 976 1\\n976 999 1\\n976 975 1\\n975 999 1\\n975 973 1\\n973 999 1\\n973 972 1\\n972 999 1\\n972 971 1\\n971 999 1\\n971 970 1\\n970 999 1\\n970 969 1\\n969 999 1\\n969 968 1\\n968 999 1\\n968 967 1\\n967 999 1\\n967 966 1\\n966 999 1\\n966 965 1\\n965 999 1\\n965 964 1\\n964 999 1\\n964 963 1\\n963 999 1\\n963 962 1\\n962 999 1\\n962 961 1\\n961 999 1\\n961 960 1\\n960 999 1\\n960 959 1\\n959 999 1\\n959 958 1\\n958 999 1\\n958 957 1\\n957 999 1\\n957 956 1\\n956 999 1\\n956 955 1\\n955 999 1\\n955 954 1\\n954 999 1\\n954 953 1\\n953 999 1\\n953 952 1\\n952 999 1\\n952 951 1\\n951 999 1\\n951 950 1\\n950 999 1\\n950 949 1\\n949 999 1\\n949 948 1\\n948 999 1\\n948 947 1\\n947 999 1\\n947 946 1\\n946 999 1\\n946 945 1\\n945 999 1\\n945 944 1\\n944 999 1\\n944 943 1\\n943 999 1\\n943 942 1\\n942 999 1\\n942 941 1\\n941 999 1\\n941 940 1\\n940 999 1\\n940 939 1\\n939 999 1\\n939 938 1\\n938 999 1\\n938 937 1\\n937 999 1\\n937 936 1\\n936 999 1\\n936 935 1\\n935 999 1\\n935 934 1\\n934 999 1\\n934 933 1\\n933 999 1\\n933 932 1\\n932 999 1\\n932 931 1\\n931 999 1\\n931 930 1\\n930 999 1\\n930 929 1\\n929 999 1\\n929 928 1\\n928 999 1\\n928 927 1\\n927 999 1\\n927 926 1\\n926 999 1\\n926 925 1\\n925 999 1\\n925 924 1\\n924 999 1\\n924 923 1\\n923 999 1\\n923 922 1\\n922 999 1\\n922 921 1\\n921 999 1\\n921 920 1\\n920 999 1\\n920 919 1\\n919 999 1\\n919 918 1\\n918 999 1\\n918 917 1\\n917 999 1\\n917 916 1\\n916 999 1\\n916 915 1\\n915 999 1\\n915 914 1\\n914 999 1\\n915 913 1\\n913 999 1\\n915 912 1\\n912 999 1\\n915 911 1\\n911 999 1\\n911 910 1\\n910 999 1\\n910 909 1\\n909 999 1\\n909 908 1\\n808 999 1\\n808 907 1\\n807 999 1\\n807 906 1\\n806 999 1\\n806 905 1\\n805 999 1\\n805 904 1\\n804 999 1\\n804 903 1\\n803 999 1\\n803 902 1\\n802 999 1\\n802 901 1\\n801 999 1\\n801 900 1\\n800 999 1\\n800 909 1\\n809 999 1\\n809 908 1\\n808 999 1\\n808 907 1\\n807 999 1\\n807 906 1\\n806 999 1\\n806 905 1\\n805 999 1\\n805 904 1\\n804 999 1"
    },
    {
        "number": 3221,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7 7 10\n1 2 1000000\n2 3 2000000\n3 4 3000000\n4 5 4000000\n5 6 5000000\n6 7 6000000\n7 1 7000000''') == '49000000000070'\nassert solution('''6 6 7\n1 3 1000000\n3 5 3000000\n5 1 5000000\n2 4 2000000\n4 6 4000000\n6 2 6000000''') == '25000000000021'\nassert solution('''3 4 4\n1 2 1\n2 3 2\n3 4 3''') == 'Poor girl'\nassert solution('''7 7 10\n1 2 1000000\n2 3 2000000\n3 4 3000000\n4 5 4000000\n5 6 5000000\n6 7 6000000\n7 1 7000000''') == '49000000000070'\nassert solution('''3 3 4\n1 2 1\n2 3 2\n3 4 3''') == 'Poor girl'\n"
    },
    {
        "number": 3221,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7 7 10\n1 2 1000000\n2 3 2000000\n3 4 3000000\n4 5 4000000\n5 6 5000000\n6 7 6000000\n7 1 7000000''') == 'Poor girl'\nassert solution('''6 6 7\n1 3 1000000\n3 5 3000000\n5 1 5000000\n2 4 2000000\n4 6 4000000\n6 2 6000000''') == '25000000000021'\nassert solution('''10 10 22\n1 2 10\n3 4 10\n5 6 10\n7 8 10\n9 10 10\n10 11 10\n11 12 10\n12 13 10\n13 14 10\n14 15 10\n15 16 10\n16 17 10\n17 18 10\n18 19 10\n19 20 10''') == '60'\nassert solution('''10 10 22\n1 2 10\n3 4 10\n5 6 10\n7 8 10\n9 10 10\n10 11 10\n11 12 10\n12 13 10\n13 14 10\n14 15 10\n15 16 10\n16 17 10\n17 18 10\n18 19 10\n19 20 10''') == '60'\nassert solution('''10 10 22\n1 2 10\n3 4 10\n5 6 10\n7 8 10\n9 10 10\n10 11 10\n11 12 10\n12 13 10\n13 14 10\n14 15 10\n15 16 10\n16 17 10\n17 18 10\n18 19 10\n19 20 10''') == '60'\n"
    },
    {
        "number": 3221,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 4 7') == 'Poor girl'\nassert solution('5 5 7') == 'Poor girl'\nassert solution('3 3 7') == 'Poor girl'\nassert solution('3 3 10') == 'Poor girl'\nassert solution('1 1 5') == 'Poor girl'\n"
    },
    {
        "number": 3221,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7 7 10\n1 2 1000000\n2 3 2000000\n3 4 3000000\n4 5 4000000\n5 6 5000000\n6 7 6000000\n7 1 7000000''') == '49000000000070'\nassert solution('''6 6 7\n1 3 1000000\n3 5 3000000\n5 1 5000000\n2 4 2000000\n4 6 4000000\n6 2 6000000''') == '25000000000021''''\nassert solution('''6 6 7\n1 3 1000000\n3 5 3000000\n5 1 5000000\n2 4 2000000\n4 6 4000000\n6 2 6000000''') == '25000000000021'\n"
    },
    {
        "number": 3222,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n0 1\n1 0\n2 3\n3 2\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n0 1\n1 0\n2 3\n3 2\n\"\"\"\n) == \"Yeah!\"\n\nassert solution(\n\"\"\"\n0 1\n0 2\n1 3\n2 0\n2 3\n2 4\n3 4\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n0 1\n0 2\n1 3\n2 0\n2 3\n2 4\n3 4\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n1 0\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n1 30\n1 31\n1 32\n1 33\n1 34\n1 35\n1 36\n1 37\n1 38\n1 39\n1 40\n1 41\n1 42\n1 43\n1 44\n1 45\n1 46\n1 47\n1 48\n1 49\n1 50\n1 51\n1 52\n1 53\n1 54\n1 55\n1 56\n1 57\n1 58\n1 59\n1 60\n1 61\n1 62\n1 63\n1 64\n1 65\n1 66\n1 67\n1 68\n1 69\n1 70\n1 71\n1 72\n1 73\n1 74\n1 75\n1 76\n1 77\n1 78\n1 79\n1 80\n1 81\n1 82\n1 83\n1 84\n1 85\n1 86\n1 87\n1 88\n1 89\n1 90\n1 91\n1 92\n1 93\n1 94\n1 95\n1 96\n1 97\n1 98\n1 99\n1 100\n\"\"\"\n) == \"2\""
    },
    {
        "number": 3222,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3222,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == input\n\n---\noutput:\n2\n2\n0\n1\n2\n2\n3\nYeah!\n---"
    },
    {
        "number": 3222,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\""
    },
    {
        "number": 3222,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0\\n4\\n0\\n1\\n2\\n3') == '2\\n2\\n0\\n1\\n2\\n2\\n3'\nassert solution('1\\n4\\n0\\n1\\n2\\n3') == '2\\n2\\n0\\n1\\n2\\n2\\n3'\nassert solution('2\\n4\\n0\\n1\\n2\\n3') == '1\\n1\\n0\\n2\\n3\\n3'\nassert solution('3\\n4\\n0\\n1\\n2\\n3') == '2\\n2\\n0\\n1\\n2\\n2\\n3'\nassert solution('4\\n4\\n0\\n1\\n2\\n3') == '2\\n2\\n0\\n1\\n2\\n2\\n3'\n\n\"\"\""
    },
    {
        "number": 3222,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2\\n1 3\\n3 1\\n0 1\") == \"1\\n2\\n2\\n3\\n1\\n\"\nassert solution(\"1 2\\n1 3\\n3 1\\n2 1\\n0 1\") == \"1\\n2\\n2\\n3\\n1\\n\"\nassert solution(\"1 2\\n1 3\\n3 1\\n0 1\\n0 1\") == \"2\\n2\\n2\\n3\\n1\\n\"\nassert solution(\"1 2\\n1 3\\n3 1\\n0 1\\n2 3\\n3 2\\n0 1\\n2 1\\n2 1\") == \"2\\n2\\n2\\n3\\n1\\n\"\nassert solution(\"1 2\\n1 3\\n3 1\\n2 1\\n0 1\\n0 1\") == \"3\\n2\\n2\\n3\\n1\\n\"\n"
    },
    {
        "number": 3222,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 4\n0 1\n1 0\n2 3\n3 2''') == '2\\n2\\n0\\n1\\n2\\n2\\n3\\n3'\nassert solution('''5 5\n0 1\n1 0\n2 3\n3 2\n4 5\n4 3\nSample Output 2:\nYeah!''') == '0\\n0\\n1\\n2\\n2\\n3\\n3\\n4\\n5'\nassert solution('''5 3\n0 1\n1 0\n2 3\n3 2\n4 5\n4 3''') == '0\\n0\\n1\\n2\\n3'\nassert solution('''1 1\n0 1''') == 'Yeah!'\nassert solution('''5 5\n0 1\n1 0\n2 3\n3 2\n4 5\n4 3''') == '0\\n0\\n1\\n2\\n3\\n4\\n5'\n"
    },
    {
        "number": 3222,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 4\n0 1\n1 0\n2 3\n3 2''') == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n3\\n\"\nassert solution('''8 4\n0 1\n1 0\n2 3\n3 2\n0 4\n4 2\n1 3\n4 3\n2 3''') == \"4\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n\"\nassert solution('''10 10\n0 1\n1 0\n2 3\n3 2\n4 5\n5 2\n6 7\n7 2\n8 9\n9 8\n9 8\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9\n8 9"
    },
    {
        "number": 3222,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '2'\n\nassert solution(stdin) == '2\\n2\\n0\\n1\\n2\\n2\\n3\\n3'\n\nassert solution(stdin) == 'Yeah!'\n\nassert solution(stdin) == 'Yeah!\\n2\\n2\\n0\\n1\\n2\\n2\\n3\\n3'\n\nassert solution(stdin) == '2\\n2\\n0\\n1\\n2\\n2\\n3\\n3'"
    },
    {
        "number": 3222,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"4 4\n0 1\n1 0\n2 3\n3 2\n\"\"\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n3\"\nassert solution(\"\"\"4 4\n0 1\n1 0\n2 3\n3 2\n\"\"\") == \"Yeah!\"\nassert solution(\"\"\"6 6\n0 1\n1 2\n2 3\n3 4\n4 5\n5 0\n\"\"\") == \"0\\n1\\n2\\n3\\n4\\n5\"\nassert solution(\"\"\"7 7\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 0\n\"\"\") == \"2\\n2\\n2\\n2\\n2\\n2\\n1\"\nassert solution(\"\"\"9 9\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n\"\"\") == \"2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\"\n"
    },
    {
        "number": 3223,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\n\"\"\"\n"
    },
    {
        "number": 3223,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"POSSIBLE\"\n\n\"\"\"\n\n\"\"\"\nsolution 1: use hashmap to record degree of vertex, with the index as key\n\n\"\"\"\nfrom collections import defaultdict"
    },
    {
        "number": 3223,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1 2\\n\") == \"POSSIBLE\"\nassert solution(\"3\\n2 1 2\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3\\n1 2 3\\n\") == \"POSSIBLE\"\nassert solution(\"3\\n1 2 3\\n\") == \"POSSIBLE\"\n"
    },
    {
        "number": 3223,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n1 1 2''') == 'POSSIBLE'\nassert solution('''4\n1 2 1 1\n3 1 2\n2 3''') == 'POSSIBLE'\nassert solution('''4\n3 1 2\n3 1 2\n2 3''') == 'IMPOSSIBLE'\nassert solution('''5\n1 1 2\n1 2 1\n2 1 2\n2 3 3\n2 4 4\n3 4 2\n2 4 4''') == 'POSSIBLE'\nassert solution('''5\n3 1 2\n3 1 2\n2 3 3\n2 3 4\n2 3 4\n2 4 3\n3 4 2\n2 4 3''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3223,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == 'POSSIBLE'\nassert solution(input()) == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3223,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"POSSIBLE\"\nassert solution(\"2\") == \"POSSIBLE\"\nassert solution(\"3\") == \"POSSIBLE\"\nassert solution(\"4\") == \"POSSIBLE\"\nassert solution(\"5\") == \"POSSIBLE\"\n"
    },
    {
        "number": 3223,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(open(\"test_data_sample_1\").read()) == 'POSSIBLE'\nassert solution(open(\"test_data_sample_2\").read()) == 'IMPOSSIBLE'\nassert solution(open(\"test_data_sample_3\").read()) == 'POSSIBLE'\nassert solution(open(\"test_data_sample_4\").read()) == 'POSSIBLE'\nassert solution(open(\"test_data_sample_5\").read()) == 'POSSIBLE'\n"
    },
    {
        "number": 3223,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(open(\"test_anton_solution.txt\").read()) == \"IMPOSSIBLE\"\nassert solution(open(\"test_anton_solution_1.txt\").read()) == \"POSSIBLE\"\nassert solution(open(\"test_anton_solution_2.txt\").read()) == \"IMPOSSIBLE\"\nassert solution(open(\"test_anton_solution_3.txt\").read()) == \"POSSIBLE\"\nassert solution(open(\"test_anton_solution_4.txt\").read()) == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3223,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 1 2') == 'POSSIBLE'\nassert solution('1 1 2') == 'POSSIBLE'\nassert solution('2 1 2') == 'POSSIBLE'\nassert solution('1 2 1') == 'POSSIBLE'\nassert solution('1 2 2') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3223,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n2\\n') == 'POSSIBLE'\nassert solution('1\\n2\\n') == 'IMPOSSIBLE'\nassert solution('2\\n1 2\\n') == 'IMPOSSIBLE'\nassert solution('2\\n1 2\\n3 4\\n') == 'POSSIBLE'\nassert solution('2\\n1 2\\n2 1\\n') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3224,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n\") == \"0.5 0.5 0.5\"\nassert solution(\"-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n\") == \"0.0 0.0 -0.0\"\nassert solution(\"-10 -10 -10\\n10 10 10\\n10 10 10\\n-10 -10 -10\\n\") == \"0.0 0.0 -0.0\"\nassert solution(\"-1 -1 -1\\n1 0 1\\n1 0 1\\n1 1 1\\n\") == \"0.5 0.5 0.5\"\nassert solution(\"1 1 1\\n-1 0 1\\n0 0 1\\n-1 0 1\\n\") == \"0.0 0.0 -0.0\"\n"
    },
    {
        "number": 3224,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\") == '0.5 0.5 0.5'\nassert solution(\"-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\") == '0.0 0.0 -0.0'\nassert solution(\"0 0 0\\n0 1 0\\n1 0 0\\n0 0 1\") == '0.0 0.0 0.0'\nassert solution(\"0 0 0\\n0 0 1\\n1 0 0\\n0 0 1\") == '0.0 0.5 0.0'\nassert solution(\"0 0 0\\n0 0 1\\n1 1 0\\n0 0 1\") == '0.5 0.0 0.5'\n"
    },
    {
        "number": 3224,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''0 0 0\n1 0 0\n0 1 0\n0 0 1''') == '0.0 0.0 -0.0'\nassert solution('''-1 0 0\n1 0 0\n0 1 0\n0 0 1''') == '0.0 0.0 0.0'\nassert solution('''2 0 0\n-1 0 0\n0 1 0\n0 0 1''') == '0.5 0.5 0.5'\nassert solution('''2 1 0\n1 1 0\n1 1 1''') == '0.5 0.5 1.5'\nassert solution('''2 0 1\n1 0 0\n0 1 0''') == '0.5 0.5 0.5'\n"
    },
    {
        "number": 3224,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''0 0 0\n1 0 0\n0 1 0\n0 0 1''') == '0.5 0.5 -0.0'\nassert solution('''1 0 0\n0 1 0\n0 0 1\n0 0 -1''') == '0.5 0.5 0.5'\nassert solution('''1 0 0\n1 1 0\n0 1 1\n0 0 0''') == '0.0 0.0 0.0'\nassert solution('''1 0 0\n-1 1 0\n0 1 1\n0 0 0''') == '0.0 0.0 0.0'\nassert solution('''-1 0 0\n1 0 0\n0 1 1\n0 0 0''') == '0.0 0.0 -0.0'\n"
    },
    {
        "number": 3224,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"0 0 0\n1 0 0\n0 1 0\n0 0 1\"\"\"\n) == \"0.5 0.5 0.5\"\nassert solution(\n\"\"\"0 0 0\n-1 0 0\n1 0 0\n0 0 1\"\"\"\n) == \"0.0 0.0 -0.0\"\nassert solution(\n\"\"\"0 0 0\n0 0 0\n0 0 0\"\"\"\n) == \"0.0 0.0 0.0\"\n"
    },
    {
        "number": 3224,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0.5 0.5 0.5'\nassert solution('-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0.0 0.0 -0.0'\nassert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0.5 0.5 0.5'\nassert solution('-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0.0 0.0 -0.0'\nassert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0.5 0.5 0.5'\n"
    },
    {
        "number": 3224,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0 0 0\n1 0 0\n0 1 0\n0 0 1''') == '0.0 0.0 -0.0'\nassert solution('''-1 0 0\n1 0 0\n0 1 0\n0 0 1''') == '0.0 0.0 -0.0'\nassert solution('''-1 0 0\n-1 0 0\n0 1 0\n0 0 1''') == '0.0 0.0 -0.0'\nassert solution('''0.5 0.5 0.5\n1 0 0\n0 0 1\n0 0 0''') == '0.5 0.5 -0.5'\nassert solution('''0.5 0.5 0.5\n0 1 0\n0 0 1\n0 0 0''') == '0.5 0.5 -0.5'\n"
    },
    {
        "number": 3224,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0 0 0\") == \"0.5 0.5 0.5\"\nassert solution(\"1 0 0\") == \"0.5 0.5 -0.5\"\nassert solution(\"0 1 0\") == \"0.5 -0.5 0.5\"\nassert solution(\"0 0 1\") == \"-0.5 -0.5 0.5\"\n\"\"\"\n"
    },
    {
        "number": 3224,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0 0 0\n1 0 0\n0 1 0\n0 0 1''') == '0.5 0.5 -0.0'\nassert solution('''-1 0 0\n1 0 0\n0 1 0\n0 0 1''') == '0.0 0.0 0.0'\nassert solution('''1 1 1\n-1 -1 1\n1 1 1\n1 -1 1''') == '0.0 0.0 0.0'\nassert solution('''0 0 0\n0 1 0\n1 0 0\n0 -1 0''') == '0.5 0.0 -0.5'\nassert solution('''0 0 0\n-2 0 0\n0 0 0\n0 1 0''') == '0.0 0.0 0.0'\n"
    },
    {
        "number": 3224,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.5 0.5 0.5\"\nassert solution(\"-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.0 0.0 -0.0\"\nassert solution(\"1 0 0\\n0 1 0\\n0 0 1\\n0 0 0\") == \"0.0 0.0 0.0\"\nprint(\"All test cases passed successfully.\")\n"
    },
    {
        "number": 3225,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_stdout\n"
    },
    {
        "number": 3225,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"5\n17 17 17\n\"\"\") == \"\"\"-1\n\"\"\"\n\nassert solution(\"\"\"10\n1 1 1 1 1 1 1 1 1 1 1 1\n\"\"\") == \"\"\"2\n1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1\n\"\"\"\n\nassert solution(\"\"\"10\n5 3 2 1 1 1 1 1 1 1 1\n\"\"\") == \"\"\"3\n2 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n\"\"\"\n\nassert solution(\"\"\"5\n3 3 1 1 1\n\"\"\") == \"\"\"1\n3 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1"
    },
    {
        "number": 3225,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 3225,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10\n3 6 2 3 2 2 2 1 5 6''') == '2\\n3 2 2 1 5\\n3 2 2\\n6 6\\n'\n'''assert solution('''10\n5 3 2 3 2 2 2 1 5 6''') == '0\\n5 3 2 2 2 1\\n3 2 2\\n6 6\\n'\nassert solution('''5\n17 17 17\n''') == '0\\n17 17 17\\n'\n'''assert solution('''0\n5\n''') == '0\\n5\\n'\nassert solution('''10\n
    },
    {
        "number": 3225,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n3 6 2 3 2 2 2 1 5 6') == '2\\n3 2 2 1 5\\n3 2 2\\n6 6'\nassert solution('1\\n9') == '0\\n9'\nassert solution('5\\n9 5 5 5 5 5 9') == '2\\n9 5 5 5 5\\n5 5 5 5 5\\n9 9 9 9 9 9'\nassert solution('3\\n17 17 17') == '0\\n17 17 17\\n0 0 0'\nassert solution('5\\n5 5 5 5 5 5') == '0\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5'\n"
    },
    {
        "number": 3225,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"\\n1\") == \"1\"\nassert solution(\"2\") == \"\"\n"
    },
    {
        "number": 3225,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''10\n3 6 2 3 2 2 2 1 5 6''') == '2\\n3 2 2 1 5\\n3 2 2\\n6 6'\n'''\n    N = int(stdin.readline())\n    resum\u00e9 = [int(x) for x in stdin.readline().split()]\n    return '\\n'.join(map(str, resum\u00e9))\n\nassert solution('''3\n17 17 17''') == '0\\n17 17 17\\n17 17 17\\n17 17 17\\n17 17 17'\n'''\n    N = int(stdin.readline())\n    resum\u00e9 = [int(x) for x in stdin.readline().split()]\n    return '\\n'.join(map(str, resum\u00e9))\n\nassert solution('''10\n3 6 2 3 2 2 2 1 5 6''') == '2\\n3 2 2 1 5\\n3 2 2\\n6 6'\n'''\n    N = int(stdin.readline())\n    resum\u00e9 = [int(x) for x in stdin.readline().split()]\n    return '\\n'.join(map(str, resum\u00e9))\n\nassert solution('''10\n2 2 2 2 2 2 2 2 2 2''') == '0\\n2 2 2 2 2 2 2 2 2 2'\n'''\n    N = int(stdin.readline())\n    resum\u00e9 = [int(x) for x in stdin.readline().split()]\n    return '\\n'.join(map(str, resum\u00e9))\n\nassert solution('''10\n2 2 2 2 2 2 2 2 2 2''') == '0\\n2 2 2 2 2 2 2 2 2 2'\n'''\n    N = int(stdin.readline())\n    resum\u00e9 = [int(x) for x in stdin.readline().split()]\n    return '\\n'.join(map(str, resum\u00e9))"
    },
    {
        "number": 3225,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10\n3 6 2 3 2 2 2 1 5 6''') == '2\\n3 2 2 1 5\\n3 2 2'\nassert solution('''3\n17 17 17''') == '0\\n17 17 17'\nassert solution('''10\n0 0 0 0 0 0 0 0 0 0''') == '0\\n0 0 0 0 0 0 0 0 0'\nassert solution('''10\n0 0 0 0 0 0 0 0 0 0''') == '0\\n0 0 0 0 0 0 0 0 0'\nassert solution('''10\n0 0 0 0 0 0 0 0 0 0''') == '0\\n0 0 0 0 0 0 0 0 0'\n"
    },
    {
        "number": 3225,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''10\n3 6 2 3 2 2 2 1 5 6''') == '2\\n3 2 2 1 5\\n3 2 2\\n6 6'\nassert solution('''3\n17 17 17''') == '0\\n17 17 17'\nassert solution('''2\n2 2''') == '0\\n2 2'\nassert solution('''5\n3 3 3 3 3 3''') == '4\\n3 3 3 3 3\\n0 0 0 0 0'\nassert solution('''10\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3225,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n3 6 2 3 2 2 2 1 5 6') == 2\nassert solution('4\\n7 11 2 4 10 3 9 8 17') == 1\nassert solution('10\\n23 35 24 30 39 11 22 9 15 22 10 21 17 17 19 19 28 22 19 18 26 30 40 22 19 19 22 19 19 22 19 19 22 19 19 22 19 19 22 19 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22"
    },
    {
        "number": 3226,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3226,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1\") == \"IMPOSSIBLE\"\nassert solution(\"2 2 1\") == \"0\"\nassert solution(\"2 3 2\") == \"IMPOSSIBLE\"\nassert solution(\"1 1 1\") == \"IMPOSSIBLE\"\nassert solution(\"2 3 2\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3226,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''3 2 1\n1 2 7\n2 3 8\n1\n3 2\n''') == \"IMPOSSIBLE\"\n\nassert solution(\n'''3 2 1\n1 2 7\n2 3 8\n1\n2 3\n''') == \"74.6666666667\"\n\nassert solution(\n'''4 2 3\n1 3 4\n2 3 5\n1\n2 2\n''') == \"35.0\"\n\nassert solution(\n'''5 5 1\n1 3 4 5\n2 3 5\n1\n2 2\n1\n2 3\n''') == \"89.0\"\n\nassert solution(\n'''5 5 1\n1 3 4 5\n2 3 5\n1\n2 2\n1\n2 3\n''') == \"89.0\""
    },
    {
        "number": 3226,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 2 1\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\") == \"74.6666666667\"\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3\") == \"74.6666666667\"\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3\\n1\\n2 3\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n1\\n2 3\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3226,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == 'IMPOSSIBLE'\nassert solution('1 2 3') == 'IMPOSSIBLE'\nassert solution('1 1 1') == 'IMPOSSIBLE'\nassert solution('1 2 3') == 'IMPOSSIBLE'\nassert solution('1 1 1') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3226,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\") == \"74.6666666667\"\nassert solution(\"1 2 3 4\") == \"IMPOSSIBLE\"\nassert solution(\"2 2 1\") == \"74.6666666667\"\nassert solution(\"2 2 1 3\") == \"IMPOSSIBLE\"\nassert solution(\"2 2 1 3 4\") == \"74.6666666667\"\n"
    },
    {
        "number": 3226,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"3 2 1\n1 2 7\n2 3 8\n1\n3 2\n\"\"\") == \"74.6666666667\"\n\nassert solution(\n\"\"\"3 2 1\n1 2 7\n2 3 8\n1\n2 3\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\n\"\"\"4 1 1\n1\n2 3\n3 4\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\n\"\"\"4 1 1\n1\n2 3\n3 4\n\"\"\") == \"60.0\"\n\nassert solution(\n\"\"\"2 1 1\n1\n3 3\n\"\"\") == \"48.0\""
    },
    {
        "number": 3226,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    '''3 2 1\n1 2 7\n2 3 8\n1\n3 2\n''') == '74.6666666667'\nassert solution(\n    '''3 2 1\n1 2 7\n2 3 8\n1\n2 3\n''') == 'IMPOSSIBLE'\nassert solution(\n    '''3 2 1\n1 2 7\n2 3 8\n2\n2 3\n''') == '76.0'\n\nassert solution(\n    '''8 6 1\n1 2 5\n1 3 3\n3 4 2\n4 5 1\n5 6 5\n6 7 4\n7 8 3\n7\n8 6\n''') == '76.0'\n'''\nassert solution(\n    '''8 6 1\n1 2 5\n1 3 3\n3 4 2\n4 5 1\n5 6 5\n6 7 4\n7 8 3\n7\n8 6\n''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3226,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\") == \"IMPOSSIBLE\"\nassert solution(\"1 2 3\\n1 1 2\\n2 1 3\") == \"74.6666666667\"\n\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\") == \"74.6666666667\"\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n1 1 2\\n2 1 3\") == \"74.6666666667\"\n"
    },
    {
        "number": 3226,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n') == 'IMPOSSIBLE'\nassert solution('3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n') == '74.6666666667'\nassert solution('3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n') == '74.6666666667'\nassert solution('3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3\\n') == 'IMPOSSIBLE'\nassert solution('3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3\\n') == '74.6666666667'\n"
    },
    {
        "number": 3227,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\n5 6\n7 4\n''') == '1\\n2\\n1\\n2\\n2\\n1\\n'\nassert solution('''5 7\n1 2\n2 3\n3 1\n4 5\n5 6\n6 7\n7 4\n''') == '0\\n'\nassert solution('''5 7\n1 2\n2 3\n3 1\n4 5\n5 6\n6 7\n7 4\n''') == '1\\n2\\n1\\n2\\n2\\n1\\n'\nassert solution('''5 7\n1 2\n2 3\n3 1\n4 5\n5 6\n6 7\n7 4\n''') == '0\\n'\nassert solution('''5 7\n1 2\n2 3\n3 1\n4 5\n5 6\n6 7\n7 4\n''') == '1\\n2\\n1\\n2\\n2\\n1\\n'\n"
    },
    {
        "number": 3227,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\n\"\"\") == \"\"\"1\n2\n1\n2\n2\n1\n\"\"\"\nassert solution(\"\"\"5 5\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\n\"\"\") == \"\"\"0\n1\n2\n1\n2\n1\n\"\"\"\nassert solution(\"\"\"1 0\n1 2\n\"\"\") == \"\"\"0\n1\n\"\"\"\nassert solution(\"\"\"3 0\n1 2\n2 3\n\"\"\") == \"\"\"0\n\"\"\"\nassert solution(\"\"\"1 0\n1 1\n2 0\n3 0\n\"\"\") == \"\"\"0\n1\n1\n\"\"\"\n"
    },
    {
        "number": 3227,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n2') == '1'\nassert solution('1\\n3') == '1'\nassert solution('1\\n4') == '2'\nassert solution('1\\n5') == '2'\n"
    },
    {
        "number": 3227,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1 2') == ''\nassert solution('2 3') == ''\nassert solution('3 1') == ''\nassert solution('3 4') == ''\n"
    },
    {
        "number": 3227,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 2\") == \"2 1 1 1\"\nassert solution(\"5 7\") == \"1 2 1 2 1 2\"\nassert solution(\"2 1\") == \"1 1\"\nassert solution(\"7 7\") == \"0 0 0 0 0 0 0\"\nassert solution(\"7 7\") == \"0 0 0 0 0 0 0\"\n"
    },
    {
        "number": 3227,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3227,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 7') == '0'\nassert solution('7 4') == '1 1 1 1'\nassert solution('7 7') == '0'\nassert solution('7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\\n') == '1 1 1 1\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n'\nassert solution('5 5\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\\n') == '1 1 1 1\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n'\n"
    },
    {
        "number": 3227,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\n5 6\n7 4''') == '''1\n2\n1\n2\n2\n1\n'''\n\nassert solution(\n'''5 4\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\n5 6\n7 4''') == '''0\n0\n1\n0\n0\n'''\n"
    },
    {
        "number": 3227,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(read_input(__file__)) == read_expected(__file__)\n"
    },
    {
        "number": 3227,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\n''') == '''1\n2\n1\n2\n2\n1\n'''\nassert solution('''7 7\n1 2\n2 3\n3 1\n4 5\n5 6\n6 7\n7 4\n''') == '''0\n0\n1\n1\n1\n1\n'''\nassert solution('''5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\n5 6\n6 7\n7 4\n''') == '''1\n1\n1\n1\n1\n1\n'''\nassert solution('''7 7\n1 2\n2 3\n3 1\n4 5\n5 6\n6 7\n7 4\n''') == '''1\n1\n1\n1\n1\n1\n'''\nassert solution('''7 7\n1 2\n2 3\n3 1\n4 5\n5 6\n6 7\n7 4\n''') == '''1\n1\n1\n1\n1\n1\n'''\n"
    },
    {
        "number": 3228,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 10 2''') == '10'\nassert solution('''4 10 3''') == '5'\nassert solution('''0''') == '0'\nassert solution('''1''') == '1'\nassert solution('''2''') == '2'\n"
    },
    {
        "number": 3228,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0\\n15\\n30\\n45\") == \"10\"\nassert solution(\"2\\n4\\n6\\n10\\n14\\n18\\n22\\n26\\n30\") == \"5\"\nassert solution(\"4\\n4\\n4\\n4\") == \"10\"\nassert solution(\"4\\n1\\n2\\n3\\n4\") == \"0\"\nassert solution(\"2\\n2\\n2\\n2\") == \"2\"\n"
    },
    {
        "number": 3228,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 3228,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0"
    },
    {
        "number": 3228,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 10 2') == '10'\nassert solution('4 10 2\\n0\\n15\\n30\\n45') == '10'\nassert solution('4 10 2\\n0\\n15\\n30\\n45\\n12\\n30') == '5'\nassert solution('4 10 3\\n0\\n15\\n30\\n45\\n12\\n30') == '5'\nassert solution('4 10 3\\n0\\n15\\n30\\n45\\n12\\n30\\n8\\n30') == '10'\n"
    },
    {
        "number": 3228,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 10 2\") == \"10\"\nassert solution(\"4 10 2\\n0\\n15\\n30\\n45\") == \"10\"\nassert solution(\"4 10 2\\n0\\n15\\n30\\n45\\n60\\n90\\n120\\n150\\n180\\n210\\n240\\n270\\n300\") == \"5\"\nassert solution(\"4 10 3\\n0\\n15\\n30\\n45\\n60\\n90\\n120\\n150\\n180\\n210\\n240\\n270\\n300\") == \"5\"\n"
    },
    {
        "number": 3228,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 10 2\n0\n15\n30\n45''') == '10'\nassert solution('''4 10 3\n0\n15\n30\n45''') == '5'\nassert solution('''4 10 3\n0\n15\n30\n45''') == '6'\nassert solution('''5 10 3\n0\n15\n30\n45\n59\n69\n79\n89\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n''') == '207'\nassert solution('''5 10 3\n0\n15\n30\n45\n59\n69\n79\n89\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n''') == '87'\n"
    },
    {
        "number": 3228,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0\\n0\\n0\\n0') == '0'\nassert solution('1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n2\\n3') == '2'\nassert solution('2\\n2\\n3\\n4') == '3'\nassert solution('1\\n2\\n3\\n4') == '4'\n"
    },
    {
        "number": 3228,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 10 2\\n0\\n15\\n30\\n45\") == \"10\"\nassert solution(\"5 10 3\\n0\\n15\\n30\\n45\\n50\\n60\") == \"5\"\nassert solution(\"4 10 2\\n0\\n15\\n30\\n45\\n50\\n60\\n80\") == \"8\"\nassert solution(\"3 5 2\\n0\\n15\\n30\\n45\\n50\\n60\\n80\\n90\\n100\\n110\\n120\\n130\\n140\\n150\\n160\\n170\\n180\\n190\\n200\\n210\\n220\\n230\\n240\\n250\\n260\\n270\\n280\\n290\\n300\\n310\\n320\\n330\\n340\\n350\\n360\\n370\\n380\\n390\\n400\\n410\\n420\\n430\\n440\\n450\\n460\\n470\\n480\\n490\\n500\\n510\\n520\\n530\\n540\\n550\\n560\\n570\\n580\\n590\\n600\\n610\\n620\\n630\\n640\\n650\\n660\\n670\\n680\\n690\\n700\\n710\\n720\") == \"10\"\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 3228,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''0\n2\n2\n0''') == '2'\nassert solution('''1\n0\n15\n30\n45''') == '10'\nassert solution('''1\n10\n15\n30\n45''') == '5'\nassert solution('''2\n0\n15\n30\n45''') == '5'\nassert solution('''1\n2\n2\n0''') == '2'\n"
    },
    {
        "number": 3229,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n4 2\n50 50 75\n25 25 25\n''') == '2'\n\nassert solution(\n'''\n5 2\n50 50 50 50\n25 25 25 25\n''') == '1'\n\nassert solution(\n'''\n5 3\n5 5 5 5\n5 5 5 5\n5 5 5 5\n''') == '4'\n\nassert solution(\n'''\n5 3\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n''') == '2'\n\nassert solution(\n'''\n5 4\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n''') == '3'"
    },
    {
        "number": 3229,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '1'\nprint('Tests passed')\n"
    },
    {
        "number": 3229,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 1') == '1'\nassert solution('1 3') == '1'\nassert solution('1 3 4') == '1'\nassert solution('3 1 3 4') == '2'\n"
    },
    {
        "number": 3229,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '2'\nassert solution('2\\n2') == '1'\nassert solution('1\\n3') == '2'\nassert solution('1\\n4') == '2'\n"
    },
    {
        "number": 3229,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3\\n1 10\\n100 100 100\\n2 1\\n0 100') == 2\nassert solution('2 3\\n1 10\\n100 100 100\\n2 1\\n0 100') == 2\nassert solution('1 5\\n1 1\\n0 100') == 1\nassert solution('1 3\\n1 1\\n0 100') == 1\nassert solution('1 5\\n1 1\\n0 100') == 1\n"
    },
    {
        "number": 3229,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3229,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 2\n\"\"\"\n\nimport sys\nfrom typing import List\n\nclass Contestant:\n    def __init__(self, n_of_contestants: int, scores: List[int]):\n        self.scores = scores\n        self.score_sum = sum(scores)\n        self.top_scores = sorted(scores, reverse=True)[0:n_of_contestants]\n        self.top_scores_sum = sum(self.top_scores)\n\n    def __repr__(self):\n        return f'Contestant({self.scores})'\n\n    def worst_rank(self):\n        return 1 + sum(1 for s in self.top_scores if s < self.top_scores_sum / len(self.top_scores))"
    },
    {
        "number": 3229,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"4 2\n50 50 75\n25 25 25\n\"\"\") == \"2\"\n\nassert solution(\n    \"\"\"5 2\n50 50 50 50\n25 25 25 25\n\"\"\") == \"1\"\n\nassert solution(\n    \"\"\"4 2\n5 10 4\n2 7 6\n3 9 5\n4 4 2\n5 2 1\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3229,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 2\n50 50 75\n25 25 25''') == '2'\n\nassert solution('''5 2\n50 50 50 50\n25 25 25 25\n45 45 45 45\n25 25 25 25''') == '1'\n\nassert solution('''5 2\n50 50 50 50\n25 25 25 25\n45 45 45 45\n20 20 20 20\n40 40 40 40\n35 35 35 35\n30 30 30 30\n25 25 25 25\n20 20 20 20\n15 15 15 15\n10 10 10 10\n5 5 5 5\n0 0 0 0\n''') == '4'\n'''"
    },
    {
        "number": 3229,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3230,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4\n.LX.\n.X..\n....\n.L..\n''') == '1'\n\nassert solution('''4 4\n.XLX\n.X..\n...L\n.X..\n''') == '2'\n\nassert solution('''10 10\n.XX.\n.L..\n.......\n......L\n.X....\n..X....\n...X....\n....X...\n......L\n.L....\n.X....\n.L....\n''') == '3'\n\nassert solution('''20 30\n..X.\nX...\n...L\n.X..\n....L\n.X...\n...L\n.X...\n.X...\n.X..\n.X..\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L.L\n.L"
    },
    {
        "number": 3230,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 4\n.LX.\n.X..\n....\n.L..\n''') == '1'\nassert solution('''4 4\n.XLX\n.X..\n...L\n.X..\n''') == '2'\n"
    },
    {
        "number": 3230,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 2') == '1'\nassert solution('3 4') == '1'\nassert solution('4 4') == '1'\nassert solution('4 4') == '1'\n"
    },
    {
        "number": 3230,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\".L.L.X.L.\") == 2\nassert solution(\".L.L.X.L.X.\") == 1\nassert solution(\".L.L.X.L.X.L.\") == 1\nassert solution(\".L.L.X.L.X.L.L.\") == 0\nassert solution(\".L.L.X.L.X.X.L.\") == 0\n"
    },
    {
        "number": 3230,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\".L.L..XX...\") == \"0\"\nassert solution(\".L.L..XX..L.\") == \"1\"\nassert solution(\".LL.LL.LL.LL.LLLLLLLL.LL\") == \"2\"\nassert solution
    },
    {
        "number": 3230,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('.L.X.') == 1\nassert solution('.L.X..') == 2\nassert solution('.L.X.L..') == 3\nassert solution('.L.X.L.L..') == 4\nassert solution('.L.X.L.L.L..') == 5\n"
    },
    {
        "number": 3230,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n.L.X.\\n.X..\\n....\\n.L..\\n\") == \"1\"\nassert solution(\"2 3\\n.L.X.\\n.X..\\n....\\n.L..\\n\") == \"2\"\nassert solution(\"3 3\\n.L.X.\\n.X..\\n....\\n.L..\\n\") == \"3\"\nassert solution(\"3 3\\n.L.X.\\n.X..\\n....\\n.L..\\n\") == \"1\"\nassert solution(\"2 2\\n.L.X.\\n.X..\\n....\\n.L..\\n\") == \"2\"\n"
    },
    {
        "number": 3230,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\".L.X\") == 1\nassert solution(\"X.L\") == 2\nassert solution(\".XL\") == 1\nassert solution(\"LX.X.L\") == 3\nassert solution(\"X..X.L\") == 2\n"
    },
    {
        "number": 3230,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('.L..') == '1'\nassert solution('.L.L') == '2'\nassert solution('.LXL.L.L') == '3'\nassert solution('.LL.LL.LL') == '2'\nassert solution('.X..X.X.X.X.X') == '5'\n"
    },
    {
        "number": 3230,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''.L.\n.X..\n.X..\nL...\n''') == '1'\nassert solution('''L.\nX..\n.X..\n.X..\n.L.\n''') == '2'\nassert solution('''.L.\nX..\n.X..\nL...\n.X.\n''') == '1'\nassert solution('''L.\nX..\n.X..\n.X..\n.L.\n''') == '2'\nassert solution('''.L.\n.X.\n.X.\nL.X.\nX..\n''') == '3'\n"
    },
    {
        "number": 3231,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n') == 'detention'\nassert solution('5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n') == 'home'\nassert solution('5 2 3\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n') == 'detention'\nassert solution('4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n') == 'detention'\nassert solution('2 1 2\\n1 1') == 'home'\n"
    },
    {
        "number": 3231,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n\") == \"home\"\nassert solution(\"3 3 1\\n1 0\\n1 2 2\\n2 2 2\\n2 1 0\\n\") == \"detention\"\nassert solution(\"3 3 1\\n1 0\\n1 2 2\\n2 2 2\\n2 1 0\\n\") == \"home\"\nassert solution(\"1 5 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n\") == \"detention\"\nassert solution(\"1 5 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n\") == \"home\"\n"
    },
    {
        "number": 3231,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 2 1') == 'home'\nassert solution('5 2 1') == 'detention'\nassert solution('4 1 1') == 'detention'\nassert solution('6 1 1') == 'detention'\nassert solution('6 1 1') == 'detention'\n"
    },
    {
        "number": 3231,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n') == 'home'\nassert solution('5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n') == 'detention'\nassert solution('5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n') == 'detention'\nassert solution('5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 1') == 'home'\nassert solution('5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 1') == 'home'\n"
    },
    {
        "number": 3231,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'detention'\nassert stdin == '4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n'\n"
    },
    {
        "number": 3231,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 1\") == \"home\"\nassert solution(\"1 1\") == \"detention\"\nassert solution(\"1 2 2\") == \"detention\"\nassert solution(\"1 2 1 2\") == \"detention\"\nassert solution(\"1 2 2 2\") == \"detention\"\n"
    },
    {
        "number": 3231,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"\"\n\n'''\n"
    },
    {
        "number": 3231,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 'home'\nassert solution('1 2 2') == 'home'\nassert solution('4 2 1') == 'detention'\nassert solution('5 2 1') == 'home'\nassert solution('3 4 3') == 'detention'\n"
    },
    {
        "number": 3231,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"detention\"\nassert solution(stdin) == \"home\"\nassert solution(stdin) == \"detention\"\nassert solution(stdin) == \"home\"\nassert solution(stdin) == \"home\"\n"
    },
    {
        "number": 3231,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n4 2 1\n1 1\n2 0 2\n2 1 3\n1 2\n'''\n) == 'home'\n\nassert solution(\n'''\n4 2 1\n1 1\n2 0 2\n2 1 3\n2 2 4\n1 3\n'''\n) == 'detention'\n"
    },
    {
        "number": 3232,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\"\nprint('Test cases passed.')\n"
    },
    {
        "number": 3232,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('tralalal') == 'allatral'\nassert solution('zzzz') == '-1'"
    },
    {
        "number": 3232,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('tralalal') == 'allatral'\nassert solution('zzzz') == '-1'\nassert solution('abc') == 'abc'\nassert solution('abcd') == '-1'\nassert solution('a') == 'a'\n"
    },
    {
        "number": 3232,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('tralalal') == 'allatral'\nassert solution('zzzz') == '-1'"
    },
    {
        "number": 3232,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzzzzzzzzzzzzzzzzzzz\") == \"-1\"\nassert solution(\"ttt\") == \"ttt\"\nassert solution(\"tttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt"
    },
    {
        "number": 3232,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3232,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"allatral\"\nassert solution(\"zzzz\") == \"-1\"\nassert solution(\"aaaaa\") == \"aaaaa\"\nassert solution(\"aaaa\") == \"-1\"\nassert solution(\"tralalal\") == \"allatral\"\n"
    },
    {
        "number": 3232,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\"\n\"\"\"\n"
    },
    {
        "number": 3232,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('tralalal') == 'allatral'\nassert solution('zzzz') == '-1'\nassert solution('ttt') == '-1'\nassert solution('ddd') == '-1'\nassert solution('b') == 'b'\n"
    },
    {
        "number": 3232,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('tralalal') == 'allatral'\nassert solution('zzzz') == '-1'\nassert solution('tral') == 'allat'\nassert solution('t') == 'at'\nassert solution('t') == 'at'\n"
    },
    {
        "number": 3233,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"\"\nassert solution(\"abc\") == \"\"\nassert solution(\"abcab\") == \"\"\nassert solution(\"abcabc\") == \"\"\n"
    },
    {
        "number": 3233,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5''') == ''\nassert solution('''6''') == ''\nassert solution('''1 2 3 4 5 6''') == ''\nassert solution('''1 2 3 4 5 6 7 8''') == ''\nassert solution('''1 2 3 4 5 6 7 8 9''') == ''\n"
    },
    {
        "number": 3233,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n1 2 3 4 5''') == '5'\nassert solution('''6\n3 2 1 6 4 5''') == '8'\nassert solution('''3\n1 2 3''') == '0'\nassert solution('''3\n1 2 3''') == '0'\nassert solution('''3\n2 3 1''') == '1'\n"
    },
    {
        "number": 3233,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n        '5\\n1 2 3 4 5'\n    ) == '5'\nassert solution(\n        '6\\n3 2 1 6 4 5'\n    ) == '8'\nprint(\"Tests passed\")\n"
    },
    {
        "number": 3233,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    \"5\\n1 2 3 4 5\"\n) == \"5\"\nassert solution(\n    \"6\\n3 2 1 6 4 5\"\n) == \"8\"\n"
    },
    {
        "number": 3233,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == '5'\nassert solution('2\\n1\\n2\\n3\\n4\\n5') == '8'\nassert solution('3\\n1\\n2\\n3\\n4\\n5') == '8'\nassert solution('4\\n1\\n2\\n3\\n4\\n5') == '8'\nassert solution('5\\n1\\n2\\n3\\n4\\n5') == '8'\n"
    },
    {
        "number": 3233,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n2') == '1'\nassert solution('2\\n1') == '0'\nassert solution('2\\n1 3') == '1'\nassert solution('2\\n2 1') == '2'\n"
    },
    {
        "number": 3233,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") is None\nassert solution(\"\\n\") is None\nassert solution(\"\\n\\n\") is None\nassert solution(\"1 2 3\") == \"3\"\nassert solution(\"1 2 3 4 5\") == \"5\"\n"
    },
    {
        "number": 3233,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1\\n\") == \"1\"\nassert solution(\"2\\n1 1\\n\") == \"1\"\nassert solution(\"3\\n1 1 1\\n\") == \"2\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"3\"\nassert solution(\"5\\n1 1 1 1 1\\n\") == \"4\"\n"
    },
    {
        "number": 3233,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5''') == '5'\nassert solution('''6''') == '8'\nassert solution('''3 2 1 6 4 5''') == '8'\nassert solution('''8''') == '15'\nassert solution('''2''') == '0'\n"
    },
    {
        "number": 3234,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3234,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"23\") == 1\nassert solution(\"47\") == 1\nassert solution(\"523\") == 2\nassert solution(\"98\") == 4\nassert solution(\"100\") == 4\n"
    },
    {
        "number": 3234,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3234,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 1\n'''\n"
    },
    {
        "number": 3234,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '47') == '1'\nassert solution(\n    '523') == '2'\nassert solution(\n    '2') == '2'\nassert solution(\n    '500') == '6'\nassert solution(\n    '512') == '3'\n"
    },
    {
        "number": 3234,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"47\") == 1\nassert solution(\"523\") == 2\nprint(\"All set? Click 'Check' to earn cool rewards!\")\n"
    },
    {
        "number": 3234,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('47\\n') == '1\\n'\nassert solution('523\\n') == '2\\n'\n"
    },
    {
        "number": 3234,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3234,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('47') == 1\nassert solution('523') == 2\n'''\n\nimport sys"
    },
    {
        "number": 3234,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"47\") == \"1\"\nassert solution(\"523\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 3235,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20\\n0 1 20\\n0 1 10\") == \"1\\n0 1 15\"\nassert solution(\"2 2\\n0 1 20\\n1 0 5\") == \"0\"\nassert solution(\"4 4\\n0 1 10\\n1 0 5\\n0 1 10\\n0 2 10\\n0 3 10\\n3 2 10\\n2 0 20\\n0 1 20\\n0 1 10\") == \"0\\n0 1 15\\n0 1 15\\n1 0 15\\n1 0 15\\n1 0 15\\n1 0 15\"\n"
    },
    {
        "number": 3235,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n''') == '0\\n1\\n15\\n1\\n0 1 15'\nassert solution('''2 2\n0 1 10\n1 0 5\n''') == '1\\n0 1 15'\nassert solution('''2 3\n0 1 10\n1 0 5\n2 0 15\n''') == '0\\n1\\n15'\n'''"
    },
    {
        "number": 3235,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20') == '0\\n1 15\\n'\nassert solution('5 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 5') == '1\\n0 1 15\\n'\nassert solution('5 5\\n0 1 10\\n1 0 10\\n0 3 10\\n3 2 10\\n2 0 5') == '0\\n1 15\\n'\nassert solution('5 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 5') == '1\\n0 1 15\\n'\nassert solution('5 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 5') == '0\\n1 15\\n'\n"
    },
    {
        "number": 3235,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n''') == '0'\nassert solution('''2 2\n0 1 20\n1 0 5\n''') == '1'\nassert solution('''4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n''') == '1'\nassert solution('''5 3\n0 1 1\n1 0 5\n0 2 3\n2 1 5\n1 0 3\n0 3 1\n''') == '0'\nassert solution('''3 3\n0 1 1\n1 0 5\n0 2 3\n2 1 5\n1 0 3\n0 3 1\n''') == '0'\n"
    },
    {
        "number": 3235,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 0') == '0'\nassert solution('1 1') == '0'\nassert solution('2 2') == '0'\nassert solution('3 2') == '0'\nassert solution('3 2') == '0'\n"
    },
    {
        "number": 3235,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 5\") == \"0\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"0 1 10\") == \"1\"\nassert solution(\"1 2 10\") == \"0\"\nassert solution(\"0 3 10\") == \"1\"\n"
    },
    {
        "number": 3235,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0"
    },
    {
        "number": 3235,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20\\n\") == \"0\\n1\\n1\\n15\\n\"\nassert solution(\"1 1\\n0 1 10\\n1 0 5\\n\") == \"0\\n1\\n1\\n15\\n\"\nassert solution(\"1 1\\n0 1 10\\n0 0 10\\n\") == \"0\\n1\\n1\\n15\\n\"\nassert solution(\"1 1\\n0 1 10\\n0 0 10\\n1 1 10\\n\") == \"0\\n1\\n1\\n15\\n1\\n\"\nassert solution(\"1 1\\n0 1 10\\n0 0 10\\n1 1 10\\n1 1 10\\n\") == \"0\\n1\\n1\\n15\\n1\\n\"\n"
    },
    {
        "number": 3235,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3235,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20\\n') == '0\\n1 15'\nassert solution('2 2\\n0 1 20\\n1 0 5\\n') == '1\\n0 1 15'\nassert solution('3 3\\n0 1 2\\n0 2 1\\n1 2 3\\n2 1 3\\n3 0 1\\n') == '0\\n2 2 1\\n1 0 2\\n2 1 1'\nassert solution('2 2\\n0 1 2\\n1 0 3\\n') == '0\\n1 1'\nassert solution('2 1\\n0 1 0\\n') == '0\\n0'\n"
    },
    {
        "number": 3236,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 6\n1 3 2 1 5\n1 3\n2 3\n1 4\n3 5\n4 5\n2 5\n''') == '5'\nassert solution('''4 3\n4 4 8 12\n1 2\n2 3\n3 4\n''') == '1'\nassert solution('''4 4\n1 2\n2 3\n3 4\n4 5\n1 2\n1 2\n1 2\n''') == '1'\nassert solution('''2 4\n1 2\n2 3\n1 4\n3 4\n4 5\n1 2\n1 2\n1 2\n''') == '1'\nassert solution('''2 4\n1 2\n2 3\n1 4\n3 4\n4 5\n1 2\n1 2\n1 2\n''') == '2'\n"
    },
    {
        "number": 3236,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 3\\n1 2\\n2 3\\n3 4') == '1'\nassert solution('1 2\\n1 3\\n2 3') == '0'\nassert solution('5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\\n5 6') == '5'\nassert solution('5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\\n6 7\\n1 2\\n1 3\\n3 4\\n2 4\\n4 5\\n2 5\\n5 6') == '1'\nassert solution('5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\\n5 6\\n6 7\\n1 2\\n1 3\\n3 4\\n2 4\\n4 5\\n2 5\\n5 6') == '0'\n"
    },
    {
        "number": 3236,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5') == '5'\nassert solution('2 3\\n1 2\\n2 3') == '1'\nassert solution('5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5') == '5'\nassert solution('4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\\n4 5\\n2 5') == '1'\nassert solution('2 3\\n1 2\\n2 3\\n2 3\\n2 3') == '1'\n"
    },
    {
        "number": 3236,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3236,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 6\n1 3 2 1 5\n1 3\n2 3\n1 4\n3 5\n4 5\n2 5\n''') == '5'\nassert solution('''5 6\n1 3 2 1 5\n1 3\n2 3\n1 4\n3 5\n4 5\n2 5\n1 2\n2 3\n3 4\n4 5\n''') == '1'\nassert solution('''5 6\n4 3 8 12\n1 2\n2 3\n1 4\n3 5\n4 5\n2 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n2 5\n1 2\n''') == '1'\nassert solution('''5 6\n3 2 1 5\n1 3\n2 3\n1 4\n3 5\n4 5\n2 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n3 4\n4 5\n2 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3\n1 4\n3 5\n4 5\n1 2\n2 3"
    },
    {
        "number": 3236,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\") == \"5\"\nassert solution(\"3 4\\n4 4 8 12\\n1 2\\n2 3\\n3 4\") == \"1\"\nassert solution(\"2 1\\n1 2\") == \"0\"\nassert solution(\"1 1\\n2 2\") == \"0\"\nassert solution(\"1 1\\n1 1\") == \"0\"\n"
    },
    {
        "number": 3236,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 6\n1 3 2 1 5\n1 3\n2 3\n1 4\n3 5\n4 5\n2 5''') == '5'\nassert solution('''5 6\n1 3 2 1 5\n1 3\n2 3\n1 4\n3 5\n4 5\n2 5''') == '1'\nassert solution('''3 3\n4 4 8 12\n1 2\n2 3\n3 4\n1 4\n2 5\n3 5\n2 5\n3 5''') == '1'\nassert solution('''3 3\n4 4 8 12\n1 2\n2 3\n3 4\n1 4\n2 5\n3 5\n2 5\n3 5''') == '2'\nassert solution('''5 6\n1 3 2 1 5\n1 3\n1 4\n3 5\n4 5\n2 5\n2 5\n2 5\n3 5\n3 5\n3 5\n3 5\n3 5\n3 5''') == '1'\n"
    },
    {
        "number": 3236,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 6\n1 3 2 1 5\n1 3\n2 3\n1 4\n3 5\n4 5\n2 5\n''') == \"5\"\nassert solution('''6 5\n1 2 4 3 5 6\n1 3\n2 4\n3 4\n4 5\n5 6\n1 4\n1 5\n2 5\n2 4\n3 5\n3 4\n''') == \"3\"\nassert solution('''4 3\n4 4 8 12\n1 2\n2 3\n3 4\n4 5\n1 4\n1 5\n2 5\n2 4\n3 5\n3 4\n''') == \"1\"\nassert solution('''7 7\n1 2 3 4 5 6 7\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n2 5\n1 4\n1 5\n2 5\n2 4\n3 5\n3 4\n4 5\n4 5\n1 4\n1 5\n2 5\n2 4\n3 5\n3 4\n4 5\n4 5\n1 4\n1 5\n2 5\n2 4\n3 5\n3 4\n4 5\n4 5\n''') == \"0\"\nassert solution('''4 4\n1 2 3 4\n1 2\n2 3\n3 4\n1 4\n1 5\n2 5\n2 4\n3 5\n3 4\n4 5\n4 5\n1 4\n1 5\n2 5\n2 4\n3 5\n3 4\n4 5\n4 5\n1 4\n1 5\n2 5\n2 4\n3 5\n3 4\n4 5\n4 5\n''') == \"1\"\n"
    },
    {
        "number": 3236,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 6\n1 3 2 1 5\n1 3\n2 3\n1 4\n3 5\n4 5\n2 5\n''') == '5'\nassert solution('''5 3\n2 3\n1 4\n3 5\n4 5\n2 5\n''') == '1'\nassert solution('''7 7\n1 2\n2 3\n1 5\n1 6\n1 7\n2 4\n3 4\n4 5\n5 6\n6 7\n7 7\n''') == '0'\nassert solution('''6 7\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 3\n3 4\n4 5\n5 6\n6 7\n''') == '2'\nassert solution('''8 7\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 3\n3 4\n4 5\n5 6\n6 7\n7 7\n''') == '1'\n"
    },
    {
        "number": 3236,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 5\\n4 4 8 12\\n1 2\\n2 3\\n3 4') == '1'\nassert solution('5 3\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5') == '5'\nassert solution('6 6\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n2 3\\n2 4\\n3 4\\n4 5\\n5 6') == '2'\nassert solution('8 2\\n2 5\\n5 1\\n4 6\\n6 7\\n7 2\\n7 5\\n8 1\\n8 2') == '4'\nassert solution('10 10\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n2 3\\n2 4\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10') == '5'\n"
    },
    {
        "number": 3237,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('020302') == '7'\nassert solution('1311') == '24'\nassert solution('11') == '12'\nassert solution('13') == '24'\nprint('All tests passed successfully!')\n"
    },
    {
        "number": 3237,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"020302\") == 7\nassert solution(\"1311\") == 24\nassert solution(\"0113123\") == 123\nassert solution(\"1234\") == 0\nassert solution(\"1111\") == 1\n"
    },
    {
        "number": 3237,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('020302') == '7'\nassert solution('1311') == '24'\nassert solution('19112') == '3'\nassert solution('6223') == '7'\nassert solution('123456789') == '10061'\n"
    },
    {
        "number": 3237,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == expected\n\nprint('Test passed.')"
    },
    {
        "number": 3237,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == None\n"
    },
    {
        "number": 3237,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\"\nassert solution(\"1316\") == \"1\"\nassert solution(\"11\") == \"12\"\nassert solution(\"13\") == \"1\"\n"
    },
    {
        "number": 3237,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '24'\n\nTest.describe('Basic tests')\nTest.assert_equals(solution(\"020302\"), \"7\")\nTest.assert_equals(solution(\"1311\"), \"24\")\nTest.assert_equals(solution
    },
    {
        "number": 3237,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\"\nassert solution(\"020311\") == \"7\"\nassert solution(\"100101\") == \"10\"\nassert solution(\"1000110\") == \"10\"\n"
    },
    {
        "number": 3237,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('020302') == '7'\nassert solution('1311') == '24'\nassert solution('1123581399') == '29'\nassert solution('1122398368') == '41'\nassert solution('11') == '1'\n"
    },
    {
        "number": 3237,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"020302\") == 7\nassert solution(\"1311\") == 24\nassert solution(\"101101\") == 1\nassert solution(\"121312\") == 24\nassert solution(\"10110101\") == 2\n"
    },
    {
        "number": 3238,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''8 10\n.#.#..##..#\n####..####\n###.##....\n...#..####\n....##....\n.#.##..##.\n##########\n##########\n''') == '3 1 3 10'\nassert solution(\n'''5 20\n###########.#.#.#.#.\n###########...#.###.\n##########..##.#..##\n###########..#.#.##.\n###########.###...#.\nSample Output 2:\n1 15 5 15\n''') == '1 15 5 15'\n"
    },
    {
        "number": 3238,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 3\\n###.###.\\n#.#.#.#.\\n#.#.##.#\\n###.##.#.\\n###.#.#.#') == '1 15 5 15'\nassert solution('6 3\\n.#.#.\\n#.#.##\\n#.#.###\\n#.#.###\\n#.#.###\\n#.#.###') == '15 4 3 6'\nassert solution('6 3\\n.###.\\n#.#.#.\\n#.#.#.#\\n###.#.#.\\n#.#.#.#\\n###.#.#') == '1 3 3 3'\nassert solution('6 3\\n.#.#.\\n###.#.#\\n###.####\\n#.##.###\\n#.##.#.##\\n###.##.#.\\n#.#.#.#.') == '15 4 6 2'\nassert solution('6 3\\n.#.#.\\n#.#.#.#\\n#.##.##.\\n#.#.##.#\\n###.##.##\\n#.#.#.#.#\\n#.#.#.##.\\n#.##.#.#.\\n###.##.#.#') == '1 3 5 6'\n"
    },
    {
        "number": 3238,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##.\\n##########\\n##########') == '3 1 3 10'\n"
    },
    {
        "number": 3238,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(open(\"test_solution.py\", 'r').read()) == \"(3,1,3,10)\"\nassert solution(open(\"test_solution.py\", 'r').read()) == \"(1,15,5,15)\"\nassert solution(open(\"test_solution.py\", 'r').read()) == \"(1,5,5,15)\"\nassert solution(open(\"test_solution.py\", 'r').read()) == \"(3,1,10,15)\"\nassert solution(open(\"test_solution.py\", 'r').read()) == \"(3,1,5,10)\"\n"
    },
    {
        "number": 3238,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''8 10\n.#.#..##..#\n####..####\n###.##....\n...#..####\n....##....\n.#.##..##.\n##########\n##########''') == '3 1 3 10'\nassert solution('''5 20\n###########.#.#.#.#.\n###########...#.###.\n##########..##.#..##\n###########..#.#.##.\n###########.###...#.\nSample Output 2:\n1 15 5 15''') == '1 15 5 15'\n\n__author__ = 'jake'\n\nimport sys"
    },
    {
        "number": 3238,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''8 10\n"
    },
    {
        "number": 3239,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3239,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '5.000000000'"
    },
    {
        "number": 3239,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('50 0.125') == '16.339203308'\nassert solution('201 1.000') == '5.000000000'\nprint(solution(stdin))\n\n\"\"\"\n"
    },
    {
        "number": 3239,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"5.000000000\"\nassert solution(\"50 0.125\") == \"16.339203308\"\nassert solution(\"201 1.000\") == \"5.000000000\"\n"
    },
    {
        "number": 3239,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('50 0.125') == '16.339203308'\nassert solution('201 1.000') == '5.000000000'\n"
    },
    {
        "number": 3239,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('50 0.125') == '16.339203308'\nassert solution('201 1.000') == '5.000000000'\nprint(\"Testcase 1: Pass\")\nassert solution('30 0.1') == '12.919295519'\nprint(\"Testcase 2: Pass\")\nassert solution('30 1.0') == '5.000000000'\nprint(\"Testcase 3: Pass\")\nassert solution('150 1.5') == '25.000000000'\nprint(\"Testcase 4: Pass\")\n"
    },
    {
        "number": 3239,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"50 0.125\") == \"16.339203308\"\nassert solution(\"201 1.000\") == \"5.000000000\"\n'''\n"
    },
    {
        "number": 3239,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\n\"\"\"\n\nSample Input 1:\n50 0.125\nSample Output 1:\n16.339203308\n\nSample Input 2:\n201 1.000\nSample Output 2:\n5.000000000\n\n\"\"\""
    },
    {
        "number": 3239,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('50 0.125') == '16.339203308'\nassert solution('201 1.000') == '5.000000000'\n"
    },
    {
        "number": 3239,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '50 0.125'\n) == '16.339203308'\nassert solution(\n    '201 1.000'\n) == '5.000000000'\n"
    },
    {
        "number": 3240,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\"\nstdin = \"\"\nassert solution(stdin) == \"\"\nstdin = \"\"\nassert solution(stdin) == \"\"\nstdin = \"\"\nassert solution(stdin) == \"\"\nstdin = \"\"\nassert solution(stdin) == \"\"\nstdin = \"\"\n"
    },
    {
        "number": 3240,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2') == '2'\nassert solution('4 3') == '3'\nassert solution('2 1') == '1'\nassert solution('2 3') == '2'\nassert solution('2 4') == '2'\n"
    },
    {
        "number": 3240,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 2\n0.5 1\n''') == '2'\nassert solution('''2 3\n1 11\n0.4 1\n''') == '3'\nassert solution('''3 5\n0.4 4\n0.2 2\n0.4 1\n0.2 1\n''') == '1'\nassert solution('''3 2\n0.1 1\n0.7 1\n0.1 1\n''') == '0'\nassert solution('''3 3\n0.1 1\n0.2 1\n0.7 1\n''') == '0'\n"
    },
    {
        "number": 3240,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 2\n0.5 1\n''') == '2'\nassert solution('''4 3\n1 11\n0.4 1\n''') == '3'\n\nimport sys\nfor n_cases in range(int(sys.stdin.readline().strip())):\n    k, v = map(int, sys.stdin.readline().strip().split(' '))\n    p, b = [], []\n    for i in range(v):\n        p.append(float(sys.stdin.readline().strip()))\n        b.append(int(sys.stdin.readline().strip()))\n    # print(k, v, p, b)\n    pos = {0: 1}\n    for i in range(1, k + 1):\n        pos_i = {}\n        for j in range(2 ** i - 1):\n            n, m = bin(j)[2:], bin(j + 1)[2:]\n            if n == m:\n                continue\n            pos_i[(n, m)] = 0\n        pos[i] = pos_i\n    # print(pos)\n    max_v = 0\n    for i in range(2 ** k - 1):\n        votes = 0\n        for j in range(v):\n            if j in pos[k]:\n                votes += pos[k][(b[j] >> i) & 1][1]\n            else:\n                votes += (1 - p[j]) * pos[k][(b[j] >> i) & 1][1]\n        # print(votes)\n        max_v = max(max_v, votes)\n    print(max_v)"
    },
    {
        "number": 3240,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n0.5 1\\n\") == \"2\"\nassert solution(\"4 3\\n1 11\\n0.4 1\\n\") == \"3\"\nassert solution(\"1\\n0.5\\n\") == \"1\"\nassert solution(\"5 1\\n0.5\\n\") == \"1\"\nassert solution(\"3 4\\n1 1\\n0.5 0.5\\n1 1\\n\") == \"0\"\n"
    },
    {
        "number": 3240,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '2'\n"
    },
    {
        "number": 3240,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 2\n0.5 1\n''') == '2'\nassert solution('''2 2\n0.5 1\n1 11\n0.4 1\n''') == '3'\nassert solution('''2 2\n0.8 1\n0.4 1\n''') == '1'\nassert solution('''2 2\n1.0 1\n1.0 1\n''') == '1'\nassert solution('''2 2\n0.1 1\n0.1 1\n''') == '0'\n"
    },
    {
        "number": 3240,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"4\"\n\"\"\"\n\n\"\"\"\n[4/14] 2 1\n[2/7] 1 1\n[5/14] 0 0\n[0/14] 0 1\n[1/14] 0 0\n[2/14] 0 0\n[3/14] 1 1\n[4/14] 0 0\n[5/14] 1 1\n[6/14] 0 0\n[7/14] 0 0\n[8/14] 0 0\n[9/14] 0 0\n[10/14] 0 0\n[11/14] 0 0\n[12/14] 0 0\n[13/14] 1 1\n[14/14] 0 0\n[15/14] 0 0\n[16/14] 0 0\n\n\"\"\"\n"
    },
    {
        "number": 3240,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3240,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 2\n0.5 1\n''') == '2'\nassert solution('''4 3\n1 11\n0.4 1\n''') == '3'\nassert solution('''6 4\n1 0\n0.1 1\n1 1\n0.4 1\n1 1\n0.1 1\n''') == '2'\nassert solution('''6 4\n1 0\n0.1 1\n1 1\n0.4 1\n1 1\n0.1 1\n''') == '3'\nassert solution('''8 4\n1 0\n0.1 1\n1 1\n0.4 1\n1 1\n0.4 1\n1 1\n0.4 1\n''') == '3'\n"
    },
    {
        "number": 3241,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '10.5'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3241,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n2\\n1\\n') == '-1'\nassert solution('4\\n4\\n2 3\\n0\\n') == '10'\nassert solution('6\\n5 2\\n7 5\\n3 4\\n4 0\\n2 1\\n5 8\\n3 1\\n') == '10'\nassert solution('4\\n5 3\\n2 1\\n2 0\\n3 0\\n') == '3.5'\nassert solution('5\\n5 3\\n2 3\\n2 1\\n2 0\\n3 0\\n3 1\\n') == '3.5'\n"
    },
    {
        "number": 3241,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == -1\nassert solution(\"3\\n7 1\\n3 2\\n10 0\") == 10.5\nassert solution(\"3\\n2 1\\n4 0\\n0 3\") == -1\nassert solution(\"3\\n2 1\\n4 0\\n3 0\") == -1\nassert solution(\"3\\n2 1\\n4 0\\n3 1\") == 10.5\n"
    },
    {
        "number": 3241,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n7 1\n3 2\n10 0''') == '10.5'\nassert solution('''3\n2 1\n4 0\n0 3''') == '-1'\nassert solution('''10\n7 1\n3 2\n10 0''') == '3.0'\nassert solution('''10\n2 1\n4 0\n0 3''') == '2.5'\nassert solution('''10\n2 1\n4 0\n5 9''') == '2.5'\n"
    },
    {
        "number": 3241,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''3\n7 1\n3 2\n10 0'''\n) == '10.5'\n\nassert solution(\n'''3\n2 1\n4 0\n0 3'''\n) == '-1'\n\nassert solution(\n'''2\n1 1\n4 0'''\n) == '-1'\n\nassert solution(\n'''2\n2 1\n4 0'''\n) == '-1'\n\nassert solution(\n'''4\n3 1\n2 2\n1 1\n0 0'''\n) == '-1'"
    },
    {
        "number": 3241,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n7 1\n3 2\n10 0''') == '10.5'\nassert solution('''2\n2 1\n4 0\n0 3''') == '-1'\nassert solution('''10\n10\n0\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9''') == '9.7'\nassert solution('''10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100''') == '99.99'\nassert solution('''100\n99\n98\n97\n96\n95\n94\n93\n92\n91\n90\n89\n88\n87\n86\n85\n84\n83\n82\n81\n80\n79\n78\n77\n76\n75\n74\n73\n72\n71\n70\n69\n68\n67\n66\n65\n64\n63\n62\n61\n60\n59\n58\n57\n56\n55\n54\n53\n52\n51\n50\n49\n48\n47\n46\n45\n44\n43\n42\n41\n40\n39\n38\n37\n36\n35\n34\n33\n32\n31\n30\n29\n28\n27\n26\n25\n24\n23\n22\n21\n20\n19\n18\n17\n16\n15\n14\n13\n12\n11\n10\n9\n8\n7\n6\n5\n4\n3\n2\n1''') == '0.9'\n"
    },
    {
        "number": 3241,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '10.5'\nassert solution('0 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '-1'\nassert solution('0 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '-1'\nassert solution('0 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '-1'\nassert solution('0 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '-1'\n"
    },
    {
        "number": 3241,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 3241,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '-1'\nassert solution(\"1\") == \"0\"\nassert solution(\"3\") == \"10.5\"\nassert solution(\"10\") == \"100000\"\nassert solution(\"10000\") == \"10000000\"\n"
    },
    {
        "number": 3241,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''3\n7 1\n3 2\n10 0'''\n    ) == '10.5'\nassert solution(\n'''3\n2 1\n4 0\n0 3'''\n    ) == '-1'\nassert solution(\n'''3\n2 1\n4 0\n1 3\nSample Output 3:\n-1\n'''\n    ) == '-1'\nassert solution(\n'''2\n1 1\n1 1\nSample Output 4:\n1.5\n'''\n    ) == '1.5'\nassert solution(\n'''2\n1 1\n1 1\n1 1\nSample Output 5:\n-1\n'''\n    ) == '-1'"
    },
    {
        "number": 3242,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 0.5\\n2 0.5\\n1 0.5\\n') == '1'\nassert solution('2 0.5\\n2 0.51\\n1 0.49\\n') == '2'\nassert solution('2 0.5\\n2 0.5\\n1 0.5\\n') == '1'\n\nprint('Passed')\n\n-----------------------------------------------------------------------------------\n"
    },
    {
        "number": 3242,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 0.5') == '1'\nassert solution('1 0.51') == '2'\nassert solution('1 0.49') == '3'\nassert solution('2 0.5') == '2'\nassert solution('2 0.51') == '3'\n"
    },
    {
        "number": 3242,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 0.5\n2 0.5\n1 0.5''') == \"1\"\nassert solution('''2 0.5\n2 0.51\n1 0.49''') == \"2\"\nassert solution('''3 0.75\n3 0.45\n1 0.5\n1 0.5\n1 0.49\n2 0.49\n2 0.5''') == \"3\"\nassert solution('''3 0.75\n3 0.45\n1 0.5\n1 0.5\n1 0.49\n2 0.49\n2 0.5''') == \"4\"\nassert solution('''3 0.75\n3 0.45\n1 0.5\n1 0.5\n1 0.49\n2 0.49\n2 0.5''') == \"3\"\n"
    },
    {
        "number": 3242,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3242,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 0.5\n2 0.51\n1 0.49''') == '1'\nassert solution('''2 0.5\n2 0.51\n1 0.49''') == '2'\nassert solution('''1 0.5\n1 0.5\n1 0.5''') == '0'\nassert solution('''2 0.5\n2 0.51\n1 0.49''') == '0'\nassert solution('''2 0.5\n2 0.51\n1 0.49''') == '1'\n"
    },
    {
        "number": 3242,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 0.5\\n2 0.51\\n1 0.49\\n') == '1'\nassert solution('2 0.5\\n2 0.5\\n1 0.49\\n') == '1'\nassert solution('1 0.49\\n2 0.49\\n2 0.49\\n1 0.49\\n') == '2'\nassert solution('2 0.49\\n2 0.49\\n2 0.49\\n2 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n') == '1'\nassert solution('2 0.5\\n2 0.5\\n2 0.5\\n2 0.5\\n1 0.5\\n1 0.49\\n1 0.49\\n') == '1'\n"
    },
    {
        "number": 3242,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 0.5\") == \"1\"\nassert solution(\"2 0.5\") == \"1\"\nassert solution(\"1 0.5\") == \"1\"\n\nassert solution(\"2 0.49\") == \"1\"\nassert solution(\"2 0.51\") == \"2\"\n"
    },
    {
        "number": 3242,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 0.5\\n2 0.5\\n1 0.5\") == \"1\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\") == \"2\"\nassert solution(\"2 0.5\\n2 0.5\\n1 0.5\") == \"1\"\nassert solution(\"2 0.5\\n2 0.49\\n1 0.49\") == \"2\"\nassert solution(\"2 0.5\\n2 0.5\\n1 0.51\") == \"2\"\n"
    },
    {
        "number": 3242,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 0.5\\n2 0.5\\n1 0.5') == '1'\nassert solution('1 0.5\\n2 0.51\\n1 0.49') == '2'\nassert solution('1 0.5\\n2 0.5\\n1 0.51') == '2'\nassert solution('1 0.5\\n2 0.5\\n1 0.51\\n2 0.51') == '2'\nassert solution('1 0.5\\n2 0.5\\n1 0.49\\n2 0.51\\n1 0.51') == '2'\n"
    },
    {
        "number": 3242,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3243,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 5 2\\n3 3 3 3\\n0 1\\n0 3\\n1 3\\n1 2\\n2 3\\n4 5\\n0 1\\n0 3\\n1 3\\n1 2\\n2 3\\n3 4\\n4 2') == 'yes'\n"
    },
    {
        "number": 3243,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 5 2\\n3 3 3 3\\n0 1\\n0 3\\n1 3\\n1 2\\n2 3\\n') == 'yes'\nassert solution('5 4 4\\n1 1 2 2 2\\n0 1\\n2 3\\n3 4\\n4 2\\n') == 'yes'\nassert solution('3 5 1\\n3 2 1\\n1 2 1\\n0 1 1\\n0 0 1\\n0 1 0\\n1 0 0\\n0 0 2\\n') == 'yes'\nassert solution('3 3 1\\n2 1 1\\n2 2 1\\n1 1 1\\n1 2 1\\n0 1 1\\n0 1 0\\n1 2 0\\n') == 'no'\nassert solution('3 4 3\\n1 1 2 2 2\\n0 1\\n2 3\\n3 4\\n4 2\\n') == 'no'\n"
    },
    {
        "number": 3243,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0 0\") == \"yes\"\nassert solution(\"4 5 2\") == \"yes\"\nassert solution(\"5 4 4\") == \"no\"\nassert solution(\"1 1 2 2 2\") == \"no\"\nassert solution(\"4 3 3 3 3\") == \"yes\"\n"
    },
    {
        "number": 3243,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 'yes'\nassert solution('0 0\\n0 1\\n1 1\\n0 1') == 'yes'\nassert solution('2 2\\n0 1\\n0 3\\n1 3\\n1 2\\n2 3\\n2 3\\n0 1\\n1 2\\n1 3\\n2 3') == 'yes'\nassert solution('4 6\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n0 1\\n1 3\\n2 3\\n3 2\\n0 2\\n1 2\\n2 3\\n3 4\\n3 4\\n0 1\\n1 3\\n2 3\\n3 4\\n3 4\\n0 1\\n1 2\\n2 3\\n3 4\\n0 1\\n1 3\\n2 3\\n3 4\\n3 4') == 'no'\nassert solution('5 10\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3"
    },
    {
        "number": 3243,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 5 2\n3 3 3 3\n0 1\n0 3\n1 3\n1 2\n2 3\n''') == 'yes'\nassert solution('''5 4 4\n1 1 2 2 2\n0 1\n2 3\n3 4\n4 2\n''') == 'yes'\nassert solution('''5 4 4\n3 3 3 3\n1 1 2 2 2\n0 1\n2 3\n3 4\n4 2\n''') == 'yes'\nassert solution('''5 4 4\n3 3 3 3\n1 1 2 2 2\n0 1\n2 3\n3 4\n4 2\n''') == 'no'\nassert solution('''5 4 4\n3 3 3 3\n1 1 2 2 2\n0 1\n2 3\n3 4\n4 2\n''') == 'no'\n"
    },
    {
        "number": 3243,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3243,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n4 5 2\n3 3 3 3\n0 1\n0 3\n1 3\n1 2\n2 3\n''') == 'yes'\nassert solution('''\n4 4 4\n1 1 2 2 2\n0 1\n2 3\n3 4\n4 2\n''') == 'no'\nassert solution('''\n6 4 2\n1 1 2 2 2 3\n0 1\n2 3\n3 4\n4 2\n5 3\n5 4\n''') == 'yes'\nassert solution('''\n4 4 4\n1 1 2 2 2\n0 1\n2 3\n3 4\n4 2\n5 3\n5 4\n''') == 'no'\nassert solution('''\n4 4 4\n1 1 2 2 2\n0 1\n2 3\n3 4\n4 2\n5 3\n5 4\n''') == 'no'\n"
    },
    {
        "number": 3243,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n4 5 2\n3 3 3 3\n0 1\n0 3\n1 3\n1 2\n2 3\n\"\"\".strip()) == 'yes'\n\nassert solution(\n\"\"\"\n5 4 4\n1 1 2 2 2\n0 1\n2 3\n3 4\n4 2\n\"\"\".strip()) == 'yes'\n\nassert solution(\n\"\"\"\n5 4 4\n1 1 2 2 2\n0 1\n1 3\n2 4\n2 3\n3 4\n\"\"\".strip()) == 'no'\n\nassert solution(\n\"\"\"\n10 4 4\n1 1 2 2 2 2 2 2 2 2 2\n0 1\n0 3\n1 3\n1 2\n2 3\n2 4\n2 5\n3 6\n3 7\n4 8\n4 9\n5 10\n\"\"\".strip()) == 'yes'\n\nassert solution(\n\"\"\"\n10 4 4\n1 1 2 2 2 2 2 2 2 2 2\n0 1\n0 3\n1 3\n1 2\n2 3\n2 4\n2 5\n3 6\n3 7\n4 8\n4 9\n5 10\n\"\"\".strip()) == 'no'\n"
    },
    {
        "number": 3243,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'yes'\n"
    },
    {
        "number": 3243,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''3 4 2\n3 3 3 3\n0 1\n0 3\n1 3\n1 2\n2 3''') == 'yes'\nassert solution(\n'''3 5 3\n1 2 3 2 4 3\n0 1\n0 3\n1 3\n1 2\n2 3\n3 4\n4 2''') == 'yes'\nassert solution(\n'''5 6 3\n4 4 3 3 4 4 4\n0 1\n2 3\n0 3\n2 3\n2 4\n3 4\n4 5\n2 4''') == 'yes'\nassert solution(\n'''5 6 2\n3 3 3 3 4 4 4\n0 1\n0 3\n1 3\n1 2\n2 3\n3 4\n4 2''') == 'no'\nassert solution(\n'''3 5 2\n3 3 3 3 4 4 4\n0 1\n0 3\n1 3\n1 2\n2 3\n3 4\n4 2''') == 'no'\n"
    },
    {
        "number": 3244,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"\"\nassert solution(\"5\") == \"2\\n1\\n2\"\nassert solution(\"4\") == \"5\\n8\\n2\\n7\"\nassert solution(\"8\") == \"10\\n7\\n5\\n8\"\nassert solution(\"9\") == \"10\\n8\\n7\\n6\"\n"
    },
    {
        "number": 3244,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"3\\n5\\n5\\n5\") == \"\"\nassert solution(\"3\\n5\\n5\\n5\\n1\") == \"\"\nassert solution(\"3\\n5\\n5\\n5\\n1\\n2\") == \"\"\n"
    },
    {
        "number": 3244,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n5\n5\n5''') == '''2\n1\n2\n'''\nassert solution('''4\n20\n15\n17\n14\n''') == '''5\n8\n2\n7\n'''\n"
    },
    {
        "number": 3244,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5\\n5\\n5\\n5\\n\") == \"2\\n1\\n2\"\nassert solution(\"5\\n5\\n5\\n5\\n\") == \"2\\n1\\n2\"\nassert solution(\"2\\n2\\n\") == \"2\\n2\"\nassert solution(\"3\\n5\\n7\\n9\\n\") == \"1\\n2\\n3\"\nassert solution(\"4\\n1\\n5\\n7\\n9\\n\") == \"2\\n3\\n4\"\n"
    },
    {
        "number": 3244,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n5\\n5\\n5') == '2\\n1\\n2'\nassert solution('4\\n20\\n15\\n17\\n14') == '5\\n8\\n2\\n7'\n"
    },
    {
        "number": 3244,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n5\\n5\\n5') == '2\\n1\\n2\\n'\nassert solution('4\\n20\\n15\\n17\\n14') == '5\\n8\\n2\\n7\\n'\nprint(solution(input()))"
    },
    {
        "number": 3244,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3\n5\n5\n5\n\"\"\") == \"\"\"\n2\n1\n2\n\"\"\".strip()\n\nassert solution(\"\"\"\n4\n20\n15\n17\n14\n\"\"\") == \"\"\"\n5\n8\n2\n7\n\"\"\".strip()\n\nassert solution(\"\"\"\n1\n1\n1\n1\n\"\"\") == \"\"\"\n1\n1\n1\n1\n\"\"\".strip()\n\nassert solution(\"\"\"\n3\n2\n3\n4\n\"\"\") == \"\"\"\n2\n3\n4\n\"\"\".strip()\n\nassert solution(\"\"\"\n4\n2\n3\n4\n\"\"\") == \"\"\"\n2\n3\n4\n\"\"\".strip()"
    },
    {
        "number": 3244,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n4\n20\n15\n17\n14\n\"\"\") == \"2\\n1\\n2\\n7\"\nassert solution(\n\"\"\"\n3\n5\n5\n5\n\"\"\") == \"5\\n8\\n2\"\nassert solution(\n\"\"\"\n4\n20\n15\n17\n14\n\"\"\") == \"2\\n1\\n2\\n7\"\nassert solution(\n\"\"\"\n6\n20\n15\n17\n14\n5\n3\n\"\"\") == \"5\\n8\\n2\\n7\\n1\"\nassert solution(\n\"\"\"\n10\n20\n15\n17\n14\n5\n3\n2\n1\n\"\"\") == \"5\\n8\\n2\\n7\\n1\"\n"
    },
    {
        "number": 3244,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n3\\n2\\n4\\n5\") == \"2\\n1\\n2\\n3\\n4\"\nassert solution(\"4\\n10\\n9\\n11\\n7\") == \"5\\n8\\n2\\n1\"\nassert solution(\"2\\n3\\n5\\n7\\n11\\n13\") == \"9\\n10\\n6\\n5\"\nassert solution(\"3\\n3\\n9\\n9\\n4\") == \"8\\n2\\n5\"\nassert solution(\"4\\n4\\n6\\n6\\n5\") == \"3\\n2\\n1\"\n"
    },
    {
        "number": 3244,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n5\n5\n5''') == '''2\n1\n2\n'''\n\nassert solution('''4\n20\n15\n17\n14\n''') == '''5\n8\n2\n7\n'''\n\nassert solution('''1\n20\n15\n17\n14\n''') == '''20\n15\n17\n14\n'''\n\nassert solution('''2\n20\n15\n17\n14\n''') == '''20\n15\n'''\n\nassert solution('''3\n20\n15\n17\n14\n''') == '''20\n15\n'''"
    },
    {
        "number": 3245,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == ''\n\"\"\"\n"
    },
    {
        "number": 3245,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n    3\n    p^ main.py\n    ^ -n 10\n''') == 'python\\npython main.py\\npython main.py -n 10\\n'\n\nassert solution('''\n    5\n    python\n    ^\n    ^^^\n    ^^^\n    ^^^\n    ^^^\n    ^^^\n''') == 'python\\npython\\npython\\npython\\npython\\npython\\n'\n\nassert solution('''\n    4\n    a\n    ^\n    ^^^\n    a\n''') == 'a\\na\\na\\na\\n'\n'''\n"
    },
    {
        "number": 3245,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('python\\n'\n                '^\\n'\n                '^ -n 10\\n'\n                'python main.py\\n'\n                '^ -n 10\\n') == 'python\\npython main.py\\npython main.py -n 10'\n\"\"\"\n"
    },
    {
        "number": 3245,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''python\np^ main.py\n^ -n 10\n''') == 'python\\npython main.py\\npython main.py -n 10\\n'\nassert solution('''java\nj^ a\n^ -b\n^ -c\n^^d\n''') == 'java\\nj\\nj\\na\\nj\\nj\\na\\nj\\na\\n'\nassert solution('''\\\np^ main.py\n^ -n 10\n''') == '\\n'\nassert solution('''\\\nj^ a\n^ -b\n^ -c\n^^d\n''') == '\\n'\nassert solution('''\\\np^ main.py\n^^^\n^^^\n^^^\n''') == '\\n'\n'''\nNote:\n\nThe input is guaranteed to contain at most $10^6$ characters.\n'''\n"
    },
    {
        "number": 3245,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('python\\np^ main.py\\n^ -n 10') == 'python\\np^ main.py\\npython main.py -n 10'\nassert solution('python\\njava\\n^\\n^^^\\n^^^\\n^^^') == 'python\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3245,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''python\np^ main.py\n^ -n 10\n''') == 'python\\npython main.py\\npython main.py -n 10'\n'''\n) == 'python\\npython main.py\\npython main.py -n 10'\n\nassert solution('''python\njava\n^\n^^^\n^^^\n''') == 'python\\njava\\njava\\npython\\njava\\njava'\n'''\n) == 'python\\njava\\njava\\npython\\njava\\njava'\n"
    },
    {
        "number": 3245,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('a b') == 'a b'\nassert solution('a b c') == 'a b c'\nassert solution('a b c d e') == 'a b c d e'\n"
    },
    {
        "number": 3245,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('python\\nmain.py\\n -n 10\\n') == 'python main.py -n 10\\n'\nassert solution('python\\njava\\n^\\n^^^\\n^^^\\n^^^\\n^-n 10\\n') == 'java\\njava\\njava\\npython\\npython\\npython main.py -n 10\\n'\n\nassert solution('1\\npython\\nmain.py\\n -n 10\\n') == 'python main.py -n 10\\n'\nassert solution('2\\npython\\njava\\n^\\n^^^\\n^^^\\n^^^\\n^-n 10\\n') == 'java\\njava\\njava\\npython\\npython\\npython main.py -n 10\\n'\nassert solution('3\\npython\\njava\\n^\\n^^^\\n^^^\\n^^^\\n^-n 10\\n') == 'java\\njava\\njava\\npython\\npython\\npython main.py -n 10\\n'\n"
    },
    {
        "number": 3245,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''python\np^ main.py\n^ -n 10\n''') == 'python\\npython main.py\\npython main.py -n 10'\nassert solution('''python\np^ main.py\n^ -n 10\np^ main.py\np^ main.py\np^ main.py\n^ -n 10\n''') == 'python\\npython main.py\\npython main.py -n 10\\npython main.py\\npython main.py -n 10'\nassert solution('''python\np^ main.py\np^ main.py\np^ main.py\np^ main.py\np^ main.py\np^ main.py\np^ main.py\np^ main.py\n^ -n 10\n''') == 'python\\npython main.py\\npython main.py -n 10\\npython main.py\\npython main.py -n 10'\nassert solution('''python\np^ main.py\np^ main.py\np^ main.py\np^ main.py\np^ main.py\np^ main.py\np^ main.py\np^ main.py\np^ -n 10\n''') == 'python\\npython main.py\\npython main.py -n 10\\npython main.py\\npython main.py -n 10'\nassert solution('''python\np^ main.py\np^ main.py\np^ main.py\np^ main.py\np^ main.py\np^ main.py\np^ main.py\np^ main.py\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10\np^ -n 10"
    },
    {
        "number": 3245,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\"\"\") == \"\"\nassert solution(\"\"\"python\np^ main.py\n\"\"\") == \"python\"\nassert solution(\"\"\"python\np^ main.py\n\"\"\") == \"python\"\nassert solution(\"\"\"python\np^ main.py\n-n 10\n\"\"\") == \"python -n 10\"\n"
    },
    {
        "number": 3246,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"impossible\"\n"
    },
    {
        "number": 3246,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('hitehre') == 'impossible'\nassert solution('tihssnetnceemkaesprfecetsesne') == 'this sentence makes perfect sense'\nassert solution('thissentencemakesperfectsense') == 'this sentence makes perfect sense'\nassert solution('tihssnetnceemkaesprfecetsesneh') == 'impossible'\nassert solution('thistenacetousensetence') == 'impossible'\n"
    },
    {
        "number": 3246,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''tihssnetnceemkaesprfecetsesne\n5\nmakes\nperfect\nsense\nsentence\nthis\n''') == 'this sentence makes perfect sense'\nassert solution('''hitehre\n2\nthere\nhello\n''') == 'impossible'\nassert solution('''hitehre\n2\nthere\nhello\nhuhu\n''') == 'impossible'\nassert solution('''hitehre\n2\nthere\nhello\nhuhu\n''') == 'impossible'\nassert solution('''tihssnetnceemkaesprfecetsesne\n6\neats\npets\ntransport\neating\ntransport\neating\n''') == 'eats pets transport eat transport eat transport'\n"
    },
    {
        "number": 3246,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n'''\n\nfrom collections import Counter"
    },
    {
        "number": 3246,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('tihssnetnceemkaesprfecetsesne') == 'this sentence makes perfect sense'\nassert solution('hitehre') == 'impossible'\nassert solution('there') == 'impossible'\nassert solution('hello') == 'impossible'\nassert solution('this is an example') == 'impossible'\n"
    },
    {
        "number": 3246,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(open(\"test_input.txt\", \"r\").read()) == open(\"test_output.txt\", \"r\").read()\n"
    },
    {
        "number": 3246,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == output\n\n\"\"\"\n\nimport sys\n\nimport string"
    },
    {
        "number": 3246,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\ntihssnetnceemkaesprfecetsesne\n5\nmakes\nperfect\nsense\nsentence\nthis\n''') == \"this sentence makes perfect sense\"\nassert solution(\n'''\nhitehre\n2\nthere\nhello\n''') == \"impossible\"\nassert solution(\n'''\ngksgmlfyjhmmqnxjxqjxqvumqmkuvoxlz\n2\ngksgmlfyjhmmqnxjxqjxqvumqmkuvoxlz\ngksgmlfyjhmmqnxjxqjxqvumqmkuvoxlz\ngksgmlfyjhmmqnxjxqjxqvumqmkuvoxlz\n''') == \"impossible\"\nassert solution(\n'''\nhitehre\n2\nthere\nhello\n''') == \"impossible\"\nassert solution(\n'''\ntihssnetnceemkaesprfecetsesne\n0\n''') == \"impossible\"\n"
    },
    {
        "number": 3246,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(solution.read_input('''tihssnetnceemkaesprfecetsesne\n5\nmakes\nperfect\nsense\nsentence\nthis\n\nhitehre\n2\nthere\nhello''')) == 'this sentence makes perfect sense'\n\nassert solution(solution.read_input('''thissentencemakesperfectsense\n5\nthissentence\nthissentence\nthissentence\nthissentence\nthissentence''')) == 'this sentence makes perfect sense'\n\nassert solution(solution.read_input('''thissentence\n3\nthissentence\nthissentence\nthissentence''')) == 'impossible'\n\nassert solution(solution.read_input('''thissentence\n4\nthissentence\nthissentence\nthissentence\nthissentence\nthissentence\nthissentence\nthissentence\nthissentence''')) == 'impossible'\n\nassert solution(solution.read_input('''this\n2\nthis\nthis\nthis''')) == 'impossible'"
    },
    {
        "number": 3246,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('tihssnetnceemkaesprfecetsesne') == 'this sentence makes perfect sense'\nassert solution('hitehre') == 'impossible'\nassert solution('hitehre') == 'impossible'\nassert solution('tihehre') == 'impossible'\nassert solution('h') == 'impossible'\n"
    },
    {
        "number": 3247,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 2''') == ''\nassert solution('''2 2''') == ''\nassert solution('''2 3''') == ''\nassert solution('''3 2''') == ''\nassert solution('''2 2''') == ''\n"
    },
    {
        "number": 3247,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 2\n''') == '4'\nassert solution('''2 2\n''') == '16'\nassert solution('''10 10\n''') == '8435049362882341509'\nassert solution('''10 10\n''') == '8435049362882341509'\nassert solution('''3 4\n''') == '40'\n"
    },
    {
        "number": 3247,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2') == '4'\nassert solution('2 3') == '26'\nassert solution('3 2') == '64'\nassert solution('2 3') == '128'\nassert solution('2 3') == '256'\n"
    },
    {
        "number": 3247,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2') == '4'\nassert solution('2 2') == '16'\nassert solution('2 2') == '16'\nassert solution('2 2') == '16'\nassert solution('2 2') == '16'\n"
    },
    {
        "number": 3247,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '16'\n"
    },
    {
        "number": 3247,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2') == '4'\nassert solution('2 2') == '16'\n\"\"\"\n"
    },
    {
        "number": 3247,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2') == '4'\nassert solution('2 2') == '16'\n"
    },
    {
        "number": 3247,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2\\n') == '4'\nassert solution('2 2\\n') == '16'\n\nsolution()\n\n\"\"\"\n\nn,m = map(int,input().split())\n\ndp = [[0]*(m+1) for i in range(n+1)]\ndp[0][0] = 1\nfor i in range(1,n+1):\n    for j in range(1,m+1):\n        if j%2 == 0:\n            dp[i][j] = dp[i-1][j] + dp[i-1][j-1]\n        else:\n            dp[i][j] = dp[i-1][j]\n\nprint(dp[n][m])"
    },
    {
        "number": 3247,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"4\"\nassert solution(\"1 2\") == \"4\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 3247,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '16'\n"
    },
    {
        "number": 3248,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abcbab\\n2\\ncb\\ncbab\\n') == '2'\nassert solution('abcbab\\n2\\ncb\\ncbab\\n') == '2'\nassert solution('abab\\n2\\nbac\\nbaba\\n') == '4'\nassert solution('abab\\n2\\nbac\\nbaba\\n') == '4'\nassert solution('abcabc\\n2\\nbaa\\nabaa\\n') == '8'\n"
    },
    {
        "number": 3248,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n6\nabcbab\n2\ncb\ncbab\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n4\nabab\n2\nbac\nbaba\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3248,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\nabab\n2\nbac\nbaba''') == '4'\nassert solution('''5\nabcbab\n2\ncb\ncbab\n''') == '2'\nassert solution('''2\nabab\n2\nbac\nbaba''') == '4'\nassert solution('''2\nabab\n2\nbac\nbaba''') == '0'\nassert solution('''3\nabcbab\n2\ncb\ncbab\n''') == '2'\n"
    },
    {
        "number": 3248,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6\\nabcbab\\n2\\ncb\\ncbab\\n'\n                '2\\nbac\\nbaba\\n'\n                '2\\nbaa\\nbaba\\n') == '2\\n'\n\nprint('solution() passed!!\\n')"
    },
    {
        "number": 3248,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3248,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n6\nabcbab\n2\ncb\ncbab\n''') == '2'\nassert solution('''\n4\nabab\n2\nbac\nbaba\n''') == '4'\nassert solution('''\n6\nabcbcb\n2\nbac\nbaba\n''') == '0'\nassert solution('''\n1\na\n1\n''') == '1'\nassert solution('''\n4\nabcab\n2\nbac\nbaba\n''') == '0'\n"
    },
    {
        "number": 3248,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6\\nabcbab\\n2\\ncb\\ncbab\\n') == '2\\n'\nassert solution('4\\nabab\\n2\\nbac\\nbaba\\n') == '4\\n'\nassert solution('4\\nabab\\n2\\nbaa\\nbaa\\n') == '2\\n'\nassert solution('5\\nabcd\\n3\\nababab\\n') == '4\\n'\nassert solution('6\\nabcbab\\n2\\ncb\\ncbab\\n') == '4\\n'\n"
    },
    {
        "number": 3248,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abab') == '4'\nassert solution('abcbab') == '2'\nassert solution('abc') == '0'\nassert solution('abcb') == '0'\nassert solution('abcabc') == '0'\n"
    },
    {
        "number": 3248,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6\\nabcbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb"
    },
    {
        "number": 3248,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6\nabcbab\n2\ncb\ncbab\n''') == '2'\nassert solution('''4\nabab\n2\nbac\nbaba\n''') == '4'\nassert solution('''3\na\na\nb\n''') == '0'\nassert solution('''2\nba\n''') == '1'\nassert solution('''2\nba\na\n''') == '1'\n"
    },
    {
        "number": 3249,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3249,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\") == \"6\\n85\\n90\\n95\\n100\\n105\\n110\\n115\\n120\\n125\\n130\\n135\\n140\\n145\\n150\\n155\\n160\\n165\\n170\\n175\\n180\\n185\\n190\\n195\\n200\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\") == \"6\\n85\\n90\\n95\\n100\\n105\\n110\\n115\\n120\\n125\\n130\\n135\\n140\\n145\\n150\\n155\\n160\\n165\\n170\\n175\\n180\\n185\\n190\\n195\\n200\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n"
    },
    {
        "number": 3249,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('50\\n4\\n110 10\\n80 10\\n80 0\\n110 0') == '6\\n85\\n90\\n95\\n100\\n105\\n'\nassert solution('24\\n3\\n10 10\\n30 10\\n20 20\\n') == '4\\n17.071067\\n20\\n22.928932\\n'\nprint(solution(stdin))\n"
    },
    {
        "number": 3249,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('50\\n4\\n110 10\\n80 10\\n80 0\\n110 0\\n') == '6\\n85\\n90\\n95\\n100\\n105'\n\nassert solution('24\\n3\\n10 10\\n30 10\\n20 20\\n') == '4\\n17.071067\\n20\\n22.928932'\n\"\"\"\n"
    },
    {
        "number": 3249,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''50\n4\n110 10\n80 10\n80 0\n110 0''') == '6\\n85\\n90\\n95\\n100\\n105'\n\nassert solution('''24\n3\n10 10\n30 10\n20 20\nSample Output 2:\n4\n17.071067\n20\n22.928932''') == '4\\n17.071067\\n20\\n22.928932'\n\nassert solution('''30\n5\n11 11\n20 13\n19 0\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15 1\n15"
    },
    {
        "number": 3249,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n50\n4\n110 10\n80 10\n80 0\n110 0\n''') == '6\\n85\\n90\\n95\\n100\\n105'\nassert solution('''\n1\n3\n10 10\n30 10\n20 20\n''') == '4\\n17.071067\\n20\\n22.928932'\nassert solution('''\n10\n2\n-100 -100\n100 100\n-50 50\n50 50\n100 100\n-100 100\n-100 -100\n-100 -100\n''') == '5\\n8.2142675\\n35\\n53.5'\nassert solution('''\n11\n3\n-10 -10\n-20 -20\n-50 -50\n-100 -100\n-50 -50\n-50 -50\n-50 -50\n-100 -100\n-100 -100\n''') == '6\\n8.2142675\\n35\\n53.5'\nassert solution('''\n100\n1\n-100 -100\n100 100\n-50 50\n50 50\n100 100\n-100 100\n-100 -100\n-100 -100\n''') == '1\\n100.0'\n"
    },
    {
        "number": 3249,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''50''') == '6'\nassert solution('''24''') == '4'\nassert solution('''40''') == '0'\nassert solution('''50''') == '6'\nassert solution('''48''') == '4'\n"
    },
    {
        "number": 3249,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''50''') == '6'\nassert solution('''24''') == '4'\nassert solution('''10''') == '1'\nassert solution('''3''') == '4'\nassert solution('''10''') == '1'\n"
    },
    {
        "number": 3249,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('50\\n4\\n110 10\\n80 10\\n80 0\\n110 0') == '6\\n85\\n90\\n95\\n100\\n105'\nassert solution('24\\n3\\n10 10\\n30 10\\n20 20\\n') == '4\\n17.071067\\n20\\n22.928932'\nassert solution('24\\n3\\n10 10\\n30 10\\n20 20\\n') == '4\\n17.071067\\n20\\n22.928932'\nassert solution('24\\n3\\n10 10\\n30 10\\n20 20\\n') == '4\\n17.071067\\n20\\n22.928932'\nassert solution('24\\n3\\n10 10\\n30 10\\n20 20\\n') == '4\\n17.071067\\n20\\n22.928932'\n"
    },
    {
        "number": 3249,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('50\\n4\\n110 10\\n80 10\\n80 0\\n110 0\\n') == '6\\n85\\n90\\n95\\n100\\n105\\n'\nassert solution('24\\n3\\n10 10\\n30 10\\n20 20\\n') == '4\\n17.071067\\n20\\n22.928932\\n'\n\n-----Alternate Solutions (Shorter)-----\n"
    },
    {
        "number": 3250,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 11') == 'yes'\nassert solution('10 7') == 'yes'\nassert solution('1000000 111111') == 'no'\nassert solution('100 10') == 'no'\nassert solution('1000000 111111 11') == 'no'\n"
    },
    {
        "number": 3250,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"yes\"\nassert solution(stdin) == \"no\"\nassert solution(stdin) == \"yes\"\nassert solution(stdin) == \"yes\"\nassert solution(stdin) == \"yes\"\n"
    },
    {
        "number": 3250,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10 11') == 'yes'\nassert solution('10 7') == 'yes'\nassert solution('5 7') == 'no'\nassert solution('100 79') == 'no'\nassert solution('939 71') == 'no'\n"
    },
    {
        "number": 3250,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    '10 11'\n) == 'yes'\nassert solution(\n    '10 7'\n) == 'yes'\nassert solution(\n    '10 29'\n) == 'no'\nassert solution(\n    '11 7'\n) == 'no'\nassert solution(\n    '1000000000 1000000000'\n) == 'no'\n"
    },
    {
        "number": 3250,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3250,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 11') == 'yes'\nassert solution('10 7') == 'yes'\nassert solution('30 15') == 'yes'\nassert solution('10 7') == 'no'\nassert solution('10 100') == 'yes'\n"
    },
    {
        "number": 3250,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n'''\n"
    },
    {
        "number": 3250,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10 11') == 'yes'\nassert solution('10 7') == 'yes'\nassert solution('2 3') == 'no'\nassert solution('3 4') == 'no'\nassert solution('5 6') == 'no'\n"
    },
    {
        "number": 3250,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"5 7\") == \"yes\"\nassert solution(\"10 7\") == \"yes\"\nassert solution(\"10 2\") == \"no\"\nassert solution(\"10 3\") == \"no\"\n"
    },
    {
        "number": 3250,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"no\"\nassert solution(\"3 4\") == \"yes\"\nassert solution(\"1 6\") == \"no\"\nassert solution(\"10 11\") == \"yes\"\nassert solution(\"50 65\") == \"no\"\n"
    },
    {
        "number": 3251,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 4\\n2 5\\n1 6\") == 3\nassert solution(\"5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40\\n\") == 3\n"
    },
    {
        "number": 3251,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3251,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\\n3\\n4\") == \"1\\n3\\n4\"\nassert solution(\"2\\n2\\n3\\n4\") == \"3\\n4\"\nassert solution(\"3\\n2\\n3\\n4\") == \"1\"\nassert solution(\"3\\n2\\n3\\n5\") == \"3\\n5\"\nassert solution(\"3\\n2\\n3\\n4\\n5\") == \"1\"\n"
    },
    {
        "number": 3251,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0\\n\") == 0\nassert solution(\"1\\n\") == 1\nassert solution(\"2\\n\") == 2\nassert solution(\"3\\n\") == 3\nassert solution(\"4\\n\") == 4\n"
    },
    {
        "number": 3251,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1\\n\") == \"1\\n\"\nassert solution(\"3\\n3 4\\n2 5\\n1 6\\n\") == \"3\\n1 6\\n2 5\\n3 4\\n\"\nassert solution(\"5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40\\n\") == \"3\\n10 60\\n30 50\\n30 40\\n\"\nassert solution(\"5\\n30 40\\n10 30\\n10 40\\n10 50\\n10 60\\n30 40\\n\") == \"4\\n30 40\\n10 50\\n10 60\\n30 40\\n\"\nassert solution(\"5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40\\n30 40\\n\") == \"3\\n10 60\\n30 50\\n30 40\\n\"\n"
    },
    {
        "number": 3251,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n3 4\n2 5\n1 6''') == '3'\nassert solution('''5\n10 30\n20 40\n30 50\n10 60\n30 40''') == '3'\nassert solution('''8\n8 9\n3 4\n7 8\n7 9\n1 2\n1 2\n1 2\n1 2\n1 2''') == '4'\nassert solution('''2\n1 10\n1 10''') == '1'\nassert solution('''3\n1 10\n1 10\n1 10''') == '2'\n"
    },
    {
        "number": 3251,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4') == '3'\nassert solution('10') == '3'\nassert solution('3') == '3'\nassert solution('3 3') == '3'\nassert solution('5') == '3'\n"
    },
    {
        "number": 3251,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '100'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '102'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '103'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '104'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '105'\n"
    },
    {
        "number": 3251,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"3\n3 4\n2 5\n1 6\"\"\") == \"3\\n1 6\\n2 5\\n3 4\"\nassert solution(\"\"\"5\n10 30\n20 40\n30 50\n10 60\n30 40\"\"\") == \"3\\n10 60\\n30 50\\n30 40\"\nassert solution(\"\"\"1\n123\"\"\") == \"1\"\nassert solution(\"\"\"10\n1000000\"\"\") == \"10\"\nassert solution(\"\"\"100000\n1000000\"\"\") == \"1000000\"\n"
    },
    {
        "number": 3251,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n2 3\\n3 4') == '3\\n2 3\\n3 4'\nassert solution('5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40\\n') == '3\\n10 60\\n30 50\\n30 40'\nassert solution('1\\n1\\n1\\n1\\n1\\n') == '1'\nassert solution('2\\n2\\n2\\n2\\n2\\n2\\n2\\n') == '2'\nassert solution('3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n') == '3'\n"
    },
    {
        "number": 3252,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3252,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 1\n10 10 5''') == '5836'\nassert solution('''5 2\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16''') == '1828'\nassert solution('''5 3\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16''') == '2258'\nassert solution('''5 4\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16''') == '3758'\nassert solution('''5 5\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16''') == '3858'\n"
    },
    {
        "number": 3252,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3252,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 1\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16''') == '5836'\nassert solution('''5 2\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16''') == '1828'\n"
    },
    {
        "number": 3252,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 1\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16''') == '5836'\nassert solution('''5 1\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16''') == '1828'\nassert solution('''5 5\n2 3 4\n3 4 4\n4 4 4\n4 4 4\n4 4 4\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3''') == '0'\nassert solution('''5 5\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3''') == '0'\nassert solution('''10 1\n1 1 1\n2 2 2\n3 3 3\n4 4 4\n5 5 5\n6 6 6\n7 7 7\n8 8 8\n9 9 9\n10 10 10''') == '0'\n"
    },
    {
        "number": 3252,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 1\n10 10 5''') == '5836'\nassert solution('''5 2\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16''') == '1828'\nassert solution('''7 2\n6 7 7\n4 4 1\n2 2 3\n3 3 4\n1 1 3\n2 2 3\n1 1 1''') == '819'\nassert solution('''9 3\n4 3 2\n3 3 2\n2 2 2\n3 1 3\n2 2 3\n1 1 2\n3 3 2\n2 1 3\n3 3 1''') == '1492'\nassert solution('''9 4\n4 3 2\n3 3 2\n2 2 2\n3 1 3\n2 2 3\n1 1 2\n3 3 2\n2 1 3\n3 3 1''') == '2401'\n"
    },
    {
        "number": 3252,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"5 1\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16\"\"\"\n) == \"5836\"\n\nassert solution(\n    \"\"\"5 2\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16\"\"\"\n) == \"1828\"\n"
    },
    {
        "number": 3252,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 1\n10 10 5''') == '5836'\nassert solution('''5 2\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16''') == '1828'\nassert solution('''5 4\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16''') == '9560'\n\nprint(solution('''4 4\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16'''))\n"
    },
    {
        "number": 3252,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == \"1828\"\n"
    },
    {
        "number": 3252,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 1\n10 10 5''') == '5836'\nassert solution('''5 2\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16''') == '1828'\nassert solution('''5 5\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16''') == '0'\nassert solution('''5 3\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16''') == '0'\nassert solution('''5 3\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16''') == '0'\n"
    },
    {
        "number": 3253,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '50'"
    },
    {
        "number": 3253,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n7 2401 3299 0\n6 2401 2399 0\n2 750 750 99''') == '50'\nassert solution('''3\n7 100 200 200\n8 100 300 200\n9 100 400 200''') == 'impossible'\nassert solution('''3\n5 5 9 9 9\n4 5 9 9 9\n1 4 9 9 9\n2 4 9 9 9\n3 4 9 9 9\n4 5 9 9 9''') == 'impossible'\nassert solution('''3\n8 2525 3329 0\n7 2525 2399 0\n2 2525 0 0\n1 2525 0 0\n1 0 0 0\n1 0 0 0''') == 'impossible'\nassert solution('''3\n8 2525 3329 0\n7 2525 2399 0\n2 2525 0 0\n1 2525 0 0\n1 0 0 0\n1 0 0 0\n1 0 0 0\n2 2525 0 0''') == 'impossible'\n"
    },
    {
        "number": 3253,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == ''\nassert solution(stdin) == ''\nassert solution(stdin) == ''\nassert solution(stdin) == ''\nassert solution(stdin) == ''\n"
    },
    {
        "number": 3253,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 0 0 100') == 'impossible'\nassert solution('0 0 1 99') == 'impossible'\nassert solution('0 0 2 100') == 'impossible'\nassert solution('0 0 3 100') == 'impossible'\nassert solution('0 0 4 100') == 'impossible'\n"
    },
    {
        "number": 3253,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200') == '50'\nassert solution('3\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99') == 'impossible'\nassert solution('3\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200') == 'impossible'\nassert solution('7\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200') == 'impossible'\nassert solution('7\\n8 100 300 200\\n9 100 400 200') == 'impossible'\n"
    },
    {
        "number": 3253,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1\\n2\\n3') == 'impossible'\nassert solution('1\\n1\\n1\\n2\\n3') == 'impossible'\nassert solution('3\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99\\n4\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99') == '50'\nassert solution('3\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200') == 'impossible'\nassert solution('3\\n7 1000 22000 0\\n8 1000 22000 0\\n9 1000 22000 0') == 'impossible'\n"
    },
    {
        "number": 3253,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"impossible\""
    },
    {
        "number": 3253,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99') == '50'\nassert solution('1\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200') == 'impossible'\nassert solution('2\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200') == 'impossible'\nassert solution('3\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200') == 'impossible'\nassert solution('4\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200') == 'impossible'\n"
    },
    {
        "number": 3253,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    3\n    7 2401 3299 0\n    6 2401 2399 0\n    2 750 750 99\n    \"\"\") == '50'\n\nassert solution(\n    \"\"\"\n    5\n    7 100 200 200\n    8 100 300 200\n    9 100 400 200\n    4 100 200 100\n    3 100 500 100\n    \"\"\") == 'impossible'\n\nassert solution(\n    \"\"\"\n    6\n    1 500 100 100 1000 400\n    1 800 150 50 100 200\n    1 550 450 100 50 50\n    1 600 150 100 100 1000\n    1 800 150 50 100 200\n    1 550 450 100 50 50\n    1 600 150 100 100 1000\n    \"\"\") == '3'\n\nassert solution(\n    \"\"\"\n    6\n    1 500 100 100 1000 400\n    1 800 150 50 100 200\n    1 550 450 100 50 50\n    1 600 150 100 100 1000\n    1 800 150 50 100 200\n    1 550 450 100 50 50\n    1 600 150 100 100 1000\n    \"\"\") == '3'\n\nassert solution(\n    \"\"\"\n    6\n    1 500 100 100 1000 400\n    1 800 150 50 100 200\n    1 550 450 100 50 50\n    1 600 150 100 100 1000\n    1 800 150 50 100 200\n    1 550 450 100 50 50\n    1 600 150 100 100 1000\n    \"\"\") == 'impossible'"
    },
    {
        "number": 3253,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n3\n7 2401 3299 0\n6 2401 2399 0\n2 750 750 99\n\"\"\"\n) == '50'\nassert solution(\n\"\"\"\n3\n7 100 200 200\n8 100 300 200\n9 100 400 200\n\"\"\"\n) == 'impossible'\n"
    },
    {
        "number": 3254,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1.5\") == \"0 0 0 1 1\"\nassert solution(\"4.5\") == \"0 0 0 1 1\"\nassert solution(\"5.0\") == \"0 0 0 1 1\"\nassert solution(\"10.0\") == \"0 0 0 1 1\"\nassert solution(\"1.5\") == \"0 0 0 1 1\"\n"
    },
    {
        "number": 3254,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('0') == '0 0 0 0 1'\nassert solution('1.0') == '0 0 0 1 1'\nassert solution('5.0') == '0 0 0 1 1'\nassert solution('5.0000000001') == '0 0 0 1 1'\n"
    },
    {
        "number": 3254,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5.0') == '0 0 0 0 1'\nassert solution('4.5') == '0 0 0 1 1'\n"
    },
    {
        "number": 3254,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 3254,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5.0''') == '''0 0 0 0 1'''\nassert solution('''4.5''') == '''0 0 0 1 1'''\nassert solution('''0.5''') == '''0 0 0 0 1'''\nassert solution('''1.5''') == '''0 0 0 0 1'''\nassert solution('''2.5''') == '''0 0 0 0 1'''\n"
    },
    {
        "number": 3254,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5.0\") == \"0 0 0 0 1\"\nassert solution(\"4.5\") == \"0 0 0 1 1\"\nprint(\"All cases passed!\")\n"
    },
    {
        "number": 3254,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4.5\") == \"0 0 0 1 1\"\nassert solution(\"5.0\") == \"0 0 0 1 1\"\nassert solution(\"6.0\") == \"0 0 0 2 2\"\nassert solution(\"7.0\") == \"0 0 0 2 2\"\nassert solution(\"8.0\") == \"0 0 0 3 3\"\n"
    },
    {
        "number": 3254,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == '0 0 0 0 1'\nassert solution(input()) == '0 0 0 1 1'\nassert solution(input()) == '0 0 0 1 1'\nassert solution(input()) == '0 0 0 1 1'\nassert solution(input()) == '0 0 0 1 1'\n"
    },
    {
        "number": 3254,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5.0\") == \"0 0 0 0 1\"\nassert solution(\"4.5\") == \"0 0 0 1 1\"\n\"\"\""
    },
    {
        "number": 3254,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3255,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''1 7 8 2 6 4 3 5'''\n) == '8', '8'\nassert solution(\n'''1 7 8 2 6 4 3 5'''\n) == '3', '3'\nassert solution(\n'''8 2 1'''\n) == '3', '3'\nassert solution(\n'''8 3 1'''\n) == '8', '8'\nassert solution(\n'''8 3 2'''\n) == '8', '8'\n"
    },
    {
        "number": 3255,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n\"\"\"\n\n\"\"\"\nSolution notes:\n\n\"\"\"\n"
    },
    {
        "number": 3255,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 8 4\\n1 7 8 2 6 4 3 5') == '8'\nassert solution('4 1 5\\n1 7 8 2 6 4 3 5') == '4'\nassert solution('3 2 3\\n1 7 8 2 6 4 3 5') == '3'\nassert solution('3 1 3\\n1 7 8 2 6 4 3 5') == '3'\nassert solution('1 1 1\\n1 7 8 2 6 4 3 5') == '1'\n"
    },
    {
        "number": 3255,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin[0:-1]"
    },
    {
        "number": 3255,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''8 2 1\n1 7 8 2 6 4 3 5''') == '8'\nassert solution('''8 3 1\n1 7 8 2 6 4 3 5''') == '8'\nassert solution('''8 3 4\n1 7 8 2 6 4 3 5''') == '4'\nassert solution('''8 2 2\n1 7 8 2 6 4 3 5''') == '3'\nassert solution('''8 3 1\n1 7 8 2 6 4 3 5''') == '8'\n"
    },
    {
        "number": 3255,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 1 1') == '3'\nassert solution('8 3 1') == '8'\nassert solution('8 2 1') == '3'\nassert solution('8 2 1') == '3'\nassert solution('8 2 1') == '3'\n"
    },
    {
        "number": 3255,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3255,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\") == \"8\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\") == \"3\"\n\nimport sys\nassert sys.getsizeof(solution(sys.stdin.read())) <= 10240\n\"\"\"\n"
    },
    {
        "number": 3255,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\nprint(expected)\n\"\"\""
    },
    {
        "number": 3255,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8 3 1') == '8'\nassert solution('1 3 2') == '2'\nassert solution('4 4 3 2 1') == '4'"
    },
    {
        "number": 3256,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 2\\n2 3 4 1') == '3'\nassert solution('6 3\\n2 2 2 4 4 4') == '4'\nassert solution('6 3\\n2 2 2 4 4 4') == '4'\nassert solution('6 3\\n2 2 2 4 4 4') == '4'\nassert solution('6 3\\n2 2 2 4 4 4') == '4'\n"
    },
    {
        "number": 3256,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 2\n2 3 4 1''') == '3'\nassert solution('''6 3\n2 2 2 4 4 4''') == '4'\nassert solution('''10 10\n2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10''') == '10'\nprint('Passed all test cases!')"
    },
    {
        "number": 3256,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n2 3 4 1\\n\") == \"3\"\nassert solution(\"6 3\\n2 2 2 4 4 4\\n\") == \"4\"\nassert solution(\"6 5\\n2 2 2 4 4 4\\n\") == \"2\"\n"
    },
    {
        "number": 3256,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 3 4 1\") == \"3\"\nassert solution(\"2 3 4 1\") == \"3\"\nassert solution(\"2 3 4 1\") == \"3\"\nassert solution(\"2 3 4 1\") == \"3\"\nassert solution(\"2 3 4 1\") == \"3\"\n"
    },
    {
        "number": 3256,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3256,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 2') == '3'\nassert solution('6 3') == '4'\nassert solution('6 5') == '4'\nassert solution('6 8') == '4'\nassert solution('6 9') == '5'\n"
    },
    {
        "number": 3256,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 2') == '3'\nassert solution('6 3') == '4'\nassert solution('2 2 2 4 4 4') == '3'\nassert solution('2 2 2 4 4 4 5') == '4'\nassert solution('2 2 2 4 4 4 5 2') == '3'\n"
    },
    {
        "number": 3256,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 2\") == \"3\"\nassert solution(\"6 3\") == \"4\"\nassert solution(\"4 3\") == \"2\"\nassert solution(\"5 2\") == \"1\"\nassert solution(\"6 2\") == \"2\"\n"
    },
    {
        "number": 3256,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 2\\n2 3 4 1\\n') == '3'\nassert solution('6 3\\n2 2 2 4 4 4\\n') == '4'\nassert solution('6 3\\n2 2 2 4 4 4\\n') == '4'\nassert solution('6 3\\n2 2 2 4 4 4\\n') == '4'\nassert solution('6 3\\n2 2 2 4 4 4\\n') == '4'\n"
    },
    {
        "number": 3256,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2') == '4'\nassert solution('1 2') == '3'\nassert solution('1 1 1') == '3'\nassert solution('1 2 3 4 5 6 7 8 9') == '6'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '7'\n"
    },
    {
        "number": 3257,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1 1.732050') == '1.732050808'\nassert solution('1 1 3.0') == '-1'\nprint(solution('1 1 1.732050'))\nprint(solution('1 1 3.0'))\nprint(solution('1 1 1.732050808'))\nprint(solution('1 1 3.0'))\n\n-----\n\n[1, 1, 1.732050808]\n[1, 1, 3.0]\n[1, 1, 1.732050808]\n[1, 1, 3.0]"
    },
    {
        "number": 3257,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1 1.732050') == '1.732050808'\nassert solution('1 1 3.0') == '-1'\nassert solution('1 1 0.0') == '-1'\nassert solution('1 1 2.0') == '-1'\nassert solution('1 1 3.0') == '1.732050808'\n"
    },
    {
        "number": 3257,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1 1.732050') == '1.732050808'\nassert solution('1 1 3.0') == '-1'\nassert solution('1 2 1.0') == '-1'\nassert solution('1 1 1.0') == '1.0'\nassert solution('1 1 1.0') == '1.0'\n"
    },
    {
        "number": 3257,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1 1.732050') == '1.732050808'\nassert solution('1 1 3.0') == '-1'\nassert solution('-1') == '-1'\nprint(\"Tests passed\")\n"
    },
    {
        "number": 3257,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3257,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1 1.732050') == '1.732050808'\nassert solution('1 1 3.0') == '-1'"
    },
    {
        "number": 3257,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1 1.732050') == '1.732050808'\nassert solution('1 1 3.0') == '-1'\nassert solution('1 2 2.902') == '3.14159265'\nassert solution('2 2 3.0') == '-1'\nassert solution('1 2 2.902') == '-1'\n"
    },
    {
        "number": 3257,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    stdin='1 1 1.732050'\n) == '1.732050808'\n\nassert solution(stdin='1 1 3.0') == '-1'\nassert solution(stdin='1 1 2.0') == '1.293593'\nassert solution(stdin='0 0 0.0') == '-1'\nassert solution(stdin='0 0 2.0') == '1.575878'\n"
    },
    {
        "number": 3257,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1 1.732050') == '1.732050808'\nassert solution('1 1 3.0') == '-1'\nassert solution('1 1 3.0000001') == '-1'\nassert solution('1 1 3.0000000001') == '1.732050808'\nassert solution('1 1 3.00000001000') == '-1'\n"
    },
    {
        "number": 3257,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1 1.732050') == '1.732050808'\nassert solution('1 1 3.0') == '-1'\nassert solution('1 1 3.14159') == '-1'\nassert solution('1 1 -3.14159') == '-1'\nassert solution('1 1 0.0') == '-1'\n"
    },
    {
        "number": 3258,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n3 4 2\\n.75\\n') == '2.4999999987500003'\nassert solution('2\\n0 100 10\\n0 -100 100\\n.80\\n') == '9.999999999000002'\n"
    },
    {
        "number": 3258,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1\n3 4 2\n.75\n''') == '2.4999999987500003'\nassert solution('''2\n0 100 10\n0 -100 100\n.80\n''') == '9.999999999000002'\nassert solution('''1\n3 4 2\n3 4 4 2\n1\n''') == '7.5'\nassert solution('''1\n3 4 2\n-3 4 4 2\n1\n''') == '6.5'\nassert solution('''1\n3 4 2\n-3 4 -4 2\n1\n''') == '4.0'\n"
    },
    {
        "number": 3258,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1\n2 3 4\n.8\n''') == '2.4999999987500003'\nassert solution('''2\n0 100 10\n0 -100 100\n.8\n''') == '9.999999999000002'\nassert solution('''2\n0 100 10\n0 -100 100\n.8\n''') == '9.999999999000002'\nassert solution('''2\n1 2 2\n0 1 1\n.99\n''') == '0'\nassert solution('''2\n1 2 2\n-1 -1 1\n.99\n''') == '2'\n"
    },
    {
        "number": 3258,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1\n2 3 4\n0 -100 100\n0.80''') == '2.4999999987500003'\nassert solution('''2\n0 100 10\n0 -100 100\n0.80''') == '9.999999999000002'\nassert solution('''3\n0 100 10\n0 -100 100\n0.80\n0.90''') == '11.9000000024999988'\nassert solution('''4\n0 100 10\n0 -100 100\n0.80\n0.90\n0.80''') == '18.1000000036999934'\nassert solution('''5\n0 100 10\n0 -100 100\n0.80\n0.90\n0.80\n0.90''') == '24.299999953600005'\n"
    },
    {
        "number": 3258,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1\n3 4 2\n.75\n''') == '2.4999999987500003'\nassert solution('''2\n0 100 10\n0 -100 100\n.80\n''') == '9.999999999000002'\nassert solution('''3\n3 4 1\n-1 2 3\n.25\n''') == '3.7999999999999998'\nassert solution('''2\n3 4 1\n-2 -2 -1\n.80\n''') == '2.4999999999000002'\nassert solution('''1\n-1 -1 -1\n.99\n''') == '0.0'\n"
    },
    {
        "number": 3258,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''1\n3 4 2\n.75'''\n) == '2.4999999987500003'\nassert solution(\n'''2\n0 100 10\n0 -100 100\n.80'''\n) == '9.999999999000002'\nassert solution(\n'''3\n0 0 0\n-1 -1 1\n.5'''\n) == '1.9999999991000002'\nassert solution(\n'''4\n0 0 0\n0 -1 0\n0 0 1\n.5'''\n) == '1.9999999991000002'\nassert solution(\n'''5\n0 0 0\n0 -1 0\n0 0 1\n0 0 0\n.5'''\n) == '1.9999999991000002'"
    },
    {
        "number": 3258,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n1\n3 4 2\n.75\n''') == '2.4999999987500003'\nassert solution('''\n1\n3 4 2\n0 100 10\n0 -100 100\n.80\n''') == '9.999999999000002'\nassert solution('''\n1\n3 4 2\n0 100 10\n0 -100 100\n.80\n''') == '9.999999999000002'\nassert solution('''\n1\n3 4 2\n0 100 10\n0 -100 100\n.99\n''') == '9.99999999976'\nassert solution('''\n1\n3 4 2\n0 100 10\n0 -100 100\n.99\n''') == '9.99999999976'\n"
    },
    {
        "number": 3258,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1\n2 3 4\n0 -100 100\n.80''') == '2.4999999987500003'\nassert solution('''1\n2 3 4\n0 -100 100\n.75''') == '9.999999999000002'\nassert solution('''1\n2 3 4\n0 -100 100\n.99''') == '0.0'\nassert solution('''1\n3 4 5\n-10 -10 -10\n1 1 1\n.85''') == '0.0'\nassert solution('''1\n3 4 5\n-10 -10 -10\n1 1 1\n.99''') == '0.0'\n"
    },
    {
        "number": 3258,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3258,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(open(\"test_data\").read()) == \"3.4499999999999999\"\nprint(solution(open(\"input\").read()))"
    },
    {
        "number": 3259,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 3\n2 1 6\n1 1 5 1 2\n2 1 6\n''') == '0\\n3\\n'\nassert solution('''4 5\n1 1 4 3 4\n2 1 1\n2 2 2\n2 3 3\n2 4 4\n''') == '3\\n2\\n1\\n0\\n'\nassert solution('''6 6\n2 1 6\n1 1 5 1 2\n2 1 6\n3 2 5 4\n2 1 6\n''') == '6\\n5\\n4\\n3\\n2\\n'\nassert solution('''6 6\n2 1 6\n1 1 5 1 2\n2 1 6\n3 2 5 4\n2 1 6\n1 1 5 1 2\n2 1 6\n3 2 5 4\n2 1 6\n''') == '6\\n5\\n4\\n3\\n2\\n'\nassert solution('''6 6\n2 1 6\n1 1 5 1 2\n2 1 6\n3 2 5 4\n2 1 6\n1 1 5 1 2\n2 1 6\n3 2 5 4\n2 1 6\n''') == '6\\n5\\n4\\n3\\n2\\n'\n"
    },
    {
        "number": 3259,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"6 3\n2 1 6\n1 1 5 1 2\n2 1 6\n\"\"\") == \"\"\"0\n3\n\"\"\"\nassert solution(\n\"\"\"4 5\n1 1 4 3 4\n2 1 1\n2 2 2\n2 3 3\n2 4 4\n\"\"\") == \"\"\"3\n2\n1\n0\n\"\"\"\nassert solution(\n\"\"\"9 7\n1 1 4 3 4 5 6 7 8 9\n2 1 1\n2 2 2\n2 3 3\n2 4 4\n2 5 5\n2 6 6\n2 7 7\n2 8 8\n2 9 9\n\"\"\") == \"\"\"3\n2\n1\n0\n\"\"\"\nassert solution(\n\"\"\"7 2\n1 1 4 3 4 5 6 7\n2 1 1\n2 2 2\n2 3 3\n2 4 4\n2 5 5\n2 6 6\n2 7 7\n2 8 8\n2 9 9\n\"\"\") == \"\"\"3\n2\n1\n0\n\"\"\"\nassert solution(\n\"\"\"12 12\n1 1 4 3 4 5 6 7 8 9 10 11 12\n2 1 1\n2 2 2\n2 3 3\n2 4 4\n2 5 5\n2 6 6\n2 7 7\n2 8 8\n2 9 9\n2 10 10\n2 11 11\n2 12 12\n\"\"\") == \"\"\"3\n4\n5\n2\n\"\"\"\n"
    },
    {
        "number": 3259,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output\n\"\"\"\n"
    },
    {
        "number": 3259,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6 3\n2 1 6\n1 1 5 1 2\n2 1 6''') == '0\\n3\\n'\nassert solution('''4 5\n1 1 4 3 4\n2 1 1\n2 2 2\n2 3 3\n2 4 4''') == '3\\n2\\n1\\n0\\n'\nassert solution('''6 3\n2 1 6\n1 1 5 1 2\n2 1 6\n1 1 5 1 2\n2 1 6''') == '0\\n3\\n'\n'''\na, b = [int(x) for x in input().split()]\nprint(bin(a%b).count('1'))\n\nN, Q = [int(x) for x in input().split()]\nfor q in range(Q):\n    L, R = [int(x) for x in input().split()]\n    print(bin(2*(R-L+1)%N).count('1'))\n'''"
    },
    {
        "number": 3259,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 5\\n2 3\\n2 1\\n2 1\\n2 1\\n\") == \"0\\n3\\n\"\nassert solution(\"1 1\\n2 2\\n2 3\\n2 4\\n\") == \"3\\n2\\n1\\n0\\n\"\nassert solution(\"1 1\\n2 2\\n2 3\\n2 4\\n\") == \"3\\n2\\n1\\n0\\n\"\nassert solution(\"1 1\\n2 2\\n2 3\\n2 4\\n\") == \"3\\n2\\n1\\n0\\n\"\nassert solution(\"1 1\\n2 2\\n2 3\\n2 4\\n\") == \"3\\n2\\n1\\n0\\n\"\n"
    },
    {
        "number": 3259,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"0\"\nassert solution(\"1 1 5 1 2\") == \"3\"\nassert solution(\"1 1 5 1 2\") == \"3\"\nassert solution(\"2 1 6\") == \"0\"\nassert solution(\"1 1 5 1 2\") == \"3\"\n"
    },
    {
        "number": 3259,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"6 3\\n2 1 6\\n1 1 5 1 2\\n2 1 6\") == \"0\\n3\\n\"\nassert solution(\"4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\") == \"3\\n2\\n1\\n0\\n\"\nassert solution(\"5 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\\n2 5 5\") == \"3\\n2\\n1\\n0\\n\"\nassert solution(\"6 1 6\\n1 1 5 1 2\") == \"0\\n3\\n\"\nassert solution(\"3 2\\n1 1 2\\n1 2 1\") == \"2\\n\"\n"
    },
    {
        "number": 3259,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"2 1 6\") == \"3\"\nassert solution(\"1 1 5 1 2\") == \"3\"\nassert solution(\"2 1 6\") == \"3\"\nassert solution(\"3 3 2 4 4\") == \"3\"\n"
    },
    {
        "number": 3259,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1 5 1 2\\n1 1 5 1 2\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\\n') == '0\\n3\\n1\\n0\\n'\nassert solution('2 1 6\\n1 1 5 1 2\\n2 1 6\\n') == '3\\n2\\n1\\n0\\n'\nassert solution('1 1 6\\n1 1 5 1 2\\n2 1 6\\n') == '0\\n3\\n1\\n0\\n'\nassert solution('1 1 6\\n1 1 5 1 2\\n2 1 6\\n2 1 6\\n') == '3\\n2\\n1\\n0\\n'\nassert solution('1 1 6\\n1 1 5 1 2\\n2 1 6\\n2 1 6\\n2 1 6\\n') == '3\\n2\\n1\\n0\\n'\n"
    },
    {
        "number": 3259,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n6 3\n2 1 6\n1 1 5 1 2\n2 1 6\n\"\"\") == \"\"\"\n0\n3\n\"\"\"\n\nassert solution(\n\"\"\"\n8 2\n1 1 4 3 4 5 6 7 8\n2 1 1\n2 2 2\n2 3 3\n2 4 4\n2 5 5\n2 6 6\n2 7 7\n2 8 8\n\"\"\") == \"\"\"\n3\n1\n2\n0\n\"\"\"\n\nassert solution(\n\"\"\"\n1 0\n1 0\n\"\"\") == \"\"\"\n0\n0\n\"\"\"\n\nassert solution(\n\"\"\"\n1 1\n1 0\n\"\"\") == \"\"\"\n0\n0\n\"\"\"\n\nassert solution(\n\"\"\"\n1 1\n1 0\n1 1\n\"\"\") == \"\"\"\n2\n1\n1\n0\n\"\"\""
    },
    {
        "number": 3260,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 7 1000000007') == '4'\n\"\"\"\n\nn, k, p = map(int, stdin.strip().split(' '))\n"
    },
    {
        "number": 3260,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 7 1000000007') == 1\nassert solution('3 2 1000000007') == 4\nassert solution('4 4 1000000007') == 24\nassert solution('1 2 3 4') == 0\nassert solution('10 5 10000003') == 2\n"
    },
    {
        "number": 3260,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 7 1000000007''') == '1'\nassert solution('''3 2 1000000007''') == '4'\nassert solution('''7 2 1000000007''') == '4'\nassert solution('''7 3 1000000007''') == '7'\nassert solution('''7 3 1000000005''') == '5'\n"
    },
    {
        "number": 3260,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\n\"\"\"\nAlgorithm:\n\nTake the input n and k.\nIf k > n, return 0.\nOtherwise,\n    if k = 1:\n        return n!\n    else:\n        if n == 0, return 0\n        else:\n            # Use modulo p to calculate the number of permutations of length n that have runs of length k.\n            # Permutations with runs of length at most k are modulo p.\n            # (Note that runs of length at most k can be counted by multiplying n by the number of permutations of length k)\n            # Permutation of length k is 1! * Permutation of length k-1!\n            # Note that taking the modulo p can avoid overflow\n            return factorial(n) * factorial_inv(k) % p\n\"\"\"\n"
    },
    {
        "number": 3260,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3260,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3260,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 7 1000000007\") == \"1\"\nassert solution(\"3 2 1000000007\") == \"4\"\n\"\"\"\n\nimport sys\nsys.stdin = open(sys.argv[1], \"r\")\n\nn, k, p = map(int, sys.stdin.readline().split(\" \"))"
    },
    {
        "number": 3260,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 7 1000000007') == 1\nassert solution('3 2 1000000007') == 4\nassert solution('3 1 1000000007') == 1\nassert solution('3 7 1000000007') == 1\nassert solution('2 2 1000000007') == 0\n"
    },
    {
        "number": 3260,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\nprint('Tests passed')\n"
    },
    {
        "number": 3260,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 7 1000000007') == '1'\nassert solution('3 2 1000000007') == '4'\nassert solution('1 1 1000000007') == '1'\nassert solution('3 2 1000000007') == '4'\nassert solution('1 2 1000000007') == '1'\n"
    },
    {
        "number": 3261,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3261,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 5\\n0 1\\n1 1\\n2 2\\n3 3\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10') == '5'\nassert solution('7 8\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8') == '8'\nassert solution('1 10\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10') == '9'\nassert solution('1 10\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9') == '10'\nassert solution('1 10\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9') == '10'\n"
    },
    {
        "number": 3261,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10 10\\n6') == '5'\nassert solution('3 5\\n11') == '8'\nassert solution('1 1\\n1') == '1'\nassert solution('11 1\\n1') == '11'\nassert solution('12 5\\n1') == '8'\n"
    },
    {
        "number": 3261,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 5\\n6') == '5'\nassert solution('4 5\\n11') == '8'\nassert solution('3 5\\n11') == '8'\nassert solution('1000 1000\\n1000') == '9'\nassert solution('10 10\\n100000') == '29'\n"
    },
    {
        "number": 3261,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2\\n1') == '1'\nassert solution('2 3\\n1') == '2'\nassert solution('3 2\\n1') == '0'\nassert solution('3 4\\n1') == '1'\nassert solution('4 4\\n1') == '0'\n"
    },
    {
        "number": 3261,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 10\\n6\\n') == '5'\nassert solution('3 5\\n11\\n') == '8'\nprint(solution(stdin))\n\n'''"
    },
    {
        "number": 3261,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2\\n1') == '0'\nassert solution('3 5\\n1') == '8'\nassert solution('10 10\\n6') == '5'\nassert solution('3 5\\n11') == '8'"
    },
    {
        "number": 3261,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 10\\n3\\n\") == \"2\"\nassert solution(\"2 10\\n3\\n\") == \"2\"\nassert solution(\"2 10\\n3\\n\") == \"2\"\nassert solution(\"100000000000 10000000\\n3\\n\") == \"5000000000000\"\nassert solution(\"10 10\\n1\\n\") == \"0\"\n"
    },
    {
        "number": 3261,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10 10\\n6\\n') == '5'\nassert solution('3 5\\n11\\n') == '8'\nprint(solution(''))\n'''\n\nimport sys"
    },
    {
        "number": 3261,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 5') == '8'\nassert solution('2 4') == '7'\nassert solution('1 1') == '1'\nassert solution('1 10') == '9'\nassert solution('10 10') == '90'\n"
    },
    {
        "number": 3262,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1''') == '2'\nassert solution('''5 6 4\n1 2 3 4 5\n0 1 1\n0 3 1\n0 2 2\n0 4 3\n0 1 3\n2 3 1\n3 4 1''') == '3'\nassert solution('''7 4 4\n0 1 1\n0 4 1\n0 4 3\n0 4 4\n0 1 1\n0 1 4\n0 1 2\n2 3 1\n3 4 1\n4 6 1\n4 4 1\n''') == '3'\nassert solution('''6 7 5\n0 1 1\n0 4 1\n0 4 3\n0 4 5\n0 1 1\n0 1 4\n0 1 2\n0 3 1\n0 3 4\n0 3 4\n0 3 5\n0 4 5\n0 4 4\n0 4 6\n2 3 1\n3 4 1\n3 5 1\n4 5 1\n''') == '2'\nassert solution('''7 8 5\n0 1 1\n0 4 1\n0 4 3\n0 4 5\n0 1 1\n0 1 4\n0 1 2\n0 3 1\n0 3 4\n0 3 4\n0 3 5\n0 4 5\n0 4 4\n0 4 6\n2 3 1\n3 4 1\n3 5 1\n4 5 1\n''') == '2'\n"
    },
    {
        "number": 3262,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 2') == '0'\nassert solution('1 2 2 3') == '1'\nassert solution('1 2 2 3 4') == '1'\nassert solution('1 2 2 3 4 5') == '2'\nassert solution('1 2 2 3 4 5 6') == '2'\n"
    },
    {
        "number": 3262,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 2\n1 2 1\n3 2 1''') == '2'\nassert solution(\n'''4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1''') == '3'\nassert solution(\n'''4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1''') == '4'"
    },
    {
        "number": 3262,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1') == '2'\nassert solution('4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n4 5 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n1 2 1\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n1 2 1\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n1 2 1\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n1 2 1\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n1 2 1\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n1 2 1\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n1 2 1\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n1 2 1\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n1 2 1\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n1 2 1\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n1 2 1\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n1 2 1\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n1 2 1\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n1 2 1\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n1 2 1\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n1 2 1\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n1 2 1\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n1 2 1\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n1 2 1\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n1 2 1\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n1 2 1\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n1 2 1\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n1 2 1\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n1 2 1\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n1 2 1\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n1 2 1\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n1 2 1\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n1 2 1\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n1 2 1\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n1 2 1\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n1 2 1\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n1 2 1\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n1 2 1\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n1 2 1\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n1 2 1\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n1 2 1\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n1 2 1\\n0 1 1\\n0 3 1\\n0 2 1\\n"
    },
    {
        "number": 3262,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 5 3\") == \"1\"\nassert solution(\"4 5 3\") == \"1\"\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\") == \"1\"\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n0 2 2\\n0 3 2\\n0 2 3\") == \"2\"\n"
    },
    {
        "number": 3262,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 2\n1 2 1\n3 2 1''') == \"2\"\nassert solution('''4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1''') == \"3\"\nprint('Testcases passed')\n"
    },
    {
        "number": 3262,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n') == '3'\nassert solution('2 3 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n') == '3'\nassert solution('4 6 2\\n1 2 1\\n0 1 1\\n0 2 1\\n0 2 3\\n1 2 3\\n3 2 1\\n') == '2'\nassert solution('2 5 3\\n1 2 3\\n0 1 1\\n0 2 1\\n0 2 3\\n1 2 3\\n3 2 1\\n') == '3'\nassert solution('3 5 3\\n1 2 3\\n0 1 1\\n0 2 1\\n0 2 3\\n1 2 3\\n3 2 1\\n') == '3'\n"
    },
    {
        "number": 3262,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 2\n1 2 1\n3 2 1''') == \"2\"\nassert solution('''4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1''') == \"3\"\nassert solution('''4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1''') == \"3\"\nassert solution('''4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1''') == \"3\"\nassert solution('''4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1''') == \"3\"\n"
    },
    {
        "number": 3262,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1\") == \"2\"\nassert solution(\"5 6 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n3 2 1\") == \"3\"\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\") == \"2\"\nassert solution(\"4 6 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n3 2 1\") == \"3\"\nassert solution(\"6 4 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n3 2 1\") == \"3\"\n"
    },
    {
        "number": 3262,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 2\n1 2 1\n3 2 1\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n5 6 3\n0 1 2\n1 2 3\n0 3 4\n0 4 5\n1 3 5\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n4 6 3\n0 1 2\n1 2 3\n0 3 4\n0 4 5\n1 3 5\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n4 6 3\n0 1 2\n1 2 3\n0 3 4\n0 4 5\n1 3 5\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n2 4 6\n0 1 1\n0 3 1\n1 2 1\n1 3 1\n0 2 1\n\"\"\"\n) == \"1\""
    },
    {
        "number": 3263,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 3\\n10 20 30\\n5 5 10\\n2 20\\n1 30\\n1 32\\n3 120\\n') == '3'\nassert solution('3 1\\n10\\n10\\n1 10\\n1 10\\n1 10\\n') == '3'\nassert solution('3 1\\n10\\n10\\n1 10\\n1 10\\n1 10\\n3 120\\n') == '3'\nassert solution('3 1\\n10\\n10\\n1 10\\n1 10\\n1 10\\n3 120\\n3 120\\n') == '3'\nassert solution('3 1\\n10\\n10\\n1 10\\n1 10\\n1 10\\n3 120\\n3 120\\n3 120\\n') == '3'\n"
    },
    {
        "number": 3263,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 3\n10 20 30\n5 5 10\n2 20\n1 30\n1 32\n3 120''') == '3'\nassert solution('''3 1\n10\n10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10''') == '3'\nassert solution('''3 1\n10\n10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10''') == '3'\nassert solution('''3 1\n5 5 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10''') == '3'\nassert solution('''3 1\n5 5 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10''') == '3'\n"
    },
    {
        "number": 3263,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3263,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 3\\n10 20 30\\n5 5 10\\n2 20\\n1 30\\n1 32\\n3 120\\n') == '3'\nassert solution('3 1\\n10\\n10\\n1 10\\n1 10\\n1 10\\n') == '3'\nassert solution('4 3\\n10 20 30\\n5 5 10\\n2 20\\n1 30\\n1 32\\n3 120\\n') == '3'\nassert solution('2 1\\n10\\n10\\n1 10\\n1 10\\n1 10\\n') == '3'\nassert solution('3 1\\n10\\n10\\n1 10\\n1 10\\n1 10\\n') == '3'\n"
    },
    {
        "number": 3263,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n4 1\\n5 1\\n2 1\\n3 2\\n3 1') == '2'\nassert solution('4 1\\n5 1\\n5 1\\n5 1\\n2 1\\n3 2\\n3 1') == '3'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 3263,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n4 3\n10 20 30\n5 5 10\n2 20\n1 30\n1 32\n3 120\n''') == '3'\nassert solution(\n'''\n5 5\n1 2\n1 2\n1 1\n1 2\n1 2\n1 2\n1 1\n1 1\n1 1\n1 1\n''') == '1'\nassert solution(\n'''\n4 1\n10\n10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10"
    },
    {
        "number": 3263,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '3'\nassert solution(stdin) == '3'\nassert solution(stdin) == '3'\nassert solution(stdin) == '3'\nassert solution(stdin) == '3'\n"
    },
    {
        "number": 3263,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '3'\n\"\"\"\n"
    },
    {
        "number": 3263,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\n10\\n10\\n1 10\\n1 10\\n1 10\\n3 120\") == 3\nassert solution(\"1 1\\n1 1\\n1 1\") == 3\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\") == 3\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == 3\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\"
    },
    {
        "number": 3263,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 2\\n10 20 30\\n5 5 10\\n2 20\\n1 30\\n1 32\\n3 120') == '3'\nassert solution('3 1\\n10\\n10\\n1 10\\n1 10\\n1 10\\n') == '3'\nassert solution('4 1\\n10\\n10\\n1 10\\n1 10\\n1 10') == '3'\nassert solution('2 1\\n10\\n10\\n1 10\\n1 10\\n1 10') == '3'\nassert solution('1 1\\n10\\n10\\n1 10\\n1 10\\n1 10') == '3'\n"
    },
    {
        "number": 3264,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"5\"\nassert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"4\"\n"
    },
    {
        "number": 3264,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '5'"
    },
    {
        "number": 3264,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"1 2 4\") == \"\"\n"
    },
    {
        "number": 3264,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\n"
    },
    {
        "number": 3264,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3264,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    '''2''') == '1'\nassert solution(\n    '''3''') == '5'\n"
    },
    {
        "number": 3264,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2\") == 1\nassert solution(\"3\") == 5\n"
    },
    {
        "number": 3264,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3264,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"2\") == \"1\"\nassert solution(\n\"3\") == \"5\"\nassert solution(\n\"4\") == \"7\"\nassert solution(\n\"5\") == \"13\"\nassert solution(\n\"6\") == \"19\"\n"
    },
    {
        "number": 3264,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\n"
    },
    {
        "number": 3265,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3\n0 1 0 9\n0 0 2 0\n0 5 0 3\n0 0 0 0''') == '2'\nassert solution('''5 7\n0 1 0 2 0 0\n0 0 1 0 1 0\n0 0 0 0 0 1\n0 0 0 0 0 1\n0 0 0 0 0 1''') == '2'\nassert solution('''6 9\n0 1 0 4 0 0 0\n0 0 1 0 2 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0''') == '-1'\nassert solution('''8 5\n0 1 0 3 0 0 0\n0 0 1 0 2 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0''') == '-1'\nassert solution('''5 6\n0 1 0 3 0 0 0\n0 0 1 0 2 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0''') == '-1'\n"
    },
    {
        "number": 3265,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 1\n0 11 9\n1 0 10\n0 0 0''') == '2'\nassert solution('''4 3\n0 1 0 19\n0 0 2 0\n0 5 0 3\n0 0 0 0''') == '-1'\nassert solution('''2 2\n0 1 0\n0 0 2''') == '-1'\nassert solution('''3 3\n0 1 0 19\n0 0 2 0\n0 5 0 3\n0 0 0 0''') == '-1'\nassert solution('''4 3\n0 1 0 19\n0 0 2 0\n0 5 0 3\n0 0 0 0''') == '-1'\n"
    },
    {
        "number": 3265,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0 0\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"2 2\") == \"\"\nassert solution(\"3 2\") == \"\"\n"
    },
    {
        "number": 3265,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1') == '2'\nassert solution('2 2') == '-1'\nassert solution('1 2 2 1') == '2'\nassert solution('2 1 2') == '-1'\nassert solution('1 2 1') == '2'\n"
    },
    {
        "number": 3265,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n0\\n0') == '-1'\nassert solution('2\\n0\\n1') == '1'\nassert solution('3\\n0\\n1') == '-1'\nassert solution('4\\n0\\n1\\n0\\n2\\n0') == '2'\nassert solution('4\\n0\\n1\\n0\\n3\\n0') == '1'\n"
    },
    {
        "number": 3265,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 1\n0 11 9\n1 0 10\n0 0 0''') == '2'\nassert solution('''4 3\n0 1 0 19\n0 0 2 0\n0 5 0 3\n0 0 0 0''') == '-1'\nassert solution('''10 2\n3 1 2 1 1 2 1 3 2 1 3 3 1 1 4 1 3 1 1 1 2 3 4 1 2 3 4 3 1 1 3 1 1 1 2 3 4 1 1 2 3 3 1 3 4 1 4 2 3 2 1 2 2 3 4 1 1 2 2 1 2 1 2 1 1 2 1 1 4 1 1 2 3 1 1 1 1 2 1 3 1 1 1 1 1 3 1 1 1 1 1 1 1 1 1 1 3 1 1 1 1 1 1 3 1 1 1 1 1 1 1 1 1 1 2 1 1 2 1 1 2 1 1 1 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 1 2 1 1 2 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 2 1 1 1 2 1 1 1 1 1 1 2 1 1 1 2 1 1 1 2 1 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 11''') == '-1'\nassert solution('''5 4\n1 0 1 3 3 3\n2 3 0 1 1 1\n4 3 0 3 0 1\n5 3 0 3 0 0\n3 0 0 1 1 0''') == '2'\nassert solution('''6 1\n1 1 1 1 1 1 1\n1 0 0 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 0 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1''') == '2'\n"
    },
    {
        "number": 3265,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 1 0 19') == '2'\nassert solution('0 0 2 0') == '-1'\nassert solution('0 0 0 0') == '-1'\nassert solution('1 0 10') == '2'\nassert solution('10 100') == '-1'\n"
    },
    {
        "number": 3265,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"2\"\nassert solution(\"10 10\") == \"0\"\nassert solution(\"1 1 1 0\") == \"1\"\nassert solution(\"1 1 1 0 1\") == \"1\"\nassert solution(\"1 1 1 0 1 0\") == \"2\"\n"
    },
    {
        "number": 3265,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input(\"\")) == output\n"
    },
    {
        "number": 3265,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\") == \"-1\"\nassert solution(\"2 1\\n0 1 0\\n0 0 2\\n0 0 0\") == \"1\"\nassert solution(\"2 2\\n0 1 0\\n0 0 2\\n0 0 0\") == \"2\"\nassert solution(\"2 3\\n0 1 0\\n0 0 2\\n0 0 0\") == \"2\"\n"
    },
    {
        "number": 3266,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 1 10\n1 2 1\n1 3 1\n0 2 1\n2 3 10''') == '4 3 5'\nassert solution('''2 1 0 1\n0 1 100000\n''') == '2 100000 1'"
    },
    {
        "number": 3266,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\n-----Alternate solution-----\nThe solution is a similar to the previous one, but much simpler since we know the size of the maximum flow is limited to $2^{31}$."
    },
    {
        "number": 3266,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 3266,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''0 1\n1 2 10\n1 3 1\n0 2 1\n2 3 10''') == '4 3 5'\nassert solution('''0 1\n1 2 10\n1 3 1\n0 2 1\n2 3 10\n0 1\n1 2 10\n1 3 1\n0 2 1\n2 3 10''') == '4 3 5'\nassert solution('''0 1\n1 2 10\n1 3 1\n0 2 1\n2 3 10\n0 1\n1 2 10\n1 3 1\n0 2 1\n2 3 10''') == '4 3 5'\n'''\n\"\"\"\n>>> solution('''0 1\n1 2 10\n1 3 1\n0 2 1\n2 3 10\n0 1\n1 2 10\n1 3 1\n0 2 1\n2 3 10\n0 1\n1 2 10\n1 3 1\n0 2 1\n2 3 10''')\n'4 3 5'\n\"\"\"\n"
    },
    {
        "number": 3266,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n-----\nimport sys"
    },
    {
        "number": 3266,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n4 5 0 3\n0 1 10\n1 2 1\n1 3 1\n0 2 1\n2 3 10\n\"\"\"\n) == \"4 3 5\"\n\nassert solution(\n\"\"\"\n5 1 0 1\n0 1 100000\n\"\"\"\n) == \"5 1 100000 1\"\n\nassert solution(\n\"\"\"\n7 1 0 1\n0 1 3\n1 2 1\n0 3 2\n0 4 1\n1 3 2\n2 4 10\n3 4 10\n\"\"\"\n) == \"7 1 3\"\n\nassert solution(\n\"\"\"\n3 4 0 1\n0 1 5\n1 2 2\n0 2 3\n\"\"\"\n) == \"3 1 2\"\n\nassert solution(\n\"\"\"\n4 3 0 1\n0 1 5\n1 2 2\n0 2 3\n\"\"\"\n) == \"3 1 2\""
    },
    {
        "number": 3266,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 2 1\\n1 2 1') == '4 3 5\\n0 1 2\\n0 2 1'\nassert solution('2 1 0 1\\n0 1 100000\\n2 1 0 1\\n0 1 100000') == '2 100000 1\\n0 1 100000\\n0 1 100000\\n0 1 100000\\n2 1 0 1\\n0 1 100000\\n2 1 0 1\\n0 1 100000'\nassert solution('4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\\n4 3 5') == '4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\\n4 3 3'\n\nprint('All set? Click \"Check\" to earn cool rewards!')"
    },
    {
        "number": 3266,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 4 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\") == \"4 3 5\"\nassert solution(\"2 5 0 1\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\") == \"4 3 5\"\nassert solution(\"2 1 0 1\\n0 1 100000\\n\") == \"2 100000 1\"\nassert solution(\"2 1 0 1\\n0 1 100000\\n\") == \"2 100000 1\"\nassert solution(\"2 1 0 1\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\") == \"4 3 5\"\n"
    },
    {
        "number": 3266,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 5 0 3\n0 1 10\n1 2 1\n1 3 1\n0 2 1\n2 3 10\n''') == '4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2'\nassert solution('''2 1 0 1\n0 1 100000\n''') == '2 100000 1\\n0 1 100000'\n'''\n"
    },
    {
        "number": 3266,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(sample_input_0) == sample_output_0\nassert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3\nassert solution(sample_input_4) == sample_output_4\n"
    },
    {
        "number": 3267,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == output\n\"\"\"\n"
    },
    {
        "number": 3267,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\") == \"3 5\"\nassert solution(\"2 3\\nSMS\\nMMS\\nSMS\\nMMS\") == \"2 0\"\nassert solution(\"2 3\\nSMS\\nMMS\\nSMS\\nMMS\\nSMS\\nMMS\") == \"2 0\"\nassert solution(\"2 3\\nSMS\\nMMS\\nSMS\\nMMS\\nSMS\\nMMS\\nSMS\") == \"2 0\"\nassert solution(\"2 3\\nSMS\\nMMS\\nSMS\\nMMS\\nSMS\\nMMS\\nSMS\\nMMS\") == \"2 0\"\n"
    },
    {
        "number": 3267,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\nfrom sys import stdin,stdout\n"
    },
    {
        "number": 3267,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == None"
    },
    {
        "number": 3267,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('MMS\\nSMS') == '3 5'\nassert solution('MMS\\nSMS') == '2 0'\n"
    },
    {
        "number": 3267,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3267,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\nstdin = \"\"\"2 3\nSM\nS.M\nSample Output 2\"\"\"\n\nstdout = \"\"\"3 5\"\"\"\n"
    },
    {
        "number": 3267,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == expected\n\"\"\"\n"
    },
    {
        "number": 3267,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3267,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 3\nSMS\nMMS''') == '3 5'\nassert solution('''2 3\nSMS\nMMS\nMMS''') == '2 0'\nassert solution('''1 2\nMMS\nMMS''') == '2 0'\nassert solution('''1 2\nMMS\nMMS\nMMS''') == '2 0'\nassert solution('''2 3\n..\n..\n''') == '2 0'\n"
    },
    {
        "number": 3268,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a') == '2\\n3 c\\n6 c'\nassert solution('2\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a') == '1\\n6 b'\nassert solution('13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2"
    },
    {
        "number": 3268,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S') == '2\\n3 c\\n6 c\\n'\nassert solution('2\\n0 B\\n1 B\\n2 E a\\n2 S\\n5 T a\\nSample Output 2\\n1\\n6 b\\n') == '1\\n6 b\\n'\nassert solution('2\\n0 B\\n1 B\\n2 E a\\n2 S\\n5 T a\\n5 T b\\n1 S\\n5 E a\\n5 E b\\n1 S\\n5 T a\\n"
    },
    {
        "number": 3268,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n0 B\n1 B\n2 E a\n2 E b\n2 S\n5 T a\n''') == '2'\nassert solution('''\n1 B\n2 T a\n''') == '1'\nassert solution('''\n3 E a\n2 E a\n3 E b\n2 E b\n1 S\n5 T a\n''') == '1'\nassert solution('''\n1 B\n1 T a\n''') == '0'\nassert solution('''\n1 B\n2 T a\n3 E a\n''') == '1'\n"
    },
    {
        "number": 3268,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    1\n    0 B\n    1 B\n    2 E a\n    2 E b\n    2 S\n    5 G a\n    5 T a\n    5 E a\n    5 E b\n    1 S\n    10 E a\n    10 G b\n    1 T a\n    \"\"\"\n) == '6 b'\nassert solution(\n    \"\"\"\n    10\n    0 B\n    1 B\n    1 T a\n    2 E a\n    2 S\n    5 G a\n    5 T a\n    5 E a\n    5 E b\n    1 S\n    10 E a\n    10 G b\n    1 T a\n    \"\"\"\n) == '1'\nassert solution(\n    \"\"\"\n    9\n    0 B"
    },
    {
        "number": 3268,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\") == \"2\\n3 c\\n6 c\"\nassert solution(\"6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\") == \"1\\n6 b\\n\"\n\n--- 7.0s Timer ---\n"
    },
    {
        "number": 3268,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69"
    },
    {
        "number": 3268,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('9\\n6\\n7\\n3\\n0\\n2\\n4\\n5\\n1') == '2'\nassert solution('9\\n6\\n7\\n3\\n0\\n2\\n4\\n5\\n1') == '6'\nassert solution('6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6') == '0'\nassert solution('6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6') == '1'\nassert solution('6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6') == '2'\n"
    },
    {
        "number": 3268,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''0 B\n1 B\n2 E a\n2 E b\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a\n''') == '2\\n3 c\\n6 c\\n'\nassert solution('''2\n0 B\n1 B\n1 T a\n2 E a\n2 S\n5 T a\n''') == '1\\n6 b\\n'\nassert solution('''0 B\n0 G a\n2 G b\n2 T a\n2 E a\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 G b\n1 T a\n''') == '1\\n6 b"
    },
    {
        "number": 3268,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    13\n    0 B\n    1 B\n    2 E a\n    2 E b\n    2 S\n    5 G a\n    5 T a\n    5 E a\n    5 E b\n    1 S\n    10 E a\n    10 G b\n    1 T a\n    \"\"\"\n) == \"2\\n3 c\\n6 c\"\nprint(solution(\n    \"\"\"\n    13\n    0 B\n    1 B\n    2 E a\n    2 E b\n    2 S\n    5 G a\n    5 T a\n    5 E a\n    5 E b\n    1 S\n    10 E a\n    10 G b\n    1 T a\n    \"\"\"\n))\n"
    },
    {
        "number": 3268,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\\nB\") == \"1\"\nassert solution(\"1\\nB\") == \"0\"\nassert solution(\"2\\nB\") == \"2\"\nassert solution(\"2\\nB\") == \"0\"\n"
    },
    {
        "number": 3269,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 5') == '40'\nassert solution('12 11') == '76'\nassert solution('2 6') == '4'\nassert solution('4 4') == '0'\nassert solution('3 3') == '3'\n"
    },
    {
        "number": 3269,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 5') == '40'\nassert solution('288 291') == '76'"
    },
    {
        "number": 3269,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"46\"\n"
    },
    {
        "number": 3269,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 5\") == \"40\"\nassert solution(\"288 291\") == \"76\"\n\nprint(\"Testcase 1 passed\")\nprint(\"Testcase 2 passed\")"
    },
    {
        "number": 3269,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input_stream1) == output_stream1\nassert solution(input_stream2) == output_stream2\n"
    },
    {
        "number": 3269,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 5') == '40'\nassert solution('288 291') == '76'\nassert solution('324714 215864') == '274127'\nassert solution('28273 1') == '27412'\nassert solution('28273 1') == '27412'\n"
    },
    {
        "number": 3269,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3269,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 5\\n') == '40'\nassert solution('288 291\\n') == '76'\n"
    },
    {
        "number": 3269,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 5''') == '40'\nassert solution('''288 291''') == '76'\nassert solution('''903 765''') == '323'\nassert solution('''11001001''') == '1024'\nassert solution('''1037 1484''') == '2310'\nprint(\"You're awesome!\")\n"
    },
    {
        "number": 3269,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"3 4\") == \"3\"\nassert solution(\"1 100000000\") == \"2\"\nassert solution(\"1 200000000\") == \"3\"\nassert solution(\"2 100000000\") == \"1\"\n"
    },
    {
        "number": 3270,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\nCAT\nDOG\nCOT\n''') == 'COG'\nassert solution('''2\nCAT\nDOG\nCOT\n''') == 'COG'\nassert solution('''3\nCAT\nDOG\nCOT\n''') == 'COG'\nassert solution('''5\nA\nB\nC\nD\nE\nF\n''') == 'G'\nassert solution('''3\nA\nB\nC\n''') == 'G'\n"
    },
    {
        "number": 3270,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n') == 0\nassert solution('3\\n') == 0\nassert solution('3\\nCAT\\nDOG\\nCOT') == 'COG'\nassert solution('3\\nCAT\\nDOG\\nCOT') == 'COG'\nassert solution('3\\nCAT\\nDOG\\nCOT') == 'COG'\n"
    },
    {
        "number": 3270,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\nCAT\\nDOG\\nCOT\\n') == 'COG\\n3'\nassert solution('3\\nCAT\\nDOG\\nCOT\\n') == 'COG\\n3'\nassert solution('4\\nCAT\\nDOG\\nCOT\\n') == 'COT\\n0'\nassert solution('4\\nCAT\\nDOG\\nCOT\\n') == 'COT\\n0'\nassert solution('3\\nCAT\\nDOG\\nCOT\\n') == 'COG\\n3'\n"
    },
    {
        "number": 3270,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == None\nassert solution('a') == None\nassert solution('CAT') == 'CAT'\nassert solution('CATCATCAT') == 'CAT'\nassert solution
    },
    {
        "number": 3270,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('CAT\\nDOG\\nCOT\\n') == 'COG\\n3'\nassert solution('CAT\\nDOG\\nCOT\\n') == 'COG\\n3'\nassert solution('CAT\\nDOG\\nCOT\\n') == 'COG\\n3'\nassert solution('CAT\\nDOG\\nCOT\\n') == 'COG\\n3'\nassert solution('CAT\\nDOG\\nCOT\\n') == 'COG\\n3'\n"
    },
    {
        "number": 3270,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('CAT\\nDOG\\nCOT') == 'COG'\nassert solution('CAT\\nDOG\\nCOT\\nCAT\\nCAT\\nCAT') == 'CAT'\nassert solution('CAT\\nDOG\\nCOT\\nCAT\\nCAT\\nCAT') == 'CAT'\nassert solution('CAT\\nDOG\\nCOT\\nCAT\\nCAT\\nCAT') == 'CAT'\nassert solution('CAT\\nDOG\\nCOT\\nCAT\\nCAT\\nCAT') == 'CAT'\n"
    },
    {
        "number": 3270,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('CAT\\nDOG\\nCOT\\n') == 'COG\\n3\\n'\nassert solution('CAT\\nDOG\\nCOT\\nGAS\\n') == 'GAS\\n0\\n'\nassert solution('CAT\\nDOG\\nCOT\\nGAS\\n') == 'GAS\\n0\\n'\nassert solution('CAT\\nDOG\\nCOT\\nGAS\\n') == 'GAS\\n0\\n'\nassert solution('CAT\\nDOG\\nCOT\\nGAS\\n') == 'GAS\\n0\\n'\n"
    },
    {
        "number": 3270,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 3270,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"CAT\") == \"CAT\"\nassert solution(\"CAT\\nDOG\\nCOT\") == \"COG\"\nassert solution(\"CAT\\nDOG\\nCOT\\nCOT\") == \"COT\"\nassert solution(\"CAT\\nDOG\\nCOT\\nCOT\\nCOT\") == \"COT\"\n"
    },
    {
        "number": 3270,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\".join(open(\"test_input.txt\").readlines())) == \"COG\"\n"
    },
    {
        "number": 3271,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"2 3\") == \"0\"\nassert solution(\"3 3\") == \"1\"\n"
    },
    {
        "number": 3271,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"10 1\"\n) == \"9\"\n\nassert solution(\n    \"4 3\"\n) == \"6\"\n\"\"\"\nimport sys\n"
    },
    {
        "number": 3271,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10 1') == '9'\nassert solution('4 3') == '6'\nprint(solution(input()))\n"
    },
    {
        "number": 3271,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1 2') == ''\nassert solution('2 4') == '1'\nassert solution('3 4') == '2'\nassert solution('3 3') == '4'\n"
    },
    {
        "number": 3271,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 1') == '9'\nassert solution('4 3') == '6'\nassert solution('10 2') == '1'\nassert solution('12 3') == '5'\nassert solution('100 200') == '1'\n"
    },
    {
        "number": 3271,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10 1''') == '9'\nassert solution('''4 3''') == '6'\nassert solution('''5 2''') == '5'\nassert solution('''6 1''') == '6'\nassert solution('''11 2''') == '5'\n"
    },
    {
        "number": 3271,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4\"\n\"\"\"\n"
    },
    {
        "number": 3271,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10 1''') == '9'\nassert solution('''4 3''') == '6'\nassert solution('''10 6''') == '9'\nassert solution('''10 4''') == '6'\nassert solution('''100 5''') == '44'\n"
    },
    {
        "number": 3271,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3271,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 3\\n') == '6'\nassert solution('1 2\\n') == '3'\nassert solution('2 4\\n') == '1'\nassert solution('1 1000000\\n') == '1'\nassert solution('1 6\\n') == '2'\n"
    },
    {
        "number": 3272,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 5\\n.V...\\n.H...V\") == \"3\"\nassert solution(\"5 5\\n/.V.\\n./.V.\\n..#..\\n.V.#.\\n.V./\") == \"-1\"\nassert solution(\"5 4\\n.#./\\n./V#.\\n#V/#\") == \"2\"\nassert solution(\"3 3\\n#V/\\n/#V/\\nV/\") == \"0\"\nassert solution(\"3 4\\n#V/\\n/H/\\n#H/\") == \"2\"\n"
    },
    {
        "number": 3272,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5 5\") == '3'\nassert solution(\"5 3\") == '1'\nassert solution(\"5 3\\n/V..\\n..V./\") == '1'\nassert solution(\"5 3\\n/.V.\\n./.V.\") == '1'\nassert solution(\"5 3\\n.V./\\nV/.\") == '-1'\n"
    },
    {
        "number": 3272,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 5\\n.V.\\n./.V.\\n..#..\\n.V.#.\\n.V./\\n') == '3'\nassert solution('2 5\\nV...\\nH...V\\n') == '-1'\nassert solution('1 1\\nH\\n') == '-1'\nassert solution('1000 1\\nH\\n') == '-1'\nassert solution('2 2\\n.H.\\n.H./\\n') == '2'\n"
    },
    {
        "number": 3272,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 5\\n/.V.\\n./.V.\\n..#..\\n.V.#.\\n\\.V./') == '3'\nassert solution('2 5\\nV...\\nH...V') == '-1'\n\"\"\"\n"
    },
    {
        "number": 3272,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\".H./.V./\\n.V./\\n.H./\\n././.\\n./\") == 2\nassert solution(\"H.H\\n.H\\n.H\\n./\\n./\\n.\") == 1\nassert solution(\"V..\\n..V\\n..V\\nV..\\n..V\\n\") == 3\nassert solution(\"\\nH\\n.\\nV\\n/\\n/\\n\") == 1\nassert solution(\"H\\n.V\\n.H\\n.V\\n.H\\n\") == 2\n"
    },
    {
        "number": 3272,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('./TombRiddle/test/input00.txt') == '3'\nassert solution('./TombRiddle/test/input01.txt') == '-1'\nassert solution('./TombRiddle/test/input02.txt') == '2'\nassert solution('./TombRiddle/test/input03.txt') == '3'\nassert solution('./TombRiddle/test/input04.txt') == '3'\n"
    },
    {
        "number": 3272,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom sys import stdin, stdout\n\nn, m = [int(x) for x in stdin.readline().split()]\n\nfloorplan = []\nfor _ in range(n):\n    floorplan.append(stdin.readline().strip())"
    },
    {
        "number": 3272,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == ''\n\nprint(solution(stdin))\n"
    },
    {
        "number": 3272,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"5 5\n/.V.\\\n./.V.\n..#..\n.V.#.\n\\.V./\"\"\"\n    ) == 3\nassert solution(\n\"\"\"2 5\nV...\\\nH...V\"\"\"\n    ) == -1"
    },
    {
        "number": 3272,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('./V.\\n./.V.') == 3\nassert solution('./V.\\n./.V.') == -1\nassert solution('./V.\\n./.V.') == -1\nassert solution('./V.\\n./.V.') == -1\nassert solution('./V.\\n./.V.') == -1\n"
    },
    {
        "number": 3273,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''a\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
        "number": 3273,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n7\nn fox jumps ove\nuick brown f\nThe quick b\ny dog.\nrown fox\nmps over the l\nthe lazy dog\n\"\"\"\n) == \"\"\"\nThe quick brown fox jumps over the lazy dog.\n\"\"\"\n"
    },
    {
        "number": 3273,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n6\ncdefghi\nefghijk\nefghijx\nabcdefg\n\"\"\"\n) == \"\"\"\nThe quick brown fox jumps over the lazy dog.\n\"\"\"\nassert solution(\n\"\"\"\n7\na\nbcde\nfghijkl\nmnop\nqrstu\nvwxyz\n\"\"\"\n) == \"\"\"\nAMBIGUOUS\n\"\"\"\nassert solution(\n\"\"\"\n3\nabc\nab\nab\n\"\"\"\n) == \"\"\"\nAMBIGUOUS\n\"\"\"\nassert solution(\n\"\"\"\n5\naf\nab\nac\nab\n\"\"\"\n) == \"\"\"\nThe ab abc ac ab\n\"\"\"\nassert solution(\n\"\"\"\n3\nabc\na\na\n\"\"\"\n) == \"\"\"\nAMBIGUOUS\n\"\"\"\n"
    },
    {
        "number": 3273,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\nn fox jumps ove\nuick brown f\nThe quick b\ny dog.\nrown fox\nmps over the l\nthe lazy dog\n''') == 'The quick brown fox jumps over the lazy dog.'\nassert solution('''\nabcdefg\nefghijk\nefghijx\ncdefghi\n''') == 'AMBIGUOUS'\n\nassert solution('''\n3\ngoat\ng\ngoat\n''') == 'AMBIGUOUS'\n\nassert solution('''\n4\nabcdefg\nefghij\nefghij\ncdefghi\n''') == 'The quick brown fox jumps over the lazy dog.'\n\nassert solution('''\n2\naa\naaa\n''') == 'AMBIGUOUS'"
    },
    {
        "number": 3273,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('cdefghi') == 'defghijk'\nassert solution('efghijk') == 'efghijx'\nassert solution('efghijx') == 'efghijx'\nassert solution('abcdefg') == 'abcdefg'\nprint(solution(input()))\n\nn = int(input())\nfragments = [input() for _ in range(n)]\n\nm = len(fragments[0])\n\nprefix = [''] * m\nsuffix = [''] * m\n\nfor i in range(m):\n    for j in range(n):\n        if len(fragments[j]) <= i or fragments[j][i] =='':\n            continue\n        if i == 0:\n            prefix[i] = fragments[j][:i + 1]\n            suffix[m - i - 1] = fragments[j][m - i:]\n        else:\n            prefix[i] = prefix[i - 1] + fragments[j][:i + 1]\n            suffix[m - i - 1] = fragments[j][m - i:] + suffix[m - i]\n\nans = ''.join(prefix) + ''.join(suffix)"
    },
    {
        "number": 3273,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(None) == ''\nassert solution(' ') ==''\nassert solution('abcdef') == 'abcdef'\nassert solution('abcdefg') == 'abcdefg'\nassert solution('abcdefghi') == 'abcdefghi'\n"
    },
    {
        "number": 3273,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abcdefghi') == 'abcdefghi'\nassert solution('n fox jumps oveuick brown f') == 'The quick brown fox jumps over the lazy dog.'\nassert solution('cdefghi') == 'AMBIGUOUS'\nassert solution('efghijk') == 'AMBIGUOUS'\nassert solution('efghijx') == 'AMBIGUOUS'\n"
    },
    {
        "number": 3273,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('f') == 'f'\nassert solution('fhj') == 'fhj'\nassert solution('h') == 'h'\nassert solution('abcdefghi') == 'abcdefghi'\nassert solution('dabcdefghij') == 'dabcdefghij'\n"
    },
    {
        "number": 3273,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"cdefghi\") == \"The quick brown fox jumps over the lazy dog.\"\nassert solution(\"efghijk\") == \"AMBIGUOUS\"\nassert solution(\"efghijx\") == \"AMBIGUOUS\"\nassert solution(\"abcdefg\") == \"AMBIGUOUS\"\nassert solution(\"cdefghi\") == \"The quick brown fox jumps over the lazy dog.\"\n"
    },
    {
        "number": 3273,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    7\n    n fox jumps ove\n    uick brown f\n    The quick b\n    y dog.\n    rown fox\n    mps over the l\n    the lazy dog\n    \"\"\"\n) == 'The quick brown fox jumps over the lazy dog.'\nassert solution(\n    \"\"\"\n    7\n    uick brown f\n    The quick b\n    y dog.\n    rown fox\n    mps over the l\n    the lazy dog\n    \"\"\"\n) == 'AMBIGUOUS'\nassert solution(\n    \"\"\"\n    5\n    abcdefg\n    abcefghi\n    abcefghjk\n    abcdefgh\n    abcd\n    \"\"\"\n) == 'AMBIGUOUS'\nassert solution(\n    \"\"\"\n    1\n    abcdefg\n    abcefghi\n    abcefghjk\n    abcdefgh\n    abcd\n    \"\"\"\n) == 'AMBIGUOUS'\n\"\"\"\n    8\n    abcd\n    abcde\n    abcdfg\n    abcdfghi\n    abcdfghjk\n    abcdfghijk\n    abcdfghjkm\n    abcdfghijkl\n    \"\"\"\nassert solution(\n    \"\"\"\n    2\n    abcd\n    abcde\n    abcdfg\n    abcdfghi\n    abcdfghjk\n    abcdfghijk\n    abcdfghjkm\n    abcdfghijkl\n    \"\"\"\n) == 'AMBIGUOUS'\n"
    },
    {
        "number": 3274,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 6\n-3 -2 3\n-2 -2 4\n2 3 3\n-1 1 2\n0 1 4\n2 5 1''') == '--+0--'\nassert solution('''3 2\n1 2 1\n-2 0 2\nSample Output 2:\n0+-\n''') == 'impossible'\nassert solution('''5 1\n2 1 1\n-2 0 2''') == '++-+'\nassert solution('''5 1\n-2 -2 1\nSample Output 2:\n+++-\n''') == 'impossible'\nassert solution('''5 1\n-2 -2 1\n-1 -1 1\n-1 1 1\n-1 1 1\n-1 1 1\n-1 1 1\nSample Output 2:\n+++-\n''') == 'impossible'\n"
    },
    {
        "number": 3274,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2') == '+-\\n+-\\n'\nassert solution('5 6') == '+--\\n+-\\n--+\\n+-\\n+-\\n'\nassert solution('3 2') == 'impossible\\n'\n\"\"\"\n"
    },
    {
        "number": 3274,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == \"+--\"\nassert solution(\"3 2\\n1 2 1\\n-2 0 2\\n\") == \"impossible\"\n\"\"\"\n"
    },
    {
        "number": 3274,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 6') == '--+0-', 'case 1'\nassert solution('2 3 3') == '+0-', 'case 2'\nassert solution('1 2 1') == '+0-', 'case 3'\nassert solution('0 1 4') == '+--+', 'case 4'\nassert solution('2 5 1') == '+-0', 'case 5'\n"
    },
    {
        "number": 3274,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == \"impossible\"\n"
    },
    {
        "number": 3274,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1 1') == '+-++'\nassert solution('1 1 1') == '++--'\nassert solution('1 1 1') == '++--++'\nassert solution('1 1 1') == '++--+++'\nassert solution('1 1 1') == '++--++---'\n"
    },
    {
        "number": 3274,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3\") == \"-\"\nassert solution(\"2 2 4\") == \"++-\", \"Expected: ++-, Actual: {}\".format(solution(\"2 2 4\"))\nassert solution(\"5 6\") == \"-\"\nassert solution(\"3 2 3\") == \"++-\"\n"
    },
    {
        "number": 3274,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"--+0-\"\nassert solution(\"0 0\") == \"impossible\"\nassert solution(\"5 6\") == \"--+0-+++-++--+++-\"\nassert solution(\"3 3\") == \"++-++--++-\"\nassert solution(\"2 2\") == \"++-++-++\"\n"
    },
    {
        "number": 3274,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '--+0-', \"Test 1 failed\"\nassert solution(stdin) == '0-0', \"Test 2 failed\"\nassert solution(stdin) == '+--+', \"Test 3 failed\"\nassert solution(stdin) == 'impossible', \"Test 4 failed\"\nassert solution(stdin) == 'impossible', \"Test 5 failed\"\n"
    },
    {
        "number": 3274,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 3275,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2\n1 1\n1 1\n1\n1 1 1''') == '1'\nassert solution('''2 2\n1 2\n2 3\n2\n1 2 2''') == '4'\nassert solution('''2 2\n1 2\n2 3\n2\n1 2 2''') == '4'\nassert solution('''2 2\n1 2\n2 3\n2\n2 2 2''') == '4'\nassert solution('''2 2\n2 2\n2\n1 2 1''') == '1'\n"
    },
    {
        "number": 3275,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''2 2\n1 1\n1 1\n1\n1 1 1\n''') == '1'\nassert solution(\n'''2 2\n1 2\n2 3\n2\n1 2 2\n2 2 2\n''') == '4'\nassert solution(\n'''5 2\n2 3\n3 5\n1 4\n1 3\n2\n2 1 1\n3 1 1\n''') == '2'\nassert solution(\n'''10 3\n2 6\n3 8\n1 9\n2 6\n4 7\n3 4\n3 9\n5 5\n5 1\n7 2\n2\n5 3\n6\n2 1 1\n1 1\n1\n2 2\n2 1\n1 1\n1\n1\n''') == '10'\nassert solution(\n'''12 4\n2 5\n3 4\n2\n3 9\n2\n2 9\n1 2\n2 9\n1 1\n1 1\n2 2\n1 3\n1 2\n2\n1 1\n2 1\n1\n3\n2\n1 2 1\n2\n2 2\n2\n2 2\n2\n1\n1\n2\n1 1\n1\n1\n1\n1\n2\n1 1\n2\n1\n1\n''') == '8'\n"
    },
    {
        "number": 3275,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n1') == '1'\nassert solution('2\\n2\\n2') == '1'\nassert solution('2\\n1\\n2') == '2'\nassert solution('2\\n1\\n1') == '2'\nassert solution('2\\n1\\n2\\n2') == '4'\n"
    },
    {
        "number": 3275,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 2\n1 1\n1 1\n1''') == '1'\nassert solution('''2 2\n1 2\n2 3\n2\n1 2 2\n2 2 2''') == '4'\nassert solution('''2 2\n1 2\n2 3\n2\n1 2 2''') == '4'\nassert solution('''3 3\n1 1\n1 1\n1 1\n1\n1 1 1\n1 1 1''') == '5'\nassert solution('''3 3\n1 2\n1 1\n1 1\n1\n1 1 1\n1 1 1''') == '4'\n"
    },
    {
        "number": 3275,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3275,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2\\n1 1\\n1 1\\n1\\n1 1 1\\n') == '1\\n'\nassert solution('2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2\\n') == '4\\n4\\n'\nassert solution('2 2\\n1 1\\n1 1\\n1\\n1 1 1\\n2 2 2\\n2 2 2\\n') == '1\\n'\nassert solution('2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2\\n') == '4\\n4\\n'\nassert solution('2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2\\n3 3 3\\n3\\n1 2 2\\n2 2 2\\n') == '4\\n4\\n4\\n'\n"
    },
    {
        "number": 3275,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 2\n1 1\n1 1\n1\n1 1 1''') == '1'\nassert solution('''2 2\n1 2\n2 3\n2\n1 2 2''') == '4'\nassert solution('''4 4\n1 2\n2 3\n3 4\n2\n1 2 1\n2 2 2''') == '8'\nassert solution('''4 4\n1 2\n2 3\n3 4\n1\n2 2 1''') == '4'\nassert solution('''4 4\n1 2\n2 3\n3 4\n2\n1 2 2\n2 2 2''') == '8'\n"
    },
    {
        "number": 3275,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 2') == '1'\nassert solution('2 2 2') == '1'\nassert solution('2 1 1') == '2'\nassert solution('1 2 2') == '2'\n"
    },
    {
        "number": 3275,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    '1 2'\n    '1 1'\n    '1 1'\n    '1'\n    '1 1 1'\n) == '1'\nassert solution(\n    '2 2'\n    '1 2'\n    '2 3'\n    '2'\n    '1 2 2'\n    '2 2 2'\n) == '4'\nprint(solution(stdin))\n"
    },
    {
        "number": 3275,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n1 1\\n1 1\\n1\") == \"1\\n1\"\nassert solution(\"2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2\\n\") == \"4\\n4\\n\"\nassert solution(\"4 1\\n1 1 1 1\\n2 2 2\\n1 1 2 2\\n1 1 1 1\") == \"4\\n1\\n\"\nassert solution(\"5 2\\n1 1 1 1 1\\n2 2 2\\n1 1 2 2\\n1 1 1 1 1\\n1 1 1 1 1\") == \"4\\n1\\n\"\nassert solution(\"7 5\\n1 1 1 1 1 1 1\\n2 2 2\\n1 1 2 2\\n1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\") == \"2\\n2\\n\"\n"
    },
    {
        "number": 3276,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n3 4\nWBBBB\nBBBWW\nWWRRR\n''') == 'NO'\nassert solution(\n'''\n5 5\nWWWWW\nWWWWW\nWWWWW\nWRRRR\nRRRRR\nRRRRR\n''') == 'NO'\nassert solution(\n'''\n2 2\nWB\nBW\n''') == 'NO'\nassert solution(\n'''\n2 4\nWRRR\nWRRR\n''') == 'NO'\nassert solution(\n'''\n5 4\nWRRRG\nWRRRG\nWRRRG\nWWBBB\nWBBBB\n''') == 'YES'\n"
    },
    {
        "number": 3276,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n4 5\nWRRRG\nWRRRG\nWRRRG\nWBBBB\n''') == 'YES'\nassert solution('''\n4 4\nWBBBB\nWRRR\nWRRR\nWBBBB\n''') == 'NO'\nassert solution('''\n2 2\nWW\nW\nW\n''') == 'NO'\nassert solution('''\n3 3\nW\nWWW\nW\nW\n''') == 'YES'\nassert solution('''\n2 1\nWW\nW\nW\n''') == 'NO'\n"
    },
    {
        "number": 3276,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB') == 'YES'\nassert solution('3 4\\nWWRR\\nWRRR\\nWRRR\\n') == 'NO'\nassert solution('3 4\\nWRRR\\nWRRR\\nWRRR\\n') == 'NO'\nassert solution('3 4\\nWWRR\\nWRRR\\nWRRR\\n') == 'NO'\nassert solution('3 4\\nWRRR\\nWRRR\\nWRRR\\n') == 'NO'\n"
    },
    {
        "number": 3276,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3276,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3276,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 5\nWRRRG\nWRRRG\nWRRRG\nWBBBB''') == \"YES\"\nassert solution('''3 4\nWWRR\nWRRR\nWRRR''') == \"NO\"\nassert solution('''6 4\nWWRRG\nWWRRG\nWWRRG\nWWRRG\nWWRRG\nWWRRG''') == \"NO\"\nassert solution('''4 4\nWRRR\nWRRR\nWRRR\nWBBBB''') == \"YES\"\nassert solution('''4 4\nWRRR\nWRRR\nWRRR\nWBBBB''') == \"YES\"\n"
    },
    {
        "number": 3276,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin.split('\\n')[0]\n"
    },
    {
        "number": 3276,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2\\nR') == 'YES'\nassert solution('2 2\\nWBB') == 'NO'\nassert solution('3 3\\nWWW\\nWWW\\nWWW') == 'YES'\nassert solution('4 2\\nRWWW') == 'YES'\nassert solution('5 3\\nWWWBB') == 'YES'\n"
    },
    {
        "number": 3276,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 5\nWRRRG\nWRRRG\nWRRRG\nWBBBB''') == 'YES'\nassert solution('''6 6\nWBBBBBBBB\nWBBBBBBBB\nWBBBBBBBB\nWBBBBBBBB\nWBBBBBBBB\nWBBBBBBBB''') == 'YES'\nassert solution('''2 1\nBB''') == 'NO'\nassert solution('''4 5\nWWRRR\nWWRRR\nWWRRR\nWWRRR''') == 'YES'\nassert solution('''6 7\nWBBBBBBBB\nWBBBBBBBB\nWWRRRRRRR\nWRRRRRRRR\nWRRRRRRRR\nWBBBBBBBB''') == 'NO'\n'''\nimport sys\n"
    },
    {
        "number": 3276,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"NO\"\nassert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\\nWBBBB\") == \"NO\"\nassert solution(\"3 4\\nWWRR\\nWBBBB\\nWBBBB\") == \"YES\"\nassert solution(\"4 4\\nWWRR\\nWBBBB\\nWBBBB\\nWWRR\") == \"YES\"\n"
    },
    {
        "number": 3277,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\nprint('Passed')\n"
    },
    {
        "number": 3277,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3 5') == '1'\nassert solution('1 2 3') == '1'\nassert solution('2 1 3') == '1'\nassert solution('5 2 3') == '2'\nassert solution('5 3 2') == '3'\n"
    },
    {
        "number": 3277,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '3'\nprint('Test 1 passed.')\n\nassert solution(stdin) == '1'\nprint('Test 2 passed.')\n\nassert solution(stdin) == '3'\nprint('Test 3 passed.')\n\nassert solution(stdin) == '4'\nprint('Test 4 passed.')\n\nassert solution(stdin) == '1'\nprint('Test 5 passed.')"
    },
    {
        "number": 3277,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == str(solution(stdin))\n\n\"\"\""
    },
    {
        "number": 3277,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3277,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == 1\nassert solution('1 2 3 4') == 1\nassert solution('1 2 3 4 5') == 1\nassert solution('1 2 3 4 5 6') == 2\nassert solution('1 2 3 4 5 6 7') == 3\n"
    },
    {
        "number": 3277,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1\"\nprint(solution(stdin))\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 3277,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3277,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 3 5\n1\n2\n3''') == '1'\nassert solution('''3 3 5\n1\n2\n3''') == '1'\nassert solution('''6 3 5\n1\n2\n3\n3\n2\n1\n''') == '3'\nassert solution('''6 3 5\n1\n2\n3\n3\n2\n1\n''') == '3'\nassert solution('''9 9 9\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n''') == '0'\n"
    },
    {
        "number": 3277,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 3 5\\n1\\n2\\n3') == '1\\n'\nassert solution('6 3 5\\n1\\n2\\n3\\n3\\n2\\n1\\n') == '3\\n'\nassert solution('6 3 5\\n1\\n2\\n3\\n3\\n2\\n1\\n4\\n5') == '3\\n'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n') == '3\\n'\n"
    },
    {
        "number": 3278,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin.split()[-2:]\nassert solution(\"0 2\\n1 2\\n3 3\") == \"3 2\"\nassert solution(\"1 2\\n3 3\") == \"3 2\"\nassert solution(\"1 3\\n3 3\") == \"12 3\"\nassert solution(\"1 2\\n1 3\") == \"12 3\"\n"
    },
    {
        "number": 3278,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3''') == '3 2'\nassert solution('''5''') == '12 3'\nassert solution('''10''') == '24 3'\nassert solution('''20''') == '36 3'\nassert solution('''40''') == '48 3'\n"
    },
    {
        "number": 3278,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n0 2\n1 2\n3 3''') == '3 2'\nassert solution('''5\n0 2\n1 3\n3 3\n7 5\n9 5''') == '12 3'\n"
    },
    {
        "number": 3278,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''0 2\n1 2\n3 3\n''') == '0 2'\n\nassert solution('''0 2\n1 3\n3 3\n''') == '0 2'\n\nassert solution('''0 2\n1 3\n3 3\n7 5\n9 5\n''') == '12 3'\n\nassert solution('''0 2\n1 3\n1 1\n3 3\n9 9\n''') == '0 2'\n\nassert solution('''0 2\n2 3\n3 2\n2 3\n''') == '1 2'"
    },
    {
        "number": 3278,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3\\n0 2\\n1 2\\n3 3\\n\") == \"3 2\"\nassert solution(\"3\\n0 2\\n1 3\\n3 3\\n\") == \"3 2\"\nassert solution(\"3\\n0 2\\n1 4\\n3 5\\n\") == \"0 1\"\nassert solution(\"3\\n0 2\\n1 4\\n3 5\\n7 5\\n\") == \"3 4\"\nassert solution(\"3\\n0 2\\n1 4\\n3 5\\n7 5\\n9 5\\n\") == \"0 1\"\n"
    },
    {
        "number": 3278,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3''') == '3 2'\nassert solution('''5''') == '12 3'\nassert solution('''5\n0 2\n1 3\n3 3\n7 5''') == '12 3'\nassert solution('''5\n0 2\n1 3\n4 5\n8 9\n12 13''') == '12 3'\n"
    },
    {
        "number": 3278,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n0 2\n1 2\n3 3\n''') == '3 2'\nassert solution('''5\n0 2\n1 3\n3 3\n7 5\n9 5\n''') == '12 3'\nassert solution('''4\n0 4\n1 1\n1 1\n1 1\n1 1\n''') == '2 3'\nassert solution('''8\n0 4\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '4 3'\nassert solution('''10\n0 1\n1 2\n3 4\n5 6\n7 8\n9 10\n11 11\n12 13\n13 14\n15 16\n17 18\n19 20\n''') == '10 2'\n"
    },
    {
        "number": 3278,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0 2\\n1 2\\n3 3\") == \"3 2\"\nassert solution(\"0 3\\n1 2\\n2 3\") == \"2 1\"\nassert solution(\"2\\n1 2\\n3 1\") == \"3 1\"\nassert solution(\"3\\n1 2\\n2 3\") == \"1 1\"\nassert solution(\"3\\n1 3\\n2 2\") == \"1 1\"\n"
    },
    {
        "number": 3278,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 2\\n1 2\\n3 3\\n') == '3 2'\nassert solution('3\\n0 2\\n1 2\\n3 3\\n') == '3 2'\nassert solution('5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\\n') == '12 3'\nassert solution('5\\n0 2\\n1 2\\n3 3\\n4 4\\n7 6\\n9 5\\n10 10\\n11 11\\n') == '21 5'\n"
    },
    {
        "number": 3278,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin.strip()"
    },
    {
        "number": 3279,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '00'\nassert solution('3') == '001'\nassert solution('4') == '0001'\nassert solution('5') == '00001'\n"
    },
    {
        "number": 3279,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n1\n0\n0\n3\n''') == '0100'\n\nassert solution('''2\n1\n0\n0\n3\n''') == '0001'\n\nassert solution('''4\n0\n1 1\n1\n1 1\n1\n1\n''') == '10001'\n\nassert solution('''4\n0\n1 1\n1\n1 1\n1\n1\n''') == '010100'\n\nassert solution('''4\n0\n1 1\n1\n1 1\n1\n1\n''') == '010100'"
    },
    {
        "number": 3279,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\nprint(\"Successfully got it right! :)\")"
    },
    {
        "number": 3279,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\") == \"100\"\nassert solution(\"0\\n1 1\") == \"000\"\nassert solution(\"0\\n1 1\") == \"000\"\nassert solution(\"0\\n0\") == \"0000\"\nassert solution(\"0\\n1 1\\n1\\n1\") == \"0000\"\n"
    },
    {
        "number": 3279,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\n\nimport sys\nsys.path.append('..')\nfrom shared.tree import TreeNode\n"
    },
    {
        "number": 3279,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n3\n1\n0\n0\n3\n'''\n) == '0101'\n\nassert solution(\n'''\n2\n1\n0\n1\n0\n3\n'''\n) == '00111'\n\nassert solution(\n'''\n3\n1\n1\n1\n1\n1\n1\n1\n'''\n) == '0111'\n\nassert solution(\n'''\n3\n0\n1 1\n1\n1 1\n1\n1\n'''\n) == '1111'\n\nassert solution(\n'''\n3\n1\n1 1\n1\n1 1\n1\n1\n'''\n) == '1110'"
    },
    {
        "number": 3279,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == ''\n"
    },
    {
        "number": 3279,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 3279,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n1\n0\n0\n3''') == '100'\nassert solution('''2\n1\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0\n0\n3\n0"
    },
    {
        "number": 3279,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2\n1\n0\n0\n3''') == '100'\nassert solution('''0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1''') == '000'\nassert solution('''1\n0\n1\n0\n1\n1\n1\n0\n1\n1\n1''') == '100'\nassert solution('''1\n1\n0\n1\n1\n1\n0\n1\n1\n1\n1''') == '101'\nassert solution('''1\n1\n0\n1\n1\n1\n0\n1\n1\n1\n1''') == '010'\n"
    },
    {
        "number": 3280,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('1 1') == '1'\nassert solution('1 1 1') == '1'\nassert solution('1 1 1 1') == '1'\n"
    },
    {
        "number": 3280,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == str(3)\n\"\"\"\n"
    },
    {
        "number": 3280,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n1 2\") == \"2\"\nassert solution(\"3 1\\n1 2\\n2 3\") == \"2\"\nassert solution(\"5 2\\n1 2\\n2 3\\n3 4\\n4 5\") == \"3\"\nassert solution(\"5 2\\n1 3\\n4 6\\n7 8\\n2 5\") == \"3\"\nassert solution(\"5 2\\n1 3\\n4 6\\n7 8\\n2 5\\n3 4\") == \"3\"\n"
    },
    {
        "number": 3280,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 1\n1 2\n2 3\n2 3\n''') == '2'\nassert solution('''4 1\n1 3\n4 6\n7 8\n2 5\n''') == '3'\nassert solution('''2 1\n1 1\n2 2\n''') == '1'\nassert solution('''2 1\n1 1\n1 2\n2 2\n''') == '2'\nassert solution('''2 1\n1 1\n1 2\n2 2\n2 3\n''') == '2'\n"
    },
    {
        "number": 3280,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"3 1\n1 2\n2 3\n2 3\"\"\") == \"2\"\nassert solution(\"\"\"3 1\n2 3\n1 2\n1 2\"\"\") == \"2\"\nassert solution(\"\"\"4 1\n1 3\n4 6\n7 8\n2 5\"\"\") == \"3\"\nassert solution(\"\"\"10 10\n1 2\n4 5\n7 8\n2 3\n5 6\n8 9\n1 2\n3 4\n5 6\n7 8\"\"\") == \"6\"\n"
    },
    {
        "number": 3280,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 1\n1 2\n2 3\n2 3\n''') == '2'\nassert solution('''4 1\n1 3\n4 6\n7 8\n2 5\n''') == '3'\nassert solution('''8 3\n1 9\n5 6\n7 8\n2 5\n4 6\n3 4\n1 9\n8 7\n7 6\n3 2\n''') == '3'\n"
    },
    {
        "number": 3280,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 1\n1 2\n2 3\n2 3\n''') == '2'\nassert solution('''4 1\n1 3\n4 6\n7 8\n2 5\n''') == '3'\nassert solution('''5 1\n1 5\n2 7\n3 9\n4 9\n5 8\n''') == '4'\nassert solution('''6 1\n1 5\n2 7\n3 9\n4 9\n5 8\n6 8\n''') == '5'\nassert solution('''7 1\n1 5\n2 7\n3 9\n4 9\n5 8\n6 8\n7 8\n''') == '6'\n"
    },
    {
        "number": 3280,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3280,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n1 2\\n2 3\\n2 3\") == 2\nassert solution(\"3 1\\n1 2\\n2 3\\n2 3\") == 2\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\\n1 2\") == 3\n"
    },
    {
        "number": 3280,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 1\n1 2\n2 3\n2 3''') == '2'\nassert solution('''4 1\n1 3\n4 6\n7 8\n2 5''') == '3'\nprint(\"All tests passed successfully!\")\n"
    },
    {
        "number": 3281,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n') == '90.00000000'\nassert solution('3 3 1000\\n-2 2\\n1 1\\n2 2\\n3 3\\n3 4\\n2 3\\n2 1\\n1 2\\n2 1\\n3 4\\n2 1\\n1 3\\n2 3\\n3 4\\n4 1\\n3 1\\n4 1\\n4 2\\n4 3\\n2 4\\n1 3\\n1 4\\n3 4\\n4 1\\n3 1\\n3 2\\n2 1\\n1 2\\n1 4\\n3 1\\n1 1\\n1 2\\n2 4\\n2 1\\n1 3\\n2 3\\n3 4\\n4 1\\n3 1\\n3 2\\n2 1\\n1 2\\n1 4\\n3 1\\n1 1\\n1 2\\n2 4\\n2 1\\n1 3\\n2 3\\n3 4\\n4 1\\n3 1\\n3 2\\n2 1\\n1 2\\n1 4\\n3 1\\n1 1\\n1 2\\n2 4\\n2 1\\n1 3\\n2 3\\n3 4\\n4 1\\n3 1\\n3 2\\n2 1\\n1 2\\n1 4\\n3 1\\n1 1\\n1 2\\n2 4\\n2 1\\n1 3\\n2 3\\n3 4\\n4 1\\n3 1\\n3 2\\n2 1\\n1 2\\n1 4\\n3 1\\n1 1\\n1 2\\n2 4\\n2 1\\n1 3\\n2 3\\n3 4\\n4 1\\n3 1\\n3 2\\n2 1\\n1 2\\n1 4\\n3 1\\n1 1\\n1 2\\n2 4\\n2 1\\n1 3\\n2 3\\n3 4\\n4 1\\n3 1\\n3 2\\n2 1\\n1 2\\n1 4\\n3 1\\n1 1\\n1 2\\n2 4\\n2 1\\n1 3\\n2 3\\n3 4\\n4 1\\n3 1\\n3 2\\n2 1\\n1 2\\n1 4\\n3 1\\n1 1\\n1 2\\n2 4\\n2 1\\n1 3\\n2 3\\n3 4\\n4 1\\n3 1\\n3 2\\n2 1\\n1 2\\n1 4\\n3 1\\n1 1\\n1 2\\n2 4\\n2 1\\n1 3\\n2 3\\n3 4\\n4 1\\n3 1\\n3 2\\n2 1\\n1 2\\n1 4\\n3 1\\n1 1\\n1 2\\n2 4\\n2 1\\n1 3\\n2 3\\n3 4\\n4 1\\n3 1\\n3 2\\n2 1\\n1 2\\n1 4\\n3 1\\n1 1\\n1 2\\n2 4\\n2 1\\n1 3\\n2 3\\n3 4\\n4 1\\n3 1\\n3 2\\n2 1\\n1 2\\n1 4\\n3 1\\n1 1\\n1 2\\n2 4\\n2 1\\n1 3\\n2 3\\n3 4\\n4 1\\n3 1\\n3 2\\n2 1\\n1 2\\n1 4\\n3 1\\n1 1\\n1 2\\n2 4\\n2 1\\n1 3\\n2 3\\n3 4\\n4 1\\n3 1\\n3 2\\n2 1\\n1 2\\n1 4\\n3 1\\n1 1\\n1 2\\n2 4\\n2 1\\n1 3\\n2 3\\n3 4\\n4 1\\n3 1\\n3 2\\n2 1\\n1 2\\n1 4\\n3 1\\n1 1\\n1 2\\n2 4\\n2 1\\n1 3\\n2 3\\n3 4\\n4 1\\n3 1\\n3 2\\n2 1\\n1 2\\n1 4\\n3 1\\n1 1\\n1 2\\n2 4\\n2 1\\n1 3\\n2 3\\n3 4\\n4 1\\n3 1\\n3 2\\n2 1\\n1 2\\n1 4\\n3 1\\n1 1\\n1 2\\n2 4\\n2 1\\n1 3\\n2 3\\n3 4\\n4 1\\n3 1\\n3 2\\n2 1\\n1 2\\n1 4\\n3 1\\n1 1\\n1 2\\n2 4\\n2 1\\n1 3\\n2 3\\n3 4\\n4 1\\n3 1\\n3 2\\n2 1\\n1 2\\n1 4\\n3 1\\n1 1\\n1 2\\n2 4\\n2 1\\n1 3\\n2 3\\n3 4\\n4 1\\n3 1\\n3 2\\n2 1\\n1 2\\n1 4\\n3 1\\n1 1\\n1 2\\n2 4\\n2 1\\n1 3\\n2 3\\n3 4\\n4 1\\n3 1\\n3 2\\n2 1\\n1 2\\n1 4\\n3 1\\n1 1\\n1 2\\n2 4\\n2 1\\n1 3\\n2 3\\n3 4\\n4 1\\n"
    },
    {
        "number": 3281,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    '''5 6 500\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5''') == '90.0'\nassert solution(\n    '''5 6 452\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5''') == '126.86989765'\n"
    },
    {
        "number": 3281,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == \"90.00000000\"\nprint(\"Test1 passed!\")\nassert solution(input) == \"126.86989765\"\nprint(\"Test2 passed!\")\nassert solution(input) == \"Impossible\"\nprint(\"Test3 passed!\")\nassert solution(input) == \"Impossible\"\nprint(\"Test4 passed!\")\nassert solution(input) == \"126.86989765\"\nprint(\"Test5 passed!\")\n\nTest1 passed!\nTest2 passed!\nTest3 passed!\nTest4 passed!\nTest5 passed!\n"
    },
    {
        "number": 3281,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '0'\nprint(solution(stdin))\n"
    },
    {
        "number": 3281,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"0\"\nassert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"90.00000000\"\n\n\"\"\"\n"
    },
    {
        "number": 3281,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 3281,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 6 500\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5''') == '90.00000000'\nassert solution('''5 6 500\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5''') == '126.86989765'\nassert solution('''5 6 500\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n-100 0\n-"
    },
    {
        "number": 3281,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin.split()[-1]\n"
    },
    {
        "number": 3281,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5') == '90.00000000'\n\nassert solution('5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5') == '126.86989765'\n\nassert solution('5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n5 6') == '90.00000000'\n\nassert solution('5 6 400\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5') == '126.07448716'\n\nassert solution('5 6 50\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5') == '180.00000000'"
    },
    {
        "number": 3281,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 6 450\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n''') == '126.86989765'\nassert solution('''5 6 500\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n''') == '90.0'\nassert solution('''5 6 500\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n''') == '90.0'\nassert solution('''5 6 500\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n''') == '90.0'\nassert solution('''5 6 500\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n''') == '90.0'\n"
    },
    {
        "number": 3282,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3282,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('37') == '4'\nassert solution('30014') == '7'\nassert solution('0') == ''\nassert solution('3728') == '0'\nassert solution('372828') == '1'\n"
    },
    {
        "number": 3282,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('2') == ''\nassert solution('3') == ''\nassert solution('37') == ''\n"
    },
    {
        "number": 3282,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('3') == ''\nassert solution('4') == ''\n"
    },
    {
        "number": 3282,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''37''') == '4'\nassert solution('''30014''') == '7'\nprint('Tests passed')\n"
    },
    {
        "number": 3282,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"37\") == \"4\"\nassert solution(\"30014\") == \"7\"\nassert solution(\"37293420\") == \"7\"\nassert solution(\"372934234566\") == \"7\"\nassert solution(\"372934234567\") == \"7\"\n"
    },
    {
        "number": 3282,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('37') == '4'\nassert solution('30014') == '7'\nassert solution('40013') == '7'\nassert solution('8') == '1'\nassert solution('99999') == '0'\n"
    },
    {
        "number": 3282,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('37') == '4'\nassert solution('30014') == '7'\nassert solution('90755') == '9'\nassert solution('375035') == '4'\n"
    },
    {
        "number": 3282,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('37') == '4'\nassert solution('30014') == '7'\nassert solution('40014') == '6'\nassert solution('59914') == '5'\nassert solution('60114') == '5'\n"
    },
    {
        "number": 3282,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3283,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3 1''') == '3.5'\nassert solution('''3 3 2''') == '4.9'"
    },
    {
        "number": 3283,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3.5\"\n"
    },
    {
        "number": 3283,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '3.5'\nassert solution('2 3 1') == '3.5'\nassert solution('3 3 2') == '4.9'\nassert solution('2 1 3') == '6.8'\nassert solution('4 2 1') == '3.2'\n"
    },
    {
        "number": 3283,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3 1') == '3.5'\nassert solution('3 3 2') == '4.9'\nassert solution('2 3 2') == '6.0'\nassert solution('2 3 3') == '9.0'\nassert solution('2 3 4') == '12.0'\n"
    },
    {
        "number": 3283,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '2 3 1'\n) == '3.5'\nassert solution(\n    '3 3 2'\n) == '4.9'\n\"\"\""
    },
    {
        "number": 3283,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 3 1\") == \"3.5\"\nassert solution(\"3 3 2\") == \"4.9\"\n"
    },
    {
        "number": 3283,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == str(3.5)\n"
    },
    {
        "number": 3283,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3.5\"\n"
    },
    {
        "number": 3283,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3 1') == '3.5'\nassert solution('3 3 2') == '4.9'\n"
    },
    {
        "number": 3283,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3284,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3284,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 5 1 5') == 19\nassert solution('12 12 1 12') == 4\n"
    },
    {
        "number": 3284,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3284,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 5 1 5''') == 19\nassert solution('''12 12 1 12''') == 4\n"
    },
    {
        "number": 3284,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 5 1 5') == '19'\nassert solution('12 12 1 12') == '4'\n\"\"\"\n\nfrom collections import defaultdict\nfrom typing import List, Tuple"
    },
    {
        "number": 3284,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"12 12 1 12\") == \"4\"\nassert solution(\"1 5 1 5\") == \"19\"\nassert solution(\"12 12 1 12\") == \"4\"\nassert solution(\"1 2 1 2\") == \"4\"\nassert solution(\"1 2 1 2\") == \"4\"\n"
    },
    {
        "number": 3284,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"19\"\n"
    },
    {
        "number": 3284,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 5 1 5') == 19\nassert solution('12 12 1 12') == 4\nprint('Test: 0 passed.')\n"
    },
    {
        "number": 3284,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3284,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 5 1 5') == '19'\nassert solution('12 12 1 12') == '4'\n\n\"\"\"\n\"\"\"\nThis is a hard problem, and you will have to solve it without brute force.\n\nHere is the function of coprime integers, which is given below:\n\nFor any two integers $x$ and $y$, if $a \\le x \\le b$ and $c \\le y \\le d$, then $a$ and $b$ and $c$ and $d$ are co-prime.\n\nFor example: $2 \\le 5 \\le 10$ and $1 \\le 1 \\le 10$.\n\nThe prime numbers up to $10$ are:\n\n1\n2\n3\n5\n7\n11\n13\n17\n19\n23\n29\n31\n37\n41\n43\n47\n53\n59\n61\n67\n71\n73\n79\n83\n89\n97\n101\n103\n107\n109\n113\n127\n131\n137\n139\n149\n151\n157\n163\n167\n173\n179\n181\n191\n193\n197\n199\n211\n223\n227\n229\n233\n239\n241\n251\n257\n263\n269\n271\n277\n281\n283\n293\n307\n311\n313\n317\n331\n337\n347\n349\n353\n359\n367\n373\n379\n383\n389\n397\n401\n409\n419\n421\n431\n433\n439\n443\n449\n457\n461\n463\n467\n479\n487\n491\n499\n503\n509\n521\n523\n541\n547\n557\n563\n569\n571\n577\n587\n593\n599\n601\n613\n617\n619\n631\n641\n643\n647\n653\n659\n661\n673\n677\n683\n691\n701\n709\n719\n727\n733\n739\n743\n751\n757\n761\n769\n773\n787\n797\n809\n811\n821\n823\n827\n829\n839\n853\n857\n859\n863\n877\n881\n883\n887\n907\n911\n919\n929\n937\n941\n947\n953\n967\n971\n977\n983\n991\n997\n\n-----Input-----\nThe input consists of a single line of four space-separated integers $a$, $b$, $c$, and $d$. These integers satisfy the bounds ($1 \\le a \\le b \\le 10^7$, $1 \\le c \\le d \\le 10^7$).\n\n-----Output-----\nPrint a single integer: the number of coprime pairs $(x,y)$ with $a \\le x \\le b, c\\le y \\le d$.\n\n-----Examples-----\nSample Input 1:\n1 5 1 5\nSample Output 1:\n19\n\nSample Input 2:\n12 12 1 12\nSample Output 2:\n4\n\"\"\""
    },
    {
        "number": 3285,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin='''10 19\n''') == '4'\nassert solution(stdin='''10 31\n''') == '4'\nassert solution(stdin='''4 38\n''') == '4'\nassert solution(stdin='''6 14\n''') == '2'\nassert solution(stdin='''100 140\n''') == '1'\n"
    },
    {
        "number": 3285,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 5') == '4'\nassert solution('1 12') == '4'\nassert solution('1 11') == '-1'\nassert solution('1 10') == '-1'\nassert solution('1 9') == '-1'\n"
    },
    {
        "number": 3285,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 5') == '4'\nassert solution('1 12') == '4'\nassert solution('1 10') == '-1'\nassert solution('1 123') == '-1'\nassert solution('1 1234') == '-1'\n"
    },
    {
        "number": 3285,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3285,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 5\n''') == '4'\nassert solution('''1 12\n''') == '4'\nassert solution('''2 4\n''') == '4'\nassert solution('''1 1000000\n''') == '2'\nassert solution('''1 1000000000\n''') == '2'\n"
    },
    {
        "number": 3285,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 5\") == \"4\"\nassert solution(\"1 12\") == \"4\"\nassert solution(\"1 100\") == \"4\"\nassert solution(\"1 101\") == \"5\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 3285,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 5') == '4'\nassert solution('1 12') == '4'\nassert solution('2 2') == '0'\nassert solution('2 11') == '4'\nassert solution('3 2') == '1'\n"
    },
    {
        "number": 3285,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 5') == '4'\nassert solution('1 12') == '4'\nassert solution('2 15') == '8'\nassert solution('2 14') == '8'\nassert solution('2 8') == '8'\n"
    },
    {
        "number": 3285,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 5\") == \"4\"\nassert solution(\"1 12\") == \"4\"\nassert solution(\"1 16\") == \"8\"\nassert solution(\"1 2\") == \"4\"\nassert solution(\"1 18\") == \"8\"\n"
    },
    {
        "number": 3285,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') is None\nassert solution('1 2') == '2'\nassert solution('1 3') == '2'\nassert solution('1 2 3') == '2'\nassert solution('1 2 3 4') == '3'\n"
    },
    {
        "number": 3286,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"car\") == \"cocaror\"\nassert solution(\"cocar\") == \"cocaror\"\nassert solution(\"cocac\") == \"cocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocacocac"
    },
    {
        "number": 3286,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"cocar\") == \"2\"\nassert solution(\"ccr\") == \"2\"\nassert solution(\"ccor\") == \"2\"\nassert solution(\"ccou\") == \"2\"\nassert solution(\"ccorra\") == \"2\"\n"
    },
    {
        "number": 3286,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"car\") == \"cocaror\"\nassert solution(\"cocar\") == \"cocaror\"\nassert solution(\"coa\") == \"ccoa\"\nassert solution(\"co\") == \"cco\"\nassert solution(\"ca\") == \"cc\"\n"
    },
    {
        "number": 3286,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 3286,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"car\") == \"cocaror\"\nassert solution(\"cocar\") == \"cocaror\"\nassert solution(\"cocaa\") == \"cocaror\"\nassert solution(\"coccc\") == \"cocaror\"\nassert solution(\"cccc\") == \"cocaror\"\n"
    },
    {
        "number": 3286,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"car\") == \"cocaror\"\nassert solution(\"cocar\") == \"cocaror\"\nassert solution(\"cocaror\") == \"cocaror\"\nassert solution(\"cocaroror\") == \"cocaroror\"\nassert solution(\"cocarororan\") == \"cocarororan\"\n"
    },
    {
        "number": 3286,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('cocar') == '2'\nassert solution('car') == '1'\nassert solution('car') == '1'\nassert solution('car') == '1'\nassert solution('cocar') == '2'\n"
    },
    {
        "number": 3286,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"car\") == \"cocaror\"\nassert solution(\"cocar\") == \"cocaror\"\nassert solution(\"co\") == \"cocaror\"\nassert solution(\"co\") == \"cocaror\"\nassert solution(\"co\") == \"cocaror\"\n"
    },
    {
        "number": 3286,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"car\") == \"cocaror\"\nassert solution(\"cocar\") == \"cocaror\"\n"
    },
    {
        "number": 3286,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"cocar\") == \"1\"\nassert solution(\"car\") == \"1\"\nassert solution(\"cocaror\") == \"2\"\nassert solution(\"orar\") == \"0\"\nassert solution(\"cocarro\") == \"1\"\n"
    },
    {
        "number": 3287,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3287,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n0 2 0 1''') == '8'\nassert solution('''5\n1000000 1 1 1 1''') == '0'\nassert solution('''6\n5000000 5 5 5 5 5''') == '0'\nassert solution('''5\n5000000 5 5 5 5 5''') == '0'\nassert solution('''10\n3 4 5 6 7 8 9 10''') == '0'\n"
    },
    {
        "number": 3287,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 2 0 1') == '8'\nassert solution('1000000 1 1 1 1') == '0'\nassert solution('4') == '8'\nassert solution('1000000 1 1 1 1') == '0'"
    },
    {
        "number": 3287,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3287,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n0 2 0 1\n''') == '8'\nassert solution('''5\n1000000 1 1 1 1\n''') == '0'\n'''\n"
    },
    {
        "number": 3287,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 3287,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n0 2 0 1''') == '8'\nassert solution('''5\n1000000 1 1 1 1''') == '0'\nassert solution('''9\n10 9 5 2 1 1 1 1''') == '0'\nassert solution('''10\n100000 1 1 1 1 1 1 1''') == '0'\nassert solution('''100000''') == '0'\n"
    },
    {
        "number": 3287,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n0 2 0 1''') == '8'\nassert solution('''5\n1000000 1 1 1 1''') == '0'\nassert solution('''6\n1000000 1 1 1 1 1''') == '0'\nassert solution('''7\n1000000 1 1 1 1 1 1''') == '0'\nassert solution('''8\n1000000 1 1 1 1 1 1 1''') == '0'\n"
    },
    {
        "number": 3287,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3287,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3288,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 650\n''') == 'zyz'\nassert solution('''2 651\n''') == '-1'\nassert solution('''3 651\n''') == '-1'\nassert solution('''2 3\n''') == 'b'\nassert solution('''3 3\n''') == 'b'\n"
    },
    {
        "number": 3288,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 650\") == \"zyz\"\nassert solution(\"2 651\") == \"-1\"\nprint('Passed')\n"
    },
    {
        "number": 3288,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 650\") == \"zyz\"\nassert solution(\"2 651\") == \"-1\"\nprint(\"Tests passed successfully!\")\n"
    },
    {
        "number": 3288,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ababac') == 'ababac'\nassert solution('ababay') == 'ababay'\nassert solution('zyzyzx') == 'zyzyzx'\nassert solution('zyzyza') == 'zyzyza'\nassert solution('zyzyz') == 'zyz'\n"
    },
    {
        "number": 3288,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('aba\\naab\\naabab\\n\\n\\n') == 'aba'\nassert solution('aba\\naab\\naabab\\n\\n\\n') == 'aab'\nassert solution('aba\\naab\\naabab\\n\\n\\n') == 'aabab'\nassert solution('aba\\naab\\naabab\\n\\n\\n') == 'aabab'\nassert solution('aba\\naab\\naabab\\n\\n\\n') == 'aabab'\n"
    },
    {
        "number": 3288,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 650') == 'zyz'\nassert solution('2 651') == '-1'\n"
    },
    {
        "number": 3288,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 650\") == \"zyz\"\nassert solution(\"2 651\") == -1\n\"\"\"\n\nfrom collections import Counter"
    },
    {
        "number": 3288,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == '-1'\nassert solution('a') == 'a'\nassert solution('aa') == 'ab'\nassert solution('aba') == 'ab'\nassert solution('aaab') == 'aba'\n"
    },
    {
        "number": 3288,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expect\n\"\"\"\n\nn, k = map(int, stdin.split())"
    },
    {
        "number": 3288,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 650\\n\") == \"zyz\"\nassert solution(\"2 651\\n\") == \"-1\"\nassert solution(\"3 60\\n\") == \"zzz\"\nassert solution(\"3 61\\n\") == \"-1\"\nassert solution(\"3 62\\n\") == \"aba\"\n"
    },
    {
        "number": 3289,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 10 0\n10 0 1\n12 8 1\n5 5 0\n11 2 1\n11 3 0''') == '4'\nassert solution('''2\n3 2 1\n1 1 1\n1 1 0''') == '4'\nassert solution('''0\n5 1 1\n1 1 1\n0 1 0\n1 1 0\n0 1 0\n0 0 0\n0 0 0\n2 1 0\n1 1 1\n0 1 1\n1 1 0''') == '8'\nassert solution('''1\n1 1 1\n1 1 0''') == '2'\n"
    },
    {
        "number": 3289,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0\\n6\\n0\\n10\\n0\\n12\\n8\\n5\\n5\\n11\\n2\\n11\\n3\\n') == '4'\nassert solution('2\\n6\\n0\\n10\\n0\\n12\\n8\\n5\\n5\\n11\\n2\\n11\\n3\\n') == '8'\nassert solution('2\\n2\\n0\\n2\\n0\\n2\\n2\\n2\\n0\\n2\\n0\\n2\\n2\\n2\\n') == '4'\nassert solution('1\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n"
    },
    {
        "number": 3289,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0\\n0\\n0') == '0'\nassert solution('10\\n0\\n0') == '10'\nassert solution('6\\n0\\n0') == '4'\nassert solution('6\\n6\\n0') == '4'\nassert solution('6\\n6\\n6') == '4'\n"
    },
    {
        "number": 3289,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1\n0 10 0\n10 0 1\n12 8 1\n5 5 0\n11 2 1\n11 3 0''') == '4'\nassert solution('''1\n0 10 0\n10 0 1\n12 8 1\n5 5 0\n11 2 1\n11 3 0\n0 1 1\n2 3 1\n6 1 0\n6 3 1''') == '8'\nassert solution('''1\n0 10 0\n10 0 1\n12 8 1\n5 5 0\n11 2 1\n11 3 0\n0 1 1\n2 3 1\n6 1 0\n6 3 1\n0 1 1\n2 3 1\n6 1 0\n6 3 1\n0 1 1\n2 3 1\n6 1 0\n6 3 1''') == '8'\nassert solution('''1\n0 10 0\n10 0 1\n12 8 1\n5 5 0\n11 2 1\n11 3 0\n0 1 1\n2 3 1\n6 1 0\n6 3 1\n0 1 1\n2 3 1\n6 1 0\n6 3 1\n0 1 1\n2 3 1\n6 1 0\n6 3 1\n0 1 1\n2 3 1\n6 1 0\n6 3 1''') == '8'\nassert solution('''1\n0 10 0\n10 0 1\n12 8 1\n5 5 0\n11 2 1\n11 3 0\n0 1 1\n2 3 1\n6 1 0\n6 3 1\n0 1 1\n2 3 1\n6 1 0\n6 3 1\n0 1 1\n2 3 1\n6 1 0\n6 3 1\n0 1 1\n2 3 1\n6 1 0\n6 3 1''') == '8'\n"
    },
    {
        "number": 3289,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"0 10 0\n10 0 1\n12 8 1\n5 5 0\n11 2 1\n11 3 0\"\"\") == \"4\"\nassert solution(\"\"\"6\n0 10 0\n10 0 1\n12 8 1\n5 5 0\n11 2 1\n11 3 0\"\"\") == \"8\"\nassert solution(\"\"\"1\n6 1 1\n0 2 0\n2 1 1\n6 1 1\n8 2 0\n4 4 0\n4 0 0\n2 3 1\n6 1 0\n6 3 1\"\"\") == \"8\"\nassert solution(\"\"\"10\n6 1 1\n0 2 0\n2 1 1\n6 1 1\n8 2 0\n4 4 0\n4 0 0\n2 3 1\n6 1 0\n6 3 1\"\"\") == \"8\"\nassert solution(\"\"\"100\n60 20 0\n60 20 1\n60 24 0\n60 21 0\n60 22 0\n60 21 1\n60 22 1\n60 22 2\n60 21 2\n60 22 2\n60 22 3\n60 21 3\n60 22 3\n60 22 4\n60 21 4\n60 22 4\n60 22 4\n60 22 4\n60 22 4\n60 22 5\n60 21 5\n60 22 5\n60 22 5\n60 22 5\n60 22 5\n60 22 5\n60 22 6\n60 21 6\n60 22 6\n60 22 6\n60 22 6\n60 22 6\n60 22 6\n60 22 6\n60 22 6\n60 22 6\n60 22 6\n60 22 7\n60 21 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22 7\n60 22"
    },
    {
        "number": 3289,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0 0 0\\n1 1 1\\n0 0 0\") == \"4\"\nassert solution(\"2 0 0\\n0 1 1\\n0 0 0\") == \"1\"\nassert solution(\"3 0 0\\n0 1 1\\n0 0 0\") == \"3\"\nassert solution(\"4 0 0\\n0 1 1\\n0 0 0\") == \"1\"\nassert solution(\"5 0 0\\n0 1 1\\n0 0 0\") == \"1\"\n"
    },
    {
        "number": 3289,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10') == '4'\nassert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\n"
    },
    {
        "number": 3289,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''0\n0\n0\n0\n0\n0\n0''') == '0'\nassert solution('''3\n1 2 0\n1 3 0\n0 1 1\n2 1 1\n3 1 1\n0 3 1\n0 0 1\n0 1 3\n0 0 3\n0 0 0''') == '3'\nassert solution('''1\n5\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n"
    },
    {
        "number": 3289,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n6\n0 10 0\n10 0 1\n12 8 1\n5 5 0\n11 2 1\n11 3 0\n''') == '4'\nassert solution('''\n10\n6 1 1\n0 2 0\n2 1 1\n6 1 1\n8 2 0\n4 4 0\n4 0 0\n2 3 1\n6 1 0\n6 3 1\n''') == '8'\nassert solution('''\n10\n0 0 0\n0 0 1\n2 2 0\n4 4 0\n4 0 0\n2 3 1\n6 1 0\n6 3 1\n''') == '8'\nassert solution('''\n4\n0 0 0\n0 0 1\n2 2 0\n4 4 0\n4 0 0\n2 3 1\n6 1 0\n6 3 1\n''') == '4'\nassert solution('''\n4\n0 0 0\n0 0 1\n2 2 0\n4 4 0\n4 0 0\n2 3 1\n6 1 0\n6 3 1\n''') == '4'\n"
    },
    {
        "number": 3289,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0"
    },
    {
        "number": 3290,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n\nassert stdin == \"\"\"\\\n2 4 3\n3 4 5 7\n1 2 10\n\"\"\"\n\nassert stdin == \"\"\"\\\n3 5 2\n1 4 7 9 11\n2 3\n\"\"\"\n"
    },
    {
        "number": 3290,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n') == '2'\nassert solution('2\\n3\\n') == '1'\nassert solution('2\\n2\\n') == '-1'\nassert solution('2\\n2\\n2\\n') == '-1'\nassert solution('1\\n2\\n2\\n') == '0'\n"
    },
    {
        "number": 3290,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"2 4 3\n3 4 5 7\n1 2 10\"\"\"\n) == \"0\"\n\nassert solution(\n\"\"\"3 5 2\n1 4 7 9 11\n2 3\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"10 10 10\n5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5"
    },
    {
        "number": 3290,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2'\n"
    },
    {
        "number": 3290,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 4 3\") == \"0\"\nassert solution(\"3 4 5 7\") == \"0\"\nassert solution(\"1 2 10\") == \"2\"\nassert solution(\"3 4 5 7\") == \"-1\"\nassert solution(\"1 2 3\") == \"1\"\n"
    },
    {
        "number": 3290,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0\"\nprint(\"Test case 1 Passed.\")\nassert solution(stdin) == \"2\"\nprint(\"Test case 2 Passed.\")\nassert solution(stdin) == \"2\"\nprint(\"Test case 3 Passed.\")\nassert solution(stdin) == \"-1\"\nprint(\"Test case 4 Passed.\")\nassert solution(stdin) == \"2\"\nprint(\"Test case 5 Passed.\")\n"
    },
    {
        "number": 3290,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 5 2\") == \"2\"\nassert solution(\"2 3 1\") == \"-1\"\nassert solution(\"2 4 3\") == \"0\"\nassert solution(\"2 4 4\") == \"2\"\nassert solution(\"2 4 3\") == \"0\"\n"
    },
    {
        "number": 3290,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 4 3\n3 4 5 7\n1 2 10\n''') == '0'\n\nassert solution('''2 4 4\n1 4 7 9 11\n2 3\n''') == '2'\n\nassert solution('''2 4 3\n3 4 5 7\n9 11 1\n''') == '2'\n"
    },
    {
        "number": 3290,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3290,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"2 4 3\n3 4 5 7\n1 2 10\n\"\"\") == \"0\"\nassert solution(\"\"\"3 5 2\n1 4 7 9 11\n2 3\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3291,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''1 2\n3 4'''\n) == '3\\n-1 1\\n2 1\\n0 -2'\n\nassert solution(\n'''2 3\n3 4'''\n) == '1'\n\nassert solution(\n'''4 3\n4 5\n'''\n) == '2'\n\nassert solution(\n'''1 1\n3 1'''\n) == '3'\n\nassert solution(\n'''1 1\n1 1'''\n) == '1'"
    },
    {
        "number": 3291,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 3') == '1'\nassert solution('3 2') == '-1'\nassert solution('2 3') == '2'\nassert solution('3 4') == '3'\n"
    },
    {
        "number": 3291,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '-1 -1'\n\nprint('Test success!')"
    },
    {
        "number": 3291,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"2 4\") == \"3\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"1 1\") == \"0\"\n"
    },
    {
        "number": 3291,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n1 2\n3 4\n\"\"\"\n    ) == \"\"\"\n3\n-1 1\n2 1\n0 -2\n\"\"\"\n\nassert solution(\n\"\"\"\n3 2\n2 3\n\"\"\"\n    ) == \"\"\"\n3\n-1 1\n2 1\n0 -1\n\"\"\"\n\nassert solution(\n\"\"\"\n1 1\n1 1\n\"\"\"\n    ) == \"\"\"\n2\n0 0\n1 1\n1 1\n0 0\n\"\"\"\n\nassert solution(\n\"\"\"\n3 4\n1 2\n3 4\n\"\"\"\n    ) == \"\"\"\n4\n2 2\n0 -1\n0 -1\n0 -1\n\"\"\"\n\nassert solution(\n\"\"\"\n2 2\n1 2\n\"\"\"\n    ) == \"\"\"\n1\n0 0\n0 1\n\"\"\""
    },
    {
        "number": 3291,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3291,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3\\n3 2') == '1\\n-2 -1\\n'\nassert solution('1 2\\n3 4') == '3\\n-1 1\\n2 1\\n0 -2\\n'\nassert solution('1 2\\n3 4\\n2 3') == '3\\n-1 1\\n2 1\\n0 -2\\n'\nassert solution('1 2\\n2 3\\n3 4') == '3\\n-1 1\\n2 1\\n0 -2\\n'\nassert solution('1 2\\n3 4\\n1 2') == '3\\n-1 1\\n2 1\\n0 -2\\n'\n"
    },
    {
        "number": 3291,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"2 4\") == \"3\"\nassert solution(\"1 4\") == \"2\"\nassert solution(\"1 2\") == \"3\"\nassert solution(\"1 1\") == \"2\"\n"
    },
    {
        "number": 3291,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n3 2\") == \"\"\nassert solution(\"2 3\\n3 2\\n0 -1\") == \"1\"\nassert solution(\"2 3\\n3 2\\n-1 -2\\n0 -1\") == \"1\\n-1 1\"\n\n\"\"\"\n"
    },
    {
        "number": 3291,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n3 2\") == \"1\\n-2 -1\\n\"\nassert solution(\"1 2\\n3 4\") == \"3\\n-1 1\\n2 1\\n0 -2\\n\"\nassert solution(\"2 1\\n1 1\") == \"3\\n-1 1\\n2 1\\n0 -2\\n\"\n"
    },
    {
        "number": 3292,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\nIVO\\nJASNA') == '4'\nassert solution('2\\nIVO\\nJASNA\\nJOSIPA') == '4'\nassert solution('3\\nIVO\\nJASNA\\nJOSIPA\\nJASLIA') == '24'\nassert solution('4\\nIVO\\nJASNA\\nJOSIPA\\nJASLIA\\nJOSILDA') == '24'\nassert solution('5\\nIVO\\nJASNA\\nJOSIPA\\nJASLIA\\nJOSILDA\\nJOSILDA') == '24'\n"
    },
    {
        "number": 3292,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3292,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"IVO\") == \"IVO\"\nassert solution(\"IVO\\nIVO\") == \"IVO IVO\"\nassert solution(\"IVO\\nIVO\\nIVO\") == \"IVO IVO IVO\"\nassert solution(\"IVO\\nIVO\\nIVO\\nIVO\") == \"IVO IVO IVO IVO\"\n"
    },
    {
        "number": 3292,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('t\\nIVO\\nJASNA\\nJOSIPA\\n') == '4'\nassert solution('t\\nIVO\\nJASNA\\nJOSIPA\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA\\n') == '24'\nassert solution('t\\nIVO\\nJASNA\\nJOSIPA\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO"
    },
    {
        "number": 3292,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"M\") == \"\"\nassert solution(\"IVO\") == \"IVO\"\nassert solution(\"IVO M\") == \"IVO\"\nassert solution(\"IVO M JASNA\") == \"IVOM\"\n"
    },
    {
        "number": 3292,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('IVO\\nJASNA\\nJOSIPA\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO') == '4\\n'\nassert solution('IVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO') == '24\\n'\nassert solution('IVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO"
    },
    {
        "number": 3292,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('foo') == ''\nassert solution('a') == ''\nassert solution('z') == ''\nassert solution('ABC') == ''\n"
    },
    {
        "number": 3292,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\nIVO\\nJASNA\\nJOSIPA\\nIVO') == '4'\nassert solution('5\\nIVO\\nJASNA\\nJOSIPA\\nIVO\\nIVO') == '4'\nassert solution('5\\nIVO\\nIVO') == '4'\nassert solution('5\\nIVO\\nIVO\\nIVO') == '4'\nassert solution('5\\nIVO\\nIVO\\nIVO\\nIVO') == '4'\n"
    },
    {
        "number": 3292,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    '3\\nIVO\\nJASNA\\nJOSIPA') == '4'\nassert solution('5\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA') == '24'\nprint(solution(stdin))\n\n'''\n"
    },
    {
        "number": 3292,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(open('test_input.txt').read()) == \"24\"\nassert solution(open('test_input2.txt').read()) == \"24\"\nassert solution(open('test_input3.txt').read()) == \"1\"\nassert solution(open('test_input4.txt').read()) == \"1\"\nassert solution(open('test_input5.txt').read()) == \"1\"\n"
    },
    {
        "number": 3293,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2 2 3 8\") == \"39\"\n"
    },
    {
        "number": 3293,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n3\n1 2 3 1\n2 3 4 1\n3 4 5 1\n\"\"\"\n    ) == \"3\"\nassert solution(\n\"\"\"\n3\n2 2 3 8\n3 1 5 6\n1 9 4 7\n\"\"\"\n    ) == \"39\"\n\nassert solution(\n\"\"\"\n3\n2 2 3 8\n3 1 5 6\n1 9 4 7\n\"\"\"\n    ) == \"39\"\n\nassert solution(\n\"\"\"\n5\n1 2 3 4 5\n2 3 4 5 6\n3 4 5 6 7\n4 5 6 7 8\n5 6 7 8 9\n\"\"\"\n    ) == \"45\"\nassert solution(\n\"\"\"\n3\n3 2 2 2\n2 2 1 3\n3 3 3 1\n\"\"\"\n    ) == \"2\"\n"
    },
    {
        "number": 3293,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n1 2 3 1\n2 3 4 1\n3 4 5 1\n\"\"\") == \"39\"\n\nassert solution(\"\"\"\n3\n2 2 3 8\n3 1 5 6\n1 9 4 7\n\"\"\") == \"39\"\n\nassert solution(\"\"\"\n3\n1 1 1 1\n2 1 1 1\n3 1 1 1\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n2\n2 2 1 1\n3 1 2 1\n3 1 1 1\n\"\"\") == \"3\""
    },
    {
        "number": 3293,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\\n\") == \"3\\n\"\nassert solution(\"3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7\\n\") == \"39\"\n\"\"\"\n"
    },
    {
        "number": 3293,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n1 2 3 1\n2 3 4 1\n3 4 5 1\n''') == '3'\nassert solution('''2\n2 3 4 1\n3 1 5 6\n1 9 4 7\n''') == '39'\nassert solution('''2\n2 3 4 1\n3 1 5 6\n1 9 4 7\n''') == '39'\nassert solution('''2\n1 2 3 1\n2 3 4 1\n3 4 5 1\n''') == '39'\nassert solution('''3\n1 2 3 1\n2 3 4 1\n3 4 5 1\n''') == '39'\n"
    },
    {
        "number": 3293,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n1 2 3 1\n2 3 4 1\n3 4 5 1''') == '3'\nassert solution('''3\n2 2 3 8\n3 1 5 6\n1 9 4 7''') == '39'\nassert solution('''3\n2 2 3 8\n3 1 5 6\n1 9 4 7\n1 1 1 1''') == '0'\nassert solution('''3\n2 2 3 8\n3 1 5 6\n1 9 4 7\n1 1 1 1''') == '0'\nassert solution('''3\n2 2 3 8\n3 1 5 6\n1 9 4 7\n1 1 1 1''') == '0'\n"
    },
    {
        "number": 3293,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3\\n2 3 4\\n3 4 5\\n') == '3'\nassert solution('2 2 3\\n3 1 5\\n1 9 4\\n') == '39'\nassert solution('3 2 3\\n1 2 3\\n3 1 5\\n1 9 4\\n') == '39'\nassert solution('2 2 3\\n2 1 5\\n1 9 4\\n') == '10'\nassert solution('1 2 3\\n2 1 5\\n1 9 4\\n') == '10'\n"
    },
    {
        "number": 3293,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 3 4 1\") == \"3\"\nassert solution(\"1 2 3 1\") == \"3\"\nassert solution(\"1 2 3 2\") == \"2\"\nassert solution(\"2 3 4 1\") == \"3\"\nassert solution(\"1 2 3 8\") == \"39\"\n"
    },
    {
        "number": 3293,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3293,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n1 2 3 1\n2 3 4 1\n3 4 5 1''') == '3'\nassert solution('''3\n2 2 3 8\n3 1 5 6\n1 9 4 7\n''') == '39'\nassert solution('''6\n3 5 4 3 5 4 3\n4 6 7 6 7 6 7\n1 9 4 7 9 4 7\n6 9 5 9 5 9 5\n5 1 9 9 9 5 1\n9 5 9 5 9 5 9\n''') == '141'\n'''"
    },
    {
        "number": 3294,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3294,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"5\n8 9 3 -14 -14 14 -14 0 20\"\"\") == \"9\"\n\"\"\"\n"
    },
    {
        "number": 3294,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''8 9 3 -14 -14 14 -14 0 20\n8 10 4 -1 -1 1 -1 1 1 -1 1 1''') == '9'\nassert solution('''2\n5 8 4 -2 0 0 -3 2 0 0 3\n8 10 4 -1 -1 1 -1 1 1 -1 1 1''') == '5.2696518641'\n\n'''\nfrom typing import Set\nfrom functools import lru_cache\n\n@lru_cache(maxsize = 1000)\n"
    },
    {
        "number": 3294,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1 1 -1 1\"\n) == \"5.2696518641\"\n\nassert solution(\n    \"1 8 9 3 -14 -14 14 -14 0 20\\n8 10 4 -1 -1 1 -1 1 1 -1 1 1 -1 1\"\n) == \"9\"\n\nassert solution(\n    \"4 7 1 1 3 1 2 3 2 4 1 1 3 1\\n1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\\n2 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\\n3 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\\n4 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\"\n) == \"4.24275099\"\n\nassert solution(\n    \"2 3 0 0 2 1 -2 -3 1 -2 3 0 2 2 0 0 2 -2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3 1 -2 3 0 0 2 1 2 0 0 2 -3"
    },
    {
        "number": 3294,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"9\"\n\"\"\""
    },
    {
        "number": 3294,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\nassert expected == '5.2696518641'\nprint(expected)\n\nexpected = '9'\nassert expected == solution(stdin)\nprint(expected)\n\"\"\""
    },
    {
        "number": 3294,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 0') == '7'\nassert solution('1 1 2 3 4 5 6 7 8 9 0') == '8'\nassert solution('1 1 2 3 4 5 6 7 8 9 0') == '8'\nassert solution('1 1 2 3 4 5 6 7 8 9 0') == '8'\nassert solution('1 1 2 3 4 5 6 7 8 9 0') == '8'\n"
    },
    {
        "number": 3294,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin[0]\n"
    },
    {
        "number": 3294,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"-14 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3294,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1 1 -1 1') == '5.2696518641'\nassert solution('1 8 3 -14 -14 14 -14 0 20\\n8 10 4 -1 -1 1 -1 1 1 -1 1 1 -1 1') == '9'\nassert solution('1 8 3 -14 -14 14 -14 0 20\\n8 10 4 -1 -1 1 -1 1 1 -1 1 1 -1 1') == '9'\nassert solution('2\\n5 6 5 -4 -4 -4 0 0 1 -1 1 1 -1 1 1 -1 1 -1 -1 1 -1 -1\\n6 6 5 -5 -5 -5 0 0 1 -1 1 1 -1 1 1 -1 1 -1 -1 1 -1 -1') == '13'\nassert solution('2\\n5 6 5 -4 -4 -4 0 0 1 -1 1 1 -1 1 1 -1 1 -1 -1 1 -1 -1\\n6 6 5 -5 -5 -5 0 0 1 -1 1 1 -1 1 1 -1 1 -1 -1 1 -1 -1') == '13'\n"
    },
    {
        "number": 3295,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\n\"\"\"\nApproach:\n\nWe can easily see the O(n^2) solution works, but it's slow. What we can do is to expand the problem to the problem of finding a sliding window of $K$ consecutive integers that is happy.\n\nEach sliding window will have an initial number of happy numbers, since it will start with the first K numbers. For each such sliding window, we will check to see if the sum of squares of the numbers is a prime or not. If so, we will add the number to the happy numbers array, otherwise we will discard it.\n\nOnce we have the happy numbers array, we will check to see if there is any other sliding window that can generate a happy array with less than or equal to the total number of happy numbers in our sliding window. This is done by greedily extending the window to the right, adding numbers to the happy numbers array until there are at least $L$ happy numbers in the sliding window.\n\nThe last time we will extend the window to the right is when there are no more numbers to add to the happy numbers array, in which case the sliding window will shrink to a size of $K-1$.\n\nIn both cases, we will always have at least $L$ happy numbers in the sliding window. If we don't have enough happy numbers, we cannot create a happy array, so we output -1.\n\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 3295,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output\n\nprint('Passed')\n\"\"\""
    },
    {
        "number": 3295,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n3\n1 1 1\n2 0 2\n3 1 1\n\"\"\") == \"1\\n8\\n4\"\nassert solution(\n\"\"\"\n3\n4 1 1\n5 2 3\n5 0 3\n\"\"\") == \"6\\n4\\n24\"\n\nprint(\"Success.\")\n"
    },
    {
        "number": 3295,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n1 1 1\n2 0 2\n3 1 1''') == '1'\nassert solution('''3\n1 1 1\n2 0 2\n3 1 1\n3 0 3''') == '-1'\nassert solution('''3\n1 1 1\n2 0 2\n3 1 1\n0 0 3''') == '6'\nassert solution('''3\n4 1 1\n5 2 3\n5 0 3''') == '4'\nassert solution('''3\n1 1 1\n2 0 2\n3 1 1\n4 0 3''') == '24'\n"
    },
    {
        "number": 3295,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('1 2 3') == '4'\nassert solution('1 2 3 4') == None\nassert solution('3 1 1') == '1'\n"
    },
    {
        "number": 3295,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1\\n') == '1'\nassert solution('2\\n0\\n2\\n') == '-1'\nassert solution('3\\n1\\n1\\n') == '-1'\nassert solution('4\\n4\\n5\\n0\\n') == '4'\nassert solution('5\\n2\\n5\\n3\\n0\\n') == '4'\n"
    },
    {
        "number": 3295,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n1 1 1\n2 0 2\n3 1 1''') == '1\\n8\\n4'\nassert solution('''3\n4 1 1\n5 2 3\n5 0 3''') == '6\\n4\\n24'\nassert solution('''3\n2 2 2\n2 0 2\n3 1 1''') == '8'\nassert solution('''3\n2 1 1\n2 2 2\n2 3 2''') == '4'\nassert solution('''3\n1 1 1\n1 1 1\n1 1 1''') == '-1'\n"
    },
    {
        "number": 3295,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('1\\n3\\n0\\n') == ''\nassert solution('1\\n3\\n0\\n') == '1'\nassert solution('4\\n1\\n1\\n') == '8'\nassert solution('4\\n2\\n2\\n') == '4'\n"
    },
    {
        "number": 3295,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n1 1 1\n2 0 2\n3 1 1''') == '1'\nassert solution('''3\n4 1 1\n5 2 3\n5 0 3''') == '6'\nassert solution('''3\n7 3 1\n8 1 1\n9 0 0''') == '4'\nassert solution('''4\n1 1 1\n2 0 2\n3 1 1\n4 1 1''') == '8'\nassert solution('''5\n1 3 3\n1 1 1\n2 1 2\n2 1 2\n2 0 2''') == '4'\n"
    },
    {
        "number": 3295,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 1 1\\n2 0 2\\n3 1 1\\n\") == \"6\"\nassert solution(\"1\\n1 1 1\\n2 0 2\\n3 1 1\\n\") == \"1\"\nassert solution(\"2\\n4 1 1\\n5 2 3\\n5 0 3\\n\") == \"4\"\nassert solution(\"3\\n4 1 1\\n5 2 3\\n5 0 3\\n\") == \"24\"\nassert solution(\"4\\n4 1 1\\n5 2 3\\n5 0 3\\n\") == \"24\"\n"
    },
    {
        "number": 3296,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 6') == '240'\n\"\"\"\nimport sys\n"
    },
    {
        "number": 3296,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 3296,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"3 2\n\"\"\") == \"3\"\nassert solution(\"\"\"6 6\n\"\"\") == \"240\"\nassert solution(\"\"\"7 8\n\"\"\") == \"0\"\nassert solution(\"\"\"8 9\n\"\"\") == \"0\"\nassert solution(\"\"\"9 10\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3296,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 2''') == '3'\nassert solution('''6 6''') == '240'\nassert solution('''1 2''') == '0'\nassert solution('''1 1''') == '1'\nassert solution('''2 1''') == '1'\n"
    },
    {
        "number": 3296,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '240'\n\n\"\"\"\n"
    },
    {
        "number": 3296,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3296,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 2''') == '3'\nassert solution('''6 6''') == '240'"
    },
    {
        "number": 3296,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3\"\n\n\"\"\"\n"
    },
    {
        "number": 3296,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '3'\n\"\"\"\n\nn, k = list(map(int, stdin.split()))"
    },
    {
        "number": 3296,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 2\n''') == '3'\nassert solution('''6 6\n''') == '240'\nassert solution('''6 5\n''') == '4'\nassert solution('''10 8\n''') == '3120'\nassert solution('''2 2\n''') == '0'\n"
    },
    {
        "number": 3297,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == '9567+1085=10652'\nassert solution(input()) == 'impossible'\n"
    },
    {
        "number": 3297,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('SEND+MORE=MONEY') == '9567+1085=10652'\nassert solution('A+A=A') == 'impossible'\n'''"
    },
    {
        "number": 3297,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\"\nassert solution(\"ABCDEFG\") == \"impossible\"\nassert solution(\"ABCDEFG=DEFG\") == \"impossible\"\nassert solution(\"A+A=0\") == \"impossible\"\n"
    },
    {
        "number": 3297,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('SEND+MORE=MONEY') == '9567+1085=10652'\nassert solution('A+A=A') == 'impossible'\n\n-----Notes-----\nA word $w$ is the same as a set of consecutive lowercase letters in a string, $w = {a, b, c,..., z}$ if and only if the string can be constructed from a single character c such that every letter c occurs at least once and no two adjacent letters are the same.\n\nNote: This question is the same as\u00a03.14\u00a0and\u00a03.15.\n\"\"\"\n\nfrom collections import Counter"
    },
    {
        "number": 3297,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('SEND+MORE=MONEY') == '9567+1085=10652'\nassert solution('A+A=A') == 'impossible'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3297,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''SEND+MORE=MONEY''') == '9567+1085=10652'\nassert solution('''A+A=A''') == 'impossible'\n"
    },
    {
        "number": 3297,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('SEND+MORE=MONEY') == '9567+1085=10652'\nassert solution('A+A=A') == 'impossible'\nassert solution('EXSTA/MINE_=A') == 'impossible'\nassert solution('K+H=P') == 'impossible'\nassert solution('EXSTA/MINE_=P') == 'impossible'\n"
    },
    {
        "number": 3297,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('SEND+MORE=MONEY') == '9567+1085=10652'\nassert solution('A+A=A') == 'impossible'\n"
    },
    {
        "number": 3297,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('SEND+MORE=MONEY') == '9567+1085=10652'\nassert solution('A+A=A') == 'impossible'\n\n-----Note-----\nIf you think this challenge is too easy, try the challenge from http://www.codeeval.com/open_challenges/41/\n\n\"\"\"\n\nimport sys\nfrom collections import Counter\n\n\"\"\"\nFailed Solution\n\"\"\"\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        # T: O(n)\n        # S: O(n)\n        puzzle = stdin.strip()\n        words = puzzle.split(\"=\")\n        digits = []\n        letters = []\n        for word in words:\n            if word[0] in letters:\n                index = letters.index(word[0])\n                digits[index] = min(int(digits[index]), int(word[1]))\n            else:\n                letters.append(word[0])\n                digits.append(word[1])\n\n        if sorted(digits)!= sorted(letters):\n            return \"impossible\"\n\n        for i in range(len(digits)):\n            digits[i] = str(int(digits[i]) - ord('0'))\n\n        return \"\".join(digits)\n\n\nsolution = Solution()\nfor line in sys.stdin:\n    print(solution.solution(line))"
    },
    {
        "number": 3297,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('SEND+MORE=MONEY') == '9567+1085=10652'\nassert solution('A+A=A') == 'impossible'\nprint('All set!')\n"
    },
    {
        "number": 3298,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 1 2 3') == '14'\nassert solution('1 1 2 1 1') == '1'\nassert solution('1 1 2 2 1') == '1'\nassert solution('1 1 2 2 2 1') == '4'\nassert solution('1 1 2 2 2 1') == '4'\n"
    },
    {
        "number": 3298,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0 1 2 3\") == \"14\"\nassert solution(\"0 1 2 3\") == \"1\"\nassert solution(\"1 1 2 1 1\") == \"1\"\nassert solution(\"1 1 2 1 1\") == \"1\"\nassert solution(\"2 1 2 1 1\") == \"0\"\n"
    },
    {
        "number": 3298,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 1 2 3') == '14'\nassert solution('1 1 2 1 1') == '1'\nassert solution('3 2 1') == '1'\nassert solution('1 3 2 1') == '2'\nassert solution('5 2 1') == '2'\n"
    },
    {
        "number": 3298,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 2 3 4''') == '0'\nassert solution('''0 1 2 3''') == '14'\nassert solution('''1 1 2 1 1''') == '1'\nassert solution('''1 1 2 3''') == '14'\nassert solution('''1 1 2 3''') == '1'\n"
    },
    {
        "number": 3298,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n0 1 2 3\n0 1 2 3''') == '14'\nassert solution('''5\n1 1 2 1 1\n0 1 2 1 1''') == '1'\nassert solution('''6\n4 5 6 7 8 9\n9 8 7 6 5 4\n0 1 2 3 4 5\n1 2 3 4 5 6\n''') == '0'\nassert solution('''7\n9 9 8 7 6 5 4 3 2 1 0\n1 2 3 4 5 6 7 8 9 0\n0 1 2 3 4 5 6 7 0\n9 8 7 6 5 4 3 2 1 0\n8 7 6 5 4 3 2 1 0\n7 6 5 4 3 2 1 0\n6 5 4 3 2 1 0\n5 4 3 2 1 0\n''') == '1'\nassert solution('''8\n9 9 8 7 6 5 4 3 2 1 0\n0 1 2 3 4 5 6 7 8 0\n0 1 2 3 4 5 6 7 0\n9 8 7 6 5 4 3 2 1 0\n8 7 6 5 4 3 2 1 0\n7 6 5 4 3 2 1 0\n6 5 4 3 2 1 0\n5 4 3 2 1 0\n''') == '0'\n"
    },
    {
        "number": 3298,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 0\n"
    },
    {
        "number": 3298,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"0 1 2 3\"\n) == \"14\"\n\nassert solution(\n    \"0 1 2 3 4 5\"\n) == \"0\"\n\nassert solution(\n    \"1 1 2 1 1\"\n) == \"1\"\n\nassert solution(\n    \"1 2 1 1\"\n) == \"0\"\n\nassert solution(\n    \"2 2 3 3 3\"\n) == \"0\""
    },
    {
        "number": 3298,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '1'\n\"\"\"\n"
    },
    {
        "number": 3298,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 1 2 3') == '14'\nassert solution('1 1 2 1 1') == '1'\nassert solution('1 1 2 1 2') == '2'\nassert solution('1 1 2 1 2 1') == '2'\nassert solution('2 2 2 2 1') == '0'\n"
    },
    {
        "number": 3298,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0 1 2 3\") == \"14\"\nassert solution(\"0 1 2 3 4 5 6 7 8 9\") == \"4\"\nassert solution(\"1 1 2 1 1\") == \"1\"\nassert solution(\"0 0 1 0 0 0 1 0 0 1 1 1\") == \"7\"\nassert solution(\"1 1 0 0 0 1 0 1 0 0 1 1\") == \"7\"\n"
    },
    {
        "number": 3299,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3299,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 4\n1 2 3 0\n0 0 5 6\n0 0 7 8\n7 0 0 10''') == '88'\nassert solution('''4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10''') == '-1'\nassert solution('''8 8\n4 0 2 0 4 1 1 1 1 1\n4 1 0 3 1 1 2 1 1 1\n1 0 0 0 1 1 1 1 1 1\n1 1 0 1 1 1 1 1 1 1\n1 1 0 1 1 1 1 1 1 1\n1 1 0 1 1 1 1 1 1 1\n1 1 0 1 1 1 1 1 1 1\n1 1 0 1 1 1 1 1 1 1''') == '80'\nassert solution('''8 8\n1 2 3 0 4 1 1 1 1 1\n1 1 0 0 1 1 1 1 1 1\n1 1 0 0 1 1 1 1 1 1\n1 1 0 0 1 1 1 1 1 1\n1 1 0 0 1 1 1 1 1 1\n1 1 0 0 1 1 1 1 1 1\n1 1 0 0 1 1 1 1 1 1\n1 1 0 0 1 1 1 1 1 1''') == '-1'\n'''\n"
    },
    {
        "number": 3299,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 4\n1 2 3 0\n0 0 5 6\n0 0 7 8\n7 0 0 10''') == '88'\nassert solution('''4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10''') == '-1'\nassert solution('''8 8\n1 2 3 4 5 6 7 8\n0 0 0 0 0 0 0 0\n1 0 0 0 0 0 0\n0 1 0 0 0 0\n0 0 1 0 0 0\n0 0 0 1 0 0\n0 0 0 0 1 0\n0 0 0 0 0 1''') == '138'\nassert solution('''8 8\n1 2 3 4 5 6 7 8\n0 0 0 0 0 0 0 0\n1 0 0 0 0 0 0\n0 1 0 0 0 0\n0 0 1 0 0 0\n0 0 0 1 0 0\n0 0 0 0 1 0\n0 0 0 0 0 1''') == '138'\nassert solution('''9 9\n1 2 3 4 5 6 7 8 9\n0 0 0 0 0 0 0 0 0\n1 0 0 0 0 0 0 0\n0 1 0 0 0 0 0\n0 0 1 0 0 0 0\n0 0 0 1 0 0 0\n0 0 0 0 1 0 0\n0 0 0 0 0 1 0\n0 0 0 0 0 0 1''') == '181'\n"
    },
    {
        "number": 3299,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == ''"
    },
    {
        "number": 3299,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == 88\nassert solution(\"1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\") == -1\nassert solution(\"1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n0 4 7 8\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\\n0 4 7 8\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == -1\nassert solution(\"1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\\n0 4 7 8\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\\n0 4 7 8\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\\n0 4 7 8\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\\n0 4 7 8\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\\n0 4 7 8\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == -1\nassert solution(\"1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n0 4 7 8\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\\n0 4 7 8\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\\n0 4 7 8\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\\n0 4 7 8\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\\n0 4 7 8\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\\n0 4 7 8\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\\n0 4 7 8\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\\n0 4 7 8\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == -1\n"
    },
    {
        "number": 3299,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 4\n1 2 3 0\n0 0 5 6\n0 0 7 8\n7 0 0 10''') == '88'\nassert solution('''2 2\n1 2 0\n0 0 2''') == '0'\nassert solution('''3 3\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10''') == '4'\nassert solution('''5 5\n1 2 3 4 5 0\n0 0 5 6 7 8\n0 4 5 6 7 8\n7 4 0 5 6 7\n8 0 4 5 6 7''') == '32'\nassert solution('''9 9\n1 2 3 4 5 6 7 8 9 0\n0 0 5 6 7 8 9 1 2 3 4 5 6 7 8 9\n0 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9\n7 4 0 5 6 7 8 9 1 2 3 4 5 6 7 8 9\n8 0 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9\n9 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\n1 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9\n1 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9''') == '125'\n"
    },
    {
        "number": 3299,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 4\n1 2 3 0\n0 0 5 6\n0 0 7 8\n7 0 0 10''') == '88'\nassert solution('''1 1\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10''') == '-1'\nassert solution('''1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n1 30\n1 31\n1 32\n1 33\n1 34\n1 35\n1 36\n1 37\n1 38\n1 39\n1 40\n1 41\n1 42\n1 43\n1 44\n1 45\n1 46\n1 47\n1 48\n1 49\n1 50\n1 51\n1 52\n1 53\n1 54\n1 55\n1 56\n1 57\n1 58\n1 59\n1 60\n1 61\n1 62\n1 63\n1 64\n1 65\n1 66\n1 67\n1 68\n1 69\n1 70\n1 71\n1 72\n1 73\n1 74\n1 75\n1 76\n1 77\n1 78\n1 79\n1 80\n1 81\n1 82\n1 83\n1 84\n1 85\n1 86\n1 87\n1 88\n1 89\n1 90\n1 91\n1 92\n1 93\n1 94\n1 95\n1 96\n1 97\n1 98\n1 99\n1 100\n1 101\n1 102\n1 103\n1 104\n1 105\n1 106\n1 107\n1 108\n1 109\n1 110\n1 111\n1 112\n1 113\n1 114\n1 115\n1 116\n1 117\n1 118\n1 119\n1 120\n1 121\n1 122\n1 123\n1 124\n1 125\n1 126\n1 127\n1 128\n1 129\n1 130\n1 131\n1 132\n1 133\n1 134\n1 135\n1 136\n1 137\n1 138\n1 139\n1 140\n1 141\n1 142\n1 143\n1 144\n1 145\n1 146\n1 147\n1 148\n1 149\n1 150\n1 151\n1 152\n1 153\n1 154\n1 155\n1 156\n1 157\n1 158\n1 159\n1 160\n1 161\n1 162\n1 163\n1 164\n1 165\n1 166\n1 167\n1 168\n1 169\n1 170\n1 171\n1 172\n1 173\n1 174\n1 175\n1 176\n1 177\n1 178\n1 179\n1 180\n1 181\n1 182\n1 183\n1 184\n1 185\n1 186\n1 187\n1 188\n1 189\n1 190\n1 191\n1 192\n1 193\n1 194\n1 195\n1 196\n1 197\n1 198\n1 199\n1 200\n1 201\n1 202\n1 203\n1 204\n1 205\n1 206\n1 207\n1 208\n1 209\n1 210\n1 211\n1 212\n1 213\n1 214\n1 215\n1 216\n1 217\n1 218\n1 219\n1 220\n1 221\n1 222\n1 223\n1 224\n1 225\n1 226\n1 227\n1 228\n1 229\n1 230\n1 231\n1 232\n1 233\n1 234\n1 235\n1 236\n1 237\n1 238\n1 239\n1 240\n1 241\n1 242\n1 243\n1 244\n1 245\n1 246\n1 247\n1 248\n1 249\n1 250\n1 251\n1 252\n1 253\n1 254\n1 255\n1 256\n1 257\n1 258\n1 259\n1 260\n1 261\n1 262\n1 263\n1 264\n1 265\n1 266\n1 267\n1 268\n1 269\n1 270\n1 271\n1 272\n1 273\n1 274\n1 275\n1 276\n1 277\n1 278\n1 279\n1 280\n1 281\n1 282\n1 283\n1 284\n1 285\n1 286\n1 287\n1 288\n1 289\n1 290\n1 291\n1 292\n1 293\n1 294\n1 295\n1 296\n1 297\n1 298\n1 299\n1 300\n1 301\n1 302\n1 303\n1 304\n1 305\n1 306\n1 307\n1 308\n1 309\n1 310\n1 311\n1 312\n1 313\n1 314\n1 315\n1 316\n1 317\n1 318\n1 319\n1 320\n1 321\n1 322\n1 323\n1 324\n1 325\n1 326\n1 327\n1 328\n1 329\n1 330\n1 331\n1 332\n1 333\n1 334\n1 335\n1 336\n1 337\n1 338\n1 339\n1 340\n1 341\n1 342\n1 343\n1 344\n1 345\n1 346\n1 347\n1 348\n1 349\n1 350\n1 351\n1 352\n1 353\n1 354\n1 355\n1 356\n1 357\n1 358\n1 359\n1 360\n1 361\n1 362\n1 363\n1 364\n1 365\n1 366\n1 367\n1 368\n1 369\n1 370\n1 371\n1 372\n1 373\n1 374\n1 375\n1 376\n1 377\n1 378\n1 379\n1 380\n1 381\n1 382\n1 383\n1 384\n1 385\n1 386\n1 387\n1 388\n1 389\n1 390\n1 391\n1 392\n1 393\n1 394\n1 395\n1 396\n1 397\n1 398\n1 399\n1 400\n1 401\n1 402\n1 403\n1 404\n1 405\n1 406\n1 407\n1 408\n1 409\n1 410\n1 411\n1 412\n1 413\n1 414\n1 415\n1 416\n1 417\n1 418\n1 419\n1 420\n1 421\n1 422\n1 423\n1 424\n1 425\n1 426\n1 427\n1 428\n1 429\n1 430\n1 431\n1 432\n1 433\n1 434\n1 435\n1 436\n1 437\n1 438\n1 439\n1 440\n1 441\n1 442\n1 443\n1 444\n1 445\n1 446\n1 447\n1 448\n1 449\n1 450\n1 451\n1 452\n1 453\n1 454\n1 455\n1 456\n1 457\n1 458\n1"
    },
    {
        "number": 3299,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\\n\") == \"88\"\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\\n\") == \"88\"\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n\") == \"88\"\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\\n\") == \"88\"\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\\n\") == \"88\"\n"
    },
    {
        "number": 3299,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 4\") == \"88\"\nassert solution(\"2 2\") == \"10\"\nassert solution(\"4 4\") == \"88\"\nassert solution(\"2 2\") == \"10\"\nassert solution(\"2 1\") == \"1\"\n"
    },
    {
        "number": 3299,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\\n') == '88'\nassert solution('5 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n7 0 0 11\\n2 5 8 9 1 0\\n2 4 5 7 8 9 10\\n1 4 2 6 8 9 11\\n2 4 1 3 7 8 9 11\\n0 2 1 3 4 5 6 8 9 10 11') == '-1'\nassert solution('10 10\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101') == '19968'\n"
    },
    {
        "number": 3300,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1\n1 1''') == '0.000'\nassert solution('''2\n1 1\n1 1''') == '0.000'\nassert solution('''3\n1 1\n1 1\n1 1''') == '0.000'\nassert solution('''4\n1 1\n1 1\n1 1\n1 1''') == '0.000'\nassert solution('''5\n1 1\n1 1\n1 1\n1 1\n1 1''') == '0.000'\n"
    },
    {
        "number": 3300,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n') == '0.000'\nassert solution('1\\n1\\n') == '0.000'\nassert solution('1\\n1\\n') == '0.000'\nassert solution('1\\n1\\n') == '0.000'\nassert solution('1\\n1\\n') == '0.000'\n"
    },
    {
        "number": 3300,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1\n1 1\n1 1''') == '0.000'\nassert solution('''2\n1 99999\n99999 99999''') == '9999700002.000'\nassert solution('''3\n1 100\n100 100\n1 100\n1 100''') == '10.000'\nassert solution('''3\n1 100\n100 100\n1 100\n1 100\n100 1\n100 1\n1 100\n1 100''') == '10.000'\nassert solution('''5\n1 100\n100 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100''') == '10.000'\n"
    },
    {
        "number": 3300,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"9999700002.000\"\n\nprint(solution(stdin))\n"
    },
    {
        "number": 3300,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == str(0.000)\n"
    },
    {
        "number": 3300,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3300,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(open(\"test_input_1.txt\", \"r\").read()) == \"0.000\"\nassert solution(open(\"test_input_2.txt\", \"r\").read()) == \"9999700002.000\"\nassert solution(open(\"test_input_3.txt\", \"r\").read()) == \"0.000\"\nassert solution(open(\"test_input_4.txt\", \"r\").read()) == \"6.543\"\nassert solution(open(\"test_input_5.txt\", \"r\").read()) == \"5.000\"\n"
    },
    {
        "number": 3300,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 1\n1 1''') == '0.000'\nassert solution('''2\n1 1\n1 1''') == '0.000'\nassert solution('''4\n2 1\n2 1\n2 1\n2 1''') == '0.000'\nassert solution('''5\n1 99999\n99999 99999\n99999 99999\n99999 99999\n99999 99999''') == '9999700002.000'\nassert solution('''6\n1 99999\n99999 99999\n99999 99999\n99999 99999\n99999 99999\n99999 99999''') == '9999700002.000'\n"
    },
    {
        "number": 3300,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"1\n1 1\"\"\") == \"0.000\"\nassert solution(\"\"\"1\n1 99999\"\"\") == \"9999700002.000\"\nassert solution(\"\"\"1\n1 1\n2 2\"\"\") == \"0.010\"\nassert solution(\"\"\"1\n1 1\n2 2\n3 3\"\"\") == \"0.010\"\nassert solution(\"\"\"1\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n11 11\n12 12\n13 13\n14 14\n15 15\n16 16\n17 17\n18 18\n19 19\n20 20\n21 21\n22 22\n23 23\n24 24\n25 25\n26 26\n27 27\n28 28\n29 29\n30 30\n31 31\n32 32\n33 33\n34 34\n35 35\n36 36\n37 37\n38 38\n39 39\n40 40\n41 41\n42 42\n43 43\n44 44\n45 45\n46 46\n47 47\n48 48\n49 49\n50 50\n51 51\n52 52\n53 53\n54 54\n55 55\n56 56\n57 57\n58 58\n59 59\n60 60\n61 61\n62 62\n63 63\n64 64\n65 65\n66 66\n67 67\n68 68\n69 69\n70 70\n71 71\n72 72\n73 73\n74 74\n75 75\n76 76\n77 77\n78 78\n79 79\n80 80\n81 81\n82 82\n83 83\n84 84\n85 85\n86 86\n87 87\n88 88\n89 89\n90 90\n91 91\n92 92\n93 93\n94 94\n95 95\n96 96\n97 97\n98 98\n99 99\n100 100\n\"\"\") == \"1.00000\"\n"
    },
    {
        "number": 3300,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n"
    },
    {
        "number": 3301,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\\n') == 3\nassert solution('6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\\n') == '3'\nprint('solution:', solution(fileinput.input()))\n"
    },
    {
        "number": 3301,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"6 8 1 6\n1 2 5\n1 3 1\n2 6 6\n2 3 6\n4 2 3\n3 4 1\n4 5 1\n5 6 1\n5\n1 3 6 5 4\"\"\".strip()\n) == \"3\"\nassert solution(\n\"\"\"3 4 1 2\n1 2 6\n1 3 2\n1 2 7\n2 3 3\n2\n1 2\nSample Output 2:\nInfinity\"\"\".strip()\n) == \"Infinity\"\nassert solution(\n\"\"\"9 9 1 2\n1 1 1\n1 1 2\n1 1 3\n1 2 2\n1 3 1\n1 1 1\n1 2 2\n1 3 3\n2 1 2\n2 2 1\n2 2 3\n2 3 2\n2 3 3\n2 3 3\n2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n1 30\n1 31\n1 32\n1 33\n1 34\n1 35\n1 36\n1 37\n1 38\n1 39\n1 40\n1 41\n1 42\n1 43\n1 44\n1 45\n1 46\n1 47\n1 48\n1 49\n1 50\n1 51\n1 52\n1 53\n1 54\n1 55\n1 56\n1 57\n1 58\n1 59\n1 60\n1 61\n1 62\n1 63\n1 64\n1 65\n1 66\n1 67\n1 68\n1 69\n1 70\n1 71\n1 72\n1 73\n1 74\n1 75\n1 76\n1 77\n1 78\n1 79\n1 80\n1 81\n1 82\n1 83\n1 84\n1 85\n1 86\n1 87\n1 88\n1 89\n1 90\n1 91\n1 92\n1 93\n1 94\n1 95\n1 96\n1 97\n1 98\n1 99\n1 100\n1 101\n1 102\n1 103\n1 104\n1 105\n1 106\n1 107\n1 108\n1 109\n1 110\n1 111\n1 112\n1 113\n1 114\n1 115\n1 116\n1 117\n1 118\n1 119\n1 120\n1 121\n1 122\n1 123\n1 124\n1 125\n1 126\n1 127\n1 128\n1 129\n1 130\n1 131\n1 132\n1 133\n1 134\n1 135\n1 136\n1 137\n1 138\n1 139\n1 140\n1 141\n1 142\n1 143\n1 144\n1 145\n1 146\n1 147\n1 148\n1 149\n1 150\n1 151\n1 152\n1 153\n1 154\n1 155\n1 156\n1 157\n1 158\n1 159\n1 160\n1 161\n1 162\n1 163\n1 164\n1 165\n1 166\n1 167\n1 168\n1 169\n1 170\n1 171\n1 172\n1 173\n1 174\n1 175\n1 176\n1 177\n1 178\n1 179\n1 180\n1 181\n1 182\n1 183\n1 184\n1 185\n1 186\n1 187\n1 188\n1 189\n1 190\n1 191\n1 192\n1 193\n1 194\n1 195\n1 196\n1 197\n1 198\n1 199\n1 200\n1 201\n1 202\n1 203\n1 204\n1 205\n1 206\n1 207\n1 208\n1 209\n1 210\n1 211\n1 212\n1 213\n1 214\n1 215\n1 216\n1 217\n1 218\n1 219\n1 220\n1 221\n1 222\n1 223\n1 224\n1 225\n1 226\n1 227\n1 228\n1 229\n1 230\n1 231\n1 232\n1 233\n1 234\n1 235\n1 236\n1 237\n1 238\n1 239\n1 240\n1 241\n1 242\n1 243\n1 244\n1 245\n1 246\n1 247\n1 248\n1 249\n1 250\n1 251\n1 252\n1 253\n1 254\n1 255\n1 256\n1 257\n1 258\n1 259\n1 260\n1 261\n1 262\n1 263\n1 264\n1 265\n1 266\n1 267\n1 268\n1 269\n1 270\n1 271\n1 272\n1 273\n1 274\n1 275\n1 276\n1 277\n1 278\n1 279\n1 280\n1 281\n1 282\n1 283\n1 284\n1 285\n1 286\n1 287\n1 288\n1 289\n1 290\n1 291\n1 292\n1 293\n1 294\n1 295\n1 296\n1 297\n1 298\n1 299\n1 300\n1 301\n1 302\n1 303\n1 304\n1 305\n1 306\n1 307\n1 308\n1 309\n1 310\n1 311\n1 312\n1 313\n1 314\n1 315\n1 316\n1 317\n1 318\n1 319\n1 320\n1 321\n1 322\n1 323\n1 324\n1 325\n1 326\n1 327\n1 328\n1 329\n1 330\n1 331\n1 332\n1 333\n1 334\n1 335\n1 336\n1 337\n1 338\n1 339\n1 340\n1 341"
    },
    {
        "number": 3301,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6 8 1 6\n1 2 5\n1 3 1\n2 6 6\n2 3 6\n4 2 3\n3 4 1\n4 5 1\n5 6 1\n5\n1 3 6 5 4''') == '3'\nassert solution('''10 4 1 2\n1 2 6\n1 3 2\n1 2 7\n2 3 3\n2\n1 2\n''') == 'Infinity'\nassert solution('''8 2 1 2\n1 2 6\n1 3 2\n1 2 7\n2 3 3\n2\n1 2\n''') == '8'\nassert solution('''7 5 1 1\n1 2 6\n1 3 2\n1 2 7\n2 3 3\n2\n1 2\n''') == 'Infinity'\nassert solution('''7 5 1 1\n1 2 6\n1 3 2\n1 2 7\n2 3 3\n2\n1 2\n''') == '8'\n"
    },
    {
        "number": 3301,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"6 8 1 6\n1 2 5\n1 3 1\n2 6 6\n2 3 6\n4 2 3\n3 4 1\n4 5 1\n5 6 1\n5\n1 3 6 5 4\n\"\"\") == \"3\"\n\nassert solution(\n\"\"\"3 4 1 2\n1 2 6\n1 3 2\n1 2 7\n2 3 3\n2\n1 2\n\"\"\") == \"Infinity\"\n"
    },
    {
        "number": 3301,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 1 6 3\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\\n') == '3'\nassert solution('3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\\n') == 'Infinity'\nassert solution('1 3 1\\n1 2 1\\n2 3 1\\n2\\n2\\n2\\n') == 'Infinity'\nassert solution('4 3 1 2\\n1 2 1\\n1 3 1\\n2 3 2\\n2\\n1 2\\n') == '2'\nassert solution('1 2 6 1\\n1 2 3\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\\n') == '2'\n"
    },
    {
        "number": 3301,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2\\n1 3\\n2 3') == '3'\nassert solution('2 3\\n1 2\\n1 3') == 'Infinity'\nassert solution('1 3\\n1 2\\n2 3') == 'Infinity'\nassert solution('1 2\\n1 3\\n2 3') == '3'\nassert solution('1 2\\n2 3') == 'Infinity'\n"
    },
    {
        "number": 3301,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 1 4 3\\n1 2 5\\n1 3 1\\n2 4 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4') == '3'\nassert solution('2 1 4 3\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\\n2\\n1 2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 3301,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''6 8 1 6\n1 2 5\n1 3 1\n2 6 6\n2 3 6\n4 2 3\n3 4 1\n4 5 1\n5 6 1\n5\n1 3 6 5 4'''\n) == '3'\n\nassert solution(\n'''5 4 1 2\n1 2 6\n1 3 2\n1 2 7\n2 3 3\n2\n1 2\n'''\n) == 'Infinity'\n\nassert solution(\n'''4 2 1 2\n1 2 3\n2 1 1\n1 2 3\n2\n1 2\n'''\n) == '3'\n\nassert solution(\n'''8 5 1 6\n1 2 3\n1 3 4\n2 4 5\n2 5 6\n2 3 5\n3 4 5\n3 5 6\n4 5 6\n4\n1 2\n2 3\n3 4\n4 5'''\n) == '4'\n\nassert solution(\n'''6 5 1 6\n1 2 3\n1 3 4\n2 4 5\n2 5 6\n2 3 5\n3 4 5\n3 5 6\n4 5 6\n4\n1 2\n2 3\n3 4\n4 5'''\n) == '4'"
    },
    {
        "number": 3301,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6 8 1 6\n1 2 5\n1 3 1\n2 6 6\n2 3 6\n4 2 3\n3 4 1\n4 5 1\n5 6 1\n5\n1 3 6 5 4\n''') == '3'\nassert solution('''2 4 1 2\n1 2 6\n1 3 2\n1 2 7\n2 3 3\n2\n1 2\n''') == 'Infinity'\n'''"
    },
    {
        "number": 3301,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 2 1 6') == 3\nassert solution('6 8 1 6') == 3\nassert solution('3 4 1 2') == 2\nassert solution('2 3 1 2') == 2\nassert solution('1 2 6') == 0\n"
    },
    {
        "number": 3302,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"6 1\\n6\\n\") == \"000\"\nassert solution(\"3 1\\n1\\n\") == \"impossible\"\nassert solution(\"3 1\\n3\\n\") == \"impossible\"\nassert solution(\"3 1\\n4\\n\") == \"impossible\"\nassert solution(\"3 1\\n5\\n\") == \"impossible\"\n"
    },
    {
        "number": 3302,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin[5:]\nassert solution('a') == stdin[5:]\nassert solution('a abc') == stdin[5:]\nassert solution('a abc def') == stdin[5:]\nassert solution('a abc def ghi') == stdin[5:]\n"
    },
    {
        "number": 3302,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin[:-1]\nprint('Test cases passed')\n"
    },
    {
        "number": 3302,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == input()\n"
    },
    {
        "number": 3302,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n') == 'impossible'\nassert solution('1\\n2\\n') == 'impossible'\nassert solution('1\\n3\\n') == '000'\nassert solution('1\\n4\\n') == '001'\nassert solution('1\\n5\\n') == '011'\n"
    },
    {
        "number": 3302,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"test_0\") == \"impossible\"\nassert solution(\"test_1\") == \"000\"\nassert solution(\"test_2\") == \"001\"\nassert solution(\"test_3\") == \"011\"\nassert solution(\"test_4\") == \"010\"\n"
    },
    {
        "number": 3302,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == expected"
    },
    {
        "number": 3302,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1') == '000'\nassert solution('3 3') == 'impossible'\nassert solution('3 1') == '000'\nassert solution('6 2') == '000 011'\nassert solution('6 1') == '111 010'\n"
    },
    {
        "number": 3302,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    6 3\n    1\n    \"\"\") == \"\".join([\n        \"impossible\",\n        \"111\",\n        \"010\",\n        \"001\",\n        \"100\",\n        \"110\",\n        \"011\",\n        \"000\"\n    ])\n\nassert solution(\n    \"\"\"\n    7 4\n    1 2 3 4 5 6 7\n    \"\"\") == \"\".join([\n        \"impossible\",\n        \"111\",\n        \"010\",\n        \"001\",\n        \"100\",\n        \"110\",\n        \"011\",\n        \"000\"\n    ])\n\nassert solution(\n    \"\"\"\n    3 1\n    1\n    \"\"\") == \"\".join([\n        \"111\",\n        \"010\",\n        \"001\",\n        \"000\",\n    ])\n\nassert solution(\n    \"\"\"\n    6 4\n    1 2 3 4 5 6\n    \"\"\") == \"\".join([\n        \"111\",\n        \"010\",\n        \"001\",\n        \"100\",\n        \"110\",\n        \"011\",\n        \"000\"\n    ])\n\nassert solution(\n    \"\"\"\n    4 2\n    2 1\n    \"\"\") == \"\".join([\n        \"111\",\n        \"010\",\n        \"001\",\n        \"000\"\n    ])"
    },
    {
        "number": 3302,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"000\""
    },
    {
        "number": 3303,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10\\n99') == 1\nassert solution('9\\n10') == 1\nassert solution('1000\\n998') == 1\nassert solution('999\\n998') == 1\nassert solution('998\\n998') == 0\n"
    },
    {
        "number": 3303,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(solution.read_input('2')) == 1\n\nassert solution(solution.read_input('1')) == 1\n\nassert solution(solution.read_input('6')) == 6\n\nassert solution(solution.read_input('5')) == 3\n\nassert solution(solution.read_input('3')) == 0"
    },
    {
        "number": 3303,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"10\\n99\") == \"1\"\nassert solution(\"90\\n10\") == \"10\"\nassert solution(\"1000\\n9999\") == \"9\"\nassert solution(\"10000\\n99999\") == \"9\"\nassert solution(\"90000000\\n9999999999\") == \"9\"\n"
    },
    {
        "number": 3303,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10\\n99\\n') == '1'\nassert solution('100\\n10\\n') == '11'\nassert solution('10\\n100\\n') == '11'\nassert solution('100\\n100\\n') == '110'\nassert solution('10\\n10\\n') == '10'\n"
    },
    {
        "number": 3303,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"10\") == 1\nassert solution(\"99\") == 1\nassert solution(\"90\") == 10\nassert solution(\"999\") == 9\nassert solution(\"909\") == 9\n"
    },
    {
        "number": 3303,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"10\\n99\") == \"1\"\nassert solution(\"90\\n10\") == \"10\"\n\n'''"
    },
    {
        "number": 3303,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10\\n99') == '1'\nassert solution('90\\n10') == '10'\nassert solution('100\\n99') == '10'\nassert solution('90\\n10') == '10'\nassert solution('10\\n99') == '1'\n"
    },
    {
        "number": 3303,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10\n99''') == 1\nassert solution('''90\n10''') == 10\nassert solution('''7\n200''') == 1\nassert solution('''20\n8''') == 3\nassert solution('''60\n7''') == 1\n"
    },
    {
        "number": 3303,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    '''10\n99\n'''\n) == '1'\n\nassert solution(\n    '''90\n10\n'''\n) == '10'\n\nassert solution(\n    '''10101\n111\n'''\n) == '10'\n\nassert solution(\n    '''10101\n011\n'''\n) == '11'\n\nassert solution(\n    '''100\n9\n'''\n) == '9'"
    },
    {
        "number": 3303,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10\\n99\\n') == 1\nassert solution('100\\n101\\n') == 2\nassert solution('1000\\n10\\n') == 10\nassert solution('10\\n10\\n') == 1\nassert solution('10\\n99\\n') == 1\n"
    },
    {
        "number": 3304,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n2 3 3\n4 1 10\n2 7 3\n''') == '2'\nassert solution('''4\n3 1 3 3\n5 8 7 10\n4 1 2 6\n''') == '1'\nassert solution('''5\n3 1 3 3\n5 8 7 10\n4 1 2 6\n7 4 3 4\n''') == '2'\nassert solution('''6\n5 4 3 2 1 1\n9 8 7 6 5 4\n''') == '2'\nassert solution('''7\n5 4 3 2 1 1\n9 8 7 6 5 4\n''') == '3'\n"
    },
    {
        "number": 3304,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n2 3 3\n4 1 10\n2 7 3''') == '2'\nassert solution('''3\n1 1 1\n1 1 1\n1 1 1''') == '1'\nassert solution('''3\n3 1 3 3\n3 1 3 3\n3 1 3 3''') == '1'\nassert solution('''4\n3 1 3 3\n5 8 7 10\n4 1 2 6\n3 1 2 3''') == '1'\nassert solution('''7\n9 2 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1''') == '7'\n"
    },
    {
        "number": 3304,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3304,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3304,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '1'\n"
    },
    {
        "number": 3304,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3''') == '2'\nassert solution('''4''') == '1'\nassert solution('''10''') == '1'\nassert solution('''14''') == '0'\nassert solution('''1000000000''') == '0'\n"
    },
    {
        "number": 3304,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n2 3 3\n4 1 10\n2 7 3\n''') == '2'\nassert solution('''4\n3 1 3 3\n5 8 7 10\n4 1 2 6\n''') == '1'\nassert solution('''6\n3 1 3 3\n5 8 7 10\n4 1 2 6\n5 4 3 2\n1 5 4 2\n''') == '2'\nassert solution('''7\n4 1 3 3\n5 8 7 10\n4 1 2 6\n5 4 3 2\n1 5 4 2\n6 2 3 1\n''') == '2'\nassert solution('''8\n4 1 3 3\n5 8 7 10\n4 1 2 6\n5 4 3 2\n1 5 4 2\n6 2 3 1\n7 3 1 4\n''') == '2'\n"
    },
    {
        "number": 3304,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"1\\n2\") == \"\"\n"
    },
    {
        "number": 3304,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n3 1 3 3''') == '2'\nassert solution('''3\n2 3 3''') == '2'\nassert solution('''4\n1 3 3 3''') == '1'\nassert solution('''4\n3 1 3 3''') == '1'\nassert solution('''5\n5 4 3 2 1''') == '1'\n"
    },
    {
        "number": 3304,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"3\n2 3 3\n4 1 10\n2 7 3\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"4\n3 1 3 3\n5 8 7 10\n4 1 2 6\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3305,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('beginning\\n1 5\\n4 8\\n1 9\\n') == '5'\nassert solution('velvet\\n1 6\\n') == '7'\nassert solution('afoot\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n1 16\\n1 17\\n1 18\\n1 19\\n1 20\\n1 21\\n1 22\\n1 23\\n1 24\\n1 25\\n1 26\\n1 27\\n1 28\\n1 29\\n1 30\\n1 31\\n1 32\\n1 33\\n1 34\\n1 35\\n1 36\\n1 37\\n1 38\\n1 39\\n1 40\\n1 41\\n1 42\\n1 43\\n1 44\\n1 45\\n1 46\\n1 47\\n1 48\\n1 49\\n1 50\\n1 51\\n1 52\\n1 53\\n1 54\\n1 55\\n1 56\\n1 57\\n1 58\\n1 59\\n1 60\\n1 61\\n1 62\\n1 63\\n1 64\\n1 65\\n1 66\\n1 67\\n1 68\\n1 69\\n1 70\\n1 71\\n1 72\\n1 73\\n1 74\\n1 75\\n1 76\\n1 77\\n1 78\\n1 79\\n1 80\\n1 81\\n1 82\\n1 83\\n1 84\\n1 85\\n1 86\\n1 87\\n1 88\\n1 89\\n1 90\\n1 91\\n1 92\\n1 93\\n1 94\\n1 95\\n1 96\\n1 97\\n1 98\\n1 99\\n1 100\\n1 101\\n1 102\\n1 103\\n1 104\\n1 105\\n1 106\\n1 107\\n1 108\\n1 109\\n1 110\\n1 111\\n1 112\\n1 113\\n1 114\\n1 115\\n1 116\\n1 117\\n1 118\\n1 119\\n1 120\\n1 121\\n1 122\\n1 123\\n1 124\\n1 125\\n1 126\\n1 127\\n1 128\\n1 129\\n1 130\\n1 131\\n1 132\\n1 133\\n1 134\\n1 135\\n1 136\\n1 137\\n1 138\\n1 139\\n1 140\\n1 141\\n1 142\\n1 143\\n1 144\\n1 145\\n1 146\\n1 147\\n1 148\\n1 149\\n1 150\\n1 151\\n1 152\\n1 153\\n1 154\\n1 155\\n1 156\\n1 157\\n1 158\\n1 159\\n1 160\\n1 161\\n1 162\\n1 163\\n1 164\\n1 165\\n1 166\\n1 167\\n1 168\\n1 169\\n1 170\\n1 171\\n1 172\\n1 173\\n1 174\\n1 175\\n1 176\\n1 177\\n1 178\\n1 179\\n1 180\\n1 181\\n1 182\\n1 183\\n1 184\\n1 185\\n1 186\\n1 187\\n1 188\\n1 189\\n1 190\\n1 191\\n1 192\\n1 193\\n1 194\\n1 195\\n1 196\\n1 197\\n1 198\\n1 199\\n1 200\\n1 201\\n1 202\\n1 203\\n1 204\\n1 205\\n1 206\\n1 207\\n1 208\\n1 209\\n1 210\\n1 211\\n1 212\\n1 213\\n1 214\\n1 215\\n1 216\\n1 217\\n1 218\\n1 219\\n1 220\\n1 221\\n1 222\\n1 223\\n1 224\\n1 225\\n1 226\\n1 227\\n1 228\\n1 229\\n1 230\\n1 231\\n1 232\\n1 233\\n1 234\\n1 235\\n1 236\\n1 237\\n1 238\\n1 239\\n1 240\\n1 241\\n1 242\\n1 243\\n1 244\\n1 245\\n1 246\\n1 247\\n1 248\\n1 249\\n1 250\\n1 251\\n1 252\\n1 253\\n1 254\\n1 255\\n1 256\\n1 257\\n1 258\\n1 259\\n1 260\\n1 261\\n1 262\\n1 263\\n1 264\\n1 265\\n1 266\\n1 267\\n1 268\\n1 269\\n1 270\\n1 271\\n1 272\\n1 273\\n1 274\\n1 275\\n1 276\\n1 277\\n1 278\\n1 279\\n1 280\\n1 281\\n1 282\\n1 283\\n1 284\\n1 285\\n1 286\\n1 287\\n1 288\\n1 289\\n1 290\\n1 291\\n1 292\\n1 293\\n1 294\\n1 295\\n1 296\\n1 297\\n1 298\\n1 299\\n1 300"
    },
    {
        "number": 3305,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''beginning\n1 5\n4 8\n1 9''') == '5'\nassert solution('''begineng\n1 5\n4 8\n1 9''') == '5'\nassert solution('''beginning\nvelvet\n1 6\nSample Output 2:\n7\n"
    },
    {
        "number": 3305,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''beginning\n1 5\n4 8\n1 9''') == '5'\nassert solution('''velvet\n1 6\n4 8\n1 9''') == '7'\nassert solution('''sky\n1 6\n4 8\n1 9''') == '11'\n'''\n"
    },
    {
        "number": 3305,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3305,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''beginning\n1 5\n4 8\n1 9\n''') == '5'\nassert solution(\n'''china\n1 6\n4 8\n1 9\n''') == '7'\nassert solution(\n'''spiderman\n1 6\n4 8\n1 9\n''') == '11'\nassert solution(\n'''fly\n1 6\n4 8\n1 9\n''') == '16'\nassert solution(\n'''peterpan\n1 6\n4 8\n1 9\n''') == '7'\n"
    },
    {
        "number": 3305,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"beginning\\n1 5\\n4 8\\n1 9\") == \"5\\n11\\n16\"\nassert solution(\n\"velvet\\n1 6\\n1 5\") == \"7\\n8\\n8\"\n\"\"\"\n"
    },
    {
        "number": 3305,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output\nprint(f\"{solution(stdin)} passed\")\n"
    },
    {
        "number": 3305,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('velvet') == '7'\n\"\"\""
    },
    {
        "number": 3305,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('beginning\\n1 5\\n4 8\\n1 9') == '5'\nassert solution('velvet\\n1 6\\nSample Output 2') == '7'\nassert solution('1') == '0'\nassert solution('\\n1') == '0'\nassert solution('\\n') == '0'\n"
    },
    {
        "number": 3305,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '7'"
    },
    {
        "number": 3306,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 4\n3 1\n2 2\n1 1\n''') == '2'\nassert solution('''2 3\n1 23\n2 17\n''') == '23'\n"
    },
    {
        "number": 3306,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n3 1\\n2 2\\n1 1\") == 2\nassert solution(\"2 3\\n1 23\\n2 17\\n\") == 23\nassert solution(\"1000000000 5\\n1000000000 1\\n1000000000 1000000001\\n1000000000 1000000002\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000000 1\\n1000000"
    },
    {
        "number": 3306,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 4\n3 1\n2 2\n1 1''') == '2'\nassert solution('''2 3\n1 23\n2 17\nSample Output 2:\n23''') == '23'"
    },
    {
        "number": 3306,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 4\n3 1\n2 2\n1 1''') == '2'\n\nassert solution('''3 4\n3 1\n2 2\n1 1''') == '2'\n\nassert solution('''1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '1'\n\nassert solution('''1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1"
    },
    {
        "number": 3306,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3\\n1 23\\n2 17') == '23'\nassert solution('2 2\\n1 1\\n2 2') == '2'\nassert solution('3 4\\n3 1\\n2 2\\n1 1') == '2'\nassert solution('3 3\\n2 2\\n1 1\\n1 1') == '2'\nassert solution('2 1\\n1 1') == '1'\n"
    },
    {
        "number": 3306,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 4\n3 1\n2 2\n1 1''') == '2'\nassert solution('''2 3\n1 23\n2 17\nSample Output 2:\n23''') == '23'\nprint('Testcases passed')\n"
    },
    {
        "number": 3306,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 4') == '2'\nassert solution('2 3') == '23'\nassert solution('1 23') == '23'\nassert solution('1 17') == '17'\nassert solution('1 17') == '17'\n"
    },
    {
        "number": 3306,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 4\n3 1\n2 2\n1 1''') == \"2\"\nassert solution('''2 3\n1 23\n2 17''') == \"23\""
    },
    {
        "number": 3306,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 4\n3 1\n2 2\n1 1''') == '2'\nassert solution('''3 4\n3 2\n2 2\n1 1''') == '3'\nassert solution('''3 4\n2 3\n1 23\n2 17\n''') == '23'\nassert solution('''6 6\n1 25\n2 23\n3 22\n4 22\n5 22\n6 22\n''') == '5'\nassert solution('''100000 10000000\n1 250000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 280000000\n1 28"
    },
    {
        "number": 3306,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 4\n3 1\n2 2\n1 1''') == \"2\"\nassert solution('''3 3\n1 22\n2 12\n1 1''') == \"22\"\nassert solution('''3 3\n1 19\n2 22\n1 1''') == \"19\"\nassert solution('''4 4\n1 2\n2 3\n3 4\n1 1\n2 2\n3 3''') == \"2\"\nassert solution('''4 3\n2 2\n2 3\n3 2\n1 1\n2 2\n3 3''') == \"2\"\n"
    },
    {
        "number": 3307,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 0\n2 0\n2 2\n0 2\n0 -1 0 3''') == '0.0000000000'\nassert solution('''0 1\n0 4\n3 6\n7 5\n4 2\n7 0\n5 7 2 0''') == '9.476048311178'\nassert solution('''1\n1\n1\n1\n1\n1''') == '1.000000000'\nassert solution('''-1\n1\n1\n1\n1\n1\n1''') == '1.000000000'\nassert solution('''0\n-1\n1\n1\n1\n1\n1''') == '1.000000000'\n"
    },
    {
        "number": 3307,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n0 0\n2 0\n2 2\n0 2\n0 -1 0 3''') == '0.0000000000'\nassert solution('''6\n0 1\n0 4\n3 6\n7 5\n4 2\n7 0\n5 7 2 0''') == '9.476048311178'\n\nprint(solution('''14\n0 0\n2 0\n2 2\n0 2\n0 -1 0 3\n4 3\n4 -3\n6 1\n6 -2\n6 -3\n8 -5\n8 -6\n8 -7\n10 -8\n10 -9\n12 -10\n12 -11\n14 -11\n14 -12\n14 -13\n14 -14\n14 -15\n14 -16\n14 -17\n14 -18\n14 -19\n14 -20\n14 -21\n14 -22\n14 -23\n14 -24\n14 -25\n14 -26\n14 -27\n14 -28\n14 -29\n14 -30\n14 -31\n14 -32\n14 -33\n14 -34\n14 -35\n14 -36\n14 -37\n14 -38\n14 -39\n14 -40\n14 -41\n14 -42\n14 -43\n14 -44\n14 -45\n14 -46\n14 -47\n14 -48\n14 -49\n14 -50\n14 -51\n14 -52\n14 -53\n14 -54\n14 -55\n14 -56\n14 -57\n14 -58\n14 -59\n14 -60\n14 -61\n14 -62\n14 -63\n14 -64\n14 -65\n14 -66\n14 -67\n14 -68\n14 -69\n14 -70\n14 -71\n14 -72\n14 -73\n14 -74\n14 -75\n14 -76\n14 -77\n14 -78\n14 -79\n14 -80\n14 -81\n14 -82\n14 -83\n14 -84\n14 -85\n14 -86\n14 -87\n14 -88\n14 -89\n14 -90\n14 -91\n14 -92\n14 -93\n14 -94\n14 -95\n14 -96\n14 -97\n14 -98\n14 -99\n14 -100\n14 -101\n14 -102\n14 -103\n14 -104\n14 -105\n14 -106\n14 -107\n14 -108\n14 -109\n14 -110\n14 -111\n14 -112\n14 -113\n14 -114\n14 -115\n14 -116\n14 -117\n14 -118\n14 -119\n14 -120\n14 -121\n14 -122\n14 -123\n14 -124\n14 -125\n14 -126\n14 -127\n14 -128\n14 -129\n14 -130\n14 -131\n14 -132\n14 -133\n14 -134\n14 -135\n14 -136\n14 -137\n14 -138\n14 -139\n14 -140\n14 -141\n14 -142\n14 -143\n14 -144\n14 -145\n14 -146\n14 -147\n14 -148\n14 -149\n14 -150\n14 -151\n14 -152\n14 -153\n14 -154\n14 -155\n14 -156\n14 -157\n14 -158\n14 -159\n14 -160\n14 -161\n14 -162\n14 -163\n14 -164\n14 -165\n14 -166\n14 -167\n14 -168\n14 -169\n14 -170\n14 -171\n14 -172\n14 -173\n14 -174\n14 -175\n14 -176\n14 -177\n14 -178\n14 -179\n14 -180\n14 -181\n14 -182\n14 -183\n14 -184\n14 -185\n14 -186\n14 -187\n14 -188\n14 -189\n14 -190\n14 -191\n14 -192\n14 -193\n14 -194\n14 -195\n14 -196\n14 -197\n14 -198\n14 -199\n14 -200\n14 -201\n14 -202\n14 -203\n14 -204\n14 -205\n14 -206\n14 -207\n14 -208\n14 -209\n14 -210\n14 -211\n14 -212\n14 -213\n14 -214\n14 -215\n14 -216\n14 -217\n14 -218\n14 -219\n14 -220\n14 -221\n14 -222\n14 -223\n14 -224\n14 -225\n14 -226\n14 -227\n14 -228\n14 -229\n14 -230\n14 -231\n14 -232\n14 -233\n14 -234\n14 -235\n14 -236\n14 -237\n14 -238\n14 -239\n14 -240\n14 -241\n14 -242\n14 -243\n14 -244\n14 -245\n14 -246\n14 -247\n14 -248\n14 -249\n14 -250\n14 -251\n14 -252\n14 -253\n14 -254\n14 -255\n14 -256\n14 -257\n14 -258\n14 -259\n14 -260\n14 -261\n14 -262\n14 -263\n14 -264\n14 -265\n14 -266\n14 -267\n14 -268\n14 -269\n14 -270\n14 -271\n14 -272\n14 -273\n14 -274\n14 -275\n14 -276\n14 -277\n14 -278\n14 -279\n14 -280\n14 -281\n14 -282\n14 -283\n14 -284\n14 -285\n14 -286\n14 -287\n14 -288\n14 -289\n14 -290\n14 -291\n14 -292\n14 -293\n14 -294\n14 -295\n14 -296\n14 -297\n14 -298\n14 -299\n14 -300\n14 -301\n14 -302\n14 -303\n14 -304\n14 -305\n14 -306\n14 -307\n14 -308\n14 -309\n14 -310\n14 -311\n14 -312\n14 -313\n14 -314\n14 -315\n14 -316\n14 -317\n14 -318\n14 -319\n14 -320\n14 -321\n14 -322\n14 -323\n14 -324\n14 -325\n14 -326\n14 -327\n14 -328\n14 -329\n14 -330\n14 -331\n14 -332\n14 -333\n14 -334\n"
    },
    {
        "number": 3307,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"4\\n0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\\n\") == \"0.0000000000\"\nassert solution(\n\"6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\\n\") == \"9.476048311178\"\nprint(solution(stdin))\n"
    },
    {
        "number": 3307,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3') == '0.0000000000'\nassert solution('2\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0') == '9.476048311178'\nassert solution('3\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0') == '18.10156111406'\nassert solution('5\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0') == '34.87656584'\nassert solution('7\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0') == '52.235975674'\n"
    },
    {
        "number": 3307,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n"
    },
    {
        "number": 3307,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''0 0\n2 0\n2 2\n0 2\n0 -1 0 3''') == '0.0000000000'\nassert solution('''0 1\n0 4\n3 6\n7 5\n4 2\n7 0\n5 7 2 0''') == '9.476048311178'\nassert solution('''-6.67  1.23  6.68\n -3.59  6.6  1.04\n 6.57  5.4  7.5\n -2.11  2.48  9.1\n -0.84 -8.83  8.75\n 1.79 -3.48  0.18\n -1.01  6.02  1.7''') == '1.46657181817'\nassert solution('''2\n0 0\n0 4\n3 6\n7 5\n4 2\n7 0\n5 7 2 0''') == '1.46657181817'\nassert solution('''8\n0 0\n0 4\n3 6\n7 5\n4 2\n7 0\n5 7 2 0''') == '1.46657181817'\n"
    },
    {
        "number": 3307,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0 0\n2 0\n2 2\n0 2\n0 -1 0 3\n''') == '0.0000000000'\n\nassert solution('''2\n1 1\n1 2\n2 1\n2 -1 0 1 2\n''') == '3.0000000000'\n\nassert solution('''7\n1 4\n1 2\n2 5\n5 6\n6 4\n3 1\n7 3 0 -1\n''') == '11.0'\n\nassert solution('''3\n-100 -1\n0 1\n0 1\n1 100\n1 100\n0 0\n''') == '2.0000000000'\n\nassert solution('''3\n0 0\n2 0\n2 2\n0 2\n0 -1 0 3\n''') == '3.0000000000'"
    },
    {
        "number": 3307,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == str(solution(stdin)) # make sure results are not cheating\n\"\"\"\n\nimport sys\nfrom math import sqrt"
    },
    {
        "number": 3307,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''0 0\n2 0\n2 2\n0 2\n0 -1 0 3\n''') == '0.0000000000'\n\nassert solution(\n'''0 1\n0 4\n3 6\n7 5\n4 2\n7 0\n5 7 2 0\n''') == '9.476048311178'\n\nassert solution(\n'''1 1\n0 0\n1 1\n2 2\n-1 1\n-1 2\n-2 1\n-3 -2\n-4 -1\n-5 -1\n1 -5 -1 1\n''') == '3.2944696772'\n\nassert solution(\n'''-2 1\n-1 1\n-1 2\n-2 1\n-3 -2\n-4 -1\n-5 -1\n-3 -2\n-1 -1\n1 -1\n1 -5 -1 1\n''') == '1.6100623645'\n\nassert solution(\n'''-2 1\n-1 1\n-1 2\n-2 1\n-3 -2\n-4 -1\n-5 -1\n-3 -2\n1 1\n1 1\n1 -1\n1 -1\n1 -5 -1 1\n''') == '1.6100623645'\n"
    },
    {
        "number": 3307,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '9.476048311178'\n\"\"\"\n"
    },
    {
        "number": 3308,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n2 0\n1 1\n0 2\n-2 0\n0 -2''') == '8.0000000000'\nassert solution('''5\n0.2 0.00\n0 -0.2\n0.0 0\n-0.2 0\n0 0.20''') == '0.0200000000'\nassert solution('''6\n0.4 0.4\n0 0.2\n0.4 0.6\n0.6 0.2\n0.2 0.4\n0.4 0.2\nSample Output 2:\n1.401361499999\n''') == '1.401361499999'\nassert solution('''6\n0.4 0.4\n0 0.2\n0.4 0.6\n0.6 0.2\n0.2 0.4\n0.4 0.2\nSample Output 2:\n1.401361499999\n''') == '1.401361499999'\nassert solution('''6\n0.4 0.4\n0 0.2\n0.4 0.6\n0.6 0.2\n0.2 0.4\n0.4 0.2\nSample Output 2:\n1.401361499999\n''') == '1.401361499999'\n"
    },
    {
        "number": 3308,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"5\n2 0\n1 1\n0 2\n-2 0\n0 -2\n\"\"\") == \"8.0000000000\"\nassert solution(\n\"\"\"5\n0.2 0.00\n0 -0.2\n0.0 0\n-0.2 0\n0 0.20\n\"\"\") == \"0.0200000000\"\nassert solution(\n\"\"\"5\n2 0\n1 1\n0 2\n-2 0\n0 -2\n\"\"\") == \"8.0000000000\"\nassert solution(\n\"\"\"5\n-2 1\n-2 -1\n-1 -2\n-1 1\n0 0\n\"\"\") == \"1.0\"\nassert solution(\n\"\"\"5\n0 0\n0 -1\n1 0\n-1 0\n1 1\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3308,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n2 0\n1 1\n0 2\n-2 0\n0 -2''') == '8.0000000000'\nassert solution('''5\n0.2 0.00\n0 -0.2\n0.0 0\n-0.2 0\n0 0.20''') == '0.0200000000'\nassert solution('''5\n2.1 0.0\n0.0 0.2\n0.2 0.0\n-2.1 0.0\n0.0 0.2''') == '3.49999999999'\nassert solution('''5\n0.0 0.0\n0.0 0.2\n0.2 0.0\n2.0 0.0\n0.0 0.2''') == '0.149999999999'\nassert solution('''5\n0.2 0.2\n0.2 -0.2\n-0.2 0.2\n0.2 -0.2\n0.2 0.2''') == '0.80000000000'\n"
    },
    {
        "number": 3308,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\\n0 0.2\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.2\") == \"8.0000000000\"\nassert solution(\"5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.2\\n\") == \"0.0200000000\"\nassert solution(\"5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.2\\n0.0 0\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.2\\n0.0 0\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.2\\n0.0 0\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.2\\n0.0 0\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.2\\n0.0 0\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.2\\n0.0 0\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.2\\n0.0 0\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.2\\n0.0 0\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.2\\n0.0 0\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.2\\n0.0 0\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.2\\n0.0 0\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.2\\n0.0 0\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.2\\n0.0 0\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.2\\n0.0 0\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.2\\n0.0 0\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.2\\n0.0 0\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.2\\n0.0 0\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.2\\n0.0 0\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.2\\n0.0 0\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.2\\n0.0 0\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.2\\n0.0 0\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.2\\n0.0 0\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.2\\n0.0 0\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.2\\n0.0 0\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.2\\n0.0 0\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.2\\n0.0 0\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.2\\n0.0 0\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.2\\n0.0 0\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.2\\n0.0 0\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.2\\n0.0 0\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.2\\n0.0 0\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.2\\n0.0 0\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.2\\n0.0 0\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.2\\n0.0 0\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.2\\n0.0 0\\n0."
    },
    {
        "number": 3308,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5''') == '8.0000000000'\nassert solution('''5\n0.2 0.00\n0 -0.2\n0.0 0\n-0.2 0\n0 0.20''') == '0.0200000000'\nassert solution('''10\n2 0\n1 1\n0 2\n-2 0\n0 -2\n-1 1\n0 1\n2 0\n0 -1\n-2 0\n''') == '8.0000000000'\n\nprint(solution('''10\n2 0\n1 1\n0 2\n-2 0\n0 -2\n-1 1\n0 1\n2 0\n0 -1\n-2 0\n'''))\nassert print(solution('''10\n2 0\n1 1\n0 2\n-2 0\n0 -2\n-1 1\n0 1\n2 0\n0 -1\n-2 0\n''')) == '8.0000000000'\n\nprint(solution('''10\n0.2 0.00\n0 -0.2\n0.0 0\n-0.2 0\n0 0.20'''))\nassert print(solution('''10\n0.2 0.00\n0 -0.2\n0.0 0\n-0.2 0\n0 0.20''')) == '0.0200000000'\n\nprint(solution('''10\n2 0\n1 1\n0 2\n-2 0\n0 -2\n-1 1\n0 1\n2 0\n0 -1\n-2 0\n'''))\n"
    },
    {
        "number": 3308,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"8.0000000000\"\nassert solution(\"5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\") == \"8.0000000000\"\nassert solution(\"5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\") == \"0.0200000000\"\nassert solution(\"5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\\n\") == \"0.0200000000\"\nassert solution(\"5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\\n\") == \"0.0200000000\"\n"
    },
    {
        "number": 3308,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n2 0\n1 1\n0 2\n-2 0\n0 -2''') == '8.0000000000'\nassert solution('''5\n0.2 0.00\n0 -0.2\n0.0 0\n-0.2 0\n0 0.20''') == '0.0200000000'\n'''\n"
    },
    {
        "number": 3308,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3308,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n2 0\n1 1\n0 2\n-2 0\n0 -2\n''') == '8.0000000000'\nassert solution('''5\n0.2 0.00\n0 -0.2\n0.0 0\n-0.2 0\n0 0.20\n''') == '0.0200000000'\nassert solution('''4\n0.02 0.02\n0 -0.02\n0 0\n-0.02 0\n0 0.02\n''') == '0.08'\nassert solution('''2\n0.02 0.02\n0 -0.02\n0 0\n-0.02 0\n''') == '0.08'\nassert solution('''7\n0.05 0.00\n0 -0.05\n0 0\n-0.05 0\n0 0.05\n0 -0.05\n''') == '3.1415'\n"
    },
    {
        "number": 3308,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n2 0\n1 1\n0 2\n-2 0\n0 -2\n''') == '8.0000000000'\nassert solution('''5\n0.2 0.00\n0 -0.2\n0.0 0\n-0.2 0\n0 0.20\n''') == '0.0200000000'"
    },
    {
        "number": 3309,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3309,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3309,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1 9 9 1 6 6 39 9') == '2'\nassert solution('1 1 9 9 1 6 6 39 9 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3309,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3309,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''9 4 3\n1 1 9 9 1 6 6 39 9''') == '2'\nassert solution('''10 2 2\n1 1 1 1 1 2 2 2 2 2''') == '2'\n"
    },
    {
        "number": 3309,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''9 4 3\n1 1 9 9 1 6 6 39 9\n''') == '2'\nassert solution('''10 2 2\n1 1 1 1 1 2 2 2 2 2\n''') == '2'\nassert solution('''2 2 2\n2\n''') == '1'\nassert solution('''5 4 2\n1 1 1 1 1\n2 2\n2\n''') == '2'\nassert solution('''7 2 4\n1 1 1 1 1 1 1\n2 2\n2\n''') == '2'\n"
    },
    {
        "number": 3309,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 3 4\") == \"2\"\nassert solution(\"2 3 4 5\") == \"3\"\nassert solution(\"2 3 4 5 6\") == \"2\"\nassert solution(\"10 2 2\") == \"2\"\nassert solution(\"10 3 4\") == \"4\"\n"
    },
    {
        "number": 3309,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3309,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3309,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 3 2\\n1 1 2 2\") == \"2\"\nassert solution(\"2 4 4\\n1 1 1 1 1 2 2 2 2\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\") == \"2\"\nassert solution(\"10 3 3\\n1 1 2 3 1 3 9 9 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\") == \"2\"\nassert solution(\"10 4 6\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\") == \"2\"\nassert solution(\"10 5 7\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\") == \"3\"\n"
    },
    {
        "number": 3310,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3 2\n1 2 3''') == '3.666666667'\nassert solution('''4 11 4\n10 10 10 10''') == '20.000000000'\nassert solution('''5 5 4\n1 2 4 5\n10 9 8 7''') == '17.5'\nassert solution('''4 4 4\n1 1 1 1\n3 4 4 4''') == '16'\nassert solution('''5 5 4\n1 1 1 1\n1 1 1 1''') == '16.000000000'\n"
    },
    {
        "number": 3310,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3310,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"20.000000000\"\nassert solution(\"1 2 3\") == \"3.666666667\"\nassert solution(\"3 3 3\") == \"3.666666667\"\nassert solution(\"2 3 1\") == \"2.5\"\nassert solution(\"1 1 1\") == \"0\"\n"
    },
    {
        "number": 3310,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"20.000000000\"\nassert solution(\"3 3 2\") == \"3.666666667\"\nassert solution(\"4 11 4\") == \"20.000000000\"\n\"\"\""
    },
    {
        "number": 3310,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 3 2\n1 2 3\n''') == '3.666666667'\nassert solution('''4 11 4\n10 10 10 10\n''') == '20.000000000'\n'''\n"
    },
    {
        "number": 3310,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 3310,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''3 3 2\n1 2 3'''\n    ) == '3.666666667'\nassert solution(\n'''5 11 4\n10 10 10 10'''\n    ) == '20.000000000'\nassert solution(\n'''10 5 4\n2 3 4 5'''\n    ) == '5.000000000'\nassert solution(\n'''10 5 4\n1 2 4 5'''\n    ) == '4.000000000'\nassert solution(\n'''10 5 4\n1 2 4 5'''\n    ) == '4.000000000'\n"
    },
    {
        "number": 3310,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n3\\n1\\n2\\n1') == '3.666666667'\nassert solution('2\\n100\\n10\\n10') == '100.000000000'\nassert solution('2\\n100\\n100\\n100') == '1.8239318351'\nassert solution('2\\n100\\n100\\n100\\n100') == '1.8239318351'\nassert solution('2\\n100\\n100\\n100\\n100\\n100') == '1.8239318351'\n"
    },
    {
        "number": 3310,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 4 2\n1 2 3\n''') == '3.666666667'\nassert solution('''6 9 10\n
    },
    {
        "number": 3310,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 3 2\n1 2 3''') == '3.666666667'\nassert solution('''4 11 4\n10 10 10 10''') == '20.000000000'\nassert solution('''4 11 3\n10 10 10 10''') == '6.66666667'\nassert solution('''5 7 2\n4 1 3 5 6''') == '7.6923076923'\nassert solution('''4 7 1\n10 10 10 10''') == '1.2'\n"
    },
    {
        "number": 3311,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(1,1) == 1\nassert solution(2,42) == 2\nassert solution(5,123456789) == 16317634\nassert solution(1,1) == 1\nassert solution(2,42) == 2\n"
    },
    {
        "number": 3311,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1') == 1\nassert solution('5 123456789') == 16317634\nassert solution('2 42') == 2\nassert solution('5 123456789') == 16317634\nassert solution('5 123456789 7') == 16317634\n"
    },
    {
        "number": 3311,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 42') == '2'\nassert solution('5 123456789') == '16317634'\nassert solution('2 42') == '2'\nassert solution('5 123456789') == '16317634'\nassert solution('2 42') == '2'\n"
    },
    {
        "number": 3311,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3311,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 42') == '2'\nassert solution('5 123456789') == '16317634'\nassert solution('5 15') == '2'\nassert solution('5 15') == '2'\nassert solution('5 15') == '2'\n"
    },
    {
        "number": 3311,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''2 42'''\n) == '2'\n\nassert solution(\n'''5 123456789'''\n) == '16317634'\n\nprint(solution(\n'''5 123456789'''\n))\n"
    },
    {
        "number": 3311,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 42') == '2'\nassert solution('5 123456789') == '16317634'\n\"\"\""
    },
    {
        "number": 3311,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 42') == '2'\nassert solution('5 123456789') == '16317634'\nassert solution('1 1') == '0'\nassert solution('5 7') == '5'\nassert solution('4 7') == '0'\n"
    },
    {
        "number": 3311,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 42\") == \"2\"\nassert solution(\"5 123456789\") == \"16317634\"\n'''\n"
    },
    {
        "number": 3311,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n-----\n"
    },
    {
        "number": 3312,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 1 0 0 2\n1 2 2\n1 1 1\n''') == '0'\nassert solution('''3 1 1 1 8\n0 1 1\n1 0 1\n2 1 1\n1 2 1\n1 2 2\n2 2 3\n0 2 5\n1 2 6\n''') == '4'\n"
    },
    {
        "number": 3312,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 1 0 0 2\n1 2 2\n1 1 1''') == '0'\nassert solution('''3 1 1 1 8\n0 1 1\n1 0 1\n2 1 1\n1 2 1\n1 2 2\n2 2 3\n0 2 5\n1 2 6''') == '4'\nassert solution('''3 1 1 1 8\n0 1 1\n1 0 1\n2 1 1\n1 2 1\n1 2 2\n2 2 3\n0 2 5\n1 2 6''') == '7'\nassert solution('''3 1 1 1 8\n0 1 1\n1 0 1\n2 1 1\n1 2 1\n1 2 2\n2 2 3\n0 2 5\n1 2 6''') == '7'\nassert solution('''3 1 1 1 8\n0 1 1\n1 0 1\n2 1 1\n1 2 1\n1 2 2\n2 2 3\n0 2 5\n1 2 6''') == '7'\n"
    },
    {
        "number": 3312,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 1 0 0 2\\n1 2 2\\n1 1 1\\n') == '0'\nassert solution('3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\\n') == '4'\nprint('solution is valid!')"
    },
    {
        "number": 3312,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3312,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 1 0 0 2\") == \"0\"\nassert solution(\"3 1 0 0 2\") == \"0\"\nassert solution(\"3 1 1 1 8\") == \"4\"\nassert solution(\"3 1 1 1 8\") == \"4\"\n"
    },
    {
        "number": 3312,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 1 0 0 2\\n1 2 2\\n1 1 1\\n') == '0'\nassert solution('3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\\n') == '4'\n"
    },
    {
        "number": 3312,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 1 0 0 2\\n1 2 2\\n1 1 1\\n0 0 0') == '0'\nassert solution('3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6') == '4'\n"
    },
    {
        "number": 3312,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 1 0 0 2\\n1 2 2\\n1 1 1\\n') == '0'\nassert solution('3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\\n') == '4'\n\n'''\n"
    },
    {
        "number": 3312,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 1 0 0 2\n1 2 2\n1 1 1\n''') == '0'\n\nassert solution('''3 1 1 1 8\n0 1 1\n1 0 1\n2 1 1\n1 2 1\n1 2 2\n2 2 3\n0 2 5\n1 2 6\n''') == '4'\n"
    },
    {
        "number": 3312,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution
    },
    {
        "number": 3313,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3313,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 1 10 10') == '3'\nassert solution('5 1 100 100') == '3'\nassert solution('5 1 100 100\\n4 6\\n4 7\\n7 9\\n') == '3'\nassert solution('5 1 100 100\\n4 6\\n4 7\\n7 9\\n4 6\\n4 7\\n7 9\\n') == '3'\nassert solution('5 1 100 100\\n4 6\\n4 7\\n7 9\\n4 6\\n4 7\\n7 9\\n4 6\\n4 7\\n7 9\\n4 6\\n4 7\\n7 9\\n') == '3'\n"
    },
    {
        "number": 3313,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\\n\") == \"3\"\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\\n\") == \"3\"\nprint(\"testcase passed\")\n"
    },
    {
        "number": 3313,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 1 10 10\n8 8\n5 1\n4 6\n4 7\n7 9\n''') == '3'\nassert solution('''5 1 100 100\n27 75\n79 77\n40 93\n62 41\n52 45\n''') == '3'\nassert solution('''5 1 100 100\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1"
    },
    {
        "number": 3313,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '2'\n"
    },
    {
        "number": 3313,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '3'\nassert solution(stdin) == '2'\n"
    },
    {
        "number": 3313,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 1 10 10\n8 8\n5 1\n4 6\n4 7\n7 9''') == \"3\"\nassert solution('''5 1 100 100\n27 75\n79 77\n40 93\n62 41\n52 45''') == \"3\"\nassert solution('''5 1 10 10\n8 8\n5 1\n4 6\n4 7\n7 9\n5 1\n4 6\n4 7\n7 9\n5 1\n4 6\n4 7\n7 9\n5 1\n4 6\n4 7\n7 9\n5 1\n4 6\n4 7\n7 9''') == \"3\"\nprint('Test complete')\n"
    },
    {
        "number": 3313,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('2 2\\n2 1') == '1'\nassert solution('2 2\\n2 2') == '1'\nassert solution('1 1\\n1 1') == '1'\nassert solution('1 1\\n2 2') == '0'\n"
    },
    {
        "number": 3313,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''5 1 10 10\n8 8\n5 1\n4 6\n4 7\n7 9'''\n) == '3'\n\nassert solution(\n'''5 1 100 100\n27 75\n79 77\n40 93\n62 41\n52 45\n'''\n) == '3'\n\nassert solution(\n'''5 1 100 100\n27 75\n79 77\n40 93\n62 41\n52 45\n'''\n) == '3'\n\nassert solution(\n'''5 1 100 100\n27 75\n79 77\n40 93\n62 41\n52 45\n'''\n) == '3'\n\nassert solution(\n'''5 1 100 100\n27 75\n79 77\n40 93\n62 41\n52 45\n'''\n) == '3'"
    },
    {
        "number": 3313,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 1 10 10\") == \"3\"\nassert solution(\"5 1 100 100\") == \"3\"\nassert solution(\"5 1 10 10\") == \"3\"\nassert solution(\"5 1 10 100\") == \"3\"\nassert solution(\"5 1 10 100\") == \"3\"\n"
    },
    {
        "number": 3314,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3\nassert solution(\"BBBCCCBB\") == 3\nassert solution(\"CCCCAAAC\") == 3\nassert solution(\"ABBBAAAAABBBAAAAA\") == 2\n"
    },
    {
        "number": 3314,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3314,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"ABC\") == \"2\"\nassert solution(\"ABCB\") == \"3\"\nassert solution(\"ABCBC\") == \"3\"\nassert solution(\"ABCABC\") == \"1\"\nassert solution(\"ABCAB\") == \"1\"\n"
    },
    {
        "number": 3314,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == -1\nassert solution(\"BBBCCCBB\") == 3\nassert solution(\"CCCCAAAC\") == 3\nassert solution(\"BAC\") == 1\n"
    },
    {
        "number": 3314,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ABC') == 2\nassert solution('ABC') == 2\nassert solution('ABC') == 2\nassert solution('ABC') == 2\nassert solution('ABBBAAAA') == 3\n"
    },
    {
        "number": 3314,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\nACAB\nBBABC\nBCBCB\n'''\n) == '3'\n\nassert solution(\n'''\nAA\nABA\nA\n'''\n) == '-1'\n\nassert solution(\n'''\nACBC\nABAAC\nBC\n'''\n) == '2'\n\nassert solution(\n'''\nABC\nABBC\nBC\n'''\n) == '1'\n\nassert solution(\n'''\nABBA\nABBA\nABBA\n'''\n) == '-1'"
    },
    {
        "number": 3314,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''ABC\nABC\nABC\n''') == '2'\nassert solution('''ABBBAAAA\nBBBCCCBB\nCCCCAAAC\n''') == '3'\nassert solution('''ABBBAAAA\nBBBCCCBB\nCCCCAAAC\n''') == '-1'\nassert solution('''ABC\nABC\nABC\n''') == '-1'\nassert solution('''ABBBAAAA\nBBBCCCBB\nCCCCAAAC\n''') == '-1'\n"
    },
    {
        "number": 3314,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == '-1'\nassert solution('ABC') == '2'\nassert solution('ABBBAAAA') == '3'\nassert solution('BBBCCCBB') == '3'\nassert solution('CCCCAAAC') == '3'\nprint('All cases passed')\n"
    },
    {
        "number": 3314,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ABC') == 2\nassert solution('ABBBAAAA') == -1\nassert solution('BBBCCCBB') == 3\nassert solution('CCCCAAAC') == 3\n\n\"\"\"\n"
    },
    {
        "number": 3314,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''ABC\nABC\nABC\n''') == '2'\nassert solution('''ABBBAAAA\nBBBCCCBB\nCCCCAAAC\n''') == '3'\nassert solution('''ABBBAAAA\nBBBCCCBB\nCCCCAAAC\n''') == '-1'\n"
    },
    {
        "number": 3315,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3315,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"A\") == \"1\"\nassert solution(\"AB\") == \"2\"\nassert solution(\"ABC\") == \"1\"\nassert solution(\"ABAA\") == \"2\"\nassert solution(\"ABAAB\") == \"1\"\n"
    },
    {
        "number": 3315,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('A') == ''\nassert solution('AB') == ''\nassert solution('ABA') == ''\nassert solution('AAAAAB') == ''\n"
    },
    {
        "number": 3315,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('4') == '1'\n"
    },
    {
        "number": 3315,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3315,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(\"a\\nbbb\\naa\\nbbb\\naa\\naa\\nbbb\\naa\\naa\\nbbb\") == \"3\"\nassert solution(\"a\\nb\\nba\\nb\\nb\\nb\\nb\\nb\\nb\\nba\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb"
    },
    {
        "number": 3315,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == 0\nassert solution('A') == 1\nassert solution('AA') == 2\nassert solution('ABBA') == 2\nassert solution('AABABBABA') == 4\n"
    },
    {
        "number": 3315,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3315,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n5\nA\nB\nAA\nBBB\nAAA\n''') == '3'\nassert solution('''\n5\nA\nABA\nBBB\nABABA\nAAAAAB\n''') == '3'\n'''"
    },
    {
        "number": 3315,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"3\"\nassert solution(\"6\") == \"2\"\n"
    },
    {
        "number": 3316,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3316,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('100 10 2 1') == '0.1'\nassert solution('100 10 2 2') == '0.1909090909'\nassert solution('100 10 2 3') == '0.2878787879'\nassert solution('100 10 2 5') == '0.070833333333'\nassert solution('100 10 2 50') == '0.0'\n"
    },
    {
        "number": 3316,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('100 10 2 1') == '0.1'\nassert solution('100 10 2 2') == '0.1909090909'\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 3316,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('100 10 2 1') == '0.1'\nassert solution('100 10 2 2') == '0.1909090909'\nassert solution('100 10 2 2') == '0.1909090909'\n"
    },
    {
        "number": 3316,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 3316,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"100 10 2 1\") == \"0.1\"\nassert solution(\"100 10 2 2\") == \"0.1909090909\"\nprint(\"Tests passed successfully.\")\n"
    },
    {
        "number": 3316,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3316,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0.1909090909\"\n\n\"\".join(c if c.isalnum() or c in \"._\" else \"\" for c in stdin)\nprint(\"\".join(c if c.isalnum() or c in \"._\" else \"\" for c in stdin))\n"
    },
    {
        "number": 3316,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3316,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('100 10 2 1') == '0.1'\nassert solution('100 10 2 2') == '0.1909090909'\nassert solution('100 100 100 100') == '1.0'\nassert solution('100 100 100 100') == '1.0'\nassert solution('100 1 0 1') == '0.0'\n"
    },
    {
        "number": 3317,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''ABABABcABABAbAbab''') == '4'\nassert solution('''ABBABcABAABAbAAAB''') == '4'\nassert solution('''ABBABcABAABAbAAAB''') == '4'\nassert solution('''ABBABcABAABAbAAAB''') == '4'\nassert solution('''ABBABcABAABAbAAAB''') == '4'\n"
    },
    {
        "number": 3317,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\n\"\"\"\nimport sys"
    },
    {
        "number": 3317,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3317,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ABABABcABABAbAbab') == 'b
    },
    {
        "number": 3317,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ABABABcABABAbAbab') == '4'\nassert solution('ABBAAAAAB') == '5'\nassert solution('ABBAAAAABaABaaABaAB') == '9'\nassert solution('ABBABBABAAABBABBABBABBAAAAAAABAAABBBABBAABABBABBABABB') == '18'\nassert solution('BABABABBBABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABA"
    },
    {
        "number": 3317,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output\n'''\n"
    },
    {
        "number": 3317,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\nABABABcABABAbAbab\n3\n0 2\n1 6\n0 7\n\"\"\") == \"4\\n0\\n5\"\nassert solution(\n\"\"\"\nABABABcABABAbAbab\n3\n0 2\n1 6\n0 7\n\"\"\") == \"4\\n0\\n5\"\nassert solution(\n\"\"\"\nABBAcBABABAcBABABcBABABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBABAcBA"
    },
    {
        "number": 3317,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 0\nassert solution('ABABABcABABAbAbab') == 4\nassert solution('ABABABcABABAbAbab') == 4\nassert solution('ABABABcABABAbAbab') == 4\nassert solution('ABABABcABABAbAbab') == 4\n"
    },
    {
        "number": 3317,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 0\nassert solution(\"ABBA\") == 0\nassert solution(\"BABA\") == 4\nassert solution(\"BABABABcABABAbAbab\") == 5\n"
    },
    {
        "number": 3317,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\n\"\"\"\n"
    },
    {
        "number": 3318,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0\\n4\\n0\\n0\\n1\") == \"2\"\nassert solution(\"0\\n1\\n1\\n0\\n1\\n1\") == \"2\"\nassert solution(\"0\\n1\\n1\\n1\\n0\\n1\") == \"3\"\nassert solution(\"0\\n1\\n1\\n1\\n0\\n1\\n1\") == \"3\"\nassert solution(\"1\\n1\\n1\\n0\\n1\\n1\") == \"2\"\n"
    },
    {
        "number": 3318,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0\\n0\\n1') == '2'\nassert solution('1\\n0\\n1') == '2'\nassert solution('2\\n0\\n1') == '2'\nassert solution('1\\n1\\n2\\n2\\n3') == '5'\nassert solution('4\\n0\\n1\\n1\\n2\\n3') == '6'\n"
    },
    {
        "number": 3318,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0\\n0\\n1\\n') == '2'\nassert solution('1\\n0\\n1\\n') == '3'\nassert solution('1\\n1\\n1\\n') == '4'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 3318,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 3\\n0\\n0\\n1') == '2'\nassert solution('4 3\\n0\\n0\\n2') == '3'\nassert solution('4 3\\n0\\n0\\n3') == '5'\nassert solution('4 3\\n0\\n0\\n1') == '2'\nassert solution('4 3\\n0\\n0\\n2') == '3'\n"
    },
    {
        "number": 3318,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 3\\n0\\n0\\n1') == '2'\n\n-----Solution-----\n\nThe basic idea is to use a directed graph. There are two important variables:\n\n1. nodes, which represent all nodes that could be marked by the cat.\n2. marked, which represents the nodes that have been marked by the cat.\n\nInitially, the nodes are all nodes that could be marked. The cat marks the unmarked nodes.\nTo avoid marking too many nodes, it only marks the unmarked nodes that are the farthest from the root.\n\nTo calculate the number of nodes that can be marked, we maintain two arrays:\n\n1. marked, which is the array of nodes that have been marked so far.\n2. distance, which is the distance to each node from the root.\n\nTo know whether a node is marked or unmarked, we use two variables:\n\n1. mark, which is true if the node is marked, false if the node is unmarked.\n2. max_marked_distance, which is the farthest distance from the root that has been marked so far.\n\nWhen a node is unmarked, mark is false, and distance is null. The farthest distance is set to zero for all unmarked nodes.\nIf a node is unmarked, mark is false, and distance is the distance from the root to the node.\nIf a node is unmarked, mark is false, and distance is the farthest distance from the root to the node.\n\nThen, for each unmarked node, we find the set of unmarked nodes that are the farthest from the root.\nThe max_marked_distance is the max of distance to all unmarked nodes.\n\nComplexity:\n\nTime: O(N), as we only traverse the graph once.\nSpace: O(N)\n\"\"\"\nfrom typing import List\n\nclass Node:\n    def __init__(self, val: int) -> None:\n        self.val = val\n        self.mark = False\n        self.distance = None\n\n    def __str__(self) -> str:\n        return str(self.val)\n\nclass Solution:\n    def mark_cat(self, graph: List[Node], root: Node) -> int:\n        nodes = [root]\n        marked = []\n        max_marked_distance = 0\n\n        while nodes:\n            node = nodes.pop()\n            if node.mark:\n                continue\n\n            node.mark = True\n            marked.append(node)\n\n            for child in graph[node]:\n                if child.distance == None:\n                    child.distance = node.distance + 1\n                    nodes.append(child)\n                elif child.distance > node.distance + 1:\n                    child.distance = node.distance + 1\n                    nodes.append(child)\n\n            max_marked_distance = max(max_marked_distance, len(marked))\n\n        return max_marked_distance\n\n    def solve(self, n: int, d: int) -> str:\n        graph = [[] for _ in range(n)]\n        for i in range(n - 1):\n            a, b = [int(x) for x in stdin.readline().split()]\n            graph[a - 1].append(Node(b - 1))\n            graph[b - 1].append(Node(a - 1))\n\n        root = Node(0)\n        root.distance = 0\n\n        return str(self.mark_cat(graph, root))"
    },
    {
        "number": 3318,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n''') == '316'\n"
    },
    {
        "number": 3318,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0\\n0\\n1\\n\") == \"2\"\nassert solution(\"0\\n0\\n1\\n2\\n3\\n\") == \"4\"\nassert solution(\"0\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"15\"\nassert solution(\"0\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n\") == \"15\"\n"
    },
    {
        "number": 3318,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '2'\n"
    },
    {
        "number": 3318,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0\n0\n0\n0''') == 2\nassert solution('''0\n0\n1\n1''') == 3\nassert solution('''0\n0\n1\n2\n2''') == 4\nassert solution('''1\n1\n2\n1\n2''') == 5\nassert solution('''2\n1\n2\n3\n2\n3''') == 6\n"
    },
    {
        "number": 3318,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0\\n0\\n1\\n2\\n3\\n4') == 2\nassert solution('0\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '100'\n'''\n"
    },
    {
        "number": 3319,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == '1'\nassert solution('1 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == '0'\nassert solution('1 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n5 1 2 1 8 -6 1') == '1'\nassert solution('1 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n10 1 2 1 8 -6 1\\n5 1 2 1 8 -6 1') == '0'\nassert solution('1 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n10 1 2 1 8 -6 1\\n5 1 2 1 8 -6 1\\n9 1 2 1 8 -6 1') == '2'\n"
    },
    {
        "number": 3319,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''2 8 8 8\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1''') == '1\\nP0: 22 1 4 2 6 -1 0'\nassert solution(\n'''3 3 3 3\n1 1 1 1\n1 1 1 1\n1 1 1 1''') == '0\\n
    },
    {
        "number": 3319,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('12 8 8 8') == '1'\nassert solution('12 4 1 4 5 3 -2') == '1'\nassert solution('10 1 2 1 8 -6 1') == '1'\nassert solution('2 8 8 8') == '1'\nassert solution('12 4 1 4 5 3 -2') == '1'\n"
    },
    {
        "number": 3319,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 8 8 8') == '1'\nassert solution('12 4 1 4 5 3 -2') == 'P0: 22 1 4 2 6 -1 0'\nassert solution('10 1 2 1 8 -6 1') == 'P0: 22 1 4 2 6 -1 0'"
    },
    {
        "number": 3319,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 8 8 8') == '1'\nassert solution('12 4 1 4 5 3 -2') == '1'\nassert solution('10 1 2 1 8 -6 1') == '1'\nassert solution('2 8 8 8') == '1'\nassert solution('12 4 1 4 5 3 -2') == '1'\n"
    },
    {
        "number": 3319,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 8 8 8\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1''') == '1'\nassert solution('''10 4 10\n5 4 1 1 3 -1\n4 3 1 1 1 1\n3 3 1 1 1 1\n2 2 1 1 1 1\n1 2 1 1 1 1\n2 1 1 1 1 1\n3 1 1 1 1 1\n4 1 1 1 1 1\n5 1 1 1 1 1\n6 1 1 1 1 1\n7 1 1 1 1 1\n8 1 1 1 1 1\n9 1 1 1 1 1\n10 1 1 1 1 1''') == '5'\nassert solution('''10 10 10\n5 5 1 1 1 1\n4 4 1 1 1 1\n3 3 1 1 1 1\n2 2 1 1 1 1\n1 1 1 1 1 1\n2 1 1 1 1 1\n3 1 1 1 1 1\n4 1 1 1 1 1\n5 1 1 1 1 1\n6 1 1 1 1 1\n7 1 1 1 1 1\n8 1 1 1 1 1\n9 1 1 1 1 1\n10 1 1 1 1 1''') == '6'\nassert solution('''10 10 10\n5 5 1 1 1 1\n4 4 1 1 1 1\n3 3 1 1 1 1\n2 2 1 1 1 1\n1 1 1 1 1 1\n2 1 1 1 1 1\n3 1 1 1 1 1\n4 1 1 1 1 1\n5 1 1 1 1 1\n6 1 1 1 1 1\n7 1 1 1 1 1\n8 1 1 1 1 1\n9 1 1 1 1 1\n10 1 1 1 1 1''') == '10'\nassert solution('''10 10 10\n5 5 1 1 1 1\n4 4 1 1 1 1\n3 3 1 1 1 1\n2 2 1 1 1 1\n1 1 1 1 1 1\n2 1 1 1 1 1\n3 1 1 1 1 1\n4 1 1 1 1 1\n5 1 1 1 1 1\n6 1 1 1 1 1\n7 1 1 1 1 1\n8 1 1 1 1 1\n9 1 1 1 1 1\n10 1 1 1 1 1''') == '5'\n"
    },
    {
        "number": 3319,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(sample) == expected\n\"\"\"\n"
    },
    {
        "number": 3319,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\n"
    },
    {
        "number": 3319,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == '1'\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n10 1 2 1 8 -6 1') == '2'\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n10 1 2 1 8 -6 1\\n10 1 2 1 8 -6 1') == '3'\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n10 1 2 1 8 -6 1\\n10 1 2 1 8 -6 1\\n10 1 2 1 8 -6 1') == '3'\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n10 1 2 1 8 -6 1\\n10 1 2 1 8 -6 1\\n10 1 2 1 8 -6 1\\n10 1 2 1 8 -6 1') == '5'\n"
    },
    {
        "number": 3319,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n') == '1'\nassert solution('5 6 7 8\\n10 0 1 1 1 1 1\\n10 0 1 2 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10 0 1 1 1 1 1\\n10"
    },
    {
        "number": 3320,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''4 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n''') == \"1\\n2\\n3\"\nassert solution(\n'''2 2\n1 2\n2 1\n''') == \"0\\n\"\nassert solution(\n'''10 10\n1 2 2\n1 3 3\n1 4 4\n1 5 5\n1 6 6\n1 7 7\n1 8 8\n1 9 9\n1 10 10\n2 5 5\n2 6 6\n2 7 7\n2 8 8\n2 9 9\n2 10 10\n3 6 6\n3 7 7\n3 8 8\n3 9 9\n3 10 10\n4 5 5\n4 6 6\n4 7 7\n4 8 8\n4 9 9\n4 10 10\n5 5 5\n5 6 6\n5 7 7\n5 8 8\n5 9 9\n5 10 10\n6 6 6\n6 7 7\n6 8 8\n6 9 9\n6 10 10\n7 7 7\n7 8 8\n7 9 9\n7 10 10\n8 8 8\n8 9 9\n8 10 10\n9 9 9\n9 10 10\n10 10 10\n5\n1 2\n1 3\n3 4\n''') == \"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\"\nassert solution(\n'''5 5\n1 2 2\n1 3 3\n1 4 4\n1 5 5\n1 6 6\n1 7 7\n1 8 8\n1 9 9\n1 10 10\n2 5 5\n2 6 6\n2 7 7\n2 8 8\n2 9 9\n2 10 10\n3 6 6\n3 7 7\n3 8 8\n3 9 9\n3 10 10\n4 5 5\n4 6 6\n4 7 7\n4 8 8\n4 9 9\n4 10 10\n5 5 5\n5 6 6\n5 7 7\n5 8 8\n5 9 9\n5 10 10\n6 6 6\n6 7 7\n6 8 8\n6 9 9\n6 10 10\n7 7 7\n7 8 8\n7 9 9\n7 10 10\n8 8 8\n8 9 9\n8 10 10\n9 9 9\n9 10 10\n10 10 10\n5\n1 2\n1 3\n3 4\n''') == \"0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\"\nassert solution(\n'''3 3\n1 2 2\n1 3 3\n1 4 4\n1 5 5\n1 6 6\n1 7 7\n1 8 8\n1 9 9\n1 10 10\n2 5 5\n2 6 6\n2 7 7\n2 8 8\n2 9 9\n2 10 10\n3 6 6\n3 7 7\n3 8 8\n3 9 9\n3 10 10\n4 5 5\n4 6 6\n4 7 7\n4 8 8\n4 9 9\n4 10 10\n5 5 5\n5 6 6\n5 7 7\n5 8 8\n5 9 9\n5 10 10\n6 6 6\n6 7 7\n6 8 8\n6 9 9\n6 10 10\n7 7 7\n7 8 8\n7 9 9\n7 10 10\n8 8 8\n8 9 9\n8 10 10\n9 9 9\n9 10 10\n10 10 10\n5\n1 2\n1 3\n3 4\n''') == \"1\\n1\\n1\"\n"
    },
    {
        "number": 3320,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n4 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n''') == '3'\nassert solution('''\n2 3\n1 2 1\n1 3 2\n1 2 3\n2 1 3\n2 3 1\n''') == '2'\nassert solution('''\n4 4\n1 2 1\n1 3 2\n1 2 3\n2 3 1\n2 4 1\n3 4 2\n3\n1 2\n1 3\n2 3\n''') == '2'\nassert solution('''\n4 4\n1 2 1\n1 3 2\n1 2 3\n2 3 1\n2 4 1\n3 4 2\n3\n1 2\n2 3\n3 4\n''') == '2'\nassert solution('''\n4 4\n1 2 1\n1 3 2\n1 2 3\n2 3 1\n2 4 1\n3 4 2\n3\n1 2\n2 3\n3 4\n''') == '4'\n"
    },
    {
        "number": 3320,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n') == '1'\nassert solution('3 3\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n') == '2'\nassert solution('1 1\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n') == '3'\nassert solution('1 1\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n') == '1'\nassert solution('1 1\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n') == '2'\n"
    },
    {
        "number": 3320,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2 1\") == \"1\"\nassert solution(\"1 2 3\") == \"2\"\nassert solution(\"1 3 2\") == \"3\"\nassert solution(\"1 4 1\") == \"1\"\nassert solution(\"2 3 4\") == \"3\"\n"
    },
    {
        "number": 3320,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3320,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(open(\"input/04.txt\").read()))\n"
    },
    {
        "number": 3320,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4''') == '1\\n2\\n3'\n'''\n'''"
    },
    {
        "number": 3320,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"4 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n\"\"\") == \"\"\"1\n2\n3\n\"\"\"\n"
    },
    {
        "number": 3320,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n''') == '1\\n2\\n3\\n'\nassert solution('''4 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n''') == '1\\n2\\n3\\n'\nassert solution('''3 4\n1 2 3\n2 3 4\n3 4 1\n2\n1 2\n2 3\n3 4\n''') == '2\\n1\\n2\\n3\\n'\nassert solution('''4 8\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n''') == '1\\n2\\n2\\n1\\n'\nassert solution('''4 8\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n''') == '1\\n2\\n2\\n1\\n'\n"
    },
    {
        "number": 3320,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 7') == '1\\n2\\n3\\n4'\nassert solution('8 1') == '0\\n1\\n2\\n3\\n4\\n5\\n6\\n7'\nassert solution('4 5') == '1\\n1\\n2\\n3\\n4'\nassert solution('5 2') == '1\\n2\\n3\\n4\\n5'\nassert solution('3 3') == '1\\n1\\n2'\n"
    },
    {
        "number": 3321,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"6\n1 5 4 3 2 6\n1 2 5 4 3 6\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3321,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 5 4 3 2 6\n1 2 5 4 3 6\n''') == '2'\nassert solution('''1 5 4 3 2 6\n1 2 6 5 4 3 4\n''') == '5'\nassert solution('''1 5 4 3 2 6\n6 5 4 3 1 2\n''') == '5'\nassert solution('''1 5 4 3 2 6\n1 2 5 4 3 6\n''') == '4'\nassert solution('''1 5 4 3 2 6\n2 1 5 4 3 6\n''') == '4'\n"
    },
    {
        "number": 3321,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\"\n\n--- 524 ms ---\n\"\"\"\nfrom typing import List\nimport sys\n\nsys.setrecursionlimit(5000)\n\n_input = None\n"
    },
    {
        "number": 3321,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6\n1 5 4 3 2 6''') == '2'\nassert solution('''6\n1 2 5 4 3 6\n1 6 5 4 3 2''') == '2'\nassert solution('''6\n1 5 4 3 2 6\n1 6 5 4 3 2''') == '2'\nassert solution('''6\n1 2 5 4 3 6\n1 6 5 4 3 2''') == '2'\nassert solution('''6\n2 1 5 4 3 6\n2 6 1 5 4 3''') == '2'\n"
    },
    {
        "number": 3321,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n6\n1 5 4 3 2 6\n1 2 5 4 3 6\n''') == '2'\nassert solution(\n'''\n6\n6 1 5 4 3 2\n6 1 2 5 4 3\n''') == '-1'\nassert solution(\n'''\n4\n1 2 3 4\n1 2 3 4\n''') == '3'\nassert solution(\n'''\n5\n1 2 3 4 5\n1 2 3 4 5\n''') == '4'\n'''\nprint(solution(input()))\n"
    },
    {
        "number": 3321,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 5 4 3\\n1 2 5 4 3\") == \"2\"\nassert solution(\"3\\n1 2 3\\n1 2 3\") == \"1\"\nassert solution(\"3\\n2 1 3\\n1 2 3\") == \"1\"\nassert solution(\"3\\n3 1 2\\n1 2 3\") == \"2\"\nassert solution(\"3\\n3 2 1\\n1 2 3\") == \"2\"\n"
    },
    {
        "number": 3321,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n6\n1 5 4 3 2 6\n1 2 5 4 3 6\n''') == '2'\n'''\nimport sys\nsys.setrecursionlimit(10000)\n"
    },
    {
        "number": 3321,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6\\n1 5 4 3 2 6\\n1 2 5 4 3 6') == '2\\n'\nassert solution('6\\n1 2 5 4 3 6\\n1 5 4 3 2 6') == '1\\n'\nassert solution('6\\n1 5 4 3 2 6\\n1 2 6 5 4 3') == '1\\n'\nassert solution('6\\n1 5 4 3 2 6\\n1 2 6 5 4 3') == '2\\n'\nassert solution('6\\n1 2 5 4 3 6\\n1 2 5 4 3 6') == '0\\n'\n"
    },
    {
        "number": 3321,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3321,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"input/test_solution\") == \"3\"\nassert solution(\"input/test_solution\") == \"2\"\nassert solution(\"input/test_solution\") == \"5\"\nassert solution(\"input/test_solution\") == \"4\"\nassert solution(\"input/test_solution\") == \"3\"\n"
    },
    {
        "number": 3322,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"1 3 2\") == '60'\nassert solution(\n\"1 3 2\") == '60'\nassert solution(\n\"1 1 1 1\") == '-1'\nassert solution(\n\"2 1 3 1\") == '60'\nassert solution(\n\"2 1 3 2\") == '60'\n"
    },
    {
        "number": 3322,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"60\"\n\"\"\""
    },
    {
        "number": 3322,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 3322,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\n\nfrom sys import stdin, stdout\nn, m, k = map(int, stdin.readline().split(\" \"))\nfancyAntique = []\nshops = {}\nfor i in range(n):\n    fancyAntique.append(list(map(int, stdin.readline().split(\" \"))))\nfor i in range(k):\n    shops[i + 1] = int(stdin.readline())\ncosts = []\nfor i in range(n):\n    for j in range(m):\n        if fancyAntique[i][0] == j + 1:\n            costs.append(fancyAntique[i][1] + fancyAntique[i][2])\n            shops[fancyAntique[i][3]] = fancyAntique[i][1] + fancyAntique[i][2]\n            fancyAntique[i] = [-1, -1, -1]\nprint(min(costs)) if min(costs) >= 0 else print(-1)\n"
    },
    {
        "number": 3322,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 3 2\") == \"60\"\nassert solution(\"3 3 2\") == \"60\"\nassert solution(\"1 3 2\") == \"-1\"\nassert solution(\"2 3 1\") == \"90\"\nassert solution(\"2 3 1\") == \"90\"\n"
    },
    {
        "number": 3322,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1\") == '-1'\nassert solution(\"4 3 2\") == '60'\nassert solution(\"3 3 2\") == '60'\nassert solution(\"1 30 2 50\") == '60'\nassert solution(\"2 70 3 10\") == '60'\n"
    },
    {
        "number": 3322,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 3 2\") == \"60\"\nassert solution(\"1 30 2 50\") == \"60\"\nassert solution(\"2 70 3 10\") == \"60\"\nassert solution(\"3 20 1 80\") == \"60\"\nassert solution(\"1 4 10\") == \"80\"\n"
    },
    {
        "number": 3322,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == -1\nassert solution('1 1 1') == -1\nassert solution('2 2 3') == -1\nassert solution('1 1 3') == 60\nassert solution('1 2 3') == 60\n"
    },
    {
        "number": 3322,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\""
    },
    {
        "number": 3322,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 3 2''') == '60'\nassert solution('''1 30 2 50''') == '60'\nassert solution('''2 70 3 10''') == '60'\nassert solution('''3 20 1 80''') == '60''''\n"
    },
    {
        "number": 3323,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2') == 'Case #1: 1\\nCase #2: 2'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n448\\n449\\n450\\n451\\n452\\n453\\n454\\n455\\n456\\n457\\n458\\n459\\n460\\n461\\n462\\n463\\n464\\n465\\n466\\n467\\n468\\n469\\n470\\n471\\n472\\n473\\n474\\n475\\n476\\n477\\n478\\n479\\n480\\n481\\n482\\n483\\n484\\n485\\n486\\n487\\n488\\n489\\n490\\n491\\n492\\n493\\n494\\n495\\n496\\n497\\n498\\n499\\n500\\n501\\n502\\n503\\n504\\n505\\n506\\n507\\n508\\n509\\n510\\n511\\"
    },
    {
        "number": 3323,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3') == 'Case #1: 1\\nCase #2: 2'\nassert solution('2\\n3\\n4') == 'Case #1: 2\\nCase #2: 3\\nCase #3: 4'\nassert solution('2\\n3\\n4\\n5') == 'Case #1: 2\\nCase #2: 3\\nCase #3: 4\\nCase #4: 5'\nassert solution('4\\n6\\n3\\n2\\n1') == 'Case #1: 4\\nCase #2: 6\\nCase #3: 3\\nCase #4: 2\\nCase #5: 1'\nassert solution('2\\n1\\n2\\n3\\n4') == 'Case #1: 1\\nCase #2: 2\\nCase #3: 3\\nCase #4: 4'\n"
    },
    {
        "number": 3323,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"1\\n1\\n1\") == \"\"\nassert solution(\"1\\n1\\n1\\n1\") == \"\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"\"\n"
    },
    {
        "number": 3323,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == 'Case #1: 1'\nassert solution('2\\n3') == 'Case #1: 1\\nCase #2: 2'\nassert solution('2\\n3\\n1 0 0\\n0 1 0\\n0 0 1') == 'Case #1: 1\\nCase #2: 2'\nassert solution('2\\n3\\n0 0 0\\n0 1 0\\n0 0 1') == 'Case #1: 1\\nCase #2: 2'\nassert solution('2\\n3\\n10000 0 0\\n0 1 0\\n0 0 1') == 'Case #1: 1\\nCase #2: 2'\n"
    },
    {
        "number": 3323,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''0\n0\n0\n''') == 'Case #1: 1\\n'\n\nassert solution('''1\n0\n0\n''') == 'Case #2: 1\\n'\n\nassert solution('''2\n0\n0\n0\n''') == 'Case #2: 2\\nCase #1: 1\\n'\n\nassert solution('''2\n2\n0\n0\n0\n0\n0\n0\n''') == 'Case #2: 2\\nCase #1: 1\\n'\n\nassert solution('''3\n3\n0\n0\n0\n0\n0\n0\n0\n''') == 'Case #2: 3\\nCase #1: 1\\n'"
    },
    {
        "number": 3323,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n3\\n10000 0 0\\n0 10000 0\\n0 0 10000\\n3\\n5000 0 0\\n0 2000 0\\n0 0 4000') == 'Case #1: 1\\nCase #2: 2'\n\n-----Note-----\n$time limit: 10s$\n$tricks:$ \"Unziping\"\n\n\"\"\"\n"
    },
    {
        "number": 3323,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('1\\n') == ''\nassert solution('1\\n1\\n1\\n') == 'Case #1: 1'\nassert solution('1\\n2\\n1\\n') == 'Case #1: 1\\nCase #2: 2'\n"
    },
    {
        "number": 3323,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n3\n10000 0 0\n0 10000 0\n0 0 10000\n3\n5000 0 0\n0 2000 0\n0 0 4000''') == '''Case #1: 1\nCase #2: 2\n'''\n"
    },
    {
        "number": 3323,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0\n1\n1\n2\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n"
    },
    {
        "number": 3323,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n    3\n    10000 0 0\n    0 10000 0\n    0 0 10000\n    5\n    2000 0 0\n    0 2000 0\n    0 0 4000\n    ''') == '''Case #1: 1\nCase #2: 2\nCase #3: 4\nCase #4: 0\nCase #5: 4\n'''\n\nassert solution('''4\n    4\n    10000 0 0\n    0 10000 0\n    0 0 10000\n    5\n    2000 0 0\n    0 2000 0\n    0 0 4000\n    ''') == '''Case #1: 1\nCase #2: 2\nCase #3: 4\nCase #4: 4\n'''\n\nassert solution('''5\n    5\n    10000 0 0\n    0 10000 0\n    0 0 10000\n    5\n    2000 0 0\n    0 2000 0\n    0 0 4000\n    ''') == '''Case #1: 1\nCase #2: 2\nCase #3: 4\nCase #4: 4\nCase #5: 4\n'''\n\nassert solution('''6\n    6\n    10000 0 0\n    0 10000 0\n    0 0 10000\n    6\n    2000 0 0\n    0 2000 0\n    0 0 4000\n    ''') == '''Case #1: 1\nCase #2: 2\nCase #3: 4\nCase #4: 4\nCase #5: 4\nCase #6: 4\n'''\n\nassert solution('''7\n    7\n    10000 0 0\n    0 10000 0\n    0 0 10000\n    7\n    2000 0 0\n    0 2000 0\n    0 0 4000\n    ''') == '''Case #1: 1\nCase #2: 2\nCase #3: 4\nCase #4: 4\nCase #5: 4\nCase #6: 4\nCase #7: 4\n'''"
    },
    {
        "number": 3324,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n+1 6 C 1 H 5 C 1 O 1 O 1 H 1\n+1 2 C 1 H 5 C 1 O 1 O 1 H 1\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == '6 6 6 1'\nassert solution('''\n+1 6 C 1 H 5 C 1 O 1 O 1 H 1\n+1 2 C 1 H 5 C 1 O 1 O 1 H 1\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == '6 6 6 1'\n'''"
    },
    {
        "number": 3324,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '6 6 6 1'\n"
    },
    {
        "number": 3324,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\"\"\") == \"6 6 6 1\"\nassert solution(\n\"\"\"+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1 5 H 4 O 4 O 1\n-1 3 H 3 O 3 O 3\n+1"
    },
    {
        "number": 3324,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(exampleeq) == '6 6 6 1'\n'''"
    },
    {
        "number": 3324,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0') == '6 6 6 1'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0') == '6 6 6 1'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n-1 0 0') == '6 6 6 1'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0') == '6 6 6 1'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n-1 0 0\\n+1 1 O 2\\n+1 0 0\\n-1 0 0') == '6 6 6 1'\n"
    },
    {
        "number": 3324,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0') == '6 6 6 1'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n3 2 H 1 O 1\\n2 1 H 2 O 2\\n1 1 H 1 O 1\\n1 1 H 1 O 1\\n0 0') == '8 8 8 2'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n3 2 H 1 O 1\\n2 1 H 2 O 2\\n1 1 H 1 O 1\\n1 1 H 1 O 1\\n0 0\\n2 2 H 2 O 2\\n2 2 C 1 O 1\\n2 2 H 1 O 1\\n2 2 H 1 O 1\\n2 2 H 2 O 2') == '0 0'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n3 2 H 1 O 1\\n2 1 H 2 O 2\\n1 1 H 1 O 1\\n1 1 H 1 O 1\\n0 0\\n2 2 H 2 O 2\\n2 2 C 1 O 1\\n2 2 H 1 O 1\\n2 2 H 1 O 1\\n2 2 H 2 O 2') == '2 2'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n3 2 H 1 O 1\\n2 1 H 2 O 2\\n1 1 H 1 O 1\\n1 1 H 1 O 1\\n0 0\\n2 2 H 2 O 2\\n2 2 C 1 O 1\\n2 2 H 1 O 1\\n2 2 H 1 O 1\\n2 2 H 2 O 2') == '2 2'\n"
    },
    {
        "number": 3324,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6') == '6 6 6 1'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0') == '6 6 6 1'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n1 1 O 1\\n1 3 C 3 H 9 O 9\\n0 0') == '6 6 6 1'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n1 1 O 1\\n1 3 C 3 H 9 O 9\\n1 3 C 3 H 9 O 9\\n0 0') == '6 6 6 1'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n1 1 O 1\\n1 3 C 3 H 9 O 9\\n1 3 C 3 H 9 O 9\\n1 3 C 3 H 9 O 9\\n0 0') == '6 6 6 1'\n"
    },
    {
        "number": 3324,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '6 6 6 1'\nassert solution('''+1 6 C 1 H 5 C 1 O 1 O 1 H 1\n+1 6 C 1 H 5 C 1 O 1 O 1 H 1\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '6 6 6 1'\nassert solution('''+1 6 C 1 H 5 C 1 O 1 O 1 H 1\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '6 6 6 1'\nassert solution('''+1 6 C 1 H 5 C 1 O 1 O 1 H 1\n+1 6 C 1 H 5 C 1 O 1 O 1 H 1\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '6 6 6 1'\nassert solution('''+1 6 C 1 H 5 C 1 O 1 O 1 H 1\n+1 6 C 1 H 5 C 1 O 1 O 1 H 1\n+1 6 C 1 H 5 C 1 O 1 O 1 H 1\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '6 6 6 1'\n"
    },
    {
        "number": 3324,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    '+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6'\n) == '6 6 6 1'\n\nprint(solution(\n    '+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6'\n))\n"
    },
    {
        "number": 3324,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0') == '6 6 6 1'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0') == '6 6 6 1'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0') == '6 6 6 1'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0') == '6 6 6 1'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0') == '6 6 6 1'\n"
    },
    {
        "number": 3325,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    '4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40') == '20.83'\nassert solution(\n    '5\\n200 100\\n50 0\\n50 0\\n200 100\\n200 100') == '100.00'\nassert solution(\n    '6\\n0 0\\n-10 -1\\n100 0\\n100 -1\\n0 100') == '100.00'\nassert solution(\n    '7\\n0 0\\n0 0\\n-10 -1\\n0 0\\n-10 -1\\n0 0') == '100.00'\nassert solution(\n    '8\\n0 0\\n0 0\\n-10 -1\\n0 0\\n100 0\\n-10 -1\\n0 0') == '100.00'\n"
    },
    {
        "number": 3325,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(solution.__doc__) == 0.78\n\"\"\"\n\nfrom math import sqrt"
    },
    {
        "number": 3325,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 3325,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '20.83'\n"
    },
    {
        "number": 3325,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''10 10\n-100 -30\n20 0\n100 40\n-100 100\n30 50\n30 -30'''\n) == '20.83'\nassert solution(\n'''0 5\n-100 -30\n20 0\n100 40\n-100 100\n30 50\n30 -30'''\n) == '20.83'\nassert solution(\n'''7 8\n0 0\n-7 -8\n0 0\n0 -2\n-7 -8\n-7 -2\n0 -2\n0 -8\n-7 -8\n-7 -2\n-7 -2\n-7 -2\n-7 -2\n-7 -8'''\n) == '12.63'\nassert solution(\n'''2 3\n10 10\n10 -5\n5 -5\n5 -5\n5 -5\n5 -5\n5 -5\n5 -5\n5 -5\n5 -5\n5 -5\n5 -5\n5 -5'''\n) == '12.63'\nassert solution(\n'''4 4\n1 0\n0 1\n0 0\n0 -1\n-1 0\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1'''\n) == '12.63'\n"
    },
    {
        "number": 3325,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''30 50\n20 0\n100 0\n100 40\n20 40''') == '20.83'\nassert solution('''10 10\n0 0\n10 10\n10 0\n10 10\n0 10\n10 10\n10 10\n0 10\n10 10''') == '10.0'\nassert solution('''4\n30 50\n20 0\n100 0\n100 40\n20 40''') == '20.83'\nassert solution('''3\n20 40\n20 40\n20 40''') == '10.0'\nassert solution('''3\n20 40\n20 40\n20 40''') == '10.0'\n"
    },
    {
        "number": 3325,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3325,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(sample0) == '1.14'\nassert solution(sample1) == '0.58'\nassert solution(sample2) == '1.03'\nassert solution(sample3) == '0.87'\nassert solution(sample4) == '0.79'\n"
    },
    {
        "number": 3325,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''4\n30 50\n20 0\n100 0\n100 40\n20 40\n''') == '20.83'\n"
    },
    {
        "number": 3325,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input(\"\")) == \"20.83\"\n\"\"\"\n\nN = int(input())\nD, L = map(int, input().split())\n\nvertices = []\n\nfor _ in range(N):\n    X, Y = map(int, input().split())\n    vertices.append((X, Y))"
    },
    {
        "number": 3326,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"49\"\n\"\"\"\n"
    },
    {
        "number": 3326,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 3\n1 2 5\n7 6 4\n9 8 3''') == '49'\nassert solution('''1 1\n1 1\n1 1''') == '1'\nassert solution('''4 4\n1 1 2 4\n1 1 4 2\n1 2 3 2\n4 4 4 4''') == '1'\nassert solution('''3 3\n1 2 5\n7 6 4\n9 8 3''') == '49'\nassert solution('''4 5\n1 1 1 1 1\n2 2 2 2 2\n2 2 2 2 2\n2 2 2 2 2''') == '0'\n"
    },
    {
        "number": 3326,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2\\n3 4\\n5 6\\n7 8\\n9 10') == 1\nassert solution('1 3\\n2 4\\n5 6\\n7 8\\n9 10') == 1\nassert solution('1 4\\n2 3\\n5 6\\n7 8\\n9 10') == 1\nassert solution('1 5\\n2 3\\n5 6\\n7 8\\n9 10') == 1\nassert solution('1 6\\n2 3\\n5 6\\n7 8\\n9 10') == 1\n"
    },
    {
        "number": 3326,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 5\\n7 6 4\\n9 8 3\\n') == '49'\nassert solution('1 2 3\\n4 5 6\\n7 8 9\\n') == '1'\nassert solution('2 2\\n1 2\\n3 1\\n') == '3'\nassert solution('4 4\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1\\n2 2 3\\n3 1 2\\n1 1 1"
    },
    {
        "number": 3326,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 3\n1 2 5\n7 6 4\n9 8 3''') == '49'\nassert solution('''5 5\n1 2 3 4 5\n5 4 3 2 1\n6 7 8 9 10\n11 12 13 14 15\n16 17 18 19 20''') == '129'\nassert solution('''10 10\n8 9 7 6 5 4 3 2 1\n2 1 2 1 2 1 2 1 2\n1 1 1 1 1 1 1 1 1\n2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2''') == '464'\nassert solution('''30 30\n
    },
    {
        "number": 3326,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 3\n1 2 5\n7 6 4\n9 8 3''') == '49'\nassert solution('''2 2\n1 2\n3 4''') == '1'\nassert solution('''2 3\n1 2\n3 4''') == '1'\nassert solution('''1 1\n1 1''') == '1'\nassert solution('''3 2\n1 2\n3 4''') == '1'\n"
    },
    {
        "number": 3326,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 3\n1 2 5\n7 6 4\n9 8 3''') == '49'\nassert solution('''4 3\n1 2 3 4\n4 4 5 6\n7 7 8 9\n10 11 12 13''') == '1'\nassert solution('''10 10\n1 2 3 4 5 6 7 8 9 10\n11 12 13 14 15 16 17 18 19\n20 21 22 23 24 25 26 27 28\n29 30 31 32 33 34 35 36 37\n38 39 40 41 42 43 44 45 46\n47 48 49 50 51 52 53 54 55\n56 57 58 59 60 61 62 63 64\n65 66 67 68 69 70 71 72 73''') == '1'\nassert solution('''7 7\n5 3 4 2 1 6 7\n7 6 8 4 3 9 5\n1 3 2 4 1 2 3\n5 7 2 9 7 6 4\n8 4 1 2 3 4 5\n3 8 2 1 4 7 6\n5 6 4 3 9 2 1''') == '19'\nassert solution('''9 9\n1 2 3 4 5 6 7 8 9\n11 12 13 14 15 16 17 18\n19 20 21 22 23 24 25 26\n27 28 29 30 31 32 33 34\n35 36 37 38 39 40 41 42\n43 44 45 46 47 48 49 50\n51 52 53 54 55 56 57 58\n59 60 61 62 63 64 65 66\n67 68 69 70 71 72 73 74\n75 76 77 78 79 80 81 82\n83 84 85 86 87 88 89 90\n92 93 94 95 96 97 98 99\n''') == '194'\n"
    },
    {
        "number": 3326,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 3\n1 2 5\n7 6 4\n9 8 3''') == '49'\nassert solution('''3 3\n1 2 5\n7 6 4\n9 8 3''') == '49'\n'''\n"
    },
    {
        "number": 3326,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 3\n1 2 5\n7 6 4\n9 8 3''') == '49'\nassert solution('''1 1\n2 2''') == '3'\nassert solution('''2 2\n1 1''') == '2'\nassert solution('''3 3\n1 2 3\n2 3 4\n3 4 5''') == '8'\nassert solution('''2 3\n1 2\n2 3''') == '3'\n"
    },
    {
        "number": 3326,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 3\n1 2 5\n7 6 4\n9 8 3''') == '49'\nassert solution('''1 2\n1 2\n1 2''') == '1'\nassert solution('''5 3\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5''') == '49'\nassert solution('''3 3\n1 2 4\n1 2 4\n1 2 4''') == '6'\nassert solution('''1 1\n1 1\n1 1''') == '1'\n"
    },
    {
        "number": 3327,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 15\n##.........####\n1\nCROSSWORD\n''') == '##CROSSWORD####'\n\nassert solution('''1 15\n##.........####\n1\nCROSSWORD\n''') == '##CROSSWORD####'\n\nassert solution('''1 15\n##.........####\n1\nCROSSWORD\n''') == '##CROSSWORD####'\n\nassert solution('''1 15\n##.........####\n1\nCROSSWORD\n''') == '##CROSSWORD####'\n\nassert solution('''1 15\n##.........####\n1\nCROSSWORD\n''') == '##CROSSWORD####'"
    },
    {
        "number": 3327,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 3327,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''1 15\n##.........####''') == '''##CROSSWORD####'''\nassert solution('''1\nABACADABAC\nABABABABAB''') == '''ABACADABACABBABABABA'''\nassert solution('''1\nABACADABACAB\nABABABABAB''') == '''ABACADABACAB'''\nassert solution('''1\nABACADABACAB\nABABABABAB''') == '''ABACADABACAB'''\nassert solution('''1\nABACADABACAB\nABABABABAB''') == '''ABACADABACAB'''\n"
    },
    {
        "number": 3327,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 15\") == \"\"\nassert solution(\"2 5\") == \"\"\nassert solution(\"3 8\") == \"\"\nassert solution(\"3 10\") == \"\"\nassert solution(\"5 5\") == \"\"\n"
    },
    {
        "number": 3327,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\nfrom sys import stdin, stdout\nfrom random import randint"
    },
    {
        "number": 3327,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 15') == '##CROSSWORD####'\nassert solution('2 17') == '###..######.#.##..##.##..###.#..###..###..##...###..###..###..##...###..###..##...###...###..##...###..##...###..##...###..##..##...#####'\nassert solution('2 15') == '#####..#.######...#######...######...#######...######...#######...######...#######...######...#####'\n\n\n-----Note-----\n$Hint 1:$ There is an easy solution and an optimal solution.\n$Hint 2:$ If you are given a scrambled list of solutions to the clues, you can try to come up with an optimal solution for this challenge.\n"
    },
    {
        "number": 3327,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"1 15\\n##.........####\\n1\\nCROSSWORD\\n\") == \"##CROSSWORD####\"\nassert solution(\n\"1 15\\n##.........####\\n1\\nCROSSWORD\\n\") == \"##CROSSWORD####\"\nassert solution(\n\"1 15\\n##.........####\\n1\\nCROSSWORD\\n\") == \"##CROSSWORD####\"\nassert solution(\n\"1 15\\n##.........####\\n1\\nCROSSWORD\\n\") == \"##CROSSWORD####\"\nassert solution(\n\"1 15\\n##.........####\\n1\\nCROSSWORD\\n\") == \"##CROSSWORD####\"\n"
    },
    {
        "number": 3327,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('1 2') == ''\nassert solution('1') == ''\nassert solution('1 1') == '1'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 3327,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 15') == '1\\nCROSSWORD'\nassert solution('1 10') == '1\\nC..........'\nassert solution('1 19') == '1\\nC.R...G......'\nassert solution('1 19') == '1\\nC.R.G.......'\nassert solution('1 19') == '1\\nC.R.G.......'\n"
    },
    {
        "number": 3327,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3328,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(open(\"test_solution.txt\").read()) == \"14\"\nassert solution(open(\"test_solution2.txt\").read()) == \"21\"\nassert solution(open(\"test_solution3.txt\").read()) == \"16\"\nassert solution(open(\"test_solution4.txt\").read()) == \"22\"\nassert solution(open(\"test_solution5.txt\").read()) == \"6\"\n"
    },
    {
        "number": 3328,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n2\\n1\\n1\\n0') == '2'\nassert solution('2\\n2\\n1\\n1\\n0\\n1') == '4'\nassert solution('2\\n2\\n1\\n1\\n0\\n1\\n1') == '4'\nassert solution('2\\n2\\n1\\n1\\n0\\n1\\n2') == '4'\nassert solution('2\\n2\\n1\\n1\\n0\\n1\\n1\\n1') == '4'\n"
    },
    {
        "number": 3328,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n3 1\n2 7 6\n9 5 1\n4 3 8\n''') == '31'\nassert solution('''\n5 3\n3 7 2 1 9\n9 5 4 3 2\n2 3 8 7 5\n4 6 8 6 7\n6 9 2 3 4\n''') == '43'\nassert solution('''\n4 5\n1 2 3 4\n5 6 7 8\n2 3 4 5\n6 7 8 9\n3 4 5 6\n''') == '46'\nassert solution('''\n7 2\n1 4\n6 2\n3 6\n4 3\n5 7\n7 2\n3 2\n''') == '18'\nassert solution('''\n8 5\n1 2 3 4 5 6 7 8\n2 3 4 5 6 7 8 9\n3 4 5 6 7 8 9 1\n4 5 6 7 8 9 1 2\n5 6 7 8 9 1 2 3\n6 7 8 9 1 2 3 4\n7 8 9 1 2 3 4 5\n8 9 1 2 3 4 5 6\n''') == '40'\n"
    },
    {
        "number": 3328,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"31\"\nassert stdin == \"\"\"3 1\n2 7 6\n9 5 1\n4 3 8\"\"\"\n"
    },
    {
        "number": 3328,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"3 1\n2 7 6\n9 5 1\n4 3 8\"\"\") == \"31\"\nassert solution(\"\"\"3 1\n2 7 6\n9 5 1\n4 3 8\"\"\") == \"31\"\n\"\"\""
    },
    {
        "number": 3328,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 1') == '31'\nassert solution('2 7 6\\n9 5 1\\n4 3 8') == '31'\nassert solution('3 1\\n2 7 6\\n9 5 1\\n4 3 8') == '31'\nassert solution('3 1\\n2 7 6\\n9 5 1\\n4 3 8\\n12 10 11') == '13'\nassert solution('3 1\\n2 7 6\\n9 5 1\\n4 3 8\\n12 10 11\\n8 9 1') == '16'\n"
    },
    {
        "number": 3328,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 1') == '31'\nassert solution('3 1') == '48'\nassert solution('4 1') == '60'\nassert solution('5 1') == '70'\nassert solution('6 1') == '81'\n"
    },
    {
        "number": 3328,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('3\\n4\\n2') == '3'\nassert solution('2\\n5\\n2') == '7'\nassert solution('5\\n5\\n5') == '3'\nassert solution('9\\n2\\n6\\n3') == '24'\n"
    },
    {
        "number": 3328,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n1 1 0\\n2 2 1\") == \"4\"\nassert solution(\"2 3\\n1 1 0\\n2 2 1\\n2 1 1\") == \"8\"\nassert solution(\"3 1\\n1 1 0\\n2 2 1\\n2 1 1\") == \"8\"\nassert solution(\"1 1\\n1 1 0\") == \"0\"\nassert solution(\"2 2\\n1 1 0\\n2 1 1\") == \"1\"\n"
    },
    {
        "number": 3328,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(open('tests/2-uncover-small.txt').read()) == '9'\nassert solution(open('tests/2-uncover-big.txt').read()) == '20'\nassert solution(open('tests/2-uncover-almost-big.txt').read()) == '20'\nassert solution(open('tests/2-uncover-even-bigger.txt').read()) == '26'\nassert solution(open('tests/2-uncover-even-bigger2.txt').read()) == '26'\n"
    },
    {
        "number": 3329,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"BBW\") == 2\nassert solution(\"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW"
    },
    {
        "number": 3329,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\nBBW\\n\") == \"2\"\nassert solution(\"4 3\\nWWWWW\\nBBBBB\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\\nWW"
    },
    {
        "number": 3329,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 1\nBBW''') == '2'\nassert solution('''3 2\nWWWW''') == '1'\nassert solution('''3 3\nBBWWW''') == '4'\nassert solution('''5 3\nWWWWWWWWWWWWW''') == '2'\nassert solution('''5 5\nWWWWWWWWWWWWWWWWWWWW''') == '1'\n"
    },
    {
        "number": 3329,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"BBW\") == \"2\"\nassert solution(\"WWWWBBW\") == \"4\"\nassert solution(\"WWWWBBWBW\") == \"4\"\nassert solution(\"BBWBWBWBWBWB\") == \"8\"\nassert solution(\"WWWWBBWBWBWWWWWWWWWWWWWWWBBWBWBW\") == \"4\"\n"
    },
    {
        "number": 3329,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input(\"\")) == 2\nassert solution(input(\"\")) == 2\nassert solution(input(\"\")) == 2\nassert solution(input(\"\")) == 4\nassert solution(input(\"\")) == 8\n"
    },
    {
        "number": 3329,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 1\nBW''') == '''2\nSample Input:\n4 2\nBBWW\nSample Output:\n3\n'''\n"
    },
    {
        "number": 3329,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\"\n\nassert solution(stdin) == \"2\"\n\nassert solution(stdin) == \"2\"\n\nassert solution(stdin) == \"2\"\n\nassert solution(stdin) == \"2\""
    },
    {
        "number": 3329,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin
    },
    {
        "number": 3329,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"BBW\", \"BBW\") == \"BBW\"\nassert solution(\"WWBWWWW\", \"WWWWWWWWWW\") == \"WWWWWWWWWWW\"\nassert solution(\"BWWWWBBWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW"
    },
    {
        "number": 3329,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 1\nBBW''') == '2'\nassert solution('''5 2\nWWWWWWWWWWWWWWWWWWWWWWWWWWW''') == '2'\nassert solution('''3 1\nBWWWWWWWWWWWWWWWWWWWWWWWWW''') == '2'\nassert solution('''6 3\nWWWWWWWWWWWWWWWWWWWWWWWWWWWBBWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW''') == '2'\nassert solution('''10 10\nWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW''') == '2'\n'''\n"
    },
    {
        "number": 3330,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 1\n3 2 1\n1 2 3''') == '0.556'\nassert solution('''2 1\n1 1\n1 1''') == '0.5'\nassert solution('''6 1\n6 6 5 4 3 2 1\n1 2 3 4 5 6''') == '0.0'\nassert solution('''6 1\n6 6 5 4 3 2 1\n6 4 3 2 1''') == '0.125'\nassert solution('''6 1\n6 6 5 4 3 2 1\n4 3 2 1''') == '0.25'\n'''\n"
    },
    {
        "number": 3330,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 2 1') == '0.556'\nassert solution('3 1') == '0.667'\nassert solution('1 1') == '1'\nassert solution('1 1 2') == '0.667'\nassert solution('2 2') == '2'\n"
    },
    {
        "number": 3330,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 1\n3 2 1\n1 2 3''') == '0.556'\nassert solution('''3 1\n3 2 1\n1 2 2''') == '0.357'\nassert solution('''3 1\n3 2 1\n1 2 1''') == '0.333'\nassert solution('''3 1\n3 2 1\n1 1 1''') == '0.0'\nassert solution('''3 1\n3 2 1\n1 1 1''') == '0.000'\n"
    },
    {
        "number": 3330,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 1\n3 2 1\n1 2 3''') == '0.556'\n'''\nSample Input:\n7 6\n2 3 4 4 5 4 6\n1 2 3 4 5 6\nSample Output:\n7.0\n'''\n"
    },
    {
        "number": 3330,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 1\n3 2 1\n1 2 3''') == '0.556'\nassert solution('''3 4\n2 3 4 1\n1 2 3''') == '2.0000'\nassert solution('''10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10''') == '10.0000'\nassert solution('''3 4\n2 3 4 1\n1 2 3''') == '1.0000'\nassert solution('''3 2\n2 3 1\n1 2 3''') == '3.3333'\n"
    },
    {
        "number": 3330,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3') == '0.556'\nassert solution('3\\n1\\n2 3') == '0.556'\nassert solution('3\\n3\\n2 2 1') == '0.7'\nassert solution('3\\n3\\n3') == '0.667'\nassert solution('3\\n4\\n3 2 1') == '0.833'\n"
    },
    {
        "number": 3330,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 1\n1 2 3\n1 2 3''') == '0.556'\nassert solution('''2 1\n1 2 3\n2 3 1''') == '0.833'\nassert solution('''2 1\n1 2 1\n1 2 3''') == '0.556'\nassert solution('''2 1\n2 2 1\n1 2 3''') == '1.0'\nassert solution('''2 1\n1 2 3\n2 3 1''') == '1.0'\n"
    },
    {
        "number": 3330,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0.556\"\n"
    },
    {
        "number": 3330,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 2 3\n1 2 3''') == '0.556'\nassert solution('''5 2\n1 2 3 4 5\n7 9 8 6 7''') == '0.845'\nassert solution('''7 2\n1 2 3 4 5 6 7\n9 8 7 6 5 4 3''') == '0.2'\nassert solution('''6 3\n1 2 3 4 5 6 7\n1 2 3 4 5 6''') == '0.0'\nassert solution('''9 3\n1 2 3 4 5 6 7 8 9\n1 2 3 4 5 6 7 8''') == '0.125'\n"
    },
    {
        "number": 3330,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3331,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '3'\n\"\"\"\n"
    },
    {
        "number": 3331,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3331,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 4 3 2''') == '3'\nassert solution('''0 4 3 2''') == '3'\nassert solution('''1 4 3 2''') == '2'\nassert solution('''2 4 3 2''') == '2'\nassert solution('''3 4 3 2''') == '2'\n"
    },
    {
        "number": 3331,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 3\n"
    },
    {
        "number": 3331,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 4 3 2') == '3'\nassert solution('5 4 3 2') == '3'\nassert solution('5 4 3 2') == '3'\nassert solution('5 4 3 2') == '3'\nassert solution('5 4 3 2') == '3'\n"
    },
    {
        "number": 3331,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 4 3 2''') == '3'\n'''\nclass Distance:\n    def __init__(self, distance, next_distance):\n        self.distance = distance\n        self.next_distance = next_distance"
    },
    {
        "number": 3331,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3331,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('2 1 5 3') == '2'\nassert solution('2 1 5 3 3') == '0'\nassert solution('2 1 5 3 3 3') == '1'\nassert solution('2 1 5 3 3 3 3') == '2'\n"
    },
    {
        "number": 3331,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 4 3 2') == '3'\nassert solution('4 2 1 1') == '4'\nassert solution('2 1 1 1') == '2'\nassert solution('2 1 2 1') == '2'\nassert solution('2 1 2 2') == '2'\n"
    },
    {
        "number": 3331,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 3\nassert solution(stdin) == 1\nassert solution(stdin) == 4\nassert solution(stdin) == 0\nassert solution(stdin) == 5\n\"\"\"\n"
    },
    {
        "number": 3332,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n'''"
    },
    {
        "number": 3332,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '13'\n'''\n"
    },
    {
        "number": 3332,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"13\"\n\n\"\"\""
    },
    {
        "number": 3332,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n1 3 6\n2 5 8\n3 3 5\n5 3 6''') == '13'\nassert solution('''4\n1 1 1\n2 2 2\n3 3 3\n4 4 4''') == '24'\nassert solution('''6\n1 1 1\n2 2 2\n3 3 3\n4 4 4\n5 5 5\n6 6 6''') == '60'\nassert solution('''6\n1 1 1\n2 2 2\n3 3 3\n4 4 4\n5 5 5\n6 6 6''') == '60'\nassert solution('''10\n2 2 2\n3 3 3\n4 4 4\n5 5 5\n6 6 6\n7 7 7\n8 8 8\n9 9 9\n10 10 10''') == '40'\n"
    },
    {
        "number": 3332,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(open(0).read()) == \"13\"\n-----\n"
    },
    {
        "number": 3332,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 3 6\\n2 5 8\\n3 3 5\\n5 3 6') == '13'\nassert solution('1 3 6\\n2 5 8\\n3 3 5\\n5 3 6') == '13'\nassert solution('1 3 6\\n2 5 8\\n3 3 5\\n5 3 6') == '13'\nassert solution('1 3 6\\n2 5 8\\n3 3 5\\n5 3 6') == '13'\nassert solution('1 3 6\\n2 5 8\\n3 3 5\\n5 3 6') == '13'\n"
    },
    {
        "number": 3332,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n1\\n1') == '1'\nassert solution('1\\n2\\n3\\n4') == '2'\nassert solution('1\\n3\\n2\\n4') == '3'\nassert solution('1\\n2\\n4\\n3') == '4'\nassert solution('2\\n1\\n1\\n1\\n1') == '2'\n"
    },
    {
        "number": 3332,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(open(\"test_data/1.test\", \"r\").read()) == \"13\"\nassert solution(open(\"test_data/2.test\", \"r\").read()) == \"14\"\nassert solution(open(\"test_data/3.test\", \"r\").read()) == \"2\"\nassert solution(open(\"test_data/4.test\", \"r\").read()) == \"5\"\nassert solution(open(\"test_data/5.test\", \"r\").read()) == \"9\"\n"
    },
    {
        "number": 3332,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n1 3 6\n2 5 8\n3 3 5\n5 3 6\n''') == \"13\"\nassert solution('''\n2\n1 3 2\n1 4 1\n''') == \"6\"\nassert solution('''\n1\n1 2 3\n''') == \"2\"\nassert solution('''\n2\n1 1 4\n2 1 3\n''') == \"5\"\nassert solution('''\n3\n1 2 3\n2 1 4\n2 3 1\n''') == \"8\"\n"
    },
    {
        "number": 3332,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"13\"\n\"\"\""
    },
    {
        "number": 3333,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3333,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n\") == \"3.141593\"\nassert solution(\"3.141593 20.123456\\n1\\n13.141593 20.123456\\n\") == \"3.141593\"\nassert solution(\"3.141593 20.123456\\n1\\n13.141593 3.141593\\n\") == \"1.000000\"\nassert solution(\"2.000000 3.141593 20.123456\\n1\\n13.141593 20.123456\\n\") == \"2.000000\"\nassert solution(\"3.141593 3.141593 20.123456\\n1\\n13.141593 20.123456\\n\") == \"3.141593\"\n"
    },
    {
        "number": 3333,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"10.000000 20.123456\") == \"3.141593\"\n\nprint(solution(stdin))\n"
    },
    {
        "number": 3333,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10.000000 20.123456\n1\n13.141593 20.123456''') == '3.141593'\nassert solution('''10.000000 20.123456\n1\n13.141593 20.123456\n10\n10.000000 20.123456\n1\n13.141593 20.123456\n10\n10.000000 20.123456\n1\n13.141593 20.123456''') == '3.141593'\nassert solution('''10.000000 20.123456\n1\n13.141593 20.123456\n10\n10.000000 20.123456\n1\n13.141593 20.123456\n10\n10.000000 20.123456\n1\n13.141593 20.123456\n10\n10.000000 20.123456\n1\n13.141593 20.123456''') == '3.141593'\nassert solution('''10.000000 20.123456\n1\n13.141593 20.123456\n10\n10.000000 20.123456\n1\n13.141593 20.123456\n10\n10.000000 20.123456\n1\n13.141593 20.123456\n10\n10.000000 20.123456\n1\n13.141593 20.123456\n10\n10.000000 20.123456\n1\n13.141593 20.123456''') == '3.141593'\nassert solution('''10.000000 20.123456\n1\n13.141593 20.123456\n10\n10.000000 20.123456\n1\n13.141593 20.123456\n10\n10.000000 20.123456\n1\n13.141593 20.123456\n10\n10.000000 20.123456\n1\n13.141593 20.123456\n10\n10.000000 20.123456\n1\n13.141593 20.123456\n10\n10.000000 20.123456\n1\n13.141593 20.123456''') == '3.141593'\n"
    },
    {
        "number": 3333,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10.000000 20.123456\\n1\\n13.141593 20.123456') == '3.141593'\nassert solution('10.000000 20.123456\\n2\\n11.223333 21.33333\\n13.141593 22.123456') == '3.141593'\nassert solution('10.000000 20.123456\\n2\\n11.333333 21.33333\\n13.141593 22.123456') == '3.141593'\nassert solution('10.000000 20.123456\\n2\\n11.223333 21.33333\\n13.141593 22.123456') == '3.141593'\nassert solution('10.000000 20.123456\\n2\\n11.223333 21.33333\\n13.141593 22.123456') == '3.141593'\n"
    },
    {
        "number": 3333,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10.000000 20.123456''') == '3.141593'\nassert solution('''10.000000 20.123456''') == '3.141593'\nassert solution('''10.000000 20.123456''') == '3.141593'\nassert solution('''10.000000 20.123456''') == '3.141593'\nassert solution('''10.000000 20.123456''') == '3.141593'\n"
    },
    {
        "number": 3333,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n1\\n20.123456\") == \"20.123456\"\nassert solution(\"10.000000 20.123456\\n1\\n20.123456\\n20.123456\") == \"0.00000\"\nassert solution(\"10.000000 20.123456\\n1\\n20.123456\\n20.123456\\n20.123456\") == \"0.000001\"\nassert solution(\"10.000000 20.123456\\n1\\n2.1\\n4.2\\n8.3\\n\") == \"0.00000\"\n"
    },
    {
        "number": 3333,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '3.141593'\n"
    },
    {
        "number": 3333,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3.141593\"\nassert stdin == \"\"\"10.000000 20.123456\n1\n13.141593 20.123456\n\"\"\"\n\"\"\"\n\nThis is a classic knapsack problem and we will have to use dynamic programming. We will store the cost of hiding at each point and the result of the longest path that ends at this point.\n\n1. For each hiding spot,\n    a. Calculate the cost of the current hiding spot (all the chickens that are currently hiding there)\n    b. Calculate the cost of not hiding at this point (all the chickens that are currently hiding in the other hiding spots)\n    c. If the cost of not hiding is greater, we should move to the current hiding spot instead.\n2. For each chicken,\n    a. Find the maximum cost of hiding (using the current hiding spot and the one not using it)\n    b. If the chicken is not in the current hiding spot, the maximum cost of hiding is the max between the cost of hiding using the current hiding spot and not using it\n    c. If the chicken is in the current hiding spot, the maximum cost of hiding is the cost of hiding using the current hiding spot + the cost of not hiding not using it\n3. The maximum cost of hiding at each point is the max of the above three\n4. At the end of the for loop, the maximum cost of hiding is the maximum cost of hiding for any point, i.e., the max of the maximum cost of hiding from each point to each point, and the maximum cost of hiding from each point to the last point.\n\nIn the above algorithm, at each point, we calculate the cost of not hiding and then the cost of hiding.\n\"\"\""
    },
    {
        "number": 3333,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10.000000 20.123456\\n1\\n13.141593 20.123456\\n') == '3.141593'\nassert solution('10.000000 19.3456\\n1\\n13.141593 19.3456\\n') == '3.141593'\nassert solution('10.000000 19.3456\\n1\\n13.141593 19.3456\\n') == '3.141593'\nassert solution('10.000000 19.3456\\n1\\n13.141593 19.3456\\n') == '3.141593'\nassert solution('10.000000 19.3456\\n1\\n13.141593 19.3456\\n') == '3.141593'\n"
    },
    {
        "number": 3334,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '2.13333333333333'\n\"\"\"\n\nn = int(input())\ndistances = [list(map(int, input().split())) for _ in range(n - 1)]\nroads = [set() for _ in range(n)]\n\nfor index, distance in enumerate(distances):\n    roads[index] = set(range(1, n))\n    roads[index].remove(index)\n    for i in range(1, n):\n        roads[index].discard(i + index)\n\nfor index, road in enumerate(roads):\n    roads[index].discard(index)\n    if len(road) == 1:\n        continue\n    else:\n        roads[index] = distance[road.pop() - 1]\n\ntotal = 0\nfor index, road in enumerate(roads):\n    total += road"
    },
    {
        "number": 3334,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n4 4\n2\n3 3\n2\n1 1''') == '2.13333333333333'\nassert solution('''3\n4 4\n2\n3 3\n2\n1 1''') == 'impossible'\nassert solution('''3\n4 4\n2\n4 4\n2\n2 1''') == 'impossible'\nassert solution('''3\n4 4\n2\n1 1\n2\n1 1''') == 'impossible'\nassert solution('''5\n5 5\n1\n5 5\n2\n5 4\n2\n5 5\n2\n4 4\n2\n1 1\n2\n5 5\n2\n5 5\n2\n4 4\n2\n5 5\n2\n4 4\n2\n1 1\n2\n5 5\n2\n5 5\n2\n4 4\n2\n1 1\n2\n5 5\n2\n5 5\n2\n4 4\n2\n1 1''') == '6.13333333333333'\n"
    },
    {
        "number": 3334,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''2\n4 4\n2\n'''\n) == '2.13333333333333'\n\nassert solution(\n'''4\n8\n3\n5\n1\n'''\n) == 'impossible'\n\nassert solution(\n'''2\n2\n1\n4\n1\n2\n1\n'''\n) == 'impossible'\n\nassert solution(\n'''5\n11\n10\n12\n3\n9\n7\n5\n1\n2\n'''\n) == 'impossible'\n\nassert solution(\n'''1\n1\n1\n2\n1\n1\n1\n1\n'''\n) == 'impossible'"
    },
    {
        "number": 3334,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n4 4\\n2\\n') == 2.13333333333333\nassert solution('3\\n4 3\\n4\\n2\\n') == 2.08333333333333\nassert solution('2\\n4\\n2\\n') == 2.0\nassert solution('3\\n4\\n4\\n1\\n2\\n') == 'impossible'\nassert solution('3\\n4\\n1\\n2\\n2\\n') == 1.8\n"
    },
    {
        "number": 3334,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == 'impossible'\nassert solution('2\\n1') == 'impossible'\nassert solution('2\\n2') == '2.0'\nassert solution('3\\n1') == 'impossible'\nassert solution('3\\n2') == 'impossible'\n"
    },
    {
        "number": 3334,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n4 4\n2\n''') == '2.13333333333333'\nassert solution('''2\n5\n3\n1\n4\n2\n3\n4\n''') == 'impossible'\nassert solution('''5\n5\n4\n4\n4\n4\n5\n2\n1\n3\n2\n2\n2\n''') == '5.166666666666667'\n'''\n"
    },
    {
        "number": 3334,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''5\n1\n2\n4\n5\n8\n''') == '2.13333333333333'\nassert solution(\n'''3\n6\n8\n7\n9\n5\n2\n4\n3\n1\n''') == 'impossible'\nassert solution(\n'''4\n2\n3\n5\n7\n''') == '3.5'\n"
    },
    {
        "number": 3334,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4"
    },
    {
        "number": 3334,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n4 4\n2\n''') == '2.13333333333333'\nassert solution('''2\n2\n2\n2\n''') == 'impossible'\nassert solution('''10\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 3334,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n3\n4 4\n2\n''') == \"2.13333333333333\"\nassert solution('''\n5\n1\n1\n1\n1\n1\n''') == \"impossible\"\nassert solution('''\n5\n3\n2\n1\n5\n4\n3\n2\n1\n5\n1\n2\n3\n4\n5\n1\n2\n1\n3\n3\n4\n2\n1\n3\n1\n2\n1\n2\n2\n1\n3\n3\n4\n5\n1\n5\n1\n1\n2\n1\n5\n1\n1\n1\n2\n1\n4\n4\n2\n3\n2\n2\n4\n2\n2\n2\n2\n2\n2\n2\n1\n5\n1\n1\n5\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 3335,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(7) == 18\nassert solution(2) == 0\nassert solution(29) == 1\nassert solution(30) == 2\nassert solution(3) == 0\n"
    },
    {
        "number": 3335,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"7\"\n) == \"18\"\n\nassert solution(\n    \"1000000\"\n) == \"45356865384\"\n\nassert solution(\n    \"10000000\"\n) == \"55992914093\"\n"
    },
    {
        "number": 3335,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '18'\n"
    },
    {
        "number": 3335,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(3) == 0\nassert solution(4) == 0\nassert solution(7) == 18\nassert solution(9) == 0\nassert solution(12) == 0\n"
    },
    {
        "number": 3335,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(5) == 18\nassert solution(10) == 88\nassert solution(100) == 912\nassert solution(500) == 30048\nassert solution(1000) == 88992\n"
    },
    {
        "number": 3335,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(7) == 18\nassert solution(10) == 36\nassert solution(15) == 222\nassert solution(20) == 756\nassert solution(25) == 3256\n"
    },
    {
        "number": 3335,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') is None\nassert solution('7') == 18\nassert solution('1') == 0\nassert solution('9') == 0\nassert solution('3') == 0\n"
    },
    {
        "number": 3335,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7''') == '''18'''\nassert solution('''5''') == '''0'''\nassert solution('''1234567890''') == '''0'''\nassert solution('''1234567891''') == '''2'''\nassert solution('''1234567892''') == '''1'''\n"
    },
    {
        "number": 3335,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3''') == '1'\nassert solution('''1''') == '1'\nassert solution('''2''') == '2'\nassert solution('''13''') == '6'\nassert solution('''28''') == '8'\n"
    },
    {
        "number": 3335,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n7\\n') == 18\nassert solution('2\\n7\\n') == 18\nassert solution('6\\n7\\n') == 18\nassert solution('8\\n7\\n') == 18\nassert solution('16\\n7\\n') == 18\n"
    },
    {
        "number": 3336,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(open(\"test_case.txt\").read()) == \"3\"\n"
    },
    {
        "number": 3336,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 3\n\nSample Input:\n3\n30 F baroque chess\n43 M baroque chess\n35 M jazz\nSample Output:\n1\n"
    },
    {
        "number": 3336,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2 F 3 M') == ''\nassert solution('1 2 3 4') == ''\nassert solution('1 2 3 F 4') == ''\n"
    },
    {
        "number": 3336,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n35 M classicism programming\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer''') == '3'\nassert solution('''4\n35 M classicism programming\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer\n19 M classical programming\n0 F baroque chess\n43 F baroque soccer\n30 F classical programming\n0 F baroque chess\n43 F baroque chess\n30 F chess\n0 F chess\n43 F chess\n19 M chess''') == '6'\nassert solution('''4\n35 M classicism programming\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer\n19 M classical programming\n0 F baroque chess\n43 F baroque chess\n30 F chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n19 M chess\n0 F chess\n43 F chess\n"
    },
    {
        "number": 3336,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 3336,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\nassert solution(\"0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n1 M walking\") == \"1\\n0\\n0\\n0\"\nassert solution(\"1 M walking\\n43 M baroque chess\\n30 F baroque soccer\\n1 M walking\\n0 M classicism programming\") == \"3\"\nassert solution(\"3 M walking\\n43 M baroque chess\\n30 F baroque soccer\\n1 M walking\\n0 M baroque skiing\") == \"2\"\nassert solution(\"3 M walking\\n43 M baroque chess\\n30 F baroque soccer\\n1 M walking\\n0 M classicism programming\\n0 M baroque skiing\") == \"3\"\n"
    },
    {
        "number": 3336,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"4\n35 M classicism programming\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer\"\"\") == \"3\"\nassert solution(\"\"\"4\n30 M female\n19 M male\n17 M male\n30 M female\"\"\") == \"2\"\nassert solution(\"\"\"1\n30 M female\n19 M male\"\"\") == \"0\"\nassert solution(\"\"\"2\n30 M female\n19 M male\n30 M female\"\"\") == \"0\"\nassert solution(\"\"\"2\n30 M female\n19 M male\n30 M female\n19 M male\"\"\") == \"2\"\n"
    },
    {
        "number": 3336,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''0 M baroque skiing\n0 M baroque chess\n43 M baroque chess\n30 F baroque soccer\n0 M jazz music\n0 M jazz dancing\n43 M jazz dancing\n30 F jazz soccer\n0 M rock music\n0 M rock dancing\n43 M rock dancing\n30 F rock soccer\n0 M math\n0 M science\n43 M science\n30 F science\n0 M modern literature\n0 M contemporary classical''') == '3'\n\nassert solution('''0 M baroque skiing\n0 M baroque chess\n43 M baroque chess\n30 F baroque soccer\n0 M jazz music\n0 M jazz dancing\n43 M jazz dancing\n30 F jazz soccer\n0 M rock music\n0 M rock dancing\n43 M rock dancing\n30 F rock soccer\n0 M math\n0 M science\n43 M science\n30 F science\n0 M modern literature\n0 M contemporary classical\n43 M contemporary classical\n30 F contemporary classical\n0 M simulation\n0 M simulation music\n43 M simulation music\n30 F simulation music''') == '6'\n\nassert solution('''0 M baroque skiing\n0 M baroque chess\n43 M baroque chess\n30 F baroque soccer\n0 M jazz music\n0 M jazz dancing\n43 M jazz dancing\n30 F jazz soccer\n0 M rock music\n0 M rock dancing\n43 M rock dancing\n30 F rock soccer\n0 M math\n0 M science\n43 M science\n30 F science\n0 M modern literature\n0 M contemporary classical\n43 M contemporary classical\n30 F contemporary classical\n0 M simulation\n0 M simulation music\n43 M simulation music\n30 F simulation music''') == '7'\n\nassert solution('''0 M baroque skiing\n0 M baroque chess\n43 M baroque chess\n30 F baroque soccer\n0 M jazz music\n0 M jazz dancing\n43 M jazz dancing\n30 F jazz soccer\n0 M rock music\n0 M rock dancing\n43 M rock dancing\n30 F rock soccer\n0 M math\n0 M science\n43 M science\n30 F science\n0 M modern literature\n0 M contemporary classical\n43 M contemporary classical\n30 F contemporary classical\n0 M simulation\n0 M simulation music\n43 M simulation music\n30 F simulation music''') == '8'\n\nassert solution('''0 M baroque skiing\n0 M baroque chess\n43 M baroque chess\n30 F baroque soccer\n0 M jazz music\n0 M jazz dancing\n43 M jazz dancing\n30 F jazz soccer\n0 M rock music\n0 M rock dancing\n43 M rock dancing\n30 F rock soccer\n0 M math\n0 M science\n43 M science\n30 F science\n0 M modern literature\n0 M contemporary classical\n43 M contemporary classical\n30 F contemporary classical\n0 M simulation\n0 M simulation music\n43 M simulation music\n30 F simulation music\n0 M computer science\n0 M computer science music\n43 M computer science music\n30 F computer science music''') == '8'"
    },
    {
        "number": 3336,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n35 M\n0 M\n43 M\n30 F\n''') == '3'\nassert solution('''2\n44 M\n30 M\n''') == '2'\nassert solution('''3\n22 F\n15 F\n''') == '2'\nassert solution('''2\n20 M\n16 F\n''') == '2'\nassert solution('''1\n0 M\n''') == '0'\n"
    },
    {
        "number": 3336,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3337,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n\") == \"2\\n1\\n2\\n\"\nassert solution(\"10\\na 0\\na 1\\na 2\\na 3\\na 4\\na 5\\na 6\\na 7\\na 8\\na 9\\na 10\\na 11\\na 12\\na 13\\na 14\\na 15\\na 16\\na 17\\na 18\\na 19\\na 20\\na 21\\na 22\\na 23\\na 24\\na 25\\na 26\\na 27\\na 28\\na 29\\na 30\\na 31\\na 32\\na 33\\na 34\\na 35\\na 36\\na 37\\na 38\\na 39\\na 40\\na 41\\na 42\\na 43\\na 44\\na 45\\na 46\\na 47\\na 48\\na 49\\na 50\\na 51\\na 52\\na 53\\na 54\\na 55\\na 56\\na 57\\na 58\\na 59\\na 60\\na 61\\na 62\\na 63\\na 64\\na 65\\na 66\\na 67\\na 68\\na 69\\na 70\\na 71\\na 72\\na 73\\na 74\\na 75\\na 76\\na 77\\na 78\\na 79\\na 80\\na 81\\na 82\\na 83\\na 84\\na 85\\na 86\\na 87\\na 88\\na 89\\na 90\\na 91\\na 92\\na 93\\na 94\\na 95\\na 96\\na 97\\na 98\\na 99\\na 100\\na 101\\na 102\\na 103\\na 104\\na 105\\na 106\\na 107\\na 108\\na 109\\na 110\\na 111\\na 112\\na 113\\na 114\\na 115\\na 116\\na 117\\na 118\\na 119\\na 120\\na 121\\na 122\\na 123\\na 124\\na 125\\na 126\\na 127\\na 128\\na 129\\na 130\\na 131\\na 132\\na 133\\na 134\\na 135\\na 136\\na 137\\na 138\\na 139\\na 140\\na 141\\na 142\\na 143\\na 144\\na 145\\na 146\\na 147\\na 148\\na 149\\na 150\\na 151\\na 152\\na 153\\na 154\\na 155\\na 156\\na 157\\na 158\\na 159\\na 160\\na 161\\na 162\\na 163\\na 164\\na 165\\na 166\\na 167\\na 168\\na 169\\na 170\\na 171\\na 172\\na 173\\na 174\\na 175\\na 176\\na 177\\na 178\\na 179\\na 180\\na 181\\na 182\\na 183\\na 184\\na 185\\na 186\\na 187\\na 188\\na 189\\na 190\\na 191\\na 192\\na 193\\na 194\\na 195\\na 196\\na 197\\na 198\\na 199\\na 200\\na 201\\na 202\\na 203\\na 204\\na 205\\na 206\\na 207\\na 208\\na 209\\na 210\\na 211\\na 212\\na 213\\na 214\\na 215\\na 216\\na 217\\na 218\\na 219\\na 220\\na 221\\na 222\\na 223\\na 224\\na 225\\na 226\\na 227\\na 228\\na 229\\na 230\\na 231\\na 232\\na 233\\na 234\\na 235\\na 236\\na 237\\na 238\\na 239\\na 240\\na 241\\na 242\\na 243\\na 244\\na 245\\na 246\\na 247\\na 248\\na 249\\na 250\\na 251\\na 252\\na 253\\na 254\\na 255\\na 256\\na 257\\na 258\\na 259\\na 260\\na 261\\na 262\\na 263\\na 264\\na 265\\na 266\\na 267\\na 268\\na 269\\na 270\\na 271\\na 272\\na 273\\na 274\\na 275\\na 276\\na 277\\na 278\\na 279\\na 280\\na 281\\na 282\\na 283\\na 284\\na 285\\na 286\\na 287\\na 288\\na 289\\na 290\\na 291\\na 292\\na 293\\na 294\\na 295\\na 296\\na 297\\na 298\\na 299\\na 300\\na 301\\na 302\\na 303\\na 304\\na 305\\na 306\\na 307\\na 308\\na 309\\na 310\\na 311\\na 312\\na 313\\na 314\\na 315\\na 316\\na 317\\na 318\\na 319\\na 320\\na 321\\na 322\\na 323\\na 324\\na 325\\na 326\\na 327\\na 328\\na 329\\na 330\\na 331\\na 332\\na 333\\na 334\\na 335\\na 336\\na 337\\na 338\\na 339\\na 340\\na 341\\na 342\\na 343\\na 344\\na 345\\na 346\\na 347\\na 348\\na 349\\na 350\\na 351\\na 352\\na 353\\na 354\\na 355\\na 356\\na 357\\na 358\\na 359\\na 360\\na 361\\na 362\\na 363\\na 364\\na 365\\na 366\\na 367\\na 368\\na 369\\na 370\\na 371\\na 372\\na 373\\na 374\\na 375\\na 376\\na 377\\na 378\\na 379\\na 380\\na 381\\na 382\\na 383\\na 384\\na 385\\na 386\\na 387\\na 388\\na 389\\na 390\\na 391\\na 392\\na 393\\na 394\\na 395\\na 396\\na 397\\na 398\\na 399\\na 400\\na 401\\na 402\\na 403\\na 404\\na 405\\na 406\\na 407\\na 408\\na 409\\na 410\\na 411\\na 412\\na 413\\na 414\\na 415\\na 416\\na 417\\na 418\\na 419\\na 420\\na 421\\na 422\\na 423\\na 424\\na 425\\na 426\\na 427\\na 428\\na 429\\na 430\\na 431\\na 432\\na 433\\na 434\\na 435\\na 436\\na 437\\na 438\\na 439\\na 440\\na 441\\na 442\\na 443\\na 444\\na 445\\na 446\\na 447\\na 448\\na 449\\na 450\\na 451\\na 452\\na 453\\na 454\\na 455\\na 456\\na 457\\na 458\\na 459\\na 460\\na 461\\na 462\\na 463\\na 464\\na 465\\na 466\\na 467\\na 468\\na 469\\na 470\\na 471\\na 472\\na 473\\na 474\\na 475\\na 476\\na 477\\na 478\\na 479\\na 480\\na 481\\na 482\\na 483\\na 484\\na 485\\na 486\\na 487\\na 488\\na 489\\na"
    },
    {
        "number": 3337,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 3337,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0\\n0\\n1\\n1\\n2\\n2\\n3\\n3\\n3') == '2\\n1\\n2\\n2\\n0\\n0'\nassert solution('1\\n1\\n1\\n2\\n2\\n3\\n3\\n3') == '2\\n0\\n0\\n2\\n2\\n0\\n0'\nassert solution('0\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n"
    },
    {
        "number": 3337,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n5\na 0\na 1\nb 2\nc 2 3\nb 4\n\"\"\"\n) == \"\"\"\n2\n1\n2\n\"\"\"\n"
    },
    {
        "number": 3337,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1\na 0\na 1\nb 2\nc 2 3\nb 4\n''') == '2\\n1\\n2\\n'\nassert solution('''1\na 0\na 1\nb 2\nc 2 3\nb 4\n''') == '2\\n1\\n2\\n'\nassert solution('''1\na 0\na 1\nb 2\nc 2 3\nb 4\n''') == '2\\n1\\n2\\n'\nassert solution('''1\na 0\na 1\nb 2\nc 2 3\nb 4\n''') == '2\\n1\\n2\\n'\nassert solution('''1\na 0\na 1\nb 2\nc 2 3\nb 4\n''') == '2\\n1\\n2\\n'\n"
    },
    {
        "number": 3337,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n') == '2\\n1\\n2'\nassert solution('5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n') == '2\\n1\\n2'\nassert solution('5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n') == '2\\n1\\n2'\nassert solution('5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n') == '2\\n1\\n2'\nassert solution('5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n') == '2\\n1\\n2'\n"
    },
    {
        "number": 3337,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n3\na 0\na 1\nb 2\nc 2 3\nb 4\n''') == '2\\n1\\n2\\n'\nassert solution('''\n5\na 0\na 1\nb 2\nc 2 3\nb 4\n''') == '2\\n1\\n2\\n'\nassert solution('''\n4\na 0\na 1\nb 2\nc 2 3\nb 4\n''') == '2\\n1\\n2\\n'\nassert solution('''\n6\na 0\na 1\nb 2\nc 2 3\nb 4\n''') == '2\\n1\\n2\\n'\nassert solution('''\n6\na 0\na 1\nb 2\nc 2 3\nb 4\n''') == '2\\n1\\n2\\n'\n"
    },
    {
        "number": 3337,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n5\na 0\na 1\nb 2\nc 2 3\nb 4\n''') == '2\\n1\\n2\\n'\nassert solution('''\n5\na 0\na 1\nb 2\nc 2 3\nb 4\n''') == '2\\n1\\n2\\n'\nassert solution('''\n4\na 1\nb 2\nc 2 3\nb 4\n''') == '2\\n1\\n'\nassert solution('''\n2\na 1\nb 2\nc 2 3\nb 4\n''') == '2\\n1\\n'\nassert solution('''\n2\na 1\nb 2\nc 2 3\nb 4\n''') == '2\\n1\\n'\n"
    },
    {
        "number": 3337,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\na 0\na 1\nb 2\nc 2 3\nb 4\n''') == '2 1 2'\n'''\n"
    },
    {
        "number": 3337,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3338,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"6 1\") == \"5\"\nassert solution(\"6 2\") == \"5\"\nassert solution(\"6 3\") == \"5\"\nassert solution(\"6 4\") == \"5\"\nassert solution(\"6 5\") == \"5\"\n"
    },
    {
        "number": 3338,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 0 0 0') == '0'\nassert solution('1 1 1 1') == '1'\nassert solution('5 5 5 5') == '5'\nassert solution('7 5 3 3') == '6'\nassert solution('9 9 9 9') == '9'\n"
    },
    {
        "number": 3338,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '5'\nassert solution(stdin) == '4'\nassert solution(stdin) == '3'\nassert solution(stdin) == '2'\nassert solution(stdin) == '1'\n"
    },
    {
        "number": 3338,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n6 1\n78 61 88 71\n80 80 90 90\n70 90 80 100\n90 70 0 0\n80 67 0 0\n90 63 0 0\n''') == '5'\nassert solution('''\n1 1\n3 1 1\n2 1 2\n3 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1\n1 1 1\n2 1 1"
    },
    {
        "number": 3338,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 3338,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6 1') == '5'\nassert solution('6 2') == '7'\nassert solution('6 3') == '6'\nassert solution('6 4') == '4'\nassert solution('6 5') == '4'\n"
    },
    {
        "number": 3338,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6 1\n78 61 88 71\n80 80 90 90\n70 90 80 100\n90 70 0 0\n80 67 0 0\n90 63 0 0''') == '5'\nassert solution('''5 1\n12 43 76 59\n80 58 70 45\n75 90 85 75\n70 80 75 67\n65 78 50 65''') == '5'\nassert solution('''3 2\n7 9 7\n9 5 9\n7 7 7\n9 2 9\n7 8 7\n9 5 7\n7 8 7\n9 3 9\n7 6 7\n8 6 8\n9 5 8''') == '6'\nassert solution('''4 1\n101 4 5 9\n20 6 19 22\n21 21 19 16\n100 8 0 0''') == '5'\nassert solution('''4 2\n101 4 5 9\n20 6 19 22\n21 21 19 16\n100 8 0 0''') == '3'\n"
    },
    {
        "number": 3338,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6 1\n78 61 88 71\n80 80 90 90\n70 90 80 100\n90 70 0 0\n80 67 0 0\n90 63 0 0''') == '5'\n'''\n"
    },
    {
        "number": 3338,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 3338,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"6 1\") == \"5\"\nassert solution(\"4 1\") == \"5\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 2\") == \"0\"\n"
    },
    {
        "number": 3339,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"8\"\nassert solution(input()) == \"16\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"8\"\n"
    },
    {
        "number": 3339,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 5\n1 2\n1 3\n1 4\n2 3\n2 4''') == '4'\nassert solution('''4 3\n1 2\n2 3\n3 4\n1 4''') == '1'\nassert solution('''3 3\n1 2\n2 3\n3 4''') == '0'\nassert solution('''4 2\n1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n3 4\n3 5''') == '0'\nassert solution('''4 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n3 5\n4 5''') == '0'\n"
    },
    {
        "number": 3339,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 5\") == \"4\"\nassert solution(\"1 2\\n1 3\\n1 4\\n2 3\\n2 4\") == \"4\"\nassert solution(\"4 2\\n1 3\\n2 3\") == \"4\"\nassert solution(\"2 3\\n2 3\") == \"0\"\nassert solution(\"3 3\\n3 3\") == \"0\"\n"
    },
    {
        "number": 3339,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n4 5\n1 2\n1 3\n1 4\n2 3\n2 4\n''') == '4'\n\nassert solution(\n'''\n4 5\n1 2\n1 3\n2 3\n2 4\n''') == '0'\n\nassert solution(\n'''\n5 4\n1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n2 5\n3 4\n''') == '1'\n"
    },
    {
        "number": 3339,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n') == '4'\nassert solution('3 3\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n2 3\\n') == '4'\nassert solution('3 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n2 3\\n') == '8'\nassert solution('5 2\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n2 3\\n2 4\\n2 3\\n') == '16'\nassert solution('6 1\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n2 3\\n2 4\\n2 3\\n2 4\\n2 3\\n') == '0'\n"
    },
    {
        "number": 3339,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"4 5\n1 2\n1 3\n1 4\n2 3\n2 4\n\"\"\") == '4'\nassert solution(\n\"\"\"1\n1\n\"\"\") == '1'\nassert solution(\n\"\"\"1\n1\n2\n2\n\"\"\") == '3'\nassert solution(\n\"\"\"2\n1 2\n\"\"\") == '1'\nassert solution(\n\"\"\"4 4\n1 2\n1 3\n1 4\n2 3\n2 4\n\"\"\") == '3'\n"
    },
    {
        "number": 3339,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 5\n1 2\n1 3\n1 4\n2 3\n2 4''') == '4'\nassert solution('''4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n4 5\n1 2\n1 3\n1 4\n2 3\n2 4''') == '3'\nassert solution('''4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 3\n1 4\n2 3\n2 4\n3 4''') == '3'\nassert solution('''4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4''') == '3'\nassert solution('''4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n1 2\n1 3\n1 4\n2 3\n2"
    },
    {
        "number": 3339,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 5\n1 2\n1 3\n1 4\n2 3\n2 4''') == '4'\nassert solution('''1 2\n1 3\n1 4\n2 3\n2 4''') == '4'\nassert solution('''2 3\n1 2\n1 3\n1 4\n2 3\n2 4''') == '0'\nassert solution('''3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n2 3\n3 4\n3 1\n4 1''') == '2'\nassert solution('''2 3\n1 2\n1 3\n1 4\n2 3\n2 4\n2 3\n3 4\n3 1\n4 1''') == '2'\n"
    },
    {
        "number": 3339,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\") == \"4\"\nassert solution(\"5 3\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n2 5\\n3 4\\n4 5\") == \"3\"\nassert solution(\"7 7\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n2 6\\n2 7\\n3 6\\n3 7\\n4 7\") == \"5\"\nassert solution(\"7 7\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n2 6\\n2 7\\n3 6\\n3 7\\n4 7\") == \"4\"\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\") == \"2\"\n"
    },
    {
        "number": 3339,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2\\n1 3\\n1 4\\n2 3\\n2 4') == '4'\nassert solution('2 2\\n1 3\\n2 3') == '2'\nassert solution('3 3\\n1 2\\n2 3\\n3 4\\n4 3') == '2'\nassert solution('4 4\\n1 2\\n2 3\\n3 4\\n4 5\\n5 4') == '1'\nassert solution('5 4\\n1 2\\n2 3\\n3 4\\n4 5\\n5 4') == '0'\n"
    },
    {
        "number": 3340,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 2\n2 3\n3 4\n''') == '2\\n3 4\\n2 4\\n'\nassert solution('''4\n1 2\n2 3\n3 4\n1 2\n1 3\n''') == '3\\n4 1\\n1 2\\n'\nassert solution('''6\n1 2\n1 3\n1 4\n2 3\n3 4\n4 5\n5 6\n''') == '5\\n1 1\\n1 2\\n1 3\\n1 4\\n2 4\\n2 5\\n1 5\\n'\nassert solution('''6\n1 2\n1 3\n1 4\n2 3\n3 4\n4 5\n1 3\n''') == '5\\n1 1\\n1 3\\n1 4\\n2 4\\n2 5\\n1 3\\n1 4\\n'\nassert solution('''8\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n3 4\n3 5\n3 6\n3 7\n3 8\n4 5\n4 6\n4 7\n4 8\n5 6\n5 7\n5 8\n6 7\n6 8\n7 8\n''') == '5\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n2 4\\n2 5\\n2 6\\n2 7\\n2 8\\n3 4\\n3 5\\n3 6\\n3 7\\n3 8\\n4 5\\n4 6\\n4 7\\n4 8\\n5 6\\n5 7\\n5 8\\n6 7\\n6 8\\n7 8\\n'\n"
    },
    {
        "number": 3340,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4\") == \"2 4\"\nassert solution(\"5\") == \"2 3\"\nassert solution(\"10\") == \"1 10\"\nassert solution(\"15\") == \"1 4\"\nassert solution(\"30\") == \"1 5\"\n"
    },
    {
        "number": 3340,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n1 2\n2 3\n3 4\n''') == '2\\n3 4\\n2 4\\n'\n\nassert solution('''4\n2 1\n1 3\n2 3\n2 4\n''') == '2\\n2 4\\n'\n\nassert solution('''4\n4 1\n1 3\n4 2\n4 3\n1 2\n2 3\n3 4\n''') == '1\\n4 4\\n'\n\nassert solution('''6\n1 2\n1 3\n2 4\n3 5\n2 5\n1 4\n2 5\n1 5\n''') == '1\\n2 5\\n1 4\\n'\n\nassert solution('''6\n1 4\n1 3\n2 5\n2 4\n1 5\n2 4\n2 3\n1 5\n1 4\n''') == '2\\n1 4\\n2 4\\n'"
    },
    {
        "number": 3340,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2 4'\n\"\"\"\n"
    },
    {
        "number": 3340,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2\\n2 3\\n3 4\\n4 1') == '2\\n3 4\\n2 4'\nassert solution('2 4\\n1 2') == '1\\n2 2'\nassert solution('2 4\\n2 1') == '2\\n1 2'\nassert solution('2 4\\n2 2') == '2\\n2 2'\nassert solution('3 4\\n1 2\\n2 3') == '2\\n1 3\\n3 2'\n"
    },
    {
        "number": 3340,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4\\n4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n2 4\"\nassert solution(\"3\\n2\\n3 1\\n2 4\\n1 3\") == \"0\\n0 1\"\nassert solution(\"2\\n1 2\\n2 1\") == \"1\\n2 1\"\nassert solution(\"5\\n5\\n1 2\\n2 3\\n3 4\\n4 5\") == \"0\\n0 1\"\nassert solution(\"1\\n1\") == \"0\\n0\"\n"
    },
    {
        "number": 3340,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 2\n2 3\n3 4''') == '2\\n3 4\\n2 4'\nassert solution('''1 2\n2 3\n1 3\n3 4''') == '1\\n3 4\\n1 3'\nassert solution('''1 2\n2 3\n3 4\n1 2''') == '0\\n1 2'\nassert solution('''1 2\n2 3\n3 4\n1 3\n3 4''') == '1\\n3 4\\n3 4'\nassert solution('''1 2\n2 3\n3 4\n1 4\n3 4''') == '1\\n3 4\\n1 4'\n"
    },
    {
        "number": 3340,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n"
    },
    {
        "number": 3340,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('1\\n') == ''\nassert solution('1\\n2\\n3\\n4\\n') == '2'\nassert solution('1\\n2\\n3\\n4\\n5\\n') == '5'\n"
    },
    {
        "number": 3340,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4') == '2\\n3 4\\n2 4'\n\nprint(solution(stdin))"
    },
    {
        "number": 3341,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"5\"\nassert solution(\"2 2\\n1 3\\n2 1\") == \"5\"\nassert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n7 2\") == \"5\"\nassert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n7 2\\n1 1\\n1 1\") == \"0\"\nassert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n7 2\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == \"0\"\n"
    },
    {
        "number": 3341,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 3\\n2 1\\n3 5\\n7 2\\n\") == \"5\"\nassert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n7 2\\n\") == \"0\"\nassert solution(\"2 3\\n1 2\\n3 1\\n2 5\\n3 5\\n7 2\\n\") == \"5\"\nassert solution(\"2 3\\n1 2\\n3 1\\n2 5\\n3 5\\n7 2\\n\") == \"5\"\nassert solution(\"2 3\\n1 2\\n3 1\\n2 5\\n3 5\\n7 2\\n\") == \"5\"\n"
    },
    {
        "number": 3341,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"0\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 1 2\") == \"2\"\nassert solution(\"1 1 3\") == \"3\"\nassert solution(\"1 1 2 3\") == \"1\"\n"
    },
    {
        "number": 3341,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2') == '5'\nassert solution('1 2') == '0'\nassert solution('2 1') == '0'\nassert solution('2 2') == '5'\nassert solution('1 3') == '0'\n"
    },
    {
        "number": 3341,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 2\n1 3\n2 1\n3 5\n7 2''') == '5'\n\nassert solution('''3 2\n1 4\n2 1\n3 5\n7 2''') == '5'\n\nassert solution('''4 2\n1 7\n2 5\n3 4\n4 2''') == '5'\n\nassert solution('''6 2\n1 8\n2 7\n3 5\n4 4\n5 3\n6 2''') == '5'\n\nassert solution('''5 2\n1 5\n2 1\n3 4\n4 2\n5 1''') == '5'"
    },
    {
        "number": 3341,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"5\"\nassert solution(\"1 3\") == \"0\"\nassert solution(\"2 1\") == \"0\"\nassert solution(\"3 5\") == \"4\"\nassert solution(\"7 2\") == \"6\"\n"
    },
    {
        "number": 3341,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 2\n1 3\n2 1\n3 5\n7 2''') == '5'\n'''\nThe input is a pair of integers $m$ and $n$ describing the number of producers and consumers, respectively.\nNext is $m$ lines describing the producers. The line contains two integers $p_ i$ and $d_ i$ (1 \\leq p_ i, d_ i \\leq 10^9$) denoting the price (in dollars) at which the $i^{\\text{th}}$ producer sells one widget and the day on which the first widget will be available from this company. Next is $n$ lines describing the consumers. The line contains two integers $q_ j$ and $e_ j$ (1 \\leq q_ j, e_ j \\leq 10^9$) denoting the price (in dollars) at which the $j^{\\text {th}}$ consumer is willing to buy widgets and the day immediately after the day on which the last widget has to be delivered to this company.\n\nThe output is the maximum total number of dollars you can earn. If there is no way to sign contracts that gives you any profit, display 0.\n\nIf there is a way to sign contracts that gives you any profit, display the maximum total number of dollars you can earn.\n'''\n"
    },
    {
        "number": 3341,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"2 2\n1 3\n2 1\"\"\"\n) == \"5\"\n\nassert solution(\n\"\"\"5 5\n1 4\n1 2\n2 4\n3 2\n1 1\n\"\"\"\n) == \"0\"\n\nassert solution(\n\"\"\"5 5\n1 3\n2 4\n3 4\n4 3\n1 1\n\"\"\"\n) == \"10\"\n\nassert solution(\n\"\"\"3 4\n1 2\n1 4\n2 4\n2 3\n\"\"\"\n) == \"0\"\n"
    },
    {
        "number": 3341,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"2 3\\n1 2\\n3 2\") == \"4\"\nassert solution(\"1 2\\n1 3\") == \"0\"\n"
    },
    {
        "number": 3341,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 2\n1 3\n2 1''') == '5'\nassert solution('''2 2\n1 2\n2 1''') == '0'\nassert solution('''2 2\n1 3\n3 1''') == '3'\nassert solution('''4 3\n1 2\n3 1\n2 1\n3 1\n1 3''') == '2'\nassert solution('''10 10\n1 3\n3 1\n5 1\n7 1\n9 1\n2 3\n4 1\n6 1\n8 1\n10 1\n1 2\n3 4\n5 6\n7 8\n9 10''') == '7'\n"
    },
    {
        "number": 3342,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input_data) == \"\"\"1\n\"\"\"\n"
    },
    {
        "number": 3342,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\"\"\") == \"2\"\nassert solution(\"\"\"3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\"\"\") == \"2\"\nassert solution(\"\"\"3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n0 1\n3 4\n2 4\n0 0\n0 1\n0 2\n2 1\n2 2\n1 2\n0 3\n3 2\n0 4\n1 4\n2 4\n1 3\n0 3\n1 2\n2 3\n1 2\n0 4\n1 4\n2 4\n0 3\n0 2\n3 2\n1 2\n1 3\n1 4\n1 2\n2 1\n2 2\n2 3\n1 3\n1 4\n0 1\n0 3\n0 4\n1 3\n1 4\n1 3\n2 1\n1 2\n2 2\n2 3\n1 3\n1 4\n2 4\n1 3\n2 1\n1 4\n1 4\n1 4\n2 1\n2 2\n1 2\n0 3\n3 2\n1 2\n1 3\n1 4\n1 2\n2 1\n1 3\n1 4\n1 3\n1 3\n2 1\n1 3\n1 4\n1 4\n1 3\n2 1\n1 4\n1 4\n1 4\n1 4\n1 4\n1 3\n2 1\n1 2\n2 2\n2 3\n1 3\n1 4\n2 4\n1 3\n2 1\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1"
    },
    {
        "number": 3342,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(INPUT))\n    \n\"\"\"\n"
    },
    {
        "number": 3342,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0''') == '2'\nassert solution('''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n''') == '2'\n'''\nTime limit: 30 seconds\nMemory limit: 1GB\nSource Limit: 100MB\nAllowed languages: C, C++, C#, CLOJURE, D, E, F#, GO, HASKELL, JAVA, JAVASCRIPT, JAVASCRIPT_NODE, LISP, NODE, OSSUM, PASCAL, PERL, PHP, PL/I, POLY, R, RUST, Ruby, SCALA, S, SHARP, SIMPL, SQL, SWIFT, TCL, TCL, TEXT, ULTRA, VHDL, WHQL, WIKI, XML, YAML\n'''\n"
    },
    {
        "number": 3342,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0''') == \"2\"\nassert solution('''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0''') == \"1\"\nassert solution('''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n2 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3 4\n3"
    },
    {
        "number": 3342,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\") == \"2\"\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3\\n0 0\\n0 3\\n1 4\\n3 3\\n"
    },
    {
        "number": 3342,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(open(\"/dev/stdin\").read()))\n"
    },
    {
        "number": 3342,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3342,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0''') == '2'\nassert solution('''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n2 1\n3 4\n4 4\n3 3\n1 0\n2 4\n1 1\n2 2\n1 3\n1 2\n1 4\n0 0\n0 4\n1 2\n2 3\n3 3\n1 1\n2 0\n0 2\n1 0\n2 1\n3 2\n1 3\n1 2\n3 0\n1 3\n2 2\n1 4\n0 4\n2 4\n0 0\n1 3\n1 1\n1 0''') == '3'\nprint(solution('''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n2 1\n3 4\n4 4\n3 3\n1 0\n2 4\n1 1\n2 2\n1 3\n1 2\n1 4\n0 0\n0 4\n1 2\n2 3\n3 3\n1 1\n2 0\n0 2\n1 0\n2 1\n3 2\n1 3\n1 2\n3 0\n1 3\n2 2\n1 4\n0 4\n2 4\n0 0\n1 3\n1 1\n1 0'''))\n"
    },
    {
        "number": 3342,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == str(4)\n\nprint(\"Hello World\")\n"
    },
    {
        "number": 3343,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 2') == 'GHOST'\nassert solution('4 2') == 'GHOST'\nassert solution('3 3') == 'GHOST'\nassert solution('4 2\\n2 C\\n3 C') == 'GHOST'\nassert solution('2 2\\n2 C\\n3 C') == 'GHOST'\n"
    },
    {
        "number": 3343,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"GHOST\"\nassert solution(\"3 4\") == \"GHOST\"\nassert solution(\"4 2\") == \"GHOST\"\nassert solution(\"4 4\") == \"GHOST\"\nassert solution(\"3 3\") == \"SAFE\"\n"
    },
    {
        "number": 3343,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'GHOST'"
    },
    {
        "number": 3343,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"GHOST\"\nassert solution(\"4 3\") == \"GHOST\"\nassert solution(\"3 3\") == \"GHOST\"\nassert solution(\"3 C\") == \"GHOST\"\nassert solution(\"2 C\") == \"GHOST\"\n"
    },
    {
        "number": 3343,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\\n3 W\") == \"SAFE\"\nassert solution(\"4 3\\n3 C\\n2 C\\n1 W\") == \"GHOST\"\nassert solution(\"4 3\\n3 W\\n2 W\\n1 W\") == \"GHOST\"\nassert solution(\"4 3\\n3 W\\n2 W\\n1 W\\n3 C\\n2 C\\n1 C\") == \"SAFE\"\nassert solution(\"4 4\\n0 W\\n1 C\\n2 C\\n3 C\") == \"GHOST\"\n"
    },
    {
        "number": 3343,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\") == \"GHOST\"\nassert solution(\"6 3\\n4 C\\n3 C\\n2 C\\n1 C\\n0 C\") == \"GHOST\"\nassert solution(\"4 3\\n3 C\\n2 C\\n1 C\") == \"GHOST\"\nassert solution(\"6 3\\n4 C\\n3 C\\n2 C\\n1 C\\n0 C\") == \"GHOST\"\nassert solution(\"6 3\\n4 C\\n3 C\\n2 C\\n1 C\\n0 C\") == \"GHOST\"\n"
    },
    {
        "number": 3343,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n0 C\n1 C\n2 C''') == 'GHOST'\nassert solution('''1\n1 C\n2 C\n3 C\n4 C\n5 C''') == 'SAFE'\nassert solution('''1\n2 C\n3 C\n4 C\n5 C''') == 'GHOST'\nassert solution('''2\n2 C\n3 C\n4 C\n5 C''') == 'SAFE'\nassert solution('''2\n3 C\n4 C\n5 C''') == 'GHOST'\n"
    },
    {
        "number": 3343,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1\n3 C\n2 C\n3 C''') == 'GHOST'\nassert solution('''1\n3 C\n2 C\n3 C''') == 'SAFE'\nassert solution('''2\n3 C\n4 C\n5 C''') == 'SAFE'\nassert solution('''3\n3 C\n2 C\n1 C''') == 'GHOST'\nassert solution('''1\n1 C''') == 'GHOST'\n"
    },
    {
        "number": 3343,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"GHOST\"\nassert solution(stdin) == \"SAFE\"\n\"\"\"\n"
    },
    {
        "number": 3343,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\nC\\nC\\nC\\n\") == \"GHOST\"\nassert solution(\"4 2\\nC\\nC\\nC\\n\") == \"GHOST\"\nassert solution(\"4 2\\nC\\nC\\nC\\n\") == \"GHOST\"\nassert solution(\"3 4\\nC\\nC\\nC\\n\") == \"SAFE\"\nassert solution(\"4 4\\nC\\nC\\nC\\n\") == \"SAFE\"\n"
    },
    {
        "number": 3344,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3\n0.00 2.00''') == '2'\nassert solution('''2 3\n0.01 2.00''') == '2'\nassert solution('''2 3\n0.02 2.00''') == '2'\nassert solution('''2 3\n0.03 2.00''') == '2'\nassert solution('''2 3\n0.04 2.00''') == '2'\n"
    },
    {
        "number": 3344,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0.00 2.00\n0.11 1.11\n0.55 1.55''') == '2'\nassert solution('''0.00 1.00\n0.00 0.00\n0.00 0.00\n0.00 0.00\n0.00 0.00\n0.00 0.00''') == '0'\nassert solution('''0.00 0.11\n0.00 0.55\n0.11 0.55\n0.55 0.55\n0.55 0.55\n0.55 0.55''') == '2'\nassert solution('''0.00 0.11\n0.00 0.55\n0.11 0.55\n0.55 0.55\n0.55 0.55\n0.55 0.55''') == '0'\nassert solution('''0.00 0.11\n0.00 0.55\n0.11 0.55\n0.55 0.55\n0.55 0.55\n0.55 0.55''') == '2'\n"
    },
    {
        "number": 3344,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '1'\n\nassert solution('''1 2''') == '1'\n\nassert solution('''1 2''') == '1'\n\nassert solution('''1''') == '0.1'\n\nassert solution('''1''') == '1'"
    },
    {
        "number": 3344,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0.00 2.00\\n0.01 2.01\\n0.1 2.1\\n1 2.0\") == \"1\"\nassert solution(\"2 3\\n0.00 2.00\\n0.01 2.01\\n0.1 2.1\\n1 2.0\") == \"0.1\"\nassert solution(\"2 3\\n0.00 2.00\\n0.01 2.01\\n0.1 2.1\\n1 2.0\\n2 2.1\") == \"2\"\nassert solution(\"1 4\\n0.00 0.00\\n0.01 1.01\\n0.1 1.1\\n10 10.1\") == \"0.1\"\nassert solution(\"2 4\\n0.00 0.00\\n0.01 1.01\\n0.1 1.1\\n10 10.1\\n5 5.1\") == \"10.0\"\n"
    },
    {
        "number": 3344,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0.00 2.00\") == 2\nassert solution(\"0.00 0.00\") == \"no fika\"\nassert solution(\"0.00 0.01\") == \"no fika\"\nassert solution(\"0.00 1.00\") == \"no fika\"\nassert solution(\"0.00 1.01\") == 2\n"
    },
    {
        "number": 3344,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\"\n\nassert solution(\"1 2\") == \"1\"\nassert solution(\"0.1 0.1\") == \"1\"\nassert solution(\"0.1 0.2\") == \"0.1\"\nassert solution(\"0.1 0.3\") == \"0.2\"\n"
    },
    {
        "number": 3344,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0.00 2.00''') == '2'\nassert solution('''0.00 2.01''') == '2'\nassert solution('''2.99 2.00''') == '2'\nassert solution('''0.01 1.99''') == '1.99'\nassert solution('''1.99 1.98''') == '1.99'\n"
    },
    {
        "number": 3344,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\"\n'''\n\nfrom math import ceil, log"
    },
    {
        "number": 3344,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0.00 2.00\") == \"2\"\nassert solution(\"2 1\") == \"0.50\"\nassert solution(\"0.00 1.00\") == \"1.50\"\nassert solution(\"0.50 1.00\") == \"2.00\"\nassert solution(\"0.50 0.50\") == \"0.50\"\n"
    },
    {
        "number": 3344,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0.00 2.00\") == 2\nassert solution(\"0.00 2.00\") == 2\nassert solution(\"0.00 2.00\") == 2\nassert solution(\"0.00 2.00\") == 2\nassert solution(\"0.00 2.00\") == 2\n"
    },
    {
        "number": 3345,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0 0\\n0 0\\n2\\n30 0\\n15 0\\n\") == \"10\"\nassert solution(\"0 0\\n0 0\\n2\\n30 0\\n15 0\\n\") == \"10\"\nassert solution(\"0 0\\n0 0\\n2\\n30 0\\n15 0\\n\") == \"10\"\nassert solution(\"0 0\\n0 0\\n2\\n30 0\\n15 0\\n\") == \"10\"\nassert solution(\"0 0\\n0 0\\n2\\n30 0\\n15 0\\n\") == \"10\"\n"
    },
    {
        "number": 3345,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0 0\n10 0\n2\n30 0\n15 0''') == '10'\nassert solution('''0 0\n3 0\n2\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n1\n3 0\n"
    },
    {
        "number": 3345,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''0 0\n10 0\n2\n30 0\n15 0''') == '10'\nassert solution('''0 0\n0 0\n2\n30 0\n15 0''') == '10'\nassert solution('''0 0\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0''') == '10'\nassert solution('''0 0\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2\n0 0\n2\n30 0\n15 0\n2"
    },
    {
        "number": 3345,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\\n\") == \"10\"\nassert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\\n2\\n30 0\\n15 0\\n\") == \"5\"\nassert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\\n2\\n30 0\\n15 0\\n3\\n30 0\\n15 0\\n\") == \"6\"\nassert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\\n2\\n30 0\\n15 0\\n3\\n30 0\\n15 0\\n4\\n30 0\\n15 0\\n\") == \"6\"\nassert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\\n2\\n30 0\\n15 0\\n3\\n30 0\\n15 0\\n4\\n30 0\\n15 0\\n5\\n30 0\\n15 0\\n6\\n30 0\\n15 0\\n7\\n30 0\\n15 0\\n8\\n30 0\\n15 0\\n9\\n30 0\\n15 0\\n10\\n30 0\\n15 0\\n\") == \"3\"\n"
    },
    {
        "number": 3345,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"0 0\n10 0\n2\n30 0\n15 0\"\"\") == \"10\"\nassert solution(\n    \"\"\"0 0\n10 0\n2\n30 0\n15 0\n10\n0\n0\"\"\") == \"0\"\nassert solution(\n    \"\"\"0 0\n10 0\n2\n30 0\n15 0\n10\n0\n0\n1\n0\n0\"\"\") == \"0\"\nassert solution(\n    \"\"\"0 0\n10 0\n2\n30 0\n15 0\n10\n0\n0\n1\n0\n10\"\"\") == \"0\"\n"
    },
    {
        "number": 3345,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 3345,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0 0\n10 0\n2\n30 0\n15 0''') == \"10\"\nassert solution('''0 0\n0 0\n2\n30 0\n15 0''') == \"1\"\nassert solution('''0 0\n2\n30 0\n15 0''') == \"1\"\nassert solution('''0 0\n2\n30 0\n15 0''') == \"0.5\"\nassert solution('''0 0\n2\n30 0\n15 0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n"
    },
    {
        "number": 3345,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''0 0\n10 0\n2\n30 0\n15 0\n''') == '10'\nassert solution(\n'''0 0\n10 0\n2\n30 0\n15 0\n''') == '15'\nassert solution(\n'''0 0\n10 0\n2\n30 0\n15 0\n''') == '10'\nassert solution(\n'''0 0\n10 0\n2\n30 0\n15 0\n''') == '10'\nassert solution(\n'''0 0\n10 0\n2\n30 0\n15 0\n''') == '10'\n"
    },
    {
        "number": 3345,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n0 0\\n2\\n0 0\") == \"0\"\nassert solution(\"1\\n0 0\\n2\\n0 0\") == \"0\"\nassert solution(\"1\\n0 0\\n2\\n0 0\") == \"0\"\nassert solution(\"1\\n0 0\\n2\\n0 0\") == \"0\"\nassert solution(\"2\\n0 0\\n2\\n0 0\") == \"0\"\n"
    },
    {
        "number": 3345,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    input_data=\"\"\"0 0\n10 0\n2\n30 0\n15 0\"\"\") == \"10\"\n\nassert solution(\n    input_data=\"\"\"0 0\n10 0\n2\n30 0\n15 0\n100 0\n5 0\"\"\") == \"50\"\n\nassert solution(\n    input_data=\"\"\"2\n0 0\n10 0\n2\n30 0\n15 0\n100 0\n5 0\"\"\") == \"10\"\n\nassert solution(\n    input_data=\"\"\"2\n0 0\n10 0\n2\n30 0\n15 0\n100 0\n5 0\n20 0\n25 0\n30 0\n35 0\n40 0\n50 0\n60 0\n70 0\n80 0\n90 0\n100 0\n5 0\n10 0\n15 0\n20 0\n25 0\n30 0\n35 0\n40 0\n50 0\n60 0\n70 0\n80 0\n90 0\n100 0\n5 0\n10 0\n15 0\n20 0\n25 0\n30 0\n35 0\n40 0\n50 0\n60 0\n70 0\n80 0\n90 0\n100 0\n5 0\n10 0\n15 0\n20 0\n25 0\n30 0\n35 0\n40 0\n50 0\n60 0\n70 0\n80 0\n90 0\n100 0\n5 0\n10 0\n15 0\n20 0\n25 0\n30 0\n35 0\n40 0\n50 0\n60 0\n70 0\n80 0\n90 0\n100 0\n5 0\n10 0\n15 0\n20 0\n25 0\n30 0\n35 0\n40 0\n50 0\n60 0\n70 0\n80 0\n90 0\n100 0\n5 0\n10 0\n15 0\n20 0\n25 0\n30 0\n35 0\n40 0\n50 0\n60 0\n70 0\n80 0\n90 0\n100 0\n5 0\n10 0\n15 0\n20 0\n25 0\n30 0\n35 0\n40 0\n50 0\n60 0\n70 0\n80 0\n90 0\n100 0\n5 0\n10 0\n15 0\n20 0\n25 0\n30 0\n35 0\n40 0\n50 0\n60 0\n70 0\n80 0\n90 0\n100 0\n5 0\n10 0\n15 0\n20 0\n25 0\n30 0\n35 0\n40 0\n50 0\n60 0\n70 0\n80 0\n90 0\n100 0\n5 0\n10 0\n15 0\n20 0\n25 0\n30 0\n35 0\n40 0\n50 0\n60 0\n70 0\n80 0\n90 0\n100 0\n5 0\n10 0\n15 0\n20 0\n25 0\n30 0\n35 0\n40 0\n50 0\n60 0\n70 0\n80 0\n90 0\n100 0\n5 0\n10 0\n15 0\n20 0\n25 0\n30 0\n35 0\n40 0\n50 0\n60 0\n70 0\n80 0\n90 0\n100 0\n5 0\n10 0\n15 0\n20 0\n25 0\n30 0\n35 0\n40 0\n50 0\n60 0\n70 0\n80 0\n90 0\n100 0\n5 0\n10 0\n15 0\n20 0\n25 0\n30 0\n35 0\n40 0\n50 0\n60 0\n70 0\n80 0\n90 0\n100 0\n5 0\n10 0\n15 0\n20 0\n25 0\n30 0\n35 0\n40 0\n50 0\n60 0\n70 0\n80 0\n90 0\n100 0\n5 0\n10 0\n15 0\n20 0\n25 0\n30 0\n35 0\n40 0\n50 0\n60 0\n70 0\n80 0\n90 0\n100 0\n5 0\n10 0\n15 0\n20 0\n25 0\n30 0\n35 0\n40 0\n50 0\n60 0\n70 0\n80 0\n90 0\n100 0\n5 0\n10 0\n15 0\n20 0\n25 0\n30 0\n35 0\n40 0\n50 0\n60 0\n70 0\n80 0\n90 0\n100 0\n5 0\n10 0\n15 0\n20 0\n25 0\n30 0\n35 0\n40 0\n50 0\n60 0\n70 0\n80 0\n90 0\n100 0\n5 0\n10 0\n15 0\n20 0\n25 0\n30 0\n35 0\n40 0\n50 0\n60 0\n70 0\n80 0\n90 0\n100 0\n5 0\n10 0\n15 0\n20 0\n25 0\n30 0\n35 0\n40 0\n50 0\n60 0\n70 0\n80 0\n90 0\n100 0\n5 0\n10 0\n15 0\n20 0\n25 0\n30 0\n35 0\n40 0\n50 0\n60 0\n70 0\n80 0\n90 0\n100 0\n5 0\n10 0\n15 0\n20 0\n25 0\n30 0\n35 0\n40 0\n50 0\n60 0\n70 0\n80 0\n90 0\n100 0\n5 0\n10 0\n15 0\n20 0\n25 0\n30 0\n35 0\n40 0\n50 0\n60 0\n70 0\n80 0\n90 0\n100 0\n5 0\n10 0\n15 0\n20 0\n25 0\n30 0\n35 0\n40 0\n50 0\n60 0\n70 0\n80 0\n90 0\n100 0\n5 0\n10 0\n15 0\n20 0\n25 0\n30 0\n35 0\n40 0\n50 0\n60 0\n70 0\n80 0\n90 0\n100 0\n5 0\n10 0\n15 0\n20 0\n25 0\n30 0\n35 0\n40 0\n50 0\n60 0\n70 0\n80 0\n90 0\n100 0\n5 0\n10 0\n15 0\n20 0\n25 0\n30 0\n35 0\n40 0\n50 0\n60 0\n70 0\n80 0\n90 0\n100 0\n5 0\n10 0\n15 0\n20 0\n25 0\n30 0\n35 0\n40 0\n50 0\n60 0\n70 0\n80 0\n90 0\n100 0\n5 0\n10 0\n15 0\n20 0\n25 0\n30 0\n35 0\n40 0\n50 0\n60 0\n70 0\n80 0\n90 0\n100 0\n5 0\n10 0\n15 0\n20 0\n25 0\n30 0\n35 0\n40 0\n50 0\n60 0\n70 0\n80 0\n90 0\n100 0\n5 0\n10 0\n15 0\n20 0\n"
    },
    {
        "number": 3346,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(open(\"data/input02.txt\").read()))\n\"\"\"\n"
    },
    {
        "number": 3346,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3346,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == str(3)\n\"\"\"\n"
    },
    {
        "number": 3346,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3346,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"8 2\\nW 10 0\\nE 17 4\") == \"0\"\nassert solution(\"7 2\\nE 10 5\\nW 17 4\") == \"2\"\nassert solution(\"2 2\\nW 10 0\\nW 10 2\") == \"1\"\nassert solution(\"8 3\\nW 10 0\\nE 17 4\\nE 19 5\\nE 22 6\\nE 24 7\\nE 25 8\") == \"0\"\nassert solution(\"7 4\\nE 10 5\\nE 17 6\\nE 19 7\\nE 20 8\\nE 22 9\\nE 22 10\") == \"4\"\n"
    },
    {
        "number": 3346,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 3\\nW 10 0\\nW 10 3\\nE 17 4') == '0'\nassert solution('8 1\\nW 10 0\\nE 17 4') == '1'\nassert solution('8 1\\nW 10 0\\nW 10 3\\nE 17 4') == '2'\nassert solution('8 1\\nW 10 0\\nE 17 4') == '0'\nassert solution('8 1\\nW 10 0\\nW 10 3\\nE 17 4') == '1'\n"
    },
    {
        "number": 3346,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3346,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0\"\n\nassert stdin == \"\"\"\\\n8 3\nW 10 0\nW 10 3\nE 17 4\n\"\"\"\n\"\"\"\\\n\nSample Input:\n8 3\nW 10 0\nW 10 3\nE 17 4\nE 14 6\nE 12 5\nE 10 7\nE 9 8\nE 8 9\nE 7 10\nE 6 11\nE 5 12\nE 4 13\nE 3 14\nE 2 15\nE 1 16\n\nSample Output:\n2\n\"\"\"\n\"\"\"\\\n\nSample Input:\n8 3\nE 14 6\nE 12 5\nE 10 7\nE 9 8\nE 8 9\nE 7 10\nE 6 11\nE 5 12\nE 4 13\nE 3 14\nE 2 15\nE 1 16\n\nSample Output:\n1\n\"\"\"\n\nassert stdin == \"\"\"\\\n8 3\nE 14 6\nE 12 5\nE 10 7\nE 9 8\nE 8 9\nE 7 10\nE 6 11\nE 5 12\nE 4 13\nE 3 14\nE 2 15\nE 1 16\n\"\"\"\n\nassert solution(stdin) == \"1\"\n\n\"\"\"\\\n\nTest Case:\n8 3\nW 10 0\nW 10 3\nE 17 4\nE 14 6\nE 12 5\nE 10 7\nE 9 8\nE 8 9\nE 7 10\nE 6 11\nE 5 12\nE 4 13\nE 3 14\nE 2 15\nE 1 16\n\n\"\"\"\n"
    },
    {
        "number": 3346,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 3\") == \"0\"\nassert solution(\"4 2\") == \"1\"\nassert solution(\"4 2\") == \"0\"\nassert solution(\"4 2\") == \"0\"\nassert solution(\"5 2\") == \"2\"\n"
    },
    {
        "number": 3346,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3347,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n5 8\n5 6\n3 4\n5 13\n6 10''') == '3'\nassert solution('''5\n6 4\n5 3\n4 2\n3 1\n2 0\nSample Input:\n7\n5 4\n5 3\n5 2\n5 1\n6 0\n6 5\n6 4\n7 4\n7 3\nSample Output:\n4\n''') == '4'\nassert solution('''7\n7 5\n6 4\n6 3\n6 2\n6 1\n5 0\n5 6\n5 4\nSample Output:\n5\n''') == '5'\nassert solution('''7\n7 6\n6 5\n5 4\n5 3\n5 2\n5 1\n4 0\n4 6\n4 5\nSample Output:\n6\n''') == '6'\nassert solution('''7\n7 6\n6 5\n5 4\n5 3\n5 2\n5 1\n4 0\n4 5\n4 4\nSample Output:\n5\n''') == '5'\n"
    },
    {
        "number": 3347,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3347,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3347,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n5 8\n5 6\n3 4\n5 13\n6 10''') == '3'\n'''\n"
    },
    {
        "number": 3347,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10') == '3'\nassert solution('5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10') == '3'\nassert solution('5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10') == '3'\nassert solution('5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10') == '3'\nassert solution('5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10') == '3'\n"
    },
    {
        "number": 3347,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '3'\nassert solution('5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\\n5 5\\n5 7\\n5 3\\n5 1\\n5 9\\n5 8\\n') == '3'\nassert solution('5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\\n5 5\\n5 7\\n5 3\\n5 1\\n5 9\\n5 8\\n') == '3'\nassert solution('5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\\n5 5\\n5 7\\n5 3\\n5 1\\n5 9\\n5 8\\n') == '3'\nassert solution('5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\\n5 5\\n5 7\\n5 3\\n5 1\\n5 9\\n5 8\\n') == '3'\n"
    },
    {
        "number": 3347,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n5 8\n5 6\n3 4\n5 13\n6 10''') == '3'\nassert solution('''5\n5 6\n3 4\n5 13\n6 10''') == '3'\nassert solution('''3\n3 1\n5 2\n5 9\n9 8''') == '3'\nassert solution('''3\n4 2\n5 3\n5 8\n6 10''') == '1'\nassert solution('''4\n6 4\n5 9\n5 8\n5 7\n7 8''') == '3'\n"
    },
    {
        "number": 3347,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '3'\n\n-----Notes-----\n1. Please try to solve this using a data structure, and not in-place operations.\n2. There is a better solution (2-3 lines) here: https://leetcode.com/problems/maximum-gold-arrivals/discuss/810732/C%2B%2B-data-structure-bit-by-bit-solution-with-detailed-explanation\n3. For the sample, the answer is 3.\n\"\"\"\n\n\"\"\"\nIf store i is not above sea level, the demetrios cannot visit store i until they reach sea level.\n\nIf store i is above sea level, the demetrios can visit store i before it falls below sea level.\n\nSo if the number of stores in the gold is n, each store needs to be visited by demetrios at most n * 2 times, which is (n * 2) + (n - 1) * 2, so the answer is n * 2.\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3347,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '3'"
    },
    {
        "number": 3347,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3\"\n'''\n"
    },
    {
        "number": 3348,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 3348,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"impossible\"\n"
    },
    {
        "number": 3348,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"4 4\n10 3 3\n\"\"\") == \"\"\"impossible\"\"\"\nassert solution(\"\"\"1 0 0\n1 0 1\n1 1 1\n1 0 0\n\"\"\") == \"\"\"A\nAA\nAAA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nAAA\nA\nA\nA\nA\nAAA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA\nAAA\nA\nA\nA"
    },
    {
        "number": 3348,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 4\n10 3 3\n''') == 'impossible'\nassert solution('''2 2\n2 1 1\n''') == 'impossible'\nassert solution('''2 2\n1 1 1\n''') == 'impossible'\nassert solution('''4 4\n2 1 1\n''') == 'impossible'\nassert solution('''1 2\n1 1 1\n''') == 'impossible'\n"
    },
    {
        "number": 3348,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\").read()) == open(\"sample_output.txt\", \"r\").read()\n'''\n"
    },
    {
        "number": 3348,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(open('./tests/sample_input_4_4').read()) == open('./tests/sample_output_4_4').read()\nassert solution(open('./tests/sample_input_2_2').read()) == open('./tests/sample_output_2_2').read()\nassert solution(open('./tests/sample_input_1_1').read()) == open('./tests/sample_output_1_1').read()\nassert solution(open('./tests/sample_input_4_4').read()) == open('./tests/sample_output_4_4').read()\nassert solution(open('./tests/sample_input_2_3').read()) == open('./tests/sample_output_2_3').read()\n"
    },
    {
        "number": 3348,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n10 3 3\\n\") == \"impossible\"\nassert solution(\"4 4\\n10 3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"impossible\"\nassert solution(\"4 4\\n10 3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"impossible\"\nassert solution(\"4 4\\n10 3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"impossible\"\nassert solution(\"4 4\\n10 3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1"
    },
    {
        "number": 3348,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n1 1 1\n1 1 1\n''') == 'impossible'\nassert solution(\n'''\n1 1 1\n1 1 1\n''') == 'impossible'\nassert solution(\n'''\n4 2\n10 3 3\n''') == 'impossible'\nassert solution(\n'''\n6 3\n10 3 3\n''') == 'impossible'\nassert solution(\n'''\n10 4\n10 3 3\n''') == 'impossible'\n"
    },
    {
        "number": 3348,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 4\n10 3 3\n''') == 'impossible'\nassert solution('''4 4\n10 3 4\n''') == 'impossible'\nassert solution('''4 4\n10 3 2\n''') == 'impossible'\nassert solution('''4 4\n10 3 1\n''') == 'impossible'\nassert solution('''4 4\n10 3 3\n''') == 'impossible'\n"
    },
    {
        "number": 3348,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\\n2 3 1\") == \"impossible\"\nassert solution(\"2 1 2\\n3 2 2\") == \"impossible\"\nassert solution(\"2 2 2\\n1 2 1\") == \"impossible\"\nassert solution(\"4 2 3\\n2 1 2\") == \"impossible\"\nassert solution(\"2 1 1\\n2 1 1\") == \"impossible\"\n"
    },
    {
        "number": 3349,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nassert solution('AUTHORS') == 'AUTHORS'\nassert solution('CANVAS') == 'CANVAS'\nassert solution('FISH') == 'FISH'\n"
    },
    {
        "number": 3349,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nassert solution('''11\nCHICK\nAND\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCHICK\nCH"
    },
    {
        "number": 3349,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nassert solution('''\n11\nABUT\nNOE\nDE\nPOP\nCIN\nSCYT\nABI\nFAC\nNMA\nTAC\nIAC\nMAK\nRAD\nTU\nABS\nSAC\nTUN\nEAC\nRAC\nTAD\nDAC\nKAC\nCAD\nLAC\nAAD\nAAD\nNAD\nNAH\nDAC\nAAC\nACN\nAAC\nACN\nNAH\nACN\nACN\nNAH\nAAC\nACN\nAAC\nAAC\nKAC\nACN\nACN\nAAD\nACN\nAAD\nACN\nNAH\nACN\nKAC\nACN\nACN\nAAC\nACN\nACN\nKAC\nACN\nAAC\nACN\nAAC\nACN\nACN\nACN\nACN\nAAD\nACN\nNAH\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nKAC\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nKAC\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nKAC\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nKAC\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\nACN\n"
    },
    {
        "number": 3349,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    '''11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\n'''\n) == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n\nassert solution(\n    '''4\nOPEN\nCAT\nSEE\nKAT\n'''\n) == 'OPEN SEE KAT'\n\nassert solution(\n    '''5\nAA\nAA\nAA\nAA\nAA\nAA\n'''\n) == 'AA AA AA AA AA'\n\nassert solution(\n    '''3\nAB\nAE\nFF\n'''\n) == 'AB AE FF'\n\nassert solution(\n    '''6\nA\nB\nC\nD\nE\nF\nG\nH\nI\nJ\nK\nL\nM\nN\nO\nP\nQ\nR\nS\nT\nU\nV\nW\nX\nY\nZ\na\nb\nc\nd\ne\nf\ng\nh\ni\nj\nk\nl\nm\nn\no\np\nq\nr\ns\nt\nu\nv\nw\nx\ny\nz\n'''\n) == 'A B C D E F G H I J K L M N O P Q R S T U V W X Y Z'"
    },
    {
        "number": 3349,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\n''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n\nassert solution('''\n6\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\n''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n\nassert solution('''\n6\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\n''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n\nassert solution('''\n5\nCAT\nBETWEEN\nBAT\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\n''') == 'BAT SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n\nassert solution('''\n5\nCAT\nBETWEEN\nBAT\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\n''') == 'BAT SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'"
    },
    {
        "number": 3349,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\nfrom typing import List\n"
    },
    {
        "number": 3349,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(SAMPLE_INPUT_OUTPUT) == SAMPLE_OUTPUT\n\nprint(solution(stdin))\n\"\"\"\nimport sys\n"
    },
    {
        "number": 3349,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6\\nA\\nB\\nC\\nD\\nE\\nF') == 'A\\nB\\nC\\nD\\nE\\nF'\nassert solution('6\\nG\\nH\\nI\\nJ\\nK\\nL\\nM\\nN\\nO\\nP\\nQ\\nR\\nS\\nT\\nU\\nV\\nW\\nX\\nY\\nZ') == 'G\\nH\\nI\\nJ\\nK\\nL\\nM\\nN\\nO\\nP\\nQ\\nR\\nS\\nT\\nU\\nV\\nW\\nX\\nY\\nZ'\nassert solution('9\\nA\\nB\\nC\\nD\\nE\\nF\\nG\\nH\\nI\\nJ\\nK\\nL\\nM\\nN\\nO\\nP\\nQ\\nR\\nS\\nT\\nU\\nV\\nW\\nX\\nY\\nZ') == 'A\\nB\\nC\\nD\\nE\\nF\\nG\\nH\\nI\\nJ\\nK\\nL\\nM\\nN\\nO\\nP\\nQ\\nR\\nS\\nT\\nU\\nV\\nW\\nX\\nY\\nZ'\nassert solution('5\\nB\\nC\\nD\\nE\\nF') == 'B\\nC\\nD\\nE\\nF'\nassert solution('5\\nA\\nB\\nC\\nD\\nE') == 'A\\nB\\nC\\nD\\nE'\n"
    },
    {
        "number": 3349,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n4\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n'''\n) == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION','should work'\nassert solution(\n'''\n5\nBOY\nBAY\nBEARS\nBEAST\nBEETLES\n'''\n) == 'BOY BAY BEARS BEAST BEETLES','should work'\nassert solution(\n'''\n7\nBASKET\nBASKET\nBAT\nBASKET\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT\nBAT"
    },
    {
        "number": 3349,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\"\n) == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\n\nassert solution(\n    \"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\"\n) == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\n\nassert solution(\n    \"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\"\n) == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\n\nassert solution(\n    \"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\"\n) == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\n\nassert solution(\n    \"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\"\n) == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\""
    },
    {
        "number": 3350,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"abrahellehhelleh\") == 12\nassert solution(\"rachelhellabracadabra\") == 0\nassert solution(\"abrahelleh\") == 12\nassert solution(\"rachelhellabracadabra\") == 0\nassert solution(\"abrahellehhelleh\") == 12\n"
    },
    {
        "number": 3350,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == 0\nassert solution('abrahellehhelleh') == 12\nassert solution('acbracadabra') == 0\nassert solution('abcab') == 0\nassert solution('abbabba') == 12\n"
    },
    {
        "number": 3350,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"12\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"12\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"12\"\n"
    },
    {
        "number": 3350,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3350,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '12'\nprint('Test 1 passed.')\nprint()\n\nassert solution('abrahellehhelleh') == '0'\nprint('Test 2 passed.')\nprint()\n\nassert solution('rachelhellabracadabra') == '0'\nprint('Test 3 passed.')\nprint()\n\nassert solution('abc') == '0'\nprint('Test 4 passed.')\nprint()\n\nassert solution('abracadabra') == '12'\nprint('Test 5 passed.')\nprint()"
    },
    {
        "number": 3350,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == '0'\nassert solution('abrahelleh') == '12'\nassert solution('abrahellehhelleh') == '0'\nassert solution('abrahellehhelleheh') == '0'\nassert solution('abrahellehhellehhelleh') == '0'\n"
    },
    {
        "number": 3350,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abrahellehhelleh') == 12\nassert solution('rachelhellabracadabra') == 0\n\"\"\"\n"
    },
    {
        "number": 3350,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    stdin=\"abrahellehhelleh\"\n) == \"12\"\nassert solution(\n    stdin=\"rachelhellabracadabra\"\n) == \"0\"\nassert solution(\n    stdin=\"leetcode\"\n) == \"0\"\nassert solution(\n    stdin=\"thequickbrownfoxjumpsoverthelazydog\"\n) == \"9\"\nassert solution(\n    stdin=\"glintydvtzcrsxztzcvs\"\n) == \"11\"\n"
    },
    {
        "number": 3350,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abrahellehhelleh') == 12\nassert solution('rachelhellabracadabra') == 0\nassert solution('abracadabra') == 0\nassert solution('abbbbaa') == 0\nassert solution('abbbbbaa') == 6\n"
    },
    {
        "number": 3350,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"12\"\n"
    },
    {
        "number": 3351,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 3351,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''65'''\n) == '70', \"First example\"\nassert solution(\n'''\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n'''\n) == '70', \"Second example\"\nassert solution(\n'''\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n'''\n) == '70', \"Third example\"\nassert solution(\n'''\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n'''\n) == '70', \"Fourth example\"\nassert solution(\n'''\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n'''\n) == '70', \"Fifth example\"\n"
    },
    {
        "number": 3351,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n\") == 70\nassert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n\") == 70\nassert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n\") == 70\nassert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n\") == 70\nassert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1"
    },
    {
        "number": 3351,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n65\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n\"\"\") == \"70\"\nassert solution(\"\"\"\n10\n3 3 3 3 3 3 3 3 3 3 3 3\n3 3 3 3 3 3 3 3 3 3 3 3\n3 3 3 3 3 3 3 3 3 3 3 3\n3 3 3 3 3 3 3 3 3 3 3 3\n3 3 3 3 3 3 3 3 3 3 3 3\n3 3 3 3 3 3 3 3 3 3 3 3\n3 3 3 3 3 3 3 3 3 3 3 3\n3 3 3 3 3 3 3 3 3 3 3 3\n3 3 3 3 3 3 3 3 3 3 3 3\n\"\"\") == \"132\"\nassert solution(\"\"\"\n100\n6 6 6 6 6 6 6 6 6 6 6 6 6\n6 6 6 6 6 6 6 6 6 6 6 6 6\n6 6 6 6 6 6 6 6 6 6 6 6 6\n6 6 6 6 6 6 6 6 6 6 6 6 6\n6 6 6 6 6 6 6 6 6 6 6 6 6\n6 6 6 6 6 6 6 6 6 6 6 6 6\n6 6 6 6 6 6 6 6 6 6 6 6 6\n6 6 6 6 6 6 6 6 6 6 6 6 6\n6 6 6 6 6 6 6 6 6 6 6 6 6\n6 6 6 6 6 6 6 6 6 6 6 6 6\n6 6 6 6 6 6 6 6 6 6 6 6 6\n6 6 6 6 6 6 6 6 6 6 6 6 6\n6 6 6 6 6 6 6 6 6 6 6 6 6\n6 6 6 6"
    },
    {
        "number": 3351,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") is None\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"0\"\n"
    },
    {
        "number": 3351,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n\"\"\") == \"70\"\nassert solution(\"\"\"\n1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n\"\"\") == \"70\"\nassert solution(\"\"\"\n6\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n\"\"\") == \"200\"\nassert solution(\"\"\"\n10\n2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2"
    },
    {
        "number": 3351,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''65\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == '70'\nassert solution('''65\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == '70'\nassert solution('''65\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == '70'\nassert solution('''65\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == '70'\nassert solution('''65\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3351,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''65\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == '70'\nassert solution('''66\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6"
    },
    {
        "number": 3351,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 3351,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"1 1 1\") == \"4\"\nassert solution(\"1 1 1 1\") == \"8\"\n"
    },
    {
        "number": 3352,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n1\\n0\\n1\\n2\\n1\\n1\\n1\\n0\\n2') == '2\\n5\\n2\\n3\\n2\\n1\\n2\\n2\\n3\\n1\\n1'\nassert solution('1\\n2\\n1\\n0\\n1\\n2\\n1\\n1\\n1\\n0\\n2') == '2\\n5\\n2\\n3\\n2\\n1\\n2\\n2\\n3\\n1\\n1'\nassert solution('1\\n2\\n1\\n0\\n1\\n2\\n1\\n1\\n1\\n0\\n2') == '2\\n5\\n2\\n3\\n2\\n1\\n2\\n2\\n3\\n1\\n1'\nassert solution('1\\n2\\n1\\n0\\n1\\n2\\n1\\n1\\n1\\n0\\n2') == '2\\n5\\n2\\n3\\n2\\n1\\n2\\n2\\n3\\n1\\n1'\nassert solution('1\\n2\\n1\\n0\\n1\\n2\\n1\\n1\\n1\\n0\\n2') == '2\\n5\\n2\\n3\\n2\\n1\\n2\\n2\\n3\\n1\\n1'\n"
    },
    {
        "number": 3352,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3352,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3352,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n') == '7'\nassert solution('1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n') == '8'\nassert solution('1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n') == '7'\nassert solution('1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n') == '8'\nassert solution('1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n') == '7'\n"
    },
    {
        "number": 3352,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"abc\") == \"a,b,c\"\nassert solution(\"aba\") == \"a,b,a\"\nassert solution(\"a\") == \"a\"\nassert solution(\"b\") == \"b\"\nassert solution(\"a,b\") == \"a,b\"\n"
    },
    {
        "number": 3352,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '''10\n7\n8\n7\n7\n'''\nassert solution('''10 2\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '''8\n6\n8\n'''\nassert solution('''5 7\n2 3 4 5 6 7\n2 3 4 5 6 7\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '''7\n7\n6\n7\n6\n'''\nassert solution('''15 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1"
    },
    {
        "number": 3352,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n1\\n2\\n3\\n4\\n5"
    },
    {
        "number": 3352,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3352,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\\\n10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n\"\"\") == \"\"\"\\\n10\n7\n8\n7\n8\n\"\"\"\n\nprint(solution(\n\"\"\"\\\n10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n\"\"\") == \"\"\"\\\n10\n7\n8\n7\n8\n\"\"\"\n)\n"
    },
    {
        "number": 3352,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '10\\n7\\n8\\n7\\n8'\n'''\n'''\n"
    },
    {
        "number": 3353,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1') == '6'\nassert solution('2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\\n1 4\\n4 5\\n5 6\\n6 7') == '5'\nassert solution('2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\\n1 4\\n4 5\\n5 6\\n6 7\\n3 8\\n8 9\\n9 10\\n10 11') == '0'\nassert solution('2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\\n1 4\\n4 5\\n5 6\\n6 7\\n3 8\\n8 9\\n9 10\\n10 11\\n1 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20') == '5'\nassert solution('2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\\n1 4\\n4 5\\n5 6\\n6 7\\n3 8\\n8 9\\n9 10\\n10 11\\n1 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n5 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50') == '3'\n"
    },
    {
        "number": 3353,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1''') == '6'\nassert solution('''2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1''') == '6'\nassert solution('''2 4 7\n-2 1\n-2 3\n2 1\n2 3\n2 4\n2 6\n3 3\n3 6\n3 7\n4 0\n4 2\n4 3\n4 4\n4 5\n4 6\n4 7\n5 2\n5 3\n5 4\n5 6\n5 7\n6 1\n6 3\n6 4\n6 5\n6 6\n6 7\n7 1\n7 2\n7 3\n7 4\n7 5\n7 6\n7 7\n8 0\n8 1\n8 2\n8 3\n8 4\n8 5\n8 6\n8 7\n9 2\n9 3\n9 4\n9 5\n9 6\n9 7\n10 2\n10 3\n10 4\n10 5\n10 6\n10 7\n11 2\n11 3\n11 4\n11 5\n11 6\n11 7\n12 2\n12 3\n12 4\n12 5\n12 6\n12 7\n13 2\n13 3\n13 4\n13 5\n13 6\n13 7\n14 0\n14 1\n14 2\n14 3\n14 4\n14 5\n14 6\n14 7\n15 2\n15 3\n15 4\n15 5\n15 6\n15 7\n16 2\n16 3\n16 4\n16 5\n16 6\n16 7\n17 2\n17 3\n17 4\n17 5\n17 6\n17 7\n18 0\n18 1\n18 2\n18 3\n18 4\n18 5\n18 6\n18 7\n19 2\n19 3\n19 4\n19 5\n19 6\n19 7\n20 2\n20 3\n20 4\n20 5\n20 6\n20 7\n21 0\n21 1\n21 2\n21 3\n21 4\n21 5\n21 6\n21 7\n22 2\n22 3\n22 4\n22 5\n22 6\n22 7\n23 0\n23 1\n23 2\n23 3\n23 4\n23 5\n23 6\n23 7\n24 0\n24 1\n24 2\n24 3\n24 4\n24 5\n24 6\n24 7\n25 0\n25 1\n25 2\n25 3\n25 4\n25 5\n25 6\n25 7''') == '48'\nassert solution('''2 4 7\n-2 1\n-2 3\n2 1\n2 3\n2 4\n2 6\n3 3\n3 6\n3 7\n4 0\n4 2\n4 3\n4 4\n4 5\n4 6\n4 7\n5 2\n5 3\n5 4\n5 6\n5 7\n6 1\n6 3\n6 4\n6 5\n6 6\n6 7\n7 1\n7 2\n7 3\n7 4\n7 5\n7 6\n7 7\n8 0\n8 1\n8 2\n8 3\n8 4\n8 5\n8 6\n8 7\n9 2\n9 3\n9 4\n9 5\n9 6\n9 7\n10 2\n10 3\n10 4\n10 5\n10 6\n10 7\n11 2\n11 3\n11 4\n11 5\n11 6\n11 7\n12 2\n12 3\n12 4\n12 5\n12 6\n12 7\n13 2\n13 3\n13 4\n13 5\n13 6\n13 7\n14 2\n14 3\n14 4\n14 5\n14 6\n14 7\n15 2\n15 3\n15 4\n15 5\n15 6\n15 7\n16 2\n16 3\n16 4\n16 5\n16 6\n16 7\n17 2\n17 3\n17 4\n17 5\n17 6\n17 7\n18 0\n18 1\n18 2\n18 3\n18 4\n18 5\n18 6\n18 7\n19 2\n19 3\n19 4\n19 5\n19 6\n19 7\n20 2\n20 3\n20 4\n20 5\n20 6\n20 7\n21 0\n21 1\n21 2\n21 3\n21 4\n21 5\n21 6\n21 7\n22 2\n22 3\n22 4\n22 5\n22 6\n22 7\n23 0\n23 1\n23 2\n23 3\n23 4\n23 5\n23 6\n23 7\n24 0\n24 1\n24 2\n24 3\n24 4\n24 5\n24 6\n24 7\n25 0\n25 1\n25 2\n25 3\n25 4\n25 5\n25 6\n25 7\n26 0\n26 1\n26 2\n26 3\n26 4\n26 5\n26 6\n26 7\n27 0\n27 1\n27 2\n27 3\n27 4\n27 5\n27 6\n27 7\n28 0\n28 1\n28 2\n28 3\n28 4\n28 5\n28 6\n28 7\n29 2\n29 3\n29 4\n29 5\n29 6\n29 7\n30 2\n30 3\n30 4\n30 5\n30 6\n30 7\n31 2\n31 3\n31 4\n31 5\n31 6\n31 7\n32 0\n32 1\n32 2\n32 3\n32 4\n32 5\n32 6\n32 7\n33 0\n33 1\n33 2\n33 3\n33 4\n33 5\n33 6\n33 7\n34 0\n34 1\n34 2\n34 3\n34 4\n34 5\n34 6\n34 7\n35 0\n35 1\n35 2\n35 3\n35 4\n35 5\n35 6\n35 7\n36 0\n36 1\n36 2\n36 3\n36 4\n36 5\n36 6\n36 7\n37 0\n37 1\n37 2\n37 3\n37 4\n37 5\n37 6\n37 7\n38 0\n38 1\n38 2\n38 3\n38 4\n38 5\n38 6\n38 7\n39 0\n39 1\n39 2\n39 3\n39 4\n39 5\n39 6\n39 7\n40 0\n40 1\n40 2\n40 3\n40 4\n40 5\n40 6\n40 7\n41 0\n41 1\n41 2\n41 3\n41 4\n"
    },
    {
        "number": 3353,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 4 7\") == 6\nassert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == 6\nassert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\\n2 2\\n1 1\") == 2\nassert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\\n2 2\\n1 1\\n1 2\") == 1\nassert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\\n2 2\\n1 1\\n1 2\\n1 2\") == 1\n"
    },
    {
        "number": 3353,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1''') == '6'\nassert solution('''2 3 5\n-2 1\n0 1\n2 -1\n-2 3\n2 3\n3 -2\n-1 -2\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n4 -2''') == '0'\nassert solution('''3 4 7\n-2 1\n0 1\n2 -1\n-2 3\n2 3\n3 -2\n-1 -2\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n4 -2''') == '0'\nassert solution('''1 10 10\n-2 1\n0 1\n2 -1\n-2 3\n2 3\n3 -2\n-1 -2\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n4 -2''') == '9'\nassert solution('''1 1 1\n-2 1\n0 1\n2 -1\n-2 3\n2 3\n3 -2\n-1 -2\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n4 -2''') == '1'\n"
    },
    {
        "number": 3353,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"6\"\nassert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\\n-1 -1\\n1 0\") == \"10\"\nassert solution(\"1 1 1\\n-1 -1\\n0 0\\n-1 0\") == \"0\"\nassert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\\n-1 -1\\n1 0\") == \"4\"\nassert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\\n-1 -1\\n1 0\") == \"4\"\n"
    },
    {
        "number": 3353,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 4 7\") == \"6\"\nassert solution(\"2 4 7\") == \"6\"\nassert solution(\"2 4 7\") == \"6\"\nassert solution(\"2 4 7\") == \"6\"\nassert solution(\"2 4 7\") == \"6\"\n"
    },
    {
        "number": 3353,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 4 7\") == \"6\"\nassert solution(\"1 0\") == \"1\"\nassert solution(\"2 0\") == \"1\"\nassert solution(\"0 1\") == \"2\"\nassert solution(\"2 1\") == \"1\"\n"
    },
    {
        "number": 3353,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1') == '6'\nassert solution('2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\\n0 3\\n0 1\\n2') == '4'\nassert solution('2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\\n0 3\\n0 1\\n2\\n1\\n0') == '2'\nassert solution('1\\n0\\n1\\n1\\n1\\n1') == '2'\nassert solution('1\\n0\\n0\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 3353,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    '''2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1''') == '6'\n\nassert solution(\n    '''2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\n4 0\n1 1\n3 2\n5 3\n6 -1\n7 1\n1 1\n2 2\n2 3\n3 -1\n4 0\n1 1\n3 2\n5 3\n6 -1\n7 1\n1 1\n2 2\n2 3\n3 -1\n4 0\n1 1\n3 2\n5 3\n6 -1\n7 1\n1 1\n2 2\n2 3\n3 -1\n4 0\n1 1\n3 2\n5 3\n6 -1\n7 1''') == '3'\n\nassert solution(\n    '''3 4 6\n-1 -1\n0 0\n-1 1\n1 0\n2 1\n2 3\n3 -1\n4 0\n1 1\n3 2\n5 3\n6 -1\n7 1\n1 1\n2 2\n2 3\n3 -1\n4 0\n1 1\n3 2\n5 3\n6 -1\n7 1\n1 1\n2 2\n2 3\n3 -1\n4 0\n1 1\n3 2\n5 3\n6 -1\n7 1''') == '3'\n\nassert solution(\n    '''4 5 6\n-1 -1\n0 0\n-1 1\n1 0\n2 1\n2 3\n3 -1\n4 0\n1 1\n3 2\n5 3\n6 -1\n7 1\n1 1\n2 2\n2 3\n3 -1\n4 0\n1 1\n3 2\n5 3\n6 -1\n7 1''') == '3'\n\nassert solution(\n    '''3 2 3\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\n4 0\n1 1\n3 2\n5 3\n6 -1\n7 1\n1 1\n2 2\n2 3\n3 -1\n4 0\n1 1\n3 2\n5 3\n6 -1\n7 1''') == '3'"
    },
    {
        "number": 3353,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\\n') == '6'\nassert solution('1 1\\n0 0') == '0'\nassert solution('1 2\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\"
    },
    {
        "number": 3354,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 1 4 40') == '3'\nassert solution('1 1 4 40') == '3'\nassert solution('3 1 4 40') == '3'\nassert solution('1 1 4 40') == '3'\nassert solution('1 1 4 40') == '3'\n"
    },
    {
        "number": 3354,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1 4 4') == '3'\nassert solution('2 1 4 4') == '0'\nassert solution('1 1 3 3') == '3'\nassert solution('2 1 3 3') == '2'\nassert solution('1 1 1 3 3') == '3'\n"
    },
    {
        "number": 3354,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n3 1 4 40\n\"\"\"\n) == \"3\"\n\nassert solution(\n\"\"\"\n2 0.5 4 10\n\"\"\"\n) == \"0\"\n\nassert solution(\n\"\"\"\n2 2 0.5 4 10\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n2 2 2.5 4 10\n\"\"\"\n) == \"0\"\n\nassert solution(\n\"\"\"\n2 2 0.5 3 40\n\"\"\"\n) == \"1\""
    },
    {
        "number": 3354,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 1 4 40') == '3'\nassert solution('3 2 5 45') == '4'\nassert solution('2 3 5 45') == '3'\nassert solution('1.1 2.1 3.2 4.3') == '3'\nassert solution('0.5 0.5 0.5 0.5') == '3'\n"
    },
    {
        "number": 3354,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 3354,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 1 4 40''') == '3'\nassert solution('''3 1 2 10''') == '1'\nassert solution('''5 1 2 4 40''') == '3'\nassert solution('''10 1 2 4 40''') == '7'\nassert solution('''100 1 2 4 40''') == '8'\n"
    },
    {
        "number": 3354,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 1 4 40\") == \"3\"\nassert solution(\"3 2 3 4\") == \"0\"\nassert solution(\"3 4 6 8\") == \"3\"\nassert solution(\"7 7 7 7\") == \"2\"\nassert solution(\"7 3 5 4\") == \"2\"\n"
    },
    {
        "number": 3354,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 3354,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n'''\n\n'''\nREF: https://en.wikipedia.org/wiki/Radius_of_a_circular_segment\n\nThere are n circles with radii ri, i = 1, 2,..., n. We want to find the maximum number of circles whose area is a fraction of the total area.\n\nThe circles are ordered so that the area of the i-th circle is:\n - greater than the area of the (i - 1)-th circle if ri is greater than rj for all j > i - 1,\n - greater than or equal to the area of the (i - 1)-th circle if ri is equal to or greater than rj,\n - less than or equal to the area of the (i - 1)-th circle if ri is less than or equal to rj.\n\nLet f(n) be the maximum number of circles whose area is a fraction of the total area, i.e. f(n) = \\sum_{i = 1}^n f(i), where f(i) is the number of circles whose area is greater than or equal to the area of the i-th circle.\n\nLet f(n) be the fraction of the total area of the n-th circle.\n\nf(1) = 0.5, f(2) = 2/5, f(3) = 1/5, f(4) = 2/5, f(5) = 4/5, f(6) = 1/5, f(7) = 2/5, f(8) = 4/5, f(9) = 1/5, f(10) = 2/5\n\nf(1) = 0.5\nf(2) = 2/5 + 2/5 = 2\nf(3) = 1/5 + 1/5 = 1.5\nf(4) = 2/5 + 2/5 = 2.5\nf(5) = 4/5 + 4/5 = 4.5\nf(6) = 1/5 + 1/5 = 1.5\nf(7) = 2/5 + 2/5 = 2.5\nf(8) = 4/5 + 4/5 = 4.5\nf(9) = 1/5 + 1/5 = 1.5\nf(10) = 2/5 + 2/5 = 2.5\n\nLet g(n) be the number of circles whose area is greater than or equal to the area of the n-th circle.\n\ng(1) = 0, g(2) = 1, g(3) = 1, g(4) = 2, g(5) = 2, g(6) = 4, g(7) = 5, g(8) = 7, g(9) = 9, g(10) = 10\n\ng(1) = 0\ng(2) = 1\ng(3) = 1\ng(4) = 2\ng(5) = 2\ng(6) = 4\ng(7) = 5\ng(8) = 7\ng(9) = 9\ng(10) = 10\n\nTherefore, the maximum number of circles with a fraction of the total area is g(10).\n\n------Hint------\n* We can do some math and solve the problem in O(n) time.\n* But how would we do it without that?\n* Let's see what you can do in O(1) time!\n'''\n\ns, r = stdin.split(' ')\ns = float(s)\nr = float(r)\nn, z = stdin.split(' ')\nn = int(n)\nz = float(z)"
    },
    {
        "number": 3354,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 1 2 5''') == 3\nassert solution('''1 1 2 3''') == 4\nassert solution('''1 1 2 4''') == 2\nassert solution('''1 1 2 3''') == 2\nassert solution('''1 1 2 4''') == 2\n"
    },
    {
        "number": 3355,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0''') == '99'\nassert solution('''3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0''') == '3'\nassert solution('''3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n1 0 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1\n1 1 1 0 1"
    },
    {
        "number": 3355,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == input_expected\nprint(solution(input))\n\"\"\"\n\nimport unittest"
    },
    {
        "number": 3355,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3355,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0') == '99\\n3\\n'\nassert solution('3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n') == '99\\n3\\n'\nassert solution('4 35\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4') == '0\\n'\nassert solution('3 2\\n1 1 1\\n1 1 1') == '0\\n'\nassert solution('6 10\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1') == '12\\n3 2 1 4 5\\n'\n"
    },
    {
        "number": 3355,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0''') == '99\\n3\\n'\nassert solution('''3 51\n1 2 3\n3 4 5\n3 4 1''') == '0\\n'\nassert solution('''3 50\n2 1 3\n3 4 5\n3 4 1''') == '0\\n'\nassert solution('''3 51\n1 1 1\n2 2 2\n3 3 3\n3 4 5\n3 4 1''') == '3\\n'\nassert solution('''3 51\n1 1 1\n2 2 2\n3 3 3\n3 4 5\n3 4 1''') == '3\\n'\n"
    },
    {
        "number": 3355,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0''') == '99'\nassert solution('''3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n1 1 1\n1 1 1\n1 1 1''') == '99'\nassert solution('''3 352\n1 1 1\n1 1 1\n1 1 1\n1 1 1''') == '99'\nassert solution('''3 352\n1 1 1\n1 1 1\n1 1 1\n1 1 1''') == '99'\nassert solution('''3 352\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n99 62 -1\n"
    },
    {
        "number": 3355,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3355,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0''') == '99'\nassert solution('''3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0''') == '3'\nassert solution('''3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n0 0 0 0 0''') == '0'\nassert solution('''3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n0 0 0 0 0''') == ''\nassert solution('''3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n0 0 0 0 0''') == ''\n"
    },
    {
        "number": 3355,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0''') == '99\\n3\\n'\nassert solution('''3 352\n-1 -1 -1\n1 1 1\n1 1 1\n1 1 1''') == ''\nassert solution('''3 352\n1 1 1\n1 1 1\n1 1 1''') == '99\\n'\nassert solution('''3 352\n1 -1 -1\n1 1 1\n1 1 1\n1 1 1''') == '99\\n3\\n'\nassert solution('''3 352\n1 1 1\n1 1 1\n1 1 1''') == '99\\n'\n"
    },
    {
        "number": 3355,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\") == \"99\\n3\\n\"\nassert solution(\"1 2\\n1 1 1\\n2 0 1\") == \"0\\n\"\nassert solution(\"2 1\\n1 1 1\\n2 0 1\") == \"0\\n\"\nassert solution(\"2 1\\n2 0 1\") == \"0\\n\"\nassert solution(\"1 1\\n1 0 1\") == \"0\\n\"\n"
    },
    {
        "number": 3356,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1\\n1') == '1'\nassert solution('1\\n2\\n2\\n2') == '2'\nassert solution('2\\n2\\n1') == '2'\n"
    },
    {
        "number": 3356,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n1 2\n2 3\n3 4''') == '2\\n3 4\\n4 2'\nassert solution('''2\n1 2\n''') == '1\\n1 2'\nassert solution('''1\n2\n3\n4''') == '1 2'\nassert solution('''1\n1\n2\n3\n4\n5\n6''') == '1 2'\nassert solution('''4\n1 2\n2 3\n3 4\n4 1\n1 4\n''') == '1 2'\n"
    },
    {
        "number": 3356,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(dedent(\"\"\"\n    5\n    1 2\n    2 3\n    3 4\n    3 1\n    4 4\n    \"\"\")) == \"2\\n3 4\\n4 2\"\n\nassert solution(dedent(\"\"\"\n    5\n    1 1\n    1 3\n    1 4\n    1 5\n    2 1\n    2 5\n    3 1\n    3 2\n    4 1\n    4 2\n    5 3\n    5 4\n    \"\"\")) == \"1\\n1 4\\n2 5\"\n\nassert solution(dedent(\"\"\"\n    5\n    1 1\n    1 3\n    1 4\n    1 5\n    2 1\n    2 5\n    3 1\n    3 2\n    4 1\n    4 2\n    5 3\n    5 4\n    \"\"\")) == \"1\\n1 4\\n2 5\"\n\nassert solution(dedent(\"\"\"\n    5\n    1 1\n    1 3\n    1 4\n    1 5\n    2 1\n    2 5\n    3 1\n    3 2\n    4 1\n    4 2\n    5 3\n    5 4\n    5 1\n    \"\"\")) == \"1\\n1 4\\n2 5\"\n\nassert solution(dedent(\"\"\"\n    5\n    1 1\n    1 3\n    1 4\n    1 5\n    2 1\n    2 5\n    3 1\n    3 2\n    4 1\n    4 2\n    5 3\n    5 4\n    5 1\n    \"\"\")) == \"1\\n1 4\\n2 5\""
    },
    {
        "number": 3356,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\n2\n3\n4\n1 2\n1 3\n4''') == '2\\n3 4\\n4 2\\n'\nassert solution('''2\n1\n2\n3\n4\n1 2\n1 3\n3 4\n4 1\n3 2\n''') == '2\\n3 4\\n3 2\\n'\nassert solution('''4\n1 2\n2 3\n3 4\n1 2\n2 3\n1 3\n1 4\n2 4\n3 4\n1 4\n2 4\n1 3\n2 4\n3 4\n1 4\n2 3\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n1 4\n3 4\n3 2\n2 4\n1 4\n3 4\n3 2\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n3 2\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n3 2\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n3 2\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n3 4\n1 4\n2 4\n3 4\n1 2\n"
    },
    {
        "number": 3356,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n1 2\n2 3\n3 4''') == '2\\n3 4\\n4 2\\n'\nassert solution('''5\n1 4\n3 4\n4 1\n5 4\n2 3\n1 2\n3 4\n3 2\n3 1\n2 1\n4 1\n2 4\n1 4\n2 2''') == '3\\n4\\n4 1\\n'\nassert solution('''2\n2\n1 2\n2 3\n1 3\n2 4\n2 3''') == '2\\n1 3\\n2 1\\n'\nassert solution('''5\n1 4\n1 2\n1 3\n1 4\n2 3\n3 2\n1 4\n1 4\n3 2\n3 3\n3 1\n2 3\n3 1''') == '2\\n1 3\\n1 2\\n2 3\\n3 1\\n'\nassert solution('''2\n1 2\n1 2\n1 2\n1 2''') == '2\\n1 2\\n1 2\\n1 2\\n1 2\\n'\n"
    },
    {
        "number": 3356,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output\nprint(solution(stdin))\n'''"
    },
    {
        "number": 3356,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3\\n4') == '2\\n4 2\\n3 4'\nassert solution('1\\n2\\n2\\n3\\n4') == '2\\n2 2\\n4 3'\nassert solution('1\\n2\\n3\\n3') == '3\\n3 2'\nassert solution('1\\n2\\n3\\n4\\n5') == '3\\n4 3\\n1 2'\n\"\"\""
    },
    {
        "number": 3356,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == '2\\n3 4\\n5 2'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '2\\n3 4\\n5 2\\n6 1\\n7 1\\n8 1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50') == '2\\n3 4\\n5 2\\n6 1\\n7 1\\n8 1'\n"
    },
    {
        "number": 3356,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n1 2\n2 3\n3 4''') == '2\\n3 4\\n4 2'\nassert solution('''6\n1 2\n1 3\n2 3\n3 4\n4 5\n5 6''') == '2\\n5 6\\n4 2'\nassert solution('''7\n1 2\n1 3\n1 4\n1 5\n1 6\n2 3\n3 4\n4 5\n5 6''') == '3\\n5 6\\n5 4'\nassert solution('''8\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n3 4\n3 5\n3 6\n3 7\n3 8\n4 5\n4 6\n4 7\n4 8\n5 6\n5 7\n5 8\n6 7\n6 8\n7 8''') == '1\\n1 8\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 5\\n4 6\\n4 7\\n5 6\\n5 7\\n6 7\\n6 8\\n7 8'\n\nprint(solution(input()))\n"
    },
    {
        "number": 3356,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n1 2\n2 3\n3 4\n''') == '2\\n3 4\\n4 2\\n'\nassert solution('''4\n1 2\n1 3\n3 4\n''') == '3\\n4 1\\n'\nassert solution('''4\n1 2\n2 3\n3 4\n''') == '2\\n4 1\\n'\nassert solution('''4\n1 2\n2 3\n3 4\n''') == '3\\n4 1\\n'\nassert solution('''4\n1 2\n2 3\n3 4\n1 1\n''') == '1\\n3 4\\n'\n"
    },
    {
        "number": 3357,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1.0\"\nassert solution(\"2\") == \"2.0\"\nassert solution(\"3\") == \"3.0\"\nassert solution(\"4\") == \"4.0\"\nassert solution(\"5\") == \"5.0\"\n"
    },
    {
        "number": 3357,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n4\n1 1\n2 2\n3 2\n4 1\n\"\"\"\n) == \"\"\"\n9.0000\n12\n12.00000\n9.0\n\"\"\"\n\nassert solution(\n\"\"\"\n10\n5 1\n3 2\n3 3\n4 1\n7 3\n8 2\n7 2\n6 1\n5 2\n9 4\n\"\"\"\n) == \"\"\"\n28.0\n12.5\n13.25\n9.0\n\"\"\"\n"
    },
    {
        "number": 3357,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n1 1\n2 2\n3 2\n4 1''') == '9.0000\\n12\\n12.00000\\n9.0'\nassert solution('''1\n1 1\n1 1\n1 1\n1 1''') == '9.0000\\n9.0000\\n9.0000\\n9.0000'\nassert solution('''6\n1 1\n2 2\n3 2\n4 1\n5 1\n6 1''') == '0.4999\\n0.4999\\n0.4999\\n0.4999\\n0.4999\\n0.4999'\nassert solution('''7\n1 1\n2 2\n3 2\n4 1\n5 1\n6 1\n7 1''') == '0.0049\\n0.0049\\n0.0049\\n0.0049\\n0.0049\\n0.0049\\n0.0049'\nassert solution('''8\n1 1\n2 2\n3 2\n4 1\n5 1\n6 1\n7 1\n8 1''') == '0.0049\\n0.0049\\n0.0049\\n0.0049\\n0.0049\\n0.0049\\n0.0049\\n0.0049'\n"
    },
    {
        "number": 3357,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\n\"\"\"\nAnother example:\n\nSample Input:\n6\n5 1\n6 4\n4 1\n3 4\n1 1\n1 1\nSample Output:\n5.6\n6\n5.5\n5.0\n5.0\n5.0\n\"\"\""
    },
    {
        "number": 3357,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\"9.0000\n12\n12.00000\n9.0\"\"\"\n"
    },
    {
        "number": 3357,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"4\n1 1\n2 2\n3 2\n4 1\"\"\") == \"9.0000\\n12\\n12.00000\\n9.0\"\n\"\"\"\n\n1. This question is similar to the k-pairs problem.\n2. This question is similar to the number of ways to order a k-mer.\n3. This question is similar to the maximum subarray problem.\n4. This question is similar to the maximum profit substring problem.\n5. This question is similar to the matching pennies problem.\n6. This question is similar to the longest common substring problem.\n7. This question is similar to the longest palindromic substring.\n8. This question is similar to the longest common supersequence.\n9. This question is similar to the largest integer divisible by k.\n10. This question is similar to the largest multiple of k.\n11. This question is similar to the number of different ways to partition a string.\n12. This question is similar to the number of partitions of a word.\n13. This question is similar to the number of partitions of a string, where the string is made up of \"1s\" and \"0s\".\n14. This question is similar to the number of partitions of a string, where the string is made up of \"1s\" and \"0s\".\n15. This question is similar to the number of partitions of a string, where the string is made up of \"1s\" and \"0s\".\n16. This question is similar to the number of partitions of a string, where the string is made up of \"1s\" and \"0s\".\n17. This question is similar to the number of partitions of a string, where the string is made up of \"1s\" and \"0s\".\n18. This question is similar to the number of partitions of a string, where the string is made up of \"1s\" and \"0s\".\n19. This question is similar to the number of partitions of a string, where the string is made up of \"1s\" and \"0s\".\n20. This question is similar to the number of partitions of a string, where the string is made up of \"1s\" and \"0s\".\n21. This question is similar to the number of partitions of a string, where the string is made up of \"1s\" and \"0s\".\n22. This question is similar to the number of partitions of a string, where the string is made up of \"1s\" and \"0s\".\n23. This question is similar to the number of partitions of a string, where the string is made up of \"1s\" and \"0s\".\n24. This question is similar to the number of partitions of a string, where the string is made up of \"1s\" and \"0s\".\n25. This question is similar to the number of partitions of a string, where the string is made up of \"1s\" and \"0s\".\n26. This question is similar to the number of partitions of a string, where the string is made up of \"1s\" and \"0s\".\n27. This question is similar to the number of partitions of a string, where the string is made up of \"1s\" and \"0s\".\n28. This question is similar to the number of partitions of a string, where the string is made up of \"1s\" and \"0s\".\n29. This question is similar to the number of partitions of a string, where the string is made up of \"1s\" and \"0s\".\n30. This question is similar to the number of partitions of a string, where the string is made up of \"1s\" and \"0s\".\n31. This question is similar to the number of partitions of a string, where the string is made up of \"1s\" and \"0s\".\n32. This question is similar to the number of partitions of a string, where the string is made up of \"1s\" and \"0s\".\n33. This question is similar to the number of partitions of a string, where the string is made up of \"1s\" and \"0s\".\n34. This question is similar to the number of partitions of a string, where the string is made up of \"1s\" and \"0s\".\n35. This question is similar to the number of partitions of a string, where the string is made up of \"1s\" and \"0s\".\n36. This question is similar to the number of partitions of a string, where the string is made up of \"1s\" and \"0s\".\n37. This question is similar to the number of partitions of a string, where the string is made up of \"1s\" and \"0s\".\n38. This question is similar to the number of partitions of a string, where the string is made up of \"1s\" and \"0s\".\n39. This question is similar to the number of partitions of a string, where the string is made up of \"1s\" and \"0s\".\n40. This question is similar to the number of partitions of a string, where the string is made up of \"1s\" and \"0s\".\n41. This question is similar to the number of partitions of a string, where the string is made up of \"1s\" and \"0s\".\n42. This question is similar to the number of partitions of a string, where the string is made up of \"1s\" and \"0s\".\n43. This question is similar to the number of partitions of a string, where the string is made up of \"1s\" and \"0s\".\n44. This question is similar to the number of partitions of a string, where the string is made up of \"1s\" and \"0s\".\n45. This question is similar to the number of partitions of a string, where the string is made up of \"1s\" and \"0s\".\n46. This question is similar to the number of partitions of a string, where the string is made up of \"1s\" and \"0s\".\n47. This question is similar to the number of partitions of a string, where the string is made up of \"1s\" and \"0s\".\n48. This question is similar to the number of partitions of a string, where the string is made up of \"1s\" and \"0s\".\n49. This question is similar to the number of partitions of a string, where the string is made up of \"1s\" and \"0s\".\n50. This question is similar to the number of partitions of a string, where the string is made up of \"1s\" and \"0s\".\n51. This question is similar to the number of partitions of a string, where the string is made up of \"1s\" and \"0s\".\n52. This question is similar to the number of partitions of a string, where the string is made up of \"1s\" and \"0s\".\n53. This question is similar to the number of partitions of a string, where the string is made up of \"1s\" and \"0s\".\n54. This question is similar to the number of partitions of a string, where the string is made up of \"1s\" and \"0s\".\n55. This question is similar to the number of partitions of a string, where the string is made up of \"1s\" and \"0s\".\n56. This question is similar to the number of partitions of a string, where the string is made up of \"1s\" and \"0s\".\n57. This question is similar to the number of partitions of a"
    },
    {
        "number": 3357,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"4\n1 1\n2 2\n3 2\n4 1\n\"\"\".strip()) == \"9.0000\\n12\\n12.00000\\n9.0\"\n\nassert solution(\n    \"\"\"5\n1 1\n2 2\n3 2\n4 1\n5 0\n\"\"\".strip()) == \"1.9000\\n3.0000\\n3.9000\\n3.9000\\n5.0000\"\n"
    },
    {
        "number": 3357,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\\n\") == \"9.0000\\n12\\n12.00000\\n9.0\"\n\"\"\"\n"
    },
    {
        "number": 3357,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n1 1\\n2 2\\n3 2\\n4 1') == '9.0000\\n12\\n12.00000\\n9.0\\n'\n\nassert solution('4\\n1 1\\n2 2\\n3 2\\n4 1\\n5 3\\n7 7') == '60.0000\\n'\nassert solution('4\\n1 1\\n2 2\\n3 2\\n4 1\\n5 3\\n7 7\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n') == '60.0000\\n'\nassert solution('5\\n1 1\\n2 2\\n3 2\\n4 1\\n5 2\\n6 3\\n7 7\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n') == '96.00000\\n'\nassert solution('5\\n1 1\\n2 2\\n3 2\\n4 1\\n5 2\\n6 3\\n7 7\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n') == '96.00000\\n'\n"
    },
    {
        "number": 3357,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n4\n1 1\n2 2\n3 2\n4 1\n''') == '9.0000\\n12\\n12.00000\\n9.0\\n'\nassert solution('''\n7\n1 1\n2 2\n3 2\n4 1\n5 1\n6 1\n7 1\n''') == '31.5\\n62.0\\n31.5\\n31.5\\n'\nassert solution('''\n8\n1 1\n2 2\n3 2\n4 1\n5 1\n6 1\n7 1\n8 1\n''') == '42.5\\n76.5\\n42.5\\n42.5\\n'\nassert solution('''\n10\n1 1\n2 2\n3 2\n4 1\n5 1\n6 1\n7 1\n8 1\n9 1\n10 1\n''') == '108.5\\n156.5\\n108.5\\n108.5\\n'\nassert solution('''\n12\n1 1\n2 2\n3 2\n4 1\n5 1\n6 1\n7 1\n8 1\n9 1\n10 1\n11 1\n12 1\n''') == '159.5\\n204.5\\n159.5\\n159.5\\n'\n'''"
    },
    {
        "number": 3358,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y'\nassert solution('7') == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nAD\\nPL Z\\nST X\\nPH Z\\nST A\\nDI A'\nassert solution('1') == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y'\nassert solution('255') == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nAD\\nPL Z\\nST X\\nPH Z\\nST A\\nDI A'\nassert solution('256') == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nAD\\nPL Z\\nST X\\nPH Z\\nST A\\nDI A'\n"
    },
    {
        "number": 3358,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2') == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y'\nassert solution('1') == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y'\nassert solution('123456789') == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y'\nassert solution
    },
    {
        "number": 3358,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2') == 'ST A\\nST X\\nPH A\\nPH X\\nAD'\nassert solution('1') == 'ST A\\nST X\\nZE A\\nST X\\nST A\\nST X\\nPL X\\nPL Y\\nDI Y\\nDI A'\nassert solution('0') == 'ST A\\nST X\\nZE A\\nST X\\nST A\\nST X\\nPL X\\nPL Y\\nDI Y\\nDI A'\nassert solution('255') == 'ST A\\nST X\\nZE A\\nST X\\nST A\\nST X\\nPL X\\nPL Y\\nDI Y\\nDI A'\n\"\"\"\n"
    },
    {
        "number": 3358,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2') == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y'\nassert solution('11') == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nST Y\\nPL Y\\nDI Y'\nassert solution('120') == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y'\nassert solution('1110001') == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nST Y\\nPL Y\\nDI Y'\nassert solution('3') == 'ST A\\nST X\\nPH A\\nPH X\\nST B\\nST Y\\nPL Y\\nDI Y'\n"
    },
    {
        "number": 3358,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2') == 'ST A'\nassert solution('10') == 'ST A'\nassert solution('30') == 'ST A'\nassert solution('40') == 'ST A'\nassert solution('255') == 'ST A'\n"
    },
    {
        "number": 3358,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2') == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y'\n\nassert solution('2') == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y'\n\nassert solution('2') == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y'\n\nassert solution('2') == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y'\n\nassert solution('2') == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y'"
    },
    {
        "number": 3358,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'ST A\\nST X\\nPL A\\nPL X\\nAD\\nDI Y\\n'\n\n\"\"\"\n"
    },
    {
        "number": 3358,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2') == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n'\n\n\"\"\"\n\nimport os\nfrom typing import List\n\n\"\"\"\n------- TODO --------\nadd checking of invalid inputs\n\n------ BONUS -------\n\n------- Notes ------------\n\n\"\"\"\n\nclass LaserDisplay:\n    def __init__(self) -> None:\n        self.registers = {\n            'A': 0,\n            'X': 0,\n            'Y': 0,\n            'SP': -1\n        }\n        self.stack = []\n\n    def register(self, r: str) -> None:\n        if r in self.registers:\n            return\n        raise ValueError('Invalid register')\n\n    def push(self, r: str) -> None:\n        self.register(r)\n        self.stack.append(self.registers[r])\n\n    def pop(self, r: str) -> None:\n        self.register(r)\n        self.registers[r] = self.stack.pop()\n\n    def add(self, r1: str, r2: str) -> None:\n        self.register(r1)\n        self.register(r2)\n        self.stack.append((self.registers[r1] + self.registers[r2]) & 0xff)\n\n    def set_zero(self, r: str) -> None:\n        self.register(r)\n        self.registers[r] = 0\n\n    def set_one(self, r: str) -> None:\n        self.register(r)\n        self.registers[r] = 1\n\n    def output_to_board(self) -> None:\n        os.system('echo \"{}\"'.format(self.registers['Y']))\n\n    def get_reg_value(self, r: str) -> int:\n        self.register(r)\n        return self.registers[r]\n\n    def get_all_regs(self) -> str:\n        return ''.join(map(lambda reg: reg + '\\t' + str(self.get_reg_value(reg)), ['A', 'X', 'Y']))\n\n    def set_reg(self, r: str, value: int) -> None:\n        self.register(r)\n        self.registers[r] = value\n\n    def run(self) -> None:\n        while True:\n            line = input()\n            line = line.split(' ')\n            if line[0] == 'AD':\n                self.add(line[1], line[2])\n            elif line[0] == 'ST':\n                self.set_reg(line[1], int(line[2]))\n            elif line[0] == 'PL':\n                self.pop(line[1])\n            elif line[0] == 'PH':\n                self.push(line[1])\n            elif line[0] == 'ZE':\n                self.set_zero(line[1])\n            elif line[0] == 'ST':\n                self.set_one(line[1])\n            elif line[0] == 'DI':\n                self.output_to_board()\n                exit()\n            elif line[0] == 'GET':\n                print(self.get_all_regs())\n            elif line[0] == 'SET':\n                self.set_reg(line[1], int(line[2]))\n"
    },
    {
        "number": 3358,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(2) == \"ST A\\nST X\\nPL A\\nPL X\\nAD\\nDI Y\"\nassert solution(3) == \"ST A\\nST X\\nST Y\\nPL A\\nPL X\\nPL Y\\nAD\\nDI Y\"\nassert solution(123456789) == \"ST A\\nST X\\nST Y\\nST Z\\nPL A\\nPL X\\nPL Y\\nPL Z\\nAD\\nDI Y\"\nassert solution(1234567890123456789012345678901234567890123456789012345678901234567890) == \"ST A\\nST X\\nST Y\\nST Z\\nPL A\\nPL X\\nPL Y\\nPL Z\\nST D\\nST E\\nST F\\nPL A\\nPL X\\nPL Y\\nPL Z\\nAD\\nDI Y\"\n\"\"\""
    },
    {
        "number": 3358,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2') == 'ST A\\nST X\\nPH A\\nPH X\\n'\nassert solution('3') == 'ST A\\nST X\\nST Y\\nPL A\\nPL X\\nPL Y\\nAD\\nPL A\\nPL X\\n'\nassert solution('4') == 'ST A\\nST X\\nST Y\\nPL A\\nPL X\\nPL Y\\nAD\\nPL A\\nPL X\\nST A\\nST Y\\n'\nassert solution('5') == 'ST A\\nST X\\nST Y\\nPL A\\nPL X\\nPL Y\\nAD\\nPL A\\nPL X\\nST A\\nST Y\\n'\nassert solution('6') == 'ST A\\nST X\\nST Y\\nPL A\\nPL X\\nPL Y\\nAD\\nPL A\\nPL X\\nST A\\nST Y\\n'\n"
    },
    {
        "number": 3359,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 5 6') == '2'\nassert solution('2 5 6') == '2'\nassert solution('3 5 6') == '2'\nassert solution('4 5 6') == '2'\nassert solution('5 5 6') == '2'\n"
    },
    {
        "number": 3359,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 5 6') == '2'\nassert solution('1 3 2') == '2'\nassert solution('1 2 1') == '3'\nassert solution('1 1 1') == '0'\nassert solution('1 1 1') == '0'\n"
    },
    {
        "number": 3359,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 5 6') == '2'\nassert solution('2 3 4') == '1'\nassert solution('0 1 2') == '0'\nassert solution('FF F F F') == 'FF'\nassert solution('FFFF FFFF') == 'FFFF'\n"
    },
    {
        "number": 3359,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\") == \"2\"\nassert solution(\"2 2 3\") == \"3\"\nassert solution(\"2 2 3\") == \"3\"\nassert solution(\"2 2 3\") == \"3\"\nassert solution(\"1 5 6\") == \"2\"\n"
    },
    {
        "number": 3359,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == \"2\"\n\nassert solution(\"2 3 5\\nFFF\\nFFFFFFF\\nFFFFFFF\\nFF\\nFFFFFFFF\\nF\\nFFFFFFFFFF\\nFFFFFFFFFF\\nFFFFFFFFFF\") == \"4\"\n\nassert solution(\"1 1 3\\nFF\\nFFFFFFFF\") == \"1\"\n\nassert solution(\"1 1 3\\nFFFFFFFF\\nFFFFFFFF\\nFFFFFFFF\\nFF\") == \"0\"\n\nassert solution(\"1 1 3\\nFFFFFFFF\\nFF\\nFFFFFFFFFF\") == \"1\""
    },
    {
        "number": 3359,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 5 6') == '2'\nassert solution('2 4 7') == '1'\nassert solution('3 4 7') == '0'\nassert solution('2 3 7') == '1'\nassert solution('2 2 7') == '1'\n"
    },
    {
        "number": 3359,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 5 6\n0000 FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000\n''') == \"2\"\n\"\"\""
    },
    {
        "number": 3359,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n1 5 6\n0000 FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000\n''') == '2'\n'''\n\nimport sys"
    },
    {
        "number": 3359,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n"
    },
    {
        "number": 3359,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 5 6\\n0000 FFFF 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\\n') == '2'\n\"\"\""
    },
    {
        "number": 3360,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome\n''') == 'abaaba'\nassert solution('''\n1\nS -> a\nS -> b\nS -> \n''') == 'NONE'\nassert solution('''\n1\nS -> a\nS -> b\nS -> \n''') == 'NONE'\nassert solution('''\n1\nS -> a\nS -> b\nS -> \n''') == 'NONE'\nassert solution('''\n1\nS -> a\nS -> b\nS -> \n''') == 'NONE'\n"
    },
    {
        "number": 3360,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''S -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome''') == 'abaaba'\nassert solution('''S -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome''') == 'NONE'\nassert solution('''S -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome''') == 'abbbbbbbbbbbbbbba'\nassert solution('''S -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome''') == 'a'\nassert solution('''S -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome''') == 'NONE'\n"
    },
    {
        "number": 3360,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('solution') == 'abaaba'\nassert solution('sample') == 'abbbbbbbbbbbbbbbbba'\nassert solution('none') == 'NONE'\nassert solution('abacaba') == 'abacaba'\nassert solution('aabaaaaaababbbaaabbbbaaaaaabbbaaababaabaabaaaaaaaaaaaaaaaabaaa') == 'abaaba'\n"
    },
    {
        "number": 3360,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('S -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\n') == 'abaaba'\nassert solution('S -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\n') == 'abbbbbbbbbbbbbbbbba'\nassert solution('S -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\n') == 'a'\nassert solution('S -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\n') == 'a'\nassert solution('S -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\n') == 'abbbbbbbbbbbbbbbbba'\n"
    },
    {
        "number": 3360,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''S -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome''') == 'abaaba'\nassert solution('''S -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome''') == 'abbbbbbbbbbbbbbba'\nassert solution('''S -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome''') == 'a'\nassert solution('''S -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome''') == 'a'\nassert solution('''S -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome''') == 'a'\n"
    },
    {
        "number": 3360,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''S -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome''') == \"abbbbbbbbbbbbbbba\"\nassert solution('''S -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome''') == \"abbbbbbbbbbbbbbba\"\nassert solution('''S -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome''') == \"abbbbbbbbbbbbbbba\"\nassert solution('''S -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome''') == \"abbbbbbbbbbbbbbba\"\nassert solution('''S -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome''') == \"abbbbbbbbbbbbbbba\"\n"
    },
    {
        "number": 3360,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"SAMPLE\") == \"S\"\nassert solution(\"\") == \"NONE\"\nassert solution(\"NONE\") == \"NONE\"\nassert solution(\"S->aSa\") == \"abaaba\"\nassert solution(\"S->bSb\") == \"abbbbbbbbbbbbbbbbba\"\n"
    },
    {
        "number": 3360,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'abaaba'"
    },
    {
        "number": 3360,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \n''') == 'abaaba'\n\nassert solution(\n'''5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome\n''') == 'abbbbbbbbbbbbbbbbba'\n\nassert solution(\n'''4\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\na single b is a palindrome\n''') == 'a'\n\nassert solution(\n'''4\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome\n''') == 'abbbbbbbbbbbbbbbbba'\n\nassert solution(\n'''7\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome\n''') == 'abbbbbbbbbbbbbbbbba'"
    },
    {
        "number": 3360,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"S -> aSa\") == \"abaaba\"\nassert solution(\"S -> bSb\") == \"abbbbbbbbbbbbbbbbba\"\nassert solution(\"S -> a\") == \"a\"\nassert solution(\"S -> b\") == \"b\"\nassert solution(\"S ->.\") == \"NONE\"\n"
    },
    {
        "number": 3361,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n4\\n2\\n3\\n0\") == \"6\"\nassert solution(\"2\\n0\") == \"0\"\nassert solution(\"4\\n2\\n0\") == \"4\"\nassert solution(\"4\\n2\\n1\") == \"1\"\nassert solution(\"4\\n4\\n4\\n1\") == \"3\"\n"
    },
    {
        "number": 3361,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n') == '5'\nassert solution('2\\n') == '5'\nassert solution('3\\n') == '5'\nassert solution('4\\n') == '5'\nassert solution('5\\n') == '8'\n"
    },
    {
        "number": 3361,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n3\\n7\\n0\\n4') == '4'\nassert solution('3\\n0\\n1\\n2') == '3'\nassert solution('1\\n2\\n3\\n4') == '3'\nassert solution('5\\n4\\n3\\n2\\n1') == '4'\nassert solution('5\\n4\\n3\\n2\\n1') == '4'\n"
    },
    {
        "number": 3361,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4') == 0\nassert solution('1 2 4 3') == 3\nassert solution('1 4 3 2') == 4\nassert solution('1 4 2 4') == 0\nassert solution('1 5 1 2 3') == 4\n"
    },
    {
        "number": 3361,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"6\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"10\"\n"
    },
    {
        "number": 3361,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n"
    },
    {
        "number": 3361,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n4 5 0 2\n1 3 7\n2 0\n4\n''') == '4'\nassert solution('''5\n4 5 0 2\n1 3 7\n2 0\n3\n''') == '4'\nassert solution('''5\n4 5 0 2\n1 3 7\n2 0\n3\n''') == '2'\nassert solution('''5\n4 5 0 2\n1 3 7\n2 0\n3\n''') == '2'\nassert solution('''10\n4 5 0 2\n1 3 7\n2 0\n3\n''') == '7'\n"
    },
    {
        "number": 3361,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0 4\"\n\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 3361,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 777 778 779 780 781 782 783 784 785 786 787 788 789 790 791 792 793 794 795 796 797 798 799 800 801 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 862 863 864 865 866 867 868 869 870 871 872 873 874 875 876 877 878 879 880 881 882 883 884 885 886 887 888 889 890 891 892 893 894 895 896 897 898 899 900 901 902 903 904 905 906 907 908 909 910 911 912 913 914 915 916 917 918 919 920 921 922 923 924 925 926 927 928 929 930 931 932 933 934 935 936 937 938 939 940 941 942 943 944 945 946 947 948 949 950 951 952 953 954 955 956 957 958 959 960 961 962 963 964 965 966 967 968 969 970 971 972 973 974 975 976 977 978 979 980 981 982 983 984 985 986 987 988 989 990 991 992 993 994 995 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 1007 1008 1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020"
    },
    {
        "number": 3361,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"7\"\n\n---\n\nHint:\n\n1. Be careful with the definition of \"similar\" and the definition of \"disparity\".\n2. Try to think of a well-known partitioning problem, and the partitioning algorithm we are about to apply.\n3. Start with a question that is easy to solve with some basic analysis. Then try to use the knowledge of a problem to solve a more difficult one.\n4. Let's look at another example. Try to think of a partition problem that is easy to solve, but harder to use.\n\nIf you are uncertain about the approach or solution, you can look for a solution online.\n\n-----\n\nhttps://www.codewars.com/kata/mining-the-ore-stone\n\n### Mining the Ore Ore Stone ###\n\n### Task:\n### In this challenge, you'll be given the sizes of two ore piles. You need to figure out if these piles have the same material or not. You can assume that each pile is made of an equal number of stones.\n\n### Example:\n"
    },
    {
        "number": 3362,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"GO FOR IT\"\n\"\"\"\n"
    },
    {
        "number": 3362,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(open(\"inputs/sample_input_1.txt\", \"r\").read()) == \"GO FOR IT\"\nassert solution(open(\"inputs/sample_input_2.txt\", \"r\").read()) == \"NO WAY\"\nassert solution(open(\"inputs/sample_input_3.txt\", \"r\").read()) == \"SUCCESS\"\nassert solution(open(\"inputs/sample_input_4.txt\", \"r\").read()) == \"NO CHANCE\"\nassert solution(open(\"inputs/sample_input_5.txt\", \"r\").read()) == \"NO WAY\"\n"
    },
    {
        "number": 3362,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == 'GO FOR IT'\nassert solution(input()) == 'NO WAY'\nassert solution(input()) == 'NO CHANCE'\nassert solution(input()) == 'SUCCESS'\nassert solution(input()) == 'NO WAY'\n"
    },
    {
        "number": 3362,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') is None\nassert solution('4 3') == 'NO WAY'\nassert solution('4 2') == 'NO WAY'\nassert solution('1 3') == 'GO FOR IT'\nassert solution('1 4') == 'GO FOR IT'\n"
    },
    {
        "number": 3362,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 3\n4 4\nWWWW\nWSBB\nWWWW\nWBWG''') == 'GO FOR IT'\nassert solution('''2 3\n4 4\nWWWW\nWSBB\nWWWW\nWBWG''') == 'NO WAY'\nassert solution('''1 1\n1 1\nWBB''') == 'NO WAY'\nassert solution('''1 1\n1 1\nWBW''') == 'NO WAY'\nassert solution('''1 1\n1 1\nWBB''') == 'NO WAY'\n"
    },
    {
        "number": 3362,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3362,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input_01) == \"SUCCESS\"\nassert solution(input_02) == \"GO FOR IT\"\nassert solution(input_03) == \"NO CHANCE\"\nassert solution(input_04) == \"NO WAY\"\nassert solution(input_05) == \"GO FOR IT\"\n"
    },
    {
        "number": 3362,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'GO FOR IT'\nassert solution('1 2\\n2 4\\n4 2\\n2 1\\n1 1') == 'SUCCESS'\nassert solution('1 2\\n2 3\\n3 1') == 'NO CHANCE'\nassert solution('1 2\\n2 3\\n3 2\\n2 1\\n1 1') == 'NO WAY'\nassert solution('2 2\\n1 1\\n1 1') == 'GO FOR IT'\n\"\"\"\n"
    },
    {
        "number": 3362,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n') == 'GO FOR IT'\nassert solution('2 3\\n4 4\\nWWWWWW\\nWSBBBB\\nWWWWWW\\nWBWGGB\\n') == 'NO WAY'\nassert solution('2 3\\n3 1\\nWWWWWW\\nWSBBBB\\nWWWWWW\\nWBWGGB\\n') == 'NO WAY'\nassert solution('2 3\\n4 2\\nWWWWWWWW\\nWSBBBBBB\\nWWWWWWWW\\nWBWGGBGB\\n') == 'SUCCESS'\nassert solution('2 3\\n4 3\\nWWWWWWWWWW\\nWSBBBBBBBB\\nWWWWWWWWWW\\nWBWGGBGBGB\\n') == 'NO WAY'\n"
    },
    {
        "number": 3362,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 3\n4 4\nWWWW\nWSBB\nWWWW\nWBWG''') == 'GO FOR IT'\nassert solution('''2 3\n4 4\nBBWW\nWWWW\nWBWG\nWWWW\nWWWW\nWWWW''') == 'NO WAY'\nassert solution('''2 3\n4 4\nWWWW\nWSBB\nWWWW\nWBWG\nWWWW\nWWWW\nWWWW''') == 'NO WAY'\nassert solution('''2 3\n4 4\nWWWW\nWSBB\nWWWW\nWBWG\nWWWW\nWWWW\nWWWW''') == 'NO WAY'\nassert solution('''2 3\n4 4\nBBWW\nWWWW\nWBWG\nWWWW\nWWWW\nWWWW''') == 'NO WAY'\n"
    },
    {
        "number": 3363,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"5 900\n800 700 400 300 200\"\"\") == \"2243\"\nassert solution(\n    \"\"\"10 1000\n999 999 999 999 999 999\"\"\") == \"9999999\"\nassert solution(\n    \"\"\"10 100\n999 999 999 999 999 999\"\"\") == \"999999\"\nassert solution(\n    \"\"\"5 300\n50 50 50 50 50\"\"\") == \"55\"\nassert solution(\n    \"\"\"5 1500\n5000 5000 5000 5000 5000\"\"\") == \"50000\"\n"
    },
    {
        "number": 3363,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2243\""
    },
    {
        "number": 3363,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''5 900\n800 700 400 300 200'''\n) == '2243'\nassert solution(\n'''4 1500\n1000 1100 1300'''\n) == '1200'\nassert solution(\n'''5 300\n1000 1000 1000'''\n) == '0'\nassert solution(\n'''5 0\n1000 1000 1000'''\n) == '0'\nassert solution(\n'''5 0\n1000 1000 1000'''\n) == '0'\n"
    },
    {
        "number": 3363,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 900\\n800 700 400 300 200') == '2243'\nassert solution('5 8\\n800 800 400 300 200') == '2300'\nassert solution('10 0\\n16') == '0'\nassert solution('3 0\\n0\\n0') == '0'\nassert solution('10 0\\n16\\n0') == '0'\n"
    },
    {
        "number": 3363,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 900\\n800 700 400 300 200') == '2243'\nassert solution('6 8\\n400 400 400 400 400 400') == '3300'\nassert solution('2 10\\n5 2 3 2 1') == '19'\nassert solution('4 10\\n5 2 3 2 1') == '19'\nassert solution('10 10\\n5 2 3 2 1') == '21'\n"
    },
    {
        "number": 3363,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2243\"\n\n'''\n"
    },
    {
        "number": 3363,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 900\\n800 700 400 300 200\\n') == '2243'\n"
    },
    {
        "number": 3363,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 900\\n800 700 400 300 200') == '2243'\nassert solution('3 11\\n10 20 30 40') == '180'\nassert solution('4 2\\n40 40 40 40') == '80'\nassert solution('5 10\\n90 90 90 90 90') == '10'\nassert solution('2 2\\n80 80') == '0'\n"
    },
    {
        "number": 3363,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 900\\n800 700 400 300 200') == '2243'\nassert solution('3 2\\n2 3 1') == '2'\nassert solution('3 5\\n2 3 1') == '7'\nassert solution('3 5\\n2 3 1\\n1 5 2') == '7'\nassert solution('3 5\\n2 3 1\\n1 5 2\\n4 4 3') == '8'\n"
    },
    {
        "number": 3363,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 10\\n400 300 300 100') == '6'\nassert solution('5 2\\n40 30 15') == '13'\nassert solution('5 1\\n100') == '100'\nassert solution('5 1\\n500') == '550'\nassert solution('5 1\\n300') == '150'\n"
    },
    {
        "number": 3364,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n"
    },
    {
        "number": 3364,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n3\\n= 1 3\\n? 1 3\\n= 2 3\\n? 1 3\\n? 1 3\\n? 1 3\\n') == 'yes\\nno\\nyes'\nassert solution('1\\n3\\n= 1 3\\n? 1 3\\n= 2 3\\n? 1 3\\n? 1 3\\n? 1 3\\n') == 'no\\nno\\nno\\nyes'\nassert solution('1\\n3\\n= 1 3\\n? 1 3\\n= 2 3\\n? 1 3\\n? 1 3\\n? 1 3\\n') == 'no\\nno\\nno\\nno'\nassert solution('1\\n3\\n= 1 3\\n? 1 3\\n= 2 3\\n? 1 3\\n? 1 3\\n? 1 3\\n? 1 3\\n') == 'no\\nno\\nno\\nno'\nassert solution('1\\n3\\n= 1 3\\n? 1 3\\n= 2 3\\n? 1 3\\n? 1 3\\n? 1 3\\n? 1 3\\n? 1 3\\n') == 'no\\nno\\nno\\nno\\nno\\nno'\n"
    },
    {
        "number": 3364,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 3\\n? 1 3\\n= 1 8\\n= 3 8') == 'yes\\nno'"
    },
    {
        "number": 3364,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 10\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3') == 'yes'\nassert solution('4 10\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3') == 'no'\nassert solution('6 6\\n? 1 2\\n= 1 2\\n? 2 3\\n= 2 3\\n? 3 4\\n= 3 4\\n? 1 4\\n= 1 4') == 'yes'\nassert solution('6 6\\n? 1 2\\n= 1 2\\n? 2 3\\n= 2 3\\n? 3 4\\n= 3 4\\n? 1 4\\n= 1 4') == 'no'\nassert solution('5 4\\n? 1 2\\n= 1 2\\n? 2 3\\n= 2 3\\n? 3 4\\n= 3 4\\n? 1 4\\n= 1 4') == 'yes'\n"
    },
    {
        "number": 3364,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''10 4\n? 1 3\n= 1 8\n= 3 8\n? 1 3\n''') == 'no\\nno\\nyes\\nyes\\nyes\\nyes'\nassert solution('''2 3\n? 1 3\n? 0 1\n= 1 8\n? 1 3\n? 0 1\n? 1 3\n? 0 1\n''') == 'no\\nno\\nyes\\nyes\\nyes\\nyes'\nassert solution('''9 4\n? 1 3\n= 1 8\n? 0 1\n= 1 8\n? 0 1\n= 1 8\n? 0 1\n= 1 8\n? 0 1\n''') == 'no\\nno\\nyes\\nyes\\nyes\\nyes'\nassert solution('''7 9\n? 1 3\n= 1 8\n? 0 1\n= 1 8\n? 0 1\n= 1 8\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0 1\n? 0"
    },
    {
        "number": 3364,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3364,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 3\n? 1 3\n= 1 8\n= 3 8\n? 1 3''') == 'no\\nyes\\nno\\nyes'\n'''\n"
    },
    {
        "number": 3364,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3\") == \"no\"\nassert solution(\"1 2 3 4 5\") == \"no\"\nassert solution(\"1 2 3 4 5 6 7 8\") == \"yes\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"yes\"\n"
    },
    {
        "number": 3364,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 4 5\") == \"no\"\nassert solution(\"1 2 3 4? 5\") == \"yes\"\nassert solution(\"1 2 3 4? 5\") == \"no\"\nassert solution(\"1 2 3?? 4 5\") == \"yes\"\nassert solution(\"1? 1????? 5\") == \"no\"\n"
    },
    {
        "number": 3364,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\\n? 1 3\\n? 3 8\\n= 1 8\\n= 3 8\\n? 1 3\") == \"yes\\nno\\nno\\nyes\"\nassert solution(\"2\\n? 1 0\\n? 0 1\\n= 1 0\\n= 0 1\\n? 1 0\") == \"yes\\nno\"\nassert solution(\"4\\n? 1 3\\n? 3 8\\n? 1 3\") == \"no\\nno\\nyes\\nno\"\nassert solution(\"4\\n? 1 3\\n? 3 8\\n? 1 3\") == \"no\\nno\\nno\\nno\"\nassert solution(\"1\\n? 0 0\\n? 0 0\\n? 0 0\\n? 0 0\") == \"yes\\nyes\\nno\\nno\"\n"
    },
    {
        "number": 3365,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3\n10 5 4 8 3''') == '2'\nassert solution('''7 4\n
    },
    {
        "number": 3365,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 2\n\n\"\"\"\n"
    },
    {
        "number": 3365,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == 1\nassert solution(\"2 1\") == 0\nassert solution(\"2 2\") == 0\nassert solution(\"3 2\") == 1\nassert solution(\"4 2\") == 0\n"
    },
    {
        "number": 3365,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 3\n10 5 4 8 3''') == 2\nassert solution('''5 3\n10 5 4 8 3''') == 2\nassert solution('''3 3\n4 2 1''') == 0\nassert solution('''3 3\n1 2''') == 0\nassert solution('''3 3\n2''') == 0\n"
    },
    {
        "number": 3365,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 3\n10 5 4 8 3''') == \"2\"\nassert solution('''5 3\n10 5 4 8 3''') == \"2\"\nassert solution('''9 1\n1 2 2 3 2 2 3 2 4 2 4 2 4 4 4''') == \"4\"\nassert solution('''5 2\n5 1 5 5 5''') == \"3\"\nassert solution('''3 2\n1 2 3''') == \"0\"\n"
    },
    {
        "number": 3365,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4\\n5\\n1 2 3 4\\n2 2 3 3 4\\n\") == 1\nassert solution(\"4\\n5\\n4 2 3 4\\n4 2 3 3 4\\n\") == 2\nassert solution(\"5\\n5\\n4 3 2 1 2\\n4 3 2 3 1\\n3 2 3 1 2\\n1 2 3 1 2\\n2 3 1 2\\n\") == 3\nassert solution(\"5\\n5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n\") == 0\nassert solution(\"7\\n7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n\") == 4\n"
    },
    {
        "number": 3365,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4\\n3 2 1 3\") == \"2\"\nassert solution(\"6\\n3 2 1 3 2 1\") == \"2\"\nassert solution(\"4\\n4 2 1 3\") == \"0\"\nassert solution(\"8\\n4 2 1 3 2 1 2 4\") == \"2\"\nassert solution(\"8\\n4 2 1 3 2 1 2 3\") == \"2\"\n"
    },
    {
        "number": 3365,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 3') == '2'\nassert solution('5 3') == '2'\nassert solution('1 2 3 4 5') == '5'\nassert solution('1 2 3 4 5') == '5'\nassert solution('1 2 3 4 5') == '5'\n"
    },
    {
        "number": 3365,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 3\n10 5 4 8 3''') == '2'\n'''"
    },
    {
        "number": 3365,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\\n4\\n4\\n4\\n1 2 3 4\") == 4\nassert solution(\"2\\n2\\n2\\n2\\n1 2\\n2 3 4\") == 0\nassert solution(\"2\\n2\\n2\\n2\\n1 2\") == 0\nassert solution(\"5\\n5\\n5\\n5\\n1 2 3 4 5\") == 3\nassert solution(\"5\\n5\\n5\\n5\\n1 2 3 4 5\") == 0\n"
    },
    {
        "number": 3366,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1083\"\nassert solution(\"1 127\") == \"1083\"\nassert solution(\"1 1000\") == \"1085\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"0 1000\") == \"0\"\n"
    },
    {
        "number": 3366,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 127\") == \"1083\"\n'''\n"
    },
    {
        "number": 3366,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 127') == 1083\nassert solution('1 1') == 0\nassert solution('1 1 2') == 0\nassert solution('1 1 3') == 0\nassert solution('1 1 4') == 0\n"
    },
    {
        "number": 3366,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 1083\n\n-----Note------\n* We don't need to call the function, you can assume that it is implemented correctly.\n* You can assume that L and R are valid integers in the range $[1, 10^{18}$]\n* If L or R are the same, there is no need to calculate the function and output anything.\n\"\"\""
    },
    {
        "number": 3366,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '1083'\n\nassert solution('''1000 1000''') == '1083'\n\nassert solution('''5 10''') == '20'\n\nassert solution('''1 10''') == '20'\n\nassert solution('''10 10000''') == '553009'"
    },
    {
        "number": 3366,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 127') == '1083'\nassert solution('2 4') == '3'\nassert solution('5 7') == '0'\nassert solution('10 10') == '0'\nassert solution('20 10') == '1'\n"
    },
    {
        "number": 3366,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1083\"\n'''\n\nimport sys\n\nL, R = [int(x) for x in sys.stdin.readline().split()]"
    },
    {
        "number": 3366,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 127') == '1083'\nassert solution('1 10') == '37'\nassert solution('100 1000') == '310001'\nassert solution('1 1') == '0'\nassert solution('1 1000000000') == '1'\n"
    },
    {
        "number": 3366,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 127') == 1083\nassert solution('1 3') == 6\nassert solution('1 10') == 1\nassert solution('1 1') == 0\nassert solution('1 1000000') == 1\n"
    },
    {
        "number": 3366,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 127') == '1083'\nassert solution('1 13') == '9'\nassert solution('5 100') == '68'\nassert solution('1 5') == '6'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 3367,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably\nWhat is the air speed velocity of an unladen swallow? African?\n''') == '2.0000000000'\n'''\nfrom typing import List\n"
    },
    {
        "number": 3367,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 4\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably\nWhat is the air speed velocity of an unladen swallow? African?\n''') == '2.0000000000'\n'''\n"
    },
    {
        "number": 3367,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n    4 4\n    How much is 6 times 9? 42\n    How much is 9 times 6? 42\n    Is there intelligent life on Earth? Probably\n    What is the air speed velocity of an unladen swallow? African?\n    ''') == '2.0000000000'\n'''\n\n\nfrom typing import List\nimport sys\nimport re\n"
    },
    {
        "number": 3367,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 4\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably\nWhat is the air speed velocity of an unladen swallow? African?''') == '2.0000000000'\n'''\n'''"
    },
    {
        "number": 3367,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('1 1') == ''\nassert solution('1 2') == ''\nassert solution('1 3') == ''\nassert solution('1 4') == ''\n"
    },
    {
        "number": 3367,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 4\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably\nWhat is the air speed velocity of an unladen swallow? African?''') == '2.0000000000'\nassert solution('''4 4\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?\nLet us try!\nWhat is the air speed velocity of an unladen swallow? African?"
    },
    {
        "number": 3367,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 4\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably\nWhat is the air speed velocity of an unladen swallow? African?''') == \"2.0000000000\"\n\nassert solution('''2 2\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\nHello World\n"
    },
    {
        "number": 3367,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2.0000000000\"\n\nThe first line contains two integers $t$ and $n$ ($1 \\leq t \\leq 100$, $1 \\leq n \\leq 100\\ 000$), the duration of the quiz and the number of questions. Each of the following $n$ lines contains a question, which is a space-separated list of words terminated by a question mark; and an answer, which is a single word.\n\nEach word is a sequence of non-space ASCII printable characters, between the ASCII values of \u2018!\u2019 and \u2018$\\sim $\u2019. Only the last word of a question has a question mark (\u2018?\u2019). You can assume that no question is a prefix of another and that punctuation marks are part of a word. Words spelled with different upper/lower case are assumed to be different.\n\nIt is guaranteed that the total number of word characters is at most $100\\ 000$.\n\n-----Output-----\nOutput the expected score of an optimal strategy. Answers within a relative or absolute error of $10^{-6}$ will be accepted.\n\n-----Examples-----\nSample Input:\n4 4\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably\nWhat is the air speed velocity of an unladen swallow? African?\nSample Output:\n2.0000000000"
    },
    {
        "number": 3367,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2.0000000000\"\n\"\"\"\n"
    },
    {
        "number": 3367,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 4\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably\nWhat is the air speed velocity of an unladen swallow? African?\n''') == \"2.0000000000\"\nassert solution('''6 6\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably\nWhat is the air speed velocity of an unladen swallow? African?\n''') == \"1.9999999999\"\nassert solution('''1 1\nWhat is the air speed velocity of an unladen swallow? African?\n''') == \"0.9999999999\"\nassert solution('''2 3\n1 12\n2 13\n3 14\n4 15\n5 16\n6 17\n7 18\n8 19\n9 20\n10 21\n11 22\n12 23\n13 24\n14 25\n15 26\n16 27\n17 28\n18 29\n19 30\n20 31\n21 32\n22 33\n23 34\n24 35\n25 36\n26 37\n27 38\n28 39\n29 40\n30 41\n31 42\n32 43\n33 44\n34 45\n35 46\n36 47\n37 48\n38 49\n39 50\n40 51\n41 52\n42 53\n43 54\n44 55\n45 56\n46 57\n47 58\n48 59\n49 60\n50 61\n51 62\n52 63\n53 64\n54 65\n55 66\n56 67\n57 68\n58 69\n59 70\n60 71\n61 72\n62 73\n63 74\n64 75\n65 76\n66 77\n67 78\n68 79\n69 80\n70 81\n71 82\n72 83\n73 84\n74 85\n75 86\n76 87\n77 88\n78 89\n79 90\n80 91\n81 92\n82 93\n83 94\n84 95\n85 96\n86 97\n87 98\n88 99\n89 100\n90 101\n91 102\n92 103\n93 104\n94 105\n95 106\n96 107\n97 108\n98 109\n99 110\n100 111\n101 112\n102 113\n103 114\n104 115\n105 116\n106 117\n107 118\n108 119\n109 120\n110 121\n111 122\n112 123\n113 124\n114 125\n115 126\n116 127\n117 128\n118 129\n119 130\n120 131\n121 132\n122 133\n123 134\n124 135\n125 136\n126 137\n127 138\n128 139\n129 140\n130 141\n131 142\n132 143\n133 144\n134 145\n135 146\n136 147\n137 148\n138 149\n139 150\n140 151\n141 152\n142 153\n143 154\n144 155\n145 156\n146 157\n147 158\n148 159\n149 160\n150 161\n151 162\n152 163\n153 164\n154 165\n155 166\n156 167\n157 168\n158 169\n159 170\n160 171\n161 172\n162 173\n163 174\n164 175\n165 176\n166 177\n167 178\n168 179\n169 180\n170 181\n171 182\n172 183\n173 184\n174 185\n175 186\n176 187\n177 188\n178 189\n179 190\n180 191\n181 192\n182 193\n183 194\n184 195\n185 196\n186 197\n187 198\n188 199\n189 200\n190 201\n191 202\n192 203\n193 204\n194 205\n195 206\n196 207\n197 208\n198 209\n199 210\n''') == \"1.0\"\nassert solution('''3 2\n1 12\n2 13\n3 14\n''') == \"0.99999\"\n"
    },
    {
        "number": 3368,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') is None\nassert solution('3 2') == 'IMPOSSIBLE'\nassert solution('1 1') == 'FALSE ALARM'\nassert solution('2 2') == 'POSSIBLE'\nassert solution('3 3') == 'POSSIBLE'\n"
    },
    {
        "number": 3368,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 6\") == \"\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n3 3 zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo zoo"
    },
    {
        "number": 3368,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'POSSIBLE'\nassert solution('3 10') == 'POSSIBLE'\nassert solution('2 10') == 'IMPOSSIBLE'\nassert solution('3 100') == 'POSSIBLE'\nassert solution('2 100') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3368,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 3368,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == 'POSSIBLE'\nassert solution('monkey 2 lion penguin\\nlion 3 monkey penguin lion') == 'POSSIBLE'\nassert solution('penguin 1 monkey\\npenguin 1 monkey\\npenguin 1 monkey\\n') == 'POSSIBLE'\nassert solution('lion 3 monkey penguin lion\\nmonkey 2 lion penguin\\nmonkey 2 lion penguin\\n') == 'POSSIBLE'\nassert solution('lion 3 monkey penguin lion\\nmonkey 2 lion penguin\\nmonkey 2 lion penguin\\n') == 'POSSIBLE'\n"
    },
    {
        "number": 3368,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"IMPOSSIBLE\"\nassert solution(\"1 2\") == \"POSSIBLE\"\nassert solution(\"1 1\") == \"POSSIBLE\"\nassert solution(\"1 2 1\") == \"IMPOSSIBLE\"\nassert solution(\"1 1 1\") == \"FALSE ALARM\"\n"
    },
    {
        "number": 3368,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6 4\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\npenguin 1 monkey''') == 'POSSIBLE'\nassert solution('''7 4\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\npenguin 1 monkey\nmonkey 2 monkey\nmonkey 1 monkey\nmonkey 1 monkey''') == 'POSSIBLE'\nassert solution('''7 5\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\npenguin 1 monkey\nmonkey 2 monkey\nmonkey 1 monkey\nmonkey 1 monkey''') == 'POSSIBLE'\nassert solution('''5 5\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\npenguin 1 monkey\nmonkey 1 monkey\nmonkey 1 monkey''') == 'POSSIBLE'\nassert solution('''5 3\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\npenguin 1 monkey\nmonkey 1 monkey\nmonkey 1 monkey''') == 'POSSIBLE'\n"
    },
    {
        "number": 3368,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\").read()) == \"FALSE ALARM\"\n'''"
    },
    {
        "number": 3368,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    '''\n    3 6\n    monkey 2 lion penguin\n    lion 3 monkey penguin lion\n    penguin 1 monkey\n    '''\n) == 'POSSIBLE'\n\nassert solution(\n    '''\n    3 6\n    lion 4 monkey penguin lion\n    penguin 2 monkey\n    '''\n) == 'POSSIBLE'\n\nassert solution(\n    '''\n    3 5\n    lion 4 monkey penguin lion\n    monkey 2 lion penguin\n    penguin 3 monkey\n    '''\n) == 'POSSIBLE'\n\nassert solution(\n    '''\n    3 4\n    penguin 3 monkey\n    lion 4 monkey penguin\n    monkey 2 lion\n    '''\n) == 'POSSIBLE'\n\nassert solution(\n    '''\n    3 4\n    monkey 2 lion penguin\n    lion 4 monkey penguin\n    monkey 3 lion\n    '''\n) == 'IMPOSSIBLE'"
    },
    {
        "number": 3368,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\npenguin 1 monkey''') == 'POSSIBLE'\nassert solution('''2 3\ndog\ndog dog\ndog dog dog''') == 'IMPOSSIBLE'\nassert solution('''2 5\nmonkey 1\nmonkey 2 monkey 1''') == 'POSSIBLE'\nassert solution('''2 5\ndog\ndog dog\ndog dog dog''') == 'IMPOSSIBLE'\nassert solution('''1 1\nfrog frog frog\nfrog frog frog frog''') == 'FALSE ALARM'\n"
    },
    {
        "number": 3369,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    '100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9'\n) == 'triple correlation 4(1)4(3)3 found'\n\nprint(solution(input()))\n\n\"\"\""
    },
    {
        "number": 3369,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 4(1)4(3)3 found\"\nassert solution(\"50\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"random sequence\"\nassert solution(\"50\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 4(1)4(3)3 found\"\nassert solution(\"50\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n4 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\") == \"triple correlation 4(1)4(3)3 found\"\nassert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n4 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"random sequence\"\n"
    },
    {
        "number": 3369,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 4(1)4(3)3 found\"\nassert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"random sequence\"\nassert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"4(1)4(3)3\"\nassert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"4(1)4(3)3\"\nassert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 4(1)4(3)3\"\n"
    },
    {
        "number": 3369,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('100') == 'random sequence'\nassert solution('4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4') == '4(1)4(3)3'\nassert solution('4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2') == '4(1)4(3)3'\nassert solution('0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7') == '2(5)4(7)'\nassert solution('2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8') == '8(5)6(7)'\n"
    },
    {
        "number": 3369,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin.strip()\n\"\"\"\n\nimport sys\nfrom collections import defaultdict"
    },
    {
        "number": 3369,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n100\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n\"\"\") == \"\"\"\ntriple correlation 4(1)4(3)3 found\n\"\"\"\n"
    },
    {
        "number": 3369,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9') == 'triple correlation 4(1)4(3)3 found'\nassert solution('4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n\\n\\n\\n\\n') == 'triple correlation 4(1)4(3)3 found'\nassert solution('4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n\\n\\n\\n\\n\\n') == 'triple correlation 4(1)4(3)3 found'\nassert solution('4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n\\n\\n\\n\\n\\n') == 'triple correlation 4(1)4(3)3 found'\nassert solution('4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n\\n\\n\\n\\n\\n') == 'triple correlation 4(1)4(3)3 found'\n"
    },
    {
        "number": 3369,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n100\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n''') == 'triple correlation 4(1)4(3)3 found'\n\nassert solution(\n'''\n100\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n''') == 'triple correlation 4(1)4(3)3 found'\n\nassert solution(\n'''\n1000\n5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"
    },
    {
        "number": 3369,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n') == 'triple correlation 4(1)4(3)3 found'\nassert solution('2 2 3 2 2 3 2 3 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3 2 2 3 2 3 3 2 3 2 3 2\\n2 2 2 3 2 2 3 2 3"
    },
    {
        "number": 3369,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 4(1)4(3)3 found\"\nassert solution(\"4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"random sequence\"\nassert solution(\"4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 4(1)4(3)3 found\"\nassert solution(\"4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"random sequence\"\n\n-----------------\n[\"triple correlation 4(1)4(3)3 found\", \"random sequence\"]\n\n-----------------\n\n-----Binary Search-----\n\"\"\""
    },
    {
        "number": 3370,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 1') == '40.5'\nassert solution('1 1') == '1.0'\nassert solution('1 1 1') == '1.0'\nassert solution('0 0') == '0.0'\nassert solution('1 2') == '3.0'\n"
    },
    {
        "number": 3370,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"40.5\"\n\n\"\"\",\n\"Case #2\": \"\"\"\nIt is generally agreed that some people are not so careful about what they are thinking about, especially if they often get caught thinking about what it is trying to do. But even more often, people are just trying to avoid making mistakes by not doing things they need to. \n\nTo be on the safe side, a citizen is given two inputs: the height of the tallest house and the height of the house adjacent to the one he wants to remodel. In the output, the citizen is required to print the number of days that it has to wait before the final height of the house he is remodeling is at least as tall as the average of the two adjacent houses, and the day that it is. If the day is negative, it means the citizen should retreat to the right. If the day is positive, it means he should remodel his house to have new height equal to the average of the two adjacent houses plus the number of inches he is willing to be taller than the average of the two adjacent houses. If the citizen is asked to remodel his house to have a height of zero, he should do so immediately.\n\nYou are given an integer $N$ and real number $k$, separated by a space $(1 \\leq N \\leq 100000; 0 \\leq k \\leq 10^{20})$: the number of houses in Eagleton and the number of inches each citizen wants their own house to be taller than the average of their neighbors.\n\n$N$ lines follow. The $i$th such line (starting at $i=1$) contains a real number $h_ i$ ($0 \\leq h_ i \\leq 10^{20}$), the initial height (in inches) of house $i$.\n\nThe real numbers in the input may be provided in scientific notation (see for instance Sample Input 2) and will have at most ten digits after the decimal point.\n\nThe output should be printed in the following format:\nDay Number\nDay\n\nThe number of days is printed in the first line, while the day is printed on the second line. There are at most two digits in the number of days, and the days will be printed in the format shown in Sample Input 2.\n\n-----Input-----\nThe first line of input consists of an integer $N$ and real number $k$, separated by a space $(1 \\leq N \\leq 100000; 0 \\leq k \\leq 10^{20})$: the number of houses in Eagleton and the number of inches each citizen wants their own house to be taller than the average of their neighbors.\n\n$N$ lines follow. The $i$th such line (starting at $i=1$) contains a real number $h_ i$ ($0 \\leq h_ i \\leq 10^{20}$), the initial height (in inches) of house $i$.\n\nThe real numbers in the input may be provided in scientific notation (see for instance Sample Input 2) and will have at most ten digits after the decimal point.\n\n-----Output-----\nPrint the number of days that it will take for the final height of the house to be at least as tall as the average of the two adjacent houses, and the day that it is. If the day is negative, it means the citizen should retreat to the right. If the day is positive, it means he should remodel his house to have new height equal to the average of the two adjacent houses plus the number of inches he is willing to be taller than the average of the two adjacent houses. If the citizen is asked to remodel his house to have a height of zero, he should do so immediately.\n\nThe output should be printed in the format described in the description of the problem.\n\n-----Examples-----\nSample Input:\n3 1\n39\n10\n40\nSample Output:\n-1\n-1\n1\nExplanation:\nDay #1: Citizens of house #3 (with height 39) retreat to right.\nDay #2: Citizens of house #3 (with height 39) remodel to have height 39 + 1 = 40.\nDay #3: Citizens of house #1 (with height 39) remodel to have height 40 + 1 = 41.\nDay #4: Citizens of house #1 (with height 39) remodel to have height 40 + 1 = 41.\nDay #5: Citizens of house #1 (with height 39) remodel to have height 40 + 1 = 41.\nDay #6: Citizens of house #1 (with height 39) remodel to have height 40 + 1 = 41.\nDay #7: Citizens of house #1 (with height 39) remodel to have height 40 + 1 = 41.\nDay #8: Citizens of house #1 (with height 39) remodel to have height 40 + 1 = 41.\nDay #9: Citizens of house #1 (with height 39) remodel to have height 40 + 1 = 41.\nDay #10: Citizens of house #1 (with height 39) remodel to have height 40 + 1 = 41.\nDay #11: Citizens of house #1 (with height 39) remodel to have height 40 + 1 = 41.\nDay #12: Citizens of house #1 (with height 39) remodel to have height 40 + 1 = 41.\nDay #13: Citizens of house #1 (with height 39) remodel to have height 40 + 1 = 41.\nDay #14: Citizens of house #1 (with height 39) remodel to have height 40 + 1 = 41.\nDay #15: Citizens of house #1 (with height 39) remodel to have height 40 + 1 = 41.\nDay #16: Citizens of house #1 (with height 39) remodel to have height 40 + 1 = 41.\nDay #17: Citizens of house #1 (with height 39) remodel to have height 40 + 1 = 41.\nDay #18: Citizens of house #1 (with height 39) remodel to have height 40 + 1 = 41.\nDay #19: Citizens of house #1 (with height 39) remodel to have height 40 + 1 = 41.\nDay #20: Citizens of house #1 (with height 39) remodel"
    },
    {
        "number": 3370,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 1\") == '40.5'\nassert solution(\"4 1 2 1 1\") == '40.5'\nassert solution(\"4 1 2 1 1 1\") == '40.5'\nassert solution(\"4 1 2 1 1 1 1\") == '40.5'\nassert solution(\"4 1 2 1 1 1 1 1\") == '40.5'\n"
    },
    {
        "number": 3370,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 1') == '39'\nassert solution('4 1') == '40'\nassert solution('4 0') == '40'\nassert solution('3 0') == '39'\nassert solution('3 10') == '39'\n"
    },
    {
        "number": 3370,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"40.5\"\n\"\"\"\n"
    },
    {
        "number": 3370,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3370,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 1\") == \"40.5\"\nassert solution(\"3 1 9\") == \"40.5\"\nassert solution(\"3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3370,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 1') == '40.5'\nassert solution('2 2') == '0.5'\nassert solution('3 2') == '1.5'\nassert solution('6 0') == '6'\nassert solution('5 1') == '5'\n"
    },
    {
        "number": 3370,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 40.5\n\n\"\"\""
    },
    {
        "number": 3370,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n2 3\\n4 5\") == \"3.5\"\nassert solution(\"1 3\\n2 4\\n3 5\") == \"2.5\"\nassert solution(\"2 2\\n5 5\\n10 10\") == \"2.5\"\nassert solution(\"1 1\\n1 1\") == \"0\"\nassert solution(\"1 1\\n0 0\") == \"0\"\n"
    },
    {
        "number": 3371,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 4\n1 2 3\n2 3 4\n1 3 5\n2 4 6\n3 5 7\n''') == 'Impossible'\nassert solution('''1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n''') == '1'\nassert solution
    },
    {
        "number": 3371,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4 5') == 'Impossible'\nassert solution('1 1 1 1 1 1') == 'Impossible'\nassert solution('1 2 1 2 1 2 2') == '3'\nassert solution('1 1 1 1 1 1 1') == '1'\nassert solution('1 2 1 2 1 2 2') == '1'\n"
    },
    {
        "number": 3371,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 6') == '1987'\nassert solution('1 2 3 4 5') == 'Impossible'\nassert solution('2 3 4 5 6') == '5'\nassert solution('1 2 3 4 5 6') == '5'\nassert solution('4 1 2 3 4 5') == '3'\n"
    },
    {
        "number": 3371,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 3371,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Impossible\"\nassert solution('''4 6\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987\n''') == \"Impossible\"\nassert solution('''4 5\n1 2 3 4 5\n3 4 5 1 2\n1 2 3 4 5\n3 4 5 1 2\n1 2 3 4 5\n3 4 5 1 2\n''') == \"1987\"\nassert solution('''4 4\n1 2 3 4 5\n2 3 4 5 1\n3 4 5 1 2\n1 2 3 4 5\n2 3 4 5 1\n3 4 5 1 2\n''') == \"1987\"\nassert solution('''4 3\n1 2 3 4 5\n2 3 4 5 1\n3 4 5 1 2\n1 2 3 4 5\n2 3 4 5 1\n3 4 5 1 2\n''') == \"1987\"\n"
    },
    {
        "number": 3371,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n4 6\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987\n'''\n) == '2007'\n\nassert solution(\n'''\n4 4\n1 2 1\n2 3 2\n3 4 3\n1 4 4\n'''\n) == '2007'\n\nassert solution(\n'''\n5 10\n1 4\n2 5\n3 4\n4 6\n5 7\n6 7\n7 8\n8 9\n9 10\n'''\n) == '2007'\n\nassert solution(\n'''\n4 4\n1 2 1\n2 3 2\n3 4 3\n1 4 4\n'''\n) == '2008'\n\nassert solution(\n'''\n4 10\n1 5\n2 5\n3 4\n4 6\n5 7\n6 7\n7 8\n8 9\n9 10\n'''\n) == '2007'"
    },
    {
        "number": 3371,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"Impossible\"\n\na\nb\nc\nd\ne\nf\ng\nh\ni\nj\nk\nl\nm\nn\no\np\nq\nr\ns\nt\nu\nv\nw\nx\ny\nz\n\nassert solution(stdin) == \"Impossible\"\n\na\nb\nc\nd\ne\nf\ng\nh\ni\nj\nk\nl\nm\nn\no\np\nq\nr\ns\nt\nu\nv\nw\nx\ny\nz\n\nassert solution(stdin) == \"Impossible\"\n\na\nb\nc\nd\ne\nf\ng\nh\ni\nj\nk\nl\nm\nn\no\np\nq\nr\ns\nt\nu\nv\nw\nx\ny\nz\n\nassert solution(stdin) == \"Impossible\"\n\na\nb\nc\nd\ne\nf\ng\nh\ni\nj\nk\nl\nm\nn\no\np\nq\nr\ns\nt\nu\nv\nw\nx\ny\nz\n\nassert solution(stdin) == \"Impossible\"\n\na\nb\nc\nd\ne\nf\ng\nh\ni\nj\nk\nl\nm\nn\no\np\nq\nr\ns\nt\nu\nv\nw\nx\ny\nz"
    },
    {
        "number": 3371,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 1') == '2007'\nassert solution('2 2') == '2007'\nassert solution('2 3') == '2007'\nassert solution('1 2') == '2007'\nassert solution('1 2 1') == '2007'\n"
    },
    {
        "number": 3371,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"\\n1\\n\") == \"\"\nassert solution(\"\\n1\\n2\\n3\\n4\\n5\\n\") == \"\"\nassert solution(\"\\n1\\n2\\n3\\n4\\n5\\n1\\n2\\n3\\n4\\n5\\n\") == \"\"\n"
    },
    {
        "number": 3371,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == ''\n\n\"\"\"\n"
    },
    {
        "number": 3372,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 1\\n1 2\\n2 3\\n3 1\\n1 2\\n1 3\\n3 1') == 'impossible'\nassert solution('0 1\\n1 2\\n2 3\\n3 4\\n4 2\\n4 3\\n2 4\\n2 3\\n3 4\\n4 1') == '3'\nassert solution('0 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n2 7\\n3 7\\n4 7\\n5 7\\n6 7\\n7 5') == '6'\nassert solution('0 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n2 7\\n3 7\\n4 7\\n5 7\\n6 7\\n7 8\\n8 7\\n8 9\\n9 7\\n9 8\\n9 9\\n9 8') == '4'\nassert solution('0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n7 8\\n8 9\\n9 8') == 'impossible'\n"
    },
    {
        "number": 3372,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1\n\"\"\") == \"impossible\"\n\nassert solution(\n\"\"\"\n4 0 1\nN 1 2\nN 2 1\nC 1 1\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n4 0 1\nN 1 2\nN 2 3\nC 1 2\nN 3 0\n\"\"\") == \"4\"\n\nassert solution(\n\"\"\"\n4 0 1\nN 1 2\nN 2 3\nC 1 2\nN 3 0\nN 0 4\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n4 0 1\nN 1 2\nN 2 3\nC 1 2\nN 3 0\nN 0 4\nN 4 1\nN 1 3\nC 1 2\nN 1 0\nC 1 2\n\"\"\") == \"3\""
    },
    {
        "number": 3372,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"impossible\"\n\"\"\"\n"
    },
    {
        "number": 3372,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\") == \"impossible\"\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\") == \"2\"\nassert solution(\"1 2\\n1 3\\n1 4\") == \"2\"\nassert solution(\"1 2\\n1 3\\n1 4\") == \"2\"\nassert solution(\"1 2\\n1 3\\n1 4\") == \"2\"\n"
    },
    {
        "number": 3372,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1''') == \"impossible\"\nassert solution('''2 1 0\n2 1 0\n1 1 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1\n1 2\n2 3''') == \"2\"\nassert solution('''1 1 0\n1 1 0\n1 1 0\n1 1 1\n1 1 1\n1 1 1\n1 1 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1"
    },
    {
        "number": 3372,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1''') == 'impossible'\nassert solution('''3 4 1\nN 1 2\nN 1 3\nC 1 1\nC 1 2\nN 1 3''') == '1'\nassert solution('''3 4 2\nN 1 2\nN 1 3\nC 1 1\nC 1 2\nN 1 3''') == '0'\nassert solution('''4 2 1\nN 1 2\nN 1 3\nC 1 1\nC 1 2\nN 1 3''') == '0'\nassert solution('''4 3 1\nN 1 2\nN 1 3\nC 1 1\nC 1 2\nC 1 3\nN 1 4\nC 1 3\nN 1 5\nC 1 4\nN 1 6\nC 1 5\nN 1 7\nC 1 6\nN 1 8\nC 1 7\nN 1 9\nC 1 8\nN 1 10\nC 1 9\nN 1 11\nC 1 10\nN 1 12\nC 1 11\nN 1 13\nC 1 12\nN 1 14\nC 1 13\nN 1 15\nC 1 14\nN 1 16\nC 1 15\nN 1 17\nC 1 16\nN 1 18\nC 1 17\nN 1 19\nC 1 18\nN 1 20\nC 1 19\nN 1 21\nC 1 20\nN 1 22\nC 1 21\nN 1 23\nC 1 22\nN 1 24\nC 1 23\nN 1 25\nC 1 24\nN 1 26\nC 1 25\nN 1 27\nC 1 26\nN 1 28\nC 1 27\nN 1 29\nC 1 28\nN 1 30\nC 1 29\nN 1 31\nC 1 30\nN 1 32\nC 1 31\nN 1 33\nC 1 32\nN 1 34\nC 1 33\nN 1 35\nC 1 34\nN 1 36\nC 1 35\nN 1 37\nC 1 36\nN 1 38\nC 1 37\nN 1 39\nC 1 38\nN 1 40\nC 1 39\nN 1 41\nC 1 40\nN 1 42\nC 1 41\nN 1 43\nC 1 42\nN 1 44\nC 1 43\nN 1 45\nC 1 44\nN 1 46\nC 1 45\nN 1 47\nC 1 46\nN 1 48\nC 1 47\nN 1 49\nC 1 48\nN 1 50\nC 1 49\nN 1 51\nC 1 50\nN 1 52\nC 1 51\nN 1 53\nC 1 52\nN 1 54\nC 1 53\nN 1 55\nC 1 54\nN 1 56\nC 1 55\nN 1 57\nC 1 56\nN 1 58\nC 1 57\nN 1 59\nC 1 58\nN 1 60\nC 1 59\nN 1 61\nC 1 60\nN 1 62\nC 1 61\nN 1 63\nC 1 62\nN 1 64\nC 1 63\nN 1 65\nC 1 64\nN 1 66\nC 1 65\nN 1 67\nC 1 66\nN 1 68\nC 1 67\nN 1 69\nC 1 68\nN 1 70\nC 1 69\nN 1 71\nC 1 70\nN 1 72\nC 1 71\nN 1 73\nC 1 72\nN 1 74\nC 1 73\nN 1 75\nC 1 74\nN 1 76\nC 1 75\nN 1 77\nC 1 76\nN 1 78\nC 1 77\nN 1 79\nC 1 78\nN 1 80\nC 1 79\nN 1 81\nC 1 80\nN 1 82\nC 1 81\nN 1 83\nC 1 82\nN 1 84\nC 1 83\nN 1 85\nC 1 84\nN 1 86\nC 1 85\nN 1 87\nC 1 86\nN 1 88\nC 1 87\nN 1 89\nC 1 88\nN 1 90\nC 1 89\nN 1 91\nC 1 90\nN 1 92\nC 1 91\nN 1 93\nC 1 92\nN 1 94\nC 1 93\nN 1 95\nC 1 94\nN 1 96\nC 1 95\nN 1 97\nC 1 96\nN 1 98\nC 1 97\nN 1 99\nC 1 98\nN 1 100\nC 1 99\nN 1 101\nC 1 100\nN 1 102\nC 1 101\nN 1 103\nC 1 102\nN 1 104\nC 1 103\nN 1 105\nC 1 104\nN 1 106\nC 1 105\nN 1 107\nC 1 106\nN 1 108\nC 1 107\nN 1 109\nC 1 108\nN 1 110\nC 1 109\nN 1 111\nC 1 110\nN 1 112\nC 1 111\nN 1 113\nC 1 112\nN 1 114\nC 1 113\nN 1 115\nC 1 114\nN 1 116\nC 1 115\nN 1 117\nC 1 116\nN 1 118\nC 1 117\nN 1 119\nC 1 118\nN 1 120\nC 1 119\nN 1 121\nC 1 120\nN 1 122\nC 1 121\nN 1 123\nC 1 122\nN 1 124\nC 1 123\nN 1 125\nC 1 124\nN 1 126\nC 1 125\nN 1 127\nC 1 126\nN 1 128\nC 1 127\nN 1 129\nC 1 128\nN 1 130\nC 1 129\nN 1 131\nC 1 130\nN 1 132\nC 1 131\nN 1 133\nC 1 132\nN 1 134\nC 1 133\nN 1 135\nC 1 134\nN 1 136\nC 1 135\nN 1 137\nC 1 136\nN 1 138\nC 1 137\nN 1 139\nC 1 138\nN 1 140\nC 1 139\nN 1 141\nC 1 140\nN 1 142\nC 1 141\nN 1 143\nC 1 142\nN 1 144\nC"
    },
    {
        "number": 3372,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\"\n\nassert solution(stdin) == \"impossible\"\n\nassert solution(stdin) == \"impossible\"\n\nassert solution(stdin) == \"impossible\"\n\nassert solution(stdin) == \"impossible\""
    },
    {
        "number": 3372,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\") == \"impossible\"\n\n'''\n"
    },
    {
        "number": 3372,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1\"\"\") == \"impossible\"\nassert solution(\"\"\"4 0 1\nN 1 2\nC 1 2\nN 0 2\nC 1 2\"\"\") == \"3\"\nassert solution(\"\"\"3 0 0\nN 1 2\nC 1 2\nN 0 2\nC 0 2\"\"\") == \"impossible\"\nassert solution(\"\"\"3 0 0\nN 1 2\nC 1 2\nN 0 2\nC 0 2\nN 0 1\nN 1 3\nC 1 2\nN 0 1\nN 2 2\nN 1 1\"\"\") == \"impossible\"\nassert solution(\"\"\"1 0 0\nN 1 1\nN 1 2\nN 1 3\nN 1 4\nN 1 5\nN 1 6\nN 1 7\nN 1 8\nN 1 9\nN 1 10\nN 1 11\nN 1 12\nN 1 13\nN 1 14\nN 1 15\nN 1 16\nN 1 17\nN 1 18\nN 1 19\nN 1 20\nN 1 21\nN 1 22\nN 1 23\nN 1 24\nN 1 25\nN 1 26\nN 1 27\nN 1 28\nN 1 29\nN 1 30\nN 1 31\nN 1 32\nN 1 33\nN 1 34\nN 1 35\nN 1 36\nN 1 37\nN 1 38\nN 1 39\nN 1 40\nN 1 41\nN 1 42\nN 1 43\nN 1 44\nN 1 45\nN 1 46\nN 1 47\nN 1 48\nN 1 49\nN 1 50\nN 1 51\nN 1 52\nN 1 53\nN 1 54\nN 1 55\nN 1 56\nN 1 57\nN 1 58\nN 1 59\nN 1 60\nN 1 61\nN 1 62\nN 1 63\nN 1 64\nN 1 65\nN 1 66\nN 1 67\nN 1 68\nN 1 69\nN 1 70\nN 1 71\nN 1 72\nN 1 73\nN 1 74\nN 1 75\nN 1 76\nN 1 77\nN 1 78\nN 1 79\nN 1 80\nN 1 81\nN 1 82\nN 1 83\nN 1 84\nN 1 85\nN 1 86\nN 1 87\nN 1 88\nN 1 89\nN 1 90\nN 1 91\nN 1 92\nN 1 93\nN 1 94\nN 1 95\nN 1 96\nN 1 97\nN 1 98\nN 1 99\nN 1 100\nN 1 101\nN 1 102\nN 1 103\nN 1 104\nN 1 105\nN 1 106\nN 1 107\nN 1 108\nN 1 109\nN 1 110\nN 1 111\nN 1 112\nN 1 113\nN 1 114\nN 1 115\nN 1 116\nN 1 117\nN 1 118\nN 1 119\nN 1 120\nN 1 121\nN 1 122\nN 1 123\nN 1 124\nN 1 125\nN 1 126\nN 1 127\nN 1 128\nN 1 129\nN 1 130\nN 1 131\nN 1 132\nN 1 133\nN 1 134\nN 1 135\nN 1 136\nN 1 137\nN 1 138\nN 1 139\nN 1 140\nN 1 141\nN 1 142\nN 1 143\nN 1 144\nN 1 145\nN 1 146\nN 1 147\nN 1 148\nN 1 149\nN 1 150\nN 1 151\nN 1 152\nN 1 153\nN 1 154\nN 1 155\nN 1 156\nN 1 157\nN 1 158\nN 1 159\nN 1 160\nN 1 161\nN 1 162\nN 1 163\nN 1 164\nN 1 165\nN 1 166\nN 1 167\nN 1 168\nN 1 169\nN 1 170\nN 1 171\nN 1 172\nN 1 173\nN 1 174\nN 1 175\nN 1 176\nN 1 177\nN 1 178\nN 1 179\nN 1 180\nN 1 181\nN 1 182\nN 1 183\nN 1 184\nN 1 185\nN 1 186\nN 1 187\nN 1 188\nN 1 189\nN 1 190\nN 1 191\nN 1 192\nN 1 193\nN 1 194\nN 1 195\nN 1 196\nN 1 197\nN 1 198\nN 1 199\nN 1 200\nN 1 201\nN 1 202\nN 1 203\nN 1 204\nN 1 205\nN 1 206\nN 1 207\nN 1 208\nN 1 209\nN 1 210\nN 1 211\nN 1 212\nN 1 213\nN 1 214\nN 1 215\nN 1 216\nN 1 217\nN 1 218\nN 1 219\nN 1 220\nN 1 221\nN 1 222\nN 1 223\nN 1 224\nN 1 225\nN 1 226\nN 1 227\nN 1 228\nN 1 229\nN 1 230\nN 1 231\nN 1 232\nN 1 233\nN 1 234\nN 1 235\nN 1 236\nN 1 237\nN 1 238\nN 1 239\nN 1 240\nN 1 241\nN 1 242\nN 1 243\nN 1 244\nN 1 245\nN 1 246\nN 1 247\nN 1 248\nN 1 249\nN 1 250\nN 1 251\nN 1 252\nN 1 253\nN 1 254\nN 1 255\nN 1 256\nN 1 257\nN 1 258\nN 1 259\nN 1 260\nN 1 261\nN 1 262\nN 1 263\nN 1 264\nN 1 265\nN 1 266\nN 1 267\nN 1 268\nN 1 269\nN 1 270\nN 1 271\nN 1 272\nN 1 273\nN 1 274\nN 1 275\nN 1 276\nN 1 277\nN 1 278\nN 1 279\nN 1 280\nN 1 281\nN 1 282\nN 1 283\nN 1 284\n"
    },
    {
        "number": 3372,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\\n') == 'impossible'\nassert solution('4 0 1\\nN 1 2\\nC 1 3\\nN 1 1\\nC 1 3\\nN 1 3\\nC 1 1\\n') == '3'\nassert solution('4 1 2\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\\n') == 'impossible'\nassert solution('4 0 1\\nN 1 2\\nC 1 3\\nN 1 1\\nC 1 3\\nN 1 3\\nC 1 1\\n') == '2'\nassert solution('4 0 1\\nN 1 2\\nC 1 3\\nN 1 1\\nC 1 3\\nN 1 3\\nN 1 1\\nC 1 1\\n') == '2'\n"
    },
    {
        "number": 3373,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"(()())\") == \"((()))\"\nassert solution(\"()(())\") == \"(())()\"\nassert solution(\"(((()))())\") == \"(((()))())()\"\nassert solution(\"((()((()(()(()(())))))()(())()))\") == \"(()(()()()))()\"\nassert solution(\"()(()())()\") == \"()(()())()\"\n"
    },
    {
        "number": 3373,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"()\") == \"()\"\nassert solution(\"()()\") == \"(())\"\nassert solution(\"(()())\") == \"(()())\", \"multiple\"\nassert solution(\"((()\")) == \"(()())\"\nassert solution(\"(()())\") == \"(()())()\"\n"
    },
    {
        "number": 3373,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 0\nassert solution(')') == 1\nassert solution('((()') == 2\nassert solution(')()') == 2\nassert solution(')()()') == 4\n"
    },
    {
        "number": 3373,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(solution.__doc__) == 10\n\"\"\"\n"
    },
    {
        "number": 3373,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('(()') == '(()'\nassert solution('()()') == '()()'\nassert solution('((()))') == '()()'\nassert solution('((()))()') == '()()()'\nassert solution('((()))()') == '()()()'\n"
    },
    {
        "number": 3373,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''())''') == '()()'\nassert solution('''(())''') == '()()'\nassert solution('''())''') == ''\nassert solution('''(())((()()()))''') == '(()()())'\nassert solution('''()''') == ''\n"
    },
    {
        "number": 3373,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''()''') == ''\nassert solution('''()()()()''') == ''\nassert solution('''()(())''') == ''\nassert solution('''(())''') == ''\nassert solution('''()()(()())''') == ''\n"
    },
    {
        "number": 3373,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''()''') == 0\nassert solution('''(()())''') == 6\nassert solution('''(())''') == 2\nassert solution('''()()()''') == 4\nassert solution('''((()(()))))''') == 16\n"
    },
    {
        "number": 3373,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('()') == '(()())'\nassert solution('(())') == '(())'\nassert solution(')()(') == '()()()'\nassert solution('(()))()') == '(()())'\nassert solution('(()()' + ')(()())' + ')((()' + '))()') == '()()()()(()())()'\n"
    },
    {
        "number": 3373,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('()') == '()'\nassert solution('()()') == '()()'\nassert solution('((()' ) == ''\nassert solution('(()' ) == ''\n"
    },
    {
        "number": 3374,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') is None\nassert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\n"
    },
    {
        "number": 3374,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output\n"
    },
    {
        "number": 3374,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"9\n377 a\n455 h\n180 a\n211 a\n134 a\n46 h\n111 h\n213 h\n17 a\n15\n1 2\n1 4\n1 6\n2 3\n2 4\n2 5\n3 5\n4 6\n4 7\n4 9\n5 7\n5 8\n6 9\n7 9\n7 8\n\"\"\") == \"85293\"\n\nassert solution(\n\"\"\"9\n377 a\n455 h\n180 a\n211 a\n134 a\n46 h\n111 h\n213 h\n17 a\n15\n1 2\n1 4\n1 6\n2 3\n2 4\n2 5\n3 5\n4 6\n4 7\n4 9\n5 7\n5 8\n6 9\n7 9\n7 8\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"9\n9\n1 2\n1 4\n1 6\n2 3\n2 4\n2 5\n3 5\n4 6\n4 7\n4 9\n5 7\n5 8\n6 9\n7 9\n7 8\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"7\n21 a\n44 a\n90 a\n123 a\n195 a\n235 a\n351 a\n42 h\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n7 9\n\"\"\") == \"37\"\n\nassert solution(\n\"\"\"7\n21 a\n44 a\n90 a\n123 a\n195 a\n235 a\n351 a\n42 h\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n7 9\n8 9\n8 8\n\"\"\") == \"33\""
    },
    {
        "number": 3374,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n') == '85293'\nassert solution('5\\n2312 a\\n5869 a\\n1353 h\\n1523 a\\n1639 a\\n2312 h\\n1115 h\\n2312 h\\n1617 h\\n2312 h\\n2312 h\\n2553 a\\n2237 a\\n2312 a\\n2312 a\\n2312 a\\n') == '91378'\nassert solution('8\\n1312 a\\n3241 a\\n2237 a\\n4037 a\\n5237 a\\n2312 h\\n3241 h\\n2237 h\\n2312 h\\n2312 h\\n2553 a\\n2237 a\\n2312 a\\n2312 a\\n2312 a\\n') == '85081'\nassert solution('11\\n2312 a\\n2553 a\\n2237 a\\n4037 a\\n5237 a\\n2312 h\\n3241 h\\n2237 h\\n2312 h\\n2312 h\\n2553 a\\n2237 a\\n2312 a\\n2312 a\\n2312 a\\n') == '85873'\nassert solution('20\\n2312 a\\n2553 a\\n2237 a\\n4037 a\\n5237 a\\n2312 h\\n3241 h\\n2237 h\\n2312 h\\n2312 h\\n2553 a\\n2237 a\\n2312 a\\n2312 a\\n2312 a\\n') == '85914'\n"
    },
    {
        "number": 3374,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '85293'\n\nprint('input:', solution(stdin))\n\nprint('correct:', 85293)\n"
    },
    {
        "number": 3374,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '85293'\n\nassert solution(\"1 2\\n1 4\\n1 6\") == '85293'\n\nassert solution(\"1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n10 12\\n5 7\\n3 9\") == '89170'\n"
    },
    {
        "number": 3374,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == '85293'\n\"\"\"\n\nfrom __future__ import print_function\n\n__author__ = \"Amrutha Banerjee\"\n__email__ = \"abanerjee@csu.fullerton.edu\"\n__maintainer__ = \"Amrutha Banerjee\"\n\nimport sys\n"
    },
    {
        "number": 3374,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('11\\n377\\na455\\n180\\na211\\na134\\na46h\\n111\\na213h\\n17\\na15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n') == '85293'\n\nassert solution('17\\n377\\na455\\n180\\na211\\na134\\na46h\\n111\\na213h\\n17\\na15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n') == '44591899'\n\nassert solution('23\\n974\\na974\\na95\\na911\\na895\\na784\\na585\\na165\\na136\\na109\\na103\\na95\\na763\\na466\\na342\\na237\\na223\\na223\\na238\\na112\\na109\\na106\\na99\\na84\\na121\\na109\\na107\\na92\\na82\\na81\\na82\\na57\\na62\\na44\\na19\\na12\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\na00\\"
    },
    {
        "number": 3374,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(open(\"inputs/euler_120.txt\", \"r\").read()) == \"534975\"\nassert solution(open(\"inputs/euler_120_2.txt\", \"r\").read()) == \"518784\"\nassert solution(open(\"inputs/euler_120_3.txt\", \"r\").read()) == \"764761\"\nassert solution(open(\"inputs/euler_120_4.txt\", \"r\").read()) == \"5273541\"\nassert solution(open(\"inputs/euler_120_5.txt\", \"r\").read()) == \"898088\"\n"
    },
    {
        "number": 3374,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''9\n377 a\n455 h\n180 a\n211 a\n134 a\n46 h\n111 h\n213 h\n17 a\n15\n1 2\n1 4\n1 6\n2 3\n2 4\n2 5\n3 5\n4 6\n4 7\n4 9\n5 7\n5 8\n6 9\n7 9\n7 8\n''') == '85293'\n\nassert solution('''8\n19 h\n19 h\n19 h\n19 h\n19 h\n19 h\n19 h\n19 h\n19 h\n19 h\n19 h\n''') == '10'\n\nassert solution('''2\n5\n4 h\n4 h\n''') == '0'\n\nassert solution('''6\n2 a\n3 a\n4 a\n5 a\n2 h\n3 h\n''') == '6633'\n\nassert solution('''6\n2 a\n3 a\n3 a\n4 a\n2 h\n3 h\n''') == '4663'"
    },
    {
        "number": 3375,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 5\n1 2\n1 3\n2 3\n1 4\n2 4''') == '5'\nassert solution('''4 5\n1 2\n2 3\n1 3\n1 4\n2 4''') == '5'\nassert solution('''4 5\n2 3\n1 2\n2 3\n1 3\n1 4\n2 4''') == '5'\nassert solution('''4 5\n1 3\n1 2\n2 3\n2 4\n3 4''') == '5'\nassert solution('''4 5\n1 3\n1 2\n1 4\n2 4\n3 4''') == '5'\n"
    },
    {
        "number": 3375,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 4\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4') == '5'\n'''\n"
    },
    {
        "number": 3375,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 5\n1 2\n1 3\n2 3\n1 4\n2 4''') == '5'\n'''\n\nclass Edge(object):\n    def __init__(self, a, b):\n        self.a = a\n        self.b = b\n\n    def __eq__(self, other):\n        return (self.a, self.b) == (other.a, other.b)\n\n    def __hash__(self):\n        return hash((self.a, self.b))"
    },
    {
        "number": 3375,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"5\"\nassert stdin == \"\"\"4 5\n1 2\n1 3\n2 3\n1 4\n2 4\"\"\"\n"
    },
    {
        "number": 3375,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 3375,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"5\""
    },
    {
        "number": 3375,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 3375,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 4\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4') == 5\nassert solution('2 4\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4') == 0\nassert solution('1 2\\n1 3\\n2 3\\n1 4\\n2 4') == 1\nassert solution('1 2\\n1 3\\n2 3') == 0\nassert solution('1 2\\n1 3\\n2 3\\n3 4\\n4 5') == 1\n"
    },
    {
        "number": 3375,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\n\n-----My Analysis-----\nThe two loops find all the unicyclic subgraphs of size 1 to (V-1)/2. For each subgraph, for each pair of vertices, if they are in the same connected component, we add 1 to the count. "
    },
    {
        "number": 3375,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 5\n1 2\n1 3\n2 3\n1 4\n2 4''') == '5'\nassert solution('''4 5\n1 2\n1 3\n2 3\n1 4\n2 4''') == '5'\nassert solution('''5 5\n1 2\n1 3\n2 3\n1 4\n2 4\n1 5\n2 5''') == '6'\nassert solution('''5 5\n1 2\n1 3\n2 3\n1 4\n2 4\n1 5\n2 5''') == '6'\nassert solution('''5 5\n1 2\n1 3\n2 3\n1 4\n2 4\n1 5\n2 5\n1 6\n2 6\n1 7\n2 7''') == '8'\n"
    },
    {
        "number": 3376,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\"
    },
    {
        "number": 3376,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\"\"\") == \"5100\"\n\"\"\"\nInp:\n3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n\nOut:\n5100\n\nInp:\n4\n2 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n4\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n\nOut:\n4700\n\nInp:\n4\n4 catagary 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n4\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n\nOut:\n5100\n\nInp:\n4\n3 catagary 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n4\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n\nOut:\n5100\n\nInp:\n1\n5\n3 catagary 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n4\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n\nOut:\n5100\n\nInp:\n3\n1\n5\n3 catagary 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n4\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n\nOut:\n5100\n\"\"\"\n\nimport sys\nfrom typing import Dict, List\n\nclass Nudgemon(object):\n    def __init__(self, family, rank, name, candies):\n        self.family = family\n        self.rank = rank\n        self.name = name\n        self.candies = candies"
    },
    {
        "number": 3376,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"6\"\n"
    },
    {
        "number": 3376,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0\\n') == '0'\nassert solution('1\\n') == '1'\nassert solution('2\\n') == '3'\nassert solution('3\\n') == '6'\nassert solution('4\\n') == '10'\n"
    },
    {
        "number": 3376,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5100'\nassert solution('''3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5100'\nassert solution('''3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5100'\nassert solution('''3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5100'\nassert solution('''3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5100'\n"
    },
    {
        "number": 3376,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5100'\n'''\n"
    },
    {
        "number": 3376,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5100'\n'''\n\nimport sys"
    },
    {
        "number": 3376,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n3\\n3 cat\\ncat dog\\ncat') == '11cat1dog'\nassert solution('2\\n3\\n3 cat\\ncat dog\\ncat') == '11cat1dog'\nassert solution('1\\n3\\ncat\\ncat dog\\ncat') == '11cat1dog'\nassert solution('1\\n3\\n3 cat\\ncat dog\\ncat') == '11cat1dog'\nassert solution('1\\n3\\n3 cat\\ncat dog\\ncat') == '11cat1dog'\n"
    },
    {
        "number": 3376,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly') == '5100'\n\n\"\"\"\n\nclass Solution:\n    def solve(self, data: str) -> str:\n        families = [int(x) for x in data.split()[0:-1]]\n        families.sort(reverse=True)\n        n = int(data.split()[-1])\n        candies = [int(x) for x in data.split()[-n:]]\n        res = 0\n        for candy, family in zip(candies, families):\n            # family = candy // family\n            res += candy * family\n        return str(res)\n\nimport unittest\n\nclass TestSolution(unittest.TestCase):\n    def test_solution(self):\n        self.assertEqual(Solution().solve('3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly'), '5100')"
    },
    {
        "number": 3376,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5100'\n\nassert solution('''10\n20\n9\n8\n7\n6\n5\n4\n3\n2\n1\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '75000'\n\nassert solution('''3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '55000'\n\nassert solution('''3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '66000'\n\nassert solution('''5\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '77000'"
    },
    {
        "number": 3377,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n\"\"\") == \"\"\"6\n1\n2\n3\n1\n4\n5\n\"\"\"\n"
    },
    {
        "number": 3377,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n'''\n    ) == '6'\n\nassert solution(\n'''5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n'''\n    ) == '6'\n\nassert solution(\n'''5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n'''\n    ) == '-1'\n\nassert solution(\n'''5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n'''\n    ) == '-1'\n\nassert solution(\n'''5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n'''\n    ) == '6'"
    },
    {
        "number": 3377,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5''') == '6'\nassert solution('''5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5''') == '-1'\nassert solution('''5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5''') == '-1'\nassert solution('''5\n0\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n"
    },
    {
        "number": 3377,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n0\\n1\\n0\\n1\\n0\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\"
    },
    {
        "number": 3377,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n''') == '6\\n1\\n2\\n3\\n1\\n4\\n5'\n'''\nThere are five stairs, and the first stair has five steps. The second stair has five steps. The third stair has four steps, and so on. Each stair has a distinct number of steps. It is not possible to ascend to the top of each stair or to go down to a step on the ground below it, because the first step on the ground cannot be removed.\n\nFor the first sample input, the answer is 6.\n\nEach time step on a stair is the last step on the stair above it, and it is removed when we go down to the step on the ground below it.\n\nA dry plan consists of no more than 10 steps, and each step is removed when we go down to the ground below it.\n\nA wet plan consists of no more than 5 steps, and each step is added when we ascend to the stair above it.\n\nHere are some dry and wet plans for the first sample input:\n\n* First dry plan: 6\n* First wet plan: 1\n* Second dry plan: 8\n* Second wet plan: 1\n* Third dry plan: 9\n* Third wet plan: 1\n* Fourth dry plan: 9\n* Fourth wet plan: 1\n* Fifth dry plan: 9\n* Fifth wet plan: 1\n\nThere are no dry plans for the second sample input:\n\n* There is a dry plan for the third sample input: 3\n* There is a dry plan for the fourth sample input: 4\n* There is a dry plan for the fifth sample input: 5\n'''"
    },
    {
        "number": 3377,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '6'\nassert solution('1\\n3\\n2\\n4\\n1\\n4\\n2\\n3\\n5') == '6'\nassert solution('1\\n3\\n2\\n4\\n1\\n5\\n2\\n3\\n5') == '-1'\nassert solution('1\\n3\\n2\\n4\\n1\\n5\\n2\\n3\\n6') == '-1'\nassert solution('1\\n3\\n2\\n4\\n1\\n5\\n2\\n3\\n6\\n1\\n4\\n2\\n3\\n5') == '6'\n"
    },
    {
        "number": 3377,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(SAMPLE_INPUT_0) == SAMPLE_OUTPUT_0\nassert solution(SAMPLE_INPUT_1) == SAMPLE_OUTPUT_1\nassert solution(SAMPLE_INPUT_2) == SAMPLE_OUTPUT_2\nassert solution(SAMPLE_INPUT_3) == SAMPLE_OUTPUT_3\nassert solution(SAMPLE_INPUT_4) == SAMPLE_OUTPUT_4\n"
    },
    {
        "number": 3377,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(TEST_INPUT) == TEST_OUTPUT\n"
    },
    {
        "number": 3377,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0\\n0') == '-1'\nassert solution('2\\n2\\n0') == '1'\nassert solution('2\\n2\\n1') == '3'\nassert solution('4\\n4\\n0\\n0') == '2'\nassert solution('4\\n4\\n0\\n0\\n0') == '2'\n"
    },
    {
        "number": 3377,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0\\n0\\n\") == \"-1\"\nassert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\"\nassert solution(\"4\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\"\nassert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\"\nassert solution(\"4\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\"\n"
    },
    {
        "number": 3378,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == \"10\"\nassert solution(\n    \"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == \"10\"\nassert solution(\n    \"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == \"10\"\nassert solution(\n    \"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == \"10\"\nassert solution(\n    \"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == \"10\"\n"
    },
    {
        "number": 3378,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n2 5\n1 2 1 2 1\n4\n1 2 R 6\n1 2 O 3\n2 1 O 3\n1 2 R 5\n\"\"\") == \"10\"\nassert solution(\n\"\"\"\n1 10\n1 2 O 4\n1 2 O 4\n2 1 O 4\n1 2 R 2\n\"\"\") == \"10\"\nassert solution(\n\"\"\"\n1 10\n1 2 O 4\n1 2 O 4\n2 1 O 4\n1 2 R 2\n\"\"\") == \"6\"\nassert solution(\n\"\"\"\n2 10\n1 2 O 5\n1 2 O 5\n2 1 O 5\n1 2 R 4\n\"\"\") == \"8\"\nassert solution(\n\"\"\"\n3 5\n1 2 O 2\n2 1 O 2\n3 1 O 2\n4 1 R 2\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3378,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\\\n2 5\n1 2 1 2 1\n4\n1 2 R 6\n1 2 O 3\n2 1 O 3\n1 2 R 5\n''') == '10'\nassert solution('''\\\n2 4\n1 2 O 1\n2 3 R 2\n2 4 O 2\n2 3 R 2\n2 4 R 2\n2 3 O 2\n2 4 O 2\n2 3 O 2\n2 4 O 2\n''') == '2'\nassert solution('''\\\n4 4\n1 2 O 1\n2 3 R 2\n2 4 O 2\n2 3 R 2\n2 4 R 2\n2 3 O 2\n2 4 O 2\n2 3 O 2\n2 4 R 2\n''') == '2'\nassert solution('''\\\n3 3\n1 2 O 1\n2 3 R 2\n2 4 O 2\n2 3 R 2\n2 4 R 2\n2 3 O 2\n2 4 O 2\n2 3 O 2\n2 4 R 2\n''') == '3'\nassert solution('''\\\n4 4\n1 2 O 1\n2 3 R 2\n2 4 R 2\n2 3 O 2\n2 4 O 2\n2 3 O 2\n2 4 R 2\n2 3 O 2\n2 4 O 2\n''') == '4'\n"
    },
    {
        "number": 3378,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 3\n1 2 O\n2 1 O\n1 2 R\n2 1 O\n1 2 R\n''') == '10'\nassert solution('''3 4\n1 2 O\n2 3 O\n1 3 O\n3 1 O\n2 1 R\n2 3 R\n''') == '8'\nassert solution('''4 5\n1 2 O\n2 3 O\n1 3 O\n3 1 O\n1 2 O\n2 3 O\n1 3 O\n3 1 R\n1 2 R\n2 3 R\n2 1 O\n2 3 O\n1 3 O\n3 1 O\n2 1 R\n2 3 R\n''') == '10'\nassert solution('''6 5\n1 2 O\n2 3 O\n1 3 O\n3 1 O\n1 2 O\n2 3 O\n1 3 O\n3 1 R\n1 2 R\n2 3 R\n2 1 O\n2 3 O\n1 3 O\n3 1 R\n''') == '18'\nassert solution('''8 7\n1 2 O\n2 3 O\n1 3 O\n3 1 O\n1 2 O\n2 3 O\n1 3 O\n3 1 R\n1 2 R\n2 3 R\n2 1 O\n2 3 O\n1 3 O\n3 1 R\n''') == '18'\n"
    },
    {
        "number": 3378,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"1\n5\n1 2 1 2 1\n4\n1 2 R 6\n1 2 O 3\n2 1 O 3\n1 2 R 5\n\"\"\") == \"10\"\nassert solution(\n\"\"\"1\n10\n1 2 O 6\n1 2 O 3\n2 1 O 3\n1 2 R 5\n\"\"\") == \"6\"\nassert solution(\n\"\"\"1\n5\n1 2 1 2 1\n4\n1 2 R 6\n1 2 O 3\n2 1 O 3\n1 2 R 5\n\"\"\") == \"6\"\nassert solution(\n\"\"\"1\n5\n1 2 1 2 1\n4\n1 2 O 6\n1 2 O 3\n2 1 O 3\n1 2 R 5\n\"\"\") == \"10\"\nassert solution(\n\"\"\"1\n5\n1 2 1 2 1\n4\n1 2 R 6\n1 2 O 3\n2 1 O 3\n1 2 R 5\n\"\"\") == \"6\"\n"
    },
    {
        "number": 3378,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 2 2 1\\n1 3 2 O 4\\n2 1 1 O 3\\n2 2 1 O 3\\n3 2 2 1 2\\n2 3 2 O 4\\n2 4 2 O 3\\n3 4 2 1 2') == '10'\nassert solution('1 2 1 2 1\\n1 3 2 O 4\\n2 1 1 O 3\\n2 2 1 O 3\\n3 2 2 1 2\\n2 3 2 O 4\\n2 4 2 O 3\\n3 4 2 1 2') == '5'\nassert solution('1 2 1 2 1\\n1 3 2 O 4\\n2 1 1 O 3\\n2 2 1 O 3\\n3 2 2 1 2\\n2 3 2 O 4\\n2 4 2 O 3\\n3 4 2 1 2') == '1'\nassert solution('1 2 1 2 1\\n1 3 2 O 4\\n2 1 1 O 3\\n2 2 1 O 3\\n3 2 2 1 2\\n2 3 2 O 4\\n2 4 2 O 3\\n3 4 2 1 2') == '0'\nassert solution('1 2 1 2 1\\n1 3 2 O 4\\n2 1 1 O 3\\n2 2 1 O 3\\n3 2 2 1 2\\n2 3 2 O 4\\n2 4 2 O 3\\n3 4 2 1 2') == '1'\n"
    },
    {
        "number": 3378,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 3378,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 5\n1 2 1 2 1\n4\n1 2 O 3\n1 2 O 3\n2 1 O 3\n1 2 R 5\n''') == '10'\n'''\n\nn, d = [int(x) for x in stdin.split()]\na = [int(x) for x in stdin.split()]\n\nassert n == len(a)\n\ns = [[0, 0] for _ in range(n)]\nfor i in range(1, d):\n    s[a[i-1]-1][0] = i\n    s[a[i]-1][1] = i\n\nl = [[0, 0, 0] for _ in range(d)]\nl[0] = [a[0], a[0], 0]\n\nfor i in range(1, d):\n    l[i][0] = min(l[i-1][1]+s[i-1][0], l[i-1][2]+s[i-1][0])\n    l[i][1] = min(l[i-1][0]+s[i-1][1], l[i-1][2]+s[i-1][1])\n    l[i][2] = min(l[i-1][0]+s[i-1][1], l[i-1][1]+s[i-1][0])\n\nprint(min(l[d-1]))\n"
    },
    {
        "number": 3378,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5') == '10'\nassert solution('2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5') == '10'\nassert solution('2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5') == '10'\nassert solution('2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5') == '10'\nassert solution('2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5') == '10'\n"
    },
    {
        "number": 3378,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3379,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(solution.__doc__) == '1'\n'''\n"
    },
    {
        "number": 3379,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n0 1\\n1 2\\n2 3\") == \"1\"\nassert solution(\"2 3\\n0 1\\n1 2\") == \"0\"\nassert solution(\"3 4\\n0 1\\n1 2\\n2 3\") == \"1\"\nassert solution(\"3 4\\n0 1\\n1 2\\n2 3\\n3 4\") == \"1\"\nassert solution(\"3 4\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\") == \"0\"\n"
    },
    {
        "number": 3379,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 3\n0 1\n1 2\n2 3''') == '1'\nassert solution('''4 3\n0 1\n1 2\n1 3\n2 3''') == '1'\nassert solution('''4 3\n0 1\n1 2\n0 2\n2 3''') == '1'\nassert solution('''4 3\n0 1\n1 2\n2 3\n2 3''') == '1'\nassert solution('''4 3\n0 1\n1 2\n1 3\n0 2\n3 2\n2 1\n3 1\n2 3''') == '2'\n"
    },
    {
        "number": 3379,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0 3\\n1 2\\n2 3\") == \"1\"\nassert solution(\"3 2\\n0 1\\n1 2\\n2 3\") == \"1\"\nassert solution(\"0 3\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\") == \"1\"\n\n\"\"\""
    },
    {
        "number": 3379,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\"\n\"\"\""
    },
    {
        "number": 3379,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 3\\n0 1\\n1 2\\n2 3\\n3 0\\n') == '1'\nassert solution('3 3\\n0 1\\n1 2\\n2 3\\n3 0\\n3 0\\n') == '4'\nassert solution('3 3\\n0 1\\n1 2\\n2 3\\n3 0\\n2 0\\n') == '2'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3379,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n4 3\n0 1\n1 2\n2 3\n\"\"\"\n) == \"1\"\n\nassert solution(\n\"\"\"\n4 4\n0 1\n1 2\n2 3\n0 2\n\"\"\"\n) == \"0\"\n\nassert solution(\n\"\"\"\n4 4\n0 1\n1 2\n2 3\n0 2\n0 3\n\"\"\"\n) == \"0\"\n"
    },
    {
        "number": 3379,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\n\n\"\"\"\n"
    },
    {
        "number": 3379,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4 3\n0 1\n1 2\n2 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n2 3\n0 1\n1 2\n2 1\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3 4\n0 1\n0 2\n1 3\n1 2\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4 4\n0 1\n0 2\n0 3\n0 4\n1 2\n1 3\n1 4\n2 3\n3 4\n\"\"\") == \"0\"\nassert solution(\"\"\"\n4 3\n0 1\n1 2\n2 3\n1 3\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3379,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '1'\n\n\"\"\"\n\nclass Graph:\n    def __init__(self, edges):\n        self.edges = edges\n        self.visited = set()\n        self.v = {}\n        for x, y in edges:\n            self.v.setdefault(x, set()).add(y)\n            self.v.setdefault(y, set()).add(x)\n\n    def dfs(self):\n        for x in self.v:\n            if x not in self.visited:\n                self.dfs_visit(x)\n\n    def dfs_visit(self, x):\n        self.visited.add(x)\n        for y in self.v[x]:\n            if y not in self.visited:\n                self.dfs_visit(y)"
    },
    {
        "number": 3380,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0.962962962963\"\n\nassert solution(\"0 0\") == \"0.0\"\n\nassert solution(\"1 2 3\") == \"1.0\"\n\nassert solution(\"4 5 6\") == \"0.0\"\n\nassert solution(\"1000000\") == \"0.0\"\n\"\"\"\n\nimport math"
    },
    {
        "number": 3380,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3380,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"4\"\n) == \"0.96296296296\"\nassert solution(\n\"5\"\n) == \"0.958904109589\"\nassert solution(\n\"6\"\n) == \"0.9291351351351\"\nassert solution(\n\"8\"\n) == \"0.9318181818182\"\nassert solution(\n\"10\"\n) == \"0.9380751849462\"\n"
    },
    {
        "number": 3380,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"0.962962962963\"\nassert solution(\"5\") == \"0.0400085449219\"\nassert solution(\"6\") == \"0.048483478796\"\nassert solution(\"7\") == \"0.056698347879\"\nassert solution(\"8\") == \"0.066983478798\"\n"
    },
    {
        "number": 3380,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3') == '1.0'\nassert solution('3\\n2\\n3\\n') == '0.962962962963'\nassert solution('4\\n4\\n3\\n3') == '0.96829743947'\nassert solution('1\\n1\\n1\\n1') == '1.0'\nassert solution('3\\n2\\n3\\n') == '0.97297297297'\n"
    },
    {
        "number": 3380,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"4\n\"\"\") == \"0.96296296296\"\nassert solution(\"\"\"6\n\"\"\") == \"0.96875\"\nassert solution(\"\"\"11\n\"\"\") == \"0.999999999999\"\nassert solution(\"\"\"52\n\"\"\") == \"0.999999999999\"\nassert solution(\"\"\"100\n\"\"\") == \"1.0\"\n"
    },
    {
        "number": 3380,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n2') == '0.5'\nassert solution('3\\n3') == '0.333333333333'\nassert solution('4\\n4') == '0.25'\nassert solution('5\\n5') == '0.2'\nassert solution('6\\n6') == '0.166666666666667'\n"
    },
    {
        "number": 3380,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n4\n\"\"\") == 0.962962962963\n\nassert solution(\n\"\"\"\n5\n\"\"\") == 0.962962962963\n\nassert solution(\n\"\"\"\n6\n\"\"\") == 0.962962962963\n\nassert solution(\n\"\"\"\n8\n\"\"\") == 0.962962962963\n\nassert solution(\n\"\"\"\n12\n\"\"\") == 0.962962962963"
    },
    {
        "number": 3380,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4') == '0.96296296296'\nassert solution('4\\n1') == '0.96296296296'\nassert solution('4\\n2') == '0.0555555555555'\nassert solution('4\\n3') == '0.6363636363636'\nassert solution('4\\n4') == '0.6875'\n"
    },
    {
        "number": 3380,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '4'\n) == '0.962962962963'\nassert solution(\n    '5'\n) == '0.439612378972'\nassert solution(\n    '10'\n) == '0.997009036020'\nassert solution(\n    '100'\n) == '0.999509893029'\nassert solution(\n    '1000'\n) == '0.999899881573'\n"
    },
    {
        "number": 3381,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 0\\n40000000 0\\n0 40000000\\n') == '0 0\\n40000000 0\\n0 40000000\\n'\n\nassert solution('1\\n') == '0 0\\n'\nassert solution('2\\n') == '0 0\\n0 1\\n'\nassert solution('3\\n') == '0 0\\n0 1\\n0 2\\n'\nassert solution('4\\n') == '0 0\\n0 1\\n0 2\\n0 3\\n'\n"
    },
    {
        "number": 3381,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0\n3\n0 0\n40000000 0\n0 40000000''') == '0 0\\n40000000 0\\n0 40000000'\n'''\n"
    },
    {
        "number": 3381,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3''') == '0 0'\nassert solution('''0''') == '0 0'\nassert solution('''4''') == '0 40000000'\nassert solution('''6''') == '0 40000000 0 0 0 0'\nassert solution('''10''') == '0 40000000 0 0 0 0 0 0 0 0 0'\n"
    },
    {
        "number": 3381,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"3 4\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 1\") == \"\"\n"
    },
    {
        "number": 3381,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3''') == '''0 0\n40000000 0\n0 40000000'''\nassert solution('''10''') == '''0 0\n0 40000000\n0 0\n40000000 0\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n40000000 0'''\nassert solution('''100''') == '''0 0\n0 40000000\n0 0\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n0 40000000\n0 0\n"
    },
    {
        "number": 3381,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3') == '0 0\\n40000000 0\\n0 40000000'\nassert solution('4') == '0 0\\n0 0\\n0 40000000\\n40000000 0'\nassert solution('5') == '0 0\\n0 0\\n40000000 0\\n0 40000000\\n40000000 40000000'\nassert solution('6') == '0 0\\n0 0\\n40000000 0\\n0 40000000\\n0 80000000\\n40000000 40000000'\nassert solution('7') == '0 0\\n0 0\\n40000000 0\\n0 40000000\\n0 80000000\\n0 80000000\\n40000000 40000000'\n"
    },
    {
        "number": 3381,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3''') == '''0 0\n40000000 0\n0 40000000\n'''\nassert solution('''300000''') == '''0 0\n30000000 0\n0 300000\n30000000 0\n0 30000000\n30000000 0\n0 0\n0 30000000\n0 30000000\n0 0\n30000000 0\n0 0\n0 30000000\n0 30000000\n0 0\n'''\nassert solution('''9000001''') == '''0 0\n80000009 0\n80000009 0\n0 80000009\n0 80000009\n80000009 0\n80000009 0\n0 80000009\n80000009 0\n0 80000009\n80000009 0\n80000009 0\n0 80000009\n'''\nassert solution('''10000000''') == '''0 0\n40000000 0\n0 40000000\n0 0\n0 40000000\n40000000 0\n40000000 0\n40000000 0\n0 0\n40000000 0\n40000000 0\n0 40000000\n0 40000000\n40000000 0\n40000000 0\n40000000 0\n0 0\n40000000 0\n40000000 0\n40000000 0\n0 0\n40000000 0\n40000000 0\n0 40000000\n0 40000000\n40000000 0\n0 40000000\n0 0\n0 40000000\n0 40000000\n0 0\n0 0\n40000000 0\n0 40000000\n0 0\n'''\nassert solution('''50000''') == '''0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n"
    },
    {
        "number": 3381,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3''') == '''0 0\n40000000 0\n0 40000000'''\nassert solution('''4''') == '''0 0\n0 40000000\n0 40000000\n40000000 0\n40000000 40000000'''\nassert solution('''5''') == '''0 0\n0 40000000\n0 40000000\n40000000 0\n40000000 40000000\n40000000 40000000'''\nassert solution('''6''') == '''0 0\n0 40000000\n0 40000000\n40000000 0\n40000000 40000000\n40000000 40000000\n40000000 40000000'''\nassert solution('''7''') == '''0 0\n0 40000000\n0 40000000\n40000000 0\n40000000 40000000\n40000000 40000000\n40000000 40000000\n40000000 40000000'''\n"
    },
    {
        "number": 3381,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\n1\\n0\\n3\\"
    },
    {
        "number": 3381,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '''1\n3\n2 4 5\n'''\n) == '0 0\\n40000000 0\\n0 40000000'\n\nassert solution(\n    '''3\n1000000000\n2 1 3\n1000000000 1\n'''\n) == '0 0\\n40000000 0\\n0 40000000'\n\nassert solution(\n    '''5\n5\n0 1 1 3 5\n1 1 2 3 4\n3 3 4 5 6\n5 5 6 7 8\n'''\n) == '0 0\\n0 1 1\\n1 1 0\\n3 3 2\\n4 4 0\\n5 5 2\\n6 7 0'\n\nassert solution(\n    '''10\n10\n0 1 1 2 3 4 5 6 7 8 9 10\n8 9 10\n0 8\n1 7\n2 6\n3 5\n4 4\n5 3\n6 2\n7 1\n8 0\n9 -1\n'''\n) == '0 0\\n0 1 1\\n0 2 2\\n0 3 3\\n0 4 4\\n0 5 5\\n0 6 6\\n0 7 7\\n0 8 8\\n0 9 9'\n\nassert solution(\n    '''8\n8\n0 1 1 2 3 4 5 6 7\n7 6 5 4 3 2 1 0\n0 1 1 2 3 4 5 6\n6 5 4 3 2 1 0\n0 1 1 2 3 4 5 6\n5 4 3 2 1 0\n0 1 1 2 3 4 5 6\n4 3 2 1 0\n'''\n) == '0 0\\n0 1 1\\n0 2 2\\n0 3 3\\n0 4 4\\n0 5 5\\n0 6 6\\n0 7 7\\n0 8 8'"
    },
    {
        "number": 3382,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"3 5 5 2\"\n) == \"1\"\n\nprint(\"No test set\")\n"
    },
    {
        "number": 3382,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 5 5 2') == '1'\nassert solution('4 3 5 2') == '2'\nassert solution('3 4 5 2') == '2'\nassert solution('4 3 6 2') == '3'\nassert solution('1 4 3 6 2') == '3'\n"
    },
    {
        "number": 3382,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 5 5 2') == '1'\nassert solution('3 1 5 2') == '2'\nassert solution('3 2 3 5') == 'impossible'\nassert solution('3 1 3 5') == 'impossible'\nassert solution('3 3 2 3') == 'impossible'\n"
    },
    {
        "number": 3382,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 5 5 2''') == '1'\nassert solution('''5 4 3 2''') == '2'\nassert solution('''9 8 7 6''') == '0'\nassert solution('''11 9 10 8''') == 'impossible'\n'''\nimport sys\nsys.path.append(\"/Users/Zach/Python/PyTestFixtures/\")\nimport PyTestFixture"
    },
    {
        "number": 3382,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 5 5 2\") == \"1\"\nassert solution(\"1 5 2 2\") == \"impossible\"\nassert solution(\"1 5 2 2\") == \"impossible\"\nassert solution(\"3 5 5 2\") == \"1\"\nassert solution(\"1 1 1 1\") == \"impossible\"\n"
    },
    {
        "number": 3382,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 5 5 2') == '1'\nassert solution('1 1 2 3 3') == '1'\nassert solution('1 1 2 3 3 4') == '2'\nassert solution('1 1 2 3 3 4 5') == '2'\nassert solution('1 1 2 3 3 4 5 6') == '2'\n"
    },
    {
        "number": 3382,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 3 2 4\") == \"Impossible\"\nassert solution(\"1 3 2 4\") == \"1\"\nassert solution(\"1 3 2 4\") == \"1\"\nassert solution(\"1 3 2 4\") == \"1\"\nassert solution(\"1 3 2 4\") == \"1\"\n"
    },
    {
        "number": 3382,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 5 5 2') == '1'\nassert solution('3 3 2 2') == '1'\nassert solution('3 5 2 3') == '2'\nassert solution('3 5 2 3') == '2'\nassert solution('3 3 2 2') == 'impossible'\n"
    },
    {
        "number": 3382,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\"\n\"\"\"\n\nbase_values = [int(value) for value in input().strip().split()]\n\noperators = ['+', '-', '*', '/']\noperators_num = len(operators)\n\nresult = []\n\nfor operator_idx in range(operators_num):\n    for first_idx in range(operators_num - 1):\n        for second_idx in range(first_idx, operators_num):\n            if operators[operator_idx] == '+':\n                result.append(base_values[first_idx] + base_values[second_idx])\n            elif operators[operator_idx] == '-':\n                result.append(base_values[first_idx] - base_values[second_idx])\n            elif operators[operator_idx] == '*':\n                result.append(base_values[first_idx] * base_values[second_idx])\n            else:\n                result.append(base_values[first_idx] / base_values[second_idx])"
    },
    {
        "number": 3382,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '1'\nassert solution(stdin) == '1'\nassert solution(stdin) == '1'\nassert solution(stdin) == '1'\nassert solution(stdin) == '1'\n"
    },
    {
        "number": 3383,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\\n\") == \"2\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\\n\") == \"0\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\\n\") == \"0\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\\n\") == \"0\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\\n\") == \"0\"\n"
    },
    {
        "number": 3383,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0''') == \"2\"\nassert solution('''10 3 5 5\n0 0 0\n0 -10 0\n10 0 0\n0 0 0''') == \"0\"\nassert solution('''20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0''') == \"2\"\nassert solution('''20 3 5 5\n0 0 0\n0 -10 0\n10 0 0\n0 0 0''') == \"1\"\nassert solution('''5 2 2\n-10 -2 -2\n-10 -2 -2\n-10 -2 -2\n-10 -2 -2''') == \"2\"\n"
    },
    {
        "number": 3383,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''20 3 5 5''') == '2'\nassert solution('''20 3 5 5''') == '2'\nassert solution('''30 3 5 5''') == '0'\nassert solution('''30 3 5 5''') == '0'\nassert solution('''60 3 5 5''') == '1'\n"
    },
    {
        "number": 3383,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2'\n\nassert solution(\"0 0 0\") == '0'\n\nassert solution(\"0 -10 0\") == '0'\n\nassert solution(\"0 0 0\") == '0'\n\nassert solution(\"-10 0 0\") == '0'"
    },
    {
        "number": 3383,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('1 0 0\\n0 -10 0\\n30 0 0') == '2'\nassert solution('1 0 0\\n0 0 0\\n0 0 0') == '0'\nassert solution('2 4 4\\n1 0 0\\n0 0 0\\n0 0 0') == '2'\nassert solution('4 5 6\\n-1 0 0\\n-1 0 0\\n0 0 0\\n0 0 0') == '0.00'\n"
    },
    {
        "number": 3383,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0''') == '2'\nassert solution('''20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0"
    },
    {
        "number": 3383,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''20 3 5 5''') == '2'\nassert solution('''0 0 0''') == '0'\nassert solution('''0 -10 0''') == '0'\nassert solution('''30 0 0''') == '0'\nassert solution('''0 0 0''') == '0'\n"
    },
    {
        "number": 3383,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\"\n\"\"\""
    },
    {
        "number": 3383,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 3383,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\\n') == '0'\nassert solution('1 2 3 4\\n-1 -2 -3 -4\\n1 2 3 4\\n-1 -2 -3 -4\\n1 2 3 4\\n-1 -2 -3 -4\\n1 2 3 4\\n-1 -2 -3 -4\\n1 2 3 4\\n-1 -2 -3 -4') == '2'\nassert solution('1 2 3 4\\n-1 -2 -3 -4\\n1 2 3 4\\n-1 -2 -3 -4\\n1 2 3 4\\n-1 -2 -3 -4\\n1 2 3 4\\n-1 -2 -3 -4\\n1 2 3 4\\n-1 -2 -3 -4') == '0'\nassert solution('2 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1') == '1'\nassert solution('3 3 3 3\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1') == '2'\n"
    },
    {
        "number": 3384,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == '10'\nassert solution('101') == '102'\nassert solution('11') == '12'\nassert solution('111') == '112'\nassert solution('1111') == '1121'\n"
    },
    {
        "number": 3384,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1 1\"\nassert solution(\"2\") == \"2 1\"\nassert solution(\"3\") == \"3 1\"\nassert solution(\"4\") == \"4 1\"\nassert solution(\"5\") == \"5 1\"\n"
    },
    {
        "number": 3384,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('13') == '12 14'\nassert solution('1234567890123456789012345678901234567890') == '1234567890 12 345 678 90'\nassert solution
    },
    {
        "number": 3384,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('13') == '12 14'\nassert solution('123456789012345678901234567890123456789012345678901234567890') == '12 345 67890123456789012 3456789012345678901234567890'\nassert solution('987654321098765432109876543210987654321098765432109876543210987654321') == '987654321098765432109876543210987654321098765432109876543210987654321'\n'''"
    },
    {
        "number": 3384,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('13') == '12 14'\nassert solution('1234') == '12 14'\nassert solution('1024') == '12 14'\nassert solution('111111111') == '919191919'\nassert solution('1099999910') == '19191919'\n"
    },
    {
        "number": 3384,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('13') == '12 14'\nassert solution('1891') == '1892 12'\nassert solution('1234') == '1234'\nassert solution('123412341234') == '12341234'\nassert solution('1245') == '1245'\n"
    },
    {
        "number": 3384,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('13') == '12 14'\nassert solution('23') == '12 13'\nassert solution('43') == '12 13'\nassert solution('4321') == '12 13'\nassert solution('4321a') == '12 13'\n"
    },
    {
        "number": 3384,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('123456789123456789123456789') == '123456789123456789123456789'\nassert solution('100') == '100'\nassert solution('123456789123456789123456789') == '123456789123456789123456789'\n"
    },
    {
        "number": 3384,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('13') == '12 14'\nassert solution('1') == '10'\nassert solution('101') == '110'\nassert solution('1211') == '1222'\nassert solution('1000000000') == '10022'\n"
    },
    {
        "number": 3384,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('123456789') == '1214'\nassert solution('12514') == '1214'\nassert solution
    },
    {
        "number": 3385,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == \"0\"\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == \"0\"\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == \"0\"\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == \"0\"\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == \"0\"\n"
    },
    {
        "number": 3385,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(open(\"test_data/p099_halloween_bonfire.txt\").read()) == \"0\"\n'''"
    },
    {
        "number": 3385,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''5\n1 0 0\n1 0 1\n3 0 1\n3 0 0\n3 0 1'''\n) == '0'\n\nassert solution(\n'''5\n3 0 1\n3 0 0\n3 0 1\n2 0 1\n3 0 1'''\n) == '0'\n\nassert solution(\n'''6\n1 0 0\n1 0 1\n2 0 1\n3 0 0\n3 0 1\n4 0 1'''\n) == '2'\n\nassert solution(\n'''3\n1 0 1\n2 0 1\n3 0 1'''\n) == '0'\n\nassert solution(\n'''5\n4 0 1\n4 0 2\n4 0 3\n3 0 1\n3 0 2'''\n) == '6'"
    },
    {
        "number": 3385,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n'''\n"
    },
    {
        "number": 3385,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"0\"\n\n---\n**For example, if you can see an odd number of children, there is no solution, because the children are standing in the center of the circle, so there are no children to the left of them, and no children to the right of them.**\n\nSince there are no examples of a solution, the tests will take a while to run, so please do not submit this.\n\n---\n\n![Screenshot](https://s3.amazonaws.com/codecademy-content/courses/401-data-structures/images/halloween-circular-bonfire.png)"
    },
    {
        "number": 3385,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 0\n"
    },
    {
        "number": 3385,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1\"\n\n-----Working\n"
    },
    {
        "number": 3385,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 3385,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3385,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n') == '0'\nassert solution('2\\n1 0\\n1 1\\n') == '0'\nassert solution('1\\n1 0\\n1 0\\n') == '0'\nassert solution('1\\n1 1\\n') == '0'\nassert solution('2\\n0 0\\n1 1\\n') == '0'\n"
    },
    {
        "number": 3386,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 1\\n2 2\\n1 3\"\n\n\"\"\""
    },
    {
        "number": 3386,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3\\n') == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3'\nassert solution('3 3\\n') == '1 1\\n1 2\\n2 2\\n1 3\\n2 3\\n2 1'\nassert solution('5 5\\n') == '1 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 1'\nassert solution('7 7\\n') == '1 1\\n1 2\\n1 3\\n2 2\\n2 3\\n3 4\\n3 5\\n4 4\\n4 5\\n5 5\\n5 1'\nassert solution('7 7\\n') == '1 1\\n1 2\\n1 3\\n2 2\\n2 3\\n3 4\\n3 5\\n4 4\\n4 5\\n5 5\\n5 1'\n"
    },
    {
        "number": 3386,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1') == '1 1'\nassert solution('1 2') == '1 1'\nassert solution('1 3') == '1 1'\nassert solution('1 2 3') == '1 1'\nassert solution('1 2 3') == '1 1'\n"
    },
    {
        "number": 3386,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\n3 4') == '1 1'\nassert solution('1 2\\n3 4\\n2 3\\n4 1') == '1 1\\n2 2\\n3 3\\n4 4'\nassert solution('1 2\\n3 4\\n2 3\\n4 1\\n2 3') == '1 1\\n2 2\\n3 3\\n4 4\\n2 1'\nassert solution('1 2\\n3 4\\n2 3\\n4 1\\n2 1') == '1 1\\n2 2\\n3 3\\n4 4\\n1 2'\nassert solution('1 2\\n3 4\\n2 3\\n4 1\\n1 3') == '1 1\\n2 2\\n3 3\\n4 4\\n2 1'\n"
    },
    {
        "number": 3386,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 3''') == '-1'\nassert solution('''3 3''') == '1 1'\nassert solution('''3 5''') == '-1'\nassert solution('''7 8''') == '2 2'\nassert solution('''17 19''') == '2 2'\n"
    },
    {
        "number": 3386,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3') == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3'\nassert solution('3 3') == '-1'\nassert solution('4 5') == '1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n3 1\\n3 2\\n3 3\\n3 4\\n3 5'\nassert solution('6 6') == '2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6'\nassert solution('7 7') == '-1'\n'''"
    },
    {
        "number": 3386,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3386,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"-1\"\nassert solution(\"1 2\") == \"1 1\"\nassert solution(\"3 4\") == \"1 1\"\nassert solution(\"3 3\") == \"-1\"\nassert solution(\"6 6\") == \"-1\"\n"
    },
    {
        "number": 3386,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 4') == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3'\nassert solution('2 3') == '1 1\\n2 2'\nassert solution('3 3') == '1 1\\n2 2\\n3 1'\nassert solution('5 2') == '1 1\\n2 2\\n1 3\\n2 1\\n3 1'\nassert solution('4 5') == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3'\n"
    },
    {
        "number": 3386,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 3''') == '''1 1\n2 2\n1 3'''\nassert solution('''3 4''') == '''1 1\n1 2\n1 3\n2 1\n2 3\n2 2'''\nassert solution('''3 4''') == '''1 1\n1 2\n1 3\n2 2\n2 3\n3 1\n3 2\n3 3'''\nassert solution('''5 7''') == '''1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 1\n3 2\n3 4\n3 5\n3 6\n3 7\n4 1\n4 2\n4 3\n4 4\n4 5\n4 6\n4 7\n5 1\n5 2\n5 3\n5 4\n5 5\n5 6\n5 7\n6 1\n6 2\n6 3\n6 4\n6 5\n6 6\n6 7\n7 1\n7 2\n7 3\n7 4\n7 5\n7 6\n7 7'''\nassert solution('''5 7''') == '''1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 1\n3 2\n3 3\n3 4\n3 5\n3 6\n3 7\n4 1\n4 2\n4 3\n4 4\n4 5\n4 6\n4 7\n5 1\n5 2\n5 3\n5 4\n5 5\n5 6\n5 7\n6 1\n6 2\n6 3\n6 4\n6 5\n6 6\n6 7\n7 1\n7 2\n7 3\n7 4\n7 5\n7 6\n7 7'''\n"
    },
    {
        "number": 3387,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3387,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 10\\n0 10 1\\n0 10 1\\n0 10 1\\n') == '3.33333333\\n3.33333333\\n3.33333333'\nassert solution('0 10\\n0 10 1\\n0 10 1\\n0 10 1\\n') == '3.33333333\\n3.33333333\\n3.33333333'\nassert solution('0 10\\n0 10 1\\n0 10 1\\n0 10 1\\n') == '3.33333333\\n3.33333333\\n3.33333333'\nassert solution('0 10\\n0 10 1\\n0 10 1\\n0 10 1\\n') == '3.33333333\\n3.33333333\\n3.33333333'\nassert solution('0 10\\n0 10 1\\n0 10 1\\n0 10 1\\n') == '3.33333333\\n3.33333333\\n3.33333333'\n"
    },
    {
        "number": 3387,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 10 1') == '3.33333333'\nassert solution('0 10 1 0 10 1') == '3.33333333'\nassert solution('0 10 1 0 10 1 0 10 1') == '3.33333333'\nassert solution('1 10 1 0 10 1 0 10 1') == '3.33333333'\nassert solution('1 10 1 0 10 1 0 10 1 0 10 1') == '3.33333333'\n"
    },
    {
        "number": 3387,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0 10\\n0 10 1\\n0 10 1\") == \"3.33333333\"\nassert solution(\"0 10\\n0 10 1\\n0 10 1\") == \"3.33333333\"\nassert solution(\"1 10\\n1 10 1\\n1 10 1\") == \"3.33333333\"\nassert solution(\"1 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"1.5\"\nassert solution(\"2 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"0.166667\"\n"
    },
    {
        "number": 3387,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0 10 1\") == \"3.33333333\"\nassert solution(\"0 10 1\") == \"3.33333333\"\nassert solution(\"0 10 1\") == \"3.33333333\"\n\"\"\""
    },
    {
        "number": 3387,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 10\\n0 10 1\\n0 10 1') == '3.33333333\\n3.33333333\\n3.33333333'\nassert solution('1 10\\n0 10 1\\n0 10 1') == '3.33333333\\n3.33333333\\n3.33333333'\nassert solution('2 10\\n0 10 1\\n0 10 1') == '3.33333333\\n3.33333333\\n3.33333333'\nassert solution('3 10\\n0 10 1\\n0 10 1\\n0 10 1') == '3.33333333\\n3.33333333\\n3.33333333'\nassert solution('4 10\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1') == '3.33333333\\n3.33333333\\n3.33333333\\n3.33333333'\n"
    },
    {
        "number": 3387,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 10\\n0 10 1\\n0 10 1\\n0 10 1') == '3.33333333'\nassert solution('1 10\\n1 10 1\\n1 10 1\\n1 10 1') == '3.33333333'\nassert solution('1 10\\n1 10 1\\n1 10 1\\n1 10 1') == '3.33333333'\nassert solution('2 10\\n0 10 1\\n0 10 1\\n0 10 1') == '3.33333333'\nassert solution('2 10\\n0 10 1\\n0 10 1\\n0 10 1') == '3.33333333'\n"
    },
    {
        "number": 3387,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3387,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 10\\n0 10 1\\n0 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\"\n\nassert solution(\"1 10\\n0 10 1\\n0 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\"\n\nassert solution(\"3 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\"\n\"\"\""
    },
    {
        "number": 3387,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0 10\") == \"3.33333333\"\nassert solution(\"0 10 1\") == \"3.33333333\"\nassert solution(\"0 10 1 2\") == \"3.33333333\"\nassert solution(\"0 10 1 2 3\") == \"3.33333333\"\nassert solution(\"0 10 1 2 3 4\") == \"3.33333333\"\n"
    },
    {
        "number": 3388,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n3 1 4') == '0'\nassert solution('2\\n5 2 3') == '1'\nassert solution('2\\n5 1 1') == '0'\nassert solution('3\\n7 1 1') == '1'\nassert solution('3\\n7 2 1') == '0'\n"
    },
    {
        "number": 3388,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n3 3 2''') == '1'\nassert solution('''3\n2 1 3\n''') == '2'\nassert solution('''4\n10 3 2 4\n''') == '4'\nassert solution('''4\n1 1 1 1\n''') == '5'\nassert solution('''5\n1 1 1 1 1\n''') == '2'\n"
    },
    {
        "number": 3388,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n3\\n3\\n2\\n3\\n3') == '1'\nassert solution('2\\n3\\n3\\n3\\n3') == '2'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8') == '0'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15') == '1'\nassert solution('1\\n1\\n1\\n1\\n1') == '4'\n"
    },
    {
        "number": 3388,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0\\n3\\n3 3\\n3') == '2'\nassert solution('0\\n3\\n2 2 2\\n2') == '1'\nassert solution('0\\n2\\n1 1\\n2') == '2'\nassert solution('0\\n2\\n2 1 1\\n2') == '1'\nassert solution('0\\n2\\n2 2 2\\n2') == '0'\n"
    },
    {
        "number": 3388,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 3388,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n1 2\\n0 0') == '0'\nassert solution('2\\n1 2\\n0 0') == '1'\nassert solution('2\\n1 2\\n0 0') == '1'\nassert solution('1\\n1') == '0'\nassert solution('1\\n1') == '0'\n"
    },
    {
        "number": 3388,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n3\\n3\\n3\\n3') == '2'\nassert solution('1\\n3\\n3\\n3\\n3') == '2'\nassert solution('1\\n3\\n3\\n3\\n3') == '2'\nassert solution('1\\n3\\n3\\n3\\n3') == '2'\nassert solution('1\\n3\\n3\\n3\\n3') == '2'\n"
    },
    {
        "number": 3388,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3388,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3388,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 3 2\") == \"1\"\nassert solution(\"4\\n3 3 3 4\\n\") == \"2\"\nassert solution(\"2\\n3 3\") == \"1\"\nassert solution(\"2\\n3 3 2\\n\") == \"0\"\nassert solution(\"2\\n3 3 4\\n4\\n4 4 3 4\\n\") == \"1\"\n"
    },
    {
        "number": 3389,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abba') == '2'\nassert solution('abb') == '1'\nassert solution('ab') == '0'\nassert solution('abc') == '0'\nassert solution('abcd') == '0'\n"
    },
    {
        "number": 3389,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(open(\"data/test_WatchLater.txt\").read()))\n\"\"\"\n"
    },
    {
        "number": 3389,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''abba\n\n''') == '2'\n\nassert solution('''aab\n\n''') == '2'\n\nassert solution('''baa\n\n''') == '2'\n\nassert solution('''bab\n\n''') == '3'\n\nassert solution('''aaba\n\n''') == '3'"
    },
    {
        "number": 3389,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"aababababa\") == \"4\"\nassert solution(\"aba\") == \"2\"\nassert solution(\"a\") == \"1\"\nassert solution(\"bba\") == \"2\"\nassert solution(\"\") == \"\"\n\nprint(\"all tests passed\")"
    },
    {
        "number": 3389,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"aabb\", \"abba\") == \"2\"\nassert solution(\"abca\", \"abba\") == \"3\"\nassert solution(\"aabb\", \"abbb\") == \"0\"\nassert solution(\"abca\", \"abbb\") == \"1\"\nassert solution(\"abca\", \"abcb\") == \"2\"\n"
    },
    {
        "number": 3389,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('abba') == 2\nassert solution('aaaa') == 0\nassert solution('abcd') == 1\nassert solution('abc') == 1\nassert solution('aabcd') == 2\n"
    },
    {
        "number": 3389,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(\"abb\") == \"1\"\nassert solution(\"abab\") == \"2\"\nassert solution(\"abababab\") == \"3\"\nassert solution(\"babababab\") == \"4\"\n"
    },
    {
        "number": 3389,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('aba' == 'a')\nassert solution('abba' == 'baa')\nassert solution('baa' == 'aba')\nassert solution('a' == 'a')\nassert solution('aa' == 'aa')\n"
    },
    {
        "number": 3389,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == '2'\n'''\n"
    },
    {
        "number": 3389,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abba') == \"2\"\nassert solution('baaab') == \"3\"\nassert solution('bbb') == \"1\"\nassert solution('bbbba') == \"4\"\nassert solution('baaabab') == \"3\"\n"
    },
    {
        "number": 3390,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3\n1 2\n2 3\n2 4''') == '3'\n\nassert solution('''5 3\n1 2\n1 3\n3 4\n3 5\n2 4''') == '4'\n\nassert solution('''5 5\n1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n1 2\n2 3\n2 4\n3 4\n3 5\n4 5''') == '8'\n\nassert solution('''6 7\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 3\n2 4\n2 5\n2 6\n2 7\n1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n2 4\n2 5\n2 6\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n2 4\n2 5\n2 6\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n2 4\n2 5\n2 6\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n2 4\n2 5\n2 6\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n2 4\n2 5\n2 6\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n2 4\n2 5\n2 6\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n2 4\n2 5\n2 6\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n2 4\n2 5\n2"
    },
    {
        "number": 3390,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"4 3\n1 2\n2 3\n2 4\"\"\") == \"3\"\nassert solution(\n\"\"\"4 3\n1 2\n2 3\n1 4\"\"\") == \"2\"\nassert solution(\n\"\"\"4 3\n1 2\n1 3\n2 4\"\"\") == \"1\"\n"
    },
    {
        "number": 3390,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"4 3\n1 2\n2 3\n2 4\n\"\"\") == \"3\"\nassert solution(\n\"\"\"3 3\n1 2\n1 3\n2 3\n\"\"\") == \"2\"\nassert solution(\n\"\"\"4 3\n1 2\n1 3\n2 4\n1 2\n3 4\n\"\"\") == \"4\"\nassert solution(\n\"\"\"5 5\n2 3\n2 3\n2 4\n3 4\n4 5\n1 2\n1 3\n1 4\n3 4\n2 3\n2 4\n1 2\n3 4\n1 2\n1 3\n1 4\n3 4\n2 3\n2 4\n1 2\n3 4\n1 2\n3 4\n1 2\n1 3\n1 4\n3 4\n2 3\n2 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1"
    },
    {
        "number": 3390,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3390,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 3\n1 2\n2 3\n2 4\n''') == '3'\nassert solution('''6 4\n1 2\n1 3\n2 4\n3 4\n4 5\n5 6\n''') == '4'\nassert solution('''3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n2 4\n1 2\n''') == '3'\nassert solution('''2 4\n1 2\n1 3\n2 4\n2 4\n''') == '2'\nassert solution('''4 4\n1 2\n1 3\n2 4\n2 4\n1 2\n1 3\n2 4\n2 4\n''') == '2'\n"
    },
    {
        "number": 3390,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 3\n1 2\n2 3\n2 4\n''') == '3'\nassert solution('''4 3\n1 2\n2 3\n2 4\n2 4\n''') == '4'\nassert solution('''10 5\n3 4\n2 4\n4 3\n1 3\n1 5\n1 4\n3 1\n1 2\n1 6\n1 2\n1 3\n1 6\n1 2\n1 4\n1 4\n1 3\n2 1\n1 2\n1 4\n1 3\n1 5\n1 3\n1 2\n1 4\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2 1\n1 3\n1 2\n1 5\n1 3\n1 5\n1 3\n1 2\n2"
    },
    {
        "number": 3390,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n2 4\\n\") == \"3\"\nassert solution(\"10 10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n\") == \"6\"\nassert solution(\"2 3\\n2 4\\n3 4\\n\") == \"1\"\nassert solution(\"3 3\\n1 2\\n1 3\\n3 2\\n\") == \"2\"\nassert solution(\"10 10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n\") == \"6\"\n"
    },
    {
        "number": 3390,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 3\n1 2\n2 3\n2 4\n''') == '3'\nassert solution('''4 3\n1 2\n2 3\n3 4\n''') == '3'\nassert solution('''4 2\n2 3\n1 3\n''') == '2'\nassert solution('''4 4\n1 2\n2 3\n3 4\n4 1\n''') == '3'\nassert solution('''4 5\n1 2\n2 3\n3 4\n4 1\n''') == '4'\n"
    },
    {
        "number": 3390,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\n2 3\\n2 4\") == \"3\"\nassert solution(\"4 2\\n1 2\\n2 3\\n2 4\") == \"3\"\nassert solution(\"5 2\\n1 2\\n2 3\\n2 4\\n3 4\") == \"3\"\nassert solution(\"7 2\\n1 2\\n2 3\\n2 4\\n3 4\\n4 5\\n5 6\") == \"5\"\nassert solution(\"7 2\\n1 2\\n2 3\\n2 4\\n3 4\\n4 5\\n5 6\\n6 7\") == \"6\"\n"
    },
    {
        "number": 3390,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 3\n1 2\n2 3\n2 4''') == '3'\nassert solution('''4 3\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4''') == '2'\nassert solution('''4 4\n1 2\n2 3\n2 4\n1 3\n1 4\n2 3\n2 4\n2 3\n3 4''') == '1'\nassert solution('''4 3\n1 2\n2 3\n3 4\n1 3\n1 4\n2 3\n2 4\n2 3''') == '2'\nassert solution('''4 3\n1 2\n2 3\n3 4\n1 2\n2 3\n2 4\n1 2\n2 3\n1 3\n1 4\n2 3''') == '2'\n"
    },
    {
        "number": 3391,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2\n1 0\n0 1\n1000 1\n1 3\n2 3''') == '1\\n0\\n'\nassert solution('''3 2\n1 0\n0 1\n1000 1\n1 3\n2 3''') == '1\\n0\\n'\nassert solution('''3 2\n1 0\n0 1\n1 1\n2 3\n2 3\n3 3\n3 4\n3 4\n1 1\n1 2\n1 2\n1 2''') == '2\\n2\\n'\nassert solution('''3 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n3 3\n3 4\n3 4\n1 1\n1 2\n1 2\n1 2''') == '2\\n2\\n'\nassert solution('''3 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n3 3\n3 4\n3 4\n1 1\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2''') == '2\\n2\\n'\n"
    },
    {
        "number": 3391,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n3 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n''') == '1\\n0\\n'\n'''\nassert solution('''\n3 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n''') == '1\\n0\\n'\n'''\nassert solution('''\n2 1\n0 1\n1 0\n1000 1\n1 3\n2 3\n''') == '1\\n0\\n'\n'''\nassert solution('''\n3 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n''') == '0\\n'\n'''\nassert solution('''\n3 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n''') == '0\\n'\n'''\n"
    },
    {
        "number": 3391,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3391,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n3\\n1\\n0\\n2\\n0\\n1\\n3\") == \"1\"\nassert solution(\"1\\n3\\n1\\n0\\n2\\n0\\n1\\n3\") == \"0\"\nassert solution(\"1\\n3\\n1\\n0\\n2\\n0\\n1\\n3\") == \"1\"\nassert solution(\"1\\n3\\n1\\n0\\n2\\n0\\n1\\n3\") == \"0\"\nassert solution(\"1\\n3\\n1\\n0\\n2\\n0\\n1\\n3\") == \"1\"\n"
    },
    {
        "number": 3391,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 2\n1 0\n0 1\n1000 1\n1 3\n2 3''') == '1\\n0\\n'\nassert solution('''3 2\n1 0\n0 1\n1000 1\n1 3\n2 3''') == '1\\n0\\n'\nassert solution('''3 2\n1 0\n0 1\n1000 1\n1 3\n2 3''') == '1\\n0\\n'\nassert solution('''3 2\n1 0\n0 1\n1000 1\n1 3\n2 3''') == '1\\n0\\n'\nassert solution('''3 2\n1 0\n0 1\n1000 1\n1 3\n2 3''') == '0\\n'\n"
    },
    {
        "number": 3391,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0\\n0\\n0\\n0\\n0\\n0') == '0'\nassert solution('0\\n0\\n0\\n0\\n0\\n0') == '0'\nassert solution('2\\n0\\n0\\n0\\n0\\n0') == '0'\nassert solution('2\\n1\\n0\\n0\\n0\\n0') == '2'\nassert solution('2\\n1\\n0\\n0\\n0\\n0') == '2'\n"
    },
    {
        "number": 3391,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3391,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 2\n1 0\n0 1\n1000 1\n1 3\n2 3''') == '1\\n0\\n'\nassert solution('''3 2\n1 0\n0 1\n1000 1\n1 3\n2 3''') == '0\\n'\nassert solution('''3 2\n1 0\n0 1\n1000 1\n1 3\n1 3''') == '0\\n'\nassert solution('''3 2\n1 0\n0 1\n1000 1\n1 3\n1 3''') == '0\\n'\nassert solution('''3 2\n1 0\n0 1\n1000 1\n1 3\n1 3\n1 3''') == '1\\n'\n"
    },
    {
        "number": 3391,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 2\n1 0\n0 1\n1000 1\n1 3\n2 3''') == '1'\nassert solution('''3 2\n1 0\n0 1\n1000 1\n1 3\n2 3''') == '0'\nassert solution('''3 2\n1 0\n0 1\n0 3\n1 3\n2 3''') == '1'\nassert solution('''3 2\n1 0\n0 1\n1000 1\n1 3\n2 3''') == '0'\nassert solution('''3 2\n1 0\n0 1\n0 3\n1 3\n2 3''') == '1'\n"
    },
    {
        "number": 3391,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '0'\nassert solution(stdin) == '1'\nassert solution(stdin) == '0'\nassert solution(stdin) == '1'\nassert solution(stdin) == '2'\n"
    },
    {
        "number": 3392,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\"\"\") == \"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 3392,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\nprint(solution(stdin))\n"
    },
    {
        "number": 3392,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n1 2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3''') == \"7\"\nassert solution('''3\n1 2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3''') == \"7\"\nassert solution('''3\n1 2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3''') == \"7\"\nassert solution('''3\n1 2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3''') == \"7\"\nassert solution('''3\n1 2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3''') == \"7\"\n"
    },
    {
        "number": 3392,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2 2\\n3 3 3\\n5 2 1') == 7\nassert solution('1\\n2 3\\n3 2 3\\n5 2 1') == 7\nassert solution('1\\n2 3\\n3 2 3\\n5 2 1\\n3 2 1\\n1 2 1') == 7\nassert solution('1\\n2 3\\n3 2 3\\n5 2 1\\n3 2 1\\n1 2 1\\n1 2 3') == 7\n\"\"\""
    },
    {
        "number": 3392,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3\"\n\n'''"
    },
    {
        "number": 3392,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n1 2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3''') == '7'\nassert solution('''7\n1 2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3\n1 2 3''') == '35'\nassert solution('''4\n1 2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3\n1 2 3''') == '17'\nassert solution('''4\n4 3 2 1\n3 2 2 1\n5 2 1\n3 2 1\n1 2 1\n1 2 3\n1 2 3''') == '7'\nassert solution('''5\n2 3 2 1\n3 2 2 1\n5 2 1\n3 2 1\n1 2 1\n1 2 3\n1 2 3''') == '17'\n"
    },
    {
        "number": 3392,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"5\"\n\nassert solution(\"2\\n2\\n1\") == \"5\"\n\nassert solution(\"\\n1\") == \"1\"\n\nassert solution(\"1\\n\") == \"1\"\n\nassert solution(\"\\n1\\n\") == \"1\""
    },
    {
        "number": 3392,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1 2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3\n''') == '7'\nassert solution('''\n2\n1\n3\n3\n''') == '3'\nassert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n"
    },
    {
        "number": 3392,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n1 2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3''') == \"7\"\nassert solution('''4\n1 2 3 4\n4 2 3 2\n1 2 1 2\n2 3 4 3\n5 2 1 2''') == \"8\"\nassert solution('''10\n9 3 3 4 5 6 6 7 9 3\n5 2 6 7 8 9 1 3 9\n1 1 2 3 3 4 1 4 1\n3 1 2 1 2 1 2 3\n2 1 3 4 4 1 1 2\n4 1 2 1 1 1 2 1\n7 1 4 2 4 1 1 1\n4 1 2 1 1 1 1 1\n3 1 4 3 4 1 1 3\n8 1 4 1 1 1 1 1\n1 1 1 1 1 1 1 1''') == \"6\"\nassert solution('''14\n11 9 4 8 6 7 8 4 6 8\n6 2 6 7 9 7 5 4 8 3\n9 7 3 2 3 9 9 8 8 7\n2 2 2 4 1 2 1 4 1\n5 2 1 2 1 1 5 2\n2 5 2 1 2 1 2 5\n7 1 2 1 3 1 2 1\n3 1 2 1 3 1 2 3\n1 3 1 2 3 1 2 1\n1 1 1 1 1 1 1 1\n1 1 2 1 3 1 2 1\n1 1 1 1 1 1 1 1\n3 1 2 1 1 1 1 3\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n3 1 2 1 1 1 1 3''') == \"22\"\nassert solution('''32\n33 39 46 57 55 56 56 57 57 58 59 60 65 67 68 70 71 70 72 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255''') == \"126\"\n"
    },
    {
        "number": 3392,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\"\n"
    },
    {
        "number": 3393,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 10') == '70'\nassert solution('2 50') == '10'\nassert solution('5 2') == '10'\nassert solution('6 4') == '16'\nassert solution('100 99') == '100'\n"
    },
    {
        "number": 3393,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('2\\n2\\n') == '0'\nassert solution('3\\n3\\n') == '0'\nassert solution('4\\n4\\n') == '0'\nassert solution('5\\n5\\n') == '0'\n"
    },
    {
        "number": 3393,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100') == '20'\nassert solution('2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100') == '50'\nassert solution('2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\nhonorsanalysis1 50\\nhonorsanalysis2 100') == '150'\nassert solution('2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\nhonorsanalysis1 50\\nhonorsanalysis2 100') == '150'\nassert solution('2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\nhonorsanalysis1 50\\nhonorsanalysis2 100') == '150'\n"
    },
    {
        "number": 3393,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"20\"\n\"\"\"\n\n\nimport unittest\n\nfrom collections import defaultdict\n\nfrom test_util import hash_string\n"
    },
    {
        "number": 3393,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 2\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100''') == '20'\nassert solution('''1\nhello 10''') == '0'\nassert solution('''2\nbaas 12\nbeba 12\nnbaas 12\ndbaas 12\nnbaas 12''') == '0'\nassert solution('''2\na 1\nb 1\nc 1''') == '1'\nassert solution('''2\na b\nb a\na b\nb a\nb a''') == '1'\n"
    },
    {
        "number": 3393,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 3393,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"20\"\n"
    },
    {
        "number": 3393,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n5 2\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100\n''') == '20'\nassert solution('''\n5 2\ncalculus1 10\ncalculus2 20\ncalculus3 30\nCalculus2 10\nCalculus3 10\n''') == '30'\nassert solution('''\n5 3\ncalculus1 10\ncalculus2 20\ncalculus3 30\nCalculus2 10\nCalculus3 10\ncalculus4 40\nCalculus4 10\n''') == '50'\nassert solution('''\n4 3\nlinearalgebra10\nCalculus2 10\nCalculus3 10\nCalculus4 10\n''') == '10'\nassert solution('''\n3 3\nlinearalgebra10\ncalculus2 10\ncalculus3 10\nCalculus2 10\n''') == '20'\n"
    },
    {
        "number": 3393,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 2\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100''') == '20'\n\nassert solution('''2 2\ncsc120 100\ncsc120 40''') == '10'\n\nassert solution('''2 2\ncsc120 100\ncsc120 40\n''') == '0'\n\nassert solution('''3 2\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\ncsc120 100\ncsc120 40\n''') == '10'\n\nassert solution('''3 2\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\ncsc120 100\ncsc120 40\n''') == '10'"
    },
    {
        "number": 3393,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('sample') == '20'\nassert solution('8 2') == '20'\nassert solution('10 2') == '20'\nassert solution('5 2') == '20'\nassert solution('20 2') == '20'\n"
    },
    {
        "number": 3394,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6') == '6'\nassert solution('1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6') == '6'\nassert solution('1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6') == '6'\nassert solution('1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6') == '6'\nassert solution('1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6') == '6'\n"
    },
    {
        "number": 3394,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\") == \"6\"\n\"\"\"\n\n\n\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 3394,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 4\") == \"6\"\nassert solution(\"3 3 3\") == \"0\"\nassert solution
    },
    {
        "number": 3394,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\") == \"6\"\nassert solution(\"1 1\\n1 1 1\\n1\") == \"1\"\nassert solution(\"1 1\\n1 1 1\\n1\") == \"1\"\nassert solution(\"1 1\\n1 1 1\\n1\") == \"1\"\nassert solution(\"1 1\\n1 1 1\\n1\") == \"1\"\n"
    },
    {
        "number": 3394,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '6'\n\"\"\"\n\nfrom __future__ import annotations"
    },
    {
        "number": 3394,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 4') == '6'\nassert solution('2 2') == '0'\nassert solution('2 2 1') == '1'\nassert solution('2 2 2') == '0'\nassert solution('3 3 3') == '0'\n"
    },
    {
        "number": 3394,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3394,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"4 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6\"\"\"\n) == \"6\"\nassert solution(\n    \"\"\"4 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6\"\"\"\n) == \"6\"\nassert solution(\n    \"\"\"4 4\n1 1 1\n1 2 2\n1 3 3\n1 4 4\n1 5 5\n1 6 6\n1 7 7\n1 8 8\n1 9 9\n1 10 10\n1 11 11\n1 12 12\n1 13 13\n1 14 14\n1 15 15\n1 16 16\n1 17 17\n1 18 18\n1 19 19\n1 20 20\n1 21 21\n1 22 22\n1 23 23\n1 24 24\n1 25 25\n1 26 26\n1 27 27\n1 28 28\n1 29 29\n1 30 30\n1 31 31\n1 32 32\n1 33 33\n1 34 34\n1 35 35\n1 36 36\n1 37 37\n1 38 38\n1 39 39\n1 40 40\n1 41 41\n1 42 42\n1 43 43\n1 44 44\n1 45 45\n1 46 46\n1 47 47\n1 48 48\n1 49 49\n1 50 50\n1 51 51\n1 52 52\n1 53 53\n1 54 54\n1 55 55\n1 56 56\n1 57 57\n1 58 58\n1 59 59\n1 60 60\n1 61 61\n1 62 62\n1 63 63\n1 64 64\n1 65 65\n1 66 66\n1 67 67\n1 68 68\n1 69 69\n1 70 70\n1 71 71\n1 72 72\n1 73 73\n1 74 74\n1 75 75\n1 76 76\n1 77 77\n1 78 78\n1 79 79\n1 80 80\n1 81 81\n1 82 82\n1 83 83\n1 84 84\n1 85 85\n1 86 86\n1 87 87\n1 88 88\n1 89 89\n1 90 90\n1 91 91\n1 92 92\n1 93 93\n1 94 94\n1 95 95\n1 96 96\n1 97 97\n1 98 98\n1 99 99\n1 100 100\n1 101 101\n1 102 102\n1 103 103\n1 104 104\n1 105 105\n1 106 106\n1 107 107\n1 108 108\n1 109 109\n1 110 110\n1 111 111\n1 112 112\n1 113 113\n1 114 114\n1 115 115\n1 116 116\n1 117 117\n1 118 118\n1 119 119\n1 120 120\n1 121 121\n1 122 122\n1 123 123\n1 124 124\n1 125 125\n1 126 126\n1 127 127\n1 128 128\n1 129 129\n1 130 130\n1 131 131\n1 132 132\n1 133 133\n1 134 134\n1 135 135\n1 136 136\n1 137 137\n1 138 138\n1 139 139\n1 140 140\n1 141 141\n1 142 142\n1 143 143\n1 144 144\n1 145 145\n1 146 146\n1 147 147\n1 148 148\n1 149 149\n1 150 150\n1 151 151\n1 152 152\n1 153 153\n1 154 154\n1 155 155\n1 156 156\n1 157 157\n1 158 158\n1 159 159\n1 160 160\n1 161 161\n1 162 162\n1 163 163\n1 164 164\n1 165 165\n1 166 166\n1 167 167\n1 168 168\n1 169 169\n1 170 170\n1 171 171\n1 172 172\n1 173 173\n1 174 174\n1 175 175\n1 176 176\n1 177 177\n1 178 178\n1 179 179\n1 180 180\n1 181 181\n1 182 182\n1 183 183\n1 184 184\n1 185 185\n1 186 186\n1 187 187\n1 188 188\n1 189 189\n1 190 190\n1 191 191\n1 192 192\n1 193 193\n1 194 194\n1 195 195\n1 196 196\n1 197 197\n1 198 198\n1 199 199\n1 200 200\n1 201 201\n1 202 202\n1 203 203\n1 204 204\n1 205 205\n1 206 206\n1 207 207\n1 208 208\n1 209 209\n1 210 210\n1 211 211\n1 212 212\n1 213 213\n1 214 214\n1 215 215\n1 216 216\n1 217 217\n1 218 218\n1 219 219\n1 220 220\n1 221 221\n1 222 222\n1 223 223\n1 224 224\n1 225 225\n1 226 226\n1 227 227\n1 228 228\n1 229 229\n1 230 230\n1 231 231\n1 232 232\n1 233 233\n1 234 234\n1 235 235\n1 236"
    },
    {
        "number": 3394,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n"
    },
    {
        "number": 3394,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n4 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6\n''') == '6'\nassert solution(\n'''\n4 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6\n''') == '6'\nassert solution(\n'''\n4 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6\n''') == '6'\nassert solution(\n'''\n4 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6\n''') == '6'\nassert solution(\n'''\n4 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6\n''') == '6'\n"
    },
    {
        "number": 3395,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n''') == \"2\"\nassert solution('''\n4 1 2\n2\n3\n1 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == \"impossible\"\nassert solution('''\n3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n''') == \"impossible\"\nassert solution('''\n3 2 1\n2\n3\n1 2\n1 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == \"2\"\nassert solution('''\n4 2 3\n2\n3\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n''') == \"impossible\"\n"
    },
    {
        "number": 3395,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n''') == '2'\nassert solution('''3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n''') == 'impossible'\nassert solution('''3 1 1\n1\n2\n1\n1\n''') == 'impossible'\nassert solution('''3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n''') == '2'\nassert solution('''3 1 1\n1\n1\n1\n1\n''') == '2'\n"
    },
    {
        "number": 3395,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 1 1') == '2'\nassert solution('2\\n1') == 'impossible'\nassert solution('2\\n1\\n2\\n3\\n1') == '2'\nassert solution('3\\n1\\n1\\n1') == 'impossible'\nassert solution('3\\n1\\n1\\n1\\n1\\n1') == '2'\n"
    },
    {
        "number": 3395,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 1 1''') == '2'\nassert solution('''3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n''') == '2'\nassert solution('''3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n''') == 'impossible'\nassert solution('''3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n''') == 'impossible'\nassert solution('''2 2 2\n1\n1\n1\n1\n1\n1\n''') == 'impossible'\n"
    },
    {
        "number": 3395,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 1 1''') == \"2\"\nassert solution('''2\n2\n3\n1 2\n2 3 1''') == \"impossible\"\nassert solution('''3 1 1\n2\n3\n1 2\n2 3 1''') == \"2\"\nassert solution('''3 1 1\n1\n3\n1 2\n2 3 1''') == \"impossible\"\nassert solution('''3 1 1\n2\n3\n1 2\n2 3 1\n1 1''') == \"impossible\"\n"
    },
    {
        "number": 3395,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n''') == '2'\nassert solution('''3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n''') == 'impossible'\nassert solution('''3 1 1\n1\n1\n1\n1\n''') == 'impossible'\nassert solution('''3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n''') == 'impossible'\nassert solution('''3 1 1\n2\n3\n1 2\n1 2\n1 1\n''') == 'impossible'\n"
    },
    {
        "number": 3395,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n''') == '2'\n\nassert solution('''2 2 2\n1\n2\n2\n1\n1\n''') == 'impossible'\n\nassert solution('''4 1 1\n2\n4\n1 2 3 4\n3\n2 1 1\n''') == '2'\n\nassert solution('''3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n''') == 'impossible'\n\nassert solution('''1 1 1\n1\n1\n1\n''') == 'impossible'"
    },
    {
        "number": 3395,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''3 3 1\n2\n3\n1 2\n2 3 1\n1 1\n3\n1 2\n2 3 1\n1 1\n3\n1 2\n2 3 1\n1 1\n2\n1 2\n2 3 1\n1 1\n3\n1 2\n2 3 1\n1 1\n2\n1 2\n2 3 1\n1 1''') == 'impossible'\nassert solution(\n'''3 4 1\n2\n2\n1 2\n3\n1 2\n1 3 1\n1 1\n3\n1 2\n2 3 1\n1 1\n2\n1 2\n2 3 1\n1 1\n2\n1 2\n2 3 1\n1 1\n3\n1 2\n2 3 1\n1 1\n2\n1 2\n2 3 1\n1 1\n3\n1 2\n2 3 1\n1 1\n2\n1 2\n2 3 1\n1 1''') == '2'\nassert solution(\n'''3 4 1\n2\n2\n1 2\n3\n1 2\n1 3 1\n1 1\n3\n1 2\n2 3 1\n1 1\n2\n1 2\n2 3 1\n1 1\n2\n1 2\n2 3 1\n1 1\n3\n1 2\n2 3 1\n1 1\n2\n1 2\n2 3 1\n1 1\n3\n1 2\n2 3 1\n1 1\n2\n1 2\n2 3 1\n1 1\n3\n1 2\n2 3 1\n1 1\n2\n1 2\n2 3 1\n1 1''') == '2'\nassert solution(\n'''3 4 1\n2\n2\n1 2\n3\n1 2\n1 3 1\n1 1\n3\n1 2\n2 3 1\n1 1\n2\n1 2\n2 3 1\n1 1\n2\n1 2\n2 3 1\n1 1\n3\n1 2\n2 3 1\n1 1\n2\n1 2\n2 3 1\n1 1\n3\n1 2\n2 3 1\n1 1\n2\n1 2\n2 3 1\n1 1\n3\n1 2\n2 3 1\n1 1\n2\n1 2\n2 3 1\n1 1\n3\n1 2\n2 3 1\n1 1\n2\n1 2\n2 3 1\n1 1\n3\n1 2\n2 3 1\n1 1''') == '2'\nassert solution(\n'''6 5 3\n2\n1 2\n2 3\n3\n1 2\n2 3\n4 5\n1 1\n2\n1 2\n2 3\n3\n1 2\n2 3\n4 5\n1 1\n2\n1 2\n2 3\n3\n1 2\n2 3\n4 5\n1 1\n2\n1 2\n2 3\n3\n1 2\n2 3\n4 5\n1 1\n2\n1 2\n2 3\n3\n1 2\n2 3\n4 5\n1 1\n2\n1 2\n2 3\n3\n1 2\n2 3\n4 5\n1 1\n2\n1 2\n2 3\n3\n1 2\n2 3\n4 5\n1 1\n2\n1 2\n2 3\n3\n1 2\n2 3\n4 5\n1 1\n2\n1 2\n2 3\n3\n1 2\n2 3\n4 5\n1 1\n2\n1 2\n2 3\n3\n1 2\n2 3\n4 5\n1 1\n2\n1 2\n2 3\n3\n1 2\n2 3\n4 5\n1 1\n2\n1 2\n2 3\n3\n1 2\n2 3\n4 5\n1 1\n2\n1 2\n2 3\n3\n1 2\n2 3\n4 5\n1 1\n2\n1 2\n2 3\n3\n1 2\n2 3\n4 5\n1 1\n2\n1 2\n2 3\n3\n1 2\n2 3\n4 5\n1 1\n2\n1 2\n2 3\n3\n1 2\n2 3\n4 5\n1 1\n2\n1 2\n2 3\n3\n1 2\n2 3\n4 5\n1 1\n2\n1 2\n2 3\n3\n1 2\n2 3\n4 5\n1 1\n2\n1 2\n2 3\n3\n1 2\n2 3\n4 5\n1 1\n2\n1 2\n2 3\n3\n1 2\n2 3\n4 5\n1 1\n2\n1 2\n2 3\n3\n1 2\n2 3\n4 5\n1 1\n2\n1 2\n2 3\n3\n1 2\n2 3\n4 5\n1 1\n2\n1 2\n2 3\n3\n1 2\n2 3\n4 5\n1 1\n2\n1 2\n2 3\n3\n1 2\n2 3\n4 5\n1 1\n2\n1 2\n2 3\n3\n1 2\n2 3\n4 5\n1 1\n2\n1 2\n2 3\n3\n1 2\n2 3\n4 5\n1 1\n2\n1 2\n2 3\n3\n1 2\n2 3\n4 5\n1 1\n2\n1 2\n2 3\n3\n1 2\n2 3\n4 5\n1 1\n2\n1 2\n2 3\n3\n1 2\n2 3\n4 5\n1 1\n2\n1"
    },
    {
        "number": 3395,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n''') == \"2\"\n\nassert solution(\n'''\n3 1 1\n1\n3\n1 2\n2 3 1\n1 1\n''') == \"impossible\"\n\nassert solution(\n'''\n3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n''') == \"impossible\"\n\nassert solution(\n'''\n3 1 1\n1\n3\n1 2\n2 3 1\n1 1\n''') == \"2\"\n\nassert solution(\n'''\n3 1 1\n3\n3\n1 2\n2 3 1\n1 1\n''') == \"impossible\""
    },
    {
        "number": 3395,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1 1') == \"impossible\"\nassert solution('2 2 2') == \"impossible\"\nassert solution('3 3 3') == \"impossible\"\nassert solution('1 2 1') == \"impossible\"\nassert solution('2 1 1') == \"impossible\"\n"
    },
    {
        "number": 3396,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '0.00'\nassert solution('1\\n0') == '0.00'\nassert solution('1\\n0\\n0') == '0.00'\nassert solution('2\\n0\\n0') == '500.00'\n"
    },
    {
        "number": 3396,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\n250 250\n250 750''') == '500.00'\n'''\n\nfrom sys import stdin, stdout\nfrom math import sqrt\n\nwhile True:\n    n = int(stdin.readline())\n    if n == 0:\n        break\n    x = [int(x) for x in stdin.readline().strip().split()]\n    y = [int(y) for y in stdin.readline().strip().split()]\n    max_x = max(x)\n    max_y = max(y)\n    max_len = sqrt(max_x**2 + max_y**2)\n    if max_len > n:\n        max_len = n\n    for i in range(n):\n        x[i] = max_len - x[i]\n        y[i] = max_len - y[i]\n    max_len = 0\n    for i in range(n):\n        max_len = max(max_len, x[i] + y[i])\n    stdout.write(str(max_len) + '\\n')"
    },
    {
        "number": 3396,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '500.00'\n\"\"\"\n"
    },
    {
        "number": 3396,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n250 250\\n250 750') == '500.00'\nassert solution('2\\n250 250\\n250 750') == '500.00'\nassert solution('1\\n0 0') == '0.00'\nassert solution('2\\n0 0\\n0 1000') == '1000.00'\nassert solution('2\\n500 500\\n500 500') == '1000.00'\n"
    },
    {
        "number": 3396,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50''') == '500.00'\nassert solution('''20\n20\n19\n18\n17\n16\n15\n14\n13\n12\n11\n10\n9\n8\n7\n6\n5\n4\n3\n2\n1\n0''') == '856.50'\nassert solution('''20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761"
    },
    {
        "number": 3396,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n250 250\\n250 750') == '500.00'\nassert solution('1\\n250 250') == '250.00'\nassert solution('2\\n0 0\\n0 1000') == '1000.00'\nassert solution('1\\n500 500\\n500 900') == '1000.00'\nassert solution('2\\n300 500\\n500 900') == '1000.00'\n"
    },
    {
        "number": 3396,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution
    },
    {
        "number": 3396,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n250 1000') == '500.00'\nassert solution('2\\n250 1000\\n250 2000') == '550.00'\nassert solution('10\\n250 1000\\n250 2000\\n250 3000\\n250 4000\\n250 5000\\n250 6000\\n250 7000\\n250 8000\\n250 9000\\n250 10000\\n250 11000') == '11400.00'\nassert solution('5\\n60 30\\n70 80\\n80 60\\n50 40\\n60 30\\n60 70\\n70 50\\n50 40\\n50 50') == '125.00'\nassert solution('10\\n60 30\\n70 80\\n80 60\\n50 40\\n60 30\\n60 70\\n70 50\\n50 40\\n50 50\\n60 30') == '125.00'\n"
    },
    {
        "number": 3396,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n1\n250 250\n250 750\n'''\n    ) == '500.00'\n\nassert solution(\n'''\n2\n250 250\n250 750\n'''\n    ) == '1000.00'\n\nassert solution(\n'''\n3\n250 250\n250 750\n750 750\n'''\n    ) == '1500.00'\n"
    },
    {
        "number": 3396,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"500.00\"\n\"\"\""
    },
    {
        "number": 3397,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3\\n2 100 10\\n100 1 10') == '0'\nassert solution('2 3\\n2 100 10\\n100 1 10\\n3 100 100') == '0'\nassert solution('1 3\\n1 100 10') == '0'\nassert solution('1 1') == '0'\nassert solution('5 100\\n5 1 100\\n1 1 100\\n2 100 100\\n1 1 100\\n2 100 100\\n1 1 100') == '5'\n"
    },
    {
        "number": 3397,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n2 3\n2 100 10\n100 1 10\n\"\"\") == '0'\nassert solution(\n\"\"\"\n4 6\n1 5 1 1\n1 2 1 1\n1 5 2 1\n2 5 1 1\n\"\"\") == '4'\nassert solution(\n\"\"\"\n4 6\n1 2 1 1\n1 5 2 1\n2 5 1 1\n2 5 1 1\n\"\"\") == '5'\nassert solution(\n\"\"\"\n4 4\n1 2 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n\"\"\") == '0'\nassert solution(\n\"\"\"\n4 6\n1 5 1 1\n1 2 1 1\n1 5 2 1\n2 5 1 1\n2 5 1 1\n\"\"\") == '5'\n"
    },
    {
        "number": 3397,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 3\\n2 100 10\\n100 1 10') == '0'\nassert solution('3 3\\n2 100 10\\n100 1 10\\n2 100 10') == '7'\nassert solution('5 2\\n1 4 1\\n3 5 3\\n3 4 1\\n1 3 3') == '1'\nassert solution('3 3\\n1 100 10\\n100 1 10\\n2 100 10') == '3'\nassert solution('6 5\\n1 4 1\\n2 4 1\\n4 1 1\\n4 1 3\\n1 1 1') == '2'\n"
    },
    {
        "number": 3397,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n2 100 10\") == \"0\"\nassert solution(\"2 3\\n2 100 10\\n100 1 10\") == \"0\"\nassert solution(\"2 3\\n2 100 10\\n100 1 10\\n500 1 10\") == \"250\"\nassert solution(\"2 3\\n2 100 10\\n100 1 10\\n100 1 10\\n500 1 10\") == \"250\"\nassert solution(\"2 3\\n2 100 10\\n100 1 10\\n100 1 10\\n100 1 10\\n500 1 10\") == \"250\"\n"
    },
    {
        "number": 3397,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 3\n2 100 10\n100 1 10''') == '0'\nassert solution('''3 4\n1 2 3 4\n1 1 4\n1 1 3\n3 1 1''') == '3'\nassert solution('''3 4\n2 2 2\n2 1 2\n1 1 4\n2 2 1''') == '2'\nassert solution('''2 3\n1 2 3\n1 1 4\n1 1 3''') == '2'\nassert solution('''2 3\n1 2 3\n1 1 2\n1 1 4\n2 1 1''') == '2'\n"
    },
    {
        "number": 3397,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 3\n2 100 10\n100 1 10''') == '0'\nassert solution('''3 3\n2 100 10\n100 1 10\n100 2 100''') == '0'\nassert solution('''6 4\n5 4 3\n4 1 1\n1 2 1\n2 3 1\n2 2 1\n4 3 2\n3 2 2''') == '0'\nassert solution('''4 5\n5 4 3\n4 1 1\n1 2 1\n2 3 1\n2 2 1\n2 4 1\n3 2 2''') == '0'\nassert solution('''7 6\n5 5 3\n5 3 2\n3 4 1\n4 1 1\n3 4 1\n2 4 1\n1 2 1\n2 3 1''') == '0'\n"
    },
    {
        "number": 3397,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == str(0)\n\"\"\"\n"
    },
    {
        "number": 3397,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 3\n2 100 10\n100 1 10''') == '0'\nassert solution('''3 2\n1 1 1\n10 1 1\n100 1 1''') == '1'\nassert solution('''3 2\n1 2 3\n1 1 1\n2 2 1\n100 1 1''') == '2'\nassert solution('''5 3\n1 1 1 1 1\n1 2 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n100 1 1''') == '2'\nassert solution('''10 5\n1 2 3 4 5 6 7 8 9 10\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n100 1 1''') == '4'\n"
    },
    {
        "number": 3397,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 3\n2 100 10\n100 1 10''') == '0'\nassert solution('''1\n1''') == '0'\nassert solution('''1\n200 2\n100 1''') == '0'\nassert solution('''1\n2\n200 1''') == '0'\nassert solution('''1\n2\n200 100''') == '0'\n"
    },
    {
        "number": 3397,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n2\\n2') == '0'\nassert solution('2\\n1\\n1') == '2'\nassert solution('3\\n3\\n2\\n2\\n3') == '1'\nassert solution('3\\n3\\n2\\n2\\n3\\n2') == '1'\n"
    },
    {
        "number": 3398,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3398,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == '2'\nassert solution('5 5 3 2') == '0'\nassert solution('80 50 3 2') == '2'\nassert solution('75 5 25 20 50 35') == '2'\nassert solution('50 5 25 35') == '0'\n"
    },
    {
        "number": 3398,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"80 50 3 2\") == \"2\"\nassert solution(\"75 5 25 20 50 35\") == \"2\"\nassert solution(\"50 5 25 35\") == \"1\"\n'''\n"
    },
    {
        "number": 3398,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n80 50 3 2\n75 5 25 20 50 35\n50 5 25 35\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n81 91 4 2\n70 60 43 30 19\n56 37 30 22 17\n44 22 19 15 14\n32 19 14 15 14\n20 14 15 15 14\n16 15 15 15 14\n15 15 15 15 14\n14 15 15 15 14\n13 15 15 15 14\n12 15 15 15 14\n11 15 15 15 14\n10 15 15 15 14\n9 15 15 15 14\n8 15 15 15 14\n7 15 15 15 14\n6 15 15 15 14\n5 15 15 15 14\n4 15 15 15 14\n3 15 15 15 14\n2 15 15 15 14\n1 15 15 15 14\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n80 50 3 2\n75 5 25 20 50 35\n50 5 25 35\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n2 3 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2"
    },
    {
        "number": 3398,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''80 50 3 2\n75 5 25 20 50 35\n50 5 25 35''') == '2'\n'''"
    },
    {
        "number": 3398,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''50 50 3 2''') == '2'\nassert solution('''20 15 10 5 10''') == '5'\nassert solution('''0 0 0 1 1''') == '3'\nassert solution('''4 5 3 2 1''') == '5'\nassert solution('''0 0 0 1 1''') == '3'\n"
    },
    {
        "number": 3398,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''80 50 3 2''') == '2'\nassert solution('''75 5 25 20 50 35''') == '2'\nassert solution('''50 5 25 35''') == '1'\nassert solution
    },
    {
        "number": 3398,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\"\n'''\n\nimport sys\nfrom collections import deque\n\n'''\n1) Read the input\n2) Create an array of file icons\n3) Create a queue of file icons\n4) Iterate through the array of file icons and append each file icon into the queue\n5) Pop each file icon from the queue and check if it is a delete rectangle\n6) If it is a delete rectangle:\n    7) If the delete rectangle is on the edge of the screen (first or last row/col):\n        8) Go to the next file icon and check if it is on the edge of the screen (first or last row/col)\n    9) If the delete rectangle is not on the edge of the screen:\n        10) Increase the count of deleted files by 1\n    11) Check if there are any more file icons to be deleted\n        12) If there are:\n            13) Pop the next file icon and check if it is a delete rectangle\n            14) If it is a delete rectangle:\n                15) If the delete rectangle is on the edge of the screen (first or last row/col):\n                    16) Go to the next file icon and check if it is on the edge of the screen (first or last row/col)\n                17) If the delete rectangle is not on the edge of the screen:\n                    18) Increase the count of deleted files by 1\n            19) If there are no more file icons to be deleted:\n                20) Pop the first file icon and check if it is a delete rectangle\n                21) If it is a delete rectangle:\n                    22) If the delete rectangle is on the edge of the screen (first or last row/col):\n                        23) Go to the next file icon and check if it is on the edge of the screen (first or last row/col)\n                    24) If the delete rectangle is not on the edge of the screen:\n                        25) Increase the count of deleted files by 1\n'''"
    },
    {
        "number": 3398,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '2'\n\"\"\""
    },
    {
        "number": 3398,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output\nprint(solution(stdin))\n\"\"\""
    },
    {
        "number": 3399,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('3 4') == 'AAAA'\nassert solution('2 1') == 'AB'\nassert solution('1 1') == 'A'\nassert solution('2 2') == 'BB'\n"
    },
    {
        "number": 3399,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 4\n2211\n1112\n1112\n''') == '''AAAA\n...A\n....\n\nBB..\nBBBB\n...B\n\n....\n...C\nCCCC\n'''\n\nassert solution('''3 4\n''') == 'impossible'\nassert solution('''1 2\n1 2\n1 2\n''') == 'impossible'\nassert solution('''2 2\n1 1\n2 1\n''') == 'impossible'\nassert solution('''2 2\n2 1\n2 1\n''') == 'impossible'\n"
    },
    {
        "number": 3399,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == 'AAAA'\nassert solution(input2) == 'BBBB'\nassert solution(input3) == 'CCCC'\nassert solution(input4) == 'impossible'\nassert solution(input5) == 'impossible'\n"
    },
    {
        "number": 3399,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 4\n2211\n1112\n1112\n''') == '''AAAA\n...A\n....\nBB..\nBBBB\n...B\n\n....\n...C\nCCCC'''\n\nassert solution('''2 2\n2\n''') == '''Impossible'''\n\nassert solution('''3 4\n2211\n1112\n1112\n''') == '''AABB\n...A\n...B\nAABC\n...C\n'''\nassert solution('''4 4\n1\n1\n1\n1\n''') == '''AAAA\n...A\n...A\nAABB\n...A\nAABC\n...A\nAABC\n...A\n'''\nassert solution('''2 4\n2211\n1112\n1112\n''') == '''Impossible'''"
    },
    {
        "number": 3399,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 4\n2211\n1112\n1112''') == '''AAAA\n...A\n....\n\nBB..\nBBBB\n...B\n\n....\n...C\nCCCC'''\n\nassert solution('''1 1\n1 1''') == '''1.1\n.1.\n1.1\n1.1'''\n\nassert solution('''3 4\n101\n100\n101\n102\n102\n103\n103\n101\n102\n101\n100\n101\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n102\n103\n101\n100\n101\n102\n102\n103\n"
    },
    {
        "number": 3399,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 4\n2211\n1112\n1112\n''') == \"BB..\\nBBBB\\n...B\\n\"\nassert solution('''2 4\n12''') == \"impossible\"\nassert solution('''2 4\n2222\n''') == \"impossible\"\nassert solution('''2 4\n2222\n''') == \"impossible\"\nassert solution('''2 4\n2222\n''') == \"impossible\"\n"
    },
    {
        "number": 3399,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''3 4\n2211\n1112\n1112\n
    },
    {
        "number": 3399,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 4\\n2211\\n1112\\n1112\\n') == 'AAAA\\nBB...\\nBBBB\\n...C'\nassert solution('3 4\\n2222\\n1112\\n1112\\n') == 'impossible'\n'''\n"
    },
    {
        "number": 3399,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 4\\n2211\\n1112\\n1112\\n') == 'AAAA\\n...A\\n....\\nBB..\\nBBBB\\n...B\\nCCCC\\nCCCC'\nassert solution('3 4\\n2211\\n1112\\n1112\\n') == 'BB..\\nBBBB\\n...B\\nCCCC\\nCCCC'\nassert solution('3 4\\n2211\\n1112\\n1112\\n') == 'impossible'\nassert solution('3 4\\n2211\\n1112\\n1112\\n') == 'impossible'\nassert solution('2 1\\n2\\n') == 'impossible'\n"
    },
    {
        "number": 3399,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 4\n2211\n1112\n1112\n''') == '''AAAA\nBB..\nBBBB\n...B\n....\nCCCC\n'''\nassert solution('''5 4\n1111\n1112\n1112\n''') == '''AAAA\nBBBB\nBBBB\nBBBB\nBBBB\n'''\nassert solution('''2 2\n1 2\n2 1\n''') == '''..A\nA.A\n.A.\n.A.\n.A.\n..B\nB.B\nB.B\nB.B\n'''\nassert solution('''2 2\n2 2\n2 2\n''') == '''impossible\nimpossible\nimpossible\nimpossible\nimpossible\n'''\nassert solution('''5 5\n11111\n11011\n11011\n11011\n11111\n''') == '''AAAA\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\n'''\n"
    },
    {
        "number": 3400,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\\n1 2 3 2\\n2 3 4 1 2 3 2\") == \"2\\n2\\n2\"\nassert solution(\"1 2 3\\n3 4 1 2 3 2\") == \"0\\n0\\n0\"\nassert solution(\"1 2 3\\n1 2 3 2\\n2 3 4 1 2 3 2\") == \"3\\n3\\n3\"\nassert solution(\"1 2 3\\n1 2 3 2\\n3 4 1 2 1\") == \"1\\n1\\n1\"\nassert solution(\"1 2 3\\n1 2 3 2\\n1 2 1\\n3 4 1 2 1\") == \"2\\n2\\n2\"\n"
    },
    {
        "number": 3400,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 1 3 3\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3\n''') == '9'\n\nassert solution('''2 2 2 1\n1 1 1 1 1\n1 1 1 1 1\n2 1 2 1 1 1\n2 1 1 1 1 1\n''') == '0'\n\nassert solution('''3 1 3\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3\n''') == '9'\n\nassert solution('''4 1 4 2\n4 3 1 2 1\n1 4 1 2 1 3\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n''') == '12'\n\nassert solution('''4 2 1 2\n4 3 1 2 1\n1 4 1 2 1 3\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n''') == '12'"
    },
    {
        "number": 3400,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\\n1 2 1 2 1 3 2\\n3 3 1 2 1 1 3 2\\n1 4 1 2 1 1 3 2 3\\n1 2 1 2 1 1 3 2 3 3 3\\n1 2 1 2 1 1 3 2 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3"
    },
    {
        "number": 3400,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    '''3 1 3 3\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3\n''') == '9'\nassert solution(\n    '''3 1 3 2\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3\n''') == '8'\nassert solution(\n    '''6 3 3 2\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3\n1 4 1 2 1 3\n4 3 1 2 1\n1 4 1 2 1 3\n''') == '11'\nassert solution(\n    '''1 1 3\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3\n1 4 1 2 1 3\n4 3 1 2 1\n1 4 1 2 1 3\n1 4 1 2 1 3\n''') == '7'\n'''\n'''\n"
    },
    {
        "number": 3400,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 1 3 3''') == '9'\nassert solution('''3 4 1 2 3 2''') == '6'\nassert solution('''4 3 1 2 1''') == '5'\nassert solution('''1 4 1 2 1 3''') == '5'\nassert solution('''1 2 1 1''') == '3'\n"
    },
    {
        "number": 3400,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 1 3 3\") == \"9\"\nassert solution(\"3 4 1 2 3 2\") == \"9\"\nassert solution(\"4 3 1 2 1\") == \"9\"\nassert solution(\"1 4 1 2 1 3\") == \"9\""
    },
    {
        "number": 3400,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n3\\n3\\n3\\n2\\n1\\n3\\n3\\n2\\n1\\n2\\n3\\n2\\n1') == '9'\nassert solution('2\\n3\\n3\\n3\\n2\\n1\\n3\\n3\\n2\\n1\\n2\\n3\\n2\\n1') == '10'\nassert solution('4\\n3\\n3\\n3\\n2\\n1\\n3\\n3\\n2\\n1\\n2\\n3\\n2\\n1') == '11'\nassert solution('5\\n3\\n3\\n3\\n2\\n1\\n3\\n3\\n2\\n1\\n2\\n3\\n2\\n1') == '12'\nassert solution('6\\n3\\n3\\n3\\n2\\n1\\n3\\n3\\n2\\n1\\n2\\n3\\n2\\n1') == '14'\n"
    },
    {
        "number": 3400,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 1 3 3\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3\n''') == '9'\n\nassert solution('''3 1 3 3\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3\n''') == '9'\n\nassert solution('''3 1 3 3\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3\n''') == '9'\n\nassert solution('''3 1 3 3\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3\n''') == '9'\n\nassert solution('''3 1 3 3\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3\n''') == '9'"
    },
    {
        "number": 3400,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\\n') == '9'\nassert solution('2 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\\n3 3"
    },
    {
        "number": 3400,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 1 3 3''') == '9'\nassert solution('''3 4 1 2 3 2''') == '10'\nassert solution('''4 3 1 2 1''') == '6'\nassert solution('''1 4 1 2 1 3''') == '7'\nassert solution('''3 3 3 2 2 1 3''') == '7'\n"
    },
    {
        "number": 3401,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 0 2 10') == 'IMPOSSIBLE'\nassert solution('1 0 2 3') == '0'\nassert solution('1 1 1 2') == '6.00000'\nassert solution('1 1 1 3') == 'IMPOSSIBLE'\nassert solution('1 1 1 5') == '8.00000'\n"
    },
    {
        "number": 3401,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6 2 2 8\n0 0 6\n3 4 7\n0 8 8\n6 8 8\n6 0 6\n6 4 8\n3 4\n1 5\n''') == '20.396078'\nassert solution('''1 1\n1\n1\n''') == '0.0000'\nassert solution('''1 2\n1\n2\n''') == 'IMPOSSIBLE'\nassert solution('''1 3\n1\n3\n''') == 'IMPOSSIBLE'\nassert solution('''1 4\n1\n4\n''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3401,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"6 2 2 8\") == \"20.396078\"\nassert solution(\"6 2 2 3\") == \"IMPOSSIBLE\"\nassert solution(\"5 4 3 1\") == \"1.2000000\"\nassert solution(\"5 2 1 1\") == \"3.0\"\nassert solution(\"5 1 1 1\") == \"5.0\"\n"
    },
    {
        "number": 3401,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n6 2 2 8\n0 0 6\n3 4 7\n0 8 8\n6 8 8\n6 0 6\n6 4 8\n3 4\n1 5\n''') == \"20.396078\"\n\nassert solution(\n'''\n4 1 3 1\n1 5\n2 3\n3 2\n1 4\n''') == \"1\"\n\nassert solution(\n'''\n4 1 2 1\n1 2\n3 4\n1 5\n1 2\n1 1\n1 4\n3 4\n1 5\n3 4\n''') == \"1\"\n\nassert solution(\n'''\n3 1 2 1\n1 2\n3 4\n1 5\n1 2\n''') == \"1\"\n\nassert solution(\n'''\n3 1 2 1\n1 2\n3 4\n1 5\n1 2\n''') == \"1\""
    },
    {
        "number": 3401,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6 2 2 8\n0 0 6\n3 4 7\n0 8 8\n6 8 8\n6 0 6\n6 4 8\n3 4\n1 5\n''') == '20.396078'\n'''\n'''"
    },
    {
        "number": 3401,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6 2 2 8\n0 0 6\n3 4 7\n0 8 8\n6 8 8\n6 0 6\n6 4 8\n3 4\n1 5\n''') == '20.396078'\n\nassert solution('''2 2 1\n1 2 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n''') == '6'\n\nassert solution('''8 2 1\n6 7\n0 0 0\n0 0 1\n0 0 0\n0 0 1\n0 0 0\n0 0 1\n0 0 0\n0 0 1\n''') == 'IMPOSSIBLE'\n\nassert solution('''4 2 1\n1 2\n0 0 0\n0 0 1\n0 0 0\n0 0 1\n0 0 0\n0 0 1\n0 0 0\n''') == '10'\n\nassert solution('''5 2 1\n1 2\n0 0 0\n0 0 1\n0 0 0\n0 0 1\n0 0 0\n0 0 1\n0 0 0\n0 0 1\n''') == 'IMPOSSIBLE'"
    },
    {
        "number": 3401,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(open(\"test_input.txt\", \"r\").read()) == open(\"test_output.txt\", \"r\").read()\nassert solution(open(\"test_input_2.txt\", \"r\").read()) == open(\"test_output_2.txt\", \"r\").read()\nassert solution(open(\"test_input_3.txt\", \"r\").read()) == open(\"test_output_3.txt\", \"r\").read()\n\nprint(solution(open(\"input.txt\", \"r\").read()))\n"
    },
    {
        "number": 3401,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3401,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6 2 2 8\n0 0 6\n3 4 7\n0 8 8\n6 8 8\n6 0 6\n6 4 8\n3 4\n1 5''') == '20.396078'\nassert solution('''3 5 7 9\n1 5 1\n2 6 2\n3 5 3\n4 5 4\n5 6 6\n6 7 7''') == '1.2'\nassert solution('''1 1 1 1 1 1 1\n3 5 3\n2 6 2\n1 5 1\n1 1 1 1 1 1 1\n3 5 3\n4 5 4\n5 6 6\n6 7 7''') == '1.2'\nassert solution('''2 2 2 2\n1 1 1\n3 5 3\n4 5 4\n5 6 6\n6 7 7''') == 'IMPOSSIBLE'\nassert solution('''6 6 6 6\n1 5 1\n2 6 2\n3 5 3\n4 5 4\n5 6 6\n6 7 7''') == '6.237196'\n"
    },
    {
        "number": 3401,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == \"20.396078\"\n"
    },
    {
        "number": 3402,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == ''\n\nprint(solution(stdin))\n"
    },
    {
        "number": 3402,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n1 8''') == 'b'\nassert solution('''abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n9 8''') == 'd'\nassert solution('''abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n3 4''') == 'd'\nassert solution('''abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n3 5''') == 'd'\nassert solution('''abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n3 4\n5 6''') == 'e'\n"
    },
    {
        "number": 3402,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abca') == 'b'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm') == 'def'\nassert solution('nn oo pp qq rr ss tt uu vv ww xx yy zz') == 'efgh'\nassert solution('asdvxczsadzxcvczcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvcdszcvc"
    },
    {
        "number": 3402,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(solution.__doc__) == 'n'\n"
    },
    {
        "number": 3402,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(open(\"test_input_1.txt\", \"r\").read()) == \"ccdd\"\nassert solution(open(\"test_input_2.txt\", \"r\").read()) == \"bbbbbb\"\nassert solution(open(\"test_input_3.txt\", \"r\").read()) == \"d\"\nassert solution(open(\"test_input_4.txt\", \"r\").read()) == \"c\"\nassert solution(open(\"test_input_5.txt\", \"r\").read()) == \"b\"\n"
    },
    {
        "number": 3402,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n1 8''') == 'b'\n'''"
    },
    {
        "number": 3402,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abca', 'bc cd da dd ee ff gg hh ii jj kk ll mm', 'nn oo pp qq rr ss tt uu vv ww xx yy zz', '1', '2', '1 8', 'b', 'c', 'def') == 'def'\n'''"
    },
    {
        "number": 3402,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n1 8''') == 'b'\nassert solution('''abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n2\n2\n1 8''') == 'c'\nassert solution('''abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n2\n2\n1 10''') == 'e'\nassert solution('''abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n2\n2\n1 10''') == 'h'\nassert solution('''abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n2\n2\n2 10''') == 'k'\n"
    },
    {
        "number": 3402,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n1 8''') == 'bcd'\nassert solution('''abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n1 7''') == 'abcd'\nassert solution('''abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n1 7''') == 'abcd'\nassert solution('''abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n1 6''') == 'defg'\nassert solution('''abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n1 5''') == 'abcd'\n"
    },
    {
        "number": 3402,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''abca''') == 'b'\nassert solution('''bc cd da dd ee ff gg hh ii jj kk ll mm''') == 'c'\nassert solution('''nn oo pp qq rr ss tt uu vv ww xx yy zz''') == 'def'\nassert solution('''abcdefghijklmnopqrstuvwxyz''') == 'a'\nassert solution('''abcdefghijklmnopqrstuvwxyz''') == 'b'\n"
    },
    {
        "number": 3403,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"hi\") == 0\nassert solution(\"robot\") == 1\nassert solution(\"hi robot\") == 2\nassert solution(\"robot hobotnica\") == 3\nassert solution(\"robot hobi\") == 4\n"
    },
    {
        "number": 3403,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\nhobotnica\nrobot\nhobi\nhobit\nrobi\n4\nrobi\nhobi\nhobit\nrakija\n''') == '''12\n10\n16\n7\n'''\nprint(solution('''5\nhobotnica\nrobot\nhobi\nhobit\nrobi\n4\nrobi\nhobi\nhobit\nrakija\n'''))\n"
    },
    {
        "number": 3403,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\nhobotnica\nrobot\nhobi\nhobit\nrobi\n''') == '12\\n10\\n16\\n7\\n'\nassert solution('''5\nhobotnica\nrobot\nhobi\nhobit\nrobi\n''') == '12\\n10\\n16\\n7\\n'\nassert solution('''5\nab\nbab\naba\nbab\n''') == '2\\n2\\n2\\n2\\n'\nassert solution('''5\nab\nbab\naba\nbab\n''') == '2\\n2\\n2\\n2\\n'\nassert solution('''5\nhobotnica\nrobot\nhobi\nhobit\nrobi\n''') == '12\\n10\\n16\\n7\\n'\n"
    },
    {
        "number": 3403,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n3\nhobotnica\nrobot\nhobi\nhobit\nrobi\n''') == '''\n1\n2\n3\n4\n5\n'''\nassert solution('''\n3\nhobotnica\nrobot\nhobi\nhobit\nrobi\n''') == '''\n1\n2\n3\n'''\nassert solution('''\n1\nhobotnica\nrobot\nhobi\nhobit\nrobi\n''') == '''\n1\n2\n3\n4\n5\n'''\nassert solution('''\n2\nhobotnica\nrobot\nhobi\nhobit\nrobi\n''') == '''\n1\n2\n3\n4\n5\n'''\nassert solution('''\n5\nhobotnica\nrobot\nhobi\nhobit\nrobi\n''') == '''\n1\n2\n3\n4\n5\n'''\n"
    },
    {
        "number": 3403,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3403,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 3403,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"hobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\n\") == \"robot\\nhobi\\nhobit\\n\"\nassert solution(\"\\nrobi\\nhobi\\nhobit\\nrobi\\n\") == \"\\nrobi\\nhobi\\nhobit\\nrobi\\n\"\nassert solution(\"\\nrobi\\nrobi\\nrobi\\nrobi\\n\") == \"\\nrobi\\nrobi\\nrobi\\nrobi\\n\"\nassert solution(\"\\nrobi\\nrobi\\nrobi\\nrobi\\n\") == \"\\nrobi\\nrobi\\nrobi\\nrobi\\n\"\nassert solution(\"\\nrobi\\nrobi\\nrobi\\nrobi\\n\") == \"\\nrobi\\nrobi\\nrobi\\nrobi\\n\"\n"
    },
    {
        "number": 3403,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"hobotnica\\nrobot\\nhobi\\nhobit\\nrobi\") == \"robot\"\nassert solution(\"hobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\nrakija\") == \"robi\"\nassert solution(\"hobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\nrobi\") == \"robi\"\nassert solution(\"hobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\nrobi\\nrakija\\nrobi\") == \"robi\"\n"
    },
    {
        "number": 3403,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(open(\"test_input.txt\").read()) == open(\"test_output.txt\").read()\n"
    },
    {
        "number": 3403,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n5\nhobotnica\nrobot\nhobi\nhobit\nrobi\n''') == '''\n5\n10\n12\n10\n7\n'''\n\nassert solution('''\n3\nabcd\naaab\nabcd\n''') == '''\n3\n2\n5\n'''\n\nassert solution('''\n6\nfoo\nbaz\nfoo\nbar\nbaz\nquux\n''') == '''\n6\n2\n8\n4\n'''\n\nassert solution('''\n5\nabcd\naaab\nabcd\n''') == '''\n5\n3\n'''\n\nassert solution('''\n5\na\nb\nc\nd\ne\n''') == '''\n5\n5\n5\n'''"
    },
    {
        "number": 3404,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input('')) == 'THIS IS A TEST'\n\n'''\n\n'''\nTo find the one-time pad (OTP) for this puzzle, you need to find a way to shift the letters of the message by the value of the corresponding digits of the one-time pad. You can perform the shift by adding the digit of the one-time pad to the letter in the message. By observing the process of encryption and decryption, you can see that each shift to the right corresponds to a modulo-27 shift.\n\nIn the encryption, the letter is first shifted by the value of the digit in the one-time pad, the letter is then shifted by the value of the second digit in the one-time pad, and so on. The modulo-27 operation will truncate the result to the range [0,26], then the value of the letter is retrieved from that range.\n\nIn the decryption, the modulo-27 operation is performed modulo $27$ (same as in the encryption) to retrieve the letter. The right-most digit of the one-time pad is used to shift the message to the right by the value of the digit.\n\nYou can obtain the one-time pad (OTP) by calculating the sum of the values of each column of the grid, then convert the column sums into base $27$. The OTP is the base-27 digit string made by concatenating the results of the column sums (from bottom to top).\n\nFor example, if your encrypted message is \"JQ IRKEYFG EXQ\", the encrypted message is a string of length $14$. Each column of the grid is represented by a string of length $4$, and the values of the columns are \"JQ\", \"IR\", \"KEY\", \"FG\".\n\nThe sum of the values of the first column is 0+1+2+3 = 10, and the sum of the second column is 1+0+1+2 = 12. In base $27$ we get 1012 (10 + 12 = 22).\n\nAfter shifting the letters of the encrypted message by the value of the right-most digit of the OTP (from the bottom to the top), the encrypted message is \"T\" + \"I\" + \"S\" + \"T\" = \"THIS\" + \"IS\" + \"A\" + \"TEST\". In base $27$ we get 3241 (0 + 1 + 22 + 12 = 3241).\n\nThe decrypted message is \"THIS\" + \"IS\" + \"A\" + \"TEST\".\n\nYou can verify that the OTP is correct by using the two of the encryption functions mentioned above. You can also use a brute-force approach, where you try all possible OTPs, and check whether they are valid.\n\n-----Input-----\nThe first line of the input contains two positive integers, $N$ ($1 \\le N \\le 10^6$), and $X$ ($1 \\le X \\le 2.5 \\cdot 10^5$). It is guaranteed that the base $27$ result of step 5 will be longer or equal to the length of the intercepted message. The second line of the input contains a string consisting of uppercase letters and spaces of length $N$, the encrypted text.\n\n-----Output-----\nOutput the decrypted text.\n\n-----Examples-----\nSample Input:\n14 4\nJQ IRKEYFG EXQ\nSample Output:\nTHIS IS A TEST\n\n'''\n\n'''\nThe input to this problem is a string of length $N$, the encrypted message. The encrypted message is first converted to a grid of letters, where the rows are letters in the alphabet (A to Z) in steps of $X$ and the columns are in steps of $N$ in steps of $X$. Then the sum of each column is computed modulo $27$ (the base-27 number system), and the sum of the rows are summed to produce a base-27 number. The sum of the column sums is the first $N$ digits of the base-27 number, and the sum of the row sums is the last $N$ digits of the base-27 number. The OTP is the base-27 digit string made up of these digits.\n\nFor example, if the encrypted message is \"JQ IRKEYFG EXQ\", the encrypted message is a string of length $14$.\n\nThe encrypted message is first converted to a grid of letters, where the rows are letters in the alphabet (A to Z) in steps of $4$ and the columns are in steps of $14$ in steps of $4$. The bottom-left cell is \"JQ\" and the top-right cell is \"IRKEYFG\", so the values of the top-left and bottom-right cells are $11$ and $27$ respectively. Then the sum of each column is computed modulo $27$ (the base-27 number system), and the sum of the rows are summed to produce a base-27 number. The sum of the column sums is the first $4$ digits of the base-27 number, and the sum of the row sums is the last $4$ digits of the base-27 number.\n\nThe OTP is the base-27 digit string made up of these digits.\n\nThe decryption is simply the grid of letters (A to Z) in steps of $4$ and the encrypted message in steps of $14$ in steps of $4$. The decrypted message is the encrypted message in steps of $4$ in steps of $14$. The decrypted message is then converted to a grid of letters, where the rows are letters in the alphabet (A to Z) in steps of $X$ and the columns are in steps of $N$ in steps of $X$.\n\nFor example, if the encrypted message is \"T I S T E"
    },
    {
        "number": 3404,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('JQ IRKEYFG EXQ') == 'THIS IS A TEST'\n\n\"\"\"\n\n\"\"\"\nThink about the problem as a list of numbers.\n1. Each line is a number.\n2. Each number is equal to its number modulo $27$ (base $27$).\n3. Each number is the result of shifting each number of the line by the number of the line, modulo $27$ (base $27$).\n4. The sum of each line is the modulo $27$ number that is the result of the sum of each number of each line.\n5. The sum of each line is the modulo $27$ number that is the result of the sum of each number of each line.\n6. The sum of each line is the modulo $27$ number that is the result of the sum of each number of each line.\n7. The sum of each line is the modulo $27$ number that is the result of the sum of each number of each line.\n8. Each number of each line is the modulo $27$ number that is the result of the sum of each number of each line.\n9. The sum of each line is the modulo $27$ number that is the result of the sum of each number of each line.\n10. Each number of each line is the modulo $27$ number that is the result of the sum of each number of each line.\n11. The sum of each line is the modulo $27$ number that is the result of the sum of each number of each line.\n12. Each number of each line is the modulo $27$ number that is the result of the sum of each number of each line.\n13. The sum of each line is the modulo $27$ number that is the result of the sum of each number of each line.\n14. Each number of each line is the modulo $27$ number that is the result of the sum of each number of each line.\n15. The sum of each line is the modulo $27$ number that is the result of the sum of each number of each line.\n16. Each number of each line is the modulo $27$ number that is the result of the sum of each number of each line.\n17. The sum of each line is the modulo $27$ number that is the result of the sum of each number of each line.\n18. Each number of each line is the modulo $27$ number that is the result of the sum of each number of each line.\n19. The sum of each line is the modulo $27$ number that is the result of the sum of each number of each line.\n20. Each number of each line is the modulo $27$ number that is the result of the sum of each number of each line.\n21. The sum of each line is the modulo $27$ number that is the result of the sum of each number of each line.\n22. Each number of each line is the modulo $27$ number that is the result of the sum of each number of each line.\n23. The sum of each line is the modulo $27$ number that is the result of the sum of each number of each line.\n24. Each number of each line is the modulo $27$ number that is the result of the sum of each number of each line.\n25. The sum of each line is the modulo $27$ number that is the result of the sum of each number of each line.\n26. Each number of each line is the modulo $27$ number that is the result of the sum of each number of each line.\n27. The sum of each line is the modulo $27$ number that is the result of the sum of each number of each line.\n28. Each number of each line is the modulo $27$ number that is the result of the sum of each number of each line.\n29. The sum of each line is the modulo $27$ number that is the result of the sum of each number of each line.\n30. Each number of each line is the modulo $27$ number that is the result of the sum of each number of each line.\n31. The sum of each line is the modulo $27$ number that is the result of the sum of each number of each line.\n32. Each number of each line is the modulo $27$ number that is the result of the sum of each number of each line.\n33. The sum of each line is the modulo $27$ number that is the result of the sum of each number of each line.\n34. Each number of each line is the modulo $27$ number that is the result of the sum of each number of each line.\n35. The sum of each line is the modulo $27$ number that is the result of the sum of each number of each line.\n36. Each number of each line is the modulo $27$ number that is the result of the sum of each number of each line.\n37. The sum of each line is the modulo $27$ number that is the result of the sum of each number of each line.\n38. Each number of each line is the modulo $27$ number that is the result of the sum of each number of each line.\n39. The sum of each line is the modulo $27$ number that is the result of the sum of each number of each line.\n40. Each number of each line is the modulo $27$ number that is the result of the sum of each number of each line.\n41. The sum of each line is the modulo $27$ number that is the result of the sum of each number of each line.\n42. Each number of each line is the modulo $27$"
    },
    {
        "number": 3404,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(test_input_1) == test_output_1\nassert solution(test_input_2) == test_output_2\nassert solution(test_input_3) == test_output_3\nprint('All set!')\n'''\n"
    },
    {
        "number": 3404,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == input()\n"
    },
    {
        "number": 3404,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''14 4\nJQ IRKEYFG EXQ''') == 'THIS IS A TEST'\nassert solution('''14 4\nNSTKIRJUBILEAAMKLPMYC''') == 'CTF'\n'''\n\nimport sys\nstdin = sys.stdin.readlines()\n\nN, X = map(int, stdin[0].strip().split())\n\nM = stdin[1].strip()\n\nresult = []\n\nfor i in range(1, N + 1):\n    M_count = (X * i) % 26\n    result.append(M_count)\n\nprint(result)\n\nM_num = 0\nfor i in range(N):\n    M_num += result[i] * pow(26, i, 26)\n\nprint(M_num)\n\nS = ''\nfor i in range(N):\n    S += chr(ord('A') + (M_num % 26))\n\nprint(S)\n"
    },
    {
        "number": 3404,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"JQ IRKEYFG EXQ\") == \"THIS IS A TEST\"\n\"\"\""
    },
    {
        "number": 3404,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input().strip()) == \"\"\n\nassert solution(input
    },
    {
        "number": 3404,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('JQ IRKEYFG EXQ') == 'THIS IS A TEST'\nassert solution('JQ IRKEYFG EXQ') == 'THIS IS A TEST'\n\n---\nfrom math import log\n\nn, x = map(int, stdin.split())\n\nf = lambda n: (33 * n + 1) % (2 ** 20)\n\nF = [f(n)]\nfor i in range(n - 1):\n    F.append(f(F[-1]))\n\nA = [0] * x\nfor i in range(x):\n    A[i] = (i + 1) * log(i + 1, 27)\n\nfor i in range(n):\n    for j in range(x):\n        A[j] += F[i] * int(stdin[i])\n\nfor i in range(x):\n    print(chr(A[i] % 27 + ord('A')), end='')\n\nprint()\n\nprint(stdin)\n"
    },
    {
        "number": 3404,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3404,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin.strip()\nassert solution('JQ IRKEYFG EXQ') == stdin.strip()\nassert solution('ZQKUAMCZRZRXQYQJQXZYQJQU') == stdin.strip()\nassert solution('BJFZLRFYQCRKHZZRKHZRKHZQMB') == stdin.strip()\nassert solution('JQIRKEYFGEXQ') == stdin.strip()\n"
    },
    {
        "number": 3405,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2.6\") == \"135135\"\nassert solution(\"1.4\") == \"\"\nassert solution(\"0.8\") == \"No solution\"\nassert solution(\"1.1\") == \"135135\"\nassert solution(\"1.1\") == \"135135\"\n"
    },
    {
        "number": 3405,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n\nIf you cannot use the standard library, you can use a text file instead for the input.\n'''\n\n'''\n\nfor i in range(1,10**8):\n    if str(i) == str(i)[::-1]:\n        print(i)\n'''"
    },
    {
        "number": 3405,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2.6\") == \"135135\"\nassert solution(\"1.1\") == \"270270\"\nassert solution(\"12.3\") == \"270270\"\nassert solution(\"5.3\") == \"135135\"\nassert solution(\"73.9\") == \"270270\"\n"
    },
    {
        "number": 3405,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 'No solution'\nassert solution('2.6') == '135'\nassert solution('1.9') == '270'\nassert solution('1.3') == '135135'\nassert solution('2.7') == '270270'\n"
    },
    {
        "number": 3405,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(2.6) == \"135135\"\nassert solution(1.6) == \"135\"\nassert solution(0.6) == \"No solution\"\nassert solution(1) == \"No solution\"\nassert solution(9) == \"No solution\"\n"
    },
    {
        "number": 3405,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2.6') == '135'\nassert solution('3.2') == '27'\nassert solution('100000') == 'No solution'\nassert solution('13') == '13'\nassert solution('0.001') == 'No solution'\n"
    },
    {
        "number": 3405,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(2.6) == \"135135\"\nassert solution(5776) == \"76\"\nassert solution(126) == \"135135\"\nassert solution(6576) == \"76\"\nassert solution(356) == \"135135\"\n"
    },
    {
        "number": 3405,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2.6') == '135'\nassert solution('1.4') == 'No solution'\nassert solution('1.2') == 'No solution'\nassert solution('7.5') == '270'\nassert solution('12.1') == '135'\n"
    },
    {
        "number": 3405,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2.6') == '135'\nassert solution('6.3') == '270'\nassert solution('2.64') == '135135'\nassert solution('23.5') == '270270'\nassert solution('6') == '270'\n"
    },
    {
        "number": 3405,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n\"\"\"\n"
    },
    {
        "number": 3406,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n') == '4'\nassert solution('0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n8 9\\n') == '4'\nassert solution('0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n8 9\\n') == '4'"
    },
    {
        "number": 3406,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    4\n    0 1\n    3 7\n    4 5\n    6 5\n    9\n    1 4\n    1 6\n    2 3\n    2 5\n    3 5\n    3 6\n    4 8\n    5 4\n    6 3\n    \"\"\"\n) == '4'\n\nassert solution(\n    \"\"\"\n    10\n    2 6\n    9 5\n    8 2\n    7 1\n    6 4\n    5 4\n    4 7\n    3 9\n    2 3\n    1 1\n    0 2\n    \"\"\"\n) == '0'\n\nassert solution(\n    \"\"\"\n    2\n    1 4\n    1 6\n    2 3\n    \"\"\"\n) == '0'\n\nassert solution(\n    \"\"\"\n    1\n    0 1\n    \"\"\"\n) == '1'\n\nassert solution(\n    \"\"\"\n    1\n    0 1\n    1 2\n    1 3\n    1 4\n    1 5\n    1 6\n    1 7\n    1 8\n    1 9\n    1 10\n    1 11\n    1 12\n    1 13\n    1 14\n    1 15\n    1 16\n    1 17\n    1 18\n    1 19\n    1 20\n    1 21\n    1 22\n    1 23\n    1 24\n    1 25\n    1 26\n    1 27\n    1 28\n    1 29\n    1 30\n    1 31\n    1 32\n    1 33\n    1 34\n    1 35\n    1 36\n    1 37\n    1 38\n    1 39\n    1 40\n    1 41\n    1 42\n    1 43\n    1 44\n    1 45\n    1 46\n    1 47\n    1 48\n    1 49\n    1 50\n    1 51\n    1 52\n    1 53\n    1 54\n    1 55\n    1 56\n    1 57\n    1 58\n    1 59\n    1 60\n    1 61\n    1 62\n    1 63\n    1 64\n    1 65\n    1 66\n    1 67\n    1 68\n    1 69\n    1 70\n    1 71\n    1 72\n    1 73\n    1 74\n    1 75\n    1 76\n    1 77\n    1 78\n    1 79\n    1 80\n    1 81\n    1 82\n    1 83\n    1 84\n    1 85\n    1 86\n    1 87\n    1 88\n    1 89\n    1 90\n    1 91\n    1 92\n    1 93\n    1 94\n    1 95\n    1 96\n    1 97\n    1 98\n    1 99\n    1 100\n    1 101\n    1 102\n    1 103\n    1 104\n    1 105\n    1 106\n    1 107\n    1 108\n    1 109\n    1 110\n    1 111\n    1 112\n    1 113\n    1 114\n    1 115\n    1 116\n    1 117\n    1 118\n    1 119\n    1 120\n    1 121\n    1 122\n    1 123\n    1 124\n    1 125\n    1 126\n    1 127\n    1 128\n    1 129\n    1 130\n    1 131\n    1 132\n    1 133\n    1 134\n    1 135\n    1 136\n    1 137\n    1 138\n    1 139\n    1 140\n    1 141\n    1 142\n    1 143\n    1 144\n    1 145\n    1 146\n    1 147\n    1 148\n    1 149\n    1 150\n    1 151\n    1 152\n    1 153\n    1 154\n    1 155\n    1 156\n    1 157\n    1 158\n    1 159\n    1 160\n    1 161\n    1 162\n    1 163\n    1 164\n    1 165\n    1 166\n    1 167\n    1 168\n    1 169\n    1 170\n    1 171\n    1 172\n    1 173\n    1 174\n    1 175\n    1 176\n    1 177\n    1 178\n    1 179\n    1 180\n    1 181\n    1 182\n    1 183\n    1 184\n    1 185\n    1 186\n    1 187\n    1 188\n    1 189\n    1 190\n    1 191\n    1 192\n    1 193\n    1 194\n    1 195\n    1 196\n    1 197\n    1 198\n    1 199\n    1 200\n    1 201\n    1 202\n    1 203\n    1 204\n    1 205\n    1 206\n    1 207\n    1 208\n    1 209\n    1 210\n    1 211\n    1 212\n    1 213\n    1 214\n    1 215\n    1 216\n    1 217\n    1 218\n    1 219\n    1 220\n    1 221\n    1 222\n    1 223\n    1 224\n    1 225\n    1 226\n    1 227\n    1 228\n    1 229\n    1 230\n    1 231\n    1 232\n    1 233\n    1 234\n    1 235\n    1 236\n    1 237\n    1 238\n    1 239\n    1 240\n    1 241\n    1 242\n    1 243\n    1 244\n    1 245\n    1 246\n    1 247\n    1 248\n    1 249\n    1 250\n    1 251\n    1 252\n    1 253\n    1 254\n    1 255\n    1 256\n    1 257\n    1 258\n    1 259\n    1 260\n    1 261\n    1 262\n    1 263\n    1 264\n    1 265\n    1 266\n    1 267\n    1 268\n    1 269\n    1 270\n    1 271\n    1 272\n    1 273\n    1 274\n    1 275\n    1 276\n    1 277\n    1 278\n    1 279\n    1 280\n    1 281\n    1 282\n    1 283\n    1 284\n    1 285\n    1 286\n    1 287\n    1 288\n    1 289\n    1 290\n    1 291\n    1 292\n    1 293\n    1 294"
    },
    {
        "number": 3406,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"4\""
    },
    {
        "number": 3406,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n') == '4'\nassert solution('0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n4\\n') == '4'\nassert solution('0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n4\\n') == '4'\nassert solution('0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n4\\n') == '4'\nassert solution('0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n4\\n') == '4'\n"
    },
    {
        "number": 3406,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3''') == '4'\nassert solution('''5\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3''') == '8'\nassert solution('''2\n0 0\n0 1\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2\n0 1\n1 1\n2 1\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2\n0 1\n1 1\n2 1\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2\n0 1\n1 1\n2 1\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2\n0 1\n1 1\n2 1\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2\n0 1\n1 1\n2 1\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2\n0 1\n1 1\n2 1\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2\n0 1\n1 1\n2 1\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2\n0 1\n1 1\n2 1\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2\n0 1\n1 1\n2 1\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2\n0 1\n1 1\n2 1\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2\n0 1\n1 1\n2 1\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2\n0 1\n1 1\n2 1\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2\n0 1\n1 1\n2 1\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2\n0 1\n1 1\n2 1\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2\n0 1\n1 1\n2 1\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2\n0 1\n1 1\n2 1\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2\n0 1\n1 1\n2 1\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2\n0 1\n1 1\n2 1\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2\n0 1\n1 1\n2 1\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2\n0 1\n1 1\n2 1\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2\n0 1\n1 1\n2 1\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2\n0 1\n1 1\n2 1\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2\n0 1\n1 1\n2 1\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2\n0 1\n1 1\n2 1\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2\n0 1\n1 1\n2 1\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2\n0 1\n1 1\n2 1\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2\n0 1\n1 1\n2 1\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2\n0 1\n1 1\n2 1\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2\n0 1\n1 1\n2 1\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2\n0 1\n1 1\n2 1\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10"
    },
    {
        "number": 3406,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '4'\n\nassert solution('''\n6\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '6'\n\nassert solution('''\n10\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '8'\n\nassert solution('''\n1000\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '8'\n"
    },
    {
        "number": 3406,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3''') == '4'\nassert solution('''4\n0 1\n0 3\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3''') == '4'\nassert solution('''4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3''') == '4'\nassert solution('''4\n1 2\n2 3\n3 4\n4 5\n1 2\n3 4\n2 3\n3 4\n2 3\n4 5\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4\n1 2\n2 3\n3 4"
    },
    {
        "number": 3406,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3''') == '4'\nassert solution('''0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n9\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n4 8\n4 9\n5 4\n5 5\n5 6\n5 7\n5 8\n5 9\n6 7\n6 8\n6 9\n7 8\n7 9\n8 9\n9\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n4 5\n4 6\n4 7\n4 8\n4 9\n5 6\n5 7\n5 8\n5 9\n6 7\n6 8\n6 9\n7 8\n7 9\n8 9\n9\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n4 5\n4 6\n4 7\n4 8\n4 9\n5 6\n5 7\n5 8\n5 9\n6 7\n6 8\n6 9\n7 8\n7 9\n8 9\n9\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n4 5\n4 6\n4 7\n4 8\n4 9\n5 6\n5 7\n5 8\n5 9\n6 7\n6 8\n6 9\n7 8\n7 9\n8 9\n9\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n4 5\n4 6\n4 7\n4 8\n4 9\n5 6\n5 7\n5 8\n5 9\n6 7\n6 8\n6 9\n7 8\n7 9\n8 9\n9\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n4 5\n4 6\n4 7\n4 8\n4 9\n5 6\n5 7\n5 8\n5 9\n6 7\n6 8\n6 9\n7 8\n7 9\n8 9\n9\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n4 5\n4 6\n4 7\n4 8\n4 9\n5 6\n5 7\n5 8\n5 9\n6 7\n6 8\n6 9\n7 8\n7 9\n8 9\n9\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n4 5\n4 6\n4 7\n4 8\n4 9\n5 6\n5 7\n5 8\n5 9\n6 7\n6 8\n6 9\n7 8\n7 9\n8 9\n9\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n4 5\n4 6\n4 7\n4 8\n4 9\n5 6\n5 7\n5 8\n5 9\n6 7\n6 8\n6 9\n7 8\n7 9\n8 9\n9\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n4 5\n4 6\n4 7\n4 8\n4 9\n5 6\n5 7\n5 8\n5 9\n6 7\n6 8\n6 9\n7 8\n7 9\n8 9\n9\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n4 5\n4 6\n4 7\n4 8\n4 9\n5 6\n5 7\n5 8\n5 9\n6 7\n6 8\n6 9\n7 8\n7 9\n8 9\n9\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n4 5\n4 6\n4 7\n4 8\n4 9\n5 6\n5 7\n5 8\n5 9\n6 7\n6 8\n6 9\n7 8\n7 9\n8 9\n9\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n4 5\n4 6\n4 7\n4 8\n4 9\n5 6\n5 7\n5 8\n5 9\n6 7\n6 8\n6 9\n7 8\n7 9\n8 9\n9\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n4 5\n4 6\n4 7\n4 8\n4 9\n5 6\n5 7\n5 8\n5 9\n6 7\n6 8\n6 9\n7 8\n7 9\n8 9\n9\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n4 5\n4 6\n4 7\n4 8\n4 9\n5 6\n5"
    },
    {
        "number": 3406,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '4'\n\nassert solution('''\n4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '0'\n\nassert solution('''\n4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '1'\n\nassert solution('''\n4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '0'\n\nassert solution('''\n4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '1'"
    },
    {
        "number": 3406,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3') == '4'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 3407,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'\n\"\"\"\n\nfrom math import sqrt, log10, hypot"
    },
    {
        "number": 3407,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"\"\nassert solution(\"10\") == \"\"\nassert solution(\"15\") == \"\"\nassert solution(\"100\") == \"\"\nassert solution(\"1000\") == \"\"\n"
    },
    {
        "number": 3407,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n1 2\n1 3\n1 4\n1 5\n''') == '''0.0 0.0\n1.0 0.0\n-1.0 0.0\n0.0 1.0\n0.0 -1.0\n'''\nprint(solution('''15\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n1 30\n1 31\n1 32\n1 33\n1 34\n1 35\n1 36\n1 37\n1 38\n1 39\n1 40\n1 41\n1 42\n1 43\n1 44\n1 45\n1 46\n1 47\n1 48\n1 49\n1 50\n1 51\n1 52\n1 53\n1 54\n1 55\n1 56\n1 57\n1 58\n1 59\n1 60\n1 61\n1 62\n1 63\n1 64\n1 65\n1 66\n1 67\n1 68\n1 69\n1 70\n1 71\n1 72\n1 73\n1 74\n1 75\n1 76\n1 77\n1 78\n1 79\n1 80\n1 81\n1 82\n1 83\n1 84\n1 85\n1 86\n1 87\n1 88\n1 89\n1 90\n1 91\n1 92\n1 93\n1 94\n1 95\n1 96\n1 97\n1 98\n1 99\n1 100\n1 101\n1 102\n1 103\n1 104\n1 105\n1 106\n1 107\n1 108\n1 109\n1 110\n1 111\n1 112\n1 113\n1 114\n1 115\n1 116\n1 117\n1 118\n1 119\n1 120\n1 121\n1 122\n1 123\n1 124\n1 125\n1 126\n1 127\n1 128\n1 129\n1 130\n1 131\n1 132\n1 133\n1 134\n1 135\n1 136\n1 137\n1 138\n1 139\n1 140\n1 141\n1 142\n1 143\n1 144\n1 145\n1 146\n1 147\n1 148\n1 149\n1 150\n1 151\n1 152\n1 153\n1 154\n1 155\n1 156\n1 157\n1 158\n1 159\n1 160\n1 161\n1 162\n1 163\n1 164\n1 165\n1 166\n1 167\n1 168\n1 169\n1 170\n1 171\n1 172\n1 173\n1 174\n1 175\n1 176\n1 177\n1 178\n1 179\n1 180\n1 181\n1 182\n1 183\n1 184\n1 185\n1 186\n1 187\n1 188\n1 189\n1 190\n1 191\n1 192\n1 193\n1 194\n1 195\n1 196\n1 197\n1 198\n1 199\n1 200\n1 201\n1 202\n1 203\n1 204\n1 205\n1 206\n1 207\n1 208\n1 209\n1 210\n1 211\n1 212\n1 213\n1 214\n1 215\n1 216\n1 217\n1 218\n1 219\n1 220\n1 221\n1 222\n1 223\n1 224\n1 225\n1 226\n1 227\n1 228\n1 229\n1 230\n1 231\n1 232\n1 233\n1 234\n1 235\n1 236\n1 237\n1 238\n1 239\n1 240\n1 241\n1 242\n1 243\n1 244\n1 245\n1 246\n1 247\n1 248\n1 249\n1 250\n1 251\n1 252\n1 253\n1 254\n1 255\n1 256\n1 257\n1 258\n1 259\n1 260\n1 261\n1 262\n1 263\n1 264\n1 265\n1 266\n1 267\n1 268\n1 269\n1 270\n1 271\n1 272\n1 273\n1 274\n1 275\n1 276\n1 277\n1 278\n1 279\n1 280\n1 281\n1 282\n1 283\n1 284\n1 285\n1 286\n1 287\n1 288\n1 289\n1 290\n1 291\n1 292\n1 293\n1 294\n1 295\n1 296\n1 297\n1 298\n1 299\n1 300\n1 301\n1 302\n1 303\n1 304\n1 305\n1 306\n1 307\n1 308\n1 309\n1 310\n1 311\n1 312\n1 313\n1 314\n1 315\n1 316\n1 317\n1 318\n1 319\n1 320\n1 321\n1 322\n1 323\n1 324\n1 325\n1 326\n1 327\n1 328\n1 329\n1 330\n1 331\n1 332\n1 333\n1 334\n1 335\n1 336\n1 337\n1 338\n1 339\n1 340\n1 341\n1 342\n1 343\n1 344\n1 345\n1 346\n1 347\n1 348\n1 349\n1 350\n1 351\n1 352\n1 353\n1 354\n1 355\n1 356\n1 357\n1 358\n1 359\n1 360\n1 361\n1 362\n1 363\n1 364\n1 365\n1 366\n1 367\n1 368\n1 369\n1 370\n1 371\n1 372\n1 373\n1 374\n1 375\n1 376\n1 377\n1 378\n1 379\n1 380\n1 381\n1 382\n1 383\n1 384\n1 385\n1 386\n1 387\n1 388\n1 389\n1 390\n1 391\n1 392\n1 393\n1 394\n1 395\n1 396\n1 397\n1 398\n1 399\n1 400\n1 401\n1 402\n1 403\n1 404\n1 405\n1 406\n1 407\n1 408\n1 409\n1 410\n1 411\n1 412\n1 413\n1 414\n1 415\n1 416\n1 417\n1 418\n1 419\n1 420\n1 421\n1 422\n1 423\n1 424\n1 425\n1 426\n1 427\n1 428\n1 429\n1 430\n1 431\n1 432\n1 433\n1 434\n1 435\n1 436\n1 437\n1 438\n1 439\n1 440\n1 441\n1 442\n1 443\n1 444\n1 445\n1 446\n"
    },
    {
        "number": 3407,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n') == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\nassert solution('2\\n1 2\\n2 3') == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\"\nassert solution('3\\n1 2\\n2 3\\n1 3') == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\"\nassert solution('4\\n1 2\\n2 3\\n3 4') == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\"\nassert solution('5\\n1 2\\n2 3\\n3 4\\n4 5') == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\"\n"
    },
    {
        "number": 3407,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n1 2\\n1 3\\n1 4\\n1 5\\n'\nassert solution('3\\n1 2\\n1 3\\n'\nassert solution('4\\n1 2\\n1 3\\n1 4\\n'\nassert solution('5\\n1 2\\n1 3\\n1 4\\n1 5\\n'\nassert solution('3\\n1 2\\n1 3\\n'\n"
    },
    {
        "number": 3407,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n5\n1 2\n1 3\n1 4\n1 5\n''') == '''\n0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n'''\nassert solution(\n'''\n6\n1 2\n1 3\n1 4\n1 5\n1 6\n''') == '''\n0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n'''\nassert solution(\n'''\n9\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n''') == '''\n0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n'''\nassert solution(\n'''\n3\n1 2\n1 3\n2 3\n''') == '''\n0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n'''\nassert solution(\n'''\n4\n1 2\n1 3\n1 4\n1 5\n''') == '''\n0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n'''\n"
    },
    {
        "number": 3407,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n1 2\\n1 3\\n1 4\\n1 5') == '0.0 0.0\\n1.0 0.0\\n-1.0 0.0\\n0.0 1.0\\n0.0 -1.0'\n\nprint(solution(input()))\n"
    },
    {
        "number": 3407,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'\nassert solution('6') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n0.0000000 0.0000000'\nassert solution('100') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'\nassert solution('1000') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'\nassert solution('10000') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'\n"
    },
    {
        "number": 3407,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\\n\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\n"
    },
    {
        "number": 3407,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n1 2\n1 3\n1 4\n1 5''') == '''0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000'''\nassert solution('''6\n1 2\n1 3\n2 4\n1 4\n1 5\n1 6''') == '''0.0000000 0.0000000\n1.0000000 0.0000000\n2.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000'''\nassert solution('''7\n1 2\n1 3\n2 4\n1 5\n1 6\n2 7\n1 5''') == '''0.0000000 0.0000000\n1.0000000 0.0000000\n2.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n0.0000000 0.0000000'''\nassert solution('''8\n1 2\n1 3\n2 4\n1 5\n1 6\n2 7\n1 5\n1 6''') == '''0.0000000 0.0000000\n1.0000000 0.0000000\n2.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n0.0000000 0.0000000\n0.0000000 0.0000000'''\nassert solution('''9\n1 2\n1 3\n2 4\n1 5\n1 6\n2 7\n1 5\n1 6\n2 8\n1 5\n1 6''') == '''0.0000000 0.0000000\n1.0000000 0.0000000\n2.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n0.0000000 0.0000000\n0.0000000 0.0000000\n0.0000000 0.0000000'''\n"
    },
    {
        "number": 3408,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\\n1\\n\") == \"\"\nassert solution(\"1\\n1\\n1\\n\") == \"\"\n"
    },
    {
        "number": 3408,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n\\n1') == '1'\nassert solution('1\\n\\n2\\n\\n3') == '1\\n1\\n3'\nassert solution('3\\n\\nabc\\naba\\naaa\\na*a\\naaa*\\n*aaa') == '2\\n1\\n1'\nassert solution('2\\n\\nab\\nac\\nad\\n*a') == '2\\n2\\n1'\nassert solution('6\\n\\nabc\\naba\\naaa\\na*a\\naaa*\\n*aaa\\nbbb\\nbc\\n*b') == '2\\n1\\n1'\n"
    },
    {
        "number": 3408,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3408,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3408,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\naaa\nabc\naba\na*a\naaa*\n*aaa''') == '''2\n1\n1\n1\n'''\n"
    },
    {
        "number": 3408,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3408,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abc') == '2'\nassert solution('aaa') == '2'\nassert solution('a*a') == '2'\nassert solution('aaa*') == '1'\nassert solution('a*a*') == '1'\n"
    },
    {
        "number": 3408,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\naaa\nabc\naba\na*a\naaa*\n*aaa''') == '''2\n1\n1\n'''\n"
    },
    {
        "number": 3408,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('aaa') == '3'\nassert solution('aaa') == '1'\nassert solution('aaa') == '2'\nassert solution('aaa') == '3'\n"
    },
    {
        "number": 3408,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\\\n3 3\naaa\nabc\naba\na*a\naaa*\n*aaa\n''') == '''\\\n2\n1\n1\n'''\n"
    },
    {
        "number": 3409,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\nXOX\\nXOX\\nXOX\\nXOX\\nOXOX\\nXOX\\nOXOX\\nOXOX\\nXOX\\nOXOX\\nXOX\\nOXOX\\nXOX\\nOXOX\\nOXOX\\nXOX\\nOXOX\\nXOX\\nOXOX\\nOXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\nXOX\\"
    },
    {
        "number": 3409,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n4 2\nXO\nOX\nXO\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX"
    },
    {
        "number": 3409,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(''.join(solution(t) for t in [\"4 2\",\n\"XO\",\n\"OX\",\n\"XO\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\"OX\",\n\""
    },
    {
        "number": 3409,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 2\nXO\nOX\nXO\nOX\nOX\n''') == '1'\nassert solution('''8 8\nOXXXOO\nXXOXXO\nXOXXOO\nXXOOXO\nXOOOXO\nXOXXOO\nXXOXXO\nXOXXOO\n''') == '1'\nassert solution('''8 8\nOOOXXO\nXOOXOO\nOOXXOO\nOXXOOX\nOOXOXO\nXOOXOO\nXOXOOO\nXOOXXO\n''') == '1'\nassert solution('''8 8\nOOOXXO\nXOOXOO\nOOXXOO\nOXXOOX\nXXOOXO\nXOOXOO\nXOXOOO\nXOOXXO\n''') == '1'\nassert solution('''8 8\nXOOXOO\nXOXXOO\nXOXXOO\nOXXOOX\nXXOOXO\nXOOXOO\nXOXXOO\nXXOOXO\n''') == '1'\n"
    },
    {
        "number": 3409,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == 0\nassert solution('1\\n1') == 1\nassert solution('1\\n1') == 1\nassert solution('1\\n2') == 0\nassert solution('1\\n2') == 0\n"
    },
    {
        "number": 3409,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 2\nXO\nOX\nXO\nOX\nOX\nXX\nOX\n''') == \"1\"\nassert solution('''4 4\nXO\nOX\nXO\nOX\nOX\n''') == \"0\"\nassert solution('''2 2\nXO\nXO\n''') == \"0\"\nassert solution('''4 4\nXO\nXO\nOX\nOX\n''') == \"0\"\nassert solution('''3 3\nXO\nXO\nXO\n''') == \"0\"\n"
    },
    {
        "number": 3409,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == 0\nassert solution('XO') == 1\nassert solution('XOX') == 0\nassert solution('XOXOX') == 0\nassert solution('XOXXOX') == 0\n"
    },
    {
        "number": 3409,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 2') == '1'\nassert solution('1 1') == '1'\nassert solution('2 2') == '0'\nassert solution('2 3') == '0'\nassert solution('3 2') == '0'\n"
    },
    {
        "number": 3409,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('O') == '1'\nassert solution('X') == '0'\nassert solution('XOO') == '0'\nassert solution('XOO') == '1'\n"
    },
    {
        "number": 3409,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 2\nXO\nOX\nXO\nOX\nOX\n''') == '1'\nassert solution('''3 3\nXXX\nXXX\nXOX\n''') == '1'\nassert solution('''4 2\nXOX\nXOX\n''') == '1'\nassert solution('''3 3\nOOX\nXOX\nOXX\n''') == '1'\nassert solution('''4 4\nOOX\nXOX\nOXX\nXOX\n''') == '0'\n"
    },
    {
        "number": 3410,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '16'\n"
    },
    {
        "number": 3410,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"16\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3410,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n0 0\n0 2\n-2 0\n0 -2''') == '16'\nassert solution('''3\n2 0\n0 2\n0 -2\n2 -4''') == '2'\n'''\nimport sys\n"
    },
    {
        "number": 3410,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n0\") == \"1\"\nassert solution(\"1\\n2\\n0\") == \"3\"\nassert solution(\"1\\n2\\n2\") == \"4\"\nassert solution(\"1\\n-2\\n2\") == \"-1\"\n"
    },
    {
        "number": 3410,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n0 0\n0 2\n-2 0\n0 -2''') == '16'\nassert solution('''5\n2 0\n0 2\n-2 0\n0 -2\n2 0''') == '34'\nassert solution('''9\n-1 -1\n0 0\n1 1\n2 0\n-1 -1\n0 1\n1 0\n-1 1\n1 0\n0 1''') == '110'\nassert solution('''6\n-1 -1\n0 0\n1 1\n2 0\n-1 -1\n0 1\n1 0\n-1 1\n1 1''') == '124'\nassert solution('''10\n-2 -2\n-1 -1\n0 0\n1 1\n2 0\n-1 -1\n0 1\n1 0\n-1 1\n1 1\n0 1''') == '280'\n"
    },
    {
        "number": 3410,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 0\\n0 2\\n-2 0\\n0 -2\") == \"16\"\nassert solution(\"1\\n0 0\\n0 0\") == \"0\"\nassert solution(\"4\\n-2 0\\n0 -2\\n2 0\\n0 2\") == \"0\"\nassert solution(\"1\\n0 0\\n0 0\") == \"0\"\nassert solution(\"4\\n-2 0\\n0 -2\\n2 0\\n0 2\") == \"0\"\n"
    },
    {
        "number": 3410,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n0 0\\n0 0\") == \"0\"\nassert solution(\"3\\n0 0\\n-1 0\\n0 -1\") == \"1\"\nassert solution(\"6\\n0 0\\n0 -1\\n1 0\\n1 0\") == \"8\"\nassert solution(\"8\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\") == \"0\"\nassert solution(\"8\\n0 0\\n0 0\\n0 -1\\n0 0\\n0 0\") == \"0\"\n"
    },
    {
        "number": 3410,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n3\\n4\") == 16\nassert solution(\"3\\n2 0\\n-2 0\\n0 -2\") == 16\nassert solution(\"6\\n3 4\\n-3 -4\\n0 1\\n-1 2\\n1 -2\") == 6\nassert solution(\"1\\n-1\\n0\\n1\") == 0\nassert solution(\"3\\n-1 2\\n1 -2\\n2 2\") == 0\n"
    },
    {
        "number": 3410,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0\"\nprint(solution(stdin))\n\"\"\"\n\nfrom __future__ import annotations\n\nfrom collections import defaultdict\nfrom functools import lru_cache\n\nMOD = 10 ** 9 + 7\nINT_MAX = (10 ** 6) * 2 + 1"
    },
    {
        "number": 3410,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2\n0 0\n-2 0''') == '16'\nassert solution('''2\n-2 0\n2 0''') == '4'\nassert solution('''2\n2 0\n0 -2''') == '0'\nassert solution('''2\n-2 -2\n2 0''') == '0'\nassert solution('''2\n-2 -2\n2 -2''') == '16'\n"
    },
    {
        "number": 3411,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 2 3''') == \"1\"\nassert solution('''1 3 2''') == \"3\"\nassert solution('''1 2 1''') == \"3\"\nassert solution('''1 2 1''') == \"3\"\nassert solution('''1 3 2''') == \"2\"\n"
    },
    {
        "number": 3411,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 10 50\\n8 8 2 -2') == '80'\nassert solution('6 10 50\\n8 8 2 -2 4') == '60'\nassert solution('5 10 50\\n8 8 2 -2 4 5') == '120'\nassert solution('5 10 50\\n8 8 2 -2 4 6') == '135'\nassert solution('5 10 50\\n8 8 2 -2 4 8') == '150'\n"
    },
    {
        "number": 3411,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 10 50''') == '80'\nassert solution('''4 10 50''') == '80'\nassert solution('''6 10 50''') == '154'\nassert solution('''2 10 50''') == '148'\nassert solution('''7 10 50''') == '97'\n"
    },
    {
        "number": 3411,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 10 50\") == \"80\"\n\nassert solution(\"5 10 50\") == \"80\"\n\nassert solution(\"10 10 50\") == \"20\"\n\nassert solution(\"5 10 50\") == \"20\"\n\nassert solution(\"1 3 4 -2\") == \"0\""
    },
    {
        "number": 3411,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 10 50') == '80'\nassert solution('4 10 50') == '60'\nassert solution('5 10 50') == '60'\nassert solution('4 10 50') == '60'\nassert solution('5 10 50') == '60'\n"
    },
    {
        "number": 3411,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 10 50\n8 8 2 -2''') == '80'\n\nassert solution('''3 10 100\n3 3 -4\nSample Output:\n20\n''') == '20'\n\nassert solution('''6 10 100\n7 6 -8\n2 6 -4\n-2 5 4\n-6 1 -4\nSample Output:\n80\n''') == '80'\n\nassert solution('''8 10 100\n7 6 -8\n2 6 -4\n-2 5 4\n-6 1 -4\nSample Output:\n20\n''') == '20'\n\nassert solution('''10 10 100\n1 1 -1\n-1 1 -2\nSample Output:\n20\n''') == '20'"
    },
    {
        "number": 3411,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 4 10\") == \"80\"\nassert solution(\"2 4 10\") == \"60\"\nassert solution(\"3 4 10\") == \"50\"\nassert solution(\"4 4 10\") == \"40\"\nassert solution(\"5 4 10\") == \"30\"\n"
    },
    {
        "number": 3411,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 10 50') == '80'\n'''\n\n'''\n\n'''\n"
    },
    {
        "number": 3411,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 10 50\\n8 8 2 -2\\n') == '80'\nassert solution('2 3 4\\n1 -2 1\\n') == '5'\nassert solution('7 8 9\\n-1 -2 -3\\n') == '9'\nassert solution('5 5 1\\n1 -1 -1\\n') == '9'\nassert solution('10 10 1\\n-1 -1 -1\\n') == '9'\n"
    },
    {
        "number": 3411,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"80\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3412,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n''') == '3.000000000'\nassert solution('''1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n''') == '3.000000000'\nassert solution('''1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n5 7\n2 2\n5 6\n2 2\n5 5\n2 2\n5 4\n2 2\n5 3\n2 2\n5 2\n2 2\n5 1\n2 2\n5 0\n2 2\n5 -1\n2 2\n5 -2\n2 2\n5 -3\n2 2\n5 -4\n2 2\n5 -5\n2 2\n5 -6\n2 2\n5 -7\n2 2\n5 -8\n2 2\n5 -9\n2 2\n5 -10\n2 2\n5 -11\n2 2\n5 -12\n2 2\n5 -13\n2 2\n5 -14\n2 2\n5 -15\n2 2\n5 -16\n2 2\n5 -17\n2 2\n5 -18\n2 2\n5 -19\n2 2\n5 -20\n2 2\n5 -21\n2 2\n5 -22\n2 2\n5 -23\n2 2\n5 -24\n2 2\n5 -25\n2 2\n5 -26\n2 2\n5 -27\n2 2\n5 -28\n2 2\n5 -29\n2 2\n5 -30\n2 2\n5 -31\n2 2\n5 -32\n2 2\n5 -33\n2 2\n5 -34\n2 2\n5 -35\n2 2\n5 -36\n2 2\n5 -37\n2 2\n5 -38\n2 2\n5 -39\n2 2\n5 -40\n2 2\n5 -41\n2 2\n5 -42\n2 2\n5 -43\n2 2\n5 -44\n2 2\n5 -45\n2 2\n5 -46\n2 2\n5 -47\n2 2\n5 -48\n2 2\n5 -49\n2 2\n5 -50\n2 2\n5 -51\n2 2\n5 -52\n2 2\n5 -53\n2 2\n5 -54\n2 2\n5 -55\n2 2\n5 -56\n2 2\n5 -57\n2 2\n5 -58\n2 2\n5 -59\n2 2\n5 -60\n2 2\n5 -61\n2 2\n5 -62\n2 2\n5 -63\n2 2\n5 -64\n2 2\n5 -65\n2 2\n5 -66\n2 2\n5 -67\n2 2\n5 -68\n2 2\n5 -69\n2 2\n5 -70\n2 2\n5 -71\n2 2\n5 -72\n2 2\n5 -73\n2 2\n5 -74\n2 2\n5 -75\n2 2\n5 -76\n2 2\n5 -77\n2 2\n5 -78\n2 2\n5 -79\n2 2\n5 -80\n2 2\n5 -81\n2 2\n5 -82\n2 2\n5 -83\n2 2\n5 -84\n2 2\n5 -85\n2 2\n5 -86\n2 2\n5 -87\n2 2\n5 -88\n2 2\n5 -89\n2 2\n5 -90\n2 2\n5 -91\n2 2\n5 -92\n2 2\n5 -93\n2 2\n5 -94\n2 2\n5 -95\n2 2\n5 -96\n2 2\n5 -97\n2 2\n5 -98\n2 2\n5 -99\n2 2\n5 -100\n2 2\n5 -101\n2 2\n5 -102\n2 2\n5 -103\n2 2\n5 -104\n2 2\n5 -105\n2 2\n5 -106\n2 2\n5 -107\n2 2\n5 -108\n2 2\n5 -109\n2 2\n5 -110\n2 2\n5 -111\n2 2\n5 -112\n2 2\n5 -113\n2 2\n5 -114\n2 2\n5 -115\n2 2\n5 -116\n2 2\n5 -117\n2 2\n5 -118\n2 2\n5 -119\n2 2\n5 -120\n2 2\n5 -121\n2 2\n5 -122\n2 2\n5 -123\n2 2\n5 -124\n2 2\n5 -125\n2 2\n5 -126\n2 2\n5 -127\n2 2\n5 -128\n2 2\n5 -129\n2 2\n5 -130\n2 2\n5 -131\n2 2\n5 -132\n2 2\n5 -133\n2 2\n5 -134\n2 2\n5 -135\n2 2\n5 -136\n2 2\n5 -137\n2 2\n5 -138\n2 2\n5 -139\n2 2\n5 -140\n2 2\n5 -141\n2 2\n5 -142\n2 2\n5 -143\n2 2\n5 -144\n2 2\n5 -145\n2 2\n5 -146\n2 2\n5 -147\n2 2\n5 -148\n2 2\n5 -149\n2 2\n5 -150\n2 2\n5 -151\n2 2\n5 -152\n2 2\n5 -153\n2 2\n5 -154\n2 2\n5 -155\n2 2\n5 -156\n2 2\n5 -157\n2 2\n5 -158\n2 2\n5 -159\n2 2\n5 -160\n2 2\n5 -161\n2 2\n5 -162\n2"
    },
    {
        "number": 3412,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 3412,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\"\"\") == \"3.000000000\"\n"
    },
    {
        "number": 3412,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n') == '3.000000000'\nassert solution('1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\"
    },
    {
        "number": 3412,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 8\") == \"3.000000000\"\nassert solution(\"0 0 10 10\") == \"0.000000000\"\nassert solution(\"1 8\") == \"3.000000000\"\nassert solution(\"0 0 10 10\") == \"0.000000000\"\nassert solution(\"5 1\") == \"0.000000000\"\n"
    },
    {
        "number": 3412,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n'''\n    ) == '3.000000000'\nassert solution(\n'''1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n'''\n    ) == '3.000000000'\nassert solution(\n'''1 8\n-1 -1 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n'''\n    ) == '3.000000000'\nassert solution(\n'''1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n'''\n    ) == '3.000000000'\nassert solution(\n'''1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n'''\n    ) == '3.000000000'\n"
    },
    {
        "number": 3412,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(open('test_1.txt').read()) == \"1.000000000\"\nassert solution(open('test_2.txt').read()) == \"1.051470214\"\nassert solution(open('test_3.txt').read()) == \"1.000000000\"\nassert solution(open('test_4.txt').read()) == \"0.000000000\"\nassert solution(open('test_5.txt').read()) == \"1.000000000\"\n"
    },
    {
        "number": 3412,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6''') == '3.000000000'\nassert solution('''1 9\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n4\n5 6\n6 7\n6 8\n5''') == '9.000000000'\nassert solution('''1 9\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n4\n5 6\n6 7\n6 8\n5''') == '9.000000000'\nassert solution('''1 9\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n4\n5 6\n6 7\n6 8\n5''') == '9.000000000'\nassert solution('''1 9\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n4\n5 6\n6 7\n6 8\n5''') == '9.000000000'\n"
    },
    {
        "number": 3412,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6''') == '3.000000000'\nassert solution('''1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n1 2\n5 2\n1 4\n2 2\n5 1\n1 3\n2 5\n3 4\n1 1\n2 8\n3 4\n4 4\n2 4\n2 1''') == '6.000000000'\nassert solution('''1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n1 2\n5 2\n1 4\n2 2\n5 1\n1 3\n2 5\n3 4\n1 1\n2 8\n3 4\n4 4\n2 4\n2 1''') == '8.000000000'\nassert solution('''1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n1 2\n5 2\n1 4\n2 2\n5 1\n1 3\n2 5\n3 4\n1 1\n2 8\n3 4\n4 4\n2 4\n2 1''') == '7.000000000'\nassert solution('''1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n1 2\n5 2\n1 4\n2 2\n5 1\n1 3\n2 5\n3 4\n1 1\n2 8\n3 4\n4 4\n2 4\n2 1''') == '6.000000000'\n"
    },
    {
        "number": 3412,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0 1\") == \"1.000000000\"\nassert solution(\"1 2\") == \"2.000000000\"\nassert solution(\"2 3\") == \"3.000000000\"\nassert solution(\"3 4\") == \"5.000000000\"\nassert solution(\"4 5\") == \"7.000000000\"\n"
    },
    {
        "number": 3413,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('inputs/example1.in') == '1'\nassert solution('inputs/example2.in') == '1'\nassert solution('inputs/example3.in') == '0'\nassert solution('inputs/example4.in') == '0'\nassert solution('inputs/example5.in') == '0'\n"
    },
    {
        "number": 3413,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 2\n0 1 0 0\n1 2''') == '1'\nassert solution('''4 3\n0 1 0 0\n1 2\n2 3\n2 4''') == '2'\nassert solution('''4 5\n0 1 0 0\n1 2\n2 3\n3 4\n4 5''') == '4'\nassert solution('''4 10\n0 1 0 0\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10''') == '3'\nassert solution('''1 1\n0''') == '0'\n"
    },
    {
        "number": 3413,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 3413,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == str(1)\n\nTestcases:\nSample Case #1\n\nWe have $n = 4$, and $m = 3$. On the first line, we have $n = 4$ and $m = 3$, indicating that there are 4 governors, and 3 known friendships. On the next line, we have the affiliations of the 4 governors: $0=\\text {ORANGE}, 1=\\text {PURPLE}$, $0=\\text {ORANGE}, 1=\\text {PURPLE}$, $0=\\text {ORANGE}, 1=\\text {PURPLE}$. On the next line, we have $m = 3$, indicating that there are 3 known friendships. On the next $m$ lines, we have $a$ and $b$ ($1 \\le a < b \\le n$) indicating that governor $a$ and governor $b$ are friends. In this case, $a$ is the only person in the Orange Party, so they are the only member of the Orange Party.\n\nIn this case, 1 month has passed, and everybody is still in the Orange Party. After 1 month, $a$ is now the only person in the Purple Party, so they are the only member of the Purple Party.\n\nThe process is repeated for the next $m$ lines. On the next line, we have $a$ and $b$ ($1 \\le a < b \\le n$) indicating that $a$ and $b$ are friends. In this case, $a$ and $b$ are not members of the same party, so they are neither friends with anybody nor members of the opposite party.\n\nFinally, after $m$ months, if everyone is still in the same party, we have gone through the entire process for the first time. In this case, we have gone through the process for $n$ times, in total. Thus, we can conclude that the answer is $n$, and we return it.\n\n>>> solution('''3 3\n0 1 0 0\n1 2\n2 3\n2 4\n''')\n'1'\n\n>>> solution('''4 1\n0 1 0 0\n1 2\n2 3\n2 4\n''')\n'1'\n\n>>> solution('''4 5\n0 1 0 0\n1 2\n2 3\n2 4\n0 1 0 0\n1 2\n2 3\n2 4\n''')\n'2'\n\n>>> solution('''4 4\n0 1 0 0\n1 2\n2 3\n2 4\n0 1 0 0\n1 2\n2 3\n2 4\n''')\n'2'\n\n>>> solution('''4 4\n0 1 0 0\n1 2\n2 3\n2 4\n0 1 0 0\n1 2\n2 3\n2 4\n0 1 0 0\n1 2\n2 3\n2 4\n''')\n'2'\n\n>>> solution('''5 6\n0 1 0 0 0\n1 2\n2 3\n2 4\n2 5\n3 4\n4 5\n0 1 0 0 0\n1 2\n2 3\n2 4\n2 5\n3 4\n4 5\n0 1 0 0 0\n1 2\n2 3\n2 4\n2 5\n3 4\n4 5\n0 1 0 0 0\n1 2\n2 3\n2 4\n2 5\n3 4\n4 5\n0 1 0 0 0\n1 2\n2 3\n2 4\n2 5\n3 4\n4 5\n0 1 0 0 0\n1 2\n2 3\n2 4\n2 5\n3 4\n4 5\n0 1 0 0 0\n1 2\n2 3\n2 4\n2 5\n3 4\n4 5\n0 1 0 0 0\n1 2\n2 3\n2 4\n2 5\n3 4\n4 5\n0 1 0 0 0\n1 2\n2 3\n2 4\n2 5\n3 4\n4 5\n0 1 0 0 0\n1 2\n2 3\n2 4\n2 5\n3 4\n4 5\n0 1 0 0 0\n1 2\n2 3\n2 4\n2 5\n3 4\n4 5\n0 1 0 0 0\n1 2\n2 3\n2 4\n2 5\n3 4\n4 5\n0 1 0 0 0\n1 2\n2 3\n2 4\n2 5\n3 4\n4 5\n0 1 0 0 0\n1 2\n2 3\n2 4\n2 5\n3 4\n4 5\n0 1 0 0 0\n1 2\n2 3\n2 4\n2 5\n3 4\n4 5\n0 1 0 0 0\n1 2\n2 3\n2 4\n2 5\n3 4\n4 5\n0 1 0 0 0\n1 2\n2 3\n2 4\n2 5\n3 4\n4 5\n0 1 0 0 0\n1 2\n2 3\n2 4\n2 5\n3 4\n4 5\n0 1 0 0 0\n1 2\n2 3\n2 4\n2 5\n3 4\n4 5\n0 1 0 0 0\n1 2\n2 3\n2 4\n2 5\n3 4\n4 5\n0 1 0 0 0\n1 2\n2 3\n2 4\n2 5\n3 4\n4 5\n0 1 0 0 0\n1 2\n2 3\n2 4\n2 5\n3 4\n4 5\n0 1 0 0 0\n1 2\n2 3\n2 4\n2 5\n3 4\n4 5\n0 1 0 0 0\n1 2\n2 3\n2 4\n2 5\n3 4\n4 5\n0 1 0 0 0\n1 2\n2 3\n2 4\n2 5\n3 4\n4 5\n0 1 0 0 0\n1 2\n2 3\n2 4\n2 5\n3 4\n4 5\n0 1 0 0 0\n1 2\n2 3\n2 4\n2 5\n3 4\n4 5\n0 1 0 0 0\n1 2\n2 3\n2 4\n2 5\n3 4\n4 5\n0 1 0 0 0\n1 2\n2 3\n2 4\n2 5\n3 4\n4 5\n0 1 0 0 0\n1 2\n2 3\n2 4\n2 5\n3 4\n4 5\n0 1 0 0 0\n1 2\n2 3\n2 4\n2 5\n3 4\n4 5\n0 1 0 0 0\n"
    },
    {
        "number": 3413,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n4 3\n0 1 0 0\n1 2\n2 3\n2 4\n''') == '1'\n\nassert solution('''\n5 3\n0 1 0 0\n1 2\n2 3\n2 4\n3 4\n''') == '2'\n\nassert solution('''\n4 3\n0 1 0 0\n1 2\n2 3\n2 4\n3 4\n1 1\n2 2\n3 3\n''') == '1'\n\nassert solution('''\n6 6\n0 1 0 0 0 0\n0 2 0\n1 3 1\n1 4 1\n1 5 1\n1 6 1\n2 4 2\n2 5 2\n2 6 2\n3 5 3\n3 6 3\n4 5 4\n4 6 4\n5 6 5\n''') == '2'\n\nassert solution('''\n7 7\n0 1 0 0 0 0 0\n0 2 0\n1 3 1\n1 4 1\n1 5 1\n1 6 1\n1 7 1\n2 4 2\n2 5 2\n2 6 2\n2 7 2\n3 6 3\n3 7 3\n4 5 4\n4 6 4\n5 6 5\n5 7 5\n6 7 6\n6 8 6\n7 8 7\n7 9 7\n8 9 8\n9 10 8\n10 11 8\n11 12 8\n12 13 8\n13 14 8\n14 15 8\n15 16 8\n16 17 8\n17 18 8\n18 19 8\n19 20 8\n20 21 8\n21 22 8\n22 23 8\n23 24 8\n24 25 8\n25 26 8\n26 27 8\n27 28 8\n28 29 8\n29 30 8\n30 31 8\n31 32 8\n32 33 8\n33 34 8\n33 35 8\n34 35 9\n35 36 9\n36 37 9\n37 38 9\n38 39 9\n39 40 9\n40 41 9\n41 42 9\n42 43 9\n43 44 9\n44 45 9\n45 46 9\n46 47 9\n47 48 9\n48 49 9\n49 50 9\n50 51 9\n51 52 9\n52 53 9\n53 54 9\n54 55 9\n55 56 9\n56 57 9\n57 58 9\n58 59 9\n59 60 9\n60 61 9\n61 62 9\n62 63 9\n63 64 9\n64 65 9\n65 66 9\n66 67 9\n67 68 9\n68 69 9\n69 70 9\n70 71 9\n71 72 9\n72 73 9\n73 74 9\n74 75 9\n75 76 9\n76 77 9\n77 78 9\n78 79 9\n79 80 9\n80 81 9\n81 82 9\n81 83 9\n82 83 9\n82 84 9\n83 84 9\n83 85 9\n84 85 9\n84 86 9\n85 86 9\n85 87 9\n86 87 9\n86 88 9\n87 88 9\n87 89 9\n88 89 9\n87 90 9\n88 90 9\n87 91 9\n88 91 9\n87 92 9\n88 92 9\n87 93 9\n88 93 9\n87 94 9\n88 94 9\n87 95 9\n88 95 9\n87 96 9\n88 96 9\n87 97 9\n88 97 9\n87 98 9\n88 98 9\n87 99 9\n88 99 9\n87 100 9\n88 100 9\n-----End of Input-----\n''') == '2'"
    },
    {
        "number": 3413,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1\"\n\n\"\"\""
    },
    {
        "number": 3413,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 1 0 0\\n1 2\\n2 3\\n2 4') == 1\nassert solution('3 2\\n1 2\\n0 2\\n2 1') == 1\nassert solution('3 2\\n0 2\\n1 2\\n2 1') == 2\nassert solution('4 2\\n0 1\\n1 2\\n2 3\\n3 4') == 2\nassert solution('5 4\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 1') == 2\n"
    },
    {
        "number": 3413,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n4 3\n0 1 0 0\n1 2\n2 3\n2 4\n''') == \"1\"\nassert solution('''\n4 4\n0 1 0 0\n1 2\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n''') == \"2\"\n'''\n'''\n"
    },
    {
        "number": 3413,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0\n4 3\n0 1 0 0\n1 2\n2 3\n2 4''') == '1'\nassert solution('''0\n6 5\n0 1 0 0 0 0\n1 2\n2 3\n2 4\n2 5\n2 6\n3 4\n4 5\n5 6''') == '2'\nassert solution('''0\n9 8\n0 1 0 0 0 0 0 0\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9''') == '3'\nassert solution('''0\n10 9\n0 1 0 0 0 0 0 0 0 0\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n4 5\n4 6\n4 7\n4 8\n4 9\n5 6\n5 7\n5 8\n5 9\n6 7\n6 8\n6 9\n7 8\n7 9\n8 9''') == '4'\nassert solution('''0\n20 19\n0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"
    },
    {
        "number": 3413,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 3\n0 1 0 0\n1 2\n2 3\n2 4''') == '1'\nassert solution('''5 5\n0 1 0 0 0\n1 2\n2 3\n2 4\n3 4\n4 5\n4 5''') == '0'\nassert solution('''7 10\n0 1 0 0 0 0\n1 2\n2 3\n2 4\n3 4\n3 5\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10''') == '4'\nassert solution('''9 5\n0 1 0 0 0 0 0\n1 2\n2 3\n2 4\n3 4\n3 5\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10''') == '0'\nassert solution('''3 3\n1 2\n2 3\n2 3\n1 2\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10''') == '2'\n"
    },
    {
        "number": 3414,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\\n\"\n) == \"6.283185\"\n\nassert solution(\n\"3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\\n\"\n) == \"3.14159\"\n\nassert solution(\n\"3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\\n\"\n) == \"1.5708\"\n\nassert solution(\n\"3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\\n\"\n) == \"2.46\"\n\nassert solution(\n\"3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\\n\"\n) == \"4.0\""
    },
    {
        "number": 3414,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 6.283185\n\"\"\"\n"
    },
    {
        "number": 3414,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 3\n0 0\n0 1\n1 0\n0 1\n0 2\n1 2''') == '6.283185'\nassert solution('''3 3\n0 0\n0 1\n1 0\n1 1\n2 0\n0 1\n1 2\n2 1\n0 2''') == '9.85393258426966'\nassert solution('''3 3\n0 0\n0 1\n1 0\n0 2\n1 2\n0 2\n1 2\n2 0\n0 2\n1 2''') == '1.5708'\nassert solution('''3 3\n0 0\n0 1\n1 0\n1 1\n2 0\n0 1\n1 2\n2 1\n0 2\n1 2''') == '1.244897959183673'\nassert solution('''3 3\n0 0\n0 1\n1 0\n0 2\n1 2\n0 2\n1 2\n2 0\n0 2\n1 2''') == '1.0986122886681098'\n"
    },
    {
        "number": 3414,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\\n0 1\\n\") == \"6.283185\"\nassert solution(\"3 4\\n0 0\\n0 1\\n0 2\\n1 2\\n2 3\\n0 3\\n\") == \"0.00000\"\nassert solution(\"3 4\\n0 0\\n0 1\\n0 2\\n1 2\\n2 3\\n3 4\\n0 4\\n\") == \"3.14159\"\nassert solution(\"3 5\\n0 0\\n0 1\\n0 2\\n0 3\\n1 3\\n2 3\\n3 4\\n3 5\\n0 4\\n0 5\\n\") == \"5.40000\"\nassert solution(\"7 8\\n0 0\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\\n0 6\\n1 6\\n2 6\\n3 5\\n3 6\\n3 7\\n4 7\\n5 6\\n6 7\\n0 7\\n\") == \"5.92892\"\n"
    },
    {
        "number": 3414,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2'\n) == '6.283185'\nassert solution(\n    '3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2'\n) == '6.283185'\nassert solution(\n    '3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2'\n) == '6.283185'\nassert solution(\n    '3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2'\n) == '6.283185'\nassert solution(\n    '3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2'\n) == '6.283185'\n"
    },
    {
        "number": 3414,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 3\n0 0\n0 1\n1 0\n0 1\n0 2\n1 2''') == '6.283185'\nassert solution('''3 3\n0 0\n0 1\n1 0\n0 1\n0 2\n1 2''') == '6.283185'\nassert solution('''3 3\n0 0\n1 1\n2 0\n1 2''') == '2.866025'\nassert solution('''3 3\n0 0\n0 1\n1 0\n0 1\n0 2\n1 2''') == '2.866025'\nassert solution('''3 3\n0 0\n1 0\n2 0\n0 2''') == '3.61938'\n"
    },
    {
        "number": 3414,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 3\n0 0\n0 1\n1 0\n0 1\n0 2\n1 2''') == \"6.283185\"\nassert solution('''3 3\n0 0\n0 1\n1 0\n0 1\n0 2\n1 2\n2 3\n3 2\n1 3\n2 4\n0 2''') == \"7.0710678118654755\"\nassert solution('''3 2\n0 0\n0 1\n1 0\n0 1\n1 1''') == \"4.4142135623730951\"\nassert solution('''3 2\n0 0\n0 1\n1 0\n0 2\n1 2''') == \"4.4213562373095145\"\nassert solution('''3 2\n0 0\n0 1\n1 0\n0 2\n1 2\n2 3\n3 2''') == \"1.5707963267949\"\n"
    },
    {
        "number": 3414,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1\\n2 2') == '0.5'\nassert solution('3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\\n2 1') == '0.5'\nassert solution('3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\\n2 1\\n2 1') == '0.5'\nassert solution('3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\\n2 1\\n2 1') == '0.5'\nassert solution('3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\\n2 1\\n2 1') == '0.5'\n"
    },
    {
        "number": 3414,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 3\n0 0\n0 1\n1 0\n0 1\n0 2\n1 2''') == '6.283185'\nassert solution('''3 3\n0 0\n0 1\n1 0\n0 1\n0 2\n1 2\n0 0''') == '1.6447'\nassert solution('''6 6\n0 0\n0 1\n1 1\n1 2\n2 3\n3 4\n4 5\n5 6\n5 4\n''') == '2.3560'\nassert solution('''11 11\n0 0\n0 1\n1 0\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n10 9\n11 10\n11 11\n''') == '0.0000'\nassert solution('''10 10\n0 0\n0 1\n1 0\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n11 12\n12 9\n12 12\n13 4\n14 8\n15 11\n16 14\n17 17\n18 18\n18 19\n19 17\n19 17\n''') == '0.1223'\n"
    },
    {
        "number": 3414,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 2\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2') == '6.283185'\nassert solution('3 4\\n0 0\\n0 1\\n1 0\\n0 2\\n1 2\\n2 0\\n1 2\\n0 2\\n2 0') == '-1.1071428'\nassert solution('2 2\\n0 0\\n1 1') == '2.4492935'\nassert solution('3 3\\n0 0\\n0 1\\n1 0\\n0 2\\n1 2\\n2 0\\n1 2\\n0 2') == '4.7979797'\nassert solution('3 3\\n0 0\\n0 1\\n1 0\\n0 2\\n1 2\\n2 0\\n1 2\\n0 2') == '-1.0987437'\n"
    },
    {
        "number": 3415,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n1\n''') == '1 2 3'\n\nassert solution('''\n2\n''') == '1 2 3'\n\nassert solution('''\n3\n''') == '1 2 3'\n\nassert solution('''\n4\n''') == '1 2 3'\n\nassert solution('''\n5\n''') == '1 2 3'"
    },
    {
        "number": 3415,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2''') == \"1 2 3\"\nassert solution('''3''') == \"1 2 3 4 5 6\"\nassert solution('''4''') == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\"\nassert solution('''5''') == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\"\nassert solution('''6''') == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\"\n'''\n"
    },
    {
        "number": 3415,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\"1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3 2\n1 2 3\n1 3"
    },
    {
        "number": 3415,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '1 2 3'\n'''\n"
    },
    {
        "number": 3415,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"10\"\nassert solution(\"2\") == \"110\"\nassert solution(\"3\") == \"1110\"\n"
    },
    {
        "number": 3415,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n------------------\n\n\"\"\"\n"
    },
    {
        "number": 3415,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"10\"\nassert solution(\"3\") == \"101\"\nassert solution(\"4\") == \"110\"\n"
    },
    {
        "number": 3415,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10''') == '1 2 3 4 5 6 7 8 9 10'\nassert solution('''3''') == '1 2 3'\nassert solution('''5''') == '1 2 3 4 5'\nassert solution('''15''') == '1 2 3 4 5 6 7 8 9 10 11 12 13 14 15'\n'''\nfrom math import log\n"
    },
    {
        "number": 3415,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1 2\"\nassert solution(\"3\") == \"1 2 3\"\nassert solution(\"4\") == \"1 2 3 4\"\n"
    },
    {
        "number": 3415,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2') == '1 2 3'\nassert solution('3') == '1 2 3'\nassert solution('5') == '1 2 3 4 5'\nassert solution('15') == '1 2 3 4 5 6 7 8 9 10 11 12 13 14 15'\nassert solution('10') == '1 2 3 4 5 6 7 8 9 10 11 12 13 14 15'\n"
    },
    {
        "number": 3416,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4\n1 2\n1 3\n2 4\n3 4''') == '1\\n1 2 3 4'\nassert solution('''4 4\n1 2\n1 3\n2 4\n3 4\n1 4''') == '1\\n1 2 3 4'\nassert solution('''3 3\n1 2\n1 3\n2 3''') == '0'\nassert solution('''2 2\n1 2\n2 1''') == '1'\nassert solution('''1 1\n1 2\n1 3''') == '1'\n"
    },
    {
        "number": 3416,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 4\n1 2\n1 3\n2 4\n3 4''') == '1\\n1 2 3 4'\nassert solution('''2 3\n1 2\n2 3''') == '1\\n2'\nassert solution('''3 1\n1 2\n2 3''') == '1\\n'\nassert solution('''5 5\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5''') == '1\\n2 3 4 5'\nassert solution('''5 4\n1 2\n2 3\n1 3\n4 5\n2 4''') == '1\\n1 2 3 4 5'\n"
    },
    {
        "number": 3416,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 4\n1 2\n1 3\n2 4\n3 4''') == '1\\n1 2 3 4'\nassert solution('''4 5\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n4 5''') == '1\\n1 2 3 4 5'\nassert solution('''5 5\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n4 5\n1 4\n1 5\n2 4\n2 5\n3 4\n3 5\n4 5''') == '1\\n1 2 3 4 5'\nassert solution('''7 5\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n4 5\n1 4\n1 5\n2 4\n2 5\n3 4\n3 5\n4 5\n1 6\n1 7\n2 6\n2 7\n3 6\n3 7\n4 6\n4 7\n5 6\n5 7\n6 7''') == '1\\n1 2 3 4 5 6 7'\nassert solution('''7 5\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n4 5\n1 4\n1 5\n2 4\n2 5\n3 4\n3 5\n4 5\n1 6\n1 7\n2 6\n2 7\n3 6\n3 7\n4 6\n4 7\n5 6\n5 7\n6 7\n1 8\n1 9\n2 8\n2 9\n3 8\n3 9\n4 8\n4 9\n5 8\n5 9\n6 8\n6 9\n7 8\n7 9\n8 9''') == '1\\n1 2 3 4 5 6 7 8 9'\n"
    },
    {
        "number": 3416,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3416,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 4\n1 2\n1 3\n2 4\n3 4''') == \"1\\n1 2 3 4\\n\"\n\nassert solution('''4 4\n1 2\n1 3\n2 4\n3 4''') == \"1\\n1 2 3 4\\n\"\n\nassert solution('''4 4\n1 2\n1 3\n2 4\n3 4''') == \"1\\n1 2 3 4\\n\"\n\nassert solution('''4 4\n1 2\n1 3\n2 4\n3 4\n3 4\n3 4\n3 4''') == \"3\\n3 4\\n\"\n\nassert solution('''4 4\n1 2\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n2 3\n4 5\n2 3\n4 5\n2 3\n4 5\n2 3\n2 4\n4 5\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n2 3\n4 5\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n2 3\n4 5\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n2 3\n4 5\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n2 3\n4 5\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n2 3\n4 5\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n2 3\n4 5\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n2 3\n4 5\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n2 3\n4 5\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n2 3\n4 5\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n2 3\n4 5\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n2 3\n4 5\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n2 3\n4 5\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n2 3\n4 5\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n2 3\n4 5\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n2 3\n4 5\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n2 3\n4 5\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n2 3\n4 5\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n2 3\n4 5\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n2 3\n4 5\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n2 3\n4 5\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n2 3\n4 5\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n2 3\n4 5\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n2 3\n4 5\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n2 3\n4 5\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n2 3\n4 5\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n2 3\n4 5\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n2 3\n4 5\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n2 3\n4 5\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n2 3\n4 5\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n2 3\n4 5\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n2 3\n4 5\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n2 3\n4 5\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n2 3\n4 5\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n2 3\n4 5\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n2 3\n4 5\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n2 3\n4 5\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n2 3\n4 5\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n2 3\n4 5\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n2 3\n4 5\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n2 3\n4 5\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n2 3\n4 5\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n2 3\n4 5\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n2 3\n4 5\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n2 3\n4 5\n1 3\n"
    },
    {
        "number": 3416,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 4') == '1'\nassert solution('4 4') == '1 2 3 4'\nassert solution('2 3') == '1 2'\nassert solution('1 3') == '1'\nassert solution('4 3') == '1 2 3'\n"
    },
    {
        "number": 3416,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"3\\n4\\n3\\n1\") == \"1 3\"\nassert solution(\"1\\n3\\n1\\n2\\n3\") == \"3\"\nassert solution(\"5\\n8\\n4\\n2\\n7\\n1\\n4\\n3\\n2\\n5\\n6\\n5\\n1\\n4\\n3\\n2\\n5\\n6\\n5\") == \"\"\n"
    },
    {
        "number": 3416,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3416,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3416,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 4\n1 2\n1 3\n2 4\n3 4''') == '1\\n1 2 3 4\\n'\n\nassert solution('''4 4\n1 2\n1 3\n2 4\n2 4''') == '1\\n1 2 3 4\\n'\n\nassert solution('''4 4\n1 2\n1 3\n2 4\n2 4''') == '1\\n1 2 3 4\\n'\n\nassert solution('''4 4\n1 3\n1 3\n1 3\n1 3''') == '1\\n1 3\\n'\n\nassert solution('''4 4\n1 2\n1 3\n1 3\n1 3\n1 3''') == '1\\n1 2 3\\n'"
    },
    {
        "number": 3417,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n1 2\") == \"1\"\nassert solution(\"1 2\\n2 1\") == \"1\"\nassert solution(\"1 2\\n1 2\") == \"1\"\nassert solution(\"1 1\\n1 2\\n2 1\") == \"2\"\nassert solution(\"2 2\\n1 2\\n2 1\") == \"2\"\n"
    },
    {
        "number": 3417,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n2 2\n1 2\n''') == '1'\n\nassert solution(\n'''\n3 4\n1 2\n1 3\n2 3\n''') == '2'\n\nassert solution(\n'''\n4 6\n1 3\n1 4\n2 4\n3 4\n3 5\n4 5\n4 6\n''') == '3'\n\nassert solution(\n'''\n6 7\n1 3\n1 4\n2 4\n3 5\n3 6\n4 5\n5 6\n4 6\n''') == '3'\n\nassert solution(\n'''\n6 7\n1 3\n1 4\n2 4\n3 5\n3 6\n4 5\n5 6\n4 6\n''') == '2'"
    },
    {
        "number": 3417,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n3 2\n1 2\n3\n1 2\n2 3\n1\n\"\"\") == \"3\"\nassert solution(\n\"\"\"\n3 2\n1 2\n3\n1 2\n2 3\n3\n1\n\"\"\") == \"2\"\nassert solution(\n\"\"\"\n3 3\n1 1\n2 2\n3\n1 2\n3\n1\n\"\"\") == \"2\"\nassert solution(\n\"\"\"\n4 2\n1 2\n3\n1 2\n2 3\n1 2\n3\n1\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3417,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n2 3\n1 2\n2 3\n''') == '2'\nassert solution('''\n1\n1\n''') == '1'\nassert solution('''\n2 3\n1 2\n1 3\n''') == '3'\nassert solution('''\n4 4\n1 2\n2 3\n2 4\n1 3\n3 4\n''') == '1'\nassert solution('''\n6 5\n1 2\n1 3\n1 4\n1 5\n2 3\n3 5\n4 5\n''') == '2'\n"
    },
    {
        "number": 3417,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"1\"\nassert solution(\"2 2\\n1 2\\n\") == \"1\"\nassert solution(\"2 4\\n1 2\\n1 3\\n3 4\\n\") == \"4\"\nassert solution(\"2 4\\n1 2\\n1 3\\n3 4\\n\") == \"4\"\nassert solution(\"3 1\\n1 2\\n1 3\\n2 3\\n\") == \"3\"\n"
    },
    {
        "number": 3417,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n2 2\n1 2\n2 1\n''') == '1'\n\nassert solution(\n'''\n2 3\n1 2\n2 1\n1 3\n''') == '2'\n\nassert solution(\n'''\n5 4\n2 3\n4 3\n5 4\n1 2\n2 3\n3 4\n4 5\n''') == '4'\n\nassert solution(\n'''\n5 5\n1 2\n2 3\n2 4\n2 5\n3 4\n3 5\n4 5\n4 5\n''') == '4'\n\nassert solution(\n'''\n4 2\n1 2\n1 3\n2 1\n3 1\n3 4\n''') == '3'"
    },
    {
        "number": 3417,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1\\n1 2\\n') == '1'\nassert solution('2 2\\n1 2\\n') == '2'\nassert solution('3 1\\n2 3\\n') == '3'\nassert solution('3 2\\n2 3\\n') == '1'\nassert solution('4 1\\n2 3\\n4 5\\n1 2\\n3 4\\n') == '4'\n"
    },
    {
        "number": 3417,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 1\n\n---"
    },
    {
        "number": 3417,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 1\\n1 2') == '1'\nassert solution('2 1\\n1 2\\n2 1') == '2'\nassert solution('2 3\\n1 2\\n2 3') == '3'\nassert solution('2 4\\n1 2\\n2 3\\n3 4') == '3'\nassert solution('2 5\\n1 2\\n2 3\\n3 4\\n4 5') == '4'\n"
    },
    {
        "number": 3417,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1\\n1 2\\n') == '1'\nassert solution('3 2\\n1 2\\n2 3') == '2'\nassert solution('6 4\\n1 2\\n2 3\\n4 5\\n5 6') == '2'\nassert solution('7 5\\n1 2\\n1 4\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7') == '3'\nassert solution('7 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n4 5\\n5 6\\n6 7') == '4'\n"
    },
    {
        "number": 3418,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(2) == 45\nassert solution(3) == 100\nassert solution(4) == 100\nassert solution(5) == 100\nassert solution(6) == 100\n"
    },
    {
        "number": 3418,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('4') == '4'\nassert solution('2') == '10'\nassert solution('3') == '11'\n"
    },
    {
        "number": 3418,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2''') == '45'\nassert solution('''3''') == '135'\nassert solution('''5''') == '5'\n'''\n'''"
    },
    {
        "number": 3418,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2''') == '45'\nassert solution('''3''') == '120'\nassert solution('''4''') == '210'\nassert solution('''5''') == '2880'\nassert solution('''6''') == '12060'\n"
    },
    {
        "number": 3418,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == str(45)\nassert solution(\"2\") == str(45)\nassert solution(\"7\") == str(45)\n\nassert solution(\"13\") == str(45)\nassert solution(\"16\") == str(45)\n"
    },
    {
        "number": 3418,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('3') == '0'\nassert solution('22') == '1'\nassert solution('4') == '1'\nassert solution('6') == '0'\n"
    },
    {
        "number": 3418,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(123) == 45\nassert solution(12345) == 900\nassert solution(200) == 900\nassert solution(13) == 45\nassert solution(23) == 900\n"
    },
    {
        "number": 3418,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('5') == '45'\nassert solution('15') == '45'\nassert solution('50000') == '45'\nassert solution('4999') == '45'\n"
    },
    {
        "number": 3418,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2') == '45'\nassert solution('2\\n1') == '45'\nassert solution('2\\n3') == '3'\nassert solution('2\\n5') == '12'\nassert solution('3\\n3') == '9'\n"
    },
    {
        "number": 3418,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2') == 45\n'''"
    },
    {
        "number": 3419,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3419,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 20 20\\n7 11 9 12 2') == '4'\nassert solution('5 10 10\\n3 1 2 4 2') == '3'\nassert solution('5 10 10\\n3 1 2 4 2') == '3'\nassert solution('5 10 10\\n3 1 2 4 2') == '3'\nassert solution('5 10 10\\n3 1 2 4 2') == '3'\n"
    },
    {
        "number": 3419,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 20 20') == '4'\nassert solution('5 20 22') == '2'\nassert solution('5 22 22') == '2'\nassert solution('5 22 20') == '2'\nassert solution('10 22 22') == '0'\n"
    },
    {
        "number": 3419,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 20 20''') == '4'\nassert solution('''7 11 9 12 2''') == '4'\nassert solution('''4 2 2''') == '0'\nassert solution('''2 3 2''') == '3'\nassert solution('''3 3 3''') == '2'\n"
    },
    {
        "number": 3419,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 20 20\") == \"4\"\nassert solution(\"5 0 0\") == \"1\"\nassert solution(\"5 0 0\") == \"1\"\nassert solution(\"5 10 10\") == \"0\"\nassert solution(\"5 10 10\") == \"0\"\n"
    },
    {
        "number": 3419,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\"\nassert solution(\"5 10 10\\n7 11 9 12 2\") == \"0\"\nassert solution(\"6 10 10\\n7 11 9 12 2\") == \"3\"\nassert solution(\"7 10 10\\n7 11 9 12 2\") == \"2\"\nassert solution(\"8 10 10\\n7 11 9 12 2\") == \"2\"\n"
    },
    {
        "number": 3419,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4\"\n\nassert solution(\"5 20 20\") == \"4\"\n\nassert solution(\"5 1 0\") == \"0\"\n\nassert solution(\"1 2 1\") == \"1\"\n\nassert solution(\"1 0 0\") == \"1\""
    },
    {
        "number": 3419,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 20 20\\n7 11 9 12 2') == '4'"
    },
    {
        "number": 3419,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 4\n"
    },
    {
        "number": 3419,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 10 10') == '4'\nassert solution('100 5 10') == '5'\nassert solution('10 100 10') == '4'\nassert solution('5 10 10') == '2'\nassert solution('10 100 10') == '2'\n"
    },
    {
        "number": 3420,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '2'\n\nassert stdin == '2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n'\nassert stdin == '2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n'\nassert stdin == '2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\n'\n\nassert stdin == '2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\n'\n"
    },
    {
        "number": 3420,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 2\nkenny 1 harrypotter1\ncharlie 1 lordoftherings\njenny 1 harrypotter1\nlaura 1 lordoftherings''') == '2'\n\nassert solution('''2 2\njenny 1 harrypotter1\nlaura 1 lordoftherings\njenny 1 harrypotter1\ncharlie 1 lordoftherings\nlaura 1 lordoftherings''') == '2'\n\nassert solution('''4 4\nlaura 1 lordoftherings\ncharlie 1 lordoftherings\njenny 1 harrypotter1\nkenny 1 harrypotter1''') == '2'\n\nassert solution('''3 2\nlaura 1 lordoftherings\nkenny 1 harrypotter1\njenny 1 harrypotter1''') == '2'\n\nassert solution('''4 4\nlaura 1 lordoftherings\njenny 1 harrypotter1\nkenny 1 harrypotter1\njenny 1 harrypotter1''') == '2'"
    },
    {
        "number": 3420,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\"\nassert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\nkenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"3\"\nassert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\nkenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\"\nassert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\"\nassert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nkenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\"\n"
    },
    {
        "number": 3420,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\"\nassert solution(\"2 2\\nharrypotter1\\nharrypotter1\\nharrypotter1\\nlordoftherings\\nlordoftherings\") == \"3\"\nassert solution(\"2 2\\nharrypotter1\\nharrypotter1\\nharrypotter1\\nlordoftherings\\nlordoftherings\") == \"3\"\nassert solution(\"1 1\\na\\na\\na\\na\\na\") == \"2\"\nassert solution(\"1 1\\na\\na\\na\\na\") == \"3\"\n"
    },
    {
        "number": 3420,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"0\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"3\"\nassert solution(\"1 2 3 4 5 6\") == \"4\"\n"
    },
    {
        "number": 3420,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 1\nkenny 1 harrypotter1\ncharlie 1 lordoftherings\njenny 1 harrypotter1\nlaura 1 lordoftherings''') == '2'\n'''\nn, m = int(stdin.split()[0]), int(stdin.split()[1])\nboys = set()\ngirls = set()\nfor i in range(n):\n    boys.add(stdin.split()[i*2+1])\nfor i in range(n, n+m):\n    girls.add(stdin.split()[i*2+1])\nboys, girls = list(boys), list(girls)\nboys.sort()\ngirls.sort()\np = 0\n"
    },
    {
        "number": 3420,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\"\n\n\"\"\""
    },
    {
        "number": 3420,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\n\n\"\"\""
    },
    {
        "number": 3420,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 2\nkenny 1 harrypotter1\ncharlie 1 lordoftherings\njenny 1 harrypotter1\nlaura 1 lordoftherings''') == '2'\nassert solution('''2 2\nharrypotter1 1 kenny\nlordoftherings 1 harrypotter1\nkenny 1 harrypotter1\nlaura 1 lordoftherings\ncharlie 1 lordoftherings\njenny 1 harrypotter1\nharrypotter1 1 kenny\nlordoftherings 1 harrypotter1\nkenny 1 harrypotter1\nlaura 1 lordoftherings''') == '2'\nassert solution('''2 2\nharrypotter1 1 kenny\nlordoftherings 1 harrypotter1\nkenny 1 harrypotter1\nlaura 1 lordoftherings\ncharlie 1 lordoftherings\njenny 1 harrypotter1\nharrypotter1 1 kenny\nlordoftherings 1 harrypotter1\nkenny 1 harrypotter1\nlaura 1 lordoftherings''') == '2'\nassert solution('''2 2\nharrypotter1 1 kenny\nlordoftherings 1 harrypotter1\nkenny 1 harrypotter1\nlaura 1 lordoftherings\ncharlie 1 lordoftherings\njenny 1 harrypotter1\nharrypotter1 1 kenny\nlordoftherings 1 harrypotter1\nkenny 1 harrypotter1\nlaura 1 lordoftherings''') == '2'\nassert solution('''2 2\nkenny 1 harrypotter1\nharrypotter1 1 kenny\nlordoftherings 1 harrypotter1\nkenny 1 harrypotter1\nlaura 1 lordoftherings\ncharlie 1 lordoftherings\njenny 1 harrypotter1\nharrypotter1 1 kenny\nlordoftherings 1 harrypotter1\nkenny 1 harrypotter1\nlaura 1 lordoftherings''') == '2'\n"
    },
    {
        "number": 3420,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom itertools import chain"
    },
    {
        "number": 3421,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0\n0''') == '2 1'\nassert solution('''0\n1\n0''') == '2 1'\nassert solution('''1\n1\n0''') == '2 1'\nassert solution('''1\n0\n0\n1\n1\n0\n1\n0''') == '2 1'\nassert solution('''1\n1\n1\n0\n0\n1\n1\n0\n1\n0''') == '2 1'\n"
    },
    {
        "number": 3421,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n01\n01\n0\n01\n"
    },
    {
        "number": 3421,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''0\n1\n1\n1\n0\n1\n1\n1\n1\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n1\n1\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 3421,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n"
    },
    {
        "number": 3421,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''0\n01\n01\n00\n00\n0\n''') == '2 1'\nassert solution('''0\n01\n10\n00\n00\n0\n''') == '0 0'\nassert solution('''0\n1\n''') == '0 1'\nassert solution('''0\n''') == '0 0'\nassert solution('''1\n1\n1\n0\n''') == '1 1'\n"
    },
    {
        "number": 3421,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n01') == '2 1'\nassert solution('2\\n011') == '2 1'\nassert solution('3\\n0011') == '2 1'\nassert solution('4\\n0110') == '2 1'\nassert solution('5\\n0111') == '2 1'\n"
    },
    {
        "number": 3421,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\n\n-----Limits------\nTime limit: 100 seconds per test\nMemory limit: 1 GB\n\n-----Test Set-----\n1\u2264k\u2264100,\n\n-----Reference-----\n\n\"\"\"\n\nn = int(input())\na = [int(x) for x in input()]\nm = max(a)\ns = 0\nfor i in range(len(a)):\n    if a[i] == m:\n        if i >= n:\n            s += 1\n"
    },
    {
        "number": 3421,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''0\n01\n01''') == '2 1'\nassert solution('''0\n1\n0\n1\n0''') == '2 1'\nassert solution('''1\n1\n0\n0\n1\n0\n1\n1\n0\n0\n1\n0''') == '1 1'\nassert solution('''1\n1\n0\n1\n1\n0\n0\n0\n0\n1\n1\n0\n0\n0\n1\n0\n0\n1\n1\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n1\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n1\n0\n1\n0\n1\n0\n0\n0\n0\n0\n1\n1\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n"
    },
    {
        "number": 3421,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''0\n0\n1\n1\n1\n0\n0\n0\n0\n1\n1\n1\n0\n0\n0\n0\n0\n1\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n1\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0"
    },
    {
        "number": 3421,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('01') == '2 1'\nassert solution('00') == '2 1'\nassert solution('10') == '2 1'\nassert solution('0001') == '2 1'\nassert solution('010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101"
    },
    {
        "number": 3422,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12') == '4 3\\n2123\\n1012\\n2123\\n2233\\n2233\\n1111'\nassert solution('2\\n1\\n1\\n1\\n1\\n1') == '1 1\\n1 1'\nassert solution('2\\n1\\n1\\n1\\n1\\n1') == '1 1'\nassert solution('2\\n1\\n1\\n1\\n1\\n1') == '1 1'\nassert solution('2\\n1\\n1\\n1\\n1\\n1') == '1 1'\n"
    },
    {
        "number": 3422,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n4 1\n2123\n2 2\n21\n10\n2 2\n23\n12''') == '4 3\\n2123\\n1012\\n2123\\n2233\\n2233\\n1111'\n'''\n"
    },
    {
        "number": 3422,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n4 1\n2123\n2 2\n21\n10\n2 2\n23\n12\n''') == '4 3\\n2123\\n1012\\n2123\\n'\nassert solution('''4\n3 2\n2123\n2 2\n21\n10\n2 2\n23\n12\n''') == '4 3\\n2123\\n1012\\n2123\\n'\nassert solution('''3\n5 1\n123\n321\n321\n123\n''') == '5 3\\n123\\n321\\n321\\n123\\n'\nassert solution('''1\n1\n''') == '1\\n1\\n'"
    },
    {
        "number": 3422,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n3\n4 1\n2123\n2 2\n21\n10\n2 2\n23\n12\n''') == '4 3\\n2123\\n1012\\n2123\\n2233\\n2233\\n1111'\nassert solution('''\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n''') == '1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1'\nassert solution('''\n2\n5 5\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n''') == '4 4\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111'\nassert solution('''\n2\n3 3\n1 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '6 6\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1'\nassert solution('''\n4\n2 1\n23\n123\n1231\n12\n122\n1221\n123\n''') == '4 3\\n23\\n123\\n1231\\n12\\n122\\n1221\\n123\\n1231\\n123\\n1221\\n123\\n1231\\n123'\n"
    },
    {
        "number": 3422,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(sample_input) == sample_output\n"
    },
    {
        "number": 3422,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n4 1\n2123\n2 2\n21\n10\n2 2\n23\n12''') == '4 3\\n2123\\n1012\\n2123\\n'\nassert solution('''3\n4 1\n2123\n2 2\n21\n10\n2 2\n23\n12''') == '4 3\\n2233\\n2233\\n1111\\n'\n'''\n\n'''\n"
    },
    {
        "number": 3422,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3422,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(open(\"test_data/small/unittest_small_1.txt\").read()) == \"4 3\"\nassert solution(open(\"test_data/small/unittest_small_2.txt\").read()) == \"2233\"\nassert solution(open(\"test_data/small/unittest_small_3.txt\").read()) == \"1111\"\nassert solution(open(\"test_data/small/unittest_small_4.txt\").read()) == \"12 3\"\nassert solution(open(\"test_data/small/unittest_small_5.txt\").read()) == \"2 3\"\n"
    },
    {
        "number": 3422,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n4 1\n2123\n2 2\n21\n10\n2 2\n23\n12''') == '4 3\\n2123\\n1012\\n2123\\n2233\\n2233\\n1111'\nassert solution('''2\n2 2\n21\n10\n2 2\n23\n12''') == '0 0\\n0 0\\n1 0\\n1 0'\nassert solution('''1\n2 1\n11\n1\n2 1\n22\n1\n2 1\n22''') == '0 0\\n0 0\\n0 0\\n0 0\\n1 0\\n0 0\\n0 0\\n0 0'\nassert solution('''2\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2\n22\n2 2"
    },
    {
        "number": 3422,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin.split('\\n')[0]\n\n--- 536 ms ---\n'''\n"
    },
    {
        "number": 3423,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('a\\nb\\nc\\nd\\ne\\nf') == ''\nassert solution('a\\nb\\nc\\nd\\ne\\nf\\n') == ''\nassert solution('a\\nb\\nc\\nd\\ne\\nf\\n\\n') == ''\nassert solution('a\\nb\\nc\\nd\\ne\\nf\\n\\n') == 'c\\nb\\na\\nf'\n"
    },
    {
        "number": 3423,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('14\\nlibattr\\nvim-X11 vim-common gtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2\\nlibtiff zlib libjpeg\\natk\\npango xorg-x11-libs freetype glib2\\nglib2\\nzlib libjpeg\\nxorg-x11-libs grep freetype\\ngrep pcre\\npcre\\nfreetype\\n3') == 'atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\ntiff\\ngtk2\\nvim-X11'\nassert solution('14\\nlibattr\\nvim-X11 vim-common gtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2\\nlibtiff zlib libjpeg\\natk\\npango xorg-x11-libs freetype glib2\\nglib2\\nzlib libjpeg\\nxorg-x11-libs grep freetype\\ngrep pcre\\npcre\\nfreetype\\n3') == 'atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\ntiff\\ngtk2\\nvim-X11'\nassert solution('14\\nlibattr\\nvim-X11 vim-common gtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2\\nlibtiff zlib libjpeg\\natk\\npango xorg-x11-libs freetype glib2\\nglib2\\nzlib libjpeg\\nxorg-x11-libs grep freetype\\ngrep pcre\\npcre\\nfreetype\\n3') == 'atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\ntiff\\ngtk2\\nvim-X11'\nassert solution('14\\nlibattr\\nvim-X11 vim-common gtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2\\nlibtiff zlib libjpeg\\natk\\npango xorg-x11-libs freetype glib2\\nglib2\\nzlib libjpeg\\nxorg-x11-libs grep freetype\\ngrep pcre\\npcre\\nfreetype\\n3') == 'atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\ntiff\\ngtk2\\nvim-X11'\nassert solution('14\\nlibattr\\nvim-X11 vim-common gtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2\\nlibtiff zlib libjpeg\\natk\\npango xorg-x11-libs freetype glib2\\nglib2\\nzlib libjpeg\\nxorg-x11-libs grep freetype\\ngrep pcre\\npcre\\nfreetype\\n3') == 'atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\ntiff\\ngtk2\\nvim-X11'\n"
    },
    {
        "number": 3423,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n') == 'atk'\nassert solution('2\\n') == 'freetype'\nassert solution('3\\n') == 'libattr'\nassert solution('4\\n') == 'libtiff'\nassert solution('5\\n') == 'libjpeg'\n"
    },
    {
        "number": 3423,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1\nlibattr\nvim-X11 vim-common gtk2 libattr\nvim-common\ngtk2 libtiff atk pango glib2\nlibtiff zlib libjpeg\natk\npango xorg-x11-libs freetype glib2\nglib2\nzlib libjpeg\nlibjpeg\nxorg-x11-libs grep freetype\ngrep pcre\npcre\nfreetype\n0\nemacs xorg-x11 lisp\nxorg-x11\nlisp emacs\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 3423,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''14\nlibattr\nvim-X11 vim-common gtk2 libattr\nvim-common\ngtk2 libtiff atk pango glib2\nlibtiff zlib libjpeg\natk\npango xorg-x11-libs freetype glib2\nglib2\nzlib libjpeg\nlibjpeg\nxorg-x11-libs grep freetype\ngrep pcre\npcre\nfreetype\n3\nemacs xorg-x11 lisp\nxorg-x11\nlisp emacs\n''') == '''atk\nfreetype\nglib2\nlibattr\nlibjpeg\npcre\ngrep\nvim-common\nxorg-x11-libs\npango\nzlib\nlibtiff\ngtk2\nvim-X11\n'''\n\nassert solution('''14\na c +g\na\nc +g\n''') == '''a\nc\n'''\n\nassert solution('''14\na c +g\na +c +g\n''') == '''a\nc\n'''\n\nassert solution('''14\na c +g\na +g +c\n''') == '''a\nc\n'''\n\nassert solution('''14\na c +g\na +g +c\n''') == '''a\nc\n'''"
    },
    {
        "number": 3423,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(open(\"input/12.txt\").read()))\n"
    },
    {
        "number": 3423,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('hello world') == 'hello world'\nassert solution('libattr\\nvim-X11 vim-common gtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2\\nlibtiff zlib libjpeg\\natk\\npango xorg-x11-libs freetype glib2\\nglib2\\nzlib libjpeg\\nxorg-x11-libs grep freetype\\ngrep pcre\\npcre\\nfreetype\\n3\\nemacs xorg-x11 lisp\\nxorg-x11\\nlisp emacs') == 'emacs\\nxorg-x11-libs\\nxorg-x11\\nlisp\\npcre\\ngrep\\ngrep\\nfreetype\\nlibtiff\\nzlib\\nlibattr\\ntk2\\nlibjpeg\\nlibjpeg\\nlibjpeg\\ngtk2\\nvim-common\\nlibattr\\nvim-X11\\ngtk2\\nlisp\\nlibattr\\nlibtiff\\nfreetype\\ngtk2\\nlibtiff\\nlibtiff\\nlibattr\\natk\\nfreetype\\nlibattr\\ngtk2\\nlibtiff\\nlibattr\\nlibtiff\\nlibtiff\\nlibattr\\nlibtiff\\nlibtiff\\nlibattr\\nlibattr\\nlibtiff\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibtiff\\nlibattr\\nlibattr\\nlibtiff\\nlibtiff\\nlibtiff\\nlibattr'\nassert solution('libattr\\nvim-X11 vim-common gtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2\\nlibtiff zlib libjpeg\\natk\\npango xorg-x11-libs freetype glib2\\nglib2\\nzlib libjpeg\\nxorg-x11-libs grep freetype\\ngrep pcre\\npcre\\nfreetype\\n3\\nemacs xorg-x11 lisp\\nxorg-x11\\nlisp emacs') == 'emacs\\nxorg-x11-libs\\nxorg-x11\\nlisp\\npcre\\ngrep\\ngrep\\nfreetype\\nlibtiff\\nzlib\\nlibattr\\ntk2\\nlibjpeg\\nlibjpeg\\nlibjpeg\\ngtk2\\nlibtiff\\nlibtiff\\nlibattr\\nlibtiff\\nlibtiff\\nlibattr\\nlibtiff\\nlibtiff\\nlibattr\\nlibtiff\\nlibtiff\\nlibattr\\nlibtiff\\nlibtiff\\nlibattr\\nlibtiff\\nlibtiff\\nlibattr\\nlibtiff\\nlibtiff\\nlibattr\\nlibtiff\\nlibtiff\\nlibattr\\nlibtiff\\nlibtiff\\nlibattr\\nlibtiff\\nlibtiff\\nlibattr\\nlibtiff\\nlibtiff\\nlibattr'\nassert solution('libattr\\nvim-X11 vim-common gtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2\\nlibtiff zlib libjpeg\\natk\\npango xorg-x11-libs freetype glib2\\nglib2\\nzlib libjpeg\\nxorg-x11-libs grep freetype\\ngrep pcre\\npcre\\nfreetype\\n3\\nemacs xorg-x11 lisp\\nxorg-x11\\nlisp emacs') == 'emacs\\nxorg-x11-libs\\nxorg-x11\\nlisp\\npcre\\ngrep\\ngrep\\nfreetype\\ntk2\\nlibjpeg\\nlibjpeg\\nlibjpeg\\ngtk2\\nlibtiff\\nlibtiff\\nlibattr\\nlibtiff\\nlibtiff\\nlibattr\\nlibtiff\\nlibtiff\\nlibattr\\nlibtiff\\nlibtiff\\nlibattr\\nlibtiff\\nlibtiff\\nlibattr\\nlibtiff\\nlibtiff\\nlibattr\\nlibtiff\\nlibtiff\\nlibattr\\nlibtiff\\nlibtiff\\nlibattr\\nlibtiff\\nlibtiff\\nlibattr\\nlibtiff\\nlibtiff\\nlibattr\\nlibtiff\\nlibtiff\\nlibattr'\nassert solution('libattr\\nvim-X11 vim-common gtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2\\nlibtiff zlib libjpeg\\natk\\npango xorg-x11-libs freetype glib2\\nglib2\\nzlib libjpeg\\nxorg-x11-libs grep freetype\\ngrep pcre\\npcre\\nfreetype\\n3\\nemacs xorg-x11 lisp\\nxorg-x11\\nlisp emacs') == 'emacs\\nxorg-x11-libs\\nxorg-x11\\nlisp\\npcre\\ngrep\\ngrep\\nfreetype\\ntk2\\nlibjpeg\\nlibjpeg\\nlibjpeg\\ngtk2\\nlibtiff\\nlibtiff\\nlibattr\\nlibt"
    },
    {
        "number": 3423,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('a b c d e f g h i j k l m n o p q r s t u v w x y z') == 'abcd'\nassert solution('c a b c e f g h i j k l m n o p q r s t u v w x y z') == 'abcd'\nassert solution('a e i o u a l c d f g h j k l m n o p q r s t u v w x y z') == 'abcdefghij'\nassert solution('c b a e i o u a l c d f g h j k l m n o p q r s t u v w x y z') == 'abcdefghij'\n"
    },
    {
        "number": 3423,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n0\nlibattr\nvim-X11 vim-common gtk2 libattr\nvim-common\ngtk2 libtiff atk pango glib2\nlibtiff zlib libjpeg\natk\npango xorg-x11-libs freetype glib2\nglib2\nzlib\nlibjpeg\nxorg-x11-libs grep freetype\ngrep pcre\npcre\nfreetype\n3\nemacs xorg-x11 lisp\nxorg-x11\nlisp emacs\n0\n''') == '''\natk\nfreetype\nglib2\nlibattr\nlibjpeg\npcre\ngrep\nvim-common\nxorg-x11-libs\npango\nzlib\nlibtiff\ngtk2\nvim-X11\n'''\nassert solution('''\n14\nlibattr\nvim-X11 vim-common gtk2 libattr\nvim-common\ngtk2 libtiff atk pango glib2\nlibtiff zlib libjpeg\natk\npango xorg-x11-libs freetype glib2\nglib2\nzlib\nlibjpeg\nxorg-x11-libs grep freetype\ngrep pcre\npcre\nfreetype\n3\nemacs xorg-x11 lisp\nxorg-x11\nlisp emacs\n0\n''') == '''\nlibattr\nfreetype\nglib2\nlibattr\nlibjpeg\npcre\ngrep\nvim-common\nxorg-x11-libs\npango\nzlib\nlibtiff\ngtk2\nvim-X11\n'''\nassert solution('''\n0\nlibattr\nvim-X11 vim-common gtk2 libattr\nvim-common\ngtk2 libtiff atk pango glib2\nlibtiff zlib libjpeg\natk\npango xorg-x11-libs freetype glib2\nglib2\nzlib\nlibjpeg\nxorg-x11-libs grep freetype\ngrep pcre\npcre\nfreetype\n3\nemacs xorg-x11 lisp\nxorg-x11\nlisp emacs\n0\n''') == '''\ncannot be ordered\n"
    },
    {
        "number": 3423,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('libattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr\\nlibattr"
    },
    {
        "number": 3424,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"16\"\n\"\"\"\n"
    },
    {
        "number": 3424,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"32 20\") == \"16\"\nassert solution(\"3 20\") == \"16\"\nassert solution(\"12 3\") == \"3\"\nassert solution(\"15 3\") == \"3\"\nassert solution(\"20 3\") == \"3\"\n"
    },
    {
        "number": 3424,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''32 20\n''') == '16'\nassert solution('''121021\n''') == '32'\nassert solution('''10101\n''') == '10'\nassert solution('''11000\n''') == '10'\nassert solution('''10\n''') == '10'\n"
    },
    {
        "number": 3424,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''32 20''') == '16'\n'''\n"
    },
    {
        "number": 3424,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''32 20''') == '16'\nassert solution('''30 18''') == '16'\nassert solution('''48 19''') == '16'\nassert solution('''40 26''') == '16'\nassert solution('''73 46''') == '16'\n"
    },
    {
        "number": 3424,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''32 20''') == '16'\nassert solution('''12 22''') == '32'\nassert solution('''18 40''') == '16'\nassert solution('''7 46''') == '32'\nassert solution('''20 40''') == '16'\n"
    },
    {
        "number": 3424,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"32 20\") == \"16\"\nassert solution(\"1000000 11111111\") == \"16\"\nassert solution(\"1100000011111111\") == \"16\"\nassert solution(\"1000000000000000\") == \"16\"\nassert solution(\"1000000000000000 1\") == \"16\"\n"
    },
    {
        "number": 3424,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"16\"\n\n\"\"\"\n\nimport sys\n\nsys.setrecursionlimit(2000)\n\n\"\"\""
    },
    {
        "number": 3424,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10020') == '16'\nassert solution('156947') == '16'\nassert solution('10024') == '16'\nassert solution('1807854') == '16'\nassert solution('53212') == '16'\n"
    },
    {
        "number": 3424,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') is None\nassert solution('hello') is None\nassert solution('hello - world') == None\nassert solution('2b0a') == None\nassert solution('x') == None\n"
    },
    {
        "number": 3425,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3\n...\n"
    },
    {
        "number": 3425,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 4') == '5 13'\nassert solution('3 3') == '2 2'\nassert solution('1 1') == '1 1'\nassert solution('2 2') == '0 1'\nassert solution('1 2') == '0 0'\n"
    },
    {
        "number": 3425,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    '3 4'\n) == '5 13'\nassert solution(\n    '4 3'\n) == '6 10'\nassert solution(\n    '5 5'\n) == '10 60'\nassert solution(\n    '6 7'\n) == '10 61'\nassert solution(\n    '7 8'\n) == '14 108'\n"
    },
    {
        "number": 3425,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''3 4\n....\n.#.#\n....''') == '5 13'\nassert solution(\n'''10 10\n"
    },
    {
        "number": 3425,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output\n\n-----\nSample Input:\n3 3\n####\n"
    },
    {
        "number": 3425,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n5 4\n.##.\n##..\n##.#\n.#..\n''') == '5 13'\n\nassert solution(\n'''\n8 8\n....#\n"
    },
    {
        "number": 3425,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''3 4\n....\n.#.#\n....\n''') == \"5 13\"\n'''\nSample Input:\n1 3\n"
    },
    {
        "number": 3425,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(sample0) == \"5 1\"\nassert solution(sample1) == \"13 1\"\nassert solution(sample2) == \"14 7\"\nassert solution(sample3) == \"15 4\"\nassert solution(sample4) == \"16 2\"\n"
    },
    {
        "number": 3425,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 4\n....\n.#.#\n....''') == \"5 13\"\n\nassert solution('''1 3\n....\n....''') == \"2 1\"\n\nassert solution('''1 1\n....\n....''') == \"1 1\"\n\nassert solution('''2 3\n"
    },
    {
        "number": 3425,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 3\n....\n.#.#''') == '5 13'\nassert solution('''4 2\n....\n....\n....\n....''') == '9 13'\nassert solution('''5 5\n.#.##\n....#\n.#.#.\n...#.\n"
    },
    {
        "number": 3426,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3426,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\\n1 2 5 1\\n2 3 3 1\\n3 1? 0') == '5'\n\nassert solution('3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0') == '5'\n\nassert solution('3 4\\n1 2 3 4\\n2 1 3 4\\n3 2 1 4') == '5'\n\nassert solution('3 3\\n1 2?\\n2 1?\\n3 2?') == '1'\n\nassert solution('3 3\\n1 2?\\n2 1?\\n3 2?') == '1'"
    },
    {
        "number": 3426,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 3\n1 2 5 1\n2 3 3 1\n3 1? 0''') == '5'\nassert solution('''2 2\n1 2 4 2\n2 1 2?\n3 2 4 2\n3 1 2 1''') == '9'\nassert solution('''3 4\n1 2 4 2\n1 2 2 1\n2 1 2?\n3 2 4 2\n3 1 2 1''') == '8'\nassert solution('''1 0\n2\n3 4\n4 5\n4??\n5 1\n5 2\n5?\n''') == '0'\n'''\n'''"
    },
    {
        "number": 3426,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1 1') == '1'\nassert solution('2\\n2 1 1') == '1'\nassert solution('3\\n3 2 2 1') == '2'\nassert solution('3\\n3 1 1 1') == '1'\nassert solution('3\\n3 1 1 1\\n3 2 2 1') == '1'\n"
    },
    {
        "number": 3426,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0'\n) == '5'\nassert solution(\n    '2 3\\n1 2 3\\n2 3? 1'\n) == '3'\nassert solution(\n    '1 4\\n1 2 3\\n2 4? 1'\n) == '2'\nassert solution(\n    '4 8\\n1 2 3\\n2 4 5\\n3 4 7\\n4 8? 0'\n) == '6'\nassert solution(\n    '2 4\\n1 2 3\\n2 4? 0'\n) == '3'\n"
    },
    {
        "number": 3426,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"5\"\nassert solution(\"1 0\") == \"0\"\nassert solution(\"1 0 1\") == \"0\"\nassert solution(\"2 3 0\") == \"3\"\nassert solution(\"3 3 0\") == \"3\"\n"
    },
    {
        "number": 3426,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 3\n1 2 5 1\n2 3 3 1\n3 1? 0''') == '5'\nassert solution('''1 10\n2 8 1\n3 9 1\n4 8 1\n5 7 1\n6 6 1\n7 5 1\n8 4 1\n9 3 1\n10 2 1''') == '18'\n'''\nTest cases\n\nSample Test Case 1\n\nOutput:\n5\n\nSample Test Case 2\n\nOutput:\n17\n\nSample Test Case 3\n\nOutput:\n26\n\nSample Test Case 4\n\nOutput:\n35\n\nSample Test Case 5\n\nOutput:\n30\n\nSample Test Case 6\n\nOutput:\n43\n\n'''\n"
    },
    {
        "number": 3426,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n3\\n4\") == \"5\"\nassert solution(\"1\\n2\\n3\\n4\") == \"5\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\") == \"5\"\nassert solution(\"3\\n1 2 3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"0\"\nassert solution(\"4\\n1 2 3 4\\n2 3 4 4\\n3 4 4 4\\n4 1 3 5\\n5 4 1 1\\n6 4 3 1\\n7 4 2 1\\n8 4 1 1\") == \"5\"\n"
    },
    {
        "number": 3426,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(open(\"test_solution_04.txt\", \"r\").read()) == '5'\n'''\n\nfrom math import ceil, log10\nfrom collections import deque, Counter\nfrom sys import exit"
    },
    {
        "number": 3426,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1\\n1\\n1\\n1\\n2\\n2\\n2\\n2\\n2\\n3\\n3\\n3\\n3\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n"
    },
    {
        "number": 3427,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\n\n\"\"\"\n"
    },
    {
        "number": 3427,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"2 3\n-1 0\n-1 1\n0 1\n\"\"\") == \"0\"\nassert solution(\"\"\"3 4\n-1 0\n-1 1\n0 1\n0 3\n-1 3\n\"\"\") == \"3\"\nassert solution(\"\"\"8 6\n-1 0\n-1 1\n-1 2\n-1 3\n-1 4\n-1 5\n-1 6\n-1 7\n0 3\n0 5\n\"\"\") == \"5\"\nassert solution(\"\"\"5 7\n-1 0\n-1 1\n-1 2\n-1 3\n-1 4\n-1 5\n-1 6\n-1 7\n-1 8\n0 3\n0 5\n\"\"\") == \"5\"\nassert solution(\"\"\"10 8\n-1 0\n-1 1\n-1 2\n-1 3\n-1 4\n-1 5\n-1 6\n-1 7\n-1 8\n-1 9\n-1 10\n0 2\n0 3\n\"\"\") == \"6\"\n"
    },
    {
        "number": 3427,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == \"0\"\nassert solution(\"3 3\\n-1 0\\n-1 1\\n0 1\") == \"0\"\nassert solution(\"3 2\\n-1 1\\n0 1\\n-1 1\") == \"0\"\nassert solution(\"3 3\\n-1 0\\n0 1\\n-1 1\") == \"2\"\nassert solution(\"3 3\\n-1 0\\n-1 1\\n0 1\") == \"2\"\n"
    },
    {
        "number": 3427,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 3\\n-1 0\\n-1 1\\n0 1') == '0'\nassert solution('5 3\\n-1 0\\n-1 1\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5') == '3'\nassert solution('1 1\\n-1 0') == '1'\nassert solution('1 3\\n-1 0\\n-1 1') == '0'\nassert solution('10 8\\n-1 0\\n-1 1\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10') == '2'\n"
    },
    {
        "number": 3427,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0 2\\n-1 0\\n-1 1\") == \"0\"\nassert solution(\"0 2\\n-1 0\\n-1 1\") == \"0\"\nassert solution(\"2 3\\n-1 0\\n-1 1\\n1 2\") == \"1\"\nassert solution(\"2 3\\n-1 0\\n-1 1\\n1 2\") == \"3\"\nassert solution(\"2 3\\n-1 0\\n-1 1\\n1 2\\n0 2\") == \"0\"\n"
    },
    {
        "number": 3427,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0\\n1') == '0'\nassert solution('1\\n1') == '0'\nassert solution('2\\n1') == '2'\nassert solution('4\\n1') == '3'\nassert solution('2\\n3') == '2'\n"
    },
    {
        "number": 3427,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 3\\n-1 0\\n-1 1\\n0 1\\n') == '3'\nassert solution('3 3\\n-1 0\\n-1 1\\n0 1\\n') == '0'\nassert solution('3 5\\n-1 0\\n-1 1\\n0 1\\n') == '0'\nassert solution('3 5\\n-1 0\\n-1 1\\n0 1\\n') == '3'\nassert solution('3 5\\n-1 0\\n-1 1\\n0 1\\n') == '3'\n"
    },
    {
        "number": 3427,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 3\n-1 0\n-1 1\n0 1''') == '0'\nassert solution('''2 2\n0 1\n1 0''') == '1'\nassert solution('''3 3\n0 1\n1 2\n2 1''') == '2'\nassert solution('''3 3\n0 1\n1 2\n1 2\n2 0\n2 0''') == '3'\nassert solution('''3 3\n-1 0\n-1 1\n0 1\n1 2\n2 0''') == '3'\n"
    },
    {
        "number": 3427,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"0 0\n-1 0\n-1 1\n\"\"\") == \"0\"\nassert solution(\"\"\"0 0\n-1 0\n-1 1\n1 1\n\"\"\") == \"1\"\nassert solution(\"\"\"0 0\n1 0\n-1 0\n\"\"\") == \"2\"\nassert solution(\"\"\"0 0\n1 0\n1 1\n0 1\n\"\"\") == \"2\"\nassert solution(\"\"\"0 0\n1 0\n1 1\n-1 1\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3427,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0 2\") == \"0\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"0 1\") == \"0\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"-1 1\") == \"0\"\n"
    },
    {
        "number": 3428,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input(\"> \")) == 6\n\n\"\"\"\n\nfrom sys import stdin"
    },
    {
        "number": 3428,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\"\n\n\"\"\"\n"
    },
    {
        "number": 3428,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n9 6 2 4') == '6'\nassert solution('5\\n1 2 1 4 3') == '4'\nassert solution('15\\n1 2 1 4 3 5 6 7 8 9 10 11 12 13 14 15') == '4'\nassert solution('1000000\\n1 2 1 4 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '1000000'"
    },
    {
        "number": 3428,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 1\\n\") == \"2\"\nassert solution(\"6\\n9 6 2 4 1 2 1\") == \"6\"\nassert solution(\"6\\n1 2 1 3 2 1\") == \"4\"\n\"\"\"\n\n\"\"\"\nRoughly speaking, the complexity is O(n). The runtime can be improved by using a generator.\n\"\"\"\n"
    },
    {
        "number": 3428,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('1\\n1\\n1\\n1') == '3'\nassert solution('2\\n1\\n2\\n2') == '4'\nassert solution('3\\n1\\n1\\n1') == '5'\nassert solution('4\\n1\\n2\\n2') == '6'\n"
    },
    {
        "number": 3428,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''9\n1 2 3 4 5 6 7 8 9''') == '6'\nassert solution('''10\n9 8 7 6 5 4 3 2 1''') == '5'\nassert solution('''1000\n1 2 3 4 5 6 7 8 9 10''') == '1'\nassert solution('''100000\n9 8 7 6 5 4 3 2 1''') == '1'\nassert solution('''1000\n1 2 3 4 5 6 7 8 9 10''') == '2'\n'''\n"
    },
    {
        "number": 3428,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('9 6 2 4') == '6'\nassert solution('1331') == '3'\nassert solution('0 0 0 0 0') == '0'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '1'\nassert solution('0 0 0 0 0 0 0 0 0 0 0') == '0'\n"
    },
    {
        "number": 3428,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n9 6 2 4') == '6'\nassert solution('3\\n9 6 2 4') == '4'\nassert solution('1000\\n
    },
    {
        "number": 3428,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4 5') == '6'\nassert solution('2 3 1') == '2'\nassert solution('1 2 3 4 5') == '6'\nassert solution('2 3 1') == '2'\nassert solution('1 2 3 4 5 6 7') == '5'\n"
    },
    {
        "number": 3428,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('4\\n9 6 2 4') == '6'\nassert solution('10\\n9 8 7 1') == '6'\nassert solution('100\\n9 8 7 1') == '6'\n\"\"\""
    },
    {
        "number": 3429,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2.000000\"\n\"\"\"\n"
    },
    {
        "number": 3429,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 1 1 3 2') == '2.000000'\nassert solution('2 5 1') == '2.000000'\nassert solution('2 1 1 3 2') == '2.000000'\nassert solution('2 3 1 3 2') == '4.000000'\nassert solution('2 3 1 1 3 2') == '5.000000'\n"
    },
    {
        "number": 3429,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(open(\"test_input_1.txt\", \"r\").read()) == \"2.000000\"\nassert solution(open(\"test_input_2.txt\", \"r\").read()) == \"2.000000\"\nassert solution(open(\"test_input_3.txt\", \"r\").read()) == \"0.000000\"\nassert solution(open(\"test_input_4.txt\", \"r\").read()) == \"0.000000\"\nassert solution(open(\"test_input_5.txt\", \"r\").read()) == \"0.000000\"\n"
    },
    {
        "number": 3429,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 1 1 3 2\\n2 5 1\") == \"2.000000\"\nassert solution(\"2 1 1 3 2\\n2 5 1\\n2 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\") == \"1.000000\"\nassert solution(\"2 1 1 3 2\\n2 5 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\") == \"0.000000\"\nassert solution(\"2 1 1 3 2\\n2 5 1\\n2 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\") == \"0.000000\"\nassert solution(\"2 1 1 3 2\\n2 5 1\\n2 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\") == \"0.000000\"\n"
    },
    {
        "number": 3429,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 1 1 3 2\n2 5 1\n''') == '2.000000'\nassert solution('''10\n9\n1\n10\n2\n3\n4\n5\n6\n7\n8\n9\n''') == '1.000000'\nassert solution('''10\n0\n10\n''') == '10.000000'\nassert solution('''10\n3\n1\n''') == '7.000000'\nassert solution('''10\n3\n0\n''') == '7.000000'\n"
    },
    {
        "number": 3429,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 1 1 3 2''') == '2.000000'\nassert solution('''2 5 1''') == '2.000000'\nassert solution('''1 1 1 1 1''') == '10.000000'\nassert solution('''1 2 2 3 4''') == '3.000000'\nassert solution('''1 1 1 1 1''') == '10.000000'\n"
    },
    {
        "number": 3429,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 1 1 3 2\n2 5 1''') == '2.000000'\nassert solution('''2 1 1 3 2\n2 5 1''') == '2.000000'\nassert solution('''2 1 1 3 2\n2 5 1''') == '2.000000'\nassert solution('''2 1 1 3 2\n2 5 1''') == '2.000000'\nassert solution('''4 4 2 6 2\n2 4 4\n''') == '2.000000'\n"
    },
    {
        "number": 3429,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 1 1 3 2\\n2 5 1') == '2.000000'\n\n---"
    },
    {
        "number": 3429,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2.000000\"\n\n\"\"\"\n\nimport sys\nsys.setrecursionlimit(10 ** 6)\nfrom math import *"
    },
    {
        "number": 3429,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 1 1 3 2\") == 2.000000\nassert solution(\"2 5 1\") == 2.000000\nassert solution(\"2 1 1 2\") == 2.000000\nassert solution(\"2 1 1 3\") == 2.000000\nassert solution(\"2 1 1 2\") == 2.000000\n"
    },
    {
        "number": 3430,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2\n2 3\n4\n1 2\n1 3\n1 4\n3\n1 2\n1 3\n1 4''') == '96'\nassert solution('''3\n1 2\n2 3\n4\n1 2\n1 3\n1 4\n3\n1 2\n1 3\n1 4''') == '96'\nassert solution('''3\n1 2\n2 3\n4\n1 2\n1 3\n1 4\n1 2\n1 3\n1 4\n3\n1 2\n1 3\n1 4''') == '96'\nassert solution('''3\n1 2\n2 3\n4\n1 2\n1 3\n1 4\n1 2\n1 3\n1 4\n1 2\n1 3\n1 4\n3\n1 2\n1 3\n1 4''') == '64'\nassert solution('''3\n1 2\n2 3\n4\n1 2\n1 3\n1 4\n1 2\n1 3\n1 4\n1 2\n1 3\n1 4\n1 2\n1 3\n1 4\n3\n1 2\n1 3\n1 4''') == '128'\n"
    },
    {
        "number": 3430,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n448\\n449\\n450\\n451\\n452\\n453\\n454\\n455\\n456\\n457\\n458\\n459\\n460\\n461\\n462\\n463\\n464\\n465\\n466\\n467\\n468\\n469\\n470\\n471\\n472\\n473\\n474\\n475\\n476\\n477\\n478\\n479\\n480\\n481\\n482\\n483\\n484\\n485\\n486\\n487\\n488\\n489\\n490\\n491\\n492\\n493\\n494\\n495\\n496\\n497\\n498\\n499\\n500\\n501\\n502\\n503\\n504\\n505\\n506\\n507\\n"
    },
    {
        "number": 3430,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''3\n1 2\n2 3\n4\n1 2\n1 3\n1 4\n3\n1 2\n1 3\n1 4'''\n) == '96'\n\nassert solution(\n'''4\n1 2\n1 3\n1 4\n2\n1 2\n1 3\n1 4\n2\n1 2\n1 3\n1 4'''\n) == '36'\n"
    },
    {
        "number": 3430,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2\\n2 3\\n4\\n1 2\") == \"96\"\nassert solution(\"5\\n1 2\\n2 3\\n4 5\\n1 3\\n2 4\\n3 4\") == \"108\"\nassert solution(\"7\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\") == \"192\"\nassert solution(\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\") == \"384\"\nassert solution(\"5\\n1 2\\n2 3\\n4 5\\n1 3\\n2 4\") == \"108\"\n"
    },
    {
        "number": 3430,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n3\n1 2\n2 3\n4\n1 2\n1 3\n1 4\n3\n1 2\n1 3\n1 4\n2\n1 2\n1 3\n1 4\n2\n1 2\n1 3\n1 4\n3\n1 2\n1 3\n1 4\n3\n1 2\n1 3\n1 4\n4\n1 2\n1 3\n1 4\n4\n1 2\n1 3\n1 4\n4\n1 2\n1 3\n1 4\n''') == '96'\n\nassert solution('''\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2"
    },
    {
        "number": 3430,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '96'\nassert solution('3\\n1 2\\n2 3\\n4\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n4\\n3\\n2\\n4\\n1\\n2\\n1\\n2\\n3\\n4\\n4\\n3\\n2\\n1\\n2\\n4\\n3\\n2\\n1\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n2\\n3\\n4\\n4\\n3\\n2\\n1\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n2\\n3\\n4\\n4\\n3\\n2\\n1\\n2\\n1\\n2\\n3\\n4\\n4\\n3\\n2\\n1\\n2\\n1\\n2\\n3\\n4\\n4\\n3\\n2\\n1\\n2\\n1\\n2\\n3\\n4\\n4\\n3\\n2\\n1\\n2\\n1\\n2\\n3\\n4\\n4\\n3\\n2\\n1\\n2\\n1\\n2\\n3\\n4\\n4\\n3\\n2\\n1\\n2\\n1\\n2\\n3\\n4\\n4\\n3\\n2\\n1\\n2\\n1\\n2\\n3\\n4\\n4\\n3\\n2\\n1\\n2\\n1\\n2\\n3\\n4\\n4\\n3\\n2\\n1\\n2\\n1\\n2\\n3\\n4\\n4\\n3\\n2\\n1\\n2\\n1\\n2\\n3\\n4\\n4\\n3\\n2\\n1\\n2\\n1\\n2\\n3\\n4\\n4\\n3\\n2\\n1\\n2\\n1\\n2\\n3\\n4\\n4\\n3\\n2\\n1\\n2\\n1\\n2\\n3\\n4\\n4\\n3\\n2\\n1\\n2\\n1\\n2\\n3\\n4\\n4\\n3\\n2\\n1\\n2\\n1\\n2\\n3\\n4\\n4\\n3\\n2\\n1\\n2\\n1\\n2\\n3\\n4\\n4\\n3\\n2\\n1\\n2\\n1\\n2\\n3\\n4\\n4\\n3\\n2\\n1\\n2\\n1\\n2\\n3\\n4\\n4\\n3\\n2\\n1\\n2\\n1\\n2\\n3\\n4\\n4\\n3\\n2\\n1\\n2\\n1\\n2\\n3\\n4\\n4\\n3\\n2\\n1\\n2\\n1\\n2\\n3\\n4\\n4\\n3\\n2\\n1\\n2\\n1\\n2\\n3\\n4\\n4\\n3\\n2\\n1\\n2\\n1\\n2\\n3\\n4\\n4\\n3\\n2\\n1\\n2\\n1\\n2\\n3\\n4\\n4\\n3\\n2\\n1\\n2\\n1\\n2\\n3\\n4\\n4\\n3\\n2\\n1\\n2\\n1\\n2\\n3\\n4\\n4\\n3\\n2\\n1\\n2\\n1\\n2\\n3\\n4\\n4\\n3\\n2\\n1\\n2\\n1\\n2\\n3\\n4\\n4\\n3\\n2\\n1\\n2\\n1\\n2\\n3\\n4\\n4\\n3\\n2\\n1\\n2\\n1\\n2\\n3\\n4\\n4\\n3\\n2\\n1\\n2\\n1\\n2\\n3\\n4\\n4\\n3\\n2\\n1\\n2\\n1\\n2\\n3\\n4\\n4\\n3\\n2\\n1\\n2\\n1\\n2\\n3\\n4\\n4\\n3\\n2\\n1\\n2\\n1\\n2\\n3\\n4\\n4\\n3\\n2\\n1\\n2\\n1\\n2\\n3\\n4\\n4\\n3\\n2\\n1\\n2\\n1\\n2\\n3\\n4\\n4\\n3\\n2\\n1\\n2\\n1\\n2\\n3\\n4\\n4\\n3\\n2\\n1\\n2\\n1\\n2\\n3\\n4\\n4\\n3\\n2\\n1\\n2\\n1\\n2\\n"
    },
    {
        "number": 3430,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\\n2\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n\") == \"96\"\nassert solution(\"1\\n2\\n2\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n\") == \"136\"\nassert solution(\"5\\n1 2\\n2 3\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n\") == \"48\"\nassert solution(\"5\\n1 2\\n2 3\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n\") == \"48\"\nassert solution(\"5\\n1 2\\n2 3\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n\") == \"48\"\n"
    },
    {
        "number": 3430,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n1 2\\n2 3\\n4') == '96'\nassert solution('3\\n1 2\\n2 3\\n4\\n1 2\\n1 3\\n1 4\\n') == '96'\nassert solution('5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n') == '976'\nassert solution('10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n') == '8749'\nassert solution('15\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n') == '97601'\n"
    },
    {
        "number": 3430,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2\\n2 3\\n4\\n1 2\") == \"96\"\nassert solution(\"3\\n1 2\\n2 3\\n4\\n1 4\\n1 3\") == \"96\"\nassert solution(\"1\\n1\") == \"0\"\nassert solution(\"2\\n1 2\") == \"4\"\nassert solution(\"2\\n1 1\") == \"2\"\n"
    },
    {
        "number": 3430,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n1 2\n2 3\n4\n1 2''') == '96'\nassert solution('''3\n1 2\n2 3\n4\n1 3\n1 4\n1 2''') == '72'\nassert solution('''1\n1 2\n3 4\n5 6\n7 8\n''') == '0'\nassert solution('''3\n1 2\n2 3\n4\n1 3\n2 4\n1 2\n1 3\n2 4\n1 2\n2 3\n3 4\n''') == '40'\nassert solution('''2\n1 2\n2 3\n''') == '4'\n"
    },
    {
        "number": 3431,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n1 1\") == \"3\"\nassert solution(\"1\\n0 0\\n0 1\\n1 0\\n1 1\") == \"3\"\nassert solution(\"2\\n0 0\\n0 1\\n1 0\\n1 1\") == \"3\"\nassert solution(\"3\\n0 0\\n0 1\\n1 0\\n1 1\") == \"3\"\nassert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == \"3\"\n"
    },
    {
        "number": 3431,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n1 1\") == \"3\"\nassert solution(\"5\\n0 0\\n0 1\\n1 0\\n1 1\\n2 0\\n2 1\\n3 0\\n3 1\\n4 0\\n4 1\") == \"3\"\nassert solution(\"1\\n1 1\\n1 1\\n1 1\") == \"0\"\nassert solution(\"2\\n1 1\\n1 1\\n1 1\") == \"1\"\nassert solution(\"1000000000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000\\n999990000"
    },
    {
        "number": 3431,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3\"\n\nprint(solution(stdin))\n\"\"\"\n\nimport sys\n\nn = int(sys.stdin.readline())\npoints = [[int(x) for x in sys.stdin.readline().split()] for _ in range(n)]\n\nprint(len(set([(x[0], x[1]) for x in points])))\n"
    },
    {
        "number": 3431,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\n0 0\n0 1''') == '3'\nassert solution('''5\n0 0\n0 1\n1 0\n1 1\n1 2''') == '4'\nassert solution('''7\n0 0\n0 1\n1 0\n1 1\n1 2\n1 3\n1 4''') == '6'\nassert solution('''10\n0 0\n0 1\n1 0\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9''') == '15'\n'''\nfrom sys import stdin\nprint(solution(stdin.read()))\n'''"
    },
    {
        "number": 3431,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n0 0\n0 1\n1 0\n1 1''') == 3\nassert solution('''9\n0 0\n0 1\n1 0\n1 1\n1 2\n2 0\n2 2\n2 3\n3 0\n3 4\n''') == 5\nassert solution('''10\n0 0\n0 1\n1 0\n1 1\n1 2\n2 0\n2 2\n2 3\n3 0\n3 4\n4 0\n4 1''') == 5\n'''\nNotes:\n\n'''\n"
    },
    {
        "number": 3431,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '3'"
    },
    {
        "number": 3431,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n0 0\n0 1\n1 0\n1 1''') == '3'\nassert solution('''10\n3 3\n0 0\n4 4\n7 7\n0 0\n1 1\n5 9\n0 0\n1 1\n4 4\n9 8''') == '5'\nassert solution('''3\n0 0\n1 1\n2 2''') == '1'\nassert solution('''3\n0 0\n1 1\n2 2''') == '1'\nassert solution('''10\n10 10\n0 0\n5 5\n5 5\n2 2\n2 2\n2 2\n5 5\n7 7\n8 8\n9 9\n10 10''') == '5'\n"
    },
    {
        "number": 3431,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 0\\n0 1\\n1 0\\n1 1') == 3\nassert solution('1\\n0 0\\n0 1\\n1 0\\n1 1') == 1\nassert solution('2\\n0 0\\n0 1\\n1 0\\n1 1') == 2\nassert solution('3\\n0 0\\n0 1\\n1 0\\n1 1') == 3\nassert solution('4\\n0 0\\n0 1\\n1 0\\n1 1') == 4\n"
    },
    {
        "number": 3431,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0\\n0\\n1\\n0\\n1\\n1\") == \"3\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"2\\n0\\n1\\n0\\n2\\n2\\n0\") == \"2\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"100000\\n0\\n1\\n0\\n2\\n2\\n0\") == \"100000\"\n"
    },
    {
        "number": 3431,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''0 0\n0 1\n1 0\n1 1''') == '3'\n'''\n    pass"
    },
    {
        "number": 3432,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n2 8\n3 1\n1 4\n''') == '10\\n10\\n9\\n'\nassert solution('''3\n8 2\n1 3\n2 1\n3 1\n3 1\n''') == '10\\n10\\n10\\n'\nassert solution('''3\n9 3\n1 1\n2 2\n3 3\n''') == '3\\n3\\n2\\n'\nassert solution('''3\n3 2\n4 1\n5 1\n6 1\n''') == '3\\n3\\n2\\n'\nassert solution('''10\n10\n9\n8\n7\n6\n5\n4\n3\n2\n1\n1\n''') == '10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n'\n"
    },
    {
        "number": 3432,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n2 8\n3 1\n1 4''') == '10\\n10\\n9\\n'\nassert solution('''2\n2 8\n3 1''') == '10\\n9\\n'\nassert solution('''4\n2 8\n3 1\n1 4\n1 8\n4 1''') == '10\\n10\\n9\\n10\\n'\nassert solution('''7\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '10\\n10\\n10\\n10\\n10\\n10\\n'\nassert solution('''7\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n2 1''') == '10\\n10\\n10\\n10\\n10\\n9\\n'\n"
    },
    {
        "number": 3432,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 3432,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\n2 8\n3 1\n1 4''') == '10\\n10\\n9'\nassert solution('''3\n2 8\n3 1\n1 4\n2 4''') == '10\\n10\\n9'\nassert solution('''10\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2''') == '10\\n10\\n9\\n4'\nassert solution('''3\n2 8\n3 1\n1 4\n2 4\n1 1\n2 1\n2 1''') == '10\\n10\\n9\\n4'\nassert solution('''3\n2 8\n3 1\n1 4\n2 4\n1 1\n2 1\n2 1''') == '10\\n10\\n9\\n4'\n"
    },
    {
        "number": 3432,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1\n2\n3''') == '4'\nassert solution('''1\n1\n1''') == '2'\nassert solution('''5\n2\n1\n1\n2\n2''') == '8'\nassert solution('''10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10''') == '100'\nassert solution('''4\n2\n1\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2"
    },
    {
        "number": 3432,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"3\n2 8\n3 1\n1 4\n\"\"\") == \"\"\"10\n10\n9\n\"\"\"\n"
    },
    {
        "number": 3432,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n2 8\n3 1\n1 4''') == '10\\n10\\n9'\n'''"
    },
    {
        "number": 3432,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n"
    },
    {
        "number": 3432,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"2 2\") == \"\"\nassert solution(\"2 8\") == \"10\"\nassert solution(\"3 1\") == \"10\"\n"
    },
    {
        "number": 3432,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(open(\"test_one.txt\").read()) == \"10\"\nassert solution(open(\"test_two.txt\").read()) == \"10\"\nassert solution(open(\"test_three.txt\").read()) == \"9\"\nassert solution(open(\"test_four.txt\").read()) == \"8\"\nassert solution(open(\"test_five.txt\").read()) == \"9\"\n"
    },
    {
        "number": 3433,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'IMPOSSIBLE'\n\n'''\n"
    },
    {
        "number": 3433,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n####\\n#JF#\\n#..#\\n#..#\\n#JF#\\n####\") == \"3\""
    },
    {
        "number": 3433,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 4\n####\n"
    },
    {
        "number": 3433,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 4\n####\n"
    },
    {
        "number": 3433,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n4 4\n####\n"
    },
    {
        "number": 3433,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 4\\n####\\n#JF#\\n#..#\\n#..#\\n#..#') == '3'\nassert solution('4 4\\n####\\n#J.F#\\n#..#\\n#..#\\n#..#') == 'IMPOSSIBLE'\nassert solution('4 4\\n####\\n#JF#\\n#..#\\n#..#\\n#..#') == '3'\nassert solution('4 4\\n####\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.##') == 'IMPOSSIBLE'\nassert solution('4 4\\n####\\n#J#.\\n#.##\\n#.##\\n#.##') == '4'\n"
    },
    {
        "number": 3433,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 4\n####\n"
    },
    {
        "number": 3433,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\\n#.J.F#\") == \"3\"\nassert solution(\"1 1\\n#\") == \"IMPOSSIBLE\"\nassert solution(\"1 2\\n##\") == \"IMPOSSIBLE\"\nassert solution(\"1 2\\n#\") == \"IMPOSSIBLE\"\nassert solution(\"3 4\\n#.#.\\n.#.#\\n.#.#\\n#J.F#\") == \"3\"\n"
    },
    {
        "number": 3433,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 4\n####\n"
    },
    {
        "number": 3433,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 1\n"
    },
    {
        "number": 3434,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 2 2''') == '0.3333333333'\nassert solution('''2\n2\n2''') == '0.3333333333'\nassert solution('''1\n2\n2''') == '0.3333333333'\nassert solution('''1\n2\n1''') == '0.5'\nassert solution('''2\n1\n1''') == '0.5'\n"
    },
    {
        "number": 3434,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 2\\n2\\n1 1\\n') == '0.3333333333'\nassert solution('3 4 4\\n3\\n1 1\\n4 4\\n2 2\\n2\\n1 1\\n2\\n2 2\\n1\\n2\\n2\\n1\\n1\\n') == '0.6666666666'\nassert solution('1 2 2\\n2\\n1 1\\n') == '0.3333333333'\nassert solution('3 4 4\\n3\\n1 1\\n4 4\\n2 2\\n2\\n1 1\\n2\\n2 2\\n1\\n2\\n2\\n1\\n1\\n') == '0.6666666666'\nassert solution('1 2 2\\n2\\n1 1\\n') == '0.3333333333'\n"
    },
    {
        "number": 3434,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 1 2\\n2\\n1 1\") == \"0.3333333333\"\n"
    },
    {
        "number": 3434,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 2 2''') == '0.3333333333'\nassert solution('''1 2 2''') == '0.3333333333'\nassert solution('''1 2 2''') == '0.3333333333'\nassert solution('''2 1 2''') == '0.3333333333'\nassert solution('''1 1''') == '0.3333333333'\n"
    },
    {
        "number": 3434,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"0.3333333333\""
    },
    {
        "number": 3434,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 2 2''') == '0.3333333333'\nassert solution('''2\n1 1\n2\n1 1''') == '0.3333333333'\nassert solution('''1\n1\n1''') == '1.0'\nassert solution('''1\n1\n2''') == '0.25'\nassert solution('''1\n2\n2''') == '0.5'\n"
    },
    {
        "number": 3434,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2\\n2\\n1 1\\n2\") == \"0.3333333333\"\nassert solution(\"2\\n2\\n1 2\\n2\") == \"0.05555555556\"\nassert solution(\"2\\n2\\n1 1\\n2\") == \"0.05555555556\"\nassert solution(\"2\\n2\\n2\\n2\\n1 1\\n2\") == \"0.05555555556\"\nassert solution(\"2\\n2\\n2\\n2\\n1 2\\n2\") == \"0.05555555556\"\n"
    },
    {
        "number": 3434,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"1 2 2\n2\n1 1\n\"\"\") == \"0.3333333333\"\n\nassert solution(\n\"\"\"2 2 2\n2\n1 1\n\"\"\") == \"0.3333333333\"\n\nassert solution(\n\"\"\"2 3 3\n2\n3 2 3\n\"\"\") == \"1.0\"\n\nassert solution(\n\"\"\"3 3 3\n2\n3 2 3\n\"\"\") == \"0.3333333333\"\n\nassert solution(\n\"\"\"5 5 5\n5\n1 1 1 1 1\n3\n2 3 2 3 2\n\"\"\") == \"1.0\"\n"
    },
    {
        "number": 3434,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 2 2''') == '0.3333333333'\nassert solution('''1 2 2''') == '0.3333333333'\nassert solution('''1 2 2''') == '0.3333333333'\nassert solution('''1 1 1''') == '0.3333333333'\nassert solution('''1 1 1''') == '0.3333333333'\n"
    },
    {
        "number": 3434,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '0.3333333333'\n"
    },
    {
        "number": 3435,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1*1\n''') == '1023'\nassert solution('''\n1\n0\n''') == '1'\nassert solution('''\n4\n1*1\n0101110\n1110001\n1010111\n''') == '3'\nassert solution('''\n5\n1*1\n0101110\n1110001\n1010111\n1010101\n''') == '3'\nassert solution('''\n5\n10101110\n111000111\n101010101\n101011011\n101010111\n''') == '5'\n"
    },
    {
        "number": 3435,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(open(\"test_solution.txt\").read()) == \"10111011111101110111111010111111010110111101010111011011110110111101\"\n"
    },
    {
        "number": 3435,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('001') == '01'\nassert solution('01001') == '101'\n"
    },
    {
        "number": 3435,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 3435,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n10\n1*1\n\"\"\") == 1023\nassert solution(\n\"\"\"\n5\n111\n\"\"\") == 5\nassert solution(\n\"\"\"\n5\n1111\n\"\"\") == 0\nassert solution(\n\"\"\"\n5\n1111\n\"\"\") == 0\nassert solution(\n\"\"\"\n10\n01\n\"\"\") == 1\n"
    },
    {
        "number": 3435,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7\\n0*0') == '7'\nassert solution('7\\n0*1') == '7'\nassert solution('7\\n1*1') == '7'\nassert solution('7\\n1*0') == '7'\nassert solution('5\\n0*1*1*0') == '7'\n"
    },
    {
        "number": 3435,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n''') == '1'\nassert solution('''\n1\n*''') == '1023'\nassert solution('''\n1\n1*\nSample Input:\n100\n1\nSample Output:\n100\n''') == '1'\nassert solution('''\n10\n1*\nSample Input:\n100\n0\nSample Output:\n0\n''') == '0'\nassert solution('''\n50\n1*\nSample Input:\n100\n0\nSample Output:\n50\n''') == '50'\n"
    },
    {
        "number": 3435,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1' * 10) == '1023'\nassert solution('1*1') == '1023'\nassert solution
    },
    {
        "number": 3435,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n    10\n    1*1\n    ''') == '1023'\nassert solution('''\n    20\n    1*1\n    ''') == '2025'\nassert solution('''\n    5\n    1*1\n    ''') == '10'\nassert solution('''\n    2\n    1*\n    ''') == '0'\nassert solution('''\n    3\n    1*\n    ''') == '0'\n"
    },
    {
        "number": 3435,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10\\n1') == '1023'\nassert solution('5\\n1*1') == '5'\nassert solution('5\\n1*1*1*1') == '5'\nassert solution('5\\n1*1*1*1*1') == '5'\nassert solution('5\\n1*1*1*1*1*1') == '5'\n"
    },
    {
        "number": 3436,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2') == '6'\nassert solution('1 1') == '1'\nassert solution('5 5') == '2'\nassert solution('0 0') == '0'\nassert solution('1 0') == '1'\n"
    },
    {
        "number": 3436,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"6\"\nassert solution(\"3 3\") == \"10\"\nassert solution(\"2 4\") == \"8\"\nassert solution(\"4 5\") == \"8\"\nassert solution(\"8 6\") == \"5\"\n"
    },
    {
        "number": 3436,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2') == '6'\n\"\"\""
    },
    {
        "number": 3436,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n'''\n"
    },
    {
        "number": 3436,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 2''') == '6'\nassert solution('''1 1''') == '1'\nassert solution('''2 3''') == '4'\nassert solution('''2 4''') == '8'\nassert solution('''3 2''') == '8'\n"
    },
    {
        "number": 3436,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 2''') == '6'\nassert solution('''0 0''') == '0'\nassert solution('''2 1''') == '1'\nassert solution('''2 2''') == '3'\nassert solution('''3 2''') == '4'\n"
    },
    {
        "number": 3436,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2') == 6\nassert solution('2 2') == 12\nassert solution('2 1') == 3\nassert solution('1 1') == 1\nassert solution('0 0') == 0\n"
    },
    {
        "number": 3436,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2') == '6'\nassert solution('10 10') == '1'\nassert solution('2 1') == '3'\nassert solution('2 1') == '3'\nassert solution('2 2') == '6'\n"
    },
    {
        "number": 3436,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 2''') == 6\nassert solution('''1 2''') == 3\nassert solution('''5 9''') == 8\nassert solution('''99999 1''') == 1\nassert solution('''1 100''') == 0\n"
    },
    {
        "number": 3436,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 1''') == 6\nassert solution('''2 2''') == 6\nassert solution('''5 4''') == 15\nassert solution('''10 10''') == 45\nassert solution('''100 100''') == 55555555555\n'''"
    },
    {
        "number": 3437,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500''') == '2930'\nassert solution('''1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500\n2000''') == 'Impossible'\nassert solution('''1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500\n2000\n1500\n1400\n1000''') == '2930'\nassert solution('''100\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000''') == 'Impossible'\nassert solution('''1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500\n2000\n1400\n1400\n1400\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000''') == '2930'\n"
    },
    {
        "number": 3437,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2930\"\nprint(solution(stdin))\nassert solution(stdin) == \"Impossible\"\nprint(solution(stdin))\nassert solution(stdin) == \"2930\"\nprint(solution(stdin))\nassert solution(stdin) == \"Impossible\"\nprint(solution(stdin))\nassert solution(stdin) == \"2930\"\nprint(solution(stdin))\n"
    },
    {
        "number": 3437,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1000 2000 7') == '2930'\nassert solution('1000 2000 7') == '2930'\nassert solution('1000 2000 7') == '2930'\nassert solution('1000 2000 7') == '2930'\nassert solution('1000 2000 7') == '2930'\n"
    },
    {
        "number": 3437,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1000 2000 7') == '2930'\nassert solution('100') == 'Impossible'\nassert solution('1000 2000 7') == '2930'\nassert solution('1000 2000 7') == '2930'\nassert solution('1000 2000 7') == '2930'\n"
    },
    {
        "number": 3437,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '2930'\n'''\n"
    },
    {
        "number": 3437,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"2930\"\nassert solution(\"1000\\n2000\\n7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"Impossible\"\nassert solution(\"1000\\n2000\\n7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"2930\"\n\"\"\""
    },
    {
        "number": 3437,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500\"\"\") == '2930'\n\nassert solution(\"\"\"100\n480\n500\n550\n1000\n1400\n1500\"\"\") == 'Impossible'\n\nassert solution(\"\"\"1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\"\"\") == '2930'\n\nassert solution(\"\"\"1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\"\"\") == '2930'\n\nassert solution(\"\"\"1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n1400\n1500\n\n1000\n"
    },
    {
        "number": 3437,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1000 2000 7') == '2930'\nassert solution('1000 2000 7') == '2930'\nassert solution('1000 2000 7') == '2930'\nassert solution('1000 2000 7') == '2930'\nassert solution('1000 2000 7') == '2930'\n"
    },
    {
        "number": 3437,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '2930'\n\n\"\"\""
    },
    {
        "number": 3437,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2930'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == '2930'\nassert solution(stdin) == '2930'\nassert solution(stdin) == '2930'\n"
    },
    {
        "number": 3438,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0 2 3\") == \"2\"\nassert solution(\"1 2 3\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7\") == \"1\"\nassert solution(\"10 5 4 3 2 1\") == \"5\"\nassert solution(\"1 2 3 4 5 6 7\") == \"0\"\n"
    },
    {
        "number": 3438,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '2'\n'''\n"
    },
    {
        "number": 3438,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == 2\nassert solution('0') == 0\nassert solution('0 1 2') == 1\nassert solution('1 0 1') == 1\nassert solution('1 0 2') == 2\n"
    },
    {
        "number": 3438,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''0 0 0\n0\n0\n0\n0\n0''') == '0'\n\nassert solution('''2 3 3\n0\n1\n0\n0\n0\n0\n1\n1\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n"
    },
    {
        "number": 3438,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\n"
    },
    {
        "number": 3438,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 2 3''') == '2'\nassert solution('''1 2 3''') == '2'\nassert solution('''3 2 1''') == '1'\nassert solution('''3 2 1''') == '1'\nassert solution('''1 1 1''') == '0'\n"
    },
    {
        "number": 3438,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 2\n"
    },
    {
        "number": 3438,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(open(\"data/cache_hit_trials_small.txt\").read()) == \"3\"\nassert solution(open(\"data/cache_hit_trials_large.txt\").read()) == \"1\"\n"
    },
    {
        "number": 3438,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 2 1''') == '2'\nassert solution('''3 3 2''') == '0'\nassert solution('''3 5 3''') == '2'\nassert solution('''3 5 2''') == '0'\nassert solution('''3 5 2''') == '0'\n"
    },
    {
        "number": 3438,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('3 1 2') == '1'\nassert solution('2 2 2') == '1'\nassert solution('2 1 2') == '1'\nassert solution('2 2 1') == '2'\n"
    },
    {
        "number": 3439,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"3 3\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2\"\"\"\n) == '10'\n\nassert solution(\n\"\"\"10 10\n0 -1 -1\n0 -1 -1\n0 -1 -1\n0 -1 -1\n0 -1 -1\n0 -1 -1\n0 -1 -1\n0 -1 -1\n0 -1 -1\n0 -1 -1\"\"\"\n) == '1'\n\nassert solution(\n\"\"\"30 30\n0 -1 -1\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10"
    },
    {
        "number": 3439,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '10'\n"
    },
    {
        "number": 3439,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2') == '10'\nassert solution('-1 -2 -1\\n-5 2 -5\\n5 4 -5\\n2 2') == '10'\nassert solution('-5 -2 -1\\n-1 -2 -1\\n5 4 -5\\n2 2') == '10'\nassert solution('-5 -2 -1\\n-1 -2 -1\\n5 -5 4\\n2 2') == '10'\nassert solution('-5 -2 -1\\n-1 -2 -1\\n5 -5 -5\\n2 2') == '-10'\n"
    },
    {
        "number": 3439,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"3 3\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2\"\"\") == '10'\nassert solution(\n    \"\"\"5 5\n-4 -5 -6\n-4 -5 -7\n2 -4 -5\n3 -5 -5\n5 -4 -5\n1 -5 -5\n1 -4 -5\"\"\") == '30'\nassert solution(\n    \"\"\"3 3\n-5 -1 -1\n-1 -2 -1\n5 -4 -1\n1 -5 -1\n1 -4 -1\"\"\") == '6'\nassert solution(\n    \"\"\"1 3\n1 1 2\n1 1 2\n2 2 1\n3 1 1\n2 1 1\n2 1 1\"\"\") == '0'\nassert solution(\n    \"\"\"2 1\n2 1\n2 1\"\"\") == '0'\n"
    },
    {
        "number": 3439,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0 1 1 1 0 0 1 1 1\\n0 0 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 0 0 1 1 1 1 1 1\\n1 0 0 0 0 0 0 1 0\\n0 0 1 1 1 1 1 1 1\") == \"7\"\n\nassert solution(\"1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\") == \"14\"\n\nassert solution(\"1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\") == \"21\"\n\nassert solution(\"1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\") == \"37\"\n\"\"\""
    },
    {
        "number": 3439,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2''') == '10'\n'''\n\nimport sys\nimport math\n"
    },
    {
        "number": 3439,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"10\"\n\nfrom io import StringIO\nimport sys\nsys.stdin = StringIO(stdin)\nsys.stdout = StringIO()\nsolution()\nprint(sys.stdout.getvalue().strip())\nsys.stdin = sys.__stdin__\nsys.stdout = sys.__stdout__\n'''\n"
    },
    {
        "number": 3439,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5 2 2\\n2 2') == 10\nassert solution('3 3\\n5 4 -5\\n2 2') == 10\nassert solution('3 3\\n5 4 -5\\n2 2\\n0 1') == 3\nassert solution('3 3\\n5 4 -5\\n2 2\\n0 -1') == 1\nassert solution('3 3\\n5 4 -5\\n2 2\\n-1 0') == 0\n"
    },
    {
        "number": 3439,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\") == \"10\"\nassert solution(\"3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\") == \"10\"\nassert solution(\"3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\") == \"10\"\n\n---\n\nTest.describe(\"Basic tests\")\nTest.assertEquals(solution(\"3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\"), \"10\")\nTest.assertEquals(solution(\"2 2\\n1 0\\n1 1\"), \"2\")\nTest."
    },
    {
        "number": 3439,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\\n') == '10\\n'\nassert solution('-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\\n') == '10\\n'\nassert solution('-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 1\\n') == '7\\n'\nassert solution('-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 1\\n') == '7\\n'\nassert solution('-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\\n') == '10\\n'\n"
    },
    {
        "number": 3440,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3100\"\n"
    },
    {
        "number": 3440,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\") == \"3100\"\nassert solution(\"5 5\\n1 1 1\\n2 2 2\\n3 3 3\\n4 4 4\\n5 5 5\") == \"9000\"\nassert solution(\"5 5\\n1 1 1\\n2 2 2\\n3 3 3\\n4 4 4\\n5 5 5\") == \"18000\"\nassert solution(\"5 5\\n1 2 2\\n2 3 3\\n3 4 4\\n4 5 5\") == \"27000\"\nassert solution(\"5 5\\n1 2 2\\n2 3 3\\n3 4 4\\n4 5 5\") == \"29000\"\n"
    },
    {
        "number": 3440,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300''') == '3100'\nassert solution('''5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n5 2 100\n1 4 400\n3 5 300\n2\n1 4 300\n3 5 300\n5 2 100\n1 4 400\n3 5 300''') == '2650'\nassert solution('''5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n5 2 100\n1 4 400\n3 5 300\n2\n1 4 300\n3 5 300\n5 2 100\n1 4 400\n3 5 300\n4 1 1000\n1 4 1000\n3 5 300\n2\n1 4 300\n3 5 300\n5 2 100\n1 4 400\n3 5 300\n2\n1 4 300\n3 5 300\n5 2 100\n1 4 400\n3 5 300\n4 1 1000\n1 4 1000\n3 5 300''') == '3100'\n"
    },
    {
        "number": 3440,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(open(\"test_1.txt\", \"r\").read()) == \"2000\"\nassert solution(open(\"test_2.txt\", \"r\").read()) == \"2000\"\nassert solution(open(\"test_3.txt\", \"r\").read()) == \"2000\"\nassert solution(open(\"test_4.txt\", \"r\").read()) == \"2000\"\nassert solution(open(\"test_5.txt\", \"r\").read()) == \"2000\"\n"
    },
    {
        "number": 3440,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"1\\n\") == \"\"\nassert solution(\"1\\n1\\n\") == \"\"\nassert solution(\"1\\n1\\n2\\n\") == \"\"\n"
    },
    {
        "number": 3440,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\"\nassert solution(\"2 3\\n1 2 1000\\n2 3 1000\\n3 1 1000\\n3 4 1000\\n4 3 1000\\n3\\n1 4 300\\n2 4 500\\n4 5 500\") == \"7200\"\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n3 4 1000\\n2\\n1 4 300\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 4 1000\\n2\\n1 4 500\\n2 4 1000\\n4 5 1000\") == \"6400\"\nassert solution(\"1 2\\n1 2 1000\\n2 3 1000\\n3 4 1000\\n4 5 1000\") == \"11000\"\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n3 4 1000\\n2\\n1 4 300\\n2 3 1000\\n4 5 1000\") == \"6050\"\n"
    },
    {
        "number": 3440,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n1') == '1000'\nassert solution('1\\n1\\n1\\n1\\n1') == '1000'\nassert solution('1\\n1\\n1\\n1\\n1\\n1') == '1000'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1000'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 3440,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\"\n\"\"\"\n"
    },
    {
        "number": 3440,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300') == '3100'\n"
    },
    {
        "number": 3440,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300''') == '3100'\nassert solution('''10 2\n1 2 10\n2 3 15\n2\n1 4 100\n3 5 100\n4 5 50\n5 6 50\n6 7 50\n7 8 50\n8 9 50''') == '1535'\nassert solution('''10 2\n1 2 10\n2 3 15\n2\n1 4 100\n3 5 100\n4 5 50\n5 6 50\n6 7 50\n7 8 50\n8 9 50\n9 10 50''') == '4250'\nassert solution('''10 2\n1 2 10\n2 3 15\n2\n1 4 100\n3 5 100\n4 5 50\n5 6 50\n6 7 50\n7 8 50\n8 9 50\n9 10 50\n10 11 50''') == '4250'\nassert solution('''10 3\n1 2 10\n2 3 15\n2\n1 4 100\n3 5 100\n4 5 50\n5 6 50\n6 7 50\n7 8 50\n8 9 50\n9 10 50\n10 11 50\n11 12 50\nSample Output:\n3100\n1535\n4250\n''') == '4250'\nprint('Passed')\n"
    },
    {
        "number": 3441,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n2\n1 2''') == 0\nassert solution('''1\n1\n1 2''') == 1\nassert solution('''1\n2\n0 1''') == 1\nassert solution('''1\n2\n0 1\n1 2\n0 1''') == 1\nassert solution('''1\n1\n0 1\n1 2''') == 2\n"
    },
    {
        "number": 3441,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0\\n1\\n0') == '0'\nassert solution('2\\n1\\n0 0\\n0 1\\n1 0\\n1 1\\n') == '4'\nassert solution('2\\n1\\n0 0\\n0 1\\n1 0\\n1 1\\n') == '1'\nassert solution('1\\n1\\n0\\n') == '0'\nassert solution('2\\n1\\n0 0\\n0 1\\n1 0\\n1 1\\n') == '1'\n"
    },
    {
        "number": 3441,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 1') == 0\nassert solution('2 2') == 1\nassert solution('2 3') == 1\nassert solution('2 4') == 1\nassert solution('2 5') == 2\n"
    },
    {
        "number": 3441,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 1\n0 1''') == '0'\nassert solution('''2 1\n0 1\n1 2\n''') == '1'\nassert solution('''10 4\n0 1\n0 3\n2 3\n3 4\n3 5\n5 8\n8 9\n9 11\n9 12\n11 12''') == '4'\nassert solution('''6 4\n0 1\n0 3\n2 3\n3 4\n3 5\n5 8\n8 9\n9 11\n9 12\n11 12''') == '3'\nassert solution('''10 2\n0 1\n0 2\n2 0\n3 3\n2 3\n3 4\n4 5\n4 6\n4 7\n5 6\n5 7\n6 7\n7 8\n7 9\n8 9\n9 10\n9 11\n10 11''') == '1'\n"
    },
    {
        "number": 3441,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == '0'\n"
    },
    {
        "number": 3441,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 1\n0 1\n0 2\n1 2''') == '0'\nassert solution('''5 6\n0 1\n0 2\n0 3\n0 4\n1 2\n2 3\n2 4\n3 4''') == '2'\nassert solution('''5 7\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n1 2\n1 3\n1 4\n1 5\n1 6\n2 3\n2 4\n2 5\n2 6\n3 4\n3 5\n3 6\n4 5\n4 6\n5 6''') == '6'\nassert solution('''5 4\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n1 2\n1 3\n1 4\n1 5\n1 6\n2 3\n2 4\n2 5\n2 6\n3 4\n3 5\n3 6\n4 5\n4 6\n5 6''') == '3'\nassert solution('''5 4\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n1 2\n1 3\n1 4\n1 5\n1 6\n2 3\n2 4\n2 5\n2 6\n3 4\n3 5\n3 6\n4 5\n4 6\n5 6''') == '3'\n"
    },
    {
        "number": 3441,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n"
    },
    {
        "number": 3441,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 1\n0 1''') == '0'\nassert solution('''2 1\n0 1\n1 2\n1 3\n1 4''') == '2'\nassert solution('''2 1\n0 1\n1 2''') == '1'\nassert solution('''2 1\n0 1\n1 3\n1 2\n2 3\n1 4''') == '1'\nassert solution('''5 4\n0 1\n0 2\n0 3\n0 4\n1 2\n1 3\n2 3\n1 4\n2 3\n2 4''') == '2'\n"
    },
    {
        "number": 3441,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0\"\n\nstdin = \"\"\"2 3\n0 1\n1 2\n2 0\n1 2\n2 3\n\"\"\"\nassert solution(stdin) == \"3\"\n\nstdin = \"\"\"9 0\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n\"\"\"\nassert solution(stdin) == \"5\"\n\nstdin = \"\"\"1 1\n0 1\n1 2\n2 3\n\"\"\"\nassert solution(stdin) == \"0\"\n\"\"\"\n\n-----\n\n\"\"\"\n"
    },
    {
        "number": 3441,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"0\"\n\nassert solution(stdin) == \"0\"\n\nassert solution(stdin) == \"0\"\n\nassert solution(stdin) == \"0\"\n\nassert solution(stdin) == \"0\""
    },
    {
        "number": 3442,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 10') == '10'\nassert solution('0 10') == '1'\nassert solution('-10 10') == '0'\nassert solution('-10 0') == '-1'\nassert solution('0 -10') == '-1'\n"
    },
    {
        "number": 3442,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 10') == 10\nassert solution('0 100') == 100\nassert solution('2 0') == 2\nassert solution('3 4') == 7\nassert solution('1 0') == 0\n"
    },
    {
        "number": 3442,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 10') == '10'\nassert solution('2 2') == '0'\nassert solution('3 3') == '0'\nassert solution('100 100') == '0'\nassert solution('10 50') == '10'\n"
    },
    {
        "number": 3442,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"10 10\") == \"10\"\nassert solution(\"2 10\") == \"10\"\nassert solution(\"1 10\") == \"10\"\nassert solution(\"2 100\") == \"20\"\nassert solution(\"2 101\") == \"10\"\n"
    },
    {
        "number": 3442,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 10') == '10'\nassert solution('-1 -10') == '10'\nassert solution('10 15') == '10'\nassert solution('-1 -10') == '10'\nassert solution('10 11') == '0'\n"
    },
    {
        "number": 3442,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 10') == '10'\nassert solution('1 10') == '10'\nassert solution('1 10') == '10'\nassert solution('1 10') == '10'\nassert solution('2 3') == '0'\n"
    },
    {
        "number": 3442,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '10'\n\nprint(solution(stdin))"
    },
    {
        "number": 3442,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 10''') == '10'\nassert solution('''5 8''') == '7'\nassert solution('''8 9''') == '8'\nassert solution('''8 8''') == '0'\nassert solution('''100 10''') == '10'\n"
    },
    {
        "number": 3442,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('2 0') == ''\nassert solution('0 2') == ''\nassert solution('0 1') == ''\nassert solution('1 1') == ''\n"
    },
    {
        "number": 3442,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 10') == '10'\nassert solution('2 11') == '0'\nassert solution('100 101') == '1'\nassert solution('200 201') == '10'\nassert solution('1 100') == '0'\n"
    },
    {
        "number": 3443,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 0\n1000 0\n0 1000\n1000 1000''') == 0\nassert solution('''0 0\n-1 0\n0 1\n1 0\n-1 1\n0 -1\n1 1''') == 1\nassert solution('''0 0\n0 1\n1 0\n-1 1\n0 -1\n1 1''') == 2\nassert solution('''0 0\n-1 0\n0 1\n1 0\n-1 1\n0 -1\n1 1\n-1 -1\n1 -1\n0 1''') == 3\nassert solution('''0 0\n-1 0\n0 1\n1 0\n-1 1\n0 -1\n1 1\n-1 -1\n1 -1\n-1 1\n1 1\n0 1''') == 2\n"
    },
    {
        "number": 3443,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0 0\n1000 0\n0 1000\n1000 1000''') == '0'\nassert solution('''0 0\n1000 0\n-1000 0\n0 1000\n1000 1000''') == '0'\nassert solution('''0 0\n0 1000\n1000 1000\n2000 2000\n2000 2000''') == '0'\nassert solution('''0 0\n1000 0\n0 1000\n1000 1000\n2000 2000\n2000 2000''') == '2'\nassert solution('''0 0\n0 1000\n1000 1000\n2000 2000\n2000 2000''') == '4'\n"
    },
    {
        "number": 3443,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 0\nassert solution('0 0') == 0\nassert solution('1000 0') == 0\nassert solution('0 1000') == 0\nassert solution('1000 1000') == 0\n"
    },
    {
        "number": 3443,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n0 0\n1000 0\n0 1000\n1000 1000''') == '0'\nassert solution('''4\n2 2\n1 1000\n1 1000\n1000 1000\n1000 1000''') == '4'\nassert solution('''4\n3 4\n3 4\n1 3\n1 3\n1 3\n1000 1000''') == '0'\nassert solution('''4\n1 3\n1 3\n1 3\n1000 1000''') == '4'\nassert solution('''4\n-1 -1\n1000 1000\n1000 1000\n-1000 -1000''') == '4'\n"
    },
    {
        "number": 3443,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n0 0\n1000 0\n0 1000\n1000 1000''') == '0'\nassert solution('''5\n0 0\n1 1\n2 2\n3 3\n4 4''') == '4'\nassert solution('''7\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7''') == '7'\n'''\n\nimport sys\n"
    },
    {
        "number": 3443,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"4\n0 0\n1000 0\n0 1000\n1000 1000\"\"\") == \"0\"\nassert solution(\n\"\"\"3\n0 0\n1000 0\n0 1000\"\"\") == \"1\"\nassert solution(\n\"\"\"3\n0 0\n0 1000\n1000 1000\"\"\") == \"1\"\nassert solution(\n\"\"\"3\n0 0\n1000 0\n1000 1000\"\"\") == \"0\"\nassert solution(\n\"\"\"6\n0 0\n1000 0\n0 1000\n1000 1000\n0 0\n1000 1000\"\"\") == \"3\"\n"
    },
    {
        "number": 3443,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 0\\n1000 0\\n0 1000\\n1000 1000\\n') == 0\nassert solution('3\\n1000 1000\\n1000 2000\\n2000 2000\\n') == 1\nassert solution('4\\n1000 1000\\n1000 2000\\n2000 2000\\n2000 3000\\n3000 3000\\n') == 2\nassert solution('8\\n1000 1000\\n1000 2000\\n2000 2000\\n2000 3000\\n3000 3000\\n3000 4000\\n4000 4000\\n') == 3\nassert solution('1000\\n1000\\n1000\\n1000\\n') == 0\n"
    },
    {
        "number": 3443,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\n-----\nThis problem is simply the inverse of the problem above. We do not need to take care of spots within the limits of our coordinate space.\n\n-----"
    },
    {
        "number": 3443,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0 0\n1000 0\n0 1000\n1000 1000''') == '0'\nassert solution('''0 0\n0 1000\n1000 1000\n1000 1000''') == '0'\nassert solution('''0 0\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n11 11\n12 12\n13 13\n14 14\n15 15\n16 16\n17 17\n18 18\n19 19\n20 20\n21 21\n22 22\n23 23\n24 24\n25 25\n26 26\n27 27\n28 28\n29 29\n30 30\n31 31\n32 32\n33 33\n34 34\n35 35\n36 36\n37 37\n38 38\n39 39\n40 40\n41 41\n42 42\n43 43\n44 44\n45 45\n46 46\n47 47\n48 48\n49 49\n50 50\n51 51\n52 52\n53 53\n54 54\n55 55\n56 56\n57 57\n58 58\n59 59\n60 60\n61 61\n62 62\n63 63\n64 64\n65 65\n66 66\n67 67\n68 68\n69 69\n70 70\n71 71\n72 72\n73 73\n74 74\n75 75\n76 76\n77 77\n78 78\n79 79\n80 80\n81 81\n82 82\n83 83\n84 84\n85 85\n86 86\n87 87\n88 88\n89 89\n90 90\n91 91\n92 92\n93 93\n94 94\n95 95\n96 96\n97 97\n98 98\n99 99\n100 100\n101 101\n102 102\n103 103\n104 104\n105 105\n106 106\n107 107\n108 108\n109 109\n110 110\n111 111\n112 112\n113 113\n114 114\n115 115\n116 116\n117 117\n118 118\n119 119\n120 120\n121 121\n122 122\n123 123\n124 124\n125 125\n126 126\n127 127\n128 128\n129 129\n130 130\n131 131\n132 132\n133 133\n134 134\n135 135\n136 136\n137 137\n138 138\n139 139\n140 140\n141 141\n142 142\n143 143\n144 144\n145 145\n146 146\n147 147\n148 148\n149 149\n150 150\n151 151\n152 152\n153 153\n154 154\n155 155\n156 156\n157 157\n158 158\n159 159\n160 160\n161 161\n162 162\n163 163\n164 164\n165 165\n166 166\n167 167\n168 168\n169 169\n170 170\n171 171\n172 172\n173 173\n174 174\n175 175\n176 176\n177 177\n178 178\n179 179\n180 180\n181 181\n182 182\n183 183\n184 184\n185 185\n186 186\n187 187\n188 188\n189 189\n190 190\n191 191\n192 192\n193 193\n194 194\n195 195\n196 196\n197 197\n198 198\n199 199\n200 200\n201 201\n202 202\n203 203\n204 204\n205 205\n206 206\n207 207\n208 208\n209 209\n210 210\n211 211\n212 212\n213 213\n214 214\n215 215\n216 216\n217 217\n218 218\n219 219\n220 220\n221 221\n222 222\n223 223\n224 224\n225 225\n226 226\n227 227\n228 228\n229 229\n230 230\n231 231\n232 232\n233 233\n234 234\n235 235\n236 236\n237 237\n238 238\n239 239\n240 240\n241 241\n242 242\n243 243\n244 244\n245 245\n246 246\n247 247\n248 248\n249 249\n250 250\n251 251\n252 252\n253 253\n254 254\n255 255\n256 256\n257 257\n258 258\n259 259\n260 260\n261 261\n262 262\n263 263\n264 264\n265 265\n266 266\n267 267\n268 268\n269 269\n270 270\n271 271\n272 272\n273 273\n274 274\n275 275\n276 276\n277 277\n278 278\n279 279\n280 280\n281 281\n282 282\n283 283\n284 284\n285 285\n286 286\n287 287\n288 288\n289 289\n290 290\n291 291\n292 292\n293 293\n294 294\n295 295\n296 296\n297 297\n298 298\n299 299\n300 300\n301 301\n302 302\n303 303\n304 304\n305 305\n306 306\n307 307\n308 308\n309 309\n310 310\n311 311\n312 312\n313 313\n314 314\n315 315\n316 316\n317 317\n318 318\n319 319\n320 320\n321 321\n322 322\n323 323\n324 324\n325 325\n326 326\n327 327\n328 328\n329 329\n330 330\n331 331\n332 332\n333 333\n334 334\n335 335\n336 336\n337 337\n338 338\n339 339\n340 340\n341 341\n342 342\n343 343\n344 344\n345 345\n346 346\n347 347\n348 348\n349 349\n350 350\n351 351\n352 352\n353 353\n354 354\n355 355\n356 356\n357 357\n358 358\n359 359\n360 360\n361 361\n362 362\n363 363\n364 364\n365 365\n366 366\n367 367\n368 368\n369 369\n370 370\n371 371\n372 372\n373 373\n374 374\n375 375\n376 376\n377 377\n378 378\n379 379\n380 380\n381 381\n382 382\n383 383\n384 384\n385 385\n386 386\n387 387\n388 388\n389 389\n390 390\n391 391\n392 392\n393 393\n394 394\n395 395\n396 396\n397 397\n398 398\n399 399\n400 400\n401 401\n402 402\n403 403\n404 404\n405 405\n406 406\n407 407\n408 408\n409 409\n410 410\n411 411\n412 412\n413 413\n414 414\n415 415\n416 416\n417 417\n418 418\n419 419\n420 420\n421 421\n422 422\n423 423\n424 424\n425 425\n426 426\n427 427\n428 428\n429 429\n430 430\n431 431\n432 432\n433 433\n434 434\n435 435\n436 436\n437 437\n438 438\n439 439\n440 440\n441 441\n442 442\n443 443\n444 444\n445 445\n446 446\n447 447\n448 448\n449 449\n450 450\n451 451\n452 452\n453 453\n454 454\n455 455\n456 456\n457 457\n458 458\n459 459\n460 460\n461 461\n462 462\n463 463\n464 464\n465 465\n466 466\n467 468\n469 470\n471 471\n472 472\n473 473\n474 474\n475 475\n476 476\n477 478\n479 479\n480 480\n481 481\n482 482\n483 483\n484 484\n485 485\n486 486\n487 487\n488 488\n489 489\n490 490\n491 491\n492 492\n493 493\n494 494\n495 495\n496 496\n497 497\n498 498\n499 499\n500 500\n501 501\n502 502\n503 503\n504 504\n505 505\n506 506\n507 508\n509 509\n510 510\n511 511\n512 512\n513 513\n514 514"
    },
    {
        "number": 3443,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n0 0\n1 1\n2 1\n0 1\n\"\"\") == \"0\"\nassert solution(\"\"\"\n1\n0\n1\n0\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3\n0 0\n1000 0\n0 1000\n1000 1000\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4\n1 1\n0 1\n0 1\n0 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5\n1 1\n1 1\n1 1\n1 1\n1 1\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3444,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0 1 0.5\\n0 1 0.5\") == \"0.500000000 1.000000000\"\nassert solution(\"1 1 1.5\\n0 1 0.5\") == \"0.500000000 1.000000000\"\nassert solution(\"1 2 3.5\\n0 1 0.5\\n0 2 0.5\") == \"0.500000000 1.000000000\"\nassert solution(\"2 1\\n0 1 0.5\\n1 1 0.5\") == \"0.500000000 1.000000000\"\nassert solution(\"2 1\\n0 1 0.5\\n1 1 0.5\") == \"0.500000000 1.000000000\"\n"
    },
    {
        "number": 3444,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 1\n0 1 0.5\n''') == '0.500000000 1.000000000'\nassert solution('''4 4\n0 1 0.5 0.5\n0 2 0.5 0.5\n0 3 0.5 0.5\n1 2 0.5 0.5\n2 3 0.5 0.5\n3 4 0.5 0.5\n''') == '0.25 0.5 0.25'\nassert solution('''4 5\n0 1 0.5 0.5\n0 2 0.5 0.5\n0 3 0.5 0.5\n1 2 0.5 0.5\n2 3 0.5 0.5\n3 4 0.5 0.5\n4 5 0.5 0.5\n''') == '0.16666666666666666 0.16666666666666666 0.16666666666666666'\nassert solution('''6 6\n0 1 0.5 0.5\n0 2 0.5 0.5\n0 3 0.5 0.5\n1 2 0.5 0.5\n2 3 0.5 0.5\n3 4 0.5 0.5\n4 5 0.5 0.5\n5 6 0.5 0.5\n''') == '0.2 0.2 0.2 0.2 0.2'\nassert solution('''8 8\n0 1 0.5 0.5 0.5 0.5 0.5 0.5\n0 2 0.5 0.5 0.5 0.5 0.5 0.5\n0 3 0.5 0.5 0.5 0.5 0.5 0.5\n1 2 0.5 0.5 0.5 0.5 0.5 0.5\n2 3 0.5 0.5 0.5 0.5 0.5 0.5\n3 4 0.5 0.5 0.5 0.5 0.5 0.5\n4 5 0.5 0.5 0.5 0.5 0.5 0.5\n5 6 0.5 0.5 0.5 0.5 0.5 0.5\n6 7 0.5 0.5 0.5 0.5 0.5 0.5\n7 8 0.5 0.5 0.5 0.5 0.5 0.5\n''') == '0.125 0.125 0.125 0.125 0.125 0.125'\n"
    },
    {
        "number": 3444,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 1 0.5\\n0 1 0.5') == '0.500000000 1.000000000'\nassert solution('0 2 0.25\\n0 2 0.75') == '0.75000000 0.25000000'\nassert solution('0 3 0.333333333\\n0 3 0.66666667') == '0.333333333 0.66666667'\nassert solution('0 4 0.9\\n0 4 0.8') == '0.90000000 0.80000000'\nassert solution('0 5 0.05') == '0.050000000 0.050000000'\n"
    },
    {
        "number": 3444,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0.500000000 1.000000000\"\nassert solution(\"2 1\") == \"0.500000000 1.000000000\"\nassert solution(\"1 2 0.3\") == \"0.333333333333333333333333333 0.166666666666666666666666666667\"\nassert solution(\"3 4 0.1 0.2 0.3\") == \"0.0 0.0 0.0 0.0 0.0 0.0 0.0\"\nassert solution(\"2 2 0.1 0.2 0.3\") == \"0.0 0.0 0.0 0.0 0.0 0.0 0.0\"\n"
    },
    {
        "number": 3444,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0 1 0.5\\n0 1 0.6\\n0 1 0.7\\n0 1 0.8\\n0 1 0.9\\n0 1 0.1\") == \"0.500000000 1.000000000 1.000000000 1.000000000 0.1000000000 1.000000000 1.000000000 1.000000000\""
    },
    {
        "number": 3444,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 2 0.5\n0 1 0.5''') == '0.500000000 1.000000000'\nassert solution('''5 5\n0 1 0.5\n1 2 0.5\n2 3 0.5\n3 4 0.5\n4 5 0.5''') == '0.1666666666 0.91666666666 1.000000000'\nassert solution('''10 10\n0 1 0.5\n1 2 0.5\n2 3 0.5\n3 4 0.5\n4 5 0.5\n5 6 0.5\n6 7 0.5\n7 8 0.5\n8 9 0.5\n9 10 0.5''') == '0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0'\nassert solution('''15 15\n0 1 0.5\n1 2 0.5\n2 3 0.5\n3 4 0.5\n4 5 0.5\n5 6 0.5\n6 7 0.5\n7 8 0.5\n8 9 0.5\n9 10 0.5\n10 11 0.5\n11 12 0.5\n12 13 0.5\n13 14 0.5\n14 15 0.5\n15 16 0.5''') == '-1.0'\n\nprint(solution(input()))\n"
    },
    {
        "number": 3444,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n0 1 0.5\\n\") == \"0.500000000 1.000000000\"\nassert solution(\"2 2\\n0 1 0.5\\n0 1 0.5\\n\") == \"-1.0\"\nassert solution(\"1 2\\n0 1 0.5\\n0 1 0.5\\n\") == \"0.500000000 1.000000000\"\nassert solution(\"2 2\\n0 1 0.5\\n0 1 0.5\\n0 1 0.5\\n\") == \"-1.0\"\nassert solution(\"3 3\\n0 1 0.5\\n0 1 0.5\\n0 1 0.5\\n0 1 0.5\\n0 1 0.5\\n\") == \"-1.0\"\n"
    },
    {
        "number": 3444,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0\\n2 1\\n0 1 0.5') == '0.500000000 1.000000000'\nassert solution('0\\n2 1\\n0 1 0.5') == '0.500000000 1.000000000'\nassert solution('0\\n2 1\\n0 1 0.5') == '0.500000000 1.000000000'\nassert solution('0\\n2 1\\n0 1 0.5') == '0.500000000 1.000000000'\nassert solution('0\\n2 1\\n0 1 0.5') == '0.500000000 1.000000000'\n"
    },
    {
        "number": 3444,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 1\") == \"0.500000000 1.000000000\"\nassert solution(\"3 4\") == \"-1.0 -1.0 -1.0\"\nassert solution(\"4 3\") == \"-1.0 -1.0 -1.0\"\nassert solution(\"2 1\") == \"0.500000000 1.000000000\"\nassert solution(\"3 4\") == \"-1.0 -1.0 -1.0\"\n"
    },
    {
        "number": 3444,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 3\\n1 0 0.5\\n1 1 0.5\\n1 2 0.5\\n0 2 0.5') == '0.500000000 1.000000000'\nassert solution('2 2\\n0 0 0.5\\n1 1 0.5') == '0.500000000 1.000000000'\nassert solution('2 2\\n0 0 0.5\\n1 1 0.5\\n0 2 0.5') == '0.500000000 1.000000000'\nassert solution('2 3\\n0 0 0.5\\n1 1 0.5\\n1 2 0.5\\n2 0 0.5') == '0.500000000 1.000000000'\nassert solution('2 4\\n0 0 0.5\\n1 1 0.5\\n1 2 0.5\\n2 0 0.5\\n3 0 0.5') == '0.500000000 1.000000000'\n"
    },
    {
        "number": 3445,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(sample1) == \"2\"\nassert solution(sample2) == \"10\"\nassert solution(sample3) == \"5\"\nassert solution(sample4) == \"3\"\nassert solution(sample5) == \"7\"\n"
    },
    {
        "number": 3445,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10''') == '7'\nassert solution('''6\n7 1\n2 1\n3 1\n4 1\n5 1\n6 1''') == '8'\nassert solution('''7\n4 4\n5 5\n3 3\n2 2\n1 1\n0 0\n0 0''') == '9'\nassert solution('''6\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0''') == '9'\nassert solution('''6\n1 1\n0 0\n0 0\n0 0\n0 0\n0 0''') == '9'\n"
    },
    {
        "number": 3445,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10''') == '7'\nassert solution('''14\n1 1\n1 5\n2 1\n3 1\n4 1\n5 1\n6 1\n7 1\n8 1\n9 1\n10 1\n11 1\n12 1\n13 1\n14 1''') == '14'\nassert solution('''3\n0 0\n0 0\n0 0''') == '0'\n'''\n"
    },
    {
        "number": 3445,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10''') == '7'\n\nassert solution('''5\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10\n1 1''') == '7'\n\nassert solution('''9\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2''') == '24'\n\nassert solution('''9\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3''') == '12'\n\nassert solution('''7\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10\n1 1''') == '7'"
    },
    {
        "number": 3445,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '7'\nassert solution('1\\n1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\\n') == '7'\nassert solution('1\\n1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\\n10 8\\n10 10\\n10 8\\n7 10\\n') == '7'\nassert solution('1\\n1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\\n10 8\\n10 10\\n10 8\\n7 10\\n') == '7'\nassert solution('1\\n1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\\n10 8\\n10 10\\n10 8\\n7 10\\n10 8\\n10 10\\n10 8\\n7 10\\n10 8\\n10 10\\n10 8\\n7 10\\n10 8\\n10 10\\n10 8\\n7 10\\n') == '7'\n"
    },
    {
        "number": 3445,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n6\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10\n''') == '7'\nassert solution('''\n2\n3 1\n2 2\n3 3\n''') == '3'\nassert solution('''\n1\n3\n''') == '3'\nassert solution('''\n5\n1 3\n2 3\n3 3\n5 4\n5 4\n''') == '3'\nassert solution('''\n12\n1 1\n1 2\n1 3\n2 1\n2 2\n3 2\n3 3\n4 2\n3 4\n5 3\n4 4\n3 5\n5 4\n5 5\n''') == '5'\n"
    },
    {
        "number": 3445,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 3445,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"7\"\nassert solution(\"10\\n9 2\\n3 4\\n5 6\\n7 8\\n8 9\\n10 10\\n11 11\") == \"10\"\nassert solution(\"5\\n1 1\\n4 1\\n1 5\\n2 2\") == \"6\"\nassert solution(\"5\\n2 1\\n4 1\\n1 5\\n2 2\") == \"6\"\nassert solution(\"5\\n2 1\\n4 1\\n1 5\\n2 2\\n1 1\") == \"10\"\n"
    },
    {
        "number": 3445,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '7'\nassert solution('10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10"
    },
    {
        "number": 3445,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"7\"\n"
    },
    {
        "number": 3446,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0') == '8-a\\n9-b'\nassert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\nabca\\nbba\\n0') == '8-a\\n9-b'\nassert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\nabca\\nbba\\n1\\n1\\n1\\n1\\n1\\n0') == '9-b'\nassert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\nabca\\nbba\\n1\\n1\\n1\\n1\\n1\\n0') == '9-b'\nassert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\nabca\\nbba\\n1\\n1\\n1\\n1\\n1\\n0') == '9-b'\n"
    },
    {
        "number": 3446,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n0\n''') == '9-b\\n8-a'\n\nassert solution('''2\na b\n3-b 5-b\n6-a 2-b\n2\nabc\nbac\n0\n''') == '9-a\\n8-b'\n\nassert solution('''2\na b\n3-b 5-b\n6-a 2-b\n2\nab\nba\n0\n''') == '9-a\\n8-b'\n\nassert solution('''2\na b\n3-b 5-b\n6-a 2-b\n2\nab\nba\n3-a\n1-b\n0\n''') == '9-b\\n8-a'\n\nassert solution('''2\na b\n3-b 5-b\n6-a 2-b\n2\nab\nba\n3-a\n1-b\n0\n''') == '9-a\\n8-b'"
    },
    {
        "number": 3446,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('a b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0') == '8-a\\n9-b\\n'\nprint(solution('a b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0'))\n"
    },
    {
        "number": 3446,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\nsolution = lambda stdin: stdout\n\n\"\"\"\n"
    },
    {
        "number": 3446,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"8-a\\n9-b\"\n\"\"\"\n\nfrom functools import lru_cache\nfrom queue import PriorityQueue\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 3446,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('a b') == 'a'\nassert solution('a b ') == 'a'\nassert solution('b b') == 'b'\nassert solution('a b\\nb') == 'a'\n"
    },
    {
        "number": 3446,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n0\n''') == '8-a\\n9-b'\nassert solution('''2\na b\n3-b 5-b\n6-a 2-b\n2\nabc\n"
    },
    {
        "number": 3446,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''a b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n''') == '8-a\\n9-b'\nassert solution('''a b\n3-b 5-b\n6-a 2-b\n2\nabc\nab\n''') == '9-b\\n8-a'\nassert solution('''a b\n3-b 5-b\n6-a 2-b\n2\nabc\nab\n''') == '8-a\\n9-b'\nassert solution('''a b\n3-b 5-b\n6-a 2-b\n2\nabc\nab\n''') == '9-b\\n8-a'\nassert solution('''a b\n3-b 5-b\n6-a 2-b\n2\naab\naab\n''') == '9-b\\n8-a'\n"
    },
    {
        "number": 3446,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ab') == 'a'\nassert solution('aba') == 'a'\nassert solution('abc') == 'a'\nassert solution('bb') == 'b'\nassert solution('bba') == 'b'\n"
    },
    {
        "number": 3446,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n2\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n0\n\"\"\") == \"\"\"\n9-b\n8-a\n\"\"\".strip()\nassert solution(\n\"\"\"\n1\na\n\"\"\") == \"\"\"\n0-a\n\"\"\".strip()\n"
    },
    {
        "number": 3447,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n1\") == \"3246\\n1\\nR\"\nassert solution(\"1\\n2\\n1\\n1\\n1\\n1\") == \"3246\\n1\\nR\\n1\\nD\\n1\\nR\\n1\\nR\\n1\\nR\\n1\\nR\"\nassert solution(\"1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 3447,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\necho\\necho echo echo echo echo\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n"
    },
    {
        "number": 3447,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n    2\n    ABC\n    DEF\n    GHI\n    JKL\n    MNO\n    PQRS\n    TUV\n    WXYZ\n    ''') == '''\n    3246\n    DEF\n    GHI\n    JKL\n    MNO\n    PQRS\n    TUV\n    WXYZ\n    '''\n\nassert solution('''\n    2\n    ABC\n    DEF\n    GHI\n    JKL\n    MNO\n    PQRS\n    TUV\n    WXYZ\n    ''') == '''\n    3246\n    DEF\n    GHI\n    JKL\n    MNO\n    PQRS\n    TUV\n    WXYZ\n    '''\n\nassert solution('''\n    2\n    ABC\n    DEF\n    GHI\n    JKL\n    MNO\n    PQRS\n    TUV\n    WXYZ\n    ''') == '''\n    3246\n    DEF\n    GHI\n    JKL\n    MNO\n    PQRS\n    TUV\n    WXYZ\n    '''\n\nassert solution('''\n    2\n    ABC\n    DEF\n    GHI\n    JKL\n    MNO\n    PQRS\n    TUV\n    WXYZ\n    ''') == '''\n    3246\n    DEF\n    GHI\n    JKL\n    MNO\n    PQRS\n    TUV\n    WXYZ\n    '''\n\nassert solution('''\n    2\n    ABC\n    DEF\n    GHI\n    JKL\n    MNO\n    PQRS\n    TUV\n    WXYZ\n    ''') == '''\n    3246\n    DEF\n    GHI\n    JKL\n    MNO\n    PQRS\n    TUV\n    WXYZ\n    '''"
    },
    {
        "number": 3447,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('echo\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho\\necho"
    },
    {
        "number": 3447,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\necho\\necho\\necho\\n\") == \"1R3246R3246\"\nassert solution(\"1\\necho\\necho\\necho\\n3246\\n\") == \"3246U3246\"\nassert solution(\"1\\necho\\necho\\necho\\n3246\\n3462\\n\") == \"3246U3246D2\"\nassert solution(\"1\\necho\\necho\\necho\\n3246\\n3462\\n3462\\n\") == \"3246U3246D2D2\"\nassert solution(\"1\\necho\\necho\\necho\\n3246\\n3462\\n3462\\n3246\\n\") == \"3246U3246D2D2U2\"\n"
    },
    {
        "number": 3447,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1\n1\nechoecho\n''') == '3246R3246'\n\nassert solution('''1\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n"
    },
    {
        "number": 3447,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1\necho\n1\nechoecho''') == '3246R3246'\n\nassert solution('''1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1\nhello\n1"
    },
    {
        "number": 3447,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('a') == 'R'\nassert solution('echo') == '3246R'\nassert solution('echoed') == '3246U'\nassert solution('echoing') == '3246U'\n"
    },
    {
        "number": 3447,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1\n1\n1''') == '3456'\nassert solution('''1\n1\n1''') == '3434'\nassert solution('''1\n1\n1''') == '3246'\nassert solution('''1\n2\n1\n2\n1''') == '3456'\nassert solution('''1\n2\n1\n3\n1\n2\n1''') == '3456'\n"
    },
    {
        "number": 3447,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\necho\") == \"3246R3246\"\nassert solution(\"1\\nechoecho\") == \"3246R3246\"\nassert solution(\"3\\necho\") == \"3246R3246\"\nassert solution(\"3\\nechoecho\") == \"3246R3246\"\nassert solution(\"1\\necho2\\nechoecho\") == \"3246R3246\"\n"
    },
    {
        "number": 3448,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 1\") == \"NO\"\nassert solution(\"3 2\") == \"NO\"\nassert solution(\"2 2\") == \"YES\"\nassert solution(\"1 3\") == \"NO\"\nassert solution(\"1 1\") == \"YES\"\n"
    },
    {
        "number": 3448,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 1') == 'NO'\nassert solution('3 2') == 'NO'\nassert solution('3 3') == 'NO'\nassert solution('1 1') == 'YES'\nassert solution('1 2') == 'YES'\n"
    },
    {
        "number": 3448,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3448,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 3448,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == 'YES'\nassert solution('1 2') == 'YES'\nassert solution('2 1') == 'NO'\nassert solution('3 1') == 'YES'\nassert solution('3 2') == 'NO'\n"
    },
    {
        "number": 3448,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 1''') == 'YES'\nassert solution('''3 2''') == 'NO'\nassert solution('''1 2''') == 'YES'\nassert solution('''4 5''') == 'NO'\nassert solution('''2 4''') == 'YES'\n"
    },
    {
        "number": 3448,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n'''\n"
    },
    {
        "number": 3448,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''3 1''') == 'YES'\nassert solution(\n'''2 1''') == 'NO'\nassert solution(\n'''5 2''') == 'YES'\nassert solution(\n'''4 1''') == 'NO'\nassert solution(\n'''3 1000000 1''') == 'NO'\n"
    },
    {
        "number": 3448,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 1') == 'YES'\nassert solution('5 2') == 'NO'\nassert solution('3 1') == 'YES'\nassert solution('1 2') == 'NO'\nassert solution('3 2') == 'NO'\n"
    },
    {
        "number": 3448,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 1') == 'YES\\n1 2\\n1 3'\nassert solution('2 2') == 'NO'\nassert solution('2 1') == 'NO'\nassert solution('1 1') == 'YES\\n1 1'\nassert solution('1 2') == 'NO'\n"
    },
    {
        "number": 3449,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n9\n1\n6 6\n333333\n300003\n300003\n300003\n300003\n333333\n''') == '176'\nassert solution('''\n2\n4\n1\n1\n2\n2\n3\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n"
    },
    {
        "number": 3449,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''9\n1\n6 6\n333333\n300003\n300003\n300003\n300003\n333333\n''') == '176'\n\nassert solution('''9\n10\n6 6\n333333\n300003\n300003\n300003\n300003\n333333\n''') == '235'\n\nassert solution('''9\n10\n6 6\n333333\n300003\n300003\n300003\n300003\n333333\n''') == '173'\n\nassert solution('''9\n10\n6 6\n333333\n300003\n300003\n300003\n300003\n333333\n''') == '206'\n\nassert solution('''9\n10\n6 6\n333333\n300003\n300003\n300003\n300003\n333333\n''') == '190'"
    },
    {
        "number": 3449,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('9\\n1\\n6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333') == '176'\nassert solution('4\\n1\\n3\\n2000000') == '100'\nassert solution('4\\n1\\n3\\n333333333') == '0'\nassert solution('5\\n1\\n3\\n4444444') == '1'\nassert solution('5\\n1\\n3\\n333333333444444') == '1'\n"
    },
    {
        "number": 3449,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"9\\n1\\n6\\n333333333333333333333333333333333333333\\n300003\\n300003\\n300003\\n300003\\n333333333333333333333333333333333333333\") == \"176\"\n'''\n\nimport sys\nfrom collections import deque"
    },
    {
        "number": 3449,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('9\\n1\\n6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333') == '176'\nassert solution('9\\n1\\n6\\n
    },
    {
        "number": 3449,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('9\\n1\\n6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n') == '176'\nassert solution('4\\n1\\n7\\n300003\\n300003\\n300003\\n300003') == '0'\nassert solution('10\\n1\\n7\\n300003\\n300003\\n300003\\n300003\\n300003\\n300003\\n300003') == '303'\nassert solution('1\\n1\\n7\\n300003\\n300003\\n300003\\n300003\\n300003\\n300003\\n300003') == '0'\nassert solution('5\\n1\\n5\\n333333\\n300003\\n300003\\n300003\\n300003\\n300003') == '19'\n"
    },
    {
        "number": 3449,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3449,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('9\\n1\\n6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n333333\\n333333') == '176'\nassert solution('2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\"
    },
    {
        "number": 3449,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''9\n1\n6 6\n333333\n300003\n300003\n300003\n300003\n333333\n''') == '176'\nassert solution('''5\n3\n1\n2\n3\n4\n''') == '24'\nassert solution('''5\n2\n2\n2\n2\n2\n''') == '30'\nassert solution('''7\n3\n2\n2\n2\n2\n2\n2\n''') == '42'\nassert solution('''7\n3\n2\n2\n2\n2\n2\n2\n''') == '42'\n"
    },
    {
        "number": 3449,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == '176'\n"
    },
    {
        "number": 3450,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('3') == '3'\nassert solution('5') == '12'\nassert solution('6') == '13'\nassert solution('10') == '100'\n"
    },
    {
        "number": 3450,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(5) == '120'\nassert solution(1) == '6'\nassert solution(12) == '012'\nassert solution(22) == '222'\nassert solution(30) == '300'\n"
    },
    {
        "number": 3450,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"12\"\nassert solution(\"6\") == \"012\"\nassert solution(\"1000\") == \"000\"\nassert solution(\"123456789\") == \"1234\"\nassert solution(\"1234567890\") == \"1234\"\n"
    },
    {
        "number": 3450,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5') == '012'\nassert solution('1') == '012'\nassert solution('10') == '012'\nassert solution('1000') == '012'\nassert solution('123456789') == '12345'"
    },
    {
        "number": 3450,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(5) == \"012\"\nassert solution(5) == \"012\"\nassert solution(10) == \"012\"\nassert solution(20) == \"0123\"\nassert solution(40) == \"012345\"\n"
    },
    {
        "number": 3450,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input(\"\")) == \"12\"\nassert solution(input(\"3\")) == \"012\"\nassert solution(input(\"123456789\")) == \"0123\"\nassert solution(input(\"3123456789\")) == \"012345\"\nassert solution(input(\"999999999\")) == \"9999\"\n"
    },
    {
        "number": 3450,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('3') == '0'\nassert solution('12') == '0'\nassert solution('45') == '0'\nassert solution('456789') == '0'\n"
    },
    {
        "number": 3450,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5''') == '012'\nassert solution('''1234567''') == '123'\nassert solution('''1234''') == '12'\nassert solution('''1234567890''') == '123'\nassert solution('''123456789''') == '123'\n"
    },
    {
        "number": 3450,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5') == '12'\nassert solution('12') == '012'\nassert solution('1000') == '0'\nassert solution('10000') == '000'\nassert solution('100000') == '0000'\n"
    },
    {
        "number": 3450,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') is None\nassert solution('1') == '000'\nassert solution('2') == '000'\nassert solution('3') == '000'\nassert solution('4') == '000'\n"
    },
    {
        "number": 3451,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"?\"\nassert solution(stdin) == \"?\"\nassert solution(stdin) == \"?\"\nassert solution(stdin) == \"?\"\nassert solution(stdin) == \"?\"\n"
    },
    {
        "number": 3451,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('((()') == 480\nassert solution('()((()') == 480\nassert solution('((()')('()')) == 480\nassert solution('((()')('()')) == 480\nassert solution('((()')('()')('()')) == 480\n"
    },
    {
        "number": 3451,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == '?'\nassert solution('(((') == '('\nassert solution('(())' == '()'\nassert solution('(((()' == '()()'\nassert solution('))((((()' == '()(()()'\n"
    },
    {
        "number": 3451,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n4 3\n((()\n480\n617\n-570\n928\n''') == '480'\n\nassert solution(\n'''\n3 2\n((()\n480\n617\n-570\n928\n''') == '?'\n\nassert solution(\n'''\n6 6\n((()\n480\n617\n-570\n928\n''') == '?'\n\n\nassert solution(\n'''\n11 0\n((()\n480\n617\n-570\n928\n''') == '?'\n\nassert solution(\n'''\n11 1\n((()\n480\n617\n-570\n928\n''') == '?'"
    },
    {
        "number": 3451,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''(()''') == '480'\nassert solution('''((()\n480\n617\n-570\n928\n''') == '480'\nassert solution('''(())((()\n480\n617\n-570\n928\n''') == '480'\nassert solution('''((()\n480\n617\n-570\n928\n''') == '480'\nassert solution('''(()\n480\n617\n-570\n928\n''') == '480'\n"
    },
    {
        "number": 3451,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('((()' == solution('((()'))\nassert solution('((()' == solution('((()'))\nassert solution('(((()' == solution('(((()'))\nassert solution('(((()' == solution('((()'))\nassert solution('((()' == solution('((()'))\n"
    },
    {
        "number": 3451,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('()') == '?'\nassert solution('(())') == '?'\nassert solution('((()')) == '?'\nassert solution('(()')) == '?'\nassert solution('((()')) == '?'\n"
    },
    {
        "number": 3451,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''(()\n480\n617\n-570\n928\n''') == '480'\nassert solution('''(()\n480\n617\n-570\n928\n''') == '?'\n'''"
    },
    {
        "number": 3451,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''(()\n480\n617\n-570\n928\n''') == '480'\nassert solution('''()\n480\n617\n-570\n928\n''') == '480'\nassert solution('''(()\n480\n617\n-570\n928\n''') == '480'\nassert solution('''(()\n480\n-617\n-570\n928\n''') == '480'\nassert solution('''(()\n-480\n-617\n-570\n928\n''') == '480'\n"
    },
    {
        "number": 3451,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('(((()' + \n                '))'\n                '(((((((()))))))'\n                '))))'\n\nassert solution('())(())' + \n                '((())())(()()'\n                '))()'\n\nassert solution(')(' + \n                '(((((()))))))'\n                '))))'\n\nassert solution(')()' + \n                '(((((()))))))'\n                '))))'\n\nassert solution('()' * 1000000) == 0\n"
    },
    {
        "number": 3452,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n"
    },
    {
        "number": 3452,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''13''') == '''2 4'''\nassert solution('''3''') == '''5 6'''\nassert solution('''14''') == '''7 8 9 10 11 12 13'''\nassert solution('''14''') == '''6 7 8 9 10 11 12 13'''\nassert solution('''3''') == '''4 5'''\n"
    },
    {
        "number": 3452,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1''') == 'none'\nassert solution('''2''') == 'none'\nassert solution('''3''') == 'none'\nassert solution('''4''') == 'none'\nassert solution('''5''') == 'none'\n"
    },
    {
        "number": 3452,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(open(\"input/20.txt\").read()))\n\n\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 3452,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\\n2 2 4\\n3 1 3 5\\n2 2 4\") == \"2 4\\n5 6\"\nassert solution(\"3\\n2 2 4\\n3 1 3 5\\n2 2 4\") == \"2 4\\n5 6\"\nassert solution(\"5\\n2 2 4\\n3 1 3 5\\n2 2 4\") == \"2 4\\n5 6\"\nassert solution(\"1\\n1 1 1 1\") == \"none\"\nassert solution(\"5\\n1 1 1 1 1\") == \"none\"\n"
    },
    {
        "number": 3452,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n    13\n    2 2 4\n    3 1 3 5\n    2 2 4\n    3 1 3 6\n    2 2 6\n    2 4 5\n    2 8 9\n    2 7 9\n    2 7 8\n    2 11 13\n    2 10 12\n    2 11 13\n    2 10 12\n''') == '''\n2 4\n5 6\n7 8 9 10 11 12 13\n'''\nassert solution('''\n    2\n    1\n''') == '''\nnone\n'''\nassert solution('''\n    2\n    1 2\n''') == '''\nnone\n'''\nassert solution('''\n    4\n    2 2 4\n    3 1 3 5\n    2 2 4\n    3 1 3 6\n    2 2 6\n    2 4 5\n    2 8 9\n    2 7 9\n    2 7 8\n    2 11 13\n    2 10 12\n    2 11 13\n    2 10 12\n''') == '''\n2 4\n5 6\n7 8 9 10 11 12 13\n'''\n"
    },
    {
        "number": 3452,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1\n1 1\n2 1\n3 1\n4 1\n5 1\n6 1\n7 1\n8 1\n9 1\n10 1\n11 1\n12 1\n13 1\n13 2\n13 3\n13 4\n13 5\n13 6\n13 7\n13 8\n13 9\n13 10\n13 11\n13 12\n13 13\n''') == '2 4\\n5 6\\n7 8 9 10 11 12 13'\nassert solution('''1\n1 1\n2 1\n3 1\n4 1\n5 1\n6 1\n7 1\n8 1\n9 1\n10 1\n11 1\n12 1\n13 1\n13 2\n13 3\n13 4\n13 5\n13 6\n13 7\n13 8\n13 9\n13 10\n13 11\n13 12\n13 13\n''') == '2 4\\n5 6\\n7 8 9 10 11 12 13'\nassert solution('''1\n1 1\n2 1\n3 1\n4 1\n5 1\n6 1\n7 1\n8 1\n9 1\n10 1\n11 1\n12 1\n13 1\n13 2\n13 3\n13 4\n13 5\n13 6\n13 7\n13 8\n13 9\n13 10\n13 11\n13 12\n13 13\n13 14\n13 15\n14 15\n15 15\n16 15\n17 15\n17 16\n17 17\n17 18\n17 19\n17 20\n17 21\n17 22\n17 23\n17 24\n18 17\n18 18\n18 19\n18 20\n18 21\n18 22\n18 23\n18 24\n19 19\n19 20\n19 21\n19 22\n19 23\n19 24\n20 19\n20 20\n20 21\n20 22\n20 23\n20 24\n21 19\n21 20\n21 21\n21 22\n21 23\n21 24\n22 19\n22 20\n22 21\n22 22\n22 23\n22 24\n23 19\n23 20\n23 21\n23 22\n23 23\n23 24\n24 19\n24 20\n24 21\n24 22\n24 23\n24 24\n''') == '2 4\\n5 6\\n7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24'\nassert solution('''1\n1 1\n2 1\n3 1\n4 1\n5 1\n6 1\n7 1\n8 1\n9 1\n10 1\n11 1\n12 1\n13 1\n13 2\n13 3\n13 4\n13 5\n13 6\n13 7\n13 8\n13 9\n13 10\n13 11\n13 12\n13 13\n13 14\n13 15\n13 16\n13 17\n13 18\n13 19\n13 20\n13 21\n13 22\n13 23\n13 24\n13 25\n13 26\n13 27\n13 28\n13 29\n13 30\n13 31\n13 32\n13 33\n13 34\n13 35\n13 36\n13 37\n13 38\n13 39\n13 40\n13 41\n13 42\n13 43\n13 44\n13 45\n13 46\n13 47\n13 48\n13 49\n13 50\n13 51\n13 52\n13 53\n13 54\n13 55\n13 56\n13 57\n13 58\n13 59\n13 60\n13 61\n13 62\n13 63\n13 64\n13 65\n13 66\n13 67\n13 68\n13 69\n13 70\n13 71\n13 72\n13 73\n13 74\n13 75\n13 76\n13 77\n13 78\n13 79\n13 80\n13 81\n13 82\n13 83\n13 84\n13 85\n13 86\n13 87\n13 88\n13 89\n13 90\n13 91\n13 92\n13 93\n13 94\n13 95\n13 96\n13 97\n13 98\n13 99\n13 100\n13 101\n13 102\n13 103\n13 104\n13 105\n13 106\n13 107\n13 108\n13 109\n13 110\n13 111\n13 112\n13 113\n13 114\n13 115\n13 116\n13 117\n13 118\n13 119\n13 120\n13 121\n13 122\n13 123\n13 124\n13 125\n13 126\n13 127\n13 128\n13 129\n13 130\n13 131\n13 132\n13 133\n13 134\n13 135\n13 136\n13 137\n13 138\n13 139\n13 140\n13 141\n13 142\n13 143\n13 144\n13 145\n13 146\n13 147\n13 148\n13 149\n13 150\n13 151\n13 152\n13 153\n13 154\n13 155\n13 156\n13 157\n13 158\n13 159\n13 160\n13 161\n13 162\n13 163\n13 164\n13 165\n13 166\n13 167\n13 168\n13 169\n13 170\n13 171\n13 172\n13 173\n13 174\n13 175\n13 176\n13 177\n13 178\n13 179\n13 180\n13 181\n13 182\n13 183\n13 184\n13 185\n13 186\n13 187\n13 188\n13 189\n13 190\n13 191\n13 192\n13 193\n13 194\n13 195\n13 196\n13 197\n13 198\n13 199\n13 200\n13 201\n13 202\n13 203\n13 204\n13 205\n13 206\n13 207\n13 208\n13 209\n13 210\n13 211\n13 212\n13 213\n13 214\n13 215\n13 216\n13 217\n13 218\n13 219\n13 220\n13 221\n13 222\n13 223\n13 224\n13 225\n13 226\n13 227\n13 228\n13 229\n13 230\n13 231\n13 232\n13 233\n13 234\n13 235\n13 236\n13 237\n13 238\n13 239\n13 240\n13 241\n13 242\n13 243\n13 244\n13 245\n13 246\n13 247\n13 248\n13 249\n13 250\n13 251\n13 252\n13 253\n13 254\n13 255\n13 256\n13 257\n13 258\n13 259\n13 260\n13 261\n13 262\n13 263\n13 264\n13 265\n13 266\n13 267\n13 268\n13 269\n13 270\n13 271\n13 272\n13 273\n13 274\n13 275\n13 276\n13 277\n13 278\n13 279\n13 280\n13 281\n13 282\n13 283\n13 284\n13 285\n13 286\n13 287\n13 288\n13 289\n"
    },
    {
        "number": 3452,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3452,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == '2 4'\nassert solution('2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2"
    },
    {
        "number": 3452,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n5') == '2 4'\nassert solution('4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n5') == '5 6'\nassert solution('4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n5') == '2 4'\nassert solution('4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n5') == '5 6'\nassert solution('4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n5') == '2 4'\n"
    },
    {
        "number": 3453,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 5\n1 2 3\n1 4 8\n2 3 12\n3 5 4\n4 5 2''') == '35 39 36 27 29'\nassert solution('''1 1\n1 2 2\n3 4 4\n5 5 5''') == '35 39 36 27 29'\nassert solution('''2 2\n1 1\n2 1''') == '7'\nassert solution('''2 2\n1 2\n2 1''') == '2'\nassert solution('''2 2\n1 2\n2 1''') == '2'\n"
    },
    {
        "number": 3453,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 3453,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 5') == '35 39 36 27 29'\nassert solution('10 10') == '47494447293194447284399594749444729319444729'\nassert solution('10 100') == '47494447293194447284399594749444729319444729'\nassert solution('20 10') == '5849150483014749444729319444729'\nassert solution('30 10') == '5849150483014749444729319444729'\n"
    },
    {
        "number": 3453,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"35 39 36 27 29\"\n"
    },
    {
        "number": 3453,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"35 39 36 27 29\""
    },
    {
        "number": 3453,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"5 5\n1 2 3\n1 4 8\n2 3 12\n3 5 4\n4 5 2\"\"\"\n) == \"\"\"35 39 36 27 29\"\"\"\n\nassert solution(\n\"\"\"5 5\n1 2 3\n1 4 8\n2 3 12\n3 5 4\n4 5 2\"\"\"\n) == \"\"\"35 39 36 27 29\"\"\"\n\nassert solution(\n\"\"\"5 5\n1 2 3\n1 4 8\n2 3 12\n3 5 4\n4 5 2\"\"\"\n) == \"\"\"35 39 36 27 29\"\"\"\n"
    },
    {
        "number": 3453,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 5\") == \"35 39 36 27 29\"\nassert solution(\"10 10\") == \"36 34 30 26 22 20 18 16 14 12 10 8 6 4 2\"\nassert solution(\"2 2\") == \"1 1\"\nassert solution(\"1 5\") == \"5\"\nassert solution(\"5 1\") == \"1\"\n"
    },
    {
        "number": 3453,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''5 5\n1 2 3\n1 4 8\n2 3 12\n3 5 4\n4 5 2'''\n    ) == '35 39 36 27 29'\nassert solution(\n'''10 10\n1 2 3\n2 3 4\n3 4 5\n4 5 6\n5 6 7\n6 7 8\n7 8 9\n8 9 10'''\n    ) == '168 142 141 136 140 137 140 138 137 141 138 138 141 141 142 141 142 140 141 141 141 139 142 143 142 141 143 141 141 137 138 137 138 139 141 141 139 143 138 143 138 143 141 141 141 139 143 141 143 139 144 144 144 144 144 141 141 140 137 138 139 141 141 139 143 139 141 141 143 141 141 143 142 143 142 143 142 141 141 140 137 138 139 141 141 139 143 141 141 143 141 141 142 143 142 143 141 143 143 141 142 142 143 142 141 143 141 143 141 143 144 144 144 144 144 143 141 141 141 143 141 142 143 141 141 143 141 143 142 143 141 143 141 143 141 143 141 143 141 142 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 142 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 141 143 41'''\n    ) == '5 5 15'\nassert solution(\n'''20 20\n1 2 3\n2 3 4\n3 4 5\n4 5 6\n5 6 7\n6 7 8\n7 8 9\n8 9 10\n9 10 11\n10 11 12\n11 12 13\n12 13 14\n13 14 15\n14 15 16\n15 16 17\n16 17 18\n17 18 19\n18 19 20'''\n    ) == '40 64 32 84'\nassert solution(\n'''100 100\n1 2 3\n2 3 4\n3 4 5\n4 5 6\n5 6 7\n6 7 8\n7 8 9\n8 9 10\n9 10 11\n10 11 12\n11 12 13\n12 13 14\n13 14 15\n14 15 16\n15 16 17\n16 17 18\n17 18 19\n18 19 20\n19 20 21\n20 21 22\n21 22 23\n22 23 24\n23 24 25\n24 25 26\n25 26 27\n26 27 28\n27 28 29\n28 29 30\n29 30 31\n30 31 32\n31 32 33\n32 33 34\n33 34 35\n34 35 36\n35 36 37\n36 37 38\n37 38 39\n38 39 40\n39 40 41\n40 41 42\n41 42 43\n42 43 44\n43 44 45\n44 45 46\n45 46 47\n46 47 48\n47 48 49\n48 49 50\n49 50 51\n50 51 52\n51 52 53\n52 53 54\n53 54 55\n54 55 56\n55 56 57\n56 57 58\n57 58 59\n58 59 60\n59 60 61\n60 61 62\n61 62 63\n62 63 64\n63 64 65\n64 65 66\n65 66 67\n66 67 68\n67 68 69\n68 69 70\n69 70 71\n70 71 72\n71 72 73\n72 73 74\n73 74 75\n74 75 76\n75 76 77\n76 77 78\n77 78 79\n78 79 80\n79 80 81\n80 81 82\n81 82 83\n82 83 84\n83 84 85\n82 85 86\n81 86 87\n80 87 88\n79 88 89\n78 89 90\n77 89 91\n76 89 92\n75 89 93\n74 89 94\n73 89 95\n72 89 96\n71 89 97\n70 89 98\n69 89 99\n68 89 100\n67 89 101\n66 89 102\n65 89 103\n64 89 104\n63 89 105\n62 89 106\n61 89 107\n60 89 108\n59 89 109\n58 89 110\n57 89 111\n56 89 112\n55 89 113\n54 89 114\n53 89 115\n52 89 116\n51 89 117\n50 89 118\n49 89 119\n48 89 120\n47 89 121\n46 89 122\n45 89 123\n44 89 124\n43 89 125\n42 89 126\n41 89 127\n40 89 128\n39 89 129\n38 89 130\n37 89 131\n36 89 132\n35 89 133\n34 89 134\n"
    },
    {
        "number": 3453,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2') == '35 39 36 27 29'\nassert solution('2 2\\n1 2\\n1 2') == '35 39 36 27 29'\nassert solution('5 3\\n1 2 3\\n2 3 4\\n2 3\\n3 4 5\\n4 5 6') == '35 39 36 27 29'\nassert solution('10 3\\n1 2 3\\n2 3 4\\n2 3\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8\\n7 8 9\\n8 9 10') == '35 39 36 27 29'\nassert solution('8 8\\n1 2 3\\n2 3 4\\n2 3\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8\\n7 8 9\\n8 9 10') == '35 39 36 27 29'\n"
    },
    {
        "number": 3453,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 5') == '35 39 36 27 29'"
    },
    {
        "number": 3454,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''3 2 1\n3 2 1\n''') == '0 672'\n\nassert solution(\n'''4 2 3\n2 2 1\n''') == '0 0'\n\nassert solution(\n'''4 2 4\n2 2 2\n''') == '0 0'\n\nassert solution(\n'''4 2 6\n2 2 2\n''') == '0 0'\n\nassert solution(\n'''4 2 8\n2 2 2\n''') == '0 0'"
    },
    {
        "number": 3454,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 3\n3 2 1\n''') == '0 672'\nassert solution('''3 3\n3 1 1\n''') == '0 0'\nassert solution('''3 3\n3 2 2\n''') == '0 0'\nassert solution('''3 3\n3 1 2\n''') == '0 0'\nassert solution('''3 3\n3 1 1\n''') == '0 0'\n"
    },
    {
        "number": 3454,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 3\n3 2 1''') == '0 672'\nassert solution('''3 4\n3 2 1''') == '0 1812'\nassert solution('''2 1\n4 2''') == '1 1'\nassert solution('''6 3\n6 6 3''') == '2 1'\nassert solution('''2 6\n3 2 1''') == '0 1'\n"
    },
    {
        "number": 3454,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 3\n3 2 1\n''') == '0 672'\n\nassert solution('''1 1\n1\n''') == '1'\n\nassert solution('''1 1\n1\n''') == '0'\n\nassert solution('''2 2\n1 1\n''') == '0'\n\nassert solution('''2 2\n2 1\n''') == '1'"
    },
    {
        "number": 3454,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 5') == '0 672'\nassert solution('3 3') == '0 672'\nassert solution('3 2 1') == '0 672'\nassert solution('3 3 2 1') == '0 672'\nassert solution('2 3 2') == '3 1'\n"
    },
    {
        "number": 3454,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '0 672'\n'''\n"
    },
    {
        "number": 3454,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 4\\n3 2 1\\n1 2 3 4 5') == '0 672'\nassert solution('3 3\\n3 2 1\\n1 2 3') == '0 0'\nassert solution('4 3\\n1 2 3 4\\n2 3 4 5 6') == '0 1'\nassert solution('4 3\\n1 2 3 4\\n2 3 4 5') == '0 0'\nassert solution('4 3\\n1 2 3 4\\n2 3 1 4') == '0 0'\n"
    },
    {
        "number": 3454,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input_data) == \"0 672\"\n\n---\n\nYour code must solve this question using the set of rules we learned in class, and we will use a test set to make sure your answer is correct.\n\nCee has read a stream of digits (i.e., a stream of characters). Cee has two rules to paint the picture:\n - The bottom row (row $1$) is painted blue\n - The top row (row $M$) is painted red\n - For every other cell (row $i$), the cell $i$ is painted black if $b_{i} + r_{i} \\leq M$, or red if $b_{i} + r_{i} > M$\nCee wants to know how many ways he can paint the picture, where he cannot use both blue and red, so that he can ensure he can paint the picture completely.\n\nCee wants to know how many ways he can paint the picture, where he cannot use both blue and red, so that he can ensure he can paint the picture completely.\n\nCee has three rules to paint the picture:\n - The bottom row (row $1$) is painted blue\n - The top row (row $M$) is painted red\n - For every other cell (row $i$), the cell $i$ is painted black if $b_{i} + r_{i} \\leq M$, or red if $b_{i} + r_{i} > M$\nYou are given a stream of characters, which is interpreted as a list of integers. The first character is a number (1-N), where N is the number of cells. If the character is B, then the cell is painted black. Otherwise, the cell is painted red.\n\nCee has three rules to paint the picture:\n - The bottom row (row $1$) is painted blue\n - The top row (row $M$) is painted red\n - For every other cell (row $i$), the cell $i$ is painted black if $b_{i} + r_{i} \\leq M$, or red if $b_{i} + r_{i} > M$\nYou are given a stream of characters, which is interpreted as a list of integers. The first character is a number (1-N), which tells how many cells are in the picture. Each of the following characters (one per cell) tells what color the cell is painted (B or R), and how many cells are painted in this color. If the character is B, then the cell is painted black. Otherwise, the cell is painted red.\n\nCee has three rules to paint the picture:\n - The bottom row (row $1$) is painted blue\n - The top row (row $M$) is painted red\n - For every other cell (row $i$), the cell $i$ is painted black if $b_{i} + r_{i} \\leq M$, or red if $b_{i} + r_{i} > M$\nYou are given a stream of characters, which is interpreted as a list of integers. The first character is a number (1-N), which tells how many cells are in the picture. Each of the following characters (one per cell) tells what color the cell is painted (B or R), and how many cells are painted in this color. If the character is B, then the cell is painted black. Otherwise, the cell is painted red.\n\nCee has three rules to paint the picture:\n - The bottom row (row $1$) is painted blue\n - The top row (row $M$) is painted red\n - For every other cell (row $i$), the cell $i$ is painted black if $b_{i} + r_{i} \\leq M$, or red if $b_{i} + r_{i} > M$\nYou are given a stream of characters, which is interpreted as a list of integers. The first character is a number (1-N), which tells how many cells are in the picture. Each of the following characters (one per cell) tells what color the cell is painted (B or R), and how many cells are painted in this color. If the character is B, then the cell is painted black. Otherwise, the cell is painted red.\n\nCee has three rules to paint the picture:\n - The bottom row (row $1$) is painted blue\n - The top row (row $M$) is"
    },
    {
        "number": 3454,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3454,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0\\n3\\n3\\n') == '0 1'\nassert solution('0\\n3\\n1\\n') == '0 0'\nassert solution('0\\n3\\n2\\n') == '1 0'\nassert solution('0\\n3\\n3\\n') == '0 1'\nassert solution('3\\n3\\n3\\n') == '0 1'\n"
    },
    {
        "number": 3455,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '2.500000'"
    },
    {
        "number": 3455,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '2.5'\n"
    },
    {
        "number": 3455,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50') == \"2.500000\"\nassert solution('2 2 10\\n2 2 10\\n1 1 10') == \"0.000\"\nassert solution('2 2 10\\n2 2 10\\n1 1 10\\n1 1 10') == \"0.000\"\nassert solution('2 2 10\\n2 2 10\\n1 1 10\\n1 1 10\\n1 1 10\\n1 1 10') == \"0.000\"\nassert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50') == \"Impossible\"\n"
    },
    {
        "number": 3455,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0 10 10\") == \"2.5\"\nassert solution(\"1 10 5\") == \"Impossible\"\nassert solution(\"1 20 35\") == \"2.0\"\nassert solution(\"2 2 18\") == \"2.0\"\nassert solution(\"2 40 50\") == \"2.0\"\n"
    },
    {
        "number": 3455,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50') == '2.500000'\nassert solution('3 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50') == 'Impossible'\n\nprint(solution(stdin))\n"
    },
    {
        "number": 3455,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 4 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50''') == '2.500000'\nassert solution('''3 3 5000\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50''') == 'Impossible'\nassert solution('''5 4 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n1 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50''') == '2.000000'\nassert solution('''6 4 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n1 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50''') == '2.000000'\nassert solution('''8 6 1000\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n1 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n1 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50''') == '2.000000'\n"
    },
    {
        "number": 3455,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\nassert solution('''4 5 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n''') == '2.500000'\nassert solution('''2 1 2\n0 5 5\n1 4 6\n''') == 'Impossible'\n'''\n\nimport sys"
    },
    {
        "number": 3455,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Impossible\"\nassert solution(stdin) == \"1.000000\"\nassert solution(stdin) == \"2.000000\"\nassert solution(stdin) == \"2.500000\"\nassert solution(stdin) == \"3.000000\"\n"
    },
    {
        "number": 3455,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    '0 2 100\\n0 1 10\\n1 2 5\\n1 2 8\\n2 2 18\\n2 2 40\\n0 3 10\\n0 1 25\\n1 1 25\\n1 2 9\\n2 2 18\\n2 2 35\\n0 4 10\\n0 1 35\\n1 2 45\\n1 2 50\\n2 2 6\\n2 2 22\\n0 5 25\\n0 1 35\\n1 1 10\\n1 2 50\\n2 2 13\\n2 2 22\\n2 2 1'\n) == 'Impossible'\nassert solution(\n    '4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n0 3 10\\n0 1 25\\n1 1 25\\n1 2 9\\n2 2 18\\n2 2 35\\n0 4 10\\n0 1 35\\n1 2 45\\n1 2 50\\n2 2 6\\n2 2 22\\n0 5 25\\n0 1 35\\n1 1 10\\n1 2 50\\n2 2 13\\n2 2 22\\n2 2 1'\n) == '2.500000'\nassert solution(\n    '4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n0 3 10\\n0 1 25\\n1 1 25\\n1 2 9\\n2 2 18\\n2 2 35\\n0 4 10\\n0 1 35\\n1 2 45\\n1 2 50\\n2 2 6\\n2 2 22\\n0 5 25\\n0 1 35\\n1 1 10\\n1 2 50\\n2 2 13\\n2 2 22\\n2 2 1'\n) == '2.500000'\nassert solution(\n    '4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n0 3 10\\n0 1 25\\n1 1 25\\n1 2 9\\n2 2 18\\n2 2 35\\n0 4 10\\n0 1 35\\n1 2 45\\n1 2 50\\n2 2 6\\n2 2 22\\n0 5 25\\n0 1 35\\n1 1 10\\n1 2 50\\n2 2 13\\n2 2 22\\n2 2 1'\n) == '2.500000'\nassert solution(\n    '4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n0 3 10\\n0 1 25\\n1 1 25\\n1 2 9\\n2 2 18\\n2 2 35\\n0 4 10\\n0 1 35\\n1 2 45\\n1 2 50\\n2 2 6\\n2 2 22\\n0 5 25\\n0 1 35\\n1 1 10\\n1 2 50\\n2 2 13\\n2 2 22\\n2 2 1'\n) == '2.500000'\n"
    },
    {
        "number": 3455,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\n\nimport sys\ntry:\n    N, M, R = [int(i) for i in sys.stdin.readline().split()]\n    carList = []\n    for i in range(M):\n        lane, length, dist = [int(j) for j in sys.stdin.readline().split()]\n        carList.append((lane, length, dist))\n    best = None\n    for i in range(N):\n        lane = i\n        laneList = []\n        distList = []\n        for _, length, dist in carList:\n            if lane == laneList:\n                distList.append(dist)\n            else:\n                laneList.append(lane)\n                distList.append(dist)\n        best = max(best, min(distList)) if best else min(distList)\n    print(\"%.5f\" % (best/R))\nexcept ValueError:\n    print(\"Impossible\")"
    },
    {
        "number": 3456,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n5 3 4''') == '3'\nassert solution('''6\n7 2 1 3 5 9''') == '9'\nassert solution('''1\n1''') == '0'\nassert solution('''10\n5 2 1 3 4 6 7 8 9 10''') == '10'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '10'\n"
    },
    {
        "number": 3456,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n\"\"\""
    },
    {
        "number": 3456,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\\n3\") == \"\"\nassert solution(\"3\\n3 4 4 5 5\") == \"\"\nassert solution(\"3\\n3 4 4 4 3 2 2\") == \"\"\nassert solution(\"2\\n5 3 4 3 4 2\") == \"\"\n"
    },
    {
        "number": 3456,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n2\n3 4 2\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n1\n1\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"\n1\n3\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3456,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\") == \"1\\n1\\n1\\n1\\n1\"\nassert solution(\"2\\n1 2\\n2 2\") == \"3\\n2\\n1 2\\n2 2\"\nassert solution(\"3\\n2 1 1\\n1 1 1\") == \"4\\n1\\n1 1\\n1 1\"\nassert solution(\"4\\n2 1 1 1\\n1 1 1 1\") == \"5\\n1\\n1 1\\n1 1\"\nassert solution(\"5\\n3 1 2 1 2\\n3 1 2 1 2\") == \"5\\n3\\n2 1 2 1 2\\n3 1 2 1 2\"\n"
    },
    {
        "number": 3456,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n3\n5 3 4\n'''\n    ) == '3'\n"
    },
    {
        "number": 3456,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n5 3 4''') == '''3'''\nassert solution('''3\n5 3 4\n6 1 7\n7 4 5\n8 1 9\n9 2 10\n10 1 12\n11 2 14\n12 2 16''') == '''0'''\nassert solution('''3\n5 3 4\n5 3 4\n5 3 4''') == '''3'''\nassert solution('''3\n5 4 3\n5 3 4\n5 3 4\n5 3 4''') == '''1'''\nassert solution('''3\n5 3 4\n5 2 3\n5 3 4\n5 3 4''') == '''2'''\n"
    },
    {
        "number": 3456,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '1\\n1\\n0'\nassert solution('2\\n1 1') == '2\\n1\\n0'\nassert solution('3\\n1 1 1') == '3\\n1\\n0'\nassert solution('4\\n1 1 1 1') == '4\\n1\\n0'\nassert solution('5\\n1 1 1 1 1') == '5\\n1\\n0'\n"
    },
    {
        "number": 3456,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\\n5 3 4\") == \"3\"\nassert solution(\"4\\n6 6 6 6\") == \"6\"\nassert solution(\"5\\n9 9 9 9 9\") == \"9\"\nassert solution(\"5\\n2 1 2 2 2\") == \"6\"\nassert solution(\"6\\n5 5 5 5 5 5\") == \"9\"\n"
    },
    {
        "number": 3456,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3457,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1\") == 2\nassert solution(\"2 1 1\") == 4\nassert solution(\"2 1 2\") == 8\nassert solution(\"10 2 10\") == 80\nassert solution(\"10 3 10\") == 94\n"
    },
    {
        "number": 3457,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 1 1') == '2'\nassert solution('1 2 3') == '6'\nassert solution('2 1 3') == '10'\nassert solution('1 2 2') == '2'\nassert solution('10 10 10') == '1'\n"
    },
    {
        "number": 3457,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1 1 1') == '0'\nassert solution('2 1 1') == '2'\nassert solution('100 5 3') == '3'\nassert solution('100000000000000 100000000 1') == '3'\n'''\n"
    },
    {
        "number": 3457,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1 1') == '2'\nassert solution('2 1 1') == '6'\nassert solution('3 1 1') == '26'\nassert solution('5 1 1') == '78'\nassert solution('10 1 1') == '302'\n"
    },
    {
        "number": 3457,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 1 1') == '2'\nassert solution('2 1 2') == '0'\nassert solution('2 1 1') == '2'\nassert solution('2 1 2') == '0'\nassert solution('2 2 1') == '0'\n"
    },
    {
        "number": 3457,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 2\nassert solution('2 1 1') == 2\nassert solution('2 2 2') == 2\nassert solution('4 4 4') == 5\nassert solution('5 5 5') == 5\n"
    },
    {
        "number": 3457,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 2\nassert stdin == '2 1 1'\n\"\"\"\n\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 3457,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 1 1') == '2'\nassert solution('3 1 1') == '4'\nassert solution('20 10 10') == '1'\nassert solution('100 50 100') == '1'\nassert solution('1000 1000 1000') == '1'\n"
    },
    {
        "number": 3457,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 1\nstdin = '2 1 1'\nassert solution(stdin) == 1\nstdin = '3 3 2'\nassert solution(stdin) == 1\nstdin = '3 3 3'\nassert solution(stdin) == 2\nstdin = '8 9 9'\nassert solution(stdin) == 2\nstdin = '10 10 10'\n"
    },
    {
        "number": 3457,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 1 1') == '2'\nassert solution('3 3 3') == '10'\nassert solution('30 30 30') == '10'\nassert solution('5 5 3') == '1'\nassert solution('7 7 7') == '1'\n"
    },
    {
        "number": 3458,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input_1) == '2', 'input_1 should return \"2\", not \"{}\".'.format(solution(input_1))\nassert solution(input_2) == '3', 'input_2 should return \"3\", not \"{}\".'.format(solution(input_2))\nassert solution(input_3) == '9', 'input_3 should return \"9\", not \"{}\".'.format(solution(input_3))\nassert solution(input_4) == '15', 'input_4 should return \"15\", not \"{}\".'.format(solution(input_4))\nassert solution(input_5) == '6', 'input_5 should return \"6\", not \"{}\".'.format(solution(input_5))\n"
    },
    {
        "number": 3458,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"2\n1 2\"\n) == \"3\"\nassert solution(\n\"2\n1 2\"\n) == \"3\"\nassert solution(\n\"2\n1 2\"\n) == \"3\"\nassert solution(\n\"2\n1 2\"\n) == \"3\"\nassert solution(\n\"4\n1 2 3 4\"\n) == \"7\"\n"
    },
    {
        "number": 3458,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"4\"\nassert solution(\"1\\n\") == \"1\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\"\n"
    },
    {
        "number": 3458,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"3\n1 3 5\n\"\"\") == \"7\"\nassert solution(\"\"\"2\n1 2\n\"\"\") == \"1\"\nassert solution(\"\"\"1\n2\n\"\"\") == \"2\"\nassert solution(\"\"\"1\n1\n\"\"\") == \"0\"\nassert solution(\"\"\"1\n2\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3458,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n3') == '2'\nassert solution('1\\n1 3 5') == '7'\nassert solution('5\\n10') == '2'\nassert solution('5\\n9') == '2'\n"
    },
    {
        "number": 3458,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n1 3 5\n''') == \"7\"\nassert solution('''\n1 3 5\n''') == \"7\"\nassert solution('''\n1 3 5\n1 2 3\n''') == \"3\"\nassert solution('''\n1 3 5\n1 2 3\n3 3 5\n''') == \"7\"\nassert solution('''\n1 3 5\n1 2 3\n3 3 5\n''') == \"3\"\n"
    },
    {
        "number": 3458,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 3 5\\n'\n                '1 3 5') == '7'\nassert solution('3\\n'\n                '1 3 5') == '7'\nassert solution('1 3 5\\n'\n                '2 1 5') == '10'\nassert solution('1 3 5\\n'\n                '2 4 5') == '10'\nassert solution('2\\n'\n                '3 2') == '5'\n"
    },
    {
        "number": 3458,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input_) == output_\n\"\"\"\n\ninput_ = \"\"\"\n3\n1 3 5\n\"\"\"\noutput_ = \"\"\"\n7\n\"\"\"\n"
    },
    {
        "number": 3458,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n1 3 5''') == '7'\n'''\n\nfrom collections import defaultdict"
    },
    {
        "number": 3458,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '7'\nassert solution('5\\n1 3 5') == '7'\nassert solution('5\\n2 2 4 4') == '15'\nassert solution('5\\n1 2 1 3 1') == '4'\nassert solution('5\\n1 2 2 1 1') == '7'\n"
    },
    {
        "number": 3459,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n''') == 'Impossible'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n''') == 'Impossible'\nassert solution('''2\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n''') == 'Impossible'\nassert solution('''1\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n''') == 'Impossible'\nassert solution('''4\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n"
    },
    {
        "number": 3459,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets''') == \"fred jetsons\\njohn jets\\nruth rockets\"\nassert solution('''4\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n3\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n2\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n1\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n3\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n1\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n3\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n2\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n3\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n1\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n3\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n2\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n3\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n1\nfred dinosaur 2 jets jetson\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n3\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n2\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n3\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n1\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n3\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n2\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n3\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n1\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n3\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n2\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n3\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n1\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n3\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n2\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n3\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n1\nfred dinosaur 2 jets jetsons\njohn"
    },
    {
        "number": 3459,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n4\\nfred dinosaur 2 jets\\njohn rhinocerous 2 jetsons\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets\\njohn rhinocerous 2 jetsons\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets') == 'fred jetsons\\njohn jets\\nruth rockets'\n"
    },
    {
        "number": 3459,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10 11 12') == '1 2 3 4 5 6 7 8 9 10 11 12'\nassert solution('1 2 3 4 5 6 7 8 9 10 11') == '1 2 3 4 5 6 7 8 9 10 11'\nassert solution('1 2 3 4 5 6 7 8 9 10 11') == 'Impossible'\nassert solution('1 2 3 4 5 6 7 8 9 10') == 'Impossible'\nassert solution('1 2 3 4 5 6 7 8 9') == 'Impossible'\n"
    },
    {
        "number": 3459,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3459,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    '4\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4'\n    ) == 'fred jetsons\\njohn jets\\nruth rockets'\nassert solution(\n    '4\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets'\n    ) == 'Impossible'\nassert solution(\n    '3\\n3\\nbob ave\\ncathy palli\\ngasle\\njhon jons'\n    ) == 'Impossible'\nassert solution(\n    '3\\n3\\nbob ave\\ncathy palli\\ngasle\\njhon jons'\n    ) == 'bob ave'\nassert solution(\n    '2\\n2\\nmartha gandolfo\\nkevin linden\\nvictor makethan'\n    ) =='martha gandolfo\\nkevin linden\\nvictor makethan'\n"
    },
    {
        "number": 3459,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n1\n1\n1\n1\n1\n1\n1\n''') == 'Impossible'\nassert solution('''\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n''') == 'Impossible'\nassert solution('''\n1\n1\n2\n2\n3\n3\n3\n3\n4\n4\n4\n4\n4\n4\n4\n5\n5\n5\n5\n5\n5\n5\n6\n6\n6\n7\n7\n8\n8\n9\n9\n9\n9\n9\n9\n9\n10\n10\n10\n10\n10\n10\n10\n10\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n''') == 'Impossible'\nassert solution('''\n1\n1\n1\n1\n1\n1\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3"
    },
    {
        "number": 3459,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('1\\n') == '1'\nassert solution('1\\n2\\n') == 'Impossible'\nassert solution('2\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets') == 'fred jetsons\\njohn jets\\nruth rockets'\nassert solution('3\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n3\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets') == 'Impossible'\n"
    },
    {
        "number": 3459,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"0 1\") == \"1\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"2 3 1\") == \"\"\n"
    },
    {
        "number": 3459,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets''') == '''fred jetsons\njohn jets\nruth rockets\nimpossible\nfred jetsons\njohn jets\nruth rockets\nimpossible\n'''\n\nassert solution('''2\n6\njules pinky flying 9 papers\nthe rangers 2 tornado\njules pinky flying 9 papers\nthe rangers 2 tornado\n2\njules pinky flying 9 papers\nthe rangers 2 tornado\njules pinky flying 9 papers\nthe rangers 2 tornado\n''') == '''jules pinky flying 9 papers\nthe rangers 2 tornado\n'''\n\nassert solution('''2\n1\nthe rangers 1 tornado\nthe rangers 1 tornado\n2\njules pinky flying 9 papers\nthe rangers 2 tornado\njules pinky flying 9 papers\nthe rangers 2 tornado\n''') == '''the rangers 1 tornado\nthe rangers 1 tornado\njules pinky flying 9 papers\nthe rangers 2 tornado\n'''\n\nassert solution('''2\n3\nnautilus flying 10 jets\nthe rangers 2 tornado\njules pinky flying 9 papers\nthe rangers 2 tornado\n''') == '''nautilus flying 10 jets\nthe rangers 2 tornado\n'''\n\nassert solution('''2\n4\nthe rangers 1 tornado\njules pinky flying 9 papers\nthe rangers 2 tornado\nbaxter flying 2 rockets\n''') == '''the rangers 1 tornado\nbaxter flying 2 rockets\n'''"
    },
    {
        "number": 3460,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n4 3\n-10 9\n-2 3''') == '1 2 1'\nassert solution('''10\n1 2\n-10 10\n-2 -1\n-1 1\n0 1\n1 -1\n2 -2\n4 1\n5 1\n6 -1\n8 -2\n9 -3''') == '1 2 1 2 2 1 1 1'\nassert solution('''8\n1 2\n-10 10\n-2 -1\n-1 1\n0 1\n1 -1\n2 -2\n4 1\n5 1\n6 -1\n8 -2\n9 -3''') == '1 2 1 2 2 1 1 1'\nassert solution('''10\n4 4\n-10 9\n-2 -1\n-1 1\n0 1\n1 -1\n2 -2\n4 1\n5 1\n6 -1\n8 -2\n9 -3''') == '1 2 1 2 2 1 1 1'\nassert solution('''8\n1 1\n-10 10\n-2 -1\n-1 1\n0 1\n1 -1\n2 -2\n4 1\n5 1\n6 -1\n8 -2\n9 -3''') == '1 2 1 2 2 1 1 1'\n"
    },
    {
        "number": 3460,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n-10 9\n-2 3''') == '1 2 1'\n\nassert solution('''8\n-10 9\n-2 3\n1 4\n1 4\n1 4\n-2 4\n-2 4\n-2 4\n''') == '0 0 1 0 0 0 0 1'\n\nassert solution('''1\n1 1\n1 1\n1 1\n''') == '0'\n\nassert solution('''4\n-1 1\n1 1\n-1 1\n-1 1\n''') == '1 1 1'\n\nassert solution('''7\n-2 5\n1 3\n2 3\n3 4\n5 6\n6 7\n''') == '0 0 0 0 0 1 0'"
    },
    {
        "number": 3460,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n4 3\n-10 9\n-2 3''') == '1 2 1'\nassert solution('''4\n4 3\n-10 9\n-2 3\n-2 5\n''') == '1 2 1 2'\nassert solution('''7\n10 3\n5 6\n3 4\n2 9\n3 8\n4 7\n8 6\n9 5\n2 3\n''') == '1 2 1 2 3 1'\nassert solution('''5\n5 4\n3 2\n1 6\n-3 2\n-1 6\n''') == '1 1 1 1 1'\nassert solution('''1\n2 1\n''') == '1'\n"
    },
    {
        "number": 3460,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''-10 9\n-2 3\n''') == '1 2 1'\nassert solution('''1\n1 1\n''') == '0'\nassert solution('''1\n1 1\n2 3\n2 4\n2 1\n''') == '2 1'\nassert solution('''1\n1 1\n1 1\n''') == '0'\nassert solution('''1\n1 1\n1 1\n1 1\n''') == '0'\n"
    },
    {
        "number": 3460,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3460,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n4 3\n-10 9\n-2 3''') == '1 2 1'\nassert solution('''4\n5 3\n-7 1\n4 5\n3 3\n5 1\n2 1\n3 2''') == '1 2 2 1 1'\nassert solution('''3\n4 4\n-7 1\n-5 2\n-2 1\n2 1\n1 1\n-4 1\n-1 1\n''') == '0 1 0 1 1'\nassert solution('''1\n2 2\n1 1\n1 1\n1 1\n1 1\n''') == '0'\nassert solution('''4\n5 3\n-7 1\n-5 2\n-2 1\n2 1\n1 1\n3 3\n1 1\n3 3\n1 1\n''') == '0 1 0 1 1'\n"
    },
    {
        "number": 3460,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\n-----Note-----\n$n$ will be a positive integer in the range [1,10^5]\n$r$ will be a positive integer in the range [1,10^9]\n$x$ will be a non-negative integer\n$x$ will be in the range [-10^9, 10^9]\n$x$ will not occupy the same location as any other $x$\n\n-----\n'''\n"
    },
    {
        "number": 3460,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3460,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n4\n4 3\n-10 9\n-2 3\n''') == '1 2 1'\nassert solution('''\n5\n1 5\n1 3\n-1 -1\n-4 -1\n-6 -1\n3 4\n5 3\n''') == '1 1 1 1 1'\nassert solution('''\n6\n-9 -1\n-9 -1\n-1 -1\n9 -1\n1 1\n-8 -1\n-8 -1\n-1 -1\n''') == '1 1 1 1 1 1'\nassert solution('''\n10\n-9 -1\n-9 -1\n-9 -1\n9 -1\n1 1\n-8 -1\n-8 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n''') == '1 1 1 1 1 1 1 1'\n'''\n"
    },
    {
        "number": 3460,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n-10 9\\n-2 3') == '1 2 1'\nassert solution('1\\n1 1') == '0'\nassert solution('10\\n10 10') == '0'\nassert solution('1\\n1 1') == '0'\nassert solution('4\\n-10 9\\n-2 3') == '1 2 1'\n"
    },
    {
        "number": 3461,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n7\\n1\\n2\\n3\\n7\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n6\\n1\\n4\\n1\\n2\\n3\\n6\\n1\\n4\\n1\\n2\\n3\\n6\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n6\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n6\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\n2\\n3\\n5\\n1\\n4\\n1\\"
    },
    {
        "number": 3461,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2.125\"\n\n\"\"\"\n"
    },
    {
        "number": 3461,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\") == \"2.125\"\n\"\"\"\n"
    },
    {
        "number": 3461,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n7\\n2\\n3\\n5\\n6\\n10\\n10') == '2.125'\nassert solution('2\\n1\\n7\\n2\\n3\\n5\\n6\\n10\\n10') == '2.10714'\nassert solution('3\\n1\\n7\\n2\\n3\\n5\\n6\\n10\\n10') == '2.10714'\nassert solution('4\\n1\\n7\\n2\\n3\\n5\\n6\\n10\\n10') == '2.10714'\nassert solution('5\\n1\\n7\\n2\\n3\\n5\\n6\\n10\\n10') == '2.10714'\n"
    },
    {
        "number": 3461,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1 1 7') == '2.125'\nassert solution('2\\n1 1 7') == '2.10714'\nassert solution('3\\n1 1 7') == '2.10714'\nassert solution('4\\n1 1 7') == '2.125'\nassert solution('5\\n1 1 7') == '2.125'\n"
    },
    {
        "number": 3461,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2.125\"\n'''"
    },
    {
        "number": 3461,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1 1 7') == '2.125'\nassert solution('3\\n3 2 3\\n5 1 4\\n6 10 10') == '2.10714'\nassert solution('4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10') == '2.125'\nassert solution('5\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10') == '2.125'\nassert solution('6\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10') == '2.125'\n"
    },
    {
        "number": 3461,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n4\n1 1 7\n3 2 3\n5 1 4\n6 10 10\n''') == '2.125'\nassert solution('''\n4\n1 1 7\n3 2 3\n5 1 4\n6 10 10\n''') == '2.125'\nassert solution('''\n4\n1 1 7\n3 2 3\n5 1 4\n6 10 10\n''') == '2.125'\nassert solution('''\n4\n1 1 7\n3 2 3\n5 1 4\n6 10 10\n''') == '2.125'\nassert solution('''\n4\n1 1 7\n3 2 3\n5 1 4\n6 10 10\n''') == '2.125'\n"
    },
    {
        "number": 3461,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '2.125'\n\n---\n\n## Test Case\n\nExpected Output:\n\n$2.125$"
    },
    {
        "number": 3461,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\n7\\n1\\"
    },
    {
        "number": 3462,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('*.*') == ['main.c', 'a.out','readme', 'yacc']\nassert solution('abc.def.g.h') == ['abc.def.g.h']\nassert solution('ab*') == ['a.out']\nassert solution('a.*.c') == ['a.c']\nassert solution('ab*c') == ['a.c', 'ab.c', 'abc.c']\n"
    },
    {
        "number": 3462,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('ab*') == ''\nassert solution('abc*') == 'abc'\nassert solution('ab*c') == 'abc'\nassert solution('a*c') == 'ac'\n"
    },
    {
        "number": 3462,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('*.*', 4,'main.c', 'a.out','readme', 'yacc') == [\n    'main.c', 'a.out','readme', 'yacc'\n]\nassert solution('*', 0,'main.c', 'a.out','readme', 'yacc') == []\nassert solution('*', 1,'main.c', 'a.out','readme', 'yacc') == ['main.c']\nassert solution('*', 2,'main.c', 'a.out','readme', 'yacc') == ['main.c', 'a.out']\nassert solution('*', 3,'main.c', 'a.out','readme', 'yacc') == ['main.c', 'a.out','readme']\n"
    },
    {
        "number": 3462,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('*.*') == '*.*'\nassert solution('a.out') == 'a.out'\nassert solution('readme') =='readme'\nassert solution('main.c') =='main.c'\nassert solution('a.b.c.d') == 'a.b.c.d'\n"
    },
    {
        "number": 3462,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"*.*\") == [\"main.c\", \"a.out\", \"readme\", \"yacc\"]\nassert solution(\"*.py\") == [\"solution.py\"]\nassert solution(\"*.py\", \"test.py\") == [\"solution.py\", \"test.py\"]\nassert solution(\"abc\", \"abc\") == []\nassert solution(\"ab*\", \"abc\") == [\"ab\", \"abab\"]\n"
    },
    {
        "number": 3462,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('*.*') == ['a.out','readme', 'yacc','main.c']\nassert solution('a*') == ['a.out']\nassert solution('a.*') == ['a.out','readme']\nassert solution('*.txt') == ['main.c']\nassert solution('abc') == []\n"
    },
    {
        "number": 3462,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"ab*.c\") == \"ab*.c\"\nassert solution(\"a*\") == \"a*\"\nassert solution(\"a*.*\") == \"a*.*\"\nassert solution(\"ab*.*\") == \"ab*.*\"\nassert solution(\"*c\") == \"\"\n"
    },
    {
        "number": 3462,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('*.*') == ['main.c', 'a.out']\nassert solution('*.c') == ['main.c']\nassert solution('*.?.c') == ['main.c']\nassert solution('?a.c') == ['main.c']\nassert solution('*c') == ['main.c']\n"
    },
    {
        "number": 3462,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('*.*') == ['main.c', 'a.out']\nassert solution('*.c') == ['main.c']\nassert solution('readme') == []\nassert solution('a.*') == ['a.out']\nassert solution('c*') == ['main.c']\n"
    },
    {
        "number": 3462,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"*.*\") == [\"main.c\", \"a.out\", \"readme\", \"yacc\"]\nassert solution(\"*\") == [\"readme\"]\nassert solution(\"*.*\") == [\"main.c\", \"a.out\", \"readme\", \"yacc\"]\nassert solution(\"*.*\") == [\"main.c\", \"a.out\", \"readme\", \"yacc\"]\nassert solution(\"ab*.*\") == [\"a.out\"]\n"
    },
    {
        "number": 3463,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1''') == '0.500000'\nassert solution('''1 1''') == '0.500000'\nassert solution('''1 2''') == '0.250000'\nassert solution('''2 1''') == '0.166667'\nassert solution('''2 1''') == '0.166667'\n"
    },
    {
        "number": 3463,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1') == '0.500000'\nassert solution('0.5 1') == '0.500000'\nassert solution('0.0 1') == '0.500000'\nassert solution('0.01 1') == '0.500000'\nassert solution('0.001 1') == '0.500000'\n"
    },
    {
        "number": 3463,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 1\n0.500000''') == '0.500000'\nassert solution('''2 2\n0.5 0.5\n0.2 0.8''') == '0.166666'\nassert solution('''4 5\n0.200001 0.800001\n0.800001 0.300001\n0.300001 0.600001\n0.600001 0.200001''') == '0.1'\nassert solution('''3 3\n0.300001 0.800001\n0.800001 0.300001\n0.300001 0.600001''') == '0.666667'\nassert solution('''5 4\n0.1 0.9 0.7 0.6 0.5\n0.4 0.3 0.2 0.1 0.4''') == '0.5'\n"
    },
    {
        "number": 3463,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0.500000') == '0.500000'\nassert solution('0.70000') == '0.70000'\nassert solution('0.80000') == '0.90000'\nassert solution('0.90000') == '0.950000'\nassert solution('0.990000') == '0.990000'\n"
    },
    {
        "number": 3463,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1\\n0.500000') == '0.500000'\n"
    },
    {
        "number": 3463,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 1\n0.500000''') == '0.500000'\nassert solution('''1 1\n0.1''') == '0.1'\nassert solution('''1 1\n0.01''') == '0.01'\nassert solution('''1 1\n0.001''') == '0.001'\nassert solution('''1 1\n0.0001''') == '0.0001'\n"
    },
    {
        "number": 3463,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1') == '0.500000'\nassert solution('0.500000') == '0.500000'\nassert solution('0.999999') == '0.501000'\nassert solution('0.100000') == '0.500001'\nassert solution('0.000001') == '0.5'\n"
    },
    {
        "number": 3463,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 1\n0.500000''') == '0.500000'\nassert solution('''1 1\n0.501000''') == '0.501000'\nassert solution('''1 1\n0.001000''') == '0.001000'\nassert solution('''1 1\n0.001001''') == '0.001001'\nassert solution('''1 1\n0.001001''') == '0.001001'\n"
    },
    {
        "number": 3463,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0.5\") == \"0.500000\"\nassert solution(\"0.000000\") == \"0.000000\"\nassert solution(\"0.999999\") == \"0.999999\"\nassert solution(\"0.5\") == \"0.500000\"\nassert solution(\"0.00000000000001\") == \"0.00000000000001\"\n"
    },
    {
        "number": 3463,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 1\n0.500000''') == '0.500000'\nassert solution('''1 2\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000''') == '0.500000'\nassert solution('''1 4\n0.1000000\n0.1000000\n0.1000000\n0.1000000\n0.1000000\n0.1000000''') == '0.50000'\nassert solution('''1 5\n0.69999\n0.69999\n0.69999\n0.69999\n0.69999\n0.69999''') == '0.69999'\nassert solution('''1 100\n0.30000\n0.30000\n0.30000\n0.30000\n0.30000\n0.30000''') == '0.30000'\n"
    },
    {
        "number": 3464,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 49.9') == '0.0'\nassert solution('1 49.9') == '0.0'\nassert solution('2 49.9') == '0.0'\nassert solution('99 49.9') == '0.0'\nassert solution('99 50.0') == '0.0'\n"
    },
    {
        "number": 3464,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0 49.9\") == \"0.0\"\nassert solution(\"0 49.9\") == \"0.0\"\nassert solution(\"0 49.9\") == \"0.0\"\nassert solution(\"0 49.9\") == \"0.0\"\nassert solution(\"0 49.9\") == \"0.0\"\n"
    },
    {
        "number": 3464,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''0 49.9\n100 49.9\n50 49.9\n0 0.001\n100 0.001\n0 0.01\n0 0.1\n0 0.2\n0 0.3\n0 0.4\n0 0.5\n0 0.6\n0 0.7\n0 0.8\n0 0.9\n0.1\n0.2\n0.3\n0.4\n0.5\n0.6\n0.7\n0.8\n0.9\n1.0''') == '0.000'\nassert solution('''0 0.001\n0 0.1\n0 0.2\n0 0.3\n0 0.4\n0 0.5\n0 0.6\n0 0.7\n0 0.8\n0 0.9\n1.0''') == '0.000'\nassert solution('''0 0.1\n0 0.2\n0 0.3\n0 0.4\n0 0.5\n0 0.6\n0 0.7\n0 0.8\n0 0.9\n1.0''') == '0.000'\nassert solution('''0 0.1\n0 0.2\n0 0.3\n0 0.4\n0 0.5\n0 0.6\n0 0.7\n0 0.8\n0 0.9\n1.0''') == '0.000'\nassert solution('''0 0.1\n0 0.2\n0 0.3\n0 0.4\n0 0.5\n0 0.6\n0 0.7\n0 0.8\n0 0.9\n1.0''') == '0.000'\n"
    },
    {
        "number": 3464,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(0.9) == \"0.00\"\nassert solution(0.99) == \"0.00\"\nassert solution(0.999) == \"0.00\"\nassert solution(0.99999) == \"0.00\"\nassert solution(0.999999) == \"0.00\"\n"
    },
    {
        "number": 3464,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 49.9') == '0.0'\n\n\"\"\"\n"
    },
    {
        "number": 3464,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3464,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 49.9') == '0.0'\nassert solution('0 49') == '0.0'\nassert solution('0 49.0') == '0.0'\nassert solution('0 49.9') == '0.0'\nassert solution('1 49.9') == '1.0'\n"
    },
    {
        "number": 3464,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    '0 49.9'\n) == '0.000'\n\nassert solution(\n    '10 49.9'\n) == '-0.001'\n\nassert solution(\n    '90 49.9'\n) == '-0.002'\n\nassert solution(\n    '0 0.9'\n) == '0.000'\n\nassert solution(\n    '10 0.9'\n) == '-0.001'"
    },
    {
        "number": 3464,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0 49.9\") == \"0.0\"\nassert solution(\"0 49.99\") == \"0.0\"\nassert solution(\"0 49.999\") == \"0.0\"\nassert solution(\"0 49.999\") == \"0.0\"\nassert solution(\"0 49.999\") == \"0.0\"\n"
    },
    {
        "number": 3464,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(0, 49.9) == \"0.0\"\nassert solution(0, 49.9) == \"0.0\"\nassert solution(0, 50) == \"0.0\"\nassert solution(0, 0) == \"0.0\"\nassert solution(0, 0.0) == \"0.0\"\n"
    },
    {
        "number": 3465,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n2\n2\n1 2\n3 1\n2 1\n\"\"\") == \"\"\"\n4 1\n2 1\n3 2\n1 3\n\"\"\"\n"
    },
    {
        "number": 3465,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nn = int(input())\nroads = [tuple(map(int, input().split())) for _ in range(n - 1)]\n\nroads = sorted(roads, key=lambda x: x[1])\nroads = sorted(roads, key=lambda x: x[0])\n\nroads = [(a, b) for a, b in roads if a!= b]\nroads = sorted(roads, key=lambda x: x[0])\n\nfor a, b in roads:\n    print(a, b)\n"
    },
    {
        "number": 3465,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"1\n    2\n    2\n    1\n    1\n    \"\"\"\n) == \"\"\"4 1\n2 1\n2 3\n3 2\n1 3\n\"\"\"\n"
    },
    {
        "number": 3465,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n1 2\n2 3\n3 1\n4 1''') == '4 1'\nassert solution('''4\n1 2\n2 3\n3 1\n1 4\n1 3\n4 1\n1 2\n2 3\n1 4\n1 3\n3 1\n4 1\n2 1\n2 3\n1 4\n1 3\n1 2\n3 1\n4 1\n1 2\n2 3\n1 4\n1 3\n3 1\n4 1''') == '1 3'\nassert solution('''3\n2 1\n3 1\n2 2\n1 1\n1 2\n1 1\n2 1\n1 2\n1 1\n2 1\n1 1\n1 1\n1 1\n2 2\n1 2\n1 2\n1 1\n1 1\n2 1\n1 2\n1 1\n1 1\n1 1\n2 1\n1 1\n1 1\n2 2\n1 2\n1 1\n1 1\n1 1\n2 1\n1 2\n1 1\n1 1\n1 1\n1 2\n1 1\n1 1\n1 1\n1 1\n1 1\n2 1\n1 2\n1 1\n1 1\n1 1\n1 1\n2 1\n1 2\n1 1\n1 1\n1 1\n1 1\n1 1\n2 1\n1 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n2 1\n1 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n2 1\n1 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n2 1\n1 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n2 1\n1 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1"
    },
    {
        "number": 3465,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(open(\"test_input.txt\", \"r\").read()) == open(\"test_output.txt\", \"r\").read()\nprint(solution(open(\"input.txt\", \"r\").read()))\nassert solution(open(\"test_input.txt\", \"r\").read()) == open(\"test_output.txt\", \"r\").read()\nprint(solution(open(\"input.txt\", \"r\").read()))\n"
    },
    {
        "number": 3465,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 1\\n4 1') == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution('4\\n1 2\\n2 3\\n3 1\\n4 2') == \"4 1\\n2 1\\n3 2\"\nassert solution('4\\n1 2\\n2 3\\n3 1\\n4 2\\n3 2') == \"4 1\\n2 1\\n3 2\"\nassert solution('5\\n1 2\\n2 3\\n3 1\\n4 1\\n4 1\\n4 1') == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution('5\\n1 2\\n2 3\\n3 1\\n4 1\\n5 1\\n4 1') == \"4 1\\n2 1\\n3 2\\n1 3\"\n"
    },
    {
        "number": 3465,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5 3\\n1 2\\n2 3\\n3 1\\n4 1\\n3 4\\n3 4\\n2 1\") == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(\"4 4\\n1 2\\n2 3\\n3 4\\n4 1\\n1 3\\n3 1\\n2 4\") == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(\"10 9\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 1\") == \"9 1\\n1 3\\n3 1\\n2 4\\n4 5\\n5 6\\n6 7\\n7 8\"\nassert solution(\"5 4\\n1 2\\n2 3\\n3 4\\n4 1\\n1 3\\n3 1\\n2 4\") == \"4 1\\n2 1\\n3 2\\n1 3\"\n"
    },
    {
        "number": 3465,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n2 3\\n3 1\\n4 1\\n1 3\") == '4 1\\n2 1\\n3 2\\n1 3'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3465,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n1 2\n2 3\n3 1''') == '4 1'\nassert solution('''5\n1 2\n1 3\n3 4\n3 5\n2 4\n1 3\n2 3\n1 4\n3 4\n''') == '1 3 2'\nassert solution('''10\n1 2\n2 3\n3 4\n3 5\n4 5\n1 6\n6 5\n6 7\n5 6\n7 6\n1 2\n1 5\n2 4\n4 1\n1 4\n2 3\n2 6\n3 1\n4 1\n1 6\n2 7\n3 8\n4 9\n5 1\n6 1\n7 2\n8 2\n9 1\n10 3\n1 3\n2 4\n3 6\n4 6\n2 1\n1 4\n2 7\n3 3\n3 5\n4 8\n5 1\n6 2\n7 1\n8 1\n9 3\n10 5\n2 2\n1 5\n3 7\n4 8\n5 1\n6 2\n7 1\n8 3\n9 2\n1 2\n2 3\n1 3\n1 5\n1 7\n2 2\n3 2\n4 1\n5 1\n6 4\n7 2\n8 3\n9 2\n1 4\n1 4\n2 3\n3 2\n3 2\n4 1\n5 1\n6 4\n7 2\n8 3\n9 2\n1 2\n1 2\n2 3\n1 3\n1 2\n1 5\n1 7\n2 2\n3 2\n4 1\n1 4\n2 3\n3 2\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2\n4 1\n1 4\n2 3\n3 2"
    },
    {
        "number": 3465,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(read_input(__file__)) == read_expected(__file__)\n"
    },
    {
        "number": 3466,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"6 5\n2 1 6 3 5 3\n1 2 5 3 5\"\"\") == \"1\"\nassert solution(\n    \"\"\"6 5\n2 1 6 3 5 3\n1 2 5 3 5\"\"\") == \"forever\"\nassert solution(\n    \"\"\"6 5\n2 1 6 3 5 3\n1 1 1 1 1 1\"\"\") == \"forever\"\nassert solution(\n    \"\"\"6 5\n2 1 6 3 5 3\n2 1 1 1 1 1\"\"\") == \"forever\"\nassert solution(\n    \"\"\"6 5\n2 1 6 3 5 3\n2 1 1 1 1 1\"\"\") == \"1\"\n"
    },
    {
        "number": 3466,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n6\\n3\\n5\\n3\\n5\\n3') == '1'\nassert solution('2\\n3\\n5\\n3\\n6\\n1') == '1'\nassert solution('1\\n2\\n3\\n5\\n3\\n6\\n1') == '1'\nassert solution('1\\n2\\n3\\n5\\n3\\n6\\n4') == '4'\nassert solution('1\\n2\\n3\\n5\\n3\\n6\\n10') == '10'\n"
    },
    {
        "number": 3466,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '1'\nassert solution('2 1 6 3 5 3') == '1'\nassert solution('1 2 5 3 5 3') == 'forever'\nassert solution('1 2 1 2 3 3 3 3 3 4 4 5 5 5 5') == 'forever'\nassert solution('2 1 4 5 3 5 3') == '0'\n"
    },
    {
        "number": 3466,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6 5\n2 1 6 3 5 3\n1 2 5 3 5\n''') == '1'\nassert solution('''3 3\n1 1\n2 1\n1 1\n''') == '0'\nassert solution('''3 3\n1 1\n1 1\n1 1\n''') == 'inf'\nassert solution('''3 3\n2 2\n1 1\n1 1\n''') == 'inf'\nassert solution('''3 3\n1 1\n1 1\n2 2\n''') == 'inf'\n"
    },
    {
        "number": 3466,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"forever\"\n\n-----\n- the first line contains 2 integers, $m$ and $k$, which is the number of types of sweet and the number of sweets Danny has already eaten\n- the second line contains $m$ positive integers $a_1, \\ldots, a_ m$\n- the third line contains $k$ integers $b_1, \\ldots, b_ k$\n- the output is either the word \"forever\" or an integer, $n$, that is the maximum number of sweet Danny can buy and eat while maintaining his diet continuously balanced\n\n- the number of sweets that Danny can buy and eat is the minimum of the following:\n- the maximum number of sweet Danny can buy and eat after eating one sweet per day, if there is no upper limit on the number of sweets\n- the maximum number of sweet Danny can buy and eat after eating one sweet per day, if there is an upper limit on the number of sweets\n- the maximum number of sweet Danny can buy and eat after eating one sweet per day, if there is an upper limit on the number of sweet and the number of sweets is strictly less than the number of sweets that Danny has already eaten\n- the maximum number of sweet Danny can buy and eat after eating one sweet per day, if there is an upper limit on the number of sweets and the number of sweets is less than or equal to the number of sweet that Danny has already eaten\n- the maximum number of sweet Danny can buy and eat after eating one sweet per day, if there is an upper limit on the number of sweets and the number of sweet that Danny has already eaten is equal to the number of sweet that Danny has already eaten\n- the maximum number of sweet Danny can buy and eat after eating one sweet per day, if there is an upper limit on the number of sweets and the number of sweet that Danny has already eaten is less than the number of sweet that Danny has already eaten\n- the maximum number of sweet Danny can buy and eat after eating one sweet per day, if there is an upper limit on the number of sweets and the number of sweet that Danny has already eaten is equal to the number of sweet that Danny has already eaten\n- the maximum number of sweet Danny can buy and eat after eating one sweet per day, if there is an upper limit on the number of sweets and the number of sweet that Danny has already eaten is greater than the number of sweet that Danny has already eaten\n- the maximum number of sweet Danny can buy and eat after eating one sweet per day, if there is an upper limit on the number of sweets and the number of sweet that Danny has already eaten is greater than or equal to the number of sweet that Danny has already eaten\n- the maximum number of sweet Danny can buy and eat after eating one sweet per day, if there is an upper limit on the number of sweets and the number of sweet that Danny has already eaten is strictly greater than the number of sweet that Danny has already eaten\n- the maximum number of sweet Danny can buy and eat after eating one sweet per day, if there is an upper limit on the number of sweets and the number of sweet that Danny has already eaten is strictly greater than or equal to the number of sweet that Danny has already eaten\n- the maximum number of sweet Danny can buy and eat after eating one sweet per day, if there is an upper limit on the number of sweets and the number of sweet that Danny has already eaten is greater than the number of sweet that Danny has already eaten\n- the maximum number of sweet Danny can buy and eat after eating one sweet per day, if there is an upper limit on the number of sweets and the number of sweet that Danny has already eaten is greater than or equal to the number of sweet that Danny has already eaten\n- the maximum number of sweet Danny can buy and eat after eating one sweet per day, if there is an upper limit on the number of sweets and the number of sweet that Danny has already eaten is less than the number of sweet that Danny has already eaten\n- the maximum number of sweet Danny can buy and eat after eating one sweet per day, if there is an upper limit on the number of sweets and the number of sweet that Danny has already eaten is less than or equal to the number of sweet that Danny has already eaten\n- the maximum number of sweet Danny can buy and eat after eating one sweet per day, if there is an upper limit on the number of sweets and the number of sweet that Danny has already eaten is equal to the number of sweet that Danny has already eaten\n- the maximum number of sweet Danny can buy and eat after eating one sweet per day, if there is an upper limit on the number of sweets and the number of sweet that Danny has already eaten is less than the number of sweet that Danny has already eaten\n- the maximum number of sweet Danny can buy and eat after eating one sweet per day, if there is an upper limit on the number of sweets and the number of sweet that Danny has already eaten is equal to the number of sweet that Danny has already eaten\n- the maximum number of sweet Danny can buy and eat after eating one sweet per day, if there is an upper limit on the number of sweets and the number of sweet that Danny has already eaten is greater than the number of sweet that Danny has already eaten\n- the maximum number of sweet Danny can buy and eat after eating one sweet per day, if there is an upper limit on the number of sweets and the number of sweet that Danny has already eaten is greater than or equal to the number of sweet that Danny has already eaten\n- the maximum number of sweet Danny can buy and eat after eating one sweet per day, if there is an upper limit on the number of sweets and the number of sweet that Danny has already eaten is strictly greater than the number of sweet that Danny has already eaten\n- the maximum number of sweet Danny can buy and eat after eating one sweet per day, if there is an upper limit on the number of sweets and the number of sweet that Danny has already eaten is strictly greater than or equal to the number of sweet that Danny has already eaten\n- the maximum number of sweet Danny can buy and eat after eating one sweet per day, if there is an upper limit on the number of sweets and the number of sweet that Danny has already eaten is equal to the number of sweet that Danny has already eaten\n- the maximum number of sweet Danny can buy and eat after eating one sweet per day, if there is an upper limit on the number of sweets and the number of sweet that Danny has already eaten is less than the number of sweet that Danny has already eaten\n\nNote: The number of sweet that Danny has already eaten is strictly less than the number of sweet that Danny has already eaten. If the condition is actually true, it is possible to have all the sweet and still"
    },
    {
        "number": 3466,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6 5\n2 1 6 3 5 3\n1 2 5 3 5\n''') == '1'\nassert solution('''6 5\n2 1 6 3 5 3\n1 2 5 3 5\n''') == 'forever'\nassert solution('''6 5\n2 1 6 3 5 3\n1 2 5 3 5\n''') == 'forever'\nassert solution('''6 5\n2 1 6 3 5 3\n1 2 5 3 5\n''') == '1'\nassert solution('''6 5\n2 1 6 3 5 3\n1 2 5 3 5\n''') == '2'\n"
    },
    {
        "number": 3466,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1\"\n\nSample Input:\n6 7\n2 1 6 3 5 3\n1 2 5 3 5\nSample Output:\n2\nassert solution(stdin) == \"2\"\n\nSample Input:\n6 8\n2 1 6 3 5 3\n1 2 5 3 5\nSample Output:\nforever\nassert solution(stdin) == \"forever\"\n\nSample Input:\n7 10\n1 1 1 1 1 1 1\n1 2 3 4 5 6 7\nSample Output:\n4\nassert solution(stdin) == \"4\"\n\n-----Note----\nIn the first test case, the set of sweets is balanced for $k$ = 1.\nIn the second test case, the set of sweets is balanced for $k$ = 2.\nIn the third test case, the set of sweets is balanced for $k$ = 3.\nIn the fourth test case, the set of sweets is balanced for $k$ = 4.\nIn the fifth test case, the set of sweets is balanced for $k$ = 5.\nIn the sixth test case, the set of sweets is balanced for $k$ = 6.\nIn the seventh test case, the set of sweets is balanced for $k$ = 7.\nIn the eighth test case, the set of sweets is balanced for $k$ = 8.\n\"\"\"\n"
    },
    {
        "number": 3466,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"forever\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 3 3 2\") == \"forever\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 3 3 2\\n1 1\") == \"1\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 3 3 2\\n1 1\\n1 1\") == \"forever\"\n"
    },
    {
        "number": 3466,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"6 5\") == \"1\"\nassert solution(\"6 5\") == \"1\"\nassert solution(\"3 2\") == \"forever\"\nassert solution(\"6 3\") == \"forever\"\nassert solution(\"2 1 5 3 5 3\") == \"forever\"\n"
    },
    {
        "number": 3466,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '1'\n\"\"\"\n"
    },
    {
        "number": 3467,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 1 10') == '3'\nassert solution('1 2 1 1 1') == '3'\nassert solution('0 2 1 1 1') == 'impossible'\nassert solution('0 1 1 1 1') == 'impossible'\nassert solution('2 1 1 2 6') == '3'\n"
    },
    {
        "number": 3467,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0\n1\n1\n1\n0\n1\n0\n''') == '3'\nassert solution('''1\n1\n1\n1\n0\n1\n0\n''') == '3'\nassert solution('''1\n1\n1\n1\n0\n1\n0\n''') == '3'\nassert solution('''1\n1\n1\n1\n0\n1\n0\n''') == '3'\nassert solution('''1\n1\n1\n1\n0\n1\n0\n''') == '3'\n"
    },
    {
        "number": 3467,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''2 1 10''') == '3'\nassert solution(\n'''2 1 10'''\n) == '3'\nassert solution(\n'''1 1 1 1 1''') == 'impossible'\n'''\nimport sys\nfrom functools import lru_cache\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 3467,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2 3 4 5') == \"3\"\nassert solution('2\\n3 2 1 1 2') == \"impossible\"\nassert solution('2\\n1 2 1 1 2') == \"2\"\nassert solution('3\\n1 2 1 1 2 3') == \"impossible\"\nassert solution('2\\n1 3 3 1 1 2') == \"2\"\n"
    },
    {
        "number": 3467,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 1 1 2 6') == '3'\nassert solution('1 2 1 2 1') == '1'\nassert solution('2 1 2 3 1') == 'impossible'\nassert solution('3 2 1 3 1') == 'impossible'\nassert solution('4 3 2 3 1') == 'impossible'\n"
    },
    {
        "number": 3467,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 1 10\\n0 1 1 2 6\\n') == '3'\nassert solution('2 1 10\\n0 1 1 2 6\\n') == '3'\nassert solution('2 1 10\\n0 1 1 2 6\\n') == '3'\nassert solution('2 1 10\\n0 1 1 2 6\\n') == '3'\nassert solution('2 1 10\\n0 1 1 2 6\\n') == '3'\n"
    },
    {
        "number": 3467,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(open(\"data/problem_00_data.txt\").read()))\n"
    },
    {
        "number": 3467,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 1 10') == '3'\nassert solution('0 1 1 2 6') == '3'\nassert solution('0 1 1 2 6') == '3'\nassert solution('0 1 1 2 6') == '3'\nassert solution('0 1 1 2 6') == '3'\n"
    },
    {
        "number": 3467,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 1 1 2 6') == 3\nassert solution('0 1 1 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6') == 3\nassert solution('2 1 10\\n0 1 1 2 6\\n0 1 2 2 6\\n0 1 2 2 6') == 3\nassert solution('2 1 10\\n0 1 1 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6') == 3\nassert solution('2 1 10\\n0 1 1 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2 6\\n0 1 2 2"
    },
    {
        "number": 3467,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 1 10\") == \"3\"\nassert solution(\"2 10 1\") == \"3\"\nassert solution(\"100 1 1\") == \"3\"\nassert solution(\"2 10 1\") == \"3\"\nassert solution(\"0 1 1 2 6\") == \"3\"\n"
    },
    {
        "number": 3468,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 100\\n99 1\\n1 99\\n' == solution('2 100\\n99 1\\n1 99\\n'))\nassert solution('2 10\\n99 1\\n1 99\\n' == solution('2 100\\n99 1\\n1 99\\n'))\nassert solution('2 10\\n99 1\\n1 99\\n' == solution('2 10\\n99 1\\n1 99\\n'))\nassert solution('2 10\\n99 1\\n1 99\\n' == solution('2 10\\n99 1\\n1 99\\n'))\nassert solution('2 10\\n99 1\\n1 99\\n' == solution('2 10\\n99 1\\n1 99\\n'))\n"
    },
    {
        "number": 3468,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2') == '1 2'\nassert solution('2\\n2\\n1') == '1 2'\nassert solution('2\\n99\\n1') == '1 2'\nassert solution('2\\n2\\n1') == '1 2'\nassert solution('2\\n99\\n100') == '1 2'\n"
    },
    {
        "number": 3468,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 100\\n99 1\\n1 99') == '2\\n1 2'\nassert solution('1 100\\n99 1\\n1 99\\n2 99') == '2\\n1 2'\nassert solution('1 100\\n99 1\\n1 99\\n2 1') == '1\\n2'\nassert solution('1 100\\n99 1\\n1 99\\n2 2') == '2\\n1'\nassert solution('1 100\\n99 1\\n1 99\\n2 3') == '3\\n1 2'\n"
    },
    {
        "number": 3468,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 100\\n99 1\\n1 99\\n') == '2\\n1 2'\nassert solution('2 100\\n99 1\\n1 99\\n') == '1\\n2'\nassert solution('2 100\\n99 1\\n1 99\\n') == '2\\n1 2'\nassert solution('2 100\\n99 1\\n1 99\\n') == '2\\n1 2'\nassert solution('2 100\\n99 1\\n1 99\\n') == '2\\n1 2'\n"
    },
    {
        "number": 3468,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 100\\n99 1\\n1 99') == '2\\n1 2'\nassert solution('2 100\\n99 1\\n1 99\\n1 99\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\n99 1\\"
    },
    {
        "number": 3468,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 100\n99 1\n1 99''') == '1 2'\nassert solution('''1 100\n99 1\n1 99''') == '2'\nassert solution('''1 100\n99 1\n1 99\n1 99\n1 99\n1 99\n1 99''') == '2'\nassert solution('''1 100\n99 1\n1 99\n1 99\n1 99\n1 99\n1 99\n1 99''') == '2 1'\nassert solution('''1 100\n99 1\n1 99\n1 99\n1 99\n1 99\n1 99\n1 99''') == '1 2'\n"
    },
    {
        "number": 3468,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 100\\n99 1\\n1 99\\n\") == \"2\\n1 2\\n\"\nassert solution(\"1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n\") == \"\"\"2\n1 2\n\"\"\"\n"
    },
    {
        "number": 3468,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 100\n99 1\n1 99''') == '2'\nassert solution('''2 100\n99 1\n1 99''') == '2'\nassert solution('''2 100\n99 1\n2 99''') == '1'\nassert solution('''2 100\n99 1\n99 1''') == '2'\nassert solution('''2 100\n99 1\n100 1''') == '2'\n"
    },
    {
        "number": 3468,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == ''\n\"\"\"\n\nfrom sys import stdin"
    },
    {
        "number": 3468,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 100\n99 1\n1 99''') == \"2\\n1 2\"\nassert solution('''2 100\n99 1\n1 99\n1 1''') == \"2\\n1 2\"\nassert solution('''3 10000\n0 1\n100 1\n1000 1\n99 1000''') == \"3\\n1 2 3\"\nassert solution('''3 100000\n0 1\n100 1\n1000 1\n99 1000\n99 1''') == \"3\\n1 2 3\"\nassert solution('''3 100000\n0 1\n100 1\n1000 1\n99 1000\n99 1\n1 1''') == \"3\\n1 2 3\"\n"
    },
    {
        "number": 3469,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('H' * 10, 'T' * 10, 0.5) == '0.5'\nassert solution('H' * 10, 'T' * 10, 0.99) == '1.0'\nassert solution('H' * 10, 'T' * 10, 0.01) == '0.0'\nassert solution('H' * 10, 'T' * 10, 0.499) == '1.0'\nassert solution('H' * 10, 'T' * 10, 0.499999) == '0.0'\n"
    },
    {
        "number": 3469,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('H\\nT') == '1.0'\nassert solution('HTHT') == '0.5'\nassert solution('HTT') == '0.0'\nassert solution('TTH') == '0.0'\nassert solution('HTH') == '0.0'\n"
    },
    {
        "number": 3469,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"H\") == \"0.5\"\nassert solution(\"HH\") == \"0.0\"\nassert solution(\"HHT\") == \"0.25\"\nassert solution(\"HHHH\") == \"0.125\"\nassert solution(\"HHTT\") == \"0.0625\"\n"
    },
    {
        "number": 3469,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 0\nassert solution('H') == 1\nassert solution('HT') == 0\nassert solution('HTH') == 0\nassert solution('HTHT') == 0.5\n"
    },
    {
        "number": 3469,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('H') == '0.5'\nassert solution('HT') == '0'\nassert solution('HT') == '0'\nassert solution('HT') == '0'\nassert solution('HT') == '0'\n"
    },
    {
        "number": 3469,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('H\\nT') == '0.5'\nassert solution('H\\nT') == '0.5'\nassert solution('H\\nT') == '0.5'\nassert solution('H\\nT') == '0.5'\nassert solution('H\\nT') == '0.5'\n"
    },
    {
        "number": 3469,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''H\nT''') == '0.5'\nassert solution('''H\nH\n0.5''') == '0.5'\nassert solution('''H\nH\n0.9''') == '0.5'\nassert solution('''H\nT\n0.1''') == '0.5'\nassert solution('''H\nH\n0.05''') == '0.5'\n"
    },
    {
        "number": 3469,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''H\nT''') == '0.5'\nassert solution('''TT\nTT''') == '0.5'\nassert solution('''HT\nTT''') == '0.5'\nassert solution('''TT\nHT''') == '0.5'\nassert solution('''HT\nTT''') == '0.5'\n"
    },
    {
        "number": 3469,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('H') == 0.5\nassert solution('TT') == 0.0\nassert solution('HH') == 1.0\nassert solution('TTTT') == 0.0\nassert solution('TTTTTTTT') == 0.0\n"
    },
    {
        "number": 3469,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == '0'\nassert solution('H') == '1'\nassert solution('HTH') == '1'\nassert solution('HTHH') == '1'\nassert solution('HTHHT') == '1'\n"
    },
    {
        "number": 3470,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"3\\n\") == \"\"\nassert solution(\"3\\n0 1 0\") == \"1\"\nassert solution(\"3\\n0 0 0\") == \"1\"\n"
    },
    {
        "number": 3470,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n3\n''') == '8'\nassert solution('''\n6\n''') == '15'\nassert solution('''\n3\n4\n3\n2\n1\n''') == '9'\nassert solution('''\n3\n1\n2\n3\n''') == '9'\nassert solution('''\n3\n5\n6\n7\n8\n''') == '3'\n'''\n"
    },
    {
        "number": 3470,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"3 2\") == \"1\"\n"
    },
    {
        "number": 3470,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n3\n5\n7\n9\n1\n''') == '1 3 5 7 9'\nassert solution('''8\n8\n7\n9\n5\n4\n1\n3\n2\n''') == '1 3 5 7 9'\nassert solution('''5\n5\n5\n5\n5\n5\n5\n''') == '1 2 3 4'\nassert solution('''6\n6\n6\n6\n6\n6\n6\n''') == '1 3 5 7 9 11'\nassert solution('''7\n7\n7\n7\n7\n7\n7\n7\n''') == '1 3 5 7'\n"
    },
    {
        "number": 3470,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"1 3 5 7 9 11 13 15\"\nassert solution(\"5\") == \"1 3 5 7 9 11 13 15\"\nassert solution(\"8\") == \"1 3 5 7 9 11 13 15\"\nassert solution(\"13\") == \"1 3 5 7 9 11 13 15\"\nassert solution(\"34\") == \"1 3 5 7 9 11 13 15\"\n"
    },
    {
        "number": 3470,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n''') == '1 3'\nassert solution('''5\n''') == '1 3 4 5 8'\nassert solution('''9\n''') == '1 3 4 5 7 8 9'\nassert solution('''12\n''') == '1 3 4 5 6 7 9 10 11 12'\n'''\n"
    },
    {
        "number": 3470,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('1\\n') == ''\nassert solution('1\\n2') == '1\\n2'\nassert solution('1\\n2\\n3') == '1\\n2\\n3'\n"
    },
    {
        "number": 3470,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3''') == '8'\nassert solution('''1''') == '1'\nassert solution('''15''') == '8'\nassert solution('''30''') == '81'\nassert solution('''50''') == '73'\n"
    },
    {
        "number": 3470,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n1\n\"\"\") == \"8\\n1 3 5 7 9 11 13 15\"\nassert solution(\"\"\"\n2\n\"\"\") == \"8\\n1 3 4 5 6 7 8\"\nassert solution(\"\"\"\n3\n\"\"\") == \"8\\n1 3 4 5 6 7 8\"\nassert solution(\"\"\"\n4\n\"\"\") == \"8\\n1 3 4 5 6 7 8\"\nassert solution(\"\"\"\n5\n\"\"\") == \"8\\n1 3 4 5 6 7 8\"\n"
    },
    {
        "number": 3470,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n'''\n"
    },
    {
        "number": 3471,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 3 5 7\n3\n2 2\n2 5\n1 5\n''') == '3\\n1\\n0\\n'\nassert solution('''4\n2\n1 2\n3 4\n2 3\n5\n1 2\n3 4\n2 3\n5\n1 2\n3 4\n2 3\n''') == '3\\n1\\n0\\n'\n\nprint(solution('''6\n1 3 5 7 9 11\n6\n2 2\n2 5\n1 5\n3 3\n2 4\n2 4\n2 6\n2 4\n2 4\n'''))\n"
    },
    {
        "number": 3471,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n1 3 5 7\n3\n2 2\n2 5\n1 5\n''') == '''3\n1\n0\n'''\n\nassert solution('''4\n1 3 5 7\n3\n2 2\n2 5\n1 5\n''') == '''3\n1\n0\n'''\n\nassert solution('''4\n2 1 3 1\n4\n1 1\n1 2\n1 3\n1 4\n2 2\n2 3\n2 4\n3 3\n3 4\n''') == '''4\n2\n4\n2\n1\n1\n'''\n\nassert solution('''4\n2 1 3 1\n4\n1 1\n1 2\n1 3\n1 4\n2 2\n2 3\n2 4\n3 3\n3 4\n''') == '''4\n2\n4\n2\n1\n1\n'''\n\nassert solution('''4\n1 3 5 7\n4\n2 2\n2 5\n1 5\n''') == '''3\n1\n0\n'''"
    },
    {
        "number": 3471,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n') == '1\\n0\\n0\\n0\\n0\\n1\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0"
    },
    {
        "number": 3471,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(sys.stdin.read()))\n"
    },
    {
        "number": 3471,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"4\n1 3 5 7\n3\n2 2\n2 5\n1 5\"\"\") == \"\"\"3\n1\n0\n\"\"\"\n\nassert solution(\"\"\"4\n1 3 5 7\n3\n2 2\n2 5\n1 5\n1 5\n2\n2\n1\n2\n1\n1\n1\n1\n2\n2\n2\n2\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n2\n1\n1\n2\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 3471,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n1 3 5 7\n3\n2 2\n2 5\n1 5''') == '3\\n1\\n0\\n'\nassert solution('''7\n1 3 5 7\n3\n2 2\n2 5\n1 5\n3\n3\n3\n3''') == '1\\n3\\n3\\n'\nassert solution('''10\n1 2 4 8 16 32 64 128 256''') == '2\\n1\\n'\nassert solution('''10\n1 2 4 8 16 32 64 128 256''') == '2\\n1\\n'\nassert solution('''8\n1 2 4 8 16 32 64 128 256''') == '4\\n0\\n1\\n'\n"
    },
    {
        "number": 3471,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\") == \"3\\n1\\n0\"\nassert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\") == \"3\\n1\\n0\\n1\\n1\"\nassert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n1 5\\n2 2\\n2 5\\n"
    },
    {
        "number": 3471,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5') == '3\\n1\\n0\\n'\nassert solution('2\\n1\\n1') == '1\\n'\nassert solution('2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1\\n'\nassert solution('2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 3471,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 3471,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3472,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 3472,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 1 -2 0\n2 1 -2 0''') == '0'\nassert solution('''1 1 -2 0\n1 1 -2 0''') == '0'\nassert solution('''1 1 -2 0\n1 1 -2 0\n1 1 -2 0''') == '0'\nassert solution('''1 1 -2 0\n1 1 -2 0\n2 1 -2 0''') == '1'\nassert solution('''1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0''') == '1'\n"
    },
    {
        "number": 3472,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 1\n1 1 -2 0''') == '0'\nassert solution('''2 1\n1 1 -2 0\n1 1 -2 0''') == '0'\nassert solution('''2 10\n1 -2 -1 1\n1 -2 1 1\n-1 1 -1 -1\n1 1 1 1''') == '7'\nassert solution('''2 1\n-1 -1 1 1\n1 1 1 1''') == '5'\nassert solution('''2 1\n1 1 -2 0\n-1 1 -2 0''') == '0'\n"
    },
    {
        "number": 3472,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 3472,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 1\n1 1 -2 0''') == '0'\nassert solution('''3 2\n1 1 0 0\n1 1 0 0\n-1 -1 0 0''') == '1'\nassert solution('''4 2\n1 1 0 0\n1 1 0 0\n1 1 0 0\n-1 -1 0 0''') == '1'\nassert solution('''5 2\n1 1 0 0\n1 1 0 0\n1 1 0 0\n1 1 0 0\n1 1 0 0''') == '2'\nassert solution('''8 2\n1 1 0 0\n1 1 0 0\n1 1 0 0\n1 1 0 0\n1 1 0 0\n1 1 0 0\n1 1 0 0\n1 1 0 0''') == '4'\n"
    },
    {
        "number": 3472,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 1\n1 1 -2 0''') == 0\nassert solution('''2 1\n1 1 -2 1\nSample Output:\n0\nassert solution('''2 1\n1 1 -2 1\n''') == 0\nassert solution('''3 3\n2 1 -1 1\n-1 2 -1 1\n1 -1 2 1\n''') == 2\nassert solution('''3 3\n2 1 -1 1\n-1 2 -1 1\n1 -1 2 1\n''') == 1\n"
    },
    {
        "number": 3472,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n1 1 -2 0\\n1 1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1 1\\n1 1 -1 1\") == \"1\"\nassert solution(\"1 1\\n-2 2\\n2 1 1 1\\n1 1 -1 1\") == \"2\"\nassert solution(\"1 1\\n1 -2\\n2 1 1 1\\n1 1 -1 1\") == \"3\"\nassert solution(\"1 1\\n1 1 -1\\n2 1 1 1\\n1 1 -1 1\") == \"4\"\n"
    },
    {
        "number": 3472,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"1 1 -2 0\"\n) == 0\nassert solution(\n\"1 1 -2 0\"\n) == 0\nassert solution(\n\"1 1 -2 0\"\n) == 0\nassert solution(\n\"1 1 -2 0\"\n) == 0\nassert solution(\n\"1 1 -2 0\"\n) == 0\n"
    },
    {
        "number": 3472,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n1 1 -2 0\n''') == '0'\nassert solution('''\n2 1\n1 1 -2 0\n''') == '1'\nassert solution('''\n3 1\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n''') == '1'\nassert solution('''\n4 1\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n''') == '2'\nassert solution('''\n6 1\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n''') == '2'\n"
    },
    {
        "number": 3472,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\\\n2 1\n1 1 -2 0\n''') == '0'\nassert solution('''\\\n1 1\n1 1 -2 0\n''') == '1'\nassert solution('''\\\n1 1\n1 1 -2 0\n1 1 2 0\n''') == '2'\nassert solution('''\\\n1 1\n1 1 -2 0\n1 1 2 0\n1 1 2 0\n''') == '2'\nassert solution('''\\\n2 2\n1 1 -2 0\n1 1 2 0\n''') == '1'\n"
    },
    {
        "number": 3473,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''2\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23'''\n) == '194'\n\nassert solution(\n'''3\n2\n1999 10 07\n1999 10 07\n2000 10 07\n2000 10 07\n2000 10 07'''\n) == '163'\n\nassert solution(\n'''2\n4\n2016 10 03\n2016 10 09\n2016 10 15\n2016 10 19\n2016 10 25\n2016 10 29\n2016 10 31\n2016 10 01\n2016 10 07\n2016 10 03\n2016 10 09\n2016 10 15\n2016 10 19\n2016 10 25\n2016 10 29\n2016 10 31'''\n) == '93'\n\nassert solution(\n'''4\n2\n2001 10 01\n2001 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01\n2002 10 01'''\n) == '0'\n\nassert solution(\n'''5\n2\n1999 10 07\n1999 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000 10 07\n2000"
    },
    {
        "number": 3473,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n2\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23\n\"\"\") == \"194\"\nassert solution(\n\"\"\"\n2\n5\n2020 10 02\n2020 10 16\n2020 10 23\n\"\"\") == \"194\"\nassert solution(\n\"\"\"\n3\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23\n\"\"\") == \"199\"\nassert solution(\n\"\"\"\n4\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23\n\"\"\") == \"194\"\nassert solution(\n\"\"\"\n5\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23\n\"\"\") == \"194\"\n"
    },
    {
        "number": 3473,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n3\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 3473,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23''') == '194'\n\nassert solution('''1\n7\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23\nSample Output:\n114\n2019 10 25\n2020 10 30\n''') == '114'\n\nassert solution('''1\n6\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23\nSample Output:\n183\n2019 10 25\n2020 10 30\n''') == '183'\n\nassert solution('''1\n2\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23\nSample Output:\n45\n2019 10 25\n2020 10 30\n''') == '45'\n\nassert solution('''1\n9\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23\nSample Output:\n45\n2019 10 25\n2020 10 30\n''') == '45'"
    },
    {
        "number": 3473,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3473,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n2\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23\n''') == '194'\nassert solution('''\n3\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23\n''') == '296'\nassert solution('''\n2\n3\n2020 10 02\n2020 10 16\n2020 10 23\n''') == '444'\nassert solution('''\n2\n1\n2018 12 31\n2019 01 31\n2020 02 29\n''') == '638'\nassert solution('''\n2\n3\n2020 10 02\n2020 10 16\n2020 10 23\n''') == '543'\n"
    },
    {
        "number": 3473,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 3473,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23') == '194\\n2019 10 25\\n2020 10 30\\n'\nassert solution('3\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23') == '400\\n2019 10 25\\n2020 10 30\\n'\nassert solution('2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23') == '194\\n2019 10 25\\n2020 10 30\\n'\nassert solution('3\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23') == '400\\n2019 10 25\\n2020 10 30\\n'\nassert solution('1\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23') == '400\\n2019 10 25\\n2020 10 30\\n'\n"
    },
    {
        "number": 3473,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23''') == '194'\nassert solution('''2\n5\n2020 10 02\n2020 10 16\n2020 10 23\n2019 10 19\n2019 10 18''') == '194'\nassert solution('''2\n5\n2020 10 02\n2020 10 16\n2020 10 23\n2019 10 19\n2019 10 18''') == '194'\nassert solution('''2\n3\n2020 10 02\n2020 10 16\n2020 10 23\n2019 10 19\n2019 10 18''') == '145'\nassert solution('''2\n3\n2019 10 22\n2020 10 02\n2020 10 16\n2020 10 23\n2019 10 19\n2019 10 18''') == '145'\n"
    },
    {
        "number": 3473,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23''') == '194\\n2019 10 25\\n2020 10 30'\n\nassert solution('''1\n0\n2019 10 22\n2019 10 23\n2019 10 24\n2019 10 25\n2019 10 26\n2019 10 27\n2019 10 28\n2019 10 29\n2019 10 30\n2019 10 31\n2019 11 01\n2019 11 02\n2019 11 03\n2019 11 04\n2019 11 05\n2019 11 06\n2019 11 07\n2019 11 08\n2019 11 09\n2019 11 10\n2019 11 11\n2019 11 12\n2019 11 13\n2019 11 14\n2019 11 15\n2019 11 16\n2019 11 17\n2019 11 18\n2019 11 19\n2019 11 20\n2019 11 21\n2019 11 22\n2019 11 23\n2019 11 24\n2019 11 25\n2019 11 26\n2019 11 27\n2019 11 28\n2019 11 29\n2019 11 30\n2019 12 01\n2019 12 02\n2019 12 03\n2019 12 04\n2019 12 05\n2019 12 06\n2019 12 07\n2019 12 08\n2019 12 09\n2019 12 10\n2019 12 11\n2019 12 12\n2019 12 13\n2019 12 14\n2019 12 15\n2019 12 16\n2019 12 17\n2019 12 18\n2019 12 19\n2019 12 20\n2019 12 21\n2019 12 22\n2019 12 23\n2019 12 24\n2019 12 25\n2019 12 26\n2019 12 27\n2019 12 28\n2019 12 29\n2019 12 30\n2019 12 31\n2019 13 01\n2019 13 02\n2019 13 03\n2019 13 04\n2019 13 05\n2019 13 06\n2019 13 07\n2019 13 08\n2019 13 09\n2019 13 10\n2019 13 11\n2019 13 12\n2019 13 13\n2019 13 14\n2019 13 15\n2019 13 16\n2019 13 17\n2019 13 18\n2019 13 19\n2019 13 20\n2019 13 21\n2019 13 22\n2019 13 23\n2019 13 24\n2019 13 25\n2019 13 26\n2019 13 27\n2019 13 28\n2019 13 29\n2019 13 30\n2019 13 31\n2019 14 01\n2019 14 02\n2019 14 03\n2019 14 04\n2019 14 05\n2019 14 06\n2019 14 07\n2019 14 08\n2019 14 09\n2019 14 10\n2019 14 11\n2019 14 12\n2019 14 13\n2019 14 14\n2019 14 15\n2019 14 16\n2019 14 17\n2019 14 18\n2019 14 19\n2019 14 20\n2019 14 21\n2019 14 22\n2019 14 23\n2019 14 24\n2019 14 25\n2019 14 26\n2019 14 27\n2019 14 28\n2019 14 29\n2019 14 30\n2019 14 31\n2019 15 01\n2019 15 02\n2019 15 03\n2019 15 04\n2019 15 05\n2019 15 06\n2019 15 07\n2019 15 08\n2019 15 09\n2019 15 10\n2019 15 11\n2019 15 12\n2019 15 13\n2019 15 14\n2019 15 15\n2019 15 16\n2019 15 17\n2019 15 18\n2019 15 19\n2019 15 20\n2019 15 21\n2019 15 22\n2019 15 23\n2019 15 24\n2019 15 25\n2019 15 26\n2019 15 27\n2019 15 28\n2019 15 29\n2019 15 30\n2019 15 31\n2019 16 01\n2019 16 02\n2019 16 03\n2019 16 04\n2019 16 05\n2019 16 06\n2019 16 07\n2019 16 08\n2019 16 09\n2019 16 10\n2019 16 11\n2019 16 12\n2019 16 13\n2019 16 14\n2019 16 15\n2019 16 16\n2019 16 17\n2019 16 18\n2019 16 19\n2019 16 20\n2019 16 21\n2019 16 22\n2019 16 23\n2019 16 24\n2019 16 25\n2019 16 26\n2019 16 27\n2019 16 28\n2019 16 29\n2019 16 30\n2019 16 31\n2019 17 01\n2019 17 02\n2019 17 03\n2019 17 04\n2019 17 05\n2019 17 06\n2019 17 07\n2019 17 08\n2019 17 09\n2019 17 10\n2019 17 11\n2019 17 12\n2019 17 13\n2019 17 14\n2019 17 15\n2019 17 16\n2019 17 17\n2019 17 18\n2019 17 19\n2019 17 20\n2019 17 21\n2019 17 22\n2019 17 23\n2019 17 24\n2019 17 25\n2019 17 26\n2019 17 27\n2019 17 28\n2019 17 29\n2019 17 30\n2019 17 31\n2019 18 01\n2019 18 02\n2019 18 03\n2019 18 04\n2019 18 05\n2019 18 06\n2019 18 07\n2019 18 08\n2019 18 09\n2019 18 10\n2019 18 11\n2019 18 12\n2019 18 13\n2019 18 14\n2019 18 15\n2019 18 16\n2019 18 17\n2019 18 18\n2019 18 19\n2019 18 20\n2019 18 21\n2019 18 22\n2019 18 23\n2019 18 24\n2019 18 25\n2019 18 26\n2019 18 27\n2019 18 28\n2019 18 29\n2019 18 30\n2019 18 31\n2019 19 01\n2019 19 02\n2019 19 03\n2019 19 04\n2019 19 05\n2019 19 06\n2019 19 07\n2019 19 08\n2019 19 09\n2019 19 10\n2019 19 11\n2019 19 12\n2019 19 13\n2019 19 14\n2019 19 15\n2019 19 16\n2019 19 17\n2019 19 18\n2019 19 19\n2019 19 20\n2019 19 21\n2019 19 22\n2019 19 23\n2019 19 24\n2019 19 25\n2019 19 26\n2019 19 27\n2019 19 28\n2019 19 29\n2019 19 30\n2019 19 31\n2019 20 01\n2019 20 02\n2019 20 03\n2019 20 04\n2019 20 05\n2019 20 06\n2019 20 07\n2019 20 08\n2019 20 09\n2019 20 10\n2019 20 11\n"
    },
    {
        "number": 3474,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0''') == '''negative-infinity 0\n5 12.5\nnegative-infinity -5'''\nprint(solution('''5 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0'''))\nassert solution('''5 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0''') == '''negative-infinity 0\n5 12.5\nnegative-infinity -5'''\nprint(solution('''5 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0'''))\nassert solution('''5 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0''') == '''negative-infinity 0\n5 12.5\nnegative-infinity -5'''\nprint(solution('''5 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0'''))\nassert solution('''5 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0''') == '''negative-infinity 0\n5 12.5\nnegative-infinity -5'''\nprint(solution('''5 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0'''))\nassert solution('''5 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0''') == '''negative-infinity 0\n5 12.5\nnegative-infinity -5'''\nprint(solution('''5 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0'''))\n"
    },
    {
        "number": 3474,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\\n') == 'negative-infinity 0\\n5 12.5\\nnegative-infinity -5'\nassert solution('5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\\n') == 'negative-infinity 0\\n5 12.5\\nnegative-infinity -5'\nassert solution
    },
    {
        "number": 3474,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n1 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0\n\"\"\") == \"0 -5.000000\\n5 12.5000000\\nnegative-infinity -5.000000\"\n\nassert solution(\n\"\"\"\n5 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0\n\"\"\") == \"0 -5.000000\\n5 12.5000000\\nnegative-infinity -5.000000\"\n\nassert solution(\n\"\"\"\n5 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0\n\"\"\") == \"0 -5.000000\\n5 12.5000000\\nnegative-infinity -5.000000\"\n\nassert solution(\n\"\"\"\n5 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0\n\"\"\") == \"0 -5.000000\\n5 12.5000000\\nnegative-infinity -5.000000\"\n\nassert solution(\n\"\"\"\n5 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0\n\"\"\") == \"0 -5.000000\\n5 12.5000000\\nnegative-infinity -5.000000\""
    },
    {
        "number": 3474,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3474,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\"\nassert solution(\n\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\"\n\"\"\""
    },
    {
        "number": 3474,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 10 1 10 1 0\\n1 10 1 5 10 0') == 'negative-infinity 0\\n5 12.5'\nassert solution('1 10 1 10 1 0\\n1 10 1 5 10 0\\n6 10 10 10 10 0') == 'negative-infinity -5\\n5 12.5'\nassert solution('1 10 1 10 1 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0') == 'negative-infinity -5\\n5 12.5'\nassert solution('1 10 1 10 1 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0') == 'negative-infinity -5\\n5 12.5'\nassert solution('1 10 1 10 1 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0') == 'negative-infinity -5\\n5 12.5'\n"
    },
    {
        "number": 3474,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 10 10 10 10 0') == 'negative-infinity 0'\nassert solution('5 10 10 5 10 0') == '5 12.5'\nassert solution('6 10 10 10 10 0') == 'negative-infinity -5'\nassert solution('5 10 10 10 10 0') == 'negative-infinity 0'\nassert solution('5 10 10 5 10 0') == '5 12.5'\n"
    },
    {
        "number": 3474,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == None\n'''"
    },
    {
        "number": 3474,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 10 10 10 10 0') == 'negative-infinity 0\\n5 12.5'\nassert solution('5 10 10 5 10 0') == 'negative-infinity -5'\nassert solution('6 10 10 10 10 0') == 'negative-infinity 0\\n5 12.5'\nassert solution('6 10 10 10 10 0') == 'negative-infinity -5'\nassert solution('-100 100 0 0 0 100000') == 'negative-infinity 0'\n"
    },
    {
        "number": 3474,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 10 10 10 10 0\") == \"negative-infinity 0\"\nassert solution(\"5 10 10 5 10 0\") == \"5 12.5\"\nassert solution(\"6 10 10 10 10 0\") == \"negative-infinity -5\"\n\"\"\"\n"
    },
    {
        "number": 3475,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 2\\n100 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n') == '2'\nassert solution('2 2\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\"
    },
    {
        "number": 3475,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(INPUT) == EXPECTED\n\"\"\"\n\n\"\"\"\nRemarks:\n+ Not any kind of problem, as we do not need to find any permutation of the itinerary.\n+ Here we need to find the minimal number of call, because we do not know how many time we can exchange.\n+ We know we have to exchange, when the difference between the distance of two points is larger than threshold.\n+ When the difference is smaller than threshold, we still have to exchange. But we will not exchange, when the difference is smaller than threshold and the distance is smaller than threshold.\n+ When the distance is less than threshold, we will exchange once.\n+ Hence, the threshold is the smallest distance.\n\"\"\"\n"
    },
    {
        "number": 3475,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 4\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n400 -40000''') == '2'\nassert solution('''4 4\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n400 -40000''') == '2'\nassert solution('''4 4\n0 2\n0 1\n2 3\n3 1\n1 3\n2 0\n1 2\n2 1\n2 0\n2 1\n2 2\n2 3\n3 0\n3 1\n3 2\n3 3\n3 1\n1 3\n2 0\n1 2\n2 1\n2 0\n2 1\n2 2\n2 3\n3 0\n3 1\n3 2\n3 3\n3 1\n1 3\n2 0\n1 2\n2 1\n2 0\n2 1\n2 2\n2 3\n3 0\n3 1\n3 2\n3 3\n3 1\n1 3\n2 0\n1 2\n2 1\n2 0\n2 1\n2 2\n2 3\n3 0\n3 1\n3 2\n3 3\n3 1\n1 3\n2 0\n1 2\n2 1\n2 0\n2 1\n2 2\n2 3\n3 0\n3 1\n3 2\n3 3\n3 1\n1 3\n2 0\n1 2\n2 1\n2 0\n2 1\n2 2\n2 3\n3 0\n3 1\n3 2\n3 3\n3 1\n1 3\n2 0\n1 2\n2 1\n2 0\n2 1\n2 2\n2 3\n3 0\n3 1\n3 2\n3 3\n3 1\n1 3\n2 0\n1 2\n2 1\n2 0\n2 1\n2 2\n2 3\n3 0\n3 1\n3 2\n3 3\n3 1\n1 3\n2 0\n1 2\n2 1\n2 0\n2 1\n2 2\n2 3\n3 0\n3 1\n3 2\n3 3\n3 1\n1 3\n2 0\n1 2\n2 1\n2 0\n2 1\n2 2\n2 3\n3 0\n3 1\n3 2\n3 3\n3 1\n1 3\n2 0\n1 2\n2 1\n2 0\n2 1\n2 2\n2 3\n3 0\n3 1\n3 2\n3 3\n3 1\n1 3\n2 0\n1 2\n2 1\n2 0\n2 1\n2 2\n2 3\n3 0\n3 1\n3 2\n3 3\n3 1\n1 3\n2 0\n1 2\n2 1\n2 0\n2 1\n2 2\n2 3\n3 0\n3 1\n3 2\n3 3\n3 1\n1 3\n2 0\n1 2\n2 1\n2 0\n2 1\n2 2\n2 3\n3 0\n3 1\n3 2\n3 3\n3 1\n1 3\n2 0\n1 2\n2 1\n2 0\n2 1\n2 2\n2 3\n3 0\n3 1\n3 2\n3 3\n3 1\n1 3\n2 0\n1 2\n2 1\n2 0\n2 1\n2 2\n2 3\n3 0\n3 1\n3 2\n3 3\n3 1\n1 3\n2 0\n1 2\n2 1\n2 0\n2 1\n2 2\n2 3\n3 0\n3 1\n3 2\n3 3\n3 1\n1 3\n2 0\n1 2\n2 1\n2 0\n2 1\n2 2\n2 3\n3 0\n3 1\n3 2\n3 3\n3 1\n1 3\n2 0\n1 2\n2 1\n2 0\n2 1\n2 2\n2 3\n3 0\n3 1\n3 2\n3 3\n3 1\n1 3\n2 0\n1 2\n2 1\n2 0\n2 1\n2 2\n2 3\n3 0\n3 1\n3 2\n3 3\n3 1\n1 3\n2 0\n1 2\n2 1\n2 0\n2 1\n2 2\n2 3\n3 0\n3 1\n3 2\n3 3\n3 1\n1 3\n2 0\n1 2\n2 1\n2 0\n2 1\n2 2\n2 3\n3 0\n3 1\n3 2\n3 3\n3 1\n1 3\n2 0\n1 2\n2 1\n2 0\n2 1\n2 2\n2 3\n3 0\n3 1\n3 2\n3 3\n3 1\n1 3\n2 0\n1 2\n2 1\n2 0\n2 1\n2 2\n2 3\n3 0\n3 1\n3 2\n3 3\n3 1\n1 3\n2 0\n1 2\n2 1\n2 0\n2 1\n2 2\n2 3\n3 0\n3 1\n3 2\n3 3\n3 1\n1 3\n2 0\n1 2\n2 1\n2 0\n2 1\n2 2\n2 3\n3 0\n3 1\n3 2\n3 3\n3 1\n1 3\n2 0\n1 2\n2 1\n2 0\n2 1\n2 2\n2 3\n3 0\n3 1\n3 2\n3 3\n3 1\n1 3\n2 0\n1 2\n2 1\n2 0\n2 1\n2 2\n2 3\n3 0\n3 1\n3 2\n3 3\n3 1\n1 3\n2 0\n1 2\n2 1\n2 0\n2 1\n2 2\n2 3\n3 0\n3 1\n3 2\n3 3\n3 1\n1 3\n2 0\n1 2\n2 1\n2 0\n2 1\n2 2\n2 3\n3 0\n3 1\n3 2"
    },
    {
        "number": 3475,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 4\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n400 -40000''') == '2'\n'''\n'''"
    },
    {
        "number": 3475,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\"\"\"\"\n\nassert solution(\"\") == \"\"\n\nassert solution(\"4 4\") == \"2\"\nassert solution(\"3 4\") == \"IMPOSSIBLE\"\nassert solution(\"3 4 5 9 9\") == \"2\"\n"
    },
    {
        "number": 3475,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n4 4\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n400 -40000\n''') == '2'\nassert solution(\n'''\n7 2\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n400 -40000\n''') == 'IMPOSSIBLE'\nassert solution(\n'''\n5 5\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n400 -40000\n''') == '2'\nassert solution(\n'''\n6 2\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n400 -40000\n''') == 'IMPOSSIBLE'\nassert solution(\n'''\n7 1\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n400 -40000\n''') == '1'\n"
    },
    {
        "number": 3475,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '2'\nassert solution(stdin) == 'IMPOSSIBLE'\nassert solution(stdin) == '2'\nassert solution(stdin) == '2'\n\n------\n\nThe driver is going to want to visit $n$ points in a given order. He will only be willing to offer an itinerary that uses at most $k$ different modes of transport, so the driver can choose to visit a different point if it has to change transportation type.\n\nYou will have to write a program to check if there is a way to visit all $n$ points with at most $k$ different modes of transportation in a given order.\n\n------\n\n-----\n\n-----\n\"\"\"\n\n\nimport sys\n"
    },
    {
        "number": 3475,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n4 4\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n400 -40000\n''') == '2'\n\nassert solution('''\n1 4\n100 10\n100 20\n200 0\n100 10\n100 20\n100 50\n100 10\n200 0\n100 10\n100 20\n200 0\n100 10\n100 20\n200 0\n100 10\n100 20\n100 50\n100 10\n''') == 'IMPOSSIBLE'\n\nassert solution('''\n2 5\n200 20000\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0\n300 10000\n300 5000\n300 0\n200 10000\n300 1000\n200 0"
    },
    {
        "number": 3475,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(open(\"test_input.txt\", \"r\").read()) == \"2\"\n\nprint(solution(open(\"input.txt\", \"r\").read()))\n\n-----\n\n\"\"\"\n\n__author__ = \"Poonam Behera\"\n__copyright__ = \"Copyright 2016, hacker_pro\"\n__credits__ = [\"Poonam Behera\"]\n__license__ = \"GPL\"\n__version__ = \"1.0.0\"\n__maintainer__ = \"Poonam Behera\"\n__email__ = \"pbehera@protonmail.com\"\n__status__ = \"Development\"\n\nimport sys"
    },
    {
        "number": 3475,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"2\"\nassert solution(\"2 3 4 5 6 7 8 9 10\") == \"IMPOSSIBLE\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"2\"\nassert solution(\"4 6 7 8 9 10 4 2 3 1\") == \"3\"\nassert solution(\"4 6 7 8 9 10 4 2 3\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3476,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 3476,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100''') == \"345 2\\nrotS 2 1\\negR 2\\nnegR 2\\nrotS 2 1\\nnegR 2\"\n'''\nassert solution('''4 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n1 -2 -5 100''') == \"105 5\\nrotR 1 2\\negR 2 3\\nrotR 3 1\\nrotS 1 2 1\\nrotS 2 2\\negR 2 3\\nrotR 2 3\\nrotS 1 2 1\\nrotS 2 2\\nrotS 3 1\"\n'''\n\nassert solution('''4 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n1 -2 -5 100''') == \"5 5\\nrotR 1 2\\negR 2 3\\nrotR 3 1\\nrotS 1 2 1\\nrotS 2 2\\nrotS 3 1\"\n'''\nassert solution('''5 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n1 -2 -5 100\n1 -2 -5 100''') == \"5 5\\nrotR 1 2\\negR 2 3\\nrotR 3 1\\nrotS 1 2 1\\nrotS 2 2\\nrotS 3 1\"\n'''\nassert solution('''5 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n-1 -2 -5 100\n-1 -2 -5 100''') == \"5 5\\nrotR 1 2\\negR 2 3\\nrotR 3 1\\nrotS 1 2 1\\nrotS 2 2\\nrotS 3 1\"\n'''\n"
    },
    {
        "number": 3476,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(solution.read()) == None\n"
    },
    {
        "number": 3476,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"345 2\"\n\"\"\"\n"
    },
    {
        "number": 3476,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100''') == '345 2'\nassert solution('''2 2\n1 -1 -1''') == '-1'\nassert solution('''10 10\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1''') == '-1'\nassert solution('''10 10\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1''') == '-1'\nassert solution('''5 5\n1 4 6 5 3 2\n2 3 1 6 8 9\n3 5 1 7 1 5\n4 1 2 4 3 2\n5 1 2 3 3 1''') == '10'\n"
    },
    {
        "number": 3476,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n' + '2\\n' + '3\\n' + '4\\n' + '5\\n' + '6\\n' + '7\\n' + '8\\n' + '9\\n' + '10\\n' + '11\\n' + '12\\n') == '345 2'\nassert solution('3\\n' + '4\\n' + '5\\n' + '6\\n' + '7\\n' + '8\\n' + '9\\n' + '10\\n' + '11\\n' + '12\\n') == '345 2'\nassert solution('2\\n' + '1\\n' + '2\\n' + '3\\n' + '4\\n' + '5\\n' + '6\\n' + '7\\n' + '8\\n' + '9\\n' + '10\\n' + '11\\n' + '12\\n') == '345 2'\nassert solution('1\\n' + '2\\n' + '3\\n' + '4\\n' + '5\\n' + '6\\n' + '7\\n' + '8\\n' + '9\\n' + '10\\n' + '11\\n' + '12\\n') == '345 2'\nassert solution('1\\n' + '2\\n' + '3\\n' + '4\\n' + '5\\n' + '6\\n' + '7\\n' + '8\\n' + '9\\n' + '10\\n' + '11\\n' + '12\\n') == '345 2'\n"
    },
    {
        "number": 3476,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\\n') == '345 2\\nrotS 2 1\\nnegR 2\\n'"
    },
    {
        "number": 3476,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '''345 2\nrotS 2 1\nnegR 2'''"
    },
    {
        "number": 3476,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100''') == '345 2\\nrotS 2 1\\nnegR 2\\n'\nassert solution('''3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n-1 -1 -1''') == '345 4\\nrotS 1 2\\negR 1 1\\n'\nassert solution('''3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n-1 -1 -1''') == '345 4\\nrotS 1 2\\negR 1 1\\n'\nassert solution('''3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n-1 -1 -1''') == '345 4\\nrotS 1 2\\negR 1 1\\n'\nassert solution('''3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n-1 -1 -1''') == '345 4\\nrotS 1 2\\negR 1 1\\n'\n"
    },
    {
        "number": 3476,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9 10 11 12\") == \"345 2\\nrotS 2 1\\negR 2\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12\") == \"345 2\\nrotS 2 1\\negR 2\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12\") == \"345 2\\nrotS 2 1\\negR 2\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12\") == \"345 2\\nrotS 2 1\\negR 2\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12\") == \"345 2\\nrotS 2 1\\negR 2\"\n"
    },
    {
        "number": 3477,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 2'\n'') == '0.5'\nassert solution('3 1 1'\n'') == '0.5'\nassert solution('3 1 1 2'\n'') == '0.5'\nassert solution('3 1 1 2 3'\n'') == '0.5'\nassert solution('3 1 1 2 3 4'\n'') == '0.5'\n"
    },
    {
        "number": 3477,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(example) == \"0.5\"\nassert solution(input) == \"0.5\"\n"
    },
    {
        "number": 3477,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2\\n3 1 1\\n') == '0.5'\nassert solution('2 2\\n3 1 1\\n') == '0.25'\nassert solution('3 2\\n3 1 1\\n') == '0'\nassert solution('3 3\\n3 1 1\\n') == '0'\nassert solution('10 9\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5"
    },
    {
        "number": 3477,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0.5\"\n\nSample Input:\n4 1\n1 1 1 1\nSample Output:\n0.1\n"
    },
    {
        "number": 3477,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n3 1 1\") == \"0.5\"\nassert solution(\"3 2\\n3 1 2\\n3 1 3\") == \"1.0\"\nassert solution(\"3 2\\n3 1 1\\n3 1 2\\n3 1 3\") == \"0.5\"\nassert solution(\"3 2\\n3 1 1\\n3 1 2\\n3 1 3\") == \"0.5\"\nassert solution(\"3 2\\n3 1 1\\n3 1 2\\n3 1 3\\n3 1 4\\n3 1 5\\n3 1 6\\n3 1 7\\n3 1 8\") == \"0.875\"\n"
    },
    {
        "number": 3477,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0.5\"\n\n\"\"\""
    },
    {
        "number": 3477,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n3\\n3\\n1\\n1\\n1\\n1\") == \"0.5\"\nassert solution(\"3\\n3\\n3\\n1\\n1\\n1\\n1\") == \"0.5\"\nassert solution(\"1\\n2\\n2\\n1\\n1\\n1\\n1\") == \"0.25\"\nassert solution(\"1\\n2\\n2\\n1\\n1\\n1\\n1\") == \"0.25\"\nassert solution(\"1\\n2\\n2\\n1\\n1\\n1\\n1\") == \"0.25\"\n"
    },
    {
        "number": 3477,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 0.5\n\"\"\"\n\nfrom collections import Counter\n"
    },
    {
        "number": 3477,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3\\n1 3 1\\n') == '0.5'\n\"\"\"\n"
    },
    {
        "number": 3477,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n        '''3\n3 1 1\n'''\n    ) == '0.5'\n\nassert solution(\n        '''2 3\n2 1 1\n1 1 2\n'''\n    ) == '1.0'\n\nassert solution(\n        '''3 4\n3 1 1\n1 1 2\n2 1 2\n'''\n    ) == '1.7'\n\nassert solution(\n        '''4 4\n2 1 1\n1 1 2\n2 2 2\n1 2 1\n'''\n    ) == '2.0'\n\nassert solution(\n        '''6 4\n3 1 1\n1 1 2\n2 1 2\n1 2 1\n2 2 2\n1 2 1\n'''\n    ) == '1.0'\n"
    },
    {
        "number": 3478,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9''') == '1 4 5\\n2 6 7'\nassert solution('''8 7\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9''') == '1 2 3 4 5 6 7'\nassert solution('''2 6\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9''') == '1 2 3 4 5 6 7'\nassert solution('''1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9''') == '1 2 3 4 5 6 7'\nassert solution('''3 7\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12''') == '1 2 3 4 5 6 7 8'\n"
    },
    {
        "number": 3478,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9') == '1 4 5'\nassert solution('4 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n1 5\\n4 6\\n2 5\\n3 4') == '2 6 7'\nassert solution('4 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n1 5\\n4 6\\n2 5\\n3 4') == '2 6 7'\nassert solution('4 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n1 5\\n4 6\\n2 5\\n3 4') == '2 6 7'\nassert solution('4 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n1 5\\n4 6\\n2 5\\n3 4') == '2 6 7'\n"
    },
    {
        "number": 3478,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2\\n4 3\\n5 6\\n7 8\\n') == '1 4 5'\nassert solution('1 2\\n4 3\\n5 6\\n7 8\\n') == '2 6 7'\nassert solution('1 2\\n4 3\\n5 6\\n7 8\\n') == 'Impossible'\nassert solution('1 2\\n4 3\\n5 6\\n7 8\\n') == '1 4 5'\nassert solution('1 2\\n4 3\\n5 6\\n7 8\\n') == '1 4 5'\n"
    },
    {
        "number": 3478,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9''') == '1 4 5'\nassert solution('''5 5\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n4 5\n3 5\n5 1''') == '1 2 3 4 5'\nassert solution('''5 4\n1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n3 4\n4 5\n3 5\n5 1''') == '1 2 3 4 5'\nassert solution('''10 6\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11''') == '1 2 3 4 5 6 7 8 9 10 11'\nassert solution('''4 3\n1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n2 5\n3 4\n3 5\n4 5\n1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n2 5\n3 4\n3 5\n4 5''') == '1 2 3 4 5'\n"
    },
    {
        "number": 3478,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9''') == '1 4 5\\n2 6 7\\n'\nassert solution('''4 4\n1 2\n2 3\n3 4\n1 2\n3 4''') == 'impossible\\n'\nassert solution('''8 2\n1 2\n1 3\n2 4\n3 4\n4 5\n5 6\n6 7\n7 8''') == '1 2\\n3 4\\n5 6\\n7 8\\n'\nassert solution('''6 3\n1 2\n1 3\n1 4\n1 5\n1 6\n2 3\n2 4\n2 5\n2 6\n3 4\n3 5\n3 6\n4 5\n4 6\n5 6''') == '1 2\\n3 4\\n5 6\\n'\nassert solution('''3 4\n1 2\n1 3\n2 4\n2 3\n1 3\n1 2\n3 2\n3 1''') == 'impossible\\n'\n"
    },
    {
        "number": 3478,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3478,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3 4\") == \"\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26\") == \"\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 19 20 21 22 23 24 25 26 27 28 29 30 31 32\") == \"\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40\") == \"\"\n"
    },
    {
        "number": 3478,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 4\\n1 5\\n1 4\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1"
    },
    {
        "number": 3478,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316"
    },
    {
        "number": 3478,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9''') == '1 4 5'\nassert solution('''3 3\n1 2\n1 3\n3 2\n2 3''') == 'impossible'\nassert solution('''3 3\n1 2\n1 3\n3 2\n2 3''') == '1 4 5'\nassert solution('''3 3\n1 2\n1 3\n3 2\n2 3''') == '1 4 5'\nassert solution('''5 4\n1 4\n3 4\n1 3\n2 5\n1 2\n2 3\n3 2\n2 4\n2 5\n4 5\n3 4\n3 5\n4 5''') == '1 4 5'\n"
    },
    {
        "number": 3479,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"13500\"\n\"\"\"\n"
    },
    {
        "number": 3479,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n1\\n\") == \"\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 3479,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n11 2\n12000\n9000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000\n\"\"\") == \"13500\"\n"
    },
    {
        "number": 3479,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 3\n1000\n12000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000\n''') == '13500'\n\nassert solution('''2 1\n1000\n12000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000\n''') == '1000'\n\nassert solution('''4 2\n1000\n12000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000\n''') == '10000'\n\nassert solution('''4 1\n1000\n12000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000\n''') == '1000'\n\nassert solution('''4 3\n1000\n12000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000\n''') == '9000'"
    },
    {
        "number": 3479,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n10\\n100\\n10\\n1000\\n100\\n10000\\n1000\\n10\\n100\") == \"480000\"\n\"\"\"\n"
    },
    {
        "number": 3479,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 2\n12000\n9000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000''') == '13500'\nassert solution('''2 1\n1000\nSample Output:\n1000''') == '1000'\nassert solution('''2 1\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n"
    },
    {
        "number": 3479,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1') == '1'\nassert solution('1 2') == '1'\nassert solution('2 1') == '1'\nassert solution('2 2') == '1'\nassert solution('3 1') == '2'\n"
    },
    {
        "number": 3479,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n10 2\n10000\n2000\n\"\"\"\n    ) == '13500'\nassert solution(\n\"\"\"\n11 2\n5000\n10\n100\n\"\"\"\n    ) == '9000'\nassert solution(\n\"\"\"\n11 2\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000"
    },
    {
        "number": 3479,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\n"
    },
    {
        "number": 3479,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '13500'\nassert solution(stdin) == '13500'\nassert solution(stdin) == '13500'\nassert solution(stdin) == '13500'\nassert solution(stdin) == '13500'\n"
    },
    {
        "number": 3480,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\n') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\\n'\n\nassert solution('2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\n') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\\n'\n\nassert solution('2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\n') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\\n'\n\nassert solution('2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\n') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\\n'\n\nassert solution('2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\n') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\\n'"
    },
    {
        "number": 3480,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 16\nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\n2 2 2 2 2 2 2 2 4 4 4 4\n''') == '''Hot_cross_buns!_=___Hot_cross_buns!_=\n____________________Hot_cross_buns!_=\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\n"
    },
    {
        "number": 3480,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 1\nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\n2 2 2 2 2 2 2 2 4 4 4 4''') == '''Hot_cross_buns!_=___Hot_cross_buns!_=\n____________________Hot_cross_buns!_=\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\n"
    },
    {
        "number": 3480,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 16\nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\n2 2 2 2 2 2 2 2 4 4 4 4\n''') == '''Hot_cross_buns!_=___Hot_cross_buns!_=\n____________________Hot_cross_buns!_=\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\n"
    },
    {
        "number": 3480,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 16\nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\n2 2 2 2 2 2 2 2 4 4 4 4\n''') == '''Hot_cross_buns!_=___Hot_cross_buns!_=\n____________________Hot_cross_buns!_=\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\n"
    },
    {
        "number": 3480,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 16\nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\n2 2 2 2 2 2 2 2 4 4 4 4\n''') == '''Hot_cross_buns!_=___Hot_cross_buns!_=\n____________________Hot_cross_buns!_=\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\n"
    },
    {
        "number": 3480,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 16') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_='\nassert solution('2 7\\nHot cross buns! =Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\n') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\\ndef solution(stdin: str) -> str:\n"
    },
    {
        "number": 3480,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 16\nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\n2 2 2 2 2 2 2 2 4 4 4 4\n''') == '''Hot_cross_buns!_=___Hot_cross_buns!_=\n____________________Hot_cross_buns!_=\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\n"
    },
    {
        "number": 3480,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 16\nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\n2 2 2 2 2 2 2 2 4 4 4 4\n''') == '''Hot_cross_buns!_=___Hot_cross_buns!_=\n____________________Hot_cross_buns!_=\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\n"
    },
    {
        "number": 3480,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '2 16'\n    'Hot cross buns! = Hot cross buns! ='\n    '4 4 4 4 4 4 4 4'\n    'One a pen- ny, Two a pen- ny, Hot cross buns! ='\n    '2 2 2 2 2 2 2 2 4 4 4 4'\n) == \"\"\"Hot_cross_buns!_=___Hot_cross_buns!_=\n____________________Hot_cross_buns!_=\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\n"
    },
    {
        "number": 3481,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33''') == '33'\nassert solution('''3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33''') == '33'\nassert solution('''3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n1 10 22 33''') == '33'\nassert solution('''3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n1 10 22 33''') == '33'\nassert solution('''3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n1 10 22 33\n1 10 22 33''') == '33'\n"
    },
    {
        "number": 3481,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '33'\n\nassert solution('3 2 1') == '10'\n\nassert solution('1 2 10') == '33'\n\nassert solution('1 4 6 6') == '70'\n\nassert solution('1 6 10 5') == '70'"
    },
    {
        "number": 3481,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"\\n2\\n\") == \"\"\nassert solution(\"1\\n2\\n\") == \"\"\n"
    },
    {
        "number": 3481,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '33'\nassert solution(stdin) == '70'\nassert solution(stdin) == '70'\nassert solution(stdin) == '33'\nassert solution(stdin) == '69'\n"
    },
    {
        "number": 3481,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3481,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n\"\"\".strip()) == '33'\nassert solution(\n    \"\"\"\n3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n\"\"\".strip()) == '33'\nassert solution(\n    \"\"\"\n3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n\"\"\".strip()) == '33'\nassert solution(\n    \"\"\"\n3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n\"\"\".strip()) == '33'\nassert solution(\n    \"\"\"\n3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n\"\"\".strip()) == '33'\n"
    },
    {
        "number": 3481,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5''') == '33'\nassert solution('''10 10 10\n1 2 10\n1 3 10\n1 4 10\n1 5 10\n1 6 10\n1 7 10\n1 8 10\n1 9 10\n1 10 10\n1 11 10\n1 12 10\n1 13 10\n1 14 10\n1 15 10\n1 16 10\n1 17 10\n1 18 10\n1 19 10\n1 20 10\n1 21 10\n1 22 10\n1 23 10\n1 24 10\n1 25 10\n1 26 10\n1 27 10\n1 28 10\n1 29 10\n1 30 10\n1 31 10\n1 32 10\n1 33 10\n1 34 10\n1 35 10\n1 36 10\n1 37 10\n1 38 10\n1 39 10\n1 40 10\n1 41 10\n1 42 10\n1 43 10\n1 44 10\n1 45 10\n1 46 10\n1 47 10\n1 48 10\n1 49 10\n1 50 10\n1 51 10\n1 52 10\n1 53 10\n1 54 10\n1 55 10\n1 56 10\n1 57 10\n1 58 10\n1 59 10\n1 60 10\n1 61 10\n1 62 10\n1 63 10\n1 64 10\n1 65 10\n1 66 10\n1 67 10\n1 68 10\n1 69 10\n1 70 10\n1 71 10\n1 72 10\n1 73 10\n1 74 10\n1 75 10\n1 76 10\n1 77 10\n1 78 10\n1 79 10\n1 80 10\n1 81 10\n1 82 10\n1 83 10\n1 84 10\n1 85 10\n1 86 10\n1 87 10\n1 88 10\n1 89 10\n1 90 10\n1 91 10\n1 92 10\n1 93 10\n1 94 10\n1 95 10\n1 96 10\n1 97 10\n1 98 10\n1 99 10\n1 100 10\n1 101 10\n1 102 10\n1 103 10\n1 104 10\n1 105 10\n1 106 10\n1 107 10\n1 108 10\n1 109 10\n1 110 10\n1 111 10\n1 112 10\n1 113 10\n1 114 10\n1 115 10\n1 116 10\n1 117 10\n1 118 10\n1 119 10\n1 120 10\n1 121 10\n1 122 10\n1 123 10\n1 124 10\n1 125 10\n1 126 10\n1 127 10\n1 128 10\n1 129 10\n1 130 10\n1 131 10\n1 132 10\n1 133 10\n1 134 10\n1 135 10\n1 136 10\n1 137 10\n1 138 10\n1 139 10\n1 140 10\n1 141 10\n1 142 10\n1 143 10\n1 144 10\n1 145 10\n1 146 10\n1 147 10\n1 148 10\n1 149 10\n1 150 10\n1 151 10\n1 152 10\n1 153 10\n1 154 10\n1 155 10\n1 156 10\n1 157 10\n1 158 10\n1 159 10\n1 160 10\n1 161 10\n1 162 10\n1 163 10\n1 164 10\n1 165 10\n1 166 10\n1 167 10\n1 168 10\n1 169 10\n1 170 10\n1 171 10\n1 172 10\n1 173 10\n1 174 10\n1 175 10\n1 176 10\n1 177 10\n1 178 10\n1 179 10\n1 180 10\n1 181 10\n1 182 10\n1 183 10\n1 184 10\n1 185 10\n1 186 10\n1 187 10\n1 188 10\n1 189 10\n1 190 10\n1 191 10\n1 192 10\n1 193 10\n1 194 10\n1 195 10\n1 196 10\n1 197 10\n1 198 10\n1 199 10\n1 200 10\n1 201 10\n1 202 10\n1 203 10\n1 204 10\n1 205 10\n1 206 10\n1 207 10\n1 208 10\n1 209 10\n1 210 10\n1 211 10\n1 212 10\n1 213 10\n1 214 10\n1 215 10\n1 216 10\n1 217 10\n1 218 10\n1 219 10\n1 220 10\n1 221 10\n1 222 10\n1 223 10\n1 224 10\n1 225 10\n1 226 10\n1 227 10\n1 228 10\n1 229 10\n1 230 10\n1 231 10\n1 232 10\n1 233 10\n1 234 10\n1 235 10\n1 236 10\n1 237 10\n1 238 10\n1 239 10\n1 240 10\n1 241 10\n1 242 10\n1 243 10\n1 244 10\n1 245 10\n1 246 10\n1 247 10\n1 248 10\n1 249 10\n1 250 10\n1 251 10\n1 252 10\n1 253 10\n1 254 10\n1 255 10\n1 256 10\n1 257 10\n1 258 10\n1 259 10\n1 260 10\n1 261 10\n1 262 10\n1 263 10\n1 264 10\n1 265 10\n1 266 10\n1 267 10\n1 268 10\n1 269 10\n1 270 10\n1 271 10\n1 272 10\n1 273 10\n1 274 10\n1 275 10\n1 276 10\n1 277 10\n1 278 10\n1 279 10\n1 280 10\n1 281 10\n1 282 10\n1 283 10\n1 284 10\n1 285 10\n1 286 10\n1 287 10\n1 288 10\n1 289 10\n1 290 10\n1"
    },
    {
        "number": 3481,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(open(\"input/f3.txt\").read()))\n"
    },
    {
        "number": 3481,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '33'\nprint('test passed')"
    },
    {
        "number": 3481,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33') == '33'\nassert solution('3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\\n2 9 1 30 21') == '21'\nassert solution('2 2 3\\n3 1 1\\n1 2 1\\n2 1 3\\n3 2 1') == '3'\nassert solution('10 3 1\\n1 2 3\\n1 2 4\\n1 3 3\\n3 1 4\\n2 1 3\\n1 1 3\\n1 2 4\\n1 2 3') == '3'\nassert solution('10 3 1\\n1 2 3\\n1 2 4\\n1 3 3\\n3 1 4\\n2 1 3\\n1 1 3\\n1 2 4\\n1 2 3') == '3'\n"
    },
    {
        "number": 3482,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6\\n0 1 2 3 4 5\\n1 2 2 2 3 1\\n3 4 4 4 4 4\\n4 5 5 5 5 5\\n5 6 6 6 6 6\\n6 7 7 7 7 7') == '405'\nassert solution('2\\n1 2\\n2 1') == '0'\nassert solution('2\\n1 1\\n2 2') == '4'\nassert solution('2\\n1 1\\n1 1') == '2'\nassert solution('3\\n1 2 3\\n2 3 1\\n3 2 1') == '6'\n"
    },
    {
        "number": 3482,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n20 15 10\n7 7\n30 0''') == \"405\"\nassert solution('''3\n20 15 10\n7 7\n30 0\n7 7\n30 0''') == \"250\"\nassert solution('''3\n5 6 7\n1 2 3 4\n1 1\n2 1\n1 1''') == \"20\"\nassert solution('''3\n5 6 7\n1 2 3 4\n1 2\n2 2\n1 1''') == \"8\"\nassert solution('''3\n5 6 7\n1 2 3 4\n1 1\n1 1\n1 1\n1 1\n1 1''') == \"16\"\n"
    },
    {
        "number": 3482,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"405\"\n"
    },
    {
        "number": 3482,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''20 15 10\n7 7\n30 0''') == '405'\nassert solution('''2\n1 2\n3 4\n5 10\n7 8\n7 8\n7 8\n7 8\n7 8\n7 8\n7 8''') == '280'\nassert solution('''6\n1 2\n5 5\n4 4\n5 5\n5 5\n5 5\n5 5''') == '210'\nassert solution('''1\n1\n1\n1\n1\n1\n1''') == '0'\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1''') == '0'\n"
    },
    {
        "number": 3482,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\\\n3\n20 15 10\n7 7\n30 0\n''') == '405'\nassert solution('''\\\n5\n100 100 100 100 100\n100 0\n2\n1 1\n3 1\n4 1\n3 1\n''') == '544'\nassert solution('''\\\n5\n100 100 100 100 100\n100 0\n2\n1 1\n3 1\n4 1\n2 1\n''') == '544'\nassert solution('''\\\n5\n100 100 100 100 100\n100 0\n2\n1 1\n3 1\n4 1\n2 1\n''') == '544'\nassert solution('''\\\n5\n10 10 10 10 10\n5 5\n3 4\n6 5\n7 5\n1 1\n2 1\n3 1\n4 1\n3 1\n5 1\n1 1\n3 1\n4 1\n5 1\n1 1\n''') == '544'\n'''\n"
    },
    {
        "number": 3482,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''20 15 10\n7 7\n30 0''') == \"405\"\nassert solution('''10 0\n1 1\n1 1\n2 1\n2 2\n2 3\n3 3\n3 4\n4 4\n4 5\n5 5\n5 6\n6 6\n6 7\n7 7\n7 8\n8 8\n8 9\n9 9\n9 10\n10 10\n10 11\n11 11\n11 12\n12 12\n12 13\n13 13\n13 14\n14 14\n14 15\n15 15\n15 16\n16 16\n16 17\n17 17\n17 18\n18 18\n18 19\n19 19\n19 20\n20 20\n20 21\n21 21\n21 22\n22 22\n22 23\n23 23\n23 24\n24 24\n24 25\n25 25\n25 26\n26 26\n26 27\n27 27\n27 28\n28 28\n28 29\n29 29\n29 30\n30 30\n30 31\n31 31\n31 32\n32 32\n32 33\n33 33\n33 34\n34 34\n34 35\n35 35\n35 36\n36 36\n36 37\n37 37\n37 38\n38 38\n38 39\n39 39\n39 40\n40 40\n40 41\n41 41\n41 42\n42 42\n42 43\n43 43\n43 44\n44 44\n44 45\n45 45\n45 46\n46 46\n46 47\n47 47\n47 48\n48 48\n48 49\n49 49\n49 50\n50 50\n50 51\n51 51\n51 52\n52 52\n52 53\n53 53\n53 54\n54 54\n54 55\n55 55\n55 56\n56 56\n56 57\n57 57\n57 58\n58 58\n58 59\n59 59\n59 60\n60 60\n60 61\n61 61\n61 62\n62 62\n62 63\n63 63\n63 64\n64 64\n64 65\n65 65\n65 66\n66 66\n66 67\n67 67\n67 68\n68 68\n68 69\n69 69\n69 70\n70 70\n70 71\n71 71\n71 72\n72 72\n72 73\n73 73\n73 74\n74 74\n74 75\n75 75\n75 76\n76 76\n76 77\n77 77\n77 78\n78 78\n78 79\n79 79\n79 80\n80 80\n80 81\n81 81\n81 82\n82 82\n82 83\n83 83\n83 84\n84 84\n84 85\n85 85\n85 86\n86 86\n86 87\n87 87\n87 88\n88 88\n88 89\n89 89\n89 90\n90 90\n90 91\n91 91\n91 92\n92 92\n92 93\n93 93\n93 94\n94 94\n94 95\n95 95\n95 96\n96 96\n96 97\n97 97\n97 98\n98 98\n98 99\n99 99\n99 100\n100 100\n100 101\n101 101\n101 102\n102 102\n102 103\n103 103\n103 104\n104 104\n104 105\n105 105\n105 106\n106 106\n106 107\n107 107\n107 108\n108 108\n108 109\n109 109\n109 110\n110 110\n110 111\n111 111\n111 112\n112 112\n112 113\n113 113\n113 114\n114 114\n114 115\n115 115\n115 116\n116 116\n116 117\n117 117\n117 118\n118 118\n118 119\n119 119\n119 120\n120 120\n120 121\n121 121\n121 122\n122 122\n122 123\n123 123\n123 124\n124 124\n124 125\n125 125\n125 126\n126 126\n126 127\n127 127\n127 128\n128 128\n128 129\n129 129\n129 130\n130 130\n130 131\n131 131\n131 132\n132 132\n132 133\n133 133\n133 134\n134 134\n134 135\n135 135\n135 136\n136 136\n136 137\n137 137\n137 138\n138 138\n138 139\n139 139\n139 140\n140 140\n140 141\n141 141\n141 142\n142 142\n142 143\n143 143\n143 144\n144 144\n144 145\n145 145\n145 146\n146 146\n146 147\n147 147\n147 148\n148 148\n148 149\n149 149\n149 150\n150 150\n150 151\n151 151\n151 152\n152 152\n152 153\n153 153\n153 154\n154 154\n154 155\n155 155\n155 156\n156 156\n156 157\n157 157\n157 158\n158 158\n158 159\n159 159\n159 160\n160 160\n160 161\n161 161\n161 162\n162 162\n162 163\n163 163\n163 164\n164 164\n164 165\n165 165\n165 166\n166 166\n166 167\n167 167\n167 168\n168 168\n168 169\n169 169\n169 170\n170 170\n170 171\n171 171\n171 172\n172 172\n172 173\n173 173\n173 174\n174 174\n174 175\n175 175\n175 176\n176 176\n176 177\n177 177\n177 178\n178 178\n178 179\n179 179\n179 180\n180 180\n180 181\n181 181\n181 182\n182 182\n182 183\n183 183\n183 184\n184 184\n184 185\n185 185\n185 186\n186 186\n186 187\n187 187\n187 188\n188 188\n188 189\n189 189\n189 190\n190 190\n190 191\n191 191\n191 192\n192 192\n192 193\n193 193\n193 194\n194 194\n194 195\n195 195\n195 196\n196 196\n196 197\n197 197\n197 198\n198 198\n198 199\n199 199\n199 200\n200 200\n200 201\n201 201\n201 202\n202 202\n202 203\n203 203\n203 204\n204 204\n204 205\n205 205\n205 206\n206 206\n206 207\n207 207\n207 208\n208 208\n208 209\n209 209\n209 210\n210 210\n210 211\n211 211\n211 212\n212 212\n212 213\n213 213\n213 214\n214 214\n214 215\n215 215\n215 216\n216 216\n216 217\n217 217\n217 218\n218 218\n218 219\n219 219\n219 220\n220 220\n220 221\n221 221\n221 222\n222 222\n222 223\n223 223\n223 224\n224 224\n224 225\n225 225\n225 226\n226 226\n226 227\n227 227\n227 228\n228 228\n228 229\n229"
    },
    {
        "number": 3482,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n1\n20 15 10\n7 7\n30 0\n''') == '405'\n\nassert solution(\n'''\n3\n20 15 10\n7 7\n30 0\n''') == '405'\n\nassert solution(\n'''\n5\n20 15 10\n7 7\n30 0\n5 1\n4 2\n''') == '2830'\n"
    },
    {
        "number": 3482,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n10\n10 15 10\n3\n1 3\n4 2\n''') == '405'\nassert solution('''\n10\n10 15 10\n3\n1 3\n4 2\n''') == '255'\nassert solution('''\n4\n10 30 10 10\n7 7\n30 0\n7 7\n1 3\n3 4\n3 4\n''') == '205'\nassert solution('''\n5\n10 30 10 10 20\n7 7\n30 0\n7 7\n1 3\n3 4\n3 4\n''') == '220'\nassert solution('''\n10\n5 10 10 10 10 10 10\n0 0\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n"
    },
    {
        "number": 3482,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"399\"\n"
    },
    {
        "number": 3482,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n20 15 10\n7 7\n30 0''') == \"405\"\nassert solution('''10\n20 15 10\n7 7\n30 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0"
    },
    {
        "number": 3483,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3483,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1 1 1 1\"\nassert solution(\"2\") == \"2 2 2 2\"\nassert solution(\"3\") == \"3 3 3 3\"\nassert solution(\"4\") == \"5 5 5 5\"\n"
    },
    {
        "number": 3483,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n1 2 4 7''') == '28 4 21 14.0'\nassert solution('''5\n1 2 3 4 5''') == '55 7 19 27 25.0'\nassert solution('''100\nnassert solution('''100\nnassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '5 1 2 3 4 5 6 7 8 9 10'\n"
    },
    {
        "number": 3483,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n1 2 4 7\n''') == '28 4 21 14.00000'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10\n''') == '28 4 21 14.00000'\nassert solution('''10\n-10 -3 -2 0 2 3 4 5\n''') == '28 4 21 14.00000'\nassert solution('''10\n2 3 2 4 2 3 1 2\n''') == '28 4 21 14.00000'\nassert solution('''10\n1 2 1 2 1 2 1 2\n''') == '28 4 21 14.00000'\n"
    },
    {
        "number": 3483,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3483,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1\n2\n4\n7''') == '28 4 21 14.0'\nassert solution('''1000\n1000000\n1000000\n1000000\n1000000\n1000000\n1000000\n1000000\n1000000\n1000000\n1000000\n1000000''') == '28 4 21 14.0'\nassert solution('''300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300''') == '28 4 21 14.0'\nassert solution('''10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10''') == '28 4 21 14.0'\nassert solution('''10\n500\n100\n50\n5\n3\n1\n1\n1\n1\n1\n1''') == '28 4 21 14.0'\n"
    },
    {
        "number": 3483,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n1 2 4 7\n''') == '28 4 21 14.0'\nassert solution('''5\n1 2 3 4 5\n''') == '35 2 3 5'\nassert solution('''6\n1 2 3 4 5 6\n''') == '36 3 6'\nassert solution('''7\n1 2 3 4 5 6 7\n''') == '37 4 9'\nassert solution('''8\n1 2 3 4 5 6 7 8\n''') == '38 5 12'\n"
    },
    {
        "number": 3483,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys\n\nT = int(sys.stdin.readline())\nfor _ in range(T):\n    n = int(sys.stdin.readline())\n    weights = tuple(map(int, sys.stdin.readline().split()))\n    weights = sorted(weights)\n    total = sum(weights)\n    if total % 4 == 0:\n        print(total, total // 4, len(weights), total // 4)\n    else:\n        print(total, total // 4 + 1, len(weights), total // 4)\n"
    },
    {
        "number": 3483,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n4\\n7') == '28 4 21 14.0'\nassert solution('4\\n1 2 4 7') == '28 4 21 14.0'\n\"\"\"\n\nfrom sys import stdin\nfrom statistics import mean\n\nnum = int(stdin.readline().strip())\nweights = [int(w) for w in stdin.readline().strip().split()]\nweights.sort()"
    },
    {
        "number": 3483,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3484,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == 'yes'\nassert solution(input()) == '1 2 3 4'\nassert solution(input()) == '2 3 4 1'\nassert solution(input()) == '3 4 1 2'\nassert solution(input()) == '4 1 2 3'\n"
    },
    {
        "number": 3484,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(\"3 2\\n2 3 4\\n4 5 1\\n3 4 5\") == \"no\"\nassert solution(\"5 3\\n1 2 3 4 5\\n2 3 4 1 5\\n3 4 1 2 5\") == \"yes\\n1 2 3 4 5\\n2 3 4 1 5\"\nassert solution(\"3 3\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"no\"\nassert solution(\"6 3\\n1 2 3 4 5 6\\n2 3 4 5 6 7\\n3 4 5 6 7 8\\n4 5 6 7 8 9\\n5 6 7 8 9 1\") == \"yes\\n1 2 3 4 5 6\\n2 3 4 5 6 7\\n3 4 5 6 7 8\\n4 5 6 7 8 9\\n5 6 7 8 9 1\"\n"
    },
    {
        "number": 3484,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 3\n1 2 3\n2 3 4''') == 'yes'\nassert solution('''5 3\n1 2 3 4 5\n2 3 4 1\n3 4 1 2\n4 1 2 3\n5 1 2''') == 'yes'\nassert solution('''4 2\n1 2 3 4\n1 2 3 4\n1 2 3 4''') == 'no'\nassert solution('''6 3\n1 2 3 4 5 6\n2 3 4 1\n3 4 1 2\n4 1 2 3\n5 1 2''') == 'no'\nassert solution('''7 7\n1 2 3 4 5 6 7\n2 3 4 1\n3 4 1 2\n4 1 2 3\n5 1 2\n6 1 2\n7 1 2''') == 'yes'\n"
    },
    {
        "number": 3484,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\\n\") == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\\n\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\\n\") == \"no\"\nassert solution(\"5 2\\n1 2 3 4 5\\n2 3 4 1 2\\n\") == \"yes\\n1 2 3 4 5\\n2 3 4 1 2\\n3 4 1 2 3\\n4 1 2 3 4\\n\"\nassert solution(\"5 2\\n1 2 3 4 5\\n2 3 4 1 2\\n\") == \"no\"\nassert solution(\"7 2\\n1 2 3 4 5 6 7\\n2 3 4 1 2 3\\n\") == \"no\"\n"
    },
    {
        "number": 3484,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3484,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 2\n1 2 3 4\n2 3 4 1\n''') == 'yes'\nassert solution('''2 2\n1 2\n''') == 'no'\n'''\n"
    },
    {
        "number": 3484,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\n\nimport sys\nfrom collections import defaultdict\nfrom collections import Counter\nimport numpy as np\n"
    },
    {
        "number": 3484,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2') == 'yes'\nassert solution('2 2 1') == 'no'\nassert solution('2 2 2') == 'yes'\nassert solution('2 2 1 2') == 'no'\nassert solution('1 1 1 1') == 'no'\n"
    },
    {
        "number": 3484,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 2\") == \"yes\"\nassert solution(\"4 0\") == \"no\"\nassert solution(\"6 0\") == \"no\"\nassert solution(\"1 2 3 4\") == \"yes\"\nassert solution(\"2 3 4 1\") == \"yes\"\n"
    },
    {
        "number": 3484,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '4 2\\n'\n    '1 2 3 4\\n'\n    '2 3 4 1\\n') == 'yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\\n'\nassert solution(\n    '5 5\\n'\n    '1 2 3 4 5\\n'\n    '2 3 4 5 1\\n'\n    '3 4 5 1 2\\n'\n    '4 5 1 2 3\\n'\n    '5 1 2 3 4\\n') == 'yes\\n1 2 3 4 5\\n2 3 4 5 1\\n3 4 5 1 2\\n4 5 1 2 3\\n5 1 2 3 4\\n'\nassert solution(\n    '4 2\\n'\n    '1 2 3 4\\n'\n    '2 3 4 1\\n') == 'no\\n'\nassert solution(\n    '4 4\\n'\n    '1 2 3 4\\n'\n    '2 3 4 1\\n'\n    '3 4 1 2\\n'\n    '4 1 2 3\\n'\n    '1 2 3 4\\n') == 'no\\n'\nassert solution(\n    '4 3\\n'\n    '1 2 3 4\\n'\n    '2 3 4 1\\n'\n    '3 4 1 2\\n'\n    '4 1 2 3\\n'\n    '1 2 3 4\\n') == 'no\\n'\n"
    },
    {
        "number": 3485,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"10 10 -10 -4 10\") == \"10.000000000\"\nassert solution(\"-1 -2 -3 -4 -5 -6 -7 -8 -9 -10\") == \"-0.9999999999\"\nassert solution(\"10 10 -10 -4 10\") == \"10.000000000\"\nassert solution(\"1 1 1 1 1\") == \"0.0\"\n"
    },
    {
        "number": 3485,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('1\\n') == None\nassert solution('1\\n2\\n3') == None\nassert solution('1\\n-1\\n3') == None\n"
    },
    {
        "number": 3485,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n10 10 -10 -4 10''') == \"10.000000000\"\nassert solution('''1\n-1 -1 -1 -1''') == \"0.000000000\"\nassert solution('''1\n1 1 1 1 1''') == \"0.000000000\"\nassert solution('''1\n1 1 1 1 1 1''') == \"0.000000000\"\nassert solution('''10\n-5 -5 -5 -5 -5 -5 -5 -5 -5 -5''') == \"0.000000000\"\n"
    },
    {
        "number": 3485,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10\n-10 -4 10''') == '10.000000000'\nassert solution('''5\n-10 -4 10''') == '10.000000000'\nassert solution('''4\n-10 -4 -10 -4''') == '0.000000000'\nassert solution('''1\n0''') == '0.000000000'\nassert solution('''2\n-5 5''') == '0.000000000'\n"
    },
    {
        "number": 3485,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4\\n-10 -4 10\") == \"10.000000000\"\nassert solution(\"4\\n10 10 -10 -4 10\") == \"10.000000000\"\nassert solution(\"4\\n10 10 -10 -4 -10\") == \"0.000000000\"\nassert solution(\"4\\n10 10 -10 -4 -10 -10\") == \"0.000000000\"\nassert solution(\"4\\n10 10 -10 -4 -10 -10 -10\") == \"0.000000000\"\n"
    },
    {
        "number": 3485,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '10.000000000'\n"
    },
    {
        "number": 3485,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == '0'\nassert solution('10') == '0'\nassert solution('-10') == '0'\nassert solution('-10 -10') == '0'\nassert solution('-10 -10 -10') == '0'\n"
    },
    {
        "number": 3485,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 3485,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"1 2 3\") == \"0.000000000\"\nassert solution(\"1 2 3 4\") == \"0.000000001\"\nassert solution(\"1 2 3 4 5\") == \"0.000000024\"\nassert solution(\"1 2 3 4 5 6\") == \"0.000000010\"\n"
    },
    {
        "number": 3485,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"10 10 -10 -4 10\\n\") == \"10.000000000\"\nassert solution(\"5\\n-10 -4 10 -10 -10\") == \"10.000000000\"\nassert solution(\"5\\n-10 -4 10 -10 -3\\n-10 -3 10 -3 -3\") == \"9.000000000\"\nassert solution(\"5\\n3 3 3 3 3\\n3 3 3 3 -3\\n-3 -3 -3 -3 -3\") == \"2.000000000\"\nassert solution(\"5\\n3 3 3 3 3\\n3 3 3 3 -3\\n3 3 3 -3 -3\\n-3 -3 -3 -3 -3\") == \"2.000000000\"\n"
    },
    {
        "number": 3486,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\") == 1\nassert solution(\"2\") == 1\nassert solution(\"3\") == 1\nassert solution(\"4\") == 1\nassert solution(\"5\") == 1\n"
    },
    {
        "number": 3486,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\"\n\"\"\"\n"
    },
    {
        "number": 3486,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n30\\n3\\n2\\n45\\n') == '1'\nassert solution('5\\n5\\n1\\n2\\n3\\n4\\n5\\n') == '1'\nassert solution('2\\n3\\n5\\n7\\n9\\n') == '1'\nassert solution('3\\n9\\n7\\n15\\n') == '2'\nassert solution('7\\n9\\n7\\n15\\n') == '4'\n"
    },
    {
        "number": 3486,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n30\\n3\\n2\\n45') == '1'\nassert solution('10\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '21'\nassert solution('6\\n2\\n3\\n4\\n5\\n6') == '1'\nassert solution('6\\n6\\n6\\n6') == '6'\nassert solution('6\\n2\\n6\\n6\\n6') == '6'\n"
    },
    {
        "number": 3486,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n30\\n3\\n2\\n45') == 1\nassert solution('10\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == 1\nassert solution('5\\n2\\n3\\n4\\n5\\n6') == 1\nassert solution('5\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == 1\nassert solution('5\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30') == 1\n"
    },
    {
        "number": 3486,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(open(\"test_input.txt\").read()) == \"1\"\n\n'''\n"
    },
    {
        "number": 3486,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    '4\\n30\\n3\\n2\\n45'\n) == 1\n'''\n"
    },
    {
        "number": 3486,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n30\\n3\\n2\\n45') == '1'\nassert solution('5\\n500\\n500\\n500\\n500\\n500\\n500\\n500\\n500\\n500') == '1'\nassert solution('6\\n10\\n15\\n20\\n25\\n30\\n35\\n40\\n45\\n50') == '2'\nassert solution('7\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22') == '5'\nassert solution('8\\n20\\n30\\n40\\n50\\n60\\n70\\n80\\n90\\n100') == '8'\n"
    },
    {
        "number": 3486,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4\\n30\\n3\\n2\\n45\") == 1\nassert solution(\"5\\n30\\n3\\n2\\n45\\n1\\n30\\n3\") == 2\n\"\"\"\n"
    },
    {
        "number": 3486,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(open(\"test_cases/1.in\", \"r\").read()) == 12\nassert solution(open(\"test_cases/2.in\", \"r\").read()) == 10\nassert solution(open(\"test_cases/3.in\", \"r\").read()) == 3\nassert solution(open(\"test_cases/4.in\", \"r\").read()) == 8\nassert solution(open(\"test_cases/5.in\", \"r\").read()) == 6\n"
    },
    {
        "number": 3487,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n\"\"\") == \"\"\"0.000000000 1.360000000\n0.000000000 1.000000000\n0.000000000 -1.000000000\n0.000000000 0.360000000\n0.880000000 0.000000000\n-0.880000000 -0.360000000\n1.02037965897\n\"\"\"\n\nassert solution(\n\"\"\"7 7 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n5 4 4\n\"\"\") == \"\"\"0.000000000 -0.000000000\n0.000000000 0.000000000\n0.000000000 -0.000000000\n0.000000000 1.360000000\n0.000000000 -1.000000000\n0.000000000 0.360000000\n0.000000000 1.000000000\n\"\"\"\n\nassert solution(\n\"\"\"6 7 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n5 4 4\n5 4 4\n\"\"\") == \"\"\"0.000000000 -0.000000000\n0.000000000 0.000000000\n0.000000000 -0.000000000\n0.000000000 1.360000000\n0.000000000 -1.000000000\n0.000000000 0.360000000\n0.000000000 1.000000000\n\"\"\"\n\nassert solution(\n\"\"\"6 7 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n5 4 4\n6 5 5\n5 4 4\n\"\"\") == \"\"\"0.000000000 -0.000000000\n0.000000000 0.000000000\n0.000000000 -0.000000000\n0.000000000 1.360000000\n0.000000000 -1.000000000\n0.000000000 0.360000000\n0.000000000 1.000000000\n\"\"\"\n\nassert solution(\n\"\"\"6 7 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n5 4 4\n5 4 4\n5 4 4\n5 4 4\n5 4 4\n\"\"\") == \"\"\"0.000000000 -0.000000000\n0.000000000 0.000000000\n0.000000000 -0.000000000\n0.000000000 1.360000000\n0.000000000 -1.000000000\n0.000000000 0.360000000\n0.000000000 1.000000000\n\"\"\""
    },
    {
        "number": 3487,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '''0.000000000 1.360000000\n0.000000000 1.000000000\n0.000000000 -1.000000000\n0.000000000 0.360000000\n0.880000000 0.000000000\n-0.880000000 -0.360000000\n1.02037965897\n'''\nassert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '''0.000000000 1.360000000\n0.000000000 1.000000000\n0.000000000 -1.000000000\n0.000000000 0.360000000\n0.880000000 0.000000000\n-0.880000000 -0.360000000\n1.02037965897\n'''\nassert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n2 3 1\n''') == '''0.000000000 1.360000000\n0.000000000 1.000000000\n0.000000000 -1.000000000\n0.000000000 0.360000000\n0.880000000 0.000000000\n-0.880000000 -0.360000000\n1.02037965897\n'''\nassert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n2 3 1\n2 1 2\n''') == '''0.000000000 1.360000000\n0.000000000 1.000000000\n0.000000000 -1.000000000\n0.000000000 0.360000000\n0.880000000 0.000000000\n-0.880000000 -0.360000000\n1.02037965897\n'''\nassert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n2 3 1\n2 1 2\n3 1 3\n''') == '''0.000000000 1.360000000\n0.000000000 1.000000000\n0.000000000 -1.000000000\n0.000000000 0.360000000\n0.880000000 0.000000000\n-0.880000000 -0.360000000\n1.02037965897\n'''\n"
    },
    {
        "number": 3487,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\nprint(solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n'))\nassert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\nprint(solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n'))\nassert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\nprint(solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n'))\nassert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\nprint(solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n'))\nassert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'"
    },
    {
        "number": 3487,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"6 6 3.0 0.66\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\"\n\"\"\"\n"
    },
    {
        "number": 3487,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '''0.000000000 1.360000000\n0.000000000 1.000000000\n0.000000000 -1.000000000\n0.000000000 0.360000000\n0.880000000 0.000000000\n-0.880000000 -0.360000000\n1.02037965897\n'''\n\nassert solution(\n'''\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '''0.000000000 1.360000000\n0.000000000 1.000000000\n0.000000000 -1.000000000\n0.000000000 0.360000000\n0.880000000 0.000000000\n-0.880000000 -0.360000000\n1.02037965897\n'''\n\nassert solution(\n'''\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '''0.000000000 1.360000000\n0.000000000 1.000000000\n0.000000000 -1.000000000\n0.000000000 0.360000000\n0.880000000 0.000000000\n-0.880000000 -0.360000000\n1.02037965897\n'''\n\nassert solution(\n'''\n3 3 1\n3 2 3\n4 2 1\n''') == '''-0.110000000000000000000001 1.2799999999999998\n-0.110000000000000000000001 1.2799999999999998\n0.330000000000000004 1.2799999999999998\n0.660000000000000004 1.2799999999999998\n0.25 0.330000000000000004\n0.25 0.660000000000000004\n0.25 0.67999999999999997\n0.25 1.25\n0.5 1.25\n0.5 0.5\n-0.5 0.5\n-0.5 1.25\n-0.5 1.25\n-0.5 0.5\n0.5 0.5\n0.5 1.25\n0.5 1.25\n0.5 0.5\n0.5 0.5\n-0.5 1.25\n-0.5 1.25\n-0.5 0.5\n0.5 0.5\n0.5 1.25\n0.5 1.25\n0.5 0.5\n0.5 0.5\n-0.5 1.25\n-0.5 1.25\n-0.5 0.5\n0.5 0.5\n0.5 1.25\n0.5 1.25\n0.5 0.5\n0.5 0.5\n-0.5 1.25\n-0.5 1.25\n-0.5 0.5\n0.5 0.5\n0.5 1.25\n0.5 1.25\n0.5 0.5\n0.5 0.5\n-0.5 1.25\n-0.5 1.25\n-0.5 0.5\n0.5 0.5\n0.5 1.25\n0.5 1.25\n0.5 0.5\n0.5 0.5\n-0"
    },
    {
        "number": 3487,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 6 3.0 0.66') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\n\nassert solution('2 4 8') == '0.000000000 1.000000000\\n0.000000000 1.000000000'\n\nassert solution('4 6 1') == '0.000000000 1.000000000\\n0.000000000 1.000000000'\n\nassert solution('3 6 1') == '0.000000000 1.000000000\\n0.000000000 1.000000000'\n\nassert solution('4 5 5') == '0.000000000 -1.000000000\\n0.000000000 0.000000000'"
    },
    {
        "number": 3487,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(TEST_INPUT) == TEST_OUTPUT\n\"\"\"\n"
    },
    {
        "number": 3487,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 2 3 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\nprint(solution(open('/home/jsk/data/week9/o4_a_test.txt', 'r').read().strip()))\n\n\"\"\""
    },
    {
        "number": 3487,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"6 6 3.0 0.66\") == \"0.000000000 1.360000000\"\nassert solution(\"2 4 8\") == \"0.000000000 1.000000000\"\nassert solution(\"4 6 1\") == \"0.000000000 1.000000000\"\nassert solution(\"3 6 1\") == \"0.000000000 -1.000000000\"\nassert solution(\"4 5 5\") == \"0.000000000 0.360000000\"\n"
    },
    {
        "number": 3487,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(open(\"test_data/06_03_3_6_0_66.txt\").read()) == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\""
    },
    {
        "number": 3488,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2') == '4'\nassert solution('4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n3') == '2'\nassert solution('4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n3\\n4\\n5\\n6\\n7') == '2'\nassert solution('4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '4'\n\"\"\"\n"
    },
    {
        "number": 3488,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0 0\n0 3\n3 3\n3 0\n2\n1 1''') == '4'\nassert solution('''0 0\n0 3\n3 3\n3 0\n2\n1 1\n2 2''') == '4'\nassert solution('''3\n0 1\n2 3\n1 1\n1 1\n1 1\n0 0''') == '4'\nassert solution('''3\n0 1\n2 3\n1 1\n0 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n0 0''') == '4'\nassert solution('''3\n0 1\n2 3\n1 1\n1 1\n1 1\n1 1\n1 1\n0 0\n1 1\n1 1\n1 1\n1 1''') == '4'\n"
    },
    {
        "number": 3488,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3488,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(INPUT))\n"
    },
    {
        "number": 3488,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n0 0\n0 3\n3 3\n3 0\n2\n1 1\n2 2''') == '4'\nassert solution('''8\n-9 -10\n0 0\n0 3\n3 3\n3 0\n2\n1 1\n2 2''') == '6'\n'''\n'''\n"
    },
    {
        "number": 3488,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2') == '4'\nassert solution('2\\n1 1\\n2 2') == '2'\nassert solution('1\\n1 1\\n1 1') == '0'\nassert solution('2\\n1 1\\n1 2') == '2'\nassert solution('1\\n1 1\\n1 2\\n1 3\\n1 4\\n2 1\\n3 2\\n4 3\\n1 1\\n2 3\\n3 2\\n2 3\\n4 1') == '2'\n"
    },
    {
        "number": 3488,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(open(\"data/test_1.txt\").read()))\nprint(solution(open(\"data/test_2.txt\").read()))\nprint(solution(open(\"data/test_3.txt\").read()))\n"
    },
    {
        "number": 3488,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n0 0\n0 3\n3 3\n3 0\n2\n1 1\n2 2''') == '4'\nassert solution('''5\n0 0\n0 3\n3 3\n3 0\n2\n1 1\n2 2\n4\n1 0\n3 0\n2\n1 0\n3 0''') == '4'\nassert solution('''7\n0 0\n0 3\n3 3\n3 0\n2\n1 1\n2 2\n4\n1 0\n3 0\n2\n1 0\n3 0\n2\n1 0\n3 0\n2\n1 0\n3 0\n2\n1 0\n3 0\n2\n1 0\n3 0\n2\n1 0\n3 0''') == '6'\nprint('Passed')\n"
    },
    {
        "number": 3488,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n0 0\n0 3\n3 3\n3 0\n2\n1 1\n2 2''') == '4'\nassert solution('''4\n-1 -1\n-1 4\n4 4\n4 -1\n2\n-1 -1\n-1 4\n4 4''') == '3'\nassert solution('''4\n-1 -1\n-1 4\n4 4\n4 -1\n2\n-1 -1\n-1 4\n4 4''') == '3'\nassert solution('''4\n-1 -1\n-1 4\n4 4\n4 -1\n2\n-1 -1\n-1 4\n4 4''') == '3'\nassert solution('''4\n-1 -1\n-1 4\n4 4\n4 -1\n2\n-1 -1\n-1 4\n4 4''') == '3'\n"
    },
    {
        "number": 3488,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2') == '4'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n448\\n449\\n450\\n451\\n452\\n453\\"
    },
    {
        "number": 3489,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 0\n0 1\n0 2\n0 3\n''') == '2\\n3 2\\n3 1'\nassert solution('''4 0\n1 2\n2 3\n1 3\n3 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3 4\n1 3\n2 4\n1 2\n3"
    },
    {
        "number": 3489,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 0\n0 1\n0 2\n0 3\n''') == '2\\n3 2\\n3 1\\n'\nassert solution('''2 0\n0 1\n1 2\n0 2\n''') == '2\\n2 1\\n'\nassert solution('''2 1\n0 1\n1 2\n0 2\n''') == '2\\n1 2\\n'\nassert solution('''3 0\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == '3\\n'\nassert solution('''3 0\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n''') == '3\\n'\n"
    },
    {
        "number": 3489,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    0 1\n    0 2\n    0 3\n    \"\"\".strip()\n) == \"2\\n3 2\\n3 1\"\n\nassert solution(\n    \"\"\"\n    2 2\n    1 0\n    2 1\n    0 3\n    3 1\n    \"\"\".strip()\n) == \"2\\n1 0\"\n\nassert solution(\n    \"\"\"\n    2 1\n    2 0\n    0 1\n    1 3\n    1 2\n    3 1\n    \"\"\".strip()\n) == \"1\\n3 1\"\n"
    },
    {
        "number": 3489,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\\n3 2\\n3 1\"\n\nassert stdin == \"\"\n\nassert stdin == \"3 3\\n0 1\\n0 2\\n0 3\"\n\nassert stdin == \"5 3\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\"\n\nassert stdin == \"7 7\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\\n0 6\\n0 7\""
    },
    {
        "number": 3489,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 0\n0 1\n0 2\n0 3\n4 1\n4 2\n3 2\n3 1\n''') == '''2\n3 2\n3 1\n'''\n\nassert solution('''4 0\n0 1\n0 2\n0 3\n4 1\n0 3\n3 2\n3 1\n''') == '''3\n3 2\n3 1\n'''\n\nassert solution('''5 4\n0 1\n0 3\n3 4\n4 3\n3 2\n3 1\n''') == '''2\n3 2\n3 1\n'''\n\nassert solution('''4 4\n0 1\n0 3\n3 4\n4 3\n3 2\n3 1\n''') == '''0\n3 2\n3 1\n'''\n\nassert solution('''2 2\n0 1\n0 2\n1 2\n1 2\n''') == '''2\n0 1\n1 1\n'''"
    },
    {
        "number": 3489,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 0\n0 1\n0 2\n0 3\n0 4\n0 5\n1 2\n2 3\n3 4\n4 5\n0 1\n0 2\n0 3\n0 4\n0 5\n1 2\n1 3\n2 3\n3 4\n3 5\n2 4\n2 5\n1 4\n1 5\n0 1\n0 2\n0 3\n0 4\n0 5\n1 2\n1 3\n2 3\n2 4\n2 5\n1 4\n1 5\n1 6\n1 7\n2 6\n2 7\n3 6\n3 7\n3 8\n4 5\n4 5\n4 6\n4 7\n4 8\n5 6\n5 7\n5 8\n5 9\n6 7\n6 8\n6 9\n6 10\n7 8\n7 9\n7 10\n7 11\n8 9\n8 10\n8 11\n8 12\n9 10\n9 11\n9 12\n9 13\n10 11\n10 12\n10 13\n10 14\n11 12\n11 13\n11 14\n11 15\n12 13\n12 14\n12 15\n12 16\n13 14\n13 15\n13 16\n13 17\n14 15\n14 16\n14 17\n14 18\n15 16\n15 17\n15 18\n15 19\n16 17\n16 18\n16 19\n16 20\n17 18\n17 19\n17 20\n17 21\n18 19\n18 20\n18 21\n18 22\n19 20\n19 21\n19 22\n19 23\n20 21\n20 22\n20 23\n20 24\n21 22\n21 23\n21 24\n21 25\n22 23\n22 24\n22 25\n22 26\n23 24\n23 25\n23 26\n23 27\n24 25\n24 26\n24 27\n24 28\n25 26\n25 27\n25 28\n25 29\n26 27\n26 28\n26 29\n26 30\n27 28\n27 29\n27 30\n27 31\n28 29\n28 30\n28 31\n28 32\n29 30\n29 31\n29 32\n29 33\n30 32\n30 33\n30 34\n31 32\n31 33\n31 34\n31 35\n32 33\n32 34\n32 35\n32 36\n33 34\n33 35\n33 36\n33 37\n34 35\n34 36\n34 37\n34 38\n35 36\n35 37\n35 38\n35 39\n36 37\n36 38\n36 39\n36 40\n37 38\n37 39\n37 40\n37 41\n38 39\n38 40\n38 41\n38 42\n39 40\n39 41\n39 42\n39 43\n40 41\n40 42\n40 43\n40 44\n41 42\n41 43\n41 44\n41 45\n42 43\n42 44\n42 45\n42 46\n43 44\n43 45\n43 46\n43 47\n44 45\n44 46\n44 47\n44 48\n45 46\n45 47\n45 48\n45 49\n46 47\n46 48\n46 49\n46 50\n47 48\n47 49\n47 50\n47 51\n48 49\n48 50\n48 51\n48 52\n49 50\n49 51\n49 52\n49 53\n50 51\n50 52\n50 53\n50 54\n51 52\n51 53\n51 54\n51 55\n52 53\n52 54\n52 55\n52 56\n53 54\n53 55\n53 56\n53 57\n54 55\n54 56\n54 57\n54 58\n55 56\n55 57\n55 58\n55 59\n56 57\n56 58\n56 59\n56 60\n57 58\n57 59\n57 60\n57 61\n58 59\n58 60\n58 61\n58 62\n59 60\n59 61\n59 62\n59 63\n60 61\n60 62\n60 63\n60 64\n61 62\n61 63\n61 64\n61 65\n62 63\n62 64\n62 65\n62 66\n63 64\n63 65\n63 66\n63 67\n64 65\n64 66\n64 67\n64 68\n65 66\n65 67\n65 68\n65 69\n66 67\n66 68\n66 69\n66 70\n67 68\n67 69\n67 70\n67 71\n68 69\n68 70\n68 71\n68 72\n69 70\n69 71\n69 72\n69 73\n70 71\n70 72\n70 73\n70 74\n71 72\n71 73\n71 74\n71 75\n72 73\n72 74\n72 75\n72 76\n73 74\n73 75\n73 76\n73 77\n74 75\n74 76\n74 77\n74 78\n75 76\n75 77\n75 78\n75 79\n76 77\n76 78\n76 79\n76 80\n77 78\n77 79\n77 80\n77 81\n78 79\n78 80\n78 81\n78 82\n79 80\n79 81\n79 82\n79 83\n80 81\n80 82\n80 83\n80 84\n81 82\n81 83\n81 84\n81 85\n82 84\n82 85\n82 86\n83 84\n83 85\n83 86\n83 87\n84 85\n84 86\n84 87\n84 88\n85 86\n85 87\n85 88\n85 89\n86 87\n86 88\n86 89\n86 90\n87 88\n87 89\n87 90\n87 91\n88 89\n88 90\n88 91\n88 92\n89 90\n89 91\n89 92\n89 93\n90 91\n90 92\n90 93\n90 94\n91 92\n91 93\n91 94\n91 95\n92 93\n92 94\n92 95\n92 96\n93 94\n93 95\n93 96\n93 97\n94 95\n94 96\n94 97\n94 98\n95 96\n95 97\n95 98\n95 99\n96 97\n96 98\n96 99\n96 100\n97 98\n97 99\n97 100\n97 101\n98 99\n98 100\n98 101\n98 102\n99 100\n99 101\n99 102\n99 103\n100 101\n100 102\n100 103\n100 104\n101 103\n101 104\n101 105\n102 104\n102 105\n102 106\n103 105\n103 106\n103 107\n104 105\n104 106\n104 107\n104 108\n105 106\n105 107\n105 108\n105 109\n106 107\n106 108\n106 109\n106 110\n107 108\n107 109\n107 110\n107 111\n108 109\n108 110\n"
    },
    {
        "number": 3489,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 0\n0 1\n0 2\n0 3''') == \"2\\n3 2\\n3 1\"\nassert solution('''4 0\n0 1\n0 2\n1 2\n2 3\n1 3''') == \"0\"\n'''\npass\n"
    },
    {
        "number": 3489,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3489,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 0\") == \"2\\n3 2\\n3 1\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"2 3\\n0 1\\n0 2\\n0 3\\n1 3\") == \"2\\n3 2\\n3 1\"\nassert solution(\"5 3\\n0 1\\n0 2\\n0 3\\n0 4\\n1 4\\n2 4\\n3 4\\n4 4\") == \"3\\n4 3\\n4 4\"\n"
    },
    {
        "number": 3489,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 0') == '0'\nassert solution('1 1') == '0'\nassert solution('2 2') == '0'\nassert solution('3 3') == '0'\nassert solution('4 4') == '1'\n"
    },
    {
        "number": 3490,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"ok\"\nassert solution(\"0 0 0\") == \"ok\"\nassert solution(\"0 1.5 0\") == \"ok\"\nassert solution(\"0 0 0\") == \"ok\"\nassert solution(\"1 0 0\") == \"ok\"\n"
    },
    {
        "number": 3490,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 0 0\\n0 1.5 0') == 'ok'\nassert solution('0 0 0\\n0 1.5 0\\n0 0 0') == 'ok'\nassert solution('0 0 0\\n0 1.5 0\\n0 1.5 0') == 'crash'\nassert solution('0 0 0\\n0 1.5 0\\n0 1.5 1') == 'crash'\nassert solution('0 0 0\\n0 1.5 0\\n0 1.5 1\\n0 0 0') == 'crash'\n"
    },
    {
        "number": 3490,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 0 0\n0 1.5 0\n''') == 'ok'\nassert solution('''1 2 0\n0 3.5 0\n''') == 'ok'\nassert solution('''1 0 0\n0 1.5 0\n''') == 'ok'\nassert solution('''1 0 0\n0 1.5 0\n''') == 'ok'\nassert solution('''1 0 0\n0 1.5 0\n''') == 'ok'\n"
    },
    {
        "number": 3490,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"ok\"\n\"\"\"\n"
    },
    {
        "number": 3490,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n    2\n    0 0 0\n    0 1.5 0\n''') == 'ok'\nassert solution('''\n    3\n    0 0 0\n    0 1.5 0\n    0 0 1.5\n''') == 'crash'\nassert solution('''\n    3\n    0 0 0\n    0 1.5 0\n    0 0 1.5\n''') == 'ok'\nassert solution('''\n    5\n    0 0 0\n    0 0 1.5\n    1.5 0 1.5\n    0 1.5 1.5\n    0 0 1.5\n''') == 'crash'\n'''\n'''"
    },
    {
        "number": 3490,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''0 0 0\n0 1.5 0\n''') == 'ok'\nassert solution('''1e-6\n1e-9\n2e-4\n''') == 'ok'\nassert solution('''1e-5\n1e-6\n2e-3\n''') == 'ok'\nassert solution('''1e-7\n1e-8\n2e-2\n''') == 'ok'\nassert solution('''1e-7\n1e-8\n2e-2\n''') == 'ok'\n"
    },
    {
        "number": 3490,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"ok\"\nassert solution(\"0 0 0\") == \"ok\"\nassert solution(\"0 1.5 0\") == \"ok\"\nassert solution(\"1 1 1\") == \"ok\"\nassert solution(\"1 1 1\") == \"ok\"\n"
    },
    {
        "number": 3490,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\\\n2\n-0.001 2.9 -0.001\n0 1.3 0\n''') == 'ok'\n\nassert solution('''\\\n4\n0.7 0.2 0.2 0.5\n-0.2 0.5 0.8 0.9\n0.4 -0.6 -0.3 -0.2\n-0.7 0.4 0.4 0.5\n''') == 'ok'\n\nassert solution('''\\\n8\n0.7 0.2 0.2 0.5 0.2 0.1 0.9 0.1\n-0.2 0.5 0.8 0.9 -0.3 -0.4 -0.7 -0.6\n0.4 -0.6 -0.3 -0.2 -0.1 0.2 0.9\n0.7 0.4 0.4 0.5 -0.2 -0.5 0.8 -0.9\n-0.7 0.4 0.4 0.5 -0.2 -0.5 0.8 -0.9\n0.2 -0.5 -0.8 -0.9 0.2 0.1 0.9 0.1\n-0.5 0.4 -0.6 -0.3 -0.2 -0.1 0.2 0.9\n''') == 'ok'\n\nassert solution('''\\\n10\n0.7 0.2 0.2 0.5 0.2 0.1 0.9 0.1 0.1\n-0.2 0.5 0.8 0.9 -0.3 -0.4 -0.7 -0.6\n0.4 -0.6 -0.3 -0.2 -0.1 0.2 0.9 0.1\n0.7 0.4 0.4 0.5 -0.2 -0.5 0.8 -0.9 0.1\n-0.7 0.4 0.4 0.5 -0.2 -0.5 0.8 -0.9 0.1\n0.2 -0.5 -0.8 -0.9 0.2 0.1 0.9 0.1 0.1\n-0.5 0.4 -0.6 -0.3 -0.2 -0.1 0.2 0.9 0.1\n''') == 'crash'\n\nassert solution('''\\\n20\n0.7 0.2 0.2 0.5 0.2 0.1 0.9 0.1 0.1\n-0.2 0.5 0.8 0.9 -0.3 -0.4 -0.7 -0.6\n0.4 -0.6 -0.3 -0.2 -0.1 0.2 0.9 0.1\n0.7 0.4 0.4 0.5 -0.2 -0.5 0.8 -0.9 0.1\n-0.7 0.4 0.4 0.5 -0.2 -0.5 0.8 -0.9 0.1\n0.2 -0.5 -0.8 -0.9 0.2 0.1 0.9 0.1 0.1\n-0.5 0.4 -0.6 -0.3 -0.2 -0.1 0.2 0.9 0.1\n''') == 'crash'"
    },
    {
        "number": 3490,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0 0 0\n0 1.5 0''') == 'ok'\nassert solution('''1 2 1\n0 0 0''') == 'ok'\nassert solution('''1 2 1\n0 1 0''') == 'ok'\nassert solution('''1 2 1\n0 1 0.00000000001''') == 'ok'\nassert solution('''1 2 1\n1.00000000001 0 0''') == 'ok'\n"
    },
    {
        "number": 3490,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 0 0') == 'ok'\nassert solution('0 1.5 0') == 'ok'\nassert solution('1 1 1 1') == 'ok'\nassert solution('1 1 2 1') == 'crash'\nassert solution('1 1 3 1') == 'crash'\n"
    },
    {
        "number": 3491,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == '2'"
    },
    {
        "number": 3491,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\nfrom sys import stdin, stdout\nimport random"
    },
    {
        "number": 3491,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == 'G 0\\nR 0\\nG 0\\nG 0\\nR 0\\nG 0\\nR 0'\ninput = '''5 4\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n3 4\n0 3\n3 4\n3 4\n'''\nprint(solution(input))"
    },
    {
        "number": 3491,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 4\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4''') == '''2\nR 0\nG 2'''\n\nassert solution('''5 3\n0 1\n0 3\n2 4\n2 5\n2 6\n''') == '''2\nG 2\nG 2'''\n\nassert solution('''5 3\n0 1\n0 3\n2 4\n2 5\n2 6\n''') == '''2\nR 0\nR 2\nG 2'''\n\nassert solution('''5 4\n0 1\n0 3\n0 4\n2 3\n2 4\n0 4\n0 1\n1 2\n2 3\n2 4\n''') == '''3\nR 0\nG 2\nR 0\n'''\n\nassert solution('''5 4\n0 1\n0 3\n1 2\n1 4\n2 4\n1 3\n0 4\n0 2\n2 4\n1 3\n2 4\n''') == '''2\nR 0\nG 2\nR 0\nR 0\nR 0\nR 0'''"
    },
    {
        "number": 3491,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('4 2') == 'R 0'\nassert solution('4 2') == 'G 0'\nassert solution('4 2') == 'R 1'\nassert solution('4 2') == 'G 1'\n"
    },
    {
        "number": 3491,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 4\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4''') == \"2\"\nassert solution('''10 10\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n4 5\n4 5\n4 5\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n4 5\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4''') == \"R1R1R1R1R1R1R1G1G1G1G1G1G1G1G1G1G1G1G1G1\"\nassert solution('''10 10\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n4 5\n4 5\n4 5\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n4 5\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n4 5\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n4 5\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n4 5\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n4 5\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n4 5\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n4 5\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n4 5\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n4 5\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n4 5\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n4 5\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n4 5\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n4 5\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n4 5\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n4 5\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n4 5\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n4 5\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n4 5\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n4 5\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n4 5\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n4 5\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n4 5\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n4 5\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n4 5\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n4 5\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n4 5\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n4 5\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n4 5\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n4 5\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n4 5\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n4 5\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n4 5\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n4 5\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n4 5\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n4 5\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n4 5\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n4 5\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n4 5\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n4 5\n0 1\n0 3\n1 2"
    },
    {
        "number": 3491,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0\\n1\\n3\\n2\\n4\\n2\\n0\\n4\\n2\\n3\") == \"G 0\\nG 2\\nR 0\\nR 3\\nG 0\\nG 2\"\nassert solution(\"2\\n2\\n2\\n2\\n1\\n0\\n0\\n0\\n0\\n0\\n1\\n1\\n0\\n0\\n0\\n0\\n0\\n1\\n0\\n1\\n1\\n1\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0"
    },
    {
        "number": 3491,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 4\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4''') == \"\"\"2\nR 0\nG 2\"\"\"\n\nassert solution('''6 6\n0 0\n0 4\n1 2\n2 3\n3 5\n4 4\n5 5''') == \"\"\"2\nR 0\nG 1\nR 1\nG 1\nR 2\nG 2\"\"\"\n\nassert solution('''6 6\n0 0\n0 4\n1 2\n2 3\n3 5\n4 4\n5 5''') == \"\"\"4\nR 0\nG 1\nR 1\nG 1\nR 2\nG 2\"\"\"\n\nassert solution('''6 6\n0 0\n0 4\n1 2\n2 3\n3 5\n4 4\n5 5''') == \"\"\"2\nR 0\nG 2\nR 2\nG 1\"\"\"\n\nassert solution('''6 6\n0 0\n0 4\n1 2\n2 3\n3 5\n4 4\n5 5''') == \"\"\"1\nR 0\nG 2\nR 2\nG 1\"\"\""
    },
    {
        "number": 3491,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 3491,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"5 4\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\"\"\") == \"\"\"2\nR 0\nG 2\"\"\"\n\nassert solution(\"\"\"6 6\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n1 2\n1 3\n1 4\n1 5\n1 6\n2 3\n2 4\n2 5\n2 6\n3 4\n3 5\n3 6\n4 5\n4 6\n5 6\"\"\") == \"\"\"10\nR 0\nG 2\nR 1\nG 3\nR 2\nG 4\nR 3\nG 5\nR 4\nG 6\nR 5\nG 7\nR 6\nG 8\nR 7\nG 9\nR 8\nG 10\nR 9\nG 11\nR 10\nG 12\nR 11\nG 13\nR 12\nG 14\nR 13\nG 15\nR 14\nG 16\nR 15\nG 17\nR 16\nG 18\nR 17\nG 19\nR 18\nG 20\nR 19\nG 21\nR 20\nG 22\nR 21\nG 23\nR 22\nG 24\nR 23\nG 25\nR 24\nG 26\nR 25\nG 27\nR 26\nG 28\nR 27\nG 29\nR 28\nG 30\nR 29\nG 31\nR 30\nG 32\nR 31\nG 33\nR 32\nG 34\nR 33\nG 35\nR 34\nG 36\nR 35\nG 37\nR 36\nG 38\nR 37\nG 39\nR 38\nG 40\nR 39\nG 41\nR 40\nG 42\nR 41\nG 43\nR 42\nG 44\nR 43\nG 45\nR 44\nG 46\nR 45\nG 47\nR 46\nG 48\nR 47\nG 49\nR 48\nG 50\nR 49\nG 51\nR 50\nG 52\nR 51\nG 53\nR 52\nG 54\nR 53\nG 55\nR 54\nG 56\nR 55\nG 57\nR 56\nG 58\nR 57\nG 59\nR 58\nG 60\nR 59\nG 61\nR 60\nG 62\nR 61\nG 63\nR 62\nG 64\nR 63\nG 65\nR 64\nG 66\nR 65\nG 67\nR 66\nG 68\nR 67\nG 69\nR 68\nG 70\nR 69\nG 71\nR 70\nG 72\nR 71\nG 73\nR 72\nG 74\nR 73\nG 75\nR 74\nG 76\nR 75\nG 77\nR 76\nG 78\nR 77\nG 79\nR 78\nG 80\nR 79\nG 81\nR 80\nG 82\nR 81\nG 83\nR 82\nG 84\nR 83\nG 85\nR 84\nG 86\nR 85\nG 87\nR 86\nG 88\nR 87\nG 89\nR 88\nG 90\nR 89\nG 91\nR 90\nG 92\nR 91\nG 93\nR 92\nG 94\nR 93\nG 95\nR 94\nG 96\nR 95\nG 97\nR 96\nG 98\nR 97\nG 99\nR 98\nG 100\nR 99\nG 101\nR 100\nG 102\nR 101\nG 103\nR 102\nG 104\nR 103\nG 105\nR 104\nG 106\nR 105\nG 107\nR 106\nG 108\nR 107\nG 109\nR 108\nG 110\nR 109\nG 111\nR 110\nG 112\nR 111\nG 113\nR 112\nG 114\nR 113\nG 115\nR 114\nG 116\nR 115\nG 117\nR 116\nG 118\nR 117\nG 119\nR 118\nG 120\nR 119\nG 121\nR 120\nG 122\nR 121\nG 123\nR 122\nG 124\nR 123\nG 125\nR 124\nG 126\nR 125\nG 127\nR 126\nG 128\nR 127\nG 129\nR 128\nG 130\nR 129\nG 131\nR 130\nG 132\nR 131\nG 133\nR 132\nG 134\nR 133\nG 135\nR 134\nG 136\nR 135\nG 137\nR 136\nG 138\nR 137\nG 139\nR 138\nG 140\nR 139\nG 141\nR 140\nG 142\nR 141\nG 143\nR 142\nG 144\nR 143\nG 145\nR 144\nG 146\nR 145\nG 147\nR 146\nG 148\nR 147\nG 149\nR 148\nG 150\nR 149\nG 151\nR 150\nG 152\nR 151\nG 153\nR 152\nG 154\nR 153\nG 155\nR 154\nG 156\nR 155\nG 157\nR 156\nG 158\nR 157\nG 159\nR 158\nG 160\nR 159\nG 161\nR 160\nG 162\nR 161\nG 163\nR 162\nG 164\nR 163\nG 165\nR 164\nG 166\nR 165\nG 167\nR 166\nG 168\nR 167\nG 169\nR 168\nG 170\nR 169\nG 171\nR 170\nG 172\nR 171\nG 173\nR 172\nG 174\nR 173\nG 175\nR 174\nG 176\nR 175\nG 177\nR 176\nG 178\nR 177\nG 179\nR 178\nG 180\nR 179\nG 181\nR 180\nG 182\nR 181\nG 183\nR 182\nG 184\nR 183\nG 185\nR 184\nG 186\nR 185\nG 187\nR 186\nG 188\nR 187\nG 189\nR 188\nG 190\nR 189\nG 191\nR 190\nG 192\nR 191\nG 193\nR 192\nG 194\n"
    },
    {
        "number": 3492,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n3 A B C E') == '2'\nassert solution('2 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n3 A B C E') == '4'\nassert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n3 A B C E') == '3'\nassert solution('3 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n3 A B C E') == '3'\nassert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n3 A B C E') == '2'\n"
    },
    {
        "number": 3492,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 2\n\n\"\"\"\n\n\nimport sys\n"
    },
    {
        "number": 3492,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == \"2\"\nassert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == \"1\"\nassert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == \"2\"\nassert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == \"2\"\nassert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == \"2\"\n"
    },
    {
        "number": 3492,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == ''\n'''\n"
    },
    {
        "number": 3492,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3492,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == str(2)\n\ninput()\nstates = []\nfor _ in range(int(input())):\n    states.append(input())\ninput()\nfacs = []\nfor _ in range(int(input())):\n    facs.append(input())\ninput()\ntrans = []\nfor _ in range(int(input())):\n    trans.append(input())\ninput()\ninput()\ninput()\ninput()\ninput()\nprint(solution(stdin))\n"
    },
    {
        "number": 3492,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\nassert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\nassert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\nassert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\nassert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\n"
    },
    {
        "number": 3492,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n3 C D E\\n3 D E F\\n3 E F G\\n3 F G G') == '2'\nassert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n3 C D E\\n3 D E F\\n3 E F G\\n3 F G G\\n3 G G G') == '2'\nassert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n3 C D E\\n3 D E F\\n3 E F G\\n3 F G G\\n3 G G G\\n3 G G G') == '2'\nassert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n3 C D E\\n3 D E F\\n3 E F G\\n3 F G G\\n3 G G G\\n3 G G G\\n3 G G G') == '2'\nassert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n3 C D E\\n3 D E F\\n3 E F G\\n3 F G G\\n3 G G G\\n3 G G G\\n3 G G G\\n3 G G G\\n3 G G G') == '2'\n"
    },
    {
        "number": 3492,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 5 5 5\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\nassert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n2 A A A\n3 B B B\n3 C C C\n2 D D D\n2 E E E\n''') == '2'\nassert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n2 A A A\n3 B B B\n3 C C C\n2 D D D\n2 E E E\n''') == '2'\nassert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n2 A A A\n3 B B B\n3 C C C\n2 D D D\n2 E E E\n''') == '2'\nassert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n2 A A A\n3 B B B\n3 C C C\n2 D D D\n2 E E E\n''') == '2'\n"
    },
    {
        "number": 3492,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('A B C\\n'\n                'D E F\\n'\n                '3 A E G\\n'\n                '3 A C E\\n'\n                '3 B D F\\n') == '2'\nassert solution('A B C\\n'\n                'D E F\\n'\n                '3 A E G\\n'\n                '3 A C E\\n'\n                '3 B D F\\n'\n                '4 A E G\\n'\n                '4 A C E\\n'\n                '4 B D F\\n'\n                '5 A E G\\n'\n                '5 A C E\\n'\n                '5 B D F\\n'\n                '6 A E G\\n'\n                '6 A C E\\n'\n                '6 B D F\\n'\n                '7 A E G\\n'\n                '7 A C E\\n'\n                '7 B D F\\n') == '3'\nassert solution('1\\n'\n                '2\\n'\n                '3\\n'\n                '4\\n'\n                '5\\n'\n                '6\\n'\n                '7\\n'\n                '8\\n'\n                '9\\n'\n                '10\\n'\n                '11\\n'\n                '12\\n'\n                '13\\n'\n                '14\\n'\n                '15\\n'\n                '16\\n'\n                '17\\n'\n                '18\\n'\n                '19\\n'\n                '20\\n') == '5'\nassert solution('1\\n'\n                '2\\n'\n                '3\\n'\n                '4\\n'\n                '5\\n'\n                '6\\n'\n                '7\\n'\n                '8\\n'\n                '9\\n'\n                '10\\n'\n                '11\\n'\n                '12\\n'\n                '13\\n'\n                '14\\n'\n                '15\\n'\n                '16\\n'\n                '17\\n'\n                '18\\n'\n                '19\\n'\n                '20\\n'\n                '21\\n'\n                '22\\n'\n                '23\\n'\n                '24\\n'\n                '25\\n'\n                '26\\n'\n                '27\\n'\n                '28\\n'\n                '29\\n'\n                '30\\n'\n                '31\\n'\n                '32\\n'\n                '33\\n'\n                '34\\n'\n                '35\\n'\n                '36\\n'\n                '37\\n'\n                '38\\n'\n                '39\\n'\n                '40\\n'\n                '41\\n'\n                '42\\n'\n                '43\\n'\n                '44\\n'\n                '45\\n'\n                '46\\n'\n                '47\\n'\n                '48\\n'\n                '49\\n'\n                '50\\n'\n                '51\\n'\n                '52\\n'\n                '53\\n'\n                '54\\n'\n                '55\\n'\n                '56\\n'\n                '57\\n'\n                '58\\n'\n                '59\\n'\n                '60\\n'\n                '61\\n'\n                '62\\n'\n                '63\\n'\n                '64\\n'\n                '65\\n'\n                '66\\n'\n                '67\\n'\n                '68\\n'\n                '69\\n'\n                '70\\n'\n                '71\\n'\n                '72\\n'\n                '73\\n'\n                '74\\n'\n                '75\\n'\n                '76\\n'\n                '77\\n'\n                '78\\n'\n                '79\\n'\n                '80\\n'\n                '81\\n'\n                '82\\n'\n                '83\\n'\n                '84\\n'\n                '85\\n'\n                '86\\n'\n                '87\\n'\n                '88\\n'\n                '89\\n'\n                '90\\n'\n                '91\\n'\n                '92\\n'\n                '93\\n'\n                '94\\n'\n                '95\\n'\n                '96\\n'\n                '97\\n'\n                '98\\n'\n                '99\\n'\n                '100\\n'\n                '101\\n'\n                '102\\n'\n                '103\\n'\n                '104\\n'\n                '105\\n'\n                '106\\n'\n                '107\\n'\n                '108\\n'\n                '109\\n'\n                '110\\n'\n                '111\\n'\n                '112\\n'\n                '113\\n'\n                '114\\n'\n                '115\\n'\n                '116\\n'\n                '117\\n'\n                '118\\n'\n                '119\\n'\n                '120\\n'\n                '121\\n'\n                '122\\n'\n                '123\\n'\n                '124\\n'\n                '125\\n'\n                '126\\n'\n                '127\\n'\n                '128\\n'\n                '129\\n'\n                '130\\n'\n                '131\\n'\n                '132\\n'\n                '133\\n'\n                '134\\n'\n                '135\\n'\n                '136\\n'\n                '137\\n'\n                '138\\n'\n                '139\\n'\n                '140\\n'\n                '141\\n'\n                '142\\n'\n                '143\\n'\n                '144\\n'\n                '145\\n'\n"
    },
    {
        "number": 3493,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('YYY\\nNYY\\nYNY') == '2'\nassert solution('YNY\\nNYY\\nYYY') == '0'\nassert solution('YNY\\nNYY\\nYYY\\nYYY') == '0'\nassert solution('YNY\\nNYY\\nYYY\\nYYY\\nYYY') == '0'\nassert solution('YNY\\nYNY\\nYYY') == '1'\n"
    },
    {
        "number": 3493,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('YYY') == '2'\nassert solution('YNY') == '1 2 3'\nassert solution('NYY') == '3 1 2'\nassert solution('N') == '0'\nassert solution('Y') == '0'\n"
    },
    {
        "number": 3493,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3493,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4\\nYYYYYYYY\\nYYYYYYYY\\nYNYNYNYN\\nYYYYYYYY\\n\") == \"3\\n1 2 3\\n3 1 2\"\nassert solution(\"4\\nNYY\\nNNY\\nNNY\\nNYY\\n\") == \"2\\n1 2 3\\n3 1 2\"\nassert solution(\"6\\nYNNNNNNN\\nNNNNNNNN\\nNNNNNNNN\\nNNNNNNNN\\nNNNNNNNN\\nNNNNNNNN\\n\") == \"2\\n1 2 3\\n3 1 2 3\"\nassert solution(\"7\\nNNNNNNNN\\nNNNNNNNN\\nNNNNNNNN\\nNNNNNNNN\\nNNNNNNNN\\nNNNNNNNN\\n\") == \"0\\n\"\nassert solution(\"8\\nNNNNNNNN\\nNNNNNNNN\\nNNNNNNNN\\nNNNNNNNN\\nNNNNNNNN\\nNNNNNNNN\\nNNNNNNNN\\n\") == \"0\\n\"\n"
    },
    {
        "number": 3493,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"\\nYYY\\nYYY\\nYNY\") == \"\"\nassert solution(\"\\nYNY\\nYNY\\nYNY\") == \"\"\nassert solution(\"\\nYNY\\nYNY\\nYYY\") == \"\"\n"
    },
    {
        "number": 3493,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"2 3 1 2\"\nassert solution(\"4\") == \"1 2 1 2 1 3\"\nassert solution(\"1\") == \"0\"\nassert solution(\"5\") == \"4 3 2 1 0\"\nassert solution(\"2\") == \"0 1\"\n"
    },
    {
        "number": 3493,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution
    },
    {
        "number": 3493,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\nYYY\\nNYY\\nYNY\\n') == '2\\n1 2 3\\n3 1 2'\nassert solution('1\\nY\\n') == '0'\nassert solution('10\\nYYNYNYNYNYNYNYYNYY\\nYNYNYNYNYNYNYNYNYYNYNYNYNYYNYNYNYNYY\\nYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY\\nYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY\\nYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY\\nYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY\\nYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY\\nYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY') == None\n"
    },
    {
        "number": 3493,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('YYY') == '2'\nassert solution('YNY') == '2'\nassert solution('YYYNYY') == '2'\nassert solution('YNYNYNYY') == '3'\nassert solution('YNYNYNYNYY') == '3'\n"
    },
    {
        "number": 3493,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3') == '2'\nassert solution('3\\nYYY\\nNYY\\nYNY\\n') == '2\\n1 2 3\\n3 1 2'\nassert solution('3\\nYYY\\nNYY\\nYNY\\n') == '2\\n1 2 3\\n3 1 2'\nassert solution('3\\nYYY\\nNYY\\nYNY\\n') == '2\\n1 2 3\\n3 1 2'\nassert solution('3\\nYYY\\nYYY\\nYNY\\n') == '2\\n1 2 3\\n3 1 2'\n"
    },
    {
        "number": 3494,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\nx..\n...\n...\n3\n1 3\n1 1\n3 2''') == '4\\n0\\n5'\nassert solution('''1 1\n.\n.\n.\n1\n1 1\n1 1''') == '0\\n0\\n0'\nassert solution('''3 3\n.\n.\n.\n3\n1 3\n1 1\n3 2''') == '4\\n0\\n5'\nassert solution('''3 3\n.\n.\n.\n3\n1 1\n1 1\n3 2''') == '0\\n0\\n5'\nassert solution('''3 3\n.\n.\n.\n3\n1 1\n1 1\n3 2''') == '0\\n0\\n5'\n"
    },
    {
        "number": 3494,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 3\nx.\n...\n...\n3\n1 3\n1 1\n3 2''') == '4\\n0\\n5\\n'\n'''\nx..\n...\n...\n3\n1 3\n1 1\n3 2\n'''\n\nassert solution('''5 2\n..\nx.\n.x\nx..\nx.\nx.\n''') == '0\\n4\\n16\\n16\\n0\\n'\n'''\n..\nx.\n.x\nx..\nx.\nx.\n'''\n\nassert solution('''1 2\n.x\nx.\n.x\nx.\nx.\nx.\n''') == '0\\n0\\n1\\n1\\n0\\n'\n'''\nx.\nx.\nx.\nx.\nx.\nx.\n'''\n\nassert solution('''1 2\n.x\nx.\n.x\nx.\nx.\nx.\n''') == '0\\n0\\n0\\n0\\n0\\n'\n'''\nx.\nx.\nx.\nx.\nx.\nx.\n'''\n\nassert solution('''2 3\n.x\nx.\n.x\nx.\nx.\nx.\n''') == '0\\n1\\n0\\n1\\n1\\n'\n'''\n.x\nx.\nx.\nx.\nx.\nx.\n'''"
    },
    {
        "number": 3494,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(sys.stdin.read()))\n\n\"\"\"\n"
    },
    {
        "number": 3494,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n3 3\n..x\n...\n...\n3\n1 3\n1 1\n3 2\n''') == '4 0 5'\n\nassert solution(\n'''\n4 4\n....\n.xxx\n.x.x\n.xx.\n.x.\n4\n1 3\n1 1\n3 2\n''') == '0 4 0'\n\nassert solution(\n'''\n7 7\nxxxxxxxxx\n...xxxxx\n.xx..xx\n.x.x.x\n.xx...\n.x.x.\n.x.x.\n7\n1 3\n1 1\n3 2\n''') == '4 0 5'\n\nassert solution(\n'''\n5 5\nxxxxxxx\n..x...x\n.x.x.x\n.x..x..\n.x...x.\nxxxxxxx\n4\n1 3\n1 1\n3 2\n''') == '4 0 5'\n\nassert solution(\n'''\n7 7\nxxxxxxxxx\n...xxxxx\n.xx..xx\n.x.x.x\n.xx...\n.x.x.\n.x.x.\n7\n1 3\n1 1\n3 2\n''') == '4 0 5'"
    },
    {
        "number": 3494,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 3\nx..\n...\n...\n3\n1 3\n1 1\n3 2''') == '4\\n0\\n5'\nassert solution('''3 3\nx..\n...\n...\n3\n2 3\n2 1\n3 2''') == '1\\n0\\n1'\nassert solution('''3 3\nx..\n...\n...\n3\n3 3\n2 2\n2 1\n3 2''') == '0\\n0\\n1'\nassert solution('''2 2\n..\n..\n2 1\n3 1''') == '1\\n0'\nassert solution('''3 3\nx..\n...\n...\n3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3"
    },
    {
        "number": 3494,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 3\nx..\n...\n...\n3\n1 3\n1 1\n3 2''') == '4\\n0\\n5'\nassert solution('''3 3\n.x\n...\n...\n3\n1 3\n1 1\n3 2''') == '4\\n0\\n5'\nassert solution('''3 3\nx..\n...\n...\n3\n1 3\n1 1\n3 2''') == '0\\n0\\n5'\nassert solution('''5 5\n.x\nxx..\nxx.x\nxxx\nxxx\nxxx\n3\n1 3\n1 1\n3 2\n3\n2 3\n3 1''') == '4\\n0\\n5'\nassert solution('''5 5\n.x\nxx..\nxx.x\nxxx\nxxx\nxxx\n3\n1 3\n1 1\n3 2\n3\n2 3\n3 1''') == '4\\n0\\n5'\n"
    },
    {
        "number": 3494,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 3\n..\n...\n...''') == '0'\nassert solution('''3 3\nx..\n...\n...''') == '4'\nassert solution('''3 3\n.x.\n.x.\n.x.\n2 3\n1 3\n1 1''') == '5'\nassert solution('''3 3\n.x.\n.x.\n.x.\n2 2\n1 3\n1 1''') == '0'\nassert solution('''3 3\n.x.\n.x.\n.x.\n1 2\n1 3\n1 1''') == '4'\n"
    },
    {
        "number": 3494,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 3\nx..\n...\n...\n3\n1 3\n1 1\n3 2''') == '4\\n0\\n5'\nassert solution('''3 4\nx..\n....\n....\n3\n1 2\n1 3\n2 2''') == '0\\n4\\n2'\nassert solution('''2 2\nx.\nx.\n3 3\n1 1\n2 1''') == '4\\n0\\n5'\nassert solution('''2 1\nx.\nx.\n3 3\n1 1\n2 1''') == '0\\n4\\n2'\nassert solution('''2 2\nx.\nx.\n3 3\n1 1\n1 1''') == '4\\n0\\n5'\n"
    },
    {
        "number": 3494,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 3\nx..\n...\n...\n3\n1 3\n1 1\n3 2''') == '4\\n0\\n5'\n'''\nassert solution('''3 3\n.x\n...\n...\n3\n1 3\n1 1\n3 2''') == '0\\n5\\n0'\n'''\nassert solution('''3 3\nx..\n...\n...\n3\n1 3\n1 1\n3 2''') == '0\\n0\\n5'\n'''\nassert solution('''3 3\n.x\n.x\n...\n...\n3\n1 3\n1 1\n3 2''') == '0\\n0\\n5'\n'''\nassert solution('''3 3\n.x\n.x\n.x\n3\n1 3\n1 1\n3 2''') == '0\\n0\\n5'\n'''\n"
    },
    {
        "number": 3494,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 3\nx..\n...\n...''') == '4\\n0\\n5'\nassert solution('''3 3\nx..\n...\n...\n3\n1 3\n1 1\n3 2''') == '4\\n0\\n5'\n'''"
    },
    {
        "number": 3495,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n5\n5\n5\n5\n5''') == '''4.114 -2.842\n6.297 -0.784\n5.000 3.000'''\n\nassert solution('''1\n2\n2\n2\n2\n2''') == '''0.000 0.000\n0.000 1.000\n0.000 0.000\n0.000 1.000\n0.000 0.000\n0.000 1.000'''\n\nassert solution('''3\n2\n3\n3\n3\n3''') == '''0.500 0.000\n1.500 -1.000\n2.500 0.000\n1.500 1.000\n0.500 0.000\n1.500 -1.000'''\n\nassert solution('''3\n2\n3\n3\n3\n3''') == '''0.500 0.000\n1.500 -1.000\n2.500 0.000\n1.500 1.000\n0.500 0.000\n1.500 -1.000'''\n\nassert solution('''3\n3\n3\n3\n3\n3''') == '''0.500 0.000\n1.500 -1.000\n2.500 0.000\n1.500 1.000\n0.500 0.000\n1.500 -1.000'''"
    },
    {
        "number": 3495,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(open(\"test_file.txt\", \"r\").read()) == open(\"test_file_solution.txt\", \"r\").read()\n"
    },
    {
        "number": 3495,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 3495,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n3\n5\n3\n4\n5 3\n\"\"\") == \"\"\"\n3.923 3.100\n1.118 2.037\n5.000 3.000\n\"\"\"\n"
    },
    {
        "number": 3495,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('\\n'.join([\n    '3',\n    '5',\n    '3',\n    '4',\n    '5 3',\n])) == '4.114 -2.842\\n6.297 -0.784\\n5.000 3.000'\nassert solution('\\n'.join([\n    '2',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n])) == '0.000 0.000'\nassert solution('\\n'.join([\n    '3',\n    '5',\n    '3',\n    '4',\n    '5 3',\n])) == '-1.000 -2.000'\nassert solution('\\n'.join([\n    '6',\n    '6',\n    '6',\n    '6',\n    '6',\n    '6',\n])) == '0.000 0.000'\nassert solution('\\n'.join([\n    '7',\n    '7',\n    '7',\n    '7',\n    '7',\n    '7',\n])) == '0.000 0.000'\n"
    },
    {
        "number": 3495,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n' + '5\\n' + '3\\n' + '4\\n' + '5 3\\n') == '4.114 -2.842\\n' + '6.297 -0.784\\n' + '5.000 3.000'"
    },
    {
        "number": 3495,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n3\n5\n3\n4\n5 3\n''') == '4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n'\n\nassert solution(\n'''\n3\n5\n3\n4\n5 3\n''') == '4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n'\n\nassert solution(\n'''\n3\n5\n3\n4\n5 3\n''') == '4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n'\n\nassert solution(\n'''\n3\n5\n3\n4\n5 3\n''') == '4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n'\n\nassert solution(\n'''\n3\n5\n3\n4\n5 3\n''') == '4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n'"
    },
    {
        "number": 3495,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''3\n5\n3\n4\n5 3''') == '''3.923 3.100\n1.118 2.037\n5.000 3.000'''\n\nassert solution(\n'''1\n1\n1\n1\n1''') == '''0.000 0.000\n0.000 0.000\n0.000 0.000'''\n\nassert solution(\n'''4\n7\n4\n4\n4\n4''') == '''-2.076 -2.036\n-1.000 -0.756\n5.000 3.000\n1.116 -2.000\n5.000 3.000'''\n\nassert solution(\n'''6\n8\n4\n4\n4\n4\n4''') == '''-1.566 -1.676\n-1.000 -0.756\n4.000 3.000\n1.116 -2.000\n4.000 3.000\n3.500 1.000'''\n\nassert solution(\n'''5\n9\n5\n4\n4\n4\n4''') == '''0.000 0.000\n0.000 0.000\n0.000 0.000\n0.000 0.000\n0.000 0.000'''"
    },
    {
        "number": 3495,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"3\n5\n3\n4\n5 3\n\"\"\".strip()\n) == \"\"\"\n3.923\n1.118\n5.000\n\"\"\".strip()\n)\n\nassert solution(\n    \"\"\"3\n5\n3\n5\n5 3\n\"\"\".strip()\n) == \"\"\"\n3.923\n1.118\n5.000\n\"\"\".strip()\n)\n\nassert solution(\n    \"\"\"3\n5\n3\n5\n5 3\n\"\"\".strip()\n) == \"\"\"\n3.923\n1.118\n5.000\n\"\"\".strip()\n)\n"
    },
    {
        "number": 3495,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n5\n3\n4\n5 3''') == '''4.114 -2.842\n6.297 -0.784\n5.000 3.000'''\n\nassert solution('''6\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n"
    },
    {
        "number": 3496,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 5\n2 3 5 7\n2\n3\n5\n6\n8''') == '3\\n5\\n8\\n10\\n13'\nassert solution('''4 5\n2 3 5 7\n2\n3\n5\n6\n8\n10\n13''') == '3\\n5\\n8\\n10\\n13'\n'''\nTest Case 1\n\n4 5\n2 3 5 7\n2\n3\n5\n6\n8\n\nTest Case 2\n\n10 100\n
    },
    {
        "number": 3496,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\"\nassert solution(\"2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\"\nassert solution(\"2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\"\nassert solution(\"2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\"\nassert solution(\"2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\"\n"
    },
    {
        "number": 3496,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 5\n2 3 5 7\n2\n3\n5\n6\n8''') == '''3\n5\n8\n10\n13\n'''\n"
    },
    {
        "number": 3496,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8') == '3\\n5\\n8\\n10\\n13'\nassert solution('5 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n10\\n13') == '3\\n5\\n8\\n10\\n13'\nassert solution('5 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n10\\n13\\n17') == '3\\n5\\n8\\n10\\n13\\n17'\nassert solution('5 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n10\\n13\\n17\\n20') == '3\\n5\\n8\\n10\\n13\\n17\\n20'\nassert solution('5 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n10\\n13\\n17\\n20\\n25') == '3\\n5\\n8\\n10\\n13\\n17\\n20\\n25'\n"
    },
    {
        "number": 3496,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 5\n2 3 5 7\n2\n3\n5\n6\n8\n''') == '''3\n5\n8\n10\n13\n'''\nassert solution('''3 3\n1\n1\n2\n2\n3\n3\n4\n4\n5\n5\n6\n6\n7\n7\n8\n8\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9"
    },
    {
        "number": 3496,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\"\n\"\"\"\n"
    },
    {
        "number": 3496,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 4\n2 3 5 7\n2''') == '3'\nassert solution('''5 4\n2 3 5 7\n2\n3\n5\n6\n8\n''') == '3,5,8,10,13'\nassert solution('''5 4\n2 3 5 7\n2\n3\n5\n6\n8\n''') == '3,5,8,10,13'\n'''\n"
    },
    {
        "number": 3496,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n1\\n1\\n2') == '1'\nassert solution('1\\n1\\n1\\n1\\n2\\n2\\n3') == '2'\nassert solution('1\\n1\\n1\\n1\\n2\\n2\\n3\\n3') == '4'\nassert solution('1\\n1\\n1\\n1\\n2\\n2\\n3\\n3\\n4\\n4\\n5\\n5\\n6') == '6'\nassert solution('2\\n1\\n1\\n1\\n2\\n2\\n3\\n3\\n4\\n4\\n5\\n5\\n6') == '7'\n"
    },
    {
        "number": 3496,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(open(\"test_input_1.txt\", \"r\").read()) == \"3\\n5\\n8\\n10\\n13\\n\"\nassert solution(open(\"test_input_2.txt\", \"r\").read()) == \"3\\n5\\n8\\n10\\n13\\n\"\nassert solution(open(\"test_input_3.txt\", \"r\").read()) == \"3\\n5\\n8\\n10\\n13\\n\"\nassert solution(open(\"test_input_4.txt\", \"r\").read()) == \"3\\n5\\n8\\n10\\n13\\n\"\nassert solution(open(\"test_input_5.txt\", \"r\").read()) == \"3\\n5\\n8\\n10\\n13\\n\"\n"
    },
    {
        "number": 3496,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 5\n2 3 5 7\n2\n3\n5\n6\n8''') == '3\\n5\\n8\\n10\\n13'\n'''\n\n'''\n\nn, q = tuple(map(int, stdin.split()))\nnums = tuple(map(int, stdin.split()))\n\narr = []\nfor _ in range(q):\n    arr.append(int(stdin.split()))\n\nnums_dict = {}\n\nfor i in nums:\n    if i in nums_dict.keys():\n        nums_dict[i] += 1\n    else:\n        nums_dict[i] = 1\n\ncount = 0\nwhile count < q:\n    for i in arr:\n        if nums_dict[i] > 0:\n            nums_dict[i] -= 1\n            count += 1\n            break\n\nprint(\"\\n\".join(str(i) for i in arr))\n"
    },
    {
        "number": 3497,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3') == '0'\nassert solution('2 1') == '2'\nassert solution('1 2') == '2'\nassert solution('1 3') == '2'\nassert solution('1 4') == '3'\n"
    },
    {
        "number": 3497,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5') == 0\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5') == 0\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5') == 0\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5') == 0\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5') == 0\n"
    },
    {
        "number": 3497,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 2\\n1 2\\n0 1\\n2 3') == '0'\nassert solution('3 2\\n1 2\\n1 2\\n0 1\\n0 1\\n2 3') == '2'\nassert solution('3 2\\n1 2\\n1 2\\n2 3') == '0'\nassert solution('3 2\\n0 1\\n0 1\\n1 2\\n0 2\\n1 3') == '1'\nassert solution('3 2\\n0 1\\n1 2\\n2 3') == '2'\n"
    },
    {
        "number": 3497,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n1 2 5''') == '0'\nassert solution('''10 5\n0 1\n1 2\n2 3\n3 4\n4 5\n4 6\n5 7\n5 9\n6 7\n7 9\n9 7\n1 9''') == '0'\nassert solution('''6 7\n0 1\n1 2\n2 3\n2 4\n1 5\n1 2 5''') == '2'\nassert solution('''4 8\n0 1\n0 2\n0 3\n0 4\n1 2\n1 3\n2 3\n2 4\n3 4''') == '0'\nassert solution('''4 8\n0 1\n0 2\n0 3\n0 4\n1 2\n2 3\n2 4\n3 4\n4 5\n4 6\n4 7\n4 8\n5 6\n5 7\n5 8\n5 9\n6 7\n6 8\n6 9\n7 8\n7 9\n8 9''') == '4'\n"
    },
    {
        "number": 3497,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 3') == '0'\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5') == '0'\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5') == '0'\nassert solution('6 4\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n4 5') == '0'\nassert solution('6 4\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6') == '1'\n"
    },
    {
        "number": 3497,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 3\\n0 1\\n1 2\\n2 3\") == \"0\"\nassert solution(\"3 4\\n0 1\\n1 2\\n2 3\") == \"2\"\nassert solution(\"3 4\\n0 1\\n1 2\\n2 3\\n1 2 4\") == \"1\"\nassert solution(\"2 2\\n0 1\\n1 2\\n2 0\") == \"1\"\n"
    },
    {
        "number": 3497,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(\"\") == \"\"\nassert solution(\"3 4\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\") == \"0\"\nassert solution(\"3 4\\n1 2\\n2 3\\n2 4\\n1 5\\n1 6\\n1 2 5\") == \"1\"\nassert solution(\"6 2\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\") == \"0\"\n"
    },
    {
        "number": 3497,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0\\n6\\n1\\n2\\n3\\n4\\n5') == 0\nassert solution('1\\n6\\n1\\n2\\n3\\n4\\n5') == 0\nassert solution('2\\n6\\n1\\n2\\n3\\n4\\n5') == 0\nassert solution('3\\n6\\n1\\n2\\n3\\n4\\n5') == 0\nassert solution('4\\n6\\n1\\n2\\n3\\n4\\n5') == 0\n"
    },
    {
        "number": 3497,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n1 2 5''') == '0'\nassert solution('''6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n1 2 5''') == '1'\nassert solution('''6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n5 4''') == '4'\nassert solution('''6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n5 4''') == '3'\nassert solution('''5 2\n0 1\n0 2\n2 3\n3 4\n4 5''') == '0'\n"
    },
    {
        "number": 3497,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3498,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4\") == \"1 3 4\"\nassert solution(\"1 2 3 4\") == \"3 1 4\"\nassert solution(\"1 2 3 4\") == \"1 3 4\"\nassert solution(\"1 2 3 4\") == \"1 3 4\"\nassert solution(\"1 2 3 4\") == \"3 1 4\"\n"
    },
    {
        "number": 3498,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\n"
    },
    {
        "number": 3498,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"3 1\n50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n\"\"\") == \"\"\"106\n107\n71\"\"\"\n"
    },
    {
        "number": 3498,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''50 2\n50 2 5 C1 L1 C1 U1 C1''') == '106 107 71'\n'''50 2\n50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1'''\nassert solution('''70 3\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1 C1\n70 3 1"
    },
    {
        "number": 3498,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1''') == '106 107 71'\nassert solution('''10 2 2 C1 L1 C1 C1\n1 1 1 C1 L1 C100 C1''') == '106'\n'''\n"
    },
    {
        "number": 3498,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\n"
    },
    {
        "number": 3498,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''50 2\n50 3 5\n1 1 5\n70 3 1\n50 2 2\n50 3 3\n1 1 4\n100 2 2\n100 3 4\n100 4 4\n100 5 5\n100 6 6\n100 7 7\n100 8 8\n100 9 9\n100 10 10\n100 11 11\n100 12 12\n100 13 13\n100 14 14\n100 15 15\n100 16 16\n100 17 17\n100 18 18\n100 19 19\n100 20 20\n100 21 21\n100 22 22\n100 23 23\n100 24 24\n100 25 25\n100 26 26\n100 27 27\n100 28 28\n100 29 29\n100 30 30\n100 31 31\n100 32 32\n100 33 33\n100 34 34\n100 35 35\n100 36 36\n100 37 37\n100 38 38\n100 39 39\n100 40 40\n100 41 41\n100 42 42\n100 43 43\n100 44 44\n100 45 45\n100 46 46\n100 47 47\n100 48 48\n100 49 49\n100 50 50\n100 51 51\n100 52 52\n100 53 53\n100 54 54\n100 55 55\n100 56 56\n100 57 57\n100 58 58\n100 59 59\n100 60 60\n100 61 61\n100 62 62\n100 63 63\n100 64 64\n100 65 65\n100 66 66\n100 67 67\n100 68 68\n100 69 69\n100 70 70\n100 71 71\n100 72 72\n100 73 73\n100 74 74\n100 75 75\n100 76 76\n100 77 77\n100 78 78\n100 79 79\n100 80 80\n100 81 81\n100 82 82\n100 83 83\n100 84 84\n100 85 85\n100 86 86\n100 87 87\n100 88 88\n100 89 89\n100 90 90\n100 91 91\n100 92 92\n100 93 93\n100 94 94\n100 95 95\n100 96 96\n100 97 97\n100 98 98\n100 99 99\n100 100 100'''\n    ) == '''106\n107\n71\n'''\n"
    },
    {
        "number": 3498,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1') == '106\\n107\\n71'\nassert solution('2 2\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1') == '106\\n107\\n71'\nassert solution('2 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1') == '106\\n107\\n71'\nassert solution('2 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1') == '106\\n107\\n71'\nassert solution('2 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1') == '106\\n107\\n71'\n"
    },
    {
        "number": 3498,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''50 2 5 C1 L1 C1 U1 C1''') == '106\\n107\\n71'\nassert solution('''1 1 5 C1 L1 C100 U1 C1''') == '106\\n107\\n71'\nassert solution('''70 3 1 C1''') == '71'\nassert solution('''50 2 5 C1 L1 C1 U1 C1''') == '106\\n107\\n71'\nassert solution('''50 2 5 C1 L1 C1 U1 C1''') == '106\\n107\\n71'\n"
    },
    {
        "number": 3498,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 1\n50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1''') == \"106\\n107\\n71\"\n'''\n"
    },
    {
        "number": 3499,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\nassert solution(stdin) == stdin\nassert solution(stdin) == stdin\nassert solution(stdin) == stdin\nassert solution(stdin) == stdin\n"
    },
    {
        "number": 3499,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('a') == 1\nassert solution('ab') == 1\nassert solution('aba') == 1\nassert solution('aab') == 1\nassert solution('aaa') == 1\n"
    },
    {
        "number": 3499,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 0\nassert solution('A') == 1\nassert solution('BB') == 0\nassert solution('ABBA') == 1\nassert solution('AAABBBBBAABB') == 1\n"
    },
    {
        "number": 3499,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"AB\") == \"\"\nassert solution(\"AC\") == \"\"\nassert solution(\"ABACD\") == \"\"\nassert solution(\"BCDA\") == \"\"\n"
    },
    {
        "number": 3499,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('AA') == '51'\nassert solution('AB') == '12'\nassert solution('AC') == '12'\nassert solution('BA') == '6'\nassert solution('BB') == '10'\n"
    },
    {
        "number": 3499,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''AAA\nAA\n''') == '1'\nassert solution('''AAABAA\nAA\n''') == '46'\nassert solution('''AABAA\nAB\n''') == '0'\nassert solution('''AABAA\nAB\n''') == '1'\nassert solution('''ABBB\nBB\n''') == '2'\n"
    },
    {
        "number": 3499,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('AA') == '51'\nassert solution('A') == '1'\nassert solution('a') == '0'\nassert solution('Z') == '1'\nassert solution('aa') == '1'\n"
    },
    {
        "number": 3499,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\nAA\n''') == '51'\nassert solution('''2\nAA\n''') == '51'\nassert solution('''3\nABC\n''') == '3'\nassert solution('''3\nCBA\n''') == '4'\nassert solution('''3\nAAA\n''') == '3'\n"
    },
    {
        "number": 3499,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('AA') == 51\nassert solution('ABBA') == 4\nassert solution('ABCC') == 0\nassert solution('ABC') == 1\nassert solution('ABA') == 2\n"
    },
    {
        "number": 3499,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''AA''') == 51\nassert solution('''AABCD''') == 3\nassert solution('''AABAA''') == 2\nassert solution('''AABAAB''') == 1\nassert solution('''AABCABBA''') == 1\n"
    },
    {
        "number": 3500,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(test_in) == test_out\n"
    },
    {
        "number": 3500,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n\n14 23 39 59 63\n8 17 35 55 61\n15 26 42 53 71\n10 25 31 57 64\n6 20 44 52 68\n''') == '1 2'\n'''\n"
    },
    {
        "number": 3500,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\") == \"3 2\"\nassert solution(\"14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\") == \"1 2\"\nassert solution(\"2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\") == \"no ties\"\nassert solution(\"2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n2\\n1 19 43 50 72\") == \"1 2\"\nassert solution(\"2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n2\\n1 19 43 50 72\\n1 19 43 50 72\") == \"1 1\"\n"
    },
    {
        "number": 3500,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n''') == '1 2'\nassert solution('''\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n''') == '1 2'\nassert solution('''\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n''') == '1 2'\nassert solution('''\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n''') == '1 2'\nassert solution('''\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n''') == '1 2'\n"
    },
    {
        "number": 3500,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n2\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n\n14 23 39 59 63\n8 17 35 55 61\n15 26 42 53 71\n10 25 31 57 64\n6 20 44 52 68\n\n'''\n    ) == 'no ties'\nassert solution(\n'''\n1\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n\n14 23 39 59 63\n8 17 35 55 61\n15 26 42 53 71\n10 25 31 57 64\n6 20 44 52 68\n\n'''\n    ) == '1 2'\nassert solution(\n'''\n2\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n\n14 23 39 59 63\n8 17 35 55 61\n15 26 42 53 71\n10 25 31 57 64\n6 20 44 52 68\n\n'''\n    ) == '1 2'\nassert solution(\n'''\n1\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n\n14 23 39 59 63\n8 17 35 55 61\n15 26 42 53 71\n10 25 31 57 64\n6 20 44 52 68\n\n'''\n    ) == '1 2'\nassert solution(\n'''\n1\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n\n14 23 39 59 63\n8 17 35 55 61\n15 26 42 53 71\n10 25 31 57 64\n6 20 44 52 68\n\n'''\n    ) == '1 2'\n"
    },
    {
        "number": 3500,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 3500,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71''') == 'no ties'\nassert solution('''3\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n14 23 39 59 63\n8 17 35 55 61\n15 26 42 53 71\n10 25 31 57 64\n6 20 44 52 68''') == '14 15'\nassert solution('''2\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71''') == '1 2'\nassert solution('''1\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n14 23 39 59 63\n8 17 35 55 61\n15 26 42 53 71\n10 25 31 57 64\n6 20 44 52 68''') == '8 15'\n'''\n"
    },
    {
        "number": 3500,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n\n14 23 39 59 63\n8 17 35 55 61\n15 26 42 53 71\n10 25 31 57 64\n6 20 44 52 68\n''') == '1 2'\nassert solution('''4\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n\n14 23 39 59 63\n8 17 35 55 61\n15 26 42 53 71\n10 25 31 57 64\n6 20 44 52 68\n''') == '1 4'\nassert solution('''2\n4 9 15 15\n2 4 4 4\n2 4 7 7\n\n4 7 9 9\n2 3 3 7\n2 3 7 5\n\n1 1 1 1\n2 2 2 2\n3 3 3 3\n4 4 4 4\n''') == 'no ties'\nassert solution('''5\n1 5 5 5 5\n2 4 4 4 4\n2 4 4 4 4\n2 4 4 4 4\n2 4 4 4 4\n\n1 1 1 1 1\n2 2 2 2 2\n3 3 3 3 3\n4 4 4 4 4\n5 5 5 5 5\n''') == '1 4'\nassert solution('''1\n1 1 1 1 1\n2 2 2 2 2\n3 3 3 3 3\n4 4 4 4 4\n5 5 5 5 5\n''') == 'no ties'\n"
    },
    {
        "number": 3500,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input('')) == \"no ties\"\nassert solution(input('')) == \"12\"\nassert solution(input('')) == \"14 10\"\nassert solution(input('')) == \"12 26\"\nassert solution(input('')) == \"14 17\"\n"
    },
    {
        "number": 3500,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"no ties\"\nassert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n\") == \"1 2\"\nassert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n\") == \"1 2\"\nassert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n\") == \"1 2\"\nassert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n"
    },
    {
        "number": 3501,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3 2 1\n1 2 3\n1 2 3\n''') == '0'\nassert solution('''3\n3 2 1\n1 2 3\n1 2 3\n''') == '1'\nassert solution('''2\n1 2\n1 2\n''') == '1'\nassert solution('''6\n4 2 3 4 2 1 5\n1 1 1 1 1 1 1\n''') == '3'\nassert solution('''10\n3 2 4 2 4 1 5 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n''') == '4'\n"
    },
    {
        "number": 3501,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    '''3\n3 2 1\n1 2 3\n1 2 3'''\n) == '0'\nassert solution(\n    '''7\n1 2 3\n1 2 3\n2 3 4\n1 2 3\n2 3 4\n1 2 3'''\n) == '1'\nassert solution(\n    '''5\n2 2 1\n1 2 3\n1 2 3\n3 2 4\n1 2 3'''\n) == '5'\nassert solution(\n    '''7\n1 2 3\n1 2 3\n2 3 4\n1 2 3\n2 3 4\n1 2 3'''\n) == '0'\nassert solution(\n    '''3\n1 2 3\n1 2 3\n1 2 3'''\n) == '3'\n"
    },
    {
        "number": 3501,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n3 2 1\n1 2 3\n1 2 3\n3\n1 2 3''') == '0'\nassert solution('''5\n3 2 1\n1 2 3\n1 2 3\n1 2 3\n3\n1 2 3''') == '3'\nassert solution('''2\n2 2 1\n1 2 3\n1 2 3''') == '1'\nassert solution('''1\n1 2 3\n1 2 3''') == '0'\nassert solution('''3\n3 2 1\n1 2 3\n1 2 3''') == '0'\n"
    },
    {
        "number": 3501,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n3 2 1\n1 2 3\n1 2 3''') == '0'\nassert solution('''3\n3 2 1\n1 2 3\n3 1 2''') == '3'\nassert solution('''4\n4 2 3 1\n2 3 4 1\n2 3 1 4''') == '1'\nassert solution('''8\n8 2 7 3 1 6 4 5\n7 2 6 4 5 3 8 1\n7 2 6 4 5 1 3 8\n1 6 4 3 8 2 5 7\n1 6 4 3 8 2 7 5\n1 6 4 3 8 5 2 7\n1 6 4 3 8 5 7 2\n1 6 4 3 8 7 2 5''') == '16'\nassert solution('''11\n11 2 10 3 9 4 8 5 7 6\n9 2 8 4 5 7 3 6 10 11\n8 2 7 4 6 5 3 11 10 12\n7 2 6 5 4 11 10 12 9 13\n6 2 5 10 9 13 12 11 14\n5 2 4 9 12 14 11 13 15\n4 2 3 8 14 15 12 13 16\n3 2 2 7 15 16 12 14 13\n2 2 1 8 16 13 15 14 14\n1 2 1 8 14 14 13 15 16\n1 2 1 8 14 16 13 15 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2 1 8 16 13 15 14 14\n1 2"
    },
    {
        "number": 3501,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n3 2 1\n1 2 3\n1 2 3''') == '0'\nassert solution('''3\n1 2 3\n1 2 3\n1 2 3''') == '0'\nassert solution('''3\n3 2 1\n1 2 3\n1 2 3''') == '0'\nassert solution('''5\n3 2 1\n1 2 3\n1 2 3\n1 2 3\n1 2 3''') == '1'\nassert solution('''10\n6 5 4 3 2 1 3 4 1\n2 4 1 5 3 6 1 2 3 4''') == '1'\n"
    },
    {
        "number": 3501,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n3 2 1\n1 2 3\n1 2 3''') == '0'\nassert solution('''3\n3 2 1\n1 2 3\n1 2 4''') == '1'\nassert solution('''3\n2 2 2\n2 2 1\n2 1 2''') == '1'\nassert solution('''3\n3 1 2\n3 1 2\n3 1 2''') == '2'\nassert solution('''3\n4 2 1\n1 2 3\n3 1 2''') == '1'\n"
    },
    {
        "number": 3501,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n3 2 1\\n1 2 3\\n1 2 3\\n') == '0'\nassert solution('2\\n2 2 1\\n1 2 3\\n1 2 3\\n') == '2'\nassert solution('1\\n1 1 1\\n1 1 1\\n') == '1'\nassert solution('2\\n2 2 2\\n2 2 2\\n') == '4'\nassert solution('2\\n2 2 1\\n1 2 3\\n1 2 3\\n') == '1'\n"
    },
    {
        "number": 3501,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n3 2 1\\n1 2 3\\n1 2 3') == '0'\nassert solution('2\\n2 2 1\\n1 2 3\\n1 2 3') == '1'\nassert solution('2\\n1 1 1\\n1 1 1') == '1'\nassert solution('3\\n1 1 1\\n1 1 1\\n1 1 1') == '1'\nassert solution('3\\n2 2 2\\n2 2 2') == '1'\n"
    },
    {
        "number": 3501,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == '0'\nassert solution('5\\n5 2 5 1 2\\n1 2 2 3 4') == '1'\nassert solution('10\\n10 2 9 1 2 3 4 5 6 7 8 9 10\\n1 2 1 2 3 4 5 6 7 8 9') == '0'\nassert solution('15\\n15 2 9 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n1 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14') == '2'\nassert solution('5\\n5 2 5 1 2\\n1 2 2 3 4') == '0'\n"
    },
    {
        "number": 3501,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n1') == '0'\nassert solution('1\\n1\\n2') == '2'\nassert solution('3\\n1 2 3\\n1 2 3') == '3'\nassert solution('3\\n2 1 3\\n1 2 3') == '1'\nassert solution('3\\n1 3 2\\n2 1 3') == '1'\n"
    },
    {
        "number": 3502,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"6 2 3\") == \"\"\nassert solution(\"10 2 3\") == \"\"\nassert solution(\"16 3 4\") == \"\"\n"
    },
    {
        "number": 3502,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n1 2 3\n6 2 3\n10 2 3\n16 3 4''') == '0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571'\n'''\nYour program should accept as its first argument a path to a filename. The file contains the information about n traffic lights, where the first line contains the number n of traffic lights, and each of the following n lines contains three integers x, r, and g, describing a traffic light, where x ($1 \\le x \\le 10^5$) is the position of the light along Main Street in meters, and r and g ($0 \\le r, g$ and $1 \\le r+g \\le 100$) are the durations in seconds of the red and green portions of the light\u2019s period (so the light is red from time $0$ to $r$, from time $r+g$ to $2r+g$, and so on). The west end of Main Street is at position $0$, and the lights are listed in order of strictly increasing position.\n'''\n"
    },
    {
        "number": 3502,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\") == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\"\nassert solution(\"4\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\\n6 4 1\") == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\"\nassert solution(\"3\\n
    },
    {
        "number": 3502,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n4\n1 2 3\n6 2 3\n10 2 3\n16 3 4\n'''\n) == '''\n0.4\n0\n0.2\n0.171428571429\n0.228571428571\n'''\n\nassert solution(\n'''\n5\n0 1 2 3 4\n1 1 1 1 1\n2 1 1 1 1\n3 1 1 1 1\n4 1 1 1 1\n'''\n) == '''\n0.4\n0\n0.2\n0.171428571429\n0.228571428571\n'''\n"
    },
    {
        "number": 3502,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\") == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\"\nassert solution(\"1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\\n4 1 3\") == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\"\nassert solution(\"1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\\n4 1 3\\n4 1 3\") == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\"\nassert solution(\"1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\\n4 1 3\\n4 1 3\\n4 1 3\") == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\"\nassert solution(\"1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\\n4 1 3\\n4 1 3\\n4 1 3\\n4 1 3\") == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\"\n"
    },
    {
        "number": 3502,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n4\n1 2 3\n6 2 3\n10 2 3\n16 3 4\n\"\"\") == \"\"\"\n0.4\n0\n0.2\n0.171428571429\n0.228571428571\n\"\"\"\n"
    },
    {
        "number": 3502,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n4\n1 2 3\n6 2 3\n10 2 3\n16 3 4\n'''\n) == '0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571'\nassert solution(\n'''\n2\n1 2\n3 2\n'''\n) == '0.5'\nassert solution(\n'''\n1\n1 2\n3 2\n'''\n) == '1.0'\nassert solution(\n'''\n2\n1 2\n3 2\n'''\n) == '0.0'\nassert solution(\n'''\n2\n5 3\n3 4\n'''\n) == '0.3333333333333333'\n"
    },
    {
        "number": 3502,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\\n') == '0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571'"
    },
    {
        "number": 3502,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n4\n1 2 3\n6 2 3\n10 2 3\n16 3 4\n'''\n) == '0.4\\n0.2\\n0.171428571429\\n0.228571428571'\n\nassert solution(\n'''\n3\n1 2 3\n6 2 3\n10 2 3\n'''\n) == '0.379465986539\\n0.23094611655\\n0.27230769231'\n"
    },
    {
        "number": 3502,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3\\n6 2 3\\n10 2 3\\n16 3 4') == '0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571'\nassert solution('1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\\n7 2 3\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4') == '0.7125\\n0\\n0.09375\\n0.09375\\n0.09375\\n0.125\\n0.1875\\n0.0625\\n0.0625\\n0.0625\\n0.03125\\n0.09375'\nassert solution('1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\n16 3 4\\n10 2 3\\"
    },
    {
        "number": 3503,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 5\n3 3\n4 5\n-1 -6''') == '''1 + 5 = 6\n3 * 3 = 9\n4 - 5 = -1\n-1 - -6 = 5'''\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 3503,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n1 5\n3 3\n4 5\n-1 -6''') == '''1 + 5 = 6\n3 * 3 = 9\n4 - 5 = -1\n-1 - -6 = 5'''\n\nassert solution('''2\n-1 -6''') == '''impossible'''\n\nassert solution('''2\n-1 -6\n1 1''') == '''1 + 1 = 2\n-1 - -6 = 5'''\n\nassert solution('''3\n-1 -6\n1 1\n3 3''') == '''1 + 1 = 2\n-1 - -6 = 5\n3 * 3 = 9'''\n\nassert solution('''3\n-1 -6\n1 1\n3 3\n4 4\n-1 -6''') == '''1 + 1 = 2\n-1 - -6 = 5\n3 * 3 = 9\n4 * 4 = 16'''"
    },
    {
        "number": 3503,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n1 5\n3 3\n4 5\n-1 -6''') == '''1 + 5 = 6\n3 * 3 = 9\n4 - 5 = -1\n-1 - -6 = 5'''\n\nassert solution('''4\n1 5\n3 3\n4 5\n4 5''') == '''impossible'''\n\nassert solution('''10\n1 2\n3 4\n5 6\n7 8\n9 10\n11 12\n13 14\n15 16\n17 18\n19 20\nimpossible''') == '''1 + 2 = 3\n3 * 4 = 12\n5 - 6 = -1\n7 * 8 = 40\n9 + 10 = 19\n11 + 12 = 23\n13 - 14 = 15\n15 * 16 = 48\n17 - 18 = 14\n19 + 20 = 24\nimpossible'''\n\nassert solution('''3\n1 2\n3 4\n5 6\n1 1''') == '''impossible'''\n\nassert solution('''10\n1 2\n3 4\n5 6\n7 8\n9 10\n11 12\n13 14\n15 16\n17 18\n19 20\nimpossible''') == '''1 + 2 = 3\n3 * 4 = 12\n5 - 6 = -1\n7 * 8 = 40\n9 + 10 = 19\n11 + 12 = 23\n13 - 14 = 15\n15 * 16 = 48\n17 - 18 = 14\n19 + 20 = 24'''"
    },
    {
        "number": 3503,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(sample_input) == sample_output\n\"\"\"\n"
    },
    {
        "number": 3503,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n1 5\n3 3\n4 5\n-1 -6''') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5'\nassert solution('''5\n1 5\n3 3\n4 5\n-1 -6\n-1 -6''') == 'impossible'\nassert solution('''9\n-3 -3\n-2 -2\n-1 -1\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9''') == '-3 + -3 = 0\\n-2 + -2 = 0\\n-1 + -1 = 0\\n1 + 1 = 0\\n2 * 2 = 4\\n3 * 3 = 9\\n4 - 4 = 0\\n5 - 5 = 0\\n6 * 6 = 36\\n7 * 7 = 49\\n8 - 8 = 0\\n9 - 9 = 0'\nassert solution('''10\n1 3\n2 2\n3 1\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10''') == 'impossible'\nassert solution('''9\n-3 -3\n-2 -2\n-1 -1\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9''') == '-3 + -3 = 0\\n-2 + -2 = 0\\n-1 + -1 = 0\\n1 + 1 = 0\\n2 * 2 = 4\\n3 * 3 = 9\\n4 - 4 = 0\\n5 - 5 = 0\\n6 * 6 = 36\\n7 * 7 = 49\\n8 - 8 = 0\\n9 - 9 = 0'\n"
    },
    {
        "number": 3503,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n1 5\n3 3\n4 5\n-1 -6''') == '''1 + 5 = 6\n3 * 3 = 9\n4 - 5 = -1\n-1 - -6 = 5'''\nassert solution('''1\n1\n2\n3\n4\n5''') == '''impossible'''\nassert solution('''2\n1\n1\n2\n3\n4\n5''') == '''impossible'''\nassert solution('''1\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10''') == '''1 + 2 = 3\n1 + 3 = 4\n2 + 3 = 5\n3 + 4 = 6\n4 + 5 = 7\n5 + 6 = 8\n6 + 7 = 9\n7 + 8 = 10'''\n\n-----Note-----\n$n$ is the number of pairs of numbers in the exam.\n$a$ and $b$ are the numbers in each pair.\n\n$n$ is an integer between $1$ and $2500$\n$a$ is an integer between $-10^6$ and $10^6$\n$b$ is an integer between $-10^6$ and $10^6$\n\n$a, b$ and $a, b$ can be the same value\n\n$a, b$ can be different value\n\nYour solution must be correct or it will result in disqualification.\n\nThe best solution takes 0 milliseconds \u2014 faster than 62.65% of Python3 online submissions for Exam Results.\n\nThe worst solution takes 0 milliseconds \u2014 slower than 15.52% of Python3 online submissions for Exam Results.\n'''\n"
    },
    {
        "number": 3503,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3503,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n1 5\n3 3\n4 5\n-1 -6''') == '''1 + 5 = 6\n3 * 3 = 9\n4 - 5 = -1\n-1 - -6 = 5'''\nassert solution('''2\n1 5\n3 3''') == '''impossible'''\nassert solution('''10\n1 5\n3 3\n4 5\n6 7\n8 9\n10 11\n12 13\n14 15\n16 17\n18 19''') == '''1 + 5 = 6\n3 * 3 = 9\n4 - 5 = -1\n-1 - -6 = 5\n1 + 5 = 6\n3 * 3 = 9\n4 - 5 = -1\n-1 - -6 = 5\n1 + 5 = 6\n3 * 3 = 9\n4 - 5 = -1\n-1 - -6 = 5\n1 + 5 = 6\n3 * 3 = 9\n4 - 5 = -1\n-1 - -6 = 5'''\nassert solution('''1\n1 0''') == '''impossible'''\nassert solution('''1\n1 1''') == '''impossible'''\n"
    },
    {
        "number": 3503,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"4\\n\"\n    \"1 5\\n\"\n    \"3 3\\n\"\n    \"4 5\\n\"\n    \"-1 -6\") == \"1 + 5 = 6\\n\"\n    \"3 * 3 = 9\\n\"\n    \"4 - 5 = -1\\n\"\n    \"-1 - -6 = 5\\n\"\n\nassert solution(\n    \"4\\n\"\n    \"1 5\\n\"\n    \"3 3\\n\"\n    \"4 5\\n\"\n    \"-1 -6\") == \"impossible\\n\"\n    \"1 + 5 = 6\\n\"\n    \"3 * 3 = 9\\n\"\n    \"4 - 5 = -1\\n\"\n    \"-1 - -6 = 5\\n\"\n\nassert solution(\n    \"4\\n\"\n    \"1 5\\n\"\n    \"3 3\\n\"\n    \"4 5\\n\"\n    \"-1 -6\") == \"impossible\\n\"\n    \"1 + 5 = 6\\n\"\n    \"3 * 3 = 9\\n\"\n    \"4 - 5 = -1\\n\"\n    \"-1 - -6 = 5\\n\"\n\nassert solution(\n    \"4\\n\"\n    \"1 5\\n\"\n    \"3 3\\n\"\n    \"4 5\\n\"\n    \"-1 -6\") == \"impossible\\n\"\n    \"1 + 5 = 6\\n\"\n    \"3 * 3 = 9\\n\"\n    \"4 - 5 = -1\\n\"\n    \"-1 - -6 = 5\\n\"\n\nassert solution(\n    \"4\\n\"\n    \"1 5\\n\"\n    \"3 3\\n\"\n    \"4 5\\n\"\n    \"-1 -6\") == \"impossible\\n\"\n    \"1 + 5 = 6\\n\"\n    \"3 * 3 = 9\\n\"\n    \"4 - 5 = -1\\n\"\n    \"-1 - -6 = 5\\n\""
    },
    {
        "number": 3503,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3504,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1') == '4\\n1\\n4\\n6\\n0\\n'\nassert solution('1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1') == '0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n'\nprint(solution(input()))\n"
    },
    {
        "number": 3504,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 3\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1''') == '''4\n1\n4\n6\n0\n'''\n"
    },
    {
        "number": 3504,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 3\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1''') == '''4\n1\n4\n6\n0'''\n\nassert solution('''10 9\n1 2\n1 4\n1 6\n1 8\n1 10\n2 2\n2 3\n2 4\n2 5\n2 7\n2 8\n2 9\n2 10\n3 4\n3 6\n3 7\n3 8\n3 9\n3 10\n4 5\n4 7\n4 8\n4 9\n4 10\n5 6\n5 8\n5 9\n5 10\n6 7\n6 8\n6 9\n6 10\n7 8\n7 9\n7 10\n8 9\n8 10\n9 10\n10''') == '''5\n6\n5\n10\n7\n9\n0'''\n\nassert solution('''6 6\n1 2\n1 3\n1 4\n1 5\n1 6\n2 3\n2 4\n2 5\n2 6\n3 4\n3 5\n3 6\n4 5\n4 6\n5 6\n6 7\n6 8\n6 9\n6 10\n7 8\n7 9\n7 10\n8 9\n8 10\n9 10\n10''') == '''1\n2\n3\n4\n5\n6\n7\n0'''\n\nassert solution('''3 2\n1 3\n2 3\n3 3\n1 2\n2 3\n1 2\n3 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3\n1 2\n1 3\n2 3"
    },
    {
        "number": 3504,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1') == '4\\n1\\n4\\n6\\n0\\n'\n"
    },
    {
        "number": 3504,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 3\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1''') == '4\\n1\\n4\\n6\\n0\\n'\nassert solution('''5 5\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1''') == '4\\n1\\n4\\n6\\n0\\n'\nassert solution('''3 3\n1 2\n2 3\n3 4\n1 4\n2 4\n3 4''') == '1\\n0\\n1\\n2\\n'\nassert solution('''2 2\n1 2\n1 2\n2 1\n1 2\n2 1''') == '1\\n1\\n'\nassert solution('''3 3\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '0\\n'\n"
    },
    {
        "number": 3504,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\") == \"4\\n1\\n4\\n6\\n0\"\nassert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\") == \"4\\n1\\n4\\n6\\n0\"\nassert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\") == \"4\\n1\\n4\\n6\\n0\"\nassert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\") == \"4\\n1\\n4\\n6\\n0\"\nassert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\") == \"4\\n1\\n4\\n6\\n0\"\n"
    },
    {
        "number": 3504,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 3\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1''') == '''4\n1\n4\n6\n0\n'''\n\nassert solution('''5 3\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1''') == '''4\n1\n4\n6\n0\n'''\n\nassert solution('''5 3\n1 8\n1 6\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1''') == '''4\n1\n4\n6\n0\n'''\n\nassert solution('''5 5\n1 8\n1 6\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1''') == '''4\n1\n4\n6\n0\n'''\n\nassert solution('''5 5\n1 8\n1 6\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1''') == '''4\n1\n4\n6\n0\n'''"
    },
    {
        "number": 3504,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3504,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(open(\"test_input.txt\").read()) == open(\"test_output.txt\").read()\n\nassert solution(open(\"input.txt\").read()) == open(\"output.txt\").read()\n\nprint(solution(open(\"input.txt\").read()))\n\"\"\"\nimport sys"
    },
    {
        "number": 3504,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 3\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1''') == '4\\n1\\n4\\n6\\n0'\nassert solution('''5 1\n1 1\n2 1\n3 1\n4 1\n5 1''') == '4\\n0\\n4\\n4\\n4'\nassert solution('''4 4\n1 1\n1 2\n1 3\n1 4\n2 1\n2 2\n2 3\n2 4\n3 1\n3 2\n3 3\n3 4\n4 1\n4 2\n4 3\n4 4''') == '1\\n1\\n2\\n3\\n4\\n2\\n2\\n3\\n3\\n4'\nassert solution('''5 1\n1 1\n2 1\n3 1\n4 1\n5 1''') == '4\\n0\\n4\\n4\\n4'\nassert solution('''2 1\n1 1\n2 1''') == '4\\n0\\n4'\n"
    },
    {
        "number": 3505,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1 2 3 4') == 4\nassert solution('1\\n2 3 4') == 3\nassert solution('2\\n1 2 3 4') == 3\nassert solution('2\\n1 3 4') == 2\nassert solution('3\\n1 2 3 4') == 2\n"
    },
    {
        "number": 3505,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n1 2 3 4''') == 4\nassert solution('''5\n1 2 3 4 5''') == 0\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == 5\nassert solution('''10000\n-50000 -50000 -50000 -50000 -50000 -50000 -50000 -50000 -50000 -50000''') == 89316\nassert solution('''10\n-50000 -50000 -50000 -50000 -50000 -50000 -50000 -50000 -50000 -50000 -50000 -50000 -50000''') == 786639\n"
    },
    {
        "number": 3505,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3 4\") == \"\"\nassert solution(\"1 2 3 4\") == \"\"\nassert solution(\"1 2 3 4\") == \"\"\nassert solution(\"1 2 3 4\") == \"\"\n"
    },
    {
        "number": 3505,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 3505,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n1 2 3 4') == '4'\nassert solution('4\\n1 2 3 4\\n2 3 4 1') == '4'\nassert solution('5\\n1 2 3 4 5') == '2'\nassert solution('6\\n1 2 3 4 5 6') == '3'\nassert solution('10\\n-10 -9 -8 -7 -6 -5 -4 -3 -2 -1') == '3'\n"
    },
    {
        "number": 3505,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1\n1 2 3 4''') == '4'\nassert solution('''2\n1 2''') == '1'\nassert solution('''1\n-1''') == '0'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '362880'\nassert solution('''5\n1 2 3 4 5''') == '1'\n"
    },
    {
        "number": 3505,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4\\n1 2 3 4\\n') == '4'\nassert solution('1 2 3 4\\n1 2 3 4\\n') == '4'\nassert solution('1 2 3 4\\n1 2 3 4\\n') == '4'\nassert solution('1 2 3 4\\n1 2 3 4\\n') == '4'\nassert solution('1 2 3 4\\n1 2 3 4\\n') == '4'\n"
    },
    {
        "number": 3505,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n1\\n1') == '1'\nassert solution('2\\n3\\n4\\n5\\n1\\n2\\n1\\n1\\n1\\n2\\n3\\n4\\n5\\n1\\n2\\n1\\n1\\n1\\n2\\n3\\n4\\n5\\n1\\n2\\n1\\n1\\n1\\n2\\n3\\n4\\n5') == '2'\nprint(solution(stdin))\nExpected:\n2\n\n-----Note-----\n$N$ can be any integer greater than zero, but you are not supposed to use recursion in your solution.\n$a_ i$ can be any integer between $-50000$ and $50000$.\n$a_ i$ and $a_ j$ cannot be the same.\n$a_ i$ and $a_ j$ cannot be consecutive.\n$a_ k$ can be any integer between $-50000$ and $50000$.\n$a_ k$ and $a_ j$ cannot be the same.\n$a_ k$ and $a_ i$ cannot be consecutive.\n\n-----Solution/Note-----\n\n'''\n"
    },
    {
        "number": 3505,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '4'\nprint(solution(stdin))\n'''\n\nfrom typing import List"
    },
    {
        "number": 3505,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n1 2 3 4''') == \"4\"\n'''\n"
    },
    {
        "number": 3506,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n1 31 2\n20 60\n50 90\n\"\"\") == \"4 3\"\nassert solution(\n\"\"\"\n1 31 2\n1 100\n100 1000\n\"\"\") == \"3 3\"\nassert solution(\n\"\"\"\n1 30 2\n20 60\n50 90\n\"\"\") == \"3 3\"\nassert solution(\n\"\"\"\n1 4\n20 60\n50 90\n\"\"\") == \"2 1\"\nassert solution(\n\"\"\"\n1 4\n1 100\n100 1000\n\"\"\") == \"1 1\"\n"
    },
    {
        "number": 3506,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 31 2\n20 60\n50 90''') == '4 3'\n'''\n\nimport sys"
    },
    {
        "number": 3506,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 31 2\n20 60\n50 90''') == '4 3'\nassert solution('''1 2\n20 30\n50 90''') == '2 1'\nassert solution('''1 2\n20 30\n50 90\n1 2''') == '1 1'\nassert solution('''1 2\n20 30\n50 90\n50 40\n1 2''') == '4 3'\nassert solution('''1 2\n20 30\n50 90\n50 40\n1 2''') == '2 1'\n"
    },
    {
        "number": 3506,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 31 2\n20 60\n50 90''') == '4 3'\nassert solution('''2 3\n10 30\n20 40\n30 50''') == '1 1'\nassert solution('''1 1\n10 30\n20 40\n30 50''') == '4 3'\nassert solution('''1 2\n20 30\n30 40\n40 50''') == '1 2'\nassert solution('''1 2\n10 30\n30 40\n40 50''') == '1 1'\n"
    },
    {
        "number": 3506,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"1 31 2\n20 60\n50 90\"\"\"\n) == \"4 3\"\nassert solution(\n\"\"\"10 10 2\n20 60\n50 90\"\"\"\n) == \"4 3\"\nassert solution(\n\"\"\"100 100 2\n100 60\n50 90\"\"\"\n) == \"1 0\"\nassert solution(\n\"\"\"1 1 2\n20 60\n50 90\"\"\"\n) == \"1 0\"\nassert solution(\n\"\"\"1 1 2\n20 60\n50 60\"\"\"\n) == \"0 1\"\n"
    },
    {
        "number": 3506,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\n\nfrom __future__ import annotations\n\nimport sys\nfrom functools import lru_cache\n\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 3506,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n'''\n"
    },
    {
        "number": 3506,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10 30\n20 60\n50 90\n''') == '1 4'\nassert solution('''5 10\n1 2\n2 4\n4 6\n6 8\n8 10\n10 12\n12 14\n14 16\n16 18\n18 20\n20 22\n''') == '1 3'\nassert solution('''10 40\n10 30\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n''') == '1 4'\nassert solution('''10 30\n10 25\n20 60\n50 90\n''') == '1 4'\nassert solution('''10 30\n10 25\n20 60\n50 90\n''') == '1 4'\n"
    },
    {
        "number": 3506,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\nassert solution(\"5 4\\n4 2\\n5 3\\n5 2\\n5 1\\n5 1\\n5 2\\n3 5\\n3 4\\n4 1\\n3 2\\n2 1\\n1 1\\n2 1\\n1 3\\n3 2\\n2 4\\n4 2\\n3 1\\n1 2\\n2 3\\n3 1\\n2 2\\n2 3\\n2 4\\n4 1\\n3 2\\n3 2\\n4 1\\n2 2\\n4 1\\n2 3\\n4 2\\n4 2\\n4 3\\n2 2\\n5 1\\n5 1\\n5 1\\n5 2\\n5 2\\n5 3\\n5 2\\n5 3\\n5 2\\n5 1\\n5 1\\n5 1\\n5 1\\n5 2\\n5 2\\n5 3\\n5 2\\n5 3\\n5 3\\n5 3\\n5 2\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\"
    },
    {
        "number": 3506,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"1 31 2\n20 60\n50 90\"\"\") == \"4 3\"\nassert solution(\n\"\"\"1 31 2\n20 60\n50 90\n1 30 2\n21 36\n5 40\n1 45 2\n22 46\n3 47\n2 48\"\"\") == \"2 3\"\nassert solution(\n\"\"\"1 31 2\n20 60\n50 90\n1 30 2\n21 36\n5 40\n1 45 2\n22 46\n3 47\n2 48\n1 49 2\n20 55\n15 60\n1 65 2\n66 67\n2 68\"\"\") == \"1 2\"\nassert solution(\n\"\"\"1 31 2\n20 60\n50 90\n1 30 2\n21 36\n5 40\n1 45 2\n22 46\n3 47\n2 48\n1 49 2\n20 55\n15 60\n1 65 2\n66 67\n2 68\n1 71 2\n20 77\n15 80\n1 85 2\n86 87\n2 88\"\"\") == \"1 2\"\nassert solution(\n\"\"\"1 31 2\n20 60\n50 90\n1 30 2\n21 36\n5 40\n1 45 2\n22 46\n3 47\n2 48\n1 49 2\n20 55\n15 60\n1 65 2\n66 67\n2 68\n1 71 2\n20 77\n15 80\n1 85 2\n86 87\n2 88\n1 89 2\n20 85\n15 90\n1 95 2\n96 97\n2 98\"\"\") == \"1 2\"\n"
    },
    {
        "number": 3507,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2 1') == 3\nassert solution('2 2 2') == 6\nassert solution('1 1 1') == 1\nassert solution('2 2 3') == 1\nassert solution('2 2 4') == 1\n"
    },
    {
        "number": 3507,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"6\"\n"
    },
    {
        "number": 3507,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2 1') == '3'\nassert solution('1 3 1') == '2'\nassert solution('1 3 2') == '4'\nassert solution('2 2 1') == '3'\nassert solution('1 1 2') == '4'\n"
    },
    {
        "number": 3507,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('2 2 1') == '3'\nassert solution('1 1 1') == '0'\nassert solution('2 3 1') == '1'\nassert solution('1 2 1') == '0'\n"
    },
    {
        "number": 3507,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2 1') == '3'\nassert solution('3 3 1') == '6'\nassert solution('3 2 1') == '3'\nassert solution('3 3 1') == '6'\nassert solution('5 3 1') == '3'\n"
    },
    {
        "number": 3507,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2 1') == 3\nassert solution('1 0 0') == 1\nassert solution('1 1 0') == 0\n\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 3507,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 1 1\") == \"0\"\n"
    },
    {
        "number": 3507,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 3\") == \"6\"\nassert solution(\"7 5 3\") == \"0\"\nassert solution(\"10 7 5\") == \"0\"\nassert solution(\"1 1 2\") == \"0\"\n"
    },
    {
        "number": 3507,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 2 1\") == 3\nassert solution(\"1 1 2\") == 0\nassert solution(\"2 2 3\") == 0\nassert solution(\"4 3 3\") == 0\nassert solution(\"3 1 3\") == 1\n"
    },
    {
        "number": 3507,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3\"\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 3508,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3 1\"\n"
    },
    {
        "number": 3508,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\"\nassert solution(\"3\\n1341 2412 1200 3112\") == \"2 3\"\nassert solution(\"2\\n1341 2412\") == \"1 2\"\nassert solution(\"1\\n1341\") == \"0 2\"\nassert solution(\"\\n\") == \"\"\n"
    },
    {
        "number": 3508,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(open(\"test_sample.txt\").read()) == \"3 1\"\nassert solution(open(\"test_sample2.txt\").read()) == \"7 4\"\nassert solution(open(\"test_sample3.txt\").read()) == \"4 4\"\nassert solution(open(\"test_sample4.txt\").read()) == \"4 1\"\nassert solution(open(\"test_sample5.txt\").read()) == \"3 2\"\n"
    },
    {
        "number": 3508,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\"\nassert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\"\nassert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\"\nassert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\"\nassert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\"\n"
    },
    {
        "number": 3508,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n1341 2412 1200 3112 2391''') == '3 1'\n'''\nimport sys\nassert(len(sys.argv)>1)\nassert(int(sys.argv[1])<10000)\n\nf=open(sys.argv[1],'r')\ng=open('/dev/stdout','w')\n\nn=int(f.readline())\ns=f.readline()\ns=s.split()\na=[]\nfor i in s:\n    a.append(int(i))"
    },
    {
        "number": 3508,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output\n"
    },
    {
        "number": 3508,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n1341 2412 1200 3112 2391''') == \"3 1\"\nassert solution('''10\n51002500 2100 243000 2400 232000 240500 251000''') == \"10 4\"\nassert solution('''50\n99983637 43805039 50990099''') == \"40 15\"\nassert solution('''50\n99983637 43805039 50990099''') == \"40 15\"\nassert solution('''100\n987654321 123456789''') == \"0 0\"\n"
    },
    {
        "number": 3508,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''5\n1341 2412 1200 3112 2391'''\n    ) == '3 1'\n\nassert solution(\n'''5\n1413 2512 1200 3112 2334'''\n    ) == '3 0'\n\nassert solution(\n'''6\n1000000 1000000000 1000 1000 1000 1000'''\n    ) == '0 1'\n\nassert solution(\n'''10\n1000000 1000000000 1000 1000 1000 1000 1000000'''\n    ) == '1 1'\n\nassert solution(\n'''10\n1000000 1000000000 1000 1000 1000 1000 10000000'''\n    ) == '2 0'"
    },
    {
        "number": 3508,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n1341 2412 1200 3112 2391''') == '3 1'\nassert solution('''2\n1000 1000''') == '1 0'\nassert solution('''8\n84788 1 864 8795 8791''') == '0 7'\nassert solution('''8\n100 000''') == '1 0'\nassert solution('''8\n4 6 4 3 2 1''') == '2 1'\n"
    },
    {
        "number": 3508,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n1341 2412 1200 3112 2391''') == '3 1'\nassert solution('''3\n15 15 15''') == '0 2'\nassert solution('''4\n1341 2412 1200 3112 2391''') == '2 0'\nassert solution('''10\n26000 26000 26000 26000 26000 26000''') == '1 0'\nassert solution('''50\n20000 20000 20000 20000 20000 20000''') == '0 0'\n"
    },
    {
        "number": 3509,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 20\n3 5\n1 3 7\n2 1 1\n2 3 2\n2 3 5\n3 2 4''') == '6'\n'''\nTest.describe(\"Tests\")\nTest.assertEquals(solution('''10 20\n3 5\n1 3 7\n2 1 1\n2 3 2\n2 3 5\n3 2 4'''), '6')\n'''\n"
    },
    {
        "number": 3509,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10 20') == '6'\nassert solution('10 10') == '0'\nassert solution('10 50') == '49'\nassert solution('10 50') == '49'\nassert solution('50 50') == '49'\n"
    },
    {
        "number": 3509,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n') == '6'\nassert solution('10 15\\n1 1\\n1 2 2\\n1 3 3\\n1 3 4\\n1 3 5\\n1 3 6\\n1 4 2\\n1 5 2\\n1 5 3\\n1 5 6\\n1 6 2\\n1 7 2\\n1 7 3\\n1 7 4\\n1 7 5\\n1 7 6\\n1 7 7\\n1 7 8\\n1 7 9\\n1 7 10\\n1 7 11\\n1 7 12\\n1 7 13\\n1 7 14\\n1 7 15\\n1 7 16\\n1 7 17\\n1 7 18\\n1 7 19\\n1 7 20\\n1 7 21\\n1 7 22\\n1 7 23\\n1 7 24\\n1 7 25\\n1 7 26\\n1 7 27\\n1 7 28\\n1 7 29\\n1 7 30\\n1 7 31\\n1 7 32\\n1 7 33\\n1 7 34\\n1 7 35\\n1 7 36\\n1 7 37\\n1 7 38\\n1 7 39\\n1 7 40\\n1 7 41\\n1 7 42\\n1 7 43\\n1 7 44\\n1 7 45\\n1 7 46\\n1 7 47\\n1 7 48\\n1 7 49\\n1 7 50\\n1 7 51\\n1 7 52\\n1 7 53\\n1 7 54\\n1 7 55\\n1 7 56\\n1 7 57\\n1 7 58\\n1 7 59\\n1 7 60\\n1 7 61\\n1 7 62\\n1 7 63\\n1 7 64\\n1 7 65\\n1 7 66\\n1 7 67\\n1 7 68\\n1 7 69\\n1 7 70\\n1 7 71\\n1 7 72\\n1 7 73\\n1 7 74\\n1 7 75\\n1 7 76\\n1 7 77\\n1 7 78\\n1 7 79\\n1 7 80\\n1 7 81\\n1 7 82\\n1 7 83\\n1 7 84\\n1 7 85\\n1 7 86\\n1 7 87\\n1 7 88\\n1 7 89\\n1 7 90\\n1 7 91\\n1 7 92\\n1 7 93\\n1 7 94\\n1 7 95\\n1 7 96\\n1 7 97\\n1 7 98\\n1 7 99\\n1 7 100\\n1 7 101\\n1 7 102\\n1 7 103\\n1 7 104\\n1 7 105\\n1 7 106\\n1 7 107\\n1 7 108\\n1 7 109\\n1 7 110\\n1 7 111\\n1 7 112\\n1 7 113\\n1 7 114\\n1 7 115\\n1 7 116\\n1 7 117\\n1 7 118\\n1 7 119\\n1 7 120\\n1 7 121\\n1 7 122\\n1 7 123\\n1 7 124\\n1 7 125\\n1 7 126\\n1 7 127\\n1 7 128\\n1 7 129\\n1 7 130\\n1 7 131\\n1 7 132\\n1 7 133\\n1 7 134\\n1 7 135\\n1 7 136\\n1 7 137\\n1 7 138\\n1 7 139\\n1 7 140\\n1 7 141\\n1 7 142\\n1 7 143\\n1 7 144\\n1 7 145\\n1 7 146\\n1 7 147\\n1 7 148\\n1 7 149\\n1 7 150\\n1 7 151\\n1 7 152\\n1 7 153\\n1 7 154\\n1 7 155\\n1 7 156\\n1 7 157\\n1 7 158\\n1 7 159\\n1 7 160\\n1 7 161\\n1 7 162\\n1 7 163\\n1 7 164\\n1 7 165\\n1 7 166\\n1 7 167\\n1 7 168\\n1 7 169\\n1 7 170\\n1 7 171\\n1 7 172\\n1 7 173\\n1 7 174\\n1 7 175\\n1 7 176\\n1 7 177\\n1 7 178\\n1 7 179\\n1 7 180\\n1 7 181\\n1 7 182\\n1 7 183\\n1 7 184\\n1 7 185\\n1 7 186\\n1 7 187\\n1 7 188\\n1 7 189\\n1 7 190\\n1 7 191\\n1 7 192\\n1 7 193\\n1 7 194\\n1 7 195\\n1 7 196\\n1 7 197\\n1 7 198\\n1 7 199\\n1 7 200\\n1 7 201\\n1 7 202\\n1 7 203\\n1 7 204\\n1 7 205\\n1 7 206\\n1 7 207\\n1 7 208\\n1 7 209\\n1 7 210\\n1 7 211\\n1 7 212\\n1 7 213\\n1 7 214\\n1 7 215\\n1 7 216\\n1 7 217\\n1 7 218\\n1 7 219\\n1 7 220\\n1 7"
    },
    {
        "number": 3509,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\n\"\"\"\n@param a: the time it takes to call the cops\n@param b: the time it takes to call the cops\n@param n: the number of intersections\n@param m: the number of roads in the neighbourhood\n@return: the minimum time to call cops\n\"\"\"\n"
    },
    {
        "number": 3509,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''10 20\n3 5\n1 3 7\n2 1 1\n2 3 2\n2 3 5\n3 2 4\n''') == '6'\nassert solution('''10 10\n4 5\n1 3 7\n2 1 1\n2 3 2\n2 3 5\n3 2 4\n''') == '5'\nassert solution('''10 10\n5 6\n1 3 7\n2 1 1\n2 3 2\n2 3 5\n3 2 4\n''') == '3'\nassert solution('''5 10\n5 6\n1 3 7\n2 1 1\n2 3 2\n2 3 5\n3 2 4\n''') == '4'\nassert solution('''2 10\n5 6\n1 3 7\n2 1 1\n2 3 2\n2 3 5\n3 2 4\n''') == '5'\n"
    },
    {
        "number": 3509,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    '10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n'\n) == '6'\n"
    },
    {
        "number": 3509,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n') == '6'\nassert solution('7 10\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n') == '4'\nassert solution('4 5\\n3 3\\n1 2 1\\n2 3 2\\n2 3 5\\n3 2 4\\n') == '4'\nassert solution('2 5\\n1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n') == '4'\nassert solution('1 10\\n1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n') == '4'\n"
    },
    {
        "number": 3509,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '6'\nassert solution(stdin) == '8'\nassert solution(stdin) == '7'\nassert solution(stdin) == '9'\nassert solution(stdin) == '10'\n"
    },
    {
        "number": 3509,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10 20') == '6'\nassert solution('5 10') == '7'\nassert solution('1 5') == '1'\nassert solution('7 15') == '6'\nassert solution('3 10') == '8'\n"
    },
    {
        "number": 3509,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''10 20''') == '6'\nassert solution('''3 5''') == '1'\nassert solution('''3 4''') == '2'\nassert solution('''1 2 1''') == '4'\nassert solution('''2 3 2''') == '6'\n"
    },
    {
        "number": 3510,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 3510,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\n2 ab b\n1 b\n''') == '0 1\\n-1 0'\n'''\n"
    },
    {
        "number": 3510,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n2 ab b\\n1 b\\n') == '0 1'\nassert solution('3\\n2 ab b\\n1 b\\n2 ab\\n1 ab\\n') == '0 1'\nassert solution('6\\n2 ab b\\n1 b\\n2 ab\\n1 ab\\n2 ab\\n1 ab\\n') == '0 1'\nassert solution('6\\n2 ab b\\n1 b\\n2 ab\\n1 ab\\n2 ab\\n1 ab\\n2 ab\\n1 ab\\n') == '1 0'\nassert solution('5\\n2 ab b\\n1 b\\n2 ab\\n1 ab\\n2 ab\\n1 ab\\n') == '1 0'\n"
    },
    {
        "number": 3510,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\n2 ab b\n1 b\n''') == '0 1'\nassert solution('''1\n2\n1\n''') == '1'\nassert solution('''6\n2 a b c d e f\n1 b\n1 a b c\n1 b c d\n1 b c e\n1 b c f\n1 a\n1\n''') == '-1'\n'''\nimport sys\n"
    },
    {
        "number": 3510,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n2 ab b\n1 b\n''') == '0 1'\nassert solution('''2\n1 ab b\n1 b\n''') == '-1 0'\nassert solution('''6\n7 1 2 3 4 5 6 7\n8 1 2 3 4 5 6 7 8\n9 1 2 3 4 5 6 7 9\n10 1 2 3 4 5 6 7 10\n11 1 2 3 4 5 6 7 11\n12 1 2 3 4 5 6 7 12\n13 1 2 3 4 5 6 7 13\n14 1 2 3 4 5 6 7 14\n15 1 2 3 4 5 6 7 15\n16 1 2 3 4 5 6 7 16\n17 1 2 3 4 5 6 7 17\n18 1 2 3 4 5 6 7 18\n19 1 2 3 4 5 6 7 19\n20 1 2 3 4 5 6 7 20\n21 1 2 3 4 5 6 7 21\n22 1 2 3 4 5 6 7 22\n23 1 2 3 4 5 6 7 23\n24 1 2 3 4 5 6 7 24\n25 1 2 3 4 5 6 7 25\n''') == '3'\nassert solution('''6\n9 1 2 3 4 5 6 7 8\n8 1 2 3 4 5 6 7 8\n7 1 2 3 4 5 6 7 8\n6 1 2 3 4 5 6 7 8\n5 1 2 3 4 5 6 7 8\n4 1 2 3 4 5 6 7 8\n3 1 2 3 4 5 6 7 8\n2 1 2 3 4 5 6 7 8\n1 1 2 3 4 5 6 7 8\n''') == '3'\nassert solution('''6\n8 1 2 3 4 5 6 7 8\n7 1 2 3 4 5 6 7 8\n6 1 2 3 4 5 6 7 8\n5 1 2 3 4 5 6 7 8\n4 1 2 3 4 5 6 7 8\n3 1 2 3 4 5 6 7 8\n2 1 2 3 4 5 6 7 8\n1 1 2 3 4 5 6 7 8\n''') == '1'\n"
    },
    {
        "number": 3510,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n2 ab b\n1 b\n''') == '0 1'\n\nassert solution('''3\n2 a\n3 b\n2 a b\n1 a\n2 b\n2 c\n1 c\n1 a\n2 d\n1 d\n1 b\n3 d\n3 a\n1 a\n2 b\n2 d\n2 c\n1 c\n1 b\n2 c\n1 a\n2 d\n1 a\n2 b\n2 d\n1 a\n2 b\n2 d\n1 d\n1 c\n2 b\n3 a\n2 b\n2 a\n2 a\n2 c\n1 c\n2 d\n1 d\n1 b\n2 c\n1 b\n2 a\n3 a\n3 b\n1 a\n1 b\n1 c\n2 d\n2 c\n1 a\n1 c\n2 b\n2 d\n2 a\n2 c\n1 a\n1 b\n1 d\n2 d\n3 b\n1 b\n1 a\n2 b\n2 d\n1 b\n2 c\n1 b\n2 a\n1 b\n3 a\n1 a\n3 d\n1 d\n2 d\n2 b\n1 c\n2 c\n2 a\n2 d\n3 c\n1 c\n1 b\n1 d\n2 c\n2 a\n2 a\n1 a\n2 d\n1 a\n1 c\n2 d\n2 a\n1 b\n1 c\n2 b\n2 c\n2 a\n3 a\n1 a\n3 b\n2 c\n2 a\n1 a\n1 b\n2 d\n1 a\n2 c\n1 c\n1 b\n2 b\n2 d\n3 b\n1 b\n1 a\n2 d\n1 a\n1 c\n1 b\n1 c\n2 c\n2 a\n2 b\n2 a\n2 d\n3 c\n1 c\n1 a\n2 a\n2 c\n2 a\n2 b\n2 d\n1 c\n1 b\n1 b\n2 a\n3 a\n1 a\n1 d\n2 a\n1 c\n2 a\n1 a\n2 a\n3 d\n1 d\n2 d\n2 a\n2 b\n2 d\n1 a\n2 d\n1 a\n1 c\n2 d\n2 b\n1 b\n1 a\n2 b\n1 b\n2 c\n1 b\n2 a\n3 a\n2 a\n2 a\n2 c\n1 c\n1 b\n1 b\n1 c\n1 c\n2 c\n2 a\n1 b\n2 b\n2 a\n2 a\n2 d\n1 a\n2 c\n1 c\n2 a\n2 b\n2 c\n2 a\n1 a\n1 d\n1 c\n1 b\n2 c\n1 b\n2 a\n1 b\n1 b\n2 a\n1 a\n1 b\n1 d\n1 c\n1 d\n1 d\n2 d\n2 b\n1 b\n1 a\n2 a\n2 b\n2 b\n2 a\n2 a\n2 d\n1 d\n1 c\n2 b\n1 b\n1 d\n1 b\n1 c\n1 c\n1 c\n2 c\n1 c\n1 d\n1 d\n2 d\n1 d\n1 c\n1 d\n2 b\n1 b\n1 a\n1 a\n1 b\n1 a\n1 a\n1 a\n2 c\n2 a\n1 a\n1 c\n1 b\n1 b\n1 b\n1 d\n1 c\n1 c\n1 b\n1 b\n1 c\n1 c\n1 b\n1 b\n1 d\n1 b\n1 b\n2 b\n1 b\n1 a\n2 b\n1 a\n1 d\n1 c\n1 b\n1 b\n1 d\n1 c\n1 d\n1 d\n1 d\n2 d\n2 b\n1 b\n1 a\n2 a\n2 a\n1 a\n1 b\n1 b\n1 d\n1 d\n1 b\n1 c\n1 d\n1 c\n1 c\n1 c\n2 c\n1 c\n1 b\n1 b\n1 b\n1 b\n1 b\n1 a\n1 b\n1 b\n1 c\n1 d\n1 a\n1 a\n1 c\n1 b\n1 b\n1 d\n1 a\n1 d\n1 b\n1 d\n1 b\n1 b\n1 c\n1 d\n1 c\n1 d\n1 a\n1 b\n1 d\n1 b\n1 c\n1 a\n1 d\n1 d\n1 b\n1 c\n1 c\n1 b\n1 b\n1 a\n1 b\n1 d\n1 a\n1 d\n1 c\n1 d\n1 a\n1 d\n1 a\n1 c\n1 d\n1 c\n1 c\n1 c\n1 d\n1 b\n1 b\n1 d\n1 a\n1 b\n1 b\n1 a\n1 b\n1 b\n1 c\n1 d\n1 a\n1 c\n1 a\n1 a\n1 c\n1 b\n1 b\n1 b\n1 b\n1 b\n1 b\n1 a\n1 b\n1 a\n1 b\n1 c\n1 c\n1 a\n1 b\n1 b\n1 a\n1 a\n1 d\n1 a\n1 a\n1 d\n1 c\n1 b\n1 a\n1 b\n1 a\n1 d\n1 b\n1 b\n1 a\n1 a\n1 a\n1 b\n1 b\n1 b\n1 b\n1 a\n1 b\n1 a\n1 b\n1 b\n1 a\n1 a\n1 c\n1 b\n1 b\n1 a\n1 b\n1 a\n1 a\n1 b\n1 a\n1 c\n1 b\n1 b\n1 b\n1 a\n1 b\n1 b\n1 b\n1 b\n1 b\n1 a\n1 b\n1 a\n1 a\n1 b\n1 a\n1 a\n1 d\n1 c\n1 c\n1 c\n1 d\n1 b\n1 b\n1 b\n1 b\n1 c\n1 b\n1 b\n1 b\n1 b\n1 c\n1 a\n1 a\n1 c\n"
    },
    {
        "number": 3510,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\n2 ab b\n1 b\n''') == '0 1\\n-1 0\\n'\nassert solution('''2\n3 ab a\n1 b\n''') == '0 1\\n1 -1\\n'\nassert solution('''2\n2 ab a\n1 b\n''') == '0 1\\n1 -1\\n'\nassert solution('''2\n2 ab c\n1 b\n''') == '0 1\\n-1 -1\\n'\nassert solution('''3\n2 ab a\n1 b\n2 ab c\n1 b\n''') == '0 1\\n1 2\\n2 -1\\n'\n"
    },
    {
        "number": 3510,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"2\n2 ab b\n1 b\"\"\") == \"0 1\"\nassert solution(\"\"\"10\n12 a c b\n2 a b\n2 a c\n2 b a\n2 c a\n4 a b\n2 b c\n2 c b\n2 a b\n2 b c\n2 c a\n2 a c\n2 c b\n2 a b\n2 b c\n2 a c\n2 c b\n2 a b\n2 b c\n2 c a\n2 b a\n2 b c\n2 a b\n2 c b\n2 a b\n2 b c\n2 a c\n2 b a\n2 c b\n2 a b\n2 b c\n2 a c\n2 c b\n2 b a\n2 c a\n2 b c\n2 a b\n2 a c\n2 c a\n2 b c\n2 a b\n2 c b\n2 a b\n2 b c\n2 a c\n2 c b\n2 a b\n2 b c\n2 a c\n2 c b\n2 b a\n2 a c\n2 c a\n2 b c\n2 a b\n2 b c\n2 a c\n2 c b\n2 a b\n2 c a\n2 b c\n2 a b\n2 b c\n2 a c\n2 c b\n2 a b\n2 b c\n2 a c\n2 c b\n2 b a\n2 a c\n2 c a\n2 b c\n2 a b\n2 c b\n2 a b\n2 b c\n2 a c\n2 c b\n2 b a\n2 a c\n2 c a\n2 b c\n2 a b\n2 b c\n2 a c\n2 c b\n2 b a\n2 b c\n2 a b\n2 b c\n2 a c\n2 c b\n2 b a\n2 a c\n2 c a\n2 b c\n2 a b\n2 b c\n2 a c\n2 c b\n2 a b\n2 a c\n2 b c\n2 c a\n2 b a\n2 b c\n2 a b\n2 b c\n2 a c\n2 c b\n2 b a\n2 a c\n2 c b\n2 b a\n2 b c\n2 a b\n2 b c\n2 b a\n2 c a\n2 a b\n2 c b\n2 b a\n2 b c\n2 c b\n2 a b\n2 c a\n2 a c\n2 b c\n2 c a\n2 b c\n2 b a\n2 c a\n2 c b\n2 a b\n2 a c\n2 b c\n2 b a\n2 c b\n2 a b\n2 b c\n2 a c\n2 c b\n2 b a\n2 a c\n2 c b\n2 a b\n2 c a\n2 b c\n2 b a\n2 a c\n2 c b\n2 a b\n2 b c\n2 a c\n2 c b\n2 b a\n2 a c\n2 c a\n2 b c\n2 b a\n2 a c\n2 c b\n2 a b\n2 b c\n2 a c\n2 c b\n2 b a\n2 c a\n2 b c\n2 b a\n2 b c\n2 a b\n2 c b\n2 b a\n2 a c\n2 c b\n2 a b\n2 b c\n2 a c\n2 c b\n2 b a\n2 c a\n2 b c\n2 a b\n2 a c\n2 b c\n2 c a\n2 b a\n2 b c\n2 a b\n2 b c\n2 a c\n2 c b\n2 b a\n2 b c\n2 a b\n2 a c\n2 c b\n2 b a\n2 b c\n2 a b\n2 b c\n2 a c\n2 c b\n2 b a\n2 a c\n2 c a\n2 b c\n2 b a\n2 c a\n2 c b\n2 b a\n2 a c\n2 c b\n2 b a\n2 a c\n2 c b\n2 a b\n2 b c\n2 b a\n2 b c\n2 a b\n2 b c\n2 a c\n2 b c\n2 c a\n2 a b\n2 c a\n2 b c\n2 b a\n2 c a\n2 c b\n2 b a\n2 b c\n2 a b\n2 b c\n2 b a\n2 c a\n2 a b\n2 a c\n2 c b\n2 b a\n2 b c\n2 a b\n2 b c\n2 b a\n2 a c\n2 c b\n2 b a\n2 a c\n2 c b\n2 a b\n2 c a\n2 b c\n2 a b\n2 b c\n2 b a\n2 c a\n2 b c\n2 b a\n2 c a\n2 c b\n2 b a\n2 b c\n2 b a\n2 a c\n2 c b\n2 b a\n2 b c\n2 a b\n2 b c\n2 a c\n2 c b\n2 b a\n2 b c\n2 a b\n2 b c\n2 a c\n2 c b\n2 b a\n2 a c\n2 c b\n2 b a\n2 b c\n2 b a\n2 a c\n2 c b\n2 b a\n2 a c\n2 c b\n2 b a\n2 a c\n2 c b\n2 a b\n2 b c\n2 a c\n2 b c\n2 c a\n2 b a\n2 a c\n2 c a\n2 a b\n2 b c\n2 a b\n2 b c\n2 a c\n2 c b\n2 b a\n2 a c\n2 c b\n2 b a\n2 a c\n2 c b\n2 b a\n2 a c\n2 c b\n2 b a\n2 a c\n2 c b\n2 b a\n2 a c\n2 c b\n2 b a\n2 b c\n2 a b\n2 b c\n2 b a\n2 b c\n2 a b\n2 b c\n2 a c\n2 c b\n2 b a\n2 b c\n2 b a\n2 a c\n"
    },
    {
        "number": 3510,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('ab') == '0 1'\nassert solution('ab\\nb') == '0 1'\nassert solution('ab\\nb\\na') == '0 1'\nassert solution('ab\\na\\nb') == '0 1'\n"
    },
    {
        "number": 3510,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 3511,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\\n3\"\n\"\"\""
    },
    {
        "number": 3511,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 1 2\n2''') == '1'\nassert solution('''1 1 2\n2''') == '3'\nassert solution('''1 1 2\n2''') == '8'\nassert solution('''1 1 2\n2''') == '0'\nassert solution('''1 1 2\n1\n1 2 2\n2\n1 1 2\n2''') == '1'\n"
    },
    {
        "number": 3511,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 4\n1 1 2\n2''') == '1\\n3\\n'\nassert solution('''2 4\n1 1 2\n2\n1 1 2''') == '1\\n3\\n'\nassert solution('''2 4\n1 1 2\n2\n1 1 2''') == '1\\n3\\n'\nassert solution('''1 10\n1\n1''') == '1\\n1\\n'\n'''\nNotes\n-\n-\n'''\n"
    },
    {
        "number": 3511,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '2\\n3\\n5\\n6\\n8\\n9\\n12\\n13\\n16\\n17\\n20\\n21\\n24\\n25\\n28\\n29\\n32\\n33\\n36\\n37\\n40\\n41\\n44\\n45\\n48\\n49\\n52\\n53\\n56\\n57\\n60\\n61\\n64\\n65\\n68\\n69\\n72\\n73\\n76\\n77\\n80\\n81\\n84\\n85\\n88\\n89\\n92\\n93\\n96\\n97\\n100'\nassert solution('4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n"
    },
    {
        "number": 3511,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\") == \"1\\n3\"\nassert solution(\"2 4\\n1 1 2\\n2\") == \"1\\n3\"\n"
    },
    {
        "number": 3511,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 2\n2\n1 1 2''') == '1\\n3\\n'\nassert solution('''1 2\n2\n1 1 2\n2\n1 1 2''') == '1\\n3\\n'\nassert solution('''1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2''') == '1\\n3\\n'\nassert solution('''1 2\n2\n1 1 2\n2\n1 1 2''') == '1\\n3\\n'\nassert solution('''1 2\n2\n1 1 2\n2\n1 1 2''') == '1\\n3\\n'\n"
    },
    {
        "number": 3511,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"2 4\\n\"\n    \"1 1 2\\n\"\n    \"2\\n\"\n    \"1 1 2\"\n) == \"1\\n\" + \"3\\n\"\nassert solution(\n    \"2 3\\n\"\n    \"1 1 2\\n\"\n    \"2\\n\"\n    \"1 1 2\"\n) == \"3\\n\"\nassert solution(\n    \"2 3\\n\"\n    \"1 1 2\\n\"\n    \"2\\n\"\n    \"1 1 2\"\n) == \"1\\n\" + \"6\\n\"\nassert solution(\n    \"2 5\\n\"\n    \"1 1 2\\n\"\n    \"2\\n\"\n    \"1 1 2\"\n) == \"3\\n\"\nassert solution(\n    \"2 3\\n\"\n    \"1 1 2\\n\"\n    \"2\\n\"\n    \"1 1 2\"\n) == \"3\\n\"\n"
    },
    {
        "number": 3511,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1 2\\n2') == '1\\n3'\nassert solution('1 1 2\\n2') == '1\\n3'\nassert solution('1 1 2\\n2') == '1\\n3'\nassert solution('1 1 2\\n2') == '1\\n3'\nassert solution('1 1 2\\n2') == '1\\n3'\n"
    },
    {
        "number": 3511,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 4\n1 1 2\n2\n1 1 2''') == '1\\n3\\n'\n\nassert solution('''2 4\n1 1 2\n2\n1 1 2''') == '1\\n3\\n'\n\nassert solution('''2 4\n1 2 2\n2\n1 1 2''') == '1\\n3\\n'\n\nassert solution('''4 7\n1 1 1 1 1\n2\n1 1 1 1 1\n2\n1 1 1 1 1\n3\n1 1 1 1 1\n3\n1 1 1 1 1\n4\n1 1 1 1 1''') == '1\\n2\\n3\\n'\n\nassert solution('''7 7\n1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1\n3\n1 1 1 1 1 1 1\n3\n1 1 1 1 1 1 1\n4\n1 1 1 1 1 1 1''') == '1\\n2\\n3\\n'"
    },
    {
        "number": 3511,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 4') == '1\\n3'\nassert solution('2 4\\n1 1 2\\n2\\n1 1 2\\n2') == '1\\n3\\n2\\n8\\n3'\n"
    },
    {
        "number": 3512,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == str(2)"
    },
    {
        "number": 3512,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n2') == '2'\nassert solution('2\\n2\\n1') == '1'\nassert solution('3\\n1 2 3\\n3 2 1') == '2'\nassert solution('4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3') == '4'\nassert solution('5\\n1 2 3 4 5\\n3 4 2 5 1\\n5 1 4 2 3\\n4 2 3 1 5') == '1'\n"
    },
    {
        "number": 3512,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0\\n5\\n2\\n') == '7'\nassert solution('2\\n5\\n2\\n') == '10'\nassert solution('0\\n10\\n2\\n') == '16'\nassert solution('1\\n10\\n2\\n') == '10'\nassert solution('2\\n5\\n2\\n') == '8'\n"
    },
    {
        "number": 3512,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''0\n5\n2''') == '7'\n'''\n0\n5\n2\n3\n5\n4\n7\n10\n15\n17\n20\n30\n35\n40\n60\n70\n80\n90\n100\n110\n120\n130\n140\n150\n160\n170\n180\n190\n200\n210\n220\n230\n240\n250\n260\n270\n280\n290\n300\n310\n320\n330\n340\n350\n360\n370\n380\n390\n400\n410\n420\n430\n440\n450\n460\n470\n480\n490\n500\n510\n520\n530\n540\n550\n560\n570\n580\n590\n600\n610\n620\n630\n640\n650\n660\n670\n680\n690\n700\n710\n720\n730\n740\n750\n760\n770\n780\n790\n800\n810\n820\n830\n840\n850\n860\n870\n880\n890\n900\n910\n920\n930\n940\n950\n960\n970\n980\n990\n1000\n''') == '7'\n\nassert solution('''5\n5\n0\n10\n20\n15\n5\n''') == '35'\n\nassert solution('''8\n0 8 2\n4 10 4\n2 4 1\n5 15 3\n3 6 1\n7 8 4\n1 1 1\n4 1 2\n2 2 2\n2 2 1\n''') == '79'\n\nassert solution('''10\n0 9 1\n1 1 0\n2 1 2\n3 1 3\n4 1 4\n5 1 5\n6 1 6\n7 1 7\n8 1 8\n9 1 9\n10 1 10\n''') == '54'\n\nassert solution('''100\n0 100 1\n1 1 0\n2 1 2\n3 1 3\n4 1 4\n5 1 5\n6 1 6\n7 1 7\n8 1 8\n9 1 9\n10 1 10\n11 1 11\n12 1 12\n13 1 13\n14 1 14\n15 1 15\n16 1 16\n17 1 17\n18 1 18\n19 1 19\n20 1 20\n21 1 21\n22 1 22\n23 1 23\n24 1 24\n25 1 25\n26 1 26\n27 1 27\n28 1 28\n29 1 29\n30 1 30\n31 1 31\n32 1 32\n33 1 33\n34 1 34\n35 1 35\n36 1 36\n37 1 37\n38 1 38\n39 1 39\n40 1 40\n41 1 41\n42 1 42\n43 1 43\n44 1 44\n45 1 45\n46 1 46\n47 1 47\n48 1 48\n49 1 49\n50 1 50\n51 1 51\n52 1 52\n53 1 53\n54 1 54\n55 1 55\n56 1 56\n57 1 57\n58 1 58\n59 1 59\n60 1 60\n61 1 61\n62 1 62\n63 1 63\n64 1 64\n65 1 65\n66 1 66\n67 1 67\n68 1 68\n69 1 69\n70 1 70\n71 1 71\n72 1 72\n73 1 73\n74 1 74\n75 1 75\n76 1 76\n77 1 77\n78 1 78\n79 1 79\n80 1 80\n81 1 81\n82 1 82\n83 1 83\n84 1 84\n85 1 85\n86 1 86\n87 1 87\n88 1 88\n89 1 89\n90 1 90\n91 1 91\n92 1 92\n93 1 93\n94 1 94\n95 1 95\n96 1 96\n97 1 97\n98 1 98\n99 1 99\n100 1 100\n''') == '1280'"
    },
    {
        "number": 3512,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n    3\n    0 5 2\n    5 0 4\n    2 4 0\n''') == '7'\nassert solution('''\n    3\n    0 0 1\n    0 0 3\n    1 0 0\n''') == '5'\nassert solution('''\n    4\n    0 2 1 5\n    1 0 3 4\n    1 3 0 2\n    3 2 0 1\n''') == '8'\nassert solution('''\n    5\n    0 0 0 0 0\n    0 0 0 0 0\n    0 0 0 0 0\n    0 0 0 0 0\n    0 0 0 0 0\n''') == '0'\nassert solution('''\n    5\n    2 0 0 0 0\n    0 0 0 0 0\n    0 0 0 0 0\n    0 0 0 0 0\n    0 0 0 0 0\n''') == '0'\n'''\n\nfrom sys import stdin\n"
    },
    {
        "number": 3512,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0 5 2\\n5 0 4\\n2 4 0\\n\") == \"7\"\nassert solution(\"1 2\\n5 0 4\\n0 1 0\\n\") == \"10\"\nassert solution(\"5 1\\n5 0 4\\n1 4 0\\n\") == \"10\"\nassert solution(\"5 2\\n5 0 4\\n0 1 0\\n\") == \"7\"\nassert solution(\"4 3\\n5 0 4\\n0 1 0\\n\") == \"7\"\n"
    },
    {
        "number": 3512,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0 5 2\") == \"7\"\nassert solution(\"5 0 4\") == \"7\"\nassert solution(\"2 4 0\") == \"7\"\nassert solution(\"1 3 2\") == \"3\"\nassert solution(\"0 1 2\") == \"1\"\n"
    },
    {
        "number": 3512,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0\\n5\\n2') == '7'\nassert solution('3\\n0 5 2\\n5 0 4\\n2 4 0\\n') == '7'\nassert solution('1\\n0\\n1\\n') == '1'\nassert solution('3\\n2\\n3\\n') == '5'\nassert solution('3\\n0\\n2\\n') == '0'\n"
    },
    {
        "number": 3512,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0 0\n1 0\n1 1''') == '0'\nassert solution('''0 0\n1 0\n1 1\n0 2''') == '2'\nassert solution('''0 0\n1 0\n1 1\n2 0''') == '2'\nassert solution('''0 0\n1 0\n1 1\n2 2''') == '2'\nassert solution('''0 0\n1 0\n1 1\n2 2\n3 0''') == '2'\n"
    },
    {
        "number": 3512,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2\\n0 2 0\") == \"3\"\nassert solution(\"3\\n2 0 1\") == \"3\"\nassert solution(\"4\\n0 3 2 1\") == \"3\"\nassert solution(\"5\\n0 4 3 2 1\") == \"3\"\nassert solution(\"6\\n0 5 4 3 2 1\") == \"3\"\n"
    },
    {
        "number": 3513,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1099511627776') == '8'\nassert solution('200') == '1'\nassert solution('1000000000000000') == '7'\nassert solution('20000000000000000') == '7'\nassert solution('2000000000000000000') == '7'\n"
    },
    {
        "number": 3513,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1099511627776''') == '8'\nassert solution('''1''') == '1'\nassert solution('''1000000000''') == '8'\nassert solution('''2''') == '2'\nassert solution('''3''') == '4'\n"
    },
    {
        "number": 3513,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1099511627776') == 8\nassert solution('11') == 0\nassert solution('1096') == 0\nassert solution('1299') == 2\nassert solution('123456789') == 24690\n"
    },
    {
        "number": 3513,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('42') == ''\nassert solution('1099511627776') == ''\nassert solution('100999824741619375424363212794995131898763487354415987522991157995516239624102296663984373847413035415045654367815171808120191628232055723078239516241487376538597263381534159490470') == '8'\nassert solution('9654594210517216243750273748736184849344244373216172299876514684994330309420582736207527061104288616766577516127327106117627116481697189334214054204456836874998844502312178716071689744143494447394260810875571307312052329766753484522230462067368449983190636424271753153616476991292744674529003626391727826253916320409613677') == '14'\n"
    },
    {
        "number": 3513,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1099511627776') == '8'\nassert solution('10999998') == '2'\nassert solution('10399667049284045') == '7'\nassert solution('10999999') == '2'\nassert solution('109') == '1'\n"
    },
    {
        "number": 3513,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3513,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(1099511627776) == 8\nassert solution(14699194) == 4\nassert solution(105) == 0\nassert solution(5) == 1\nassert solution(3) == 2\n"
    },
    {
        "number": 3513,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(1099511627776) == 8\nassert solution(15) == 0\nassert solution(10) == 2\nassert solution(9) == 1\nassert solution(7) == 0\n"
    },
    {
        "number": 3513,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1099511627776') == '8'\nassert solution('99999999999999999') == '8'\nassert solution('9999999999999999999') == '8'\nassert solution('9999999999999999999999') == '8'\nassert solution('999999999999999999999999') == '8'\n"
    },
    {
        "number": 3513,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == \"8\"\n\nassert solution(input()) == \"2\"\n\nassert solution(input()) == \"3\"\n\nassert solution(input()) == \"5\"\n\nassert solution(input()) == \"5\""
    },
    {
        "number": 3514,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n..\n.\n.\n.\n''') == '2'\nassert solution('''3 3\n...\n.\n.\n.\n''') == '2'\nassert solution('''3 3\nx..\n..\n.\n''') == '2'\nassert solution('''3 3\nx.\n.\n.\n''') == '1'\nassert solution('''3 3\n...\n.\n.\n.\n''') == '1'\n"
    },
    {
        "number": 3514,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 3\nx..\n.x.\nx.x''') == '2'\nassert solution('''5 5\nxxxxx\nxxx.\nx..x\n.xxx\nx.xx''') == '10'\nassert solution('''7 7\nx.x.x.x.x\n.xx..x.\nx..x..x\nxx.x..\nx.xx.x\nx..x.x''') == '21'\nassert solution('''17 17\nx.......\n.xx..x.\n....xxx.\n....x...\n....x...\n...xx..x\n..x......\n.....x...\n.x......\n.x......\nx......x\n.......x''') == '40'\n\n\n-----\n\n'''\n    stdin = stdin.strip()\n    rows = stdin.split('\\n')\n    N, M = rows[0].split(' ')\n    rows = rows[1:]\n    rows = [[rows[0][i] for i in range(len(rows[0]))] for row in rows]\n    return rows\n"
    },
    {
        "number": 3514,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 3\\nx..\\n.x.\\nx.x') == 2\nassert solution('10 10\\nxxxxxxxxxxxxxxxxxxxxxxxxx\\nxxxxxxxxxxxxxxxxxxxxxxxxx\\nxxxxxxxxxxxxxxxxxxxxxxxxx\\nxxxxxxxxxxxxxxxxxxxxxxxxx\\nxxxxxxxxxxxxxxxxxxxxxxxxx\\nxxxxxxxxxxxxxxxxxxxxxxxxx\\nxxxxxxxxxxxxxxxxxxxxxxxxx\\nxxxxxxxxxxxxxxxxxxxxxxxxx\\nxxxxxxxxxxxxxxxxxxxxxxxxx\\nxxxxxxxxxxxxxxxxxxxxxxxxx\\nxxxxxxxxxxxxxxxxxxxxxxxxx\\nxxxxxxxxxxxxxxxxxxxxxxxxx') == 38\nassert solution('10 10\\nxxxxxxxxxxxxxxxxxxxxxxxxx\\nxxxxxxxxxxxxxxxxxxxxxxxxx\\nxxxxxxxxxxxxxxxxxxxxxxxxx\\nxxxxxxxxxxxxxxxxxxxxxxxxx\\nxxxxxxxxxxxxxxxxxxxxxxxxx\\nxxxxxxxxxxxxxxxxxxxxxxxxx\\nxxxxxxxxxxxxxxxxxxxxxxxxx\\nxxxxxxxxxxxxxxxxxxxxxxxxx\\nxxxxxxxxxxxxxxxxxxxxxxxxx\\nxxxxxxxxxxxxxxxxxxxxxxxxx\\nxxxxxxxxxxxxxxxxxxxxxxxxx\\nxxxxxxxxxxxxxxxxxxxxxxxxx\\nxxxxxxxxxxxxxxxxxxxxxxxxx') == 39\n\n\n\"\"\""
    },
    {
        "number": 3514,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 3\nx..\n.x.\nx.x''') == 2\nassert solution('''3 3\nx.x\n.x.\nx.x''') == 1\nassert solution('''3 3\nx.x\n.x.\nx.x''') == 0\nassert solution('''3 3\nx.x\n.x.\nx.x''') == 0\nassert solution('''3 3\nx..\n.x.\nx.x''') == 1\n"
    },
    {
        "number": 3514,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 3\nx..\n.x.\nx.x''') == 2\nassert solution('''3 3\n.x.\nx.x\nx.x''') == 2\nassert solution('''3 3\nx.x\nx.x\nx.x''') == 3\nassert solution('''3 3\nx.x\nx.x\nx.x''') == 3\nassert solution('''3 3\nx..\nx..\nx..''') == 3\n"
    },
    {
        "number": 3514,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 3\n..\n.x\nx.x''') == 2\nassert solution('''3 3\nx..\n.x.\nx.x''') == 2\nassert solution('''3 3\nx..\n.x.\n.x.\n.x.\nx.x''') == 3\nassert solution('''3 3\nx..\n.x.\nx.x\nx.x\nx.x\nx.x''') == 3\nassert solution('''3 3\nx.\n.x.\n.x.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx."
    },
    {
        "number": 3514,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 2\n\nsolution('''3 3\nx..\n.x.\nx.x''') == 2\n\nassert solution('''3 3\n.x.\n.x.\nx.x''') == 2\n\nassert solution('''3 3\nx..\n.x.\nx.x\n''') == 2\n\nassert solution('''3 3\nx..\n.x.\nx.x\n''') == 2\n\nassert solution('''3 3\n.x.\nx.x\nx.x\n''') == 2"
    },
    {
        "number": 3514,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    \"3 3\"\n) == \"2\"\nassert solution(\n    \"3 3\"\n) == \"2\"\nassert solution(\n    \"x.x\"\n) == \"0\"\nassert solution(\n    \"x.x\"\n) == \"0\"\nassert solution(\n    \"x..\"\n) == \"1\"\n"
    },
    {
        "number": 3514,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 2\n\n---\n\nimport sys"
    },
    {
        "number": 3514,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 3\nx..\n.x.\nx.x''') == '2'\nassert solution('''3 3\nx..\n.x.\n.x.''') == '2'\nassert solution('''3 3\nx..\n.x.\n.x.''') == '2'\nassert solution('''3 3\nx..\n.x.\nx.x''') == '2'\nassert solution('''3 3\nx..\n.x.\nx.x''') == '2'\n"
    },
    {
        "number": 3515,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 3 2\n2 5 2\n3 0 0\n4 2 4\n5 3 0''') == '9\\n-1\\n5\\n6'\nassert solution('''5\n1 2 3\n2 3 5\n3 4 0\n4 5 4\n5 1 0''') == '0\\n5\\n7\\n6'\nassert solution('''3\n1 1 1\n2 2 2\n3 3 3''') == '-1\\n0\\n-1'\nassert solution('''7\n1 3 5\n2 3 6\n3 4 2\n4 6 4\n5 3 1\n6 1 5\n7 1 1''') == '0\\n-1\\n-1\\n-1\\n4\\n1\\n-1'\nassert solution('''7\n1 2 3\n2 3 4\n3 4 5\n4 5 6\n5 6 7\n6 7 1\n7 1 2''') == '0\\n-1\\n-1\\n-1\\n-1\\n1\\n2'\n"
    },
    {
        "number": 3515,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n1 3 2\n2 5 2\n3 0 0\n4 2 4\n5 3 0''') == '9\\n-1\\n5\\n6'\nassert solution('''5\n5 3 2\n0 0 0\n0 0 0\n0 0 0\n0 0 0''') == '5'\nassert solution('''10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n''') == '10'\nassert solution('''10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10''') == '-1'\nassert solution('''10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10''') == '10'\n"
    },
    {
        "number": 3515,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"5\n1 3 2\n2 5 2\n3 0 0\n4 2 4\n5 3 0\"\"\") == \"\"\"9\n-1\n5\n6\"\"\"\n"
    },
    {
        "number": 3515,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n1 3 2\n2 5 2\n3 0 0\n4 2 4\n5 3 0''') == '9\\n-1\\n5\\n6'\nassert solution('''1\n1 0 0\n2 1 1\n3 0 0\n4 2 4\n5 3 0''') == '-1'\nassert solution('''10\n1 4 2\n2 1 1\n3 0 0\n4 2 4\n5 3 0\n6 5 1\n7 6 2\n8 4 1\n9 5 2\n10 3 0''') == '-1'\n'''"
    },
    {
        "number": 3515,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '10'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '-1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '10'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '-1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78"
    },
    {
        "number": 3515,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\") == \"9\\n-1\\n5\\n6\"\nassert solution(\"1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\\n1 3 2\\n2 5 2\\n3 0 0\") == \"9\\n-1\\n5\\n6\\n12\"\nassert solution(\"2 2 2\\n1 1 1\\n2 2 2\") == \"-1\\n-1\"\nassert solution(\"3 3 3\\n1 2 3\\n2 3 2\\n3 1 3\\n1 2 3\") == \"4\\n-1\\n3\\n4\"\nassert solution(\"3 3 3\\n1 2 3\\n2 3 2\\n3 1 3\\n1 2 3\\n2 3 2\") == \"4\\n-1\\n3\\n4\\n12\"\n"
    },
    {
        "number": 3515,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n2\\n3\") == \"1\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"2\"\nassert solution(\"2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\") == \"3\"\nassert solution(\"1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\") == \"2\"\n"
    },
    {
        "number": 3515,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0') == '9\\n-1\\n5\\n6'\nassert solution('5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0') == '9\\n-1\\n5\\n6'\nassert solution('2\\n3 3 2\\n2 1 3\\n2 2 0\\n1 2 2') == '3\\n1\\n2'\nassert solution('2\\n3 3 2\\n2 1 3\\n2 2 0\\n1 2 2') == '3\\n1\\n2'\nassert solution('4\\n3 3 1\\n2 2 1\\n1 2 0\\n2 1 2') == '5\\n2\\n2'\n"
    },
    {
        "number": 3515,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(open(\"/py/code/traveling_salesman/solution.txt\", \"r\").read()))\n"
    },
    {
        "number": 3515,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8') == '9'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == '9'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13') == '9'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50') == '25'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n"
    },
    {
        "number": 3516,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1 1 40 30 20 10') == '91'\nassert solution('2\\n1 1 95 95 95 10') == '70'\nassert solution('3\\n1 1 95 50 30 20') == '104'\nassert solution('4\\n1 1 95 50 30 20\\n1 1 40 30 20 10\\n1 1 95 50 30 20\\n1 1 95 50 30 20') == '131'\nassert solution('5\\n1 1 95 50 30 20\\n1 1 40 30 20 10\\n1 1 95 50 30 20\\n1 1 95 50 30 20\\n1 1 40 30 20 10') == '156'\n"
    },
    {
        "number": 3516,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n''') == '91'\nassert solution('''5\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n4 1 95 50 30 20\n5 1 95 50 30 20\n''') == '214'\nassert solution('''6\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n4 1 95 50 30 20\n5 1 95 50 30 20\n6 1 95 50 30 20\n''') == '218'\nassert solution('''7\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n4 1 95 50 30 20\n5 1 95 50 30 20\n6 1 95 50 30 20\n7 1 95 50 30 20\n''') == '214'\nassert solution('''8\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n4 1 95 50 30 20\n5 1 95 50 30 20\n6 1 95 50 30 20\n7 1 95 50 30 20\n8 1 95 50 30 20\n''') == '216'\n"
    },
    {
        "number": 3516,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20''') == '91'\nassert solution('''5\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n1 1 20 10 10\n5 1 95 50 30 20''') == '231'\nassert solution('''10\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n1 1 20 10 10\n5 1 95 50 30 20\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20''') == '231'\n'''\n'''\n"
    },
    {
        "number": 3516,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n3\\n1 2 3\\n2 1 3') == '89'\nassert solution('2\\n1 1 1\\n1 2\\n2 1') == '2'\n\"\"\""
    },
    {
        "number": 3516,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20') == '91'\nassert solution('3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20') == '91'\nassert solution('2\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20') == '91'\nassert solution('2\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20') == '91'\n\"\"\"\n"
    },
    {
        "number": 3516,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1\\n1\") == \"4\"\nassert solution(\"2\\n1\\n1\") == \"3\"\nassert solution(\"3\\n1\\n1\") == \"9\"\nassert solution(\"4\\n1\\n1\") == \"7\"\nassert solution(\"5\\n1\\n1\") == \"7\"\n"
    },
    {
        "number": 3516,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n''') == '91'\nassert solution('''4\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n4 1 95 50 30 20\n3 1 95 95 95 10\n2 1 95 50 30 20\n''') == '33'\nassert solution('''5\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n4 1 95 50 30 20\n3 1 95 95 95 10\n2 1 95 50 30 20\n''') == '92'\n'''\n"
    },
    {
        "number": 3516,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(open(\"/home/jin/test/sample.txt\").read()) == \"101\"\nassert solution(open(\"/home/jin/test/sample2.txt\").read()) == \"100\"\nassert solution(open(\"/home/jin/test/sample3.txt\").read()) == \"101\"\nassert solution(open(\"/home/jin/test/sample4.txt\").read()) == \"99\"\nassert solution(open(\"/home/jin/test/sample5.txt\").read()) == \"102\"\n"
    },
    {
        "number": 3516,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\\n\") == \"91\""
    },
    {
        "number": 3516,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n''') == '91'\nassert solution('''3\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n''') == '91'\nassert solution('''3\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n''') == '91'\nassert solution('''3\n3 1 95 95 95 10\n2 1 95 50 30 20\n3 1 40 30 20 10\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n3 1 40 30 20 10\n1 1 40 30 20 10\n''') == '96'\nassert solution('''3\n3 1 95 95 95 10\n2 1 95 50 30 20\n3 1 40 30 20 10\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n3 1 40 30 20 10\n1 1 40 30 20 10\n''') == '106'\n"
    },
    {
        "number": 3517,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n15 20\n0\n1 1''') == '15'\nassert solution('''3\n1000 1000 1000\n1 1 1\n2 2 2\n3 3 3''') == '1'\n'''\nNote\nIn the first sample, step 1 has a dependency on step 0, so the elapsed time is 0 seconds. However, step 0 has a dependency on step 2, so the elapsed time is 15 seconds. Step 2 has a dependency on step 1, so the elapsed time is 30 seconds. Step 3 has a dependency on step 2, so the elapsed time is 60 seconds. Therefore, the shortest time possible is 15 seconds.\n\nIn the second sample, the same steps each take 1 second. In the worst case, all the steps are executed in parallel.\n'''\n"
    },
    {
        "number": 3517,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(open(\"test_input.txt\").read()) == '6'\nassert solution(open(\"test_input2.txt\").read()) == '15'\nassert solution(open(\"test_input3.txt\").read()) == '6'"
    },
    {
        "number": 3517,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n15 20\n0\n1 1\n2 1\n3 1\n4 1\n''') == '15'\n\nassert solution('''2\n15 20\n0\n1 1\n''') == '15'\n\nassert solution('''6\n30 30\n0\n1 1\n2 1\n3 1\n4 1\n5 1\n''') == '60'\n\nassert solution('''8\n15 22\n0\n1 1\n2 1\n3 1\n4 1\n5 1\n6 1\n7 1\n''') == '60'\n\nassert solution('''8\n15 22\n0\n1 1\n2 1\n3 1\n4 1\n5 1\n6 1\n7 1\n''') == '60'"
    },
    {
        "number": 3517,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 0\nassert solution('\\n') == 0\nassert solution('0\\n') == 0\nassert solution('0\\n1\\n') == 1\nassert solution('0\\n1\\n0\\n') == 0\n"
    },
    {
        "number": 3517,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n3\\n0') == '15'\nassert solution('3\\n15 19\\n0\\n0 1 1\\n0\\n1 1 1\\n1\\n3\\n3\\n0\\n0\\n3') == '9'\nassert solution('2\\n10\\n1\\n0\\n1\\n1\\n1\\n0\\n0\\n0') == '5'\nassert solution('3\\n15 19\\n0\\n0 1 1\\n0\\n1 1 1\\n1\\n3\\n3\\n0\\n0') == '5'\nassert solution('3\\n10 19\\n0\\n0 1 1\\n0\\n1 1 1\\n1\\n3\\n3\\n0\\n0') == '5'\n"
    },
    {
        "number": 3517,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '15'\n'''\n\nfrom collections import deque\n"
    },
    {
        "number": 3517,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0\\n10\\n1 1\\n1 1\") == \"15\""
    },
    {
        "number": 3517,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n15 20\\n0\\n1 1\\n') == '15'\nassert solution('2\\n12 5\\n0\\n1 1\\n') == '0'\nassert solution('2\\n12 5\\n0\\n1 2\\n') == '15'\nassert solution('2\\n12 5\\n0\\n1 1\\n1 3\\n') == '15'\nassert solution('2\\n10 5\\n0\\n1 1\\n') == '10'\n"
    },
    {
        "number": 3517,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"15\\n20\\n0\\n1 1\") == \"15\"\nassert solution(\"15\\n20\\n0\\n1 2\") == \"2\"\nassert solution(\"15\\n20\\n0\\n1 1 2\") == \"2\"\nassert solution(\"15\\n20\\n0\\n1 2 1\") == \"2\"\nassert solution(\"15\\n20\\n0\\n1 2 1 3\") == \"4\"\n"
    },
    {
        "number": 3517,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == '15'\nassert solution(input()) == '0'\nassert solution(input()) == '15'\nassert solution(input()) == '1'\nassert solution(input()) == '15'\n"
    },
    {
        "number": 3518,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3518,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"impossible\""
    },
    {
        "number": 3518,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"5 4\n3 1 375\n2 5 283\n1 4 716\n3 4 98\n\"\"\") == \"impossible\"\nassert solution(\n\"\"\"1 1\n1 1\n1 1\n\"\"\") == \"impossible\"\nassert solution(\n\"\"\"1 1\n1 1\n1 1\n\"\"\") == \"impossible\"\nassert solution(\n\"\"\"5 5\n2 1 383\n1 2 143\n4 2 21\n1 3 98\n3 4 100\n3 1 130\n2 4 45\n2 2 36\n3 4 39\n3 2 62\n2 4 9\n3 2 20\n2 4 16\n2 2 39\n2 3 21\n2 1 9\n1 4 17\n3 3 57\n3 1 48\n3 4 8\n\"\"\") == \"0\"\nassert solution(\n\"\"\"1 1\n1 1\n1 1\n1 1\n\"\"\") == \"impossible\"\n"
    },
    {
        "number": 3518,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"impossible\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"24\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"7\"\n"
    },
    {
        "number": 3518,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 4\n3 1 375\n2 5 283\n1 4 716\n3 4 98''') == 'impossible'\nassert solution('''6 6\n1 1 1\n5 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1''') == '0'\nassert solution('''3 6\n1 1 1\n5 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1''') == '1'\nassert solution('''2 4\n1 1 1\n1 1 1\n2 1 1\n1 1 1''') == 'impossible'\nassert solution('''6 5\n1 1 1\n5 1 1\n1 1 1\n1 1 1\n1 1 1\n2 1 1''') == '2'\n"
    },
    {
        "number": 3518,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 4\\n3 1 375\\n2 5 283\\n1 4 716') == 'impossible'\nassert solution('5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\\n2 5 72') == '1744'\nassert solution('5 6\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\\n2 5 72') == '1744'\nassert solution('5 6\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\\n2 5 72\\n2 1 18') == '1744'\nassert solution('5 6\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\\n2 5 72\\n2 1 18\\n1 5 157') == '1844'\n"
    },
    {
        "number": 3518,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 4\n3 1 375\n2 5 283\n1 4 716\n3 4 98''') == 'impossible'\nassert solution('''5 4\n3 1 375\n2 5 283\n1 4 716\n3 4 98\n2 3 716\n3 1 98\n2 4 716\n1 5 716''') == '420'\nassert solution('''5 4\n3 1 375\n2 5 283\n1 4 716\n3 4 98\n2 3 716\n3 1 98\n2 4 716\n1 5 716\n2 1 716\n2 2 716\n2 3 716\n2 4 716''') == '420'\nassert solution('''5 4\n3 1 375\n2 5 283\n1 4 716\n3 4 98\n2 3 716\n3 1 98\n2 4 716\n1 5 716\n2 1 716\n2 2 716\n2 3 716\n2 4 716\n3 1 716\n3 2 716\n3 3 716\n3 4 716\n2 1 716\n1 3 716\n1 4 716\n2 1 716\n1 2 716\n2 2 716\n2 3 716\n2 4 716''') == '420'\nassert solution('''5 4\n3 1 375\n2 5 283\n1 4 716\n3 4 98\n2 3 716\n3 1 98\n2 4 716\n1 5 716\n2 1 716\n2 2 716\n2 3 716\n2 4 716\n3 1 716\n3 2 716\n3 3 716\n3 4 716\n2 1 716\n1 3 716\n1 4 716\n2 1 716\n1 2 716\n2 2 716\n2 3 716\n2 4 716\n3 1 716\n3 2 716\n3 3 716\n3 4 716''') == '420'\n"
    },
    {
        "number": 3518,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(SAMPLE_INPUT) == OUTPUT\nprint(solution(sys.stdin.read()))\n"
    },
    {
        "number": 3518,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == \"\"\n\"\"\"\n\nimport sys\nfrom itertools import combinations\nsys.setrecursionlimit(10**6)\n\ninput = lambda: sys.stdin.readline().rstrip()"
    },
    {
        "number": 3518,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n5 4\n3 1 375\n2 5 283\n1 4 716\n3 4 98\n''') == 'impossible'\nassert solution('''\n6 2\n1 1 2\n2 3 4\n3 4 1\n4 2 1\n1 3 3\n2 4 3\n''') == '17'\n'''\n"
    },
    {
        "number": 3519,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"2.000000000\"\nassert solution(\"2\") == \"2.000000000\"\nassert solution(\"1\") == \"2.000000000\"\nassert solution(\"0\") == \"1.000000000\"\n\nassert solution(\"10000000000\") == \"3.000000000\"\n"
    },
    {
        "number": 3519,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(1) == \"1.000000000\"\nassert solution(2) == \"1.270650966\"\nassert solution(3) == \"1.245730500\"\nassert solution(4) == \"1.215824899\"\nassert solution(5) == \"1.203010099\"\n"
    },
    {
        "number": 3519,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(1) == \"1.000000000\"\nassert solution(2) == \"0.500000\"\nassert solution(3) == \"0.166667\"\nassert solution(4) == \"0.046875\"\nassert solution(5) == \"0.0296667\"\n"
    },
    {
        "number": 3519,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == '1.000000000'\nassert solution('2') == '0.5000000000'\nassert solution('3') == '0.1666666700'\nassert solution('4') == '0.0625'\nassert solution('5') == '0.03125'\n"
    },
    {
        "number": 3519,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(1) == 1.000000000\n\nassert solution(2) == 1.000000000\n\nassert solution(3) == 2.000000000\n\nassert solution(4) == 2.000000000\n\nassert solution(5) == 3.000000000"
    },
    {
        "number": 3519,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1') == '1.000000000'\nassert solution('2') == '0.999999999'\nassert solution('3') == '0.9999999999'\nassert solution('4') == '0.99999999999'\nassert solution('5') == '0.999999999999'\n"
    },
    {
        "number": 3519,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1.000000000\"\n\nassert solution(\"2\") == \"2.000000000\"\n\nassert solution(\"3\") == \"3.000000000\"\n\nassert solution(\"4\") == \"4.000000000\"\n\nassert solution(\"5\") == \"5.000000000\""
    },
    {
        "number": 3519,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1') == '1.000000000'\nassert solution('1000') == '1.000000000'\nassert solution('1000.0') == '1.000000000'\nassert solution('1000000') == '1.000000000'\nassert solution('0') == '0.000000000'\n"
    },
    {
        "number": 3519,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == '1.000000000'\nassert solution('2') == '1.0'\nassert solution('3') == '1.0'\nassert solution('4') == '1.0'\nassert solution('5') == '1.0'\n"
    },
    {
        "number": 3519,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == '1.000000000'\nassert solution('2') == '0.999999999'\nassert solution('10') == '0.999999999'\nassert solution('11') == '1.000000000'\nassert solution('100') == '1.000000000'\n"
    },
    {
        "number": 3520,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''100 3 10\n15 99 98\n40 3 2\n90 10 9''') == '115.000000000'\nassert solution('''100 3 10\n15 99 98\n40 3 2\n90 10 9\n20 17 16\n30 1 17\n50 11 10\n80 5 9\n100 7 8\n110 7 8\n120 8 7\n130 8 6\n140 9 5\n150 10 4\n160 11 4\n170 12 3\n180 13 2\n190 14 2\n200 15 1\n210 16 1\n220 17 1\n230 18 1\n240 19 1\n250 20 1\n260 21 1\n270 22 1\n280 23 1\n290 24 1\n300 25 1\n310 26 1\n320 27 1\n330 28 1\n340 29 1\n350 30 1\n360 31 1\n370 32 1\n380 33 1\n390 34 1\n400 35 1\n410 36 1\n420 37 1\n430 38 1\n440 39 1\n450 40 1\n460 41 1\n470 42 1\n480 43 1\n490 44 1\n500 45 1\n510 46 1\n520 47 1\n530 48 1\n540 49 1\n550 50 1\n560 51 1\n570 52 1\n580 53 1\n590 54 1\n600 55 1\n610 56 1\n620 57 1\n630 58 1\n640 59 1\n650 60 1\n660 61 1\n670 62 1\n680 63 1\n690 64 1\n700 65 1\n710 66 1\n720 67 1\n730 68 1\n740 69 1\n750 70 1\n760 71 1\n770 72 1\n780 73 1\n790 74 1\n800 75 1\n810 76 1\n820 77 1\n830 78 1\n840 79 1\n850 80 1\n860 81 1\n870 82 1\n880 83 1\n890 84 1\n900 85 1\n910 86 1\n920 87 1\n930 88 1\n940 89 1\n950 90 1\n960 91 1\n970 92 1\n980 93 1\n990 94 1\n1000 95 1\n1010 96 1\n1020 97 1\n1030 98 1\n1040 99 1\n1050 100 1\n1060 101 1\n1070 102 1\n1080 103 1\n1090 104 1\n1100 105 1\n1120 106 1\n1130 107 1\n1140 108 1\n1150 109 1\n1160 110 1\n1170 111 1\n1180 112 1\n1190 113 1\n1200 114 1\n1210 115 1\n1220 116 1\n1230 117 1\n1240 118 1\n1250 119 1\n1260 120 1\n1270 121 1\n1280 122 1\n1290 123 1\n1300 124 1\n1310 125 1\n1320 126 1\n1330 127 1\n1340 128 1\n1350 129 1\n1360 130 1\n1370 131 1\n1380 132 1\n1390 133 1\n1400 134 1\n1410 135 1\n1420 136 1\n1430 137 1\n1440 138 1\n1450 139 1\n1460 140 1\n1470 141 1\n1480 142 1\n1490 143 1\n1500 144 1\n1510 145 1\n1520 146 1\n1530 147 1\n1540 148 1\n1550 149 1\n1560 150 1\n1570 151 1\n1580 152 1\n1590 153 1\n1600 154 1\n1610 155 1\n1620 156 1\n1630 157 1\n1640 158 1\n1650 159 1\n1660 160 1\n1670 161 1\n1680 162 1\n1690 163 1\n1700 164 1\n1710 165 1\n1720 166 1\n1730 167 1\n1740 168 1\n1750 169 1\n1760 170 1\n1770 171 1\n1780 172 1\n1790 173 1\n1800 174 1\n1810 175 1\n1820 176 1\n1830 177 1\n1840 178 1\n1850 179 1\n1860 180 1\n1870 181 1\n1880 182 1\n1890 183 1\n1900 184 1\n1910 185 1\n1920 186 1\n1930 187 1\n1940 188 1\n1950 189 1\n1960 190 1\n1970 191 1\n1980 192 1\n1990 193 1\n2000 194 1\n2010 195 1\n2020 196 1\n2030 197 1\n2040 198 1\n2050 199 1\n2060 200 1\n2070 201 1\n2080 202 1\n2090 203 1\n2100 204 1\n2120 205 1\n2130 206 1\n2140 207 1\n2150 208 1\n2160 209 1\n2170 210 1\n2180 211 1\n2190 212 1\n2200 213 1\n2210 214 1\n2220 215 1\n2230 216 1\n2240 217 1\n2250 218 1\n2260 219 1\n2270 220 1\n2280 221 1\n2290 222 1\n2300 223 1\n2310 224 1\n2320 225 1\n2330 226 1\n2340 227 1\n2350 228 1\n2360 229 1\n2370 230 1\n2380 231 1\n2390 232 1\n2400 233 1\n2410 234 1\n2420 235 1\n2430 236 1\n2440 237 1\n2450 238 1\n2460 239 1\n2470 240 1\n2480 241 1\n2490 242 1\n2500 243 1\n2510 244 1\n2520 245 1\n2530 246 1\n2540 247 1\n2550 248 1\n2560 249 1\n2570 250 1\n2580 251 1\n2590 252 1\n2600 253 1\n2610 254 1\n2620 255 1\n2630 256 1\n2640 257 1\n2650 258 1\n2660 259 1\n2670 260 1\n2680 261 1\n2690 262 1\n2700 263 1\n2710 264 1\n2720 265 1\n2730 266 1\n2740 267 1\n2750 268 1\n2760 269 1\n2770 270 1\n2780 271 1\n2790 272 1\n2800 273 1\n2810 274 1\n2820 275 1\n2830 276 1\n2840 277 1\n2850 278 1\n2860 279 1\n2870 280 1\n2880 281 1\n2890 282 1\n2900 283 1\n"
    },
    {
        "number": 3520,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"115.000000000\"\n\"\"\"\n"
    },
    {
        "number": 3520,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''100 3 10\n15 99 98\n40 3 2\n90 10 9''') == '115.000000000'\n'''\nassert solution('''100 3 10\n50 40 1\n90 10 9''') == '102.000000000'\nassert solution('''100 3 10\n100 4 1\n100 5 1\n50 40 1\n100 10 9''') == '102.000000000'\nassert solution('''100 3 10\n50 40 1\n90 10 9''') == '120.000000000'\nassert solution('''100 3 10\n50 40 1\n90 10 9''') == '102.000000000'\n"
    },
    {
        "number": 3520,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n'''\n\n'''\nUse DFS\nhttps://www.hackerrank.com/challenges/the-time-in-a-string/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=warmup\n'''"
    },
    {
        "number": 3520,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''100 3 10\n15 99 98\n40 3 2\n90 10 9''') == '115.000000000'\nassert solution('''100 3 10\n1 1 1\n3 1 1\n5 1 1\n7 1 1\n9 1 1\n11 1 1\n13 1 1\n15 1 1\n17 1 1\n19 1 1\n21 1 1\n23 1 1\n25 1 1\n27 1 1\n29 1 1\n31 1 1\n33 1 1\n35 1 1\n37 1 1\n39 1 1\n41 1 1\n43 1 1\n45 1 1\n47 1 1\n49 1 1\n51 1 1\n53 1 1\n55 1 1\n57 1 1\n59 1 1\n61 1 1\n63 1 1\n65 1 1\n67 1 1\n69 1 1\n71 1 1\n73 1 1\n75 1 1\n77 1 1\n79 1 1\n81 1 1\n83 1 1\n85 1 1\n87 1 1\n89 1 1\n91 1 1\n93 1 1\n95 1 1\n97 1 1\n99 1 1''') == '119.300000'\nassert solution('''100 3 10\n1 1 1\n3 1 1\n5 1 1\n7 1 1\n9 1 1\n11 1 1\n13 1 1\n15 1 1\n17 1 1\n19 1 1\n21 1 1\n23 1 1\n25 1 1\n27 1 1\n29 1 1\n31 1 1\n33 1 1\n35 1 1\n37 1 1\n39 1 1\n41 1 1\n43 1 1\n45 1 1\n47 1 1\n49 1 1\n51 1 1\n53 1 1\n55 1 1\n57 1 1\n59 1 1\n61 1 1\n63 1 1\n65 1 1\n67 1 1\n69 1 1\n71 1 1\n73 1 1\n75 1 1\n77 1 1\n79 1 1\n81 1 1\n83 1 1\n85 1 1\n87 1 1\n89 1 1\n91 1 1\n93 1 1\n95 1 1\n97 1 1\n99 1 1''') == '119.300000'\nassert solution('''100 3 10\n1 1 1\n3 1 1\n5 1 1\n7 1 1\n9 1 1\n11 1 1\n13 1 1\n15 1 1\n17 1 1\n19 1 1\n21 1 1\n23 1 1\n25 1 1\n27 1 1\n29 1 1\n31 1 1\n33 1 1\n35 1 1\n37 1 1\n39 1 1\n41 1 1\n43 1 1\n45 1 1\n47 1 1\n49 1 1\n51 1 1\n53 1 1\n55 1 1\n57 1 1\n59 1 1\n61 1 1\n63 1 1\n65 1 1\n67 1 1\n69 1 1\n71 1 1\n73 1 1\n75 1 1\n77 1 1\n79 1 1\n81 1 1\n83 1 1\n85 1 1\n87 1 1\n89 1 1\n91 1 1\n93 1 1\n95 1 1\n97 1 1\n99 1 1''') == '119.300000'\nassert solution('''100 3 10\n1 1 1\n3 1 1\n5 1 1\n7 1 1\n9 1 1\n11 1 1\n13 1 1\n15 1 1\n17 1 1\n19 1 1\n21 1 1\n23 1 1\n25 1 1\n27 1 1\n29 1 1\n31 1 1\n33 1 1\n35 1 1\n37 1 1\n39 1 1\n41 1 1\n43 1 1\n45 1 1\n47 1 1\n49 1 1\n51 1 1\n53 1 1\n55 1 1\n57 1 1\n59 1 1\n61 1 1\n63 1 1\n65 1 1\n67 1 1\n69 1 1\n71 1 1\n73 1 1\n75 1 1\n77 1 1\n79 1 1\n81 1 1\n83 1 1\n85 1 1\n87 1 1\n89 1 1\n91 1 1\n93 1 1\n95 1 1\n97 1 1\n99 1 1''') == '119.300000'\n"
    },
    {
        "number": 3520,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''100 3 10\n15 99 98\n40 3 2\n90 10 9''') == '115.000000000'\nassert solution('''100 3 10\n15 99 98\n40 3 2\n45 9 9\n60 2 2\n60 2 2\n80 1 2\n90 10 9''') == '118.3904999999999'\nassert solution('''100 3 10\n15 99 98\n40 3 2\n45 9 9\n60 2 2\n60 2 2\n80 1 2\n90 10 9''') == '118.3904999999998'\nassert solution('''100 3 10\n15 99 98\n40 3 2\n45 9 9\n60 2 2\n60 2 2\n80 1 2\n90 10 9\n100 5 100\n''') == '119.992499999'\n'''\n\nfrom sys import stdin"
    },
    {
        "number": 3520,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''100 3 10\n15 99 98\n40 3 2\n90 10 9''') == '115.000000000'\nassert solution('''100 3 10\n15 99 98\n40 3 2\n5 0 0\n40 3 2\n90 10 9''') == '55.000000000'\nassert solution('''100 3 10\n15 99 98\n40 3 2\n60 0 0\n60 3 2\n90 10 9''') == '20.000000000'\nassert solution('''100 3 10\n15 99 98\n40 3 2\n45 0 0\n45 3 2\n90 10 9''') == '-1.000000000'\n'''\n"
    },
    {
        "number": 3520,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"115.000000000\"\n\"\"\""
    },
    {
        "number": 3520,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n100 3 10\n15 99 98\n40 3 2\n90 10 9\n''') == '115.000000000'\nassert solution('''\n3 10 1\n1 1 1\n3 3 3\n2 4 5\n5 2 1\n5 2 2\n''') == '99.000000000'\n'''\n"
    },
    {
        "number": 3520,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"115.000000000\"\n\"\"\""
    },
    {
        "number": 3521,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n2\n100 1 1\n100 1 1.5\n''') == '199.500000'\nassert solution(\n'''\n2\n90 1 1\n100 1 1.5\n''') == '200.000000'\nassert solution(\n'''\n2\n100 1 0.2\n100 1 0.8\n''') == '199.500000'\nassert solution(\n'''\n2\n100 1 0.1\n100 1 0.9\n''') == '199.500000'\nassert solution(\n'''\n2\n100 1 0.01\n100 1 0.99\n''') == '199.500000'\n"
    },
    {
        "number": 3521,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0 100 1\") == \"199.5\"\nassert solution(\"0 100 1.5\") == \"199.5\"\nassert solution(\"0 100 1.2\") == \"199.49999\"\nassert solution(\"0 100 1.5 0\") == \"199.5\"\nassert solution(\"0 100 1.5 0 0\") == \"199.5\"\n"
    },
    {
        "number": 3521,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(open(\"test_cases/q7_test.txt\").read()) == '199.500000'\n\"\"\"\n"
    },
    {
        "number": 3521,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''100 1 1\n100 1 1.5''') == '199.5'\n'''\nassert solution('''100 1 1\n200 1 1.5''') == '99.0'\n'''\nassert solution('''100 1 1\n200 1 1.999''') == '99.5'\n'''\nassert solution('''100 1 1\n200 1 1.999\n''') == '99.5'\n'''\nassert solution('''100 1 1\n200 1 1.999\n''') == '99.5'\n'''\n"
    },
    {
        "number": 3521,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(test_input_1) == '199.500000'\nassert solution(test_input_2) == '220.00000'\nassert solution(test_input_3) == '198.750000'\nassert solution(test_input_4) == '196.500000'\nassert solution(test_input_5) == '99.500000'\n"
    },
    {
        "number": 3521,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1 1') == '199.500000'\nassert solution('100 1 1') == '199.500000'\nassert solution('100 1 1.5') == '199.500000'\nassert solution('2 2 1') == '499.500000'\nassert solution('2 2 1.5') == '499.500000'\n"
    },
    {
        "number": 3521,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n100 1 1\\n100 1 1.5') == '199.500000'\nassert solution('2\\n100 1 1\\n100 1 1.5') == '199.500000'\nassert solution('2\\n100 1 1\\n100 1 1.5\\n100 1 1.5') == '199.500000'\nassert solution('2\\n100 1 1\\n100 1 1.5\\n100 1 1.5\\n100 1 1.5') == '199.500000'\nassert solution('2\\n100 1 1\\n100 1 1.5\\n100 1 1.5\\n100 1 1.5\\n100 1 1.5') == '199.500000'\n"
    },
    {
        "number": 3521,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n1\n100 1 1\n100 1 1.5\n\"\"\"\n    ) == \"199.500000\"\n\nassert solution(\n\"\"\"\n2\n100 1 1\n100 1 1.5\n\"\"\"\n    ) == \"199.500000\"\n\nassert solution(\n\"\"\"\n3\n100 1 1\n100 1 1.5\n100 1 1.5\n\"\"\"\n    ) == \"199.500000\"\n\nassert solution(\n\"\"\"\n4\n100 1 1\n100 1 1.5\n100 1 1.5\n100 1 1.5\n\"\"\"\n    ) == \"199.500000\"\n\nassert solution(\n\"\"\"\n5\n100 1 1\n100 1 1.5\n100 1 1.5\n100 1 1.5\n100 1 1.5\n\"\"\"\n    ) == \"199.500000\""
    },
    {
        "number": 3521,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\\\n2\n100 1 1\n100 1 1.5\n''') == '199.500000'\n\nassert solution('''\\\n10\n10 1 1\n10 1 1.5\n''') == '200.00000'\n\nassert solution('''\\\n1\n1 1 1\n''') == '0.000000'\n\nassert solution('''\\\n2\n1000 1 1\n1000 1 1.5\n''') == '199.500000'\n\nassert solution('''\\\n100\n1 1 1\n100 1 1.5\n''') == '99.999999'"
    },
    {
        "number": 3521,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '199.500000'\n\"\"\"\n\nimport sys\nimport math"
    },
    {
        "number": 3522,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\n\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 3522,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == '1'\nassert solution(\"2 3\\n2 3 4 5 6 7 8 9 10 11 12\") == '1'\nassert solution(\"2 3\\n1 2 2 4 5 6 7 8 9 10 11 12\") == '1'\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == '1'\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == '1'\n"
    },
    {
        "number": 3522,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3522,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 3\n1 2 3 4 5 6 7 8 9 10 11 12''') == '1'\nassert solution('''3 4\n1 2 3 4 5 6 7 8 9 10 11 12''') == '3'\nassert solution('''3 5\n1 2 3 4 5 6 7 8 9 10 11 12''') == '2'\nassert solution('''1 2\n1 2 3 4 5 6 7 8 9 10 11 12''') == '0'\nassert solution('''8 6\n1 2 3 4 5 6 7 8 9 10 11 12''') == '3'\n''') == '3'\n"
    },
    {
        "number": 3522,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '1'\n\n\"\"\"\n\nfrom itertools import permutations\n\nn, k = map(int, input().split())\narr = [int(i) for i in input().split()]\n\nmax_diff = 10 ** 9\nfor perm in permutations(arr):\n    diff = abs(perm[0] - perm[1])\n    if diff > max_diff:\n        continue\n    if diff < max_diff:\n        max_diff = diff\n\nprint(max_diff)\n"
    },
    {
        "number": 3522,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"3 2\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"3 2\\n1 3 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"3 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"3\"\n"
    },
    {
        "number": 3522,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 3\n1 2 3 4 5 6 7 8 9 10 11 12''') == '1'\nassert solution('''3 3\n1 2 3 4 5 6 7 8 9 10 11 12''') == '0'\nassert solution('''5 3\n1 2 3 4 5 6 7 8 9 10 11 12''') == '0'\nassert solution('''4 3\n1 2 3 4 5 6 7 8 9 10 11 12''') == '0'\nassert solution('''5 5\n1 2 3 4 5 6 7 8 9 10 11 12''') == '0'\n"
    },
    {
        "number": 3522,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1'\nassert solution('1 2\\n1 2 3 4 5 6 7 8 9 10 11 12') == '0'\nassert solution('2 2\\n1 2\\n1 2') == '1'\nassert solution('2 2\\n2 2') == '0'\nassert solution('2 3\\n1 2 3 4 5 6 7 8 9 10 11 12') == '2'\n"
    },
    {
        "number": 3522,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\"\n\nassert stdin == '''2 3\n1 2 3 4 5 6 7 8 9 10 11 12'''\n"
    },
    {
        "number": 3522,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 3\n1 2 3 4 5 6 7 8 9 10 11 12''') == '1'\nassert solution('''2 3\n5 6 7 8 9 10 11 12''') == '1'\nassert solution('''2 3\n1 2 3 4 5 6 7 8 9 10 11 12''') == '1'\nassert solution('''3 4\n1 2 3 4 5 6 7 8 9 10 11 12''') == '1'\nassert solution('''3 4\n5 6 7 8 9 10 11 12''') == '1'\n"
    },
    {
        "number": 3523,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '5'\n"
    },
    {
        "number": 3523,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n4\n5\n5''') == '5'\nassert solution('''3\n1 2 1\n3 2 1\n''') == 'Impossible'\nassert solution('''10\n3\n2\n1\n''') == '3'\nassert solution('''15\n6\n2\n1\n''') == '3'\nassert solution('''5\n1\n2\n3\n4\n5\n''') == '2'\n"
    },
    {
        "number": 3523,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '1'\nassert solution('10') == '1'\nassert solution('25') == '1'\nassert solution('100') == '0'\n"
    },
    {
        "number": 3523,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'Impossible'\n'''"
    },
    {
        "number": 3523,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '5'\n\nassert solution(stdin) == 'Impossible'"
    },
    {
        "number": 3523,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('13\\n3 2 1 1') == \"5\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3523,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5') == 5\nassert solution('2 2 1 1') == 5\nassert solution('3 3 2 2') == Impossible\nassert solution('3 3 2 2') == 5\nassert solution('99 999 999') == 9\n"
    },
    {
        "number": 3523,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"5\"\n\n\"\"\"\nimport sys"
    },
    {
        "number": 3523,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n3\n3 2 1 1\n''') == 'Impossible'\nassert solution('''\n1\n1 1 1 1\n''') == 'Impossible'\nassert solution('''\n3\n2 2 1 1\n''') == '5'\nassert solution('''\n2\n2 2 1 1\n''') == '5'\nassert solution('''\n8\n2 2 1 1\n''') == '7'\n"
    },
    {
        "number": 3523,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"Impossible\"\nassert solution(\"2\") == \"Impossible\"\nassert solution(\"11\") == \"5\"\nassert solution(\"10\") == \"5\"\nassert solution(\"10 4 2 2\") == \"8\"\n"
    },
    {
        "number": 3524,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('aabcad') == 'yes'\nassert solution('aba') == 'no'\nassert solution('acd') == 'yes'\nassert solution('cdd') == 'yes'\nassert solution('ccc') == 'no'\n"
    },
    {
        "number": 3524,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"yes\"\nassert solution(\"acd\") == \"no\"\nassert solution(\"z\") == \"no\"\nassert solution(\"az\") == \"yes\"\n"
    },
    {
        "number": 3524,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"aabcad\"\"\"\n) == \"yes\"\nassert solution(\n\"\"\"aba\"\"\"\n) == \"yes\"\nassert solution(\n\"\"\"acd\"\"\"\n) == \"no\"\nassert solution(\n\"\"\"aabcad\"\"\"\n) == \"yes\"\nassert solution(\n\"\"\"abacad\"\"\"\n) == \"no\"\n"
    },
    {
        "number": 3524,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('aabcad') == 'yes'\nassert solution('aba') == 'yes'\nassert solution('acd') == 'yes'\nassert solution('adad') == 'no'\nassert solution('abcd') == 'yes'\n"
    },
    {
        "number": 3524,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(solution(\"aabcad\")) == \"yes\"\nassert solution(solution(\"aba\")) == \"yes\"\nassert solution(solution(\"acd\")) == \"yes\"\nassert solution(solution(\"abc\")) == \"no\"\nassert solution(solution(\"abcd\")) == \"yes\"\n"
    },
    {
        "number": 3524,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 'no'\nassert solution('aabcad') == 'yes'\nassert solution('aba') == 'yes'\nassert solution('acd') == 'yes'\nassert solution('ab') == 'no'\n"
    },
    {
        "number": 3524,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\nimport sys\n\nprint(sys.argv)\n"
    },
    {
        "number": 3524,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('aabcad') == 'yes'\nassert solution('aba') == 'yes'\nassert solution('acd') == 'yes'\nassert solution('abc') == 'no'\nassert solution('abcd') == 'no'\n"
    },
    {
        "number": 3524,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('aabcad') == 'yes'\nassert solution('aabcad') == 'yes'\nassert solution('abcd') == 'no'\nassert solution('abcdd') == 'no'\nassert solution('abcde') == 'no'\n"
    },
    {
        "number": 3524,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == \"yes\"\n"
    },
    {
        "number": 3525,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\\n') == '5'\nassert solution('3 4 2\\n1 2 1\\n3 1 3\\n2 1 3\\n2 3 2\\n3 2 1\\n') == '2'\nassert solution('2 2 1\\n2 1 2\\n1 1 2\\n1 2 1\\n') == '4'\nassert solution('3 3 1\\n1 1 1\\n1 2 1\\n2 1 1\\n2 1 3\\n1 2 3\\n') == '0'\nassert solution('2 2 2\\n2 1 3\\n3 2 2\\n2 2 2\\n2 1 3\\n2 1 3\\n1 1 1\\n1 2 2\\n1 2 3\\n2 1 1\\n2 1 3\\n2 1 3\\n2 1 3\\n2 2 1\\n2 1 2\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\n2 1 3\\"
    },
    {
        "number": 3525,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9''') == '5'\nassert solution('''4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n1 2 3 4\n3 2 4 5\n2 1 2 3''') == '5'\nassert solution('''4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n1 2 3 4\n3 2 4 5\n2 1 2 3''') == '5'\nassert solution('''3 2\n1 2\n1 2 3''') == '3'\nassert solution('''3 2\n1 2\n1 2 3''') == '3'\n"
    },
    {
        "number": 3525,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n\"\"\") == \"5\"\nassert solution(\n\"\"\"4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n\"\"\") == \"5\"\nassert solution(\n\"\"\"4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n1 3 8 7\n\"\"\") == \"6\"\nassert solution(\n\"\"\"2 2 2\n1 1 1\n\"\"\") == \"2\"\nassert solution(\n\"\"\"2 2 2\n2 1 2\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3525,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9''') == '5'\nassert solution('''4 5 10\n2 2\n1 1 3\n2 1 5\n2 4 6\n1 3 1 7\n3 1 1 8\n3 2 7 9\n2 1 5 8''') == '3'\n'''"
    },
    {
        "number": 3525,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"5\"\n\n>>> solution(test_input)\n'5'\n\n>>> solution(test_input2)\n'5'\n\n>>> solution(test_input3)\n'2'\n\n>>> solution(test_input4)\n'2'\n\n>>> solution(test_input5)\n'4'\n\n>>> solution(test_input6)\n'3'\n\n>>> solution(test_input7)\n'2'\n\n>>> solution(test_input8)\n'3'\n\n>>> solution(test_input9)\n'1'\n\n>>> solution(test_input10)\n'5'\n\n>>> solution(test_input11)\n'1'\n\n>>> solution(test_input12)\n'3'\n\n>>> solution(test_input13)\n'2'\n\n>>> solution(test_input14)\n'3'\n\n>>> solution(test_input15)\n'2'\n\n>>> solution(test_input16)\n'4'\n\n>>> solution(test_input17)\n'3'\n\n>>> solution(test_input18)\n'2'\n\n>>> solution(test_input19)\n'4'\n\n>>> solution(test_input20)\n'2'\n\n>>> solution(test_input21)\n'5'\n\n>>> solution(test_input22)\n'2'\n\n>>> solution(test_input23)\n'3'\n\n>>> solution(test_input24)\n'2'\n\n>>> solution(test_input25)\n'3'\n\n>>> solution(test_input26)\n'2'\n\n>>> solution(test_input27)\n'4'\n\n>>> solution(test_input28)\n'2'\n\n>>> solution(test_input29)\n'3'\n\n>>> solution(test_input30)\n'2'\n\n>>> solution(test_input31)\n'4'\n\n>>> solution(test_input32)\n'2'\n\n>>> solution(test_input33)\n'4'\n\n>>> solution(test_input34)\n'2'\n\n>>> solution(test_input35)\n'5'\n\n>>> solution(test_input36)\n'1'\n\n>>> solution(test_input37)\n'3'\n\n>>> solution(test_input38)\n'3'\n\n>>> solution(test_input39)\n'4'\n\n>>> solution(test_input40)\n'2'\n\n>>> solution(test_input41)\n'5'\n\n>>> solution(test_input42)\n'3'\n\n>>> solution(test_input43)\n'2'\n\n>>> solution(test_input44)\n'4'\n\n>>> solution(test_input45)\n'2'\n\n>>> solution(test_input46)\n'4'\n\n>>> solution(test_input47)\n'2'\n\n>>> solution(test_input48)\n'5'\n\n>>> solution(test_input49)\n'2'\n\n>>> solution(test_input50)\n'3'\n\n>>> solution(test_input51)\n'2'\n\n>>> solution(test_input52)\n'3'\n\n>>> solution(test_input53)\n'5'\n\n>>> solution(test_input54)\n'2'\n\n>>> solution(test_input55)\n'4'\n\n>>> solution(test_input56)\n'2'\n\n>>> solution(test_input57)\n'3'\n\n>>> solution(test_input58)\n'2'\n\n>>> solution(test_input59)\n'4'\n\n>>> solution(test_input60)\n'2'\n\n>>> solution(test_input61)\n'4'\n\n>>> solution(test_input62)\n'2'\n\n>>> solution(test_input63)\n'3'\n\n>>> solution(test_input64)\n'2'\n\n>>> solution(test_input65)\n'5'\n\n>>> solution(test_input66)\n'3'\n\n>>> solution(test_input67)\n'2'\n\n>>> solution(test_input68)\n'4'\n\n>>> solution(test_input69)\n'2'\n\n>>> solution(test_input70)\n'5'\n\n>>> solution(test_input71)\n'2'\n\n>>> solution(test_input72)\n'4'\n\n>>> solution(test_input73)\n'2'\n\n>>> solution(test_input74)\n'4'\n\n>>> solution(test_input75)\n'2'\n\n>>> solution(test_input76)\n'4'\n\n>>> solution(test_input77)\n'2'\n\n>>> solution(test_input78)\n'5'\n\n>>> solution(test_input79)\n'2'\n\n>>> solution(test_input80)\n'4'\n\n>>> solution(test_input81)\n'2'\n\n>>> solution(test_input82)\n'5'\n\n>>> solution(test_input83)\n'2'\n\n>>> solution(test_input84)\n'4'\n\n>>> solution(test_input85)\n'2'\n\n>>> solution(test_input86)\n'5'\n\n>>> solution(test_input87)\n'2'\n\n>>> solution(test_input88)\n'4'\n\n>>> solution(test_input89)\n'2'\n\n>>> solution(test_input90)\n'5'\n\n>>> solution(test_input91)\n'2'\n\n>>> solution(test_input92)\n'4'\n\n>>> solution(test_input93)\n'2'\n\n>>> solution(test_input94)\n'5'"
    },
    {
        "number": 3525,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\") == \"5\"\nassert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\") == \"5\"\nassert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\"\nassert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\\n5 7 6 4\") == \"5\"\nassert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\\n5 7 6 4\\n1 4 3 2\") == \"5\"\n"
    },
    {
        "number": 3525,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9''') == '5'\nassert solution('''4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n3 3 4 7\n2 3 5 8\n2 3 6 7\n1 3 4 7''') == '8'\nassert solution('''5 2 5\n2 1 1 1 1\n2 3 2 3 2\n1 4 3 3 4\n2 4 3 5\n1 2 4 2''') == '0'\nassert solution('''4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n3 3 4 7\n2 3 5 8\n2 3 6 7\n1 3 4 7''') == '8'\n'''\n'''\n"
    },
    {
        "number": 3525,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(open(\"test_input_1.txt\").read()) == \"5\"\nassert solution(open(\"test_input_2.txt\").read()) == \"7\"\nassert solution(open(\"test_input_3.txt\").read()) == \"9\"\nassert solution(open(\"test_input_4.txt\").read()) == \"5\"\nassert solution(open(\"test_input_5.txt\").read()) == \"3\"\n"
    },
    {
        "number": 3525,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 2 10\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\") == \"5\"\nassert solution(\"2 2 5\\n1 2 3\\n3 4 5\\n2 4 1\") == \"5\"\nassert solution(\"3 3 9\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\") == \"2\"\nassert solution(\"2 3 5\\n1 2 3\\n3 4 5\\n2 4 1\") == \"3\"\nassert solution(\"3 3 9\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\") == \"3\"\n"
    },
    {
        "number": 3525,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"5\""
    },
    {
        "number": 3526,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == output\n'''\n\nn, m = [int(x) for x in stdin.readline().split()]\n\ncount = 0\nfor _ in range(m):\n    l, r = [int(x) for x in stdin.readline().split()]\n    if stdin.readline() == 'all answers in the range are the same\\n':\n        count += (l+1) * (r+1) - (l*(l+1)) // 2\n    else:\n        count += (r+1) - l\n\nprint(count % (10**9+7))\n"
    },
    {
        "number": 3526,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 2\n2 4 same\n3 5 same''') == \"4\"\nassert solution('''5 2\n2 4 same\n3 5 same''') == \"4\"\nassert solution('''1 1\n1 1''') == \"0\"\nassert solution('''2 2\n1 1\n2 2''') == \"2\"\nassert solution('''2 2\n1 1\n2 2''') == \"2\"\n"
    },
    {
        "number": 3526,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 2\n2 4 same\n3 5 same''') == '4'\nassert solution('''10 4\n1 4 same\n2 5 same\n3 5 same\n4 5 same\n5 6 same\n6 7 same\n7 8 same\n8 9 same\n9 10 same\n10 11 same\nSample Input:\n5 3\n1 3 same\n2 3 same\n3 4 same\n4 5 same\nSample Output:\n6\n"
    },
    {
        "number": 3526,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 2\n2 4 same\n3 5 same''') == '4'\nassert solution('''5 2\n2 4 same\n3 5 same\n2 3 same\n2 4 same\n2 5 same\n2 6 same\n3 6 same\n3 4 same\n4 4 same''') == '0'\nassert solution('''5 2\n2 4 same\n3 5 same\n2 3 same\n2 4 same\n2 5 same\n2 6 same\n3 6 same\n3 4 same\n4 4 same\n5 4 same''') == '2'\nassert solution('''3 2\n2 1 same\n2 2 same\n3 3 same\n1 2 same\n1 3 same\n2 3 same\n2 3 same''') == '2'\nassert solution('''4 1\n1 2 same\n2 3 same\n2 4 same\n3 4 same\n1 3 same\n2 4 same\n2 4 same''') == '3'\n"
    },
    {
        "number": 3526,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 2\n2 4 same\n3 5 same''') == '4'\nassert solution('''5 2\n2 4 same\n3 5 same''') == '4'\nassert solution('''5 2\n2 4 same\n3 5 same''') == '4'\nassert solution('''5 2\n2 4 same\n3 5 same''') == '4'\nassert solution('''5 2\n2 4 same\n3 5 same''') == '4'\n"
    },
    {
        "number": 3526,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 2\n2 4 same\n3 5 same''') == '4'\nassert solution('''5 2\n2 4 same\n3 5 same\n1 1 same''') == '0'\nassert solution('''5 2\n2 4 same\n3 5 same\n2 2 same''') == '0'\nassert solution('''5 2\n2 4 same\n3 5 same\n1 1 same\n2 2 same''') == '0'\nassert solution('''5 2\n2 4 same\n3 5 same\n2 2 same\n1 1 same''') == '0'\n"
    },
    {
        "number": 3526,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3') == '8'\nassert solution('1 1') == '0'\nassert solution('2 2') == '2'\nassert solution('1 2') == '4'\nassert solution('3 1') == '4'\n"
    },
    {
        "number": 3526,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"4\"\n\nsolution('''5 2\n2 4 same\n3 5 same\n''') == \"4\"\n\nsolution('''4 3\n1 2 same\n1 3 same\n2 4 same\n3 4 same\n''') == \"0\"\n\nsolution('''5 4\n1 2 same\n1 3 same\n2 4 same\n3 4 same\n''') == \"3\"\n\nsolution('''5 5\n1 2 same\n1 3 same\n2 4 same\n3 4 same\n''') == \"0\"\n'''\n"
    },
    {
        "number": 3526,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"4\"\n\"\"\"\n"
    },
    {
        "number": 3526,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1 1 1 1') == 4\nassert solution('2 1 1 1 1') == 1\nassert solution('1 2 1 1 1') == 3\nassert solution('2 2 1 1 1') == 2\nassert solution('2 1 1 1 1') == 2\n"
    },
    {
        "number": 3527,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 5\\n0 1\\n0 2') == '3'\nassert solution('4 1\\n0 1\\n0 2\\n0 3\\n3 4') == '1'\nassert solution('4 1\\n0 1\\n0 2\\n0 3\\n0 4\\n4 5\\n5 6\\n6 7') == '0'\n"
    },
    {
        "number": 3527,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6 4\n0 1\n0 2\n3 4\n3 5''') == '3'\nassert solution('''2 2\n1 2\n0 2\n2 1\n2 0\n1 1\n1 0''') == '0'\nassert solution('''6 3\n0 1\n0 2\n0 3\n1 2\n1 3\n1 4\n1 5''') == '0'\nassert solution('''8 3\n0 1\n0 2\n0 3\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n5 6\n5 7\n''') == '3'\nassert solution('''13 5\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n0 8\n0 9\n0 10\n0 11\n0 12\n0 13\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n2 11\n2 12\n2 13\n2 14\n3 8\n3 9\n3 10\n3 11\n3 12\n3 13\n3 14\n3 15\n4 11\n4 12\n4 13\n4 14\n4 15\n4 16\n5 10\n5 11\n5 12\n5 13\n5 14\n5 15\n5 16\n6 12\n6 13\n6 14\n6 15\n6 16\n6 17\n7 15\n7 16\n7 17\n8 13\n8 14\n8 15\n8 16\n8 17\n9 17\n9 18\n10 18\n11 17\n11 18\n12 17\n12 18\n13 16\n13 17\n13 18\n13 19\n14 19\n14 16\n14 17\n14 18\n14 19\n15 16\n15 17\n15 18\n15 19\n16 19\n16 17\n16 18\n16 19\n16 20\n17 18\n17 19\n17 20\n17 21\n18 19\n18 20\n18 21\n18 22\n19 22\n19 21\n19 20\n19 19\n19 18\n19 17\n19 16\n19 15\n19 14\n19 13\n19 12\n19 11\n19 10\n19 9\n19 8\n19 7\n19 6\n19 5\n19 4\n19 3\n19 2\n19 1\n0 19\n1 18\n2 17\n3 16\n4 15\n5 14\n6 13\n7 12\n8 11\n9 10\n10 9\n10 8\n10 7\n10 6\n10 5\n10 4\n10 3\n10 2\n10 1\n11 20\n12 19\n13 18\n14 17\n15 16\n16 15\n16 14\n16 13\n16 12\n16 11\n16 10\n16 9\n16 8\n16 7\n16 6\n16 5\n16 4\n16 3\n16 2\n16 1\n17 17\n18 16\n19 15\n20 14\n21 13\n22 12\n23 11\n24 10\n25 9\n26 8\n27 7\n28 6\n29 5\n30 4\n31 3\n32 2\n33 1\n34 34\n35 33\n36 32\n37 31\n38 30\n39 29\n40 28\n41 27\n42 26\n43 25\n44 24\n45 23\n46 22\n47 21\n48 20\n49 19\n50 18\n51 17\n52 16\n53 15\n54 14\n55 13\n56 12\n57 11\n58 10\n59 9\n60 8\n61 7\n62 6\n63 5\n64 4\n65 3\n66 2\n67 1\n68 1\n69 2\n70 3\n71 4\n72 5\n73 6\n74 7\n75 8\n76 9\n77 10\n78 11\n79 12\n80 13\n81 14\n82 15\n83 16\n84 17\n85 18\n86 19\n87 20\n88 21\n89 22\n90 23\n91 24\n92 25\n93 26\n94 27\n95 28\n96 29\n97 30\n98 31\n99 32\n100 33\n101 34\n102 35\n103 36\n104 37\n105 38\n106 39\n107 40\n108 41\n109 42\n110 43\n111 44\n112 45\n113 46\n114 47\n115 48\n116 49\n117 50\n118 51\n119 52\n120 53\n121 54\n122 55\n123 56\n124 57\n125 58\n126 59\n127 60\n128 61\n129 62\n130 63\n131 64\n132 65\n133 66\n134 67\n135 68\n136 69\n137 70\n138 71\n139 72\n140 73\n141 74\n142 75\n143 76\n144 77\n145 78\n146 79\n147 80\n148 81\n149 82\n150 83\n151 84\n152 85\n153 86\n154 87\n155 88\n156 89\n157 90\n158 91\n159 92\n160 93\n161 94\n162 95\n163 96\n164 97\n165 98\n166 99\n167 100\n168 101\n169 102\n170 103\n171 104\n172 105\n173 106\n174 107\n175 108\n176 109\n177 110\n178 111\n179 112\n180 113\n181 114\n182 115\n183 116\n184 117\n185 118\n186 119\n187 120\n188 121\n189 122\n190 123\n191 124\n192 125\n193 126\n194 127\n195 128\n196 129\n197 130\n198 131\n199 132\n200 133\n201 134\n202 135\n203 136\n204 137\n205 138\n206 139\n207 140\n208 141\n209 142\n210 143\n211 144\n212 145\n213 146\n214 147\n215 148\n216 149\n217 150\n218 151\n219 152\n220 153\n221 154\n222 155\n223 156\n224 157\n225 158\n226 159\n227 160\n228 161\n229 162\n230 163\n231 164\n232 165\n233 166\n234 167\n235 168\n236 169\n237 170\n238 171\n239 172\n240 173\n241 174\n242 175\n243 176\n244 177\n245 178\n246 179\n247 180\n248 181\n249 182\n250 183\n251 184\n252 185\n253 186\n254 187\n255 188\n256 189\n257 190\n258 191\n259 192\n260 193\n261 194\n262 195\n263 196\n264 197\n265 198\n266 199\n267 200\n268 201\n269 202\n270 203\n271 204\n272 205\n273 206\n274 207\n275 208\n276 209\n277 210\n278 211\n279 212\n280 213\n281 214\n282 215\n283 216\n284 217\n285 218\n286 219\n287 220\n288 221\n289 222\n290 223\n291 224\n292 225\n293 226\n294 227\n295 228\n296 229\n297 230\n298 231\n299 232\n300 233\n301 234\n302 235\n303 236\n304 237\n305 238\n306 239\n307 240\n308 241\n309 242\n310 243\n311 244\n312 245\n313 246\n314 247\n315 248\n316 249\n317 250\n318 251\n319 252\n320 253\n321 254\n322 255\n323 256\n324 257\n325 258\n326 259\n327 260\n328 261\n329 262\n330 263\n331 264\n332 265\n333 266\n334 267\n335 268\n336 269\n337 270\n338 271\n339 272\n340 273\n341 274\n342 275\n343 276\n344 277\n345 278\n346 279\n347 280\n348 281\n349 282"
    },
    {
        "number": 3527,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n4 3\n0 1\n0 2\n3 4\n3 5\n''') == '3'\nassert solution('''\n6 4\n0 1\n0 2\n3 4\n3 5\n0 0\n0 1\n''') == '5'\nassert solution('''\n4 4\n0 1\n1 2\n2 3\n3 4\n''') == '4'\nassert solution('''\n4 4\n0 1\n0 2\n1 2\n1 3\n1 4\n1 5\n0 0\n''') == '3'\nassert solution('''\n8 7\n0 1\n0 2\n2 3\n3 4\n3 5\n3 6\n4 5\n0 0\n0 1\n''') == '2'\n"
    },
    {
        "number": 3527,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"0 1\n0 2\n3 4\n3 5\"\"\") == \"3\"\nassert solution(\"\"\"1 1\n1 2\n1 3\n2 3\"\"\") == \"2\"\nassert solution(\"\"\"0 1\n0 2\n1 3\n2 4\n1 5\"\"\") == \"0\"\nassert solution(\"\"\"0 1\n0 2\n3 4\n3 5\n3 7\"\"\") == \"1\"\nassert solution(\"\"\"0 1\n0 2\n1 3\n1 4\n1 5\n1 7\n2 3\n2 4\n2 5\n2 7\n3 4\n3 5\n3 7\n3 8\n3 9\"\"\") == \"0\"\n"
    },
    {
        "number": 3527,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6 4\n0 1\n0 2\n3 4\n3 5''') == '3'\nassert solution('''1 5\n0 1\n1 2\n2 3\n2 4\n3 4''') == '3'\nassert solution('''1 5\n2 4\n0 3\n0 4\n1 4\n0 5''') == '3'\nassert solution('''1 5\n2 4\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n1 30\n1 31\n1 32\n1 33\n1 34\n1 35\n1 36\n1 37\n1 38\n1 39\n1 40\n1 41\n1 42\n1 43\n1 44\n1 45\n1 46\n1 47\n1 48\n1 49\n1 50\n1 51\n1 52\n1 53\n1 54\n1 55\n1 56\n1 57\n1 58\n1 59\n1 60\n1 61\n1 62\n1 63\n1 64\n1 65\n1 66\n1 67\n1 68\n1 69\n1 70\n1 71\n1 72\n1 73\n1 74\n1 75\n1 76\n1 77\n1 78\n1 79\n1 80\n1 81\n1 82\n1 83\n1 84\n1 85\n1 86\n1 87\n1 88\n1 89\n1 90\n1 91\n1 92\n1 93\n1 94\n1 95\n1 96\n1 97\n1 98\n1 99\n1 100\n1 101\n1 102\n1 103\n1 104\n1 105\n1 106\n1 107\n1 108\n1 109\n1 110\n1 111\n1 112\n1 113\n1 114\n1 115\n1 116\n1 117\n1 118\n1 119\n1 120\n1 121\n1 122\n1 123\n1 124\n1 125\n1 126\n1 127\n1 128\n1 129\n1 130\n1 131\n1 132\n1 133\n1 134\n1 135\n1 136\n1 137\n1 138\n1 139\n1 140\n1 141\n1 142\n1 143\n1 144\n1 145\n1 146\n1 147\n1 148\n1 149\n1 150\n1 151\n1 152\n1 153\n1 154\n1 155\n1 156\n1 157\n1 158\n1 159\n1 160\n1 161\n1 162\n1 163\n1 164\n1 165\n1 166\n1 167\n1 168\n1 169\n1 170\n1 171\n1 172\n1 173\n1 174\n1 175\n1 176\n1 177\n1 178\n1 179\n1 180\n1 181\n1 182\n1 183\n1 184\n1 185\n1 186\n1 187\n1 188\n1 189\n1 190\n1 191\n1 192\n1 193\n1 194\n1 195\n1 196\n1 197\n1 198\n1 199\n1 200\n1 201\n1 202\n1 203\n1 204\n1 205\n1 206\n1 207\n1 208\n1 209\n1 210\n1 211\n1 212\n1 213\n1 214\n1 215\n1 216\n1 217\n1 218\n1 219\n1 220\n1 221\n1 222\n1 223\n1 224\n1 225\n1 226\n1 227\n1 228\n1 229\n1 230\n1 231\n1 232\n1 233\n1 234\n1 235\n1 236\n1 237\n1 238\n1 239\n1 240\n1 241\n1 242\n1 243\n1 244\n1 245\n1 246\n1 247\n1 248\n1 249\n1 250\n1 251\n1 252\n1 253\n1 254\n1 255\n1 256\n1 257\n1 258\n1 259\n1 260\n1 261\n1 262\n1 263\n1 264\n1 265\n1 266\n1 267\n1 268\n1 269\n1 270\n1 271\n1 272\n1 273\n1 274\n1 275\n1 276\n1 277\n1 278\n1 279\n1 280\n1 281\n1 282\n1 283\n1 284\n1 285\n1 286\n1 287\n1 288\n1 289\n1 290\n1 291\n1 292\n1 293\n1 294\n1 295\n1 296\n1 297\n1 298\n1 299\n1 300\n1 301\n1 302\n1 303\n1 304\n1 305\n1 306\n1 307\n1 308\n1 309\n1 310\n1 311\n1 312\n1 313\n1 314\n1 315\n1 316\n1 317\n1 318\n1 319\n1 320\n1 321\n1 322\n1 323\n1 324\n1 325\n1 326\n1 327\n1 328\n1 329\n1 330\n1 331\n1 332\n1 333\n1 334\n1 335\n1 336\n1 337\n1 338\n1 339\n1 340\n1 341\n1 342\n1 343\n1 344\n1 345\n1 346\n1 347\n1 348\n1 349\n1 350\n1 351\n1 352\n1 353\n1 354\n1 355\n1 356\n1 357\n1 358\n1 359\n1 360\n1 361\n1 362\n1 363\n1 364\n1 365\n1 366\n1 367\n1 368\n1 369\n1 370\n1 371\n1 372\n1 373\n1 374\n1 375\n1 376\n1 377\n1 378\n1 379\n1 380\n1 381\n1 382\n1 383\n1 384\n1 385\n1 386\n1 387\n1 388\n1 389\n1 390\n1 391\n1 392\n1 393\n1 394\n1 395\n1 396\n1 397\n1 398\n1 399\n1 400\n1 401\n1 402\n1 403\n1 404\n1 405\n1 406\n1 407\n1 408\n1 409\n1 410\n1 411\n1 412\n1 413\n1 414\n1 415\n1 416\n1 417\n1 418\n1 419\n1 420\n1 421\n1 422\n1 423\n1 424\n1 425\n1 426\n1 427\n1 428\n1 429\n1 430\n1 431\n1 432\n1 433\n1 434\n1 435\n1 436\n1 437\n1 438\n1 439\n1 440\n1 441\n1 442\n1 443\n1 444\n1 445\n1 446\n1 447\n1 448\n1 449\n1 450\n1 451\n1 452\n1 453\n1 454\n1 455\n1 456\n1 457\n1 458\n1 459\n1 460\n1 461\n1 462\n1 463\n1 464\n1 465\n1 466\n1 467\n1 468\n1 469\n1 470\n1 471\n1 472\n1 473\n1 474\n1 475\n1 476\n1 477\n1 478\n1 479\n1 480\n1 481\n1 482\n1 483\n1 484\n1 485\n1 486\n1 487\n1 488\n1 489\n1 490\n1 491\n1 492\n1 493\n1 494\n1 495\n1 496\n1 497\n1 498\n1 499\n1 500\n1"
    },
    {
        "number": 3527,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n5 4\n0 1\n0 2\n3 4\n3 5\n0 1\n0 2\n3 4\n3 5\n0 1\n0 2\n3 4\n3 5\n''') == '3'\nassert solution('''\n5 4\n0 1\n0 2\n3 4\n3 5\n0 1\n0 2\n3 4\n3 5\n0 1\n0 2\n3 4\n3 5\n''') == '1'\nassert solution('''\n5 5\n0 1\n0 2\n3 4\n3 5\n0 1\n0 2\n3 4\n3 5\n0 1\n0 2\n3 4\n3 5\n''') == '3'\nassert solution('''\n5 5\n0 1\n0 2\n3 4\n3 5\n0 1\n0 2\n3 4\n3 5\n0 1\n0 2\n3 4\n3 5\n''') == '1'\nassert solution('''\n5 4\n0 1\n0 2\n3 4\n3 5\n0 1\n0 2\n3 4\n3 5\n0 1\n0 2\n3 4\n3 5\n''') == '3'\n"
    },
    {
        "number": 3527,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == '0'\nassert solution('0 0') == '0'\nassert solution('0 1') == '1'\nassert solution('0 2') == '1'\nassert solution('1 0') == '1'\n"
    },
    {
        "number": 3527,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '3'"
    },
    {
        "number": 3527,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0\n1\n2\n3\n4\n5\n6''') == 3\nassert solution('''0\n1\n0\n1\n2\n3\n4\n5\n6\n7\n8''') == 4\nassert solution('''0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10''') == 4\nassert solution('''0\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10''') == 4\nassert solution('''0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0''') == 1\n"
    },
    {
        "number": 3527,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3\"\nprint(solution(stdin))\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 3528,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"5\n1 4\n2 2\n4 1\n3 5\n5 3\nLUR\"\"\") == \"\"\"9.0\n6.5\n2.5\"\"\"\n"
    },
    {
        "number": 3528,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\") == '9.0\\n6.5\\n2.5'\nassert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nURD\") == '9.0\\n6.5\\n2.5'\nassert solution(\"3\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\") == '9.0\\n6.5\\n2.5'\nassert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\") == '9.0\\n6.5\\n2.5'\nassert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\") == '9.0\\n6.5\\n2.5'\n"
    },
    {
        "number": 3528,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"5\n1 4\n2 2\n4 1\n3 5\n5 3\nLUR\"\"\"\n) == \"9.0\\n6.5\\n2.5\"\nprint(solution(input()))\n"
    },
    {
        "number": 3528,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0\\n' +\n                '1 0\\n' +\n                '1 1\\n' +\n                '1 1\\n' +\n                '1 1\\n' +\n                '2 0\\n' +\n                '2 1\\n' +\n                '2 1\\n' +\n                '2 1\\n' +\n                '3 0\\n' +\n                '3 1\\n' +\n                '3 1\\n' +\n                '3 1\\n' +\n                '4 0\\n' +\n                '4 1\\n' +\n                '4 1\\n' +\n                '4 1\\n' +\n                '5 0\\n' +\n                '5 1\\n' +\n                '5 1\\n' +\n                '5 1\\n' +\n                '6 0\\n' +\n                '6 1\\n' +\n                '6 1\\n' +\n                '6 1\\n' +\n                '7 0\\n' +\n                '7 1\\n' +\n                '7 1\\n' +\n                '7 1\\n' +\n                '8 0\\n' +\n                '8 1\\n' +\n                '8 1\\n' +\n                '8 1\\n' +\n                '9 0\\n' +\n                '9 1\\n' +\n                '9 1\\n' +\n                '9 1\\n' +\n                '10 0\\n' +\n                '10 1\\n' +\n                '10 1\\n' +\n                '10 1\\n' +\n                '11 0\\n' +\n                '11 1\\n' +\n                '11 1\\n' +\n                '11 1\\n' +\n                '12 0\\n' +\n                '12 1\\n' +\n                '12 1\\n' +\n                '12 1\\n' +\n                '13 0\\n' +\n                '13 1\\n' +\n                '13 1\\n' +\n                '13 1\\n' +\n                '14 0\\n' +\n                '14 1\\n' +\n                '14 1\\n' +\n                '14 1\\n' +\n                '15 0\\n' +\n                '15 1\\n' +\n                '15 1\\n' +\n                '15 1\\n' +\n                '16 0\\n' +\n                '16 1\\n' +\n                '16 1\\n' +\n                '16 1\\n' +\n                '17 0\\n' +\n                '17 1\\n' +\n                '17 1\\n' +\n                '17 1\\n' +\n                '18 0\\n' +\n                '18 1\\n' +\n                '18 1\\n' +\n                '18 1\\n' +\n                '19 0\\n' +\n                '19 1\\n' +\n                '19 1\\n' +\n                '19 1\\n' +\n                '20 0\\n' +\n                '20 1\\n' +\n                '20 1\\n' +\n                '20 1\\n' +\n                '21 0\\n' +\n                '21 1\\n' +\n                '21 1\\n' +\n                '21 1\\n' +\n                '22 0\\n' +\n                '22 1\\n' +\n                '22 1\\n' +\n                '22 1\\n' +\n                '23 0\\n' +\n                '23 1\\n' +\n                '23 1\\n' +\n                '23 1\\n' +\n                '24 0\\n' +\n                '24 1\\n' +\n                '24 1\\n' +\n                '24 1\\n' +\n                '25 0\\n' +\n                '25 1\\n' +\n                '25 1\\n' +\n                '25 1\\n' +\n                '26 0\\n' +\n                '26 1\\n' +\n                '26 1\\n' +\n                '26 1\\n' +\n                '27 0\\n' +\n                '27 1\\n' +\n                '27 1\\n' +\n                '27 1\\n' +\n                '28 0\\n' +\n                '28 1\\n' +\n                '28 1\\n' +\n                '28 1\\n' +\n                '29 0\\n' +\n                '29 1\\n' +\n                '29 1\\n' +\n                '29 1\\n' +\n                '30 0\\n' +\n                '30 1\\n' +\n                '30 1\\n' +\n                '30 1\\n' +\n                '31 0\\n' +\n                '31 1\\n' +\n                '31 1\\n' +\n                '31 1\\n' +\n                '32 0\\n' +\n                '32 1\\n' +\n                '32 1\\n' +\n                '32 1\\n' +\n                '33 0\\n' +\n                '33 1\\n' +\n                '33 1\\n' +\n                '33 1\\n' +\n                '34 0\\n' +\n                '34 1\\n' +\n                '34 1\\n' +\n                '34 1\\n' +\n                '35 0\\n' +\n                '35 1\\n' +\n                '35 1\\n' +\n                '35 1\\n' +\n                '36 0\\n' +\n                '36 1\\n' +\n                '36 1\\n' +\n                '36 1\\n' +\n                '37 0\\n' +\n                '37 1\\n' +\n                '37 1\\n' +\n                '37 1\\n' +\n                '38 0\\n' +\n                '38 1\\n' +\n                '38 1\\n' +\n                '38 1\\n' +\n                '39 0\\n' +\n                '39 1\\n' +\n                '39 1\\n' +\n                '39 1\\n' +\n                '40 0\\n' +\n                '40 1\\n' +\n                '40 1\\n' +\n                '40 1\\n' +\n                '41 0\\n' +\n                '41 1\\n' +\n                '41 1\\n' +\n                '41 1\\n' +\n                '42 0\\n' +\n                '42"
    },
    {
        "number": 3528,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n1 4\n2 2\n4 1\n3 5\n5 3\nLUR''') == '9.0 6.5 2.5'\n'''\nimport unittest\n\nclass Test(unittest.TestCase):\n    def test(self):\n        self.assertEquals(solution('''5\n1 4\n2 2\n4 1\n3 5\n5 3\nLUR'''), '9.0 6.5 2.5')"
    },
    {
        "number": 3528,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3528,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n1 4\n2 2\n4 1\n3 5\n5 3\nLUR''') == '9.0\\n6.5\\n2.5'\n'''\n\nimport sys\nfrom math import sqrt\nfrom typing import Tuple"
    },
    {
        "number": 3528,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n4\\n3\\n5\\n3\\nLUR\\n') == '9.0\\n6.5\\n2.5'\nassert solution('5\\n3\\n5\\n3\\n3\\n3\\nLUR\\n') == '9.0\\n9.0\\n9.0'\nprint(\"Tests passed successfully.\")\n"
    },
    {
        "number": 3528,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n1 4\n2 2\n4 1\n3 5\n5 3\nLUR''') == '9.0\\n6.5\\n2.5'\nassert solution('''10\n1 2\n2 1\n3 3\n4 4\n5 4\n6 4\n7 4\n8 5\n9 5\n10 4\nLUR''') == '7.5\\n4.5\\n1.0\\n0.0'\n'''"
    },
    {
        "number": 3528,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR') == '9.0\\n6.5\\n2.5'\nassert solution('5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLRUL') == '9.0\\n6.5\\n2.5'\nassert solution('5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLDUR') == '9.0\\n6.5\\n2.5'\nassert solution('3\\n1 1\\n2 2\\n2 2\\n1 1') == '1.5'\nassert solution('1\\n1') == '0.5'\n"
    },
    {
        "number": 3529,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n-----\n\"\"\"\n\nimport sys\n\nstdin = sys.stdin.read()"
    },
    {
        "number": 3529,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '1'\n"
    },
    {
        "number": 3529,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''3 3 2''') == '1'\nassert solution(\n'''3 3 1''') == '1'\nassert solution(\n'''5 3 2''') == '1'\nassert solution(\n'''5 3 2''') == '0'\nassert solution(\n'''7 4 2''') == '1'\n"
    },
    {
        "number": 3529,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 3 2\\nB 1 2\\nB 2 3\\nR 3 1') == '1'\nassert solution('3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\\nB 3 4') == '0'\nassert solution('5 5 6\\nB 1 2\\nB 2 3\\nR 3 4\\nB 4 5\\nB 5 6\\nR 1 2\\nB 1 3\\nR 3 4') == '0'\nassert solution('5 5 6\\nB 1 2\\nB 2 3\\nR 3 4\\nB 4 5\\nB 5 6\\nR 1 2\\nB 1 3\\nR 3 4') == '1'\nassert solution('7 7 4\\nB 1 2\\nB 2 3\\nR 3 4\\nB 4 5\\nB 5 6\\nR 6 7\\nB 6 7\\nB 5 6\\nB 1 2\\nB 3 4\\nB 7') == '1'\n"
    },
    {
        "number": 3529,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 3 2') == '1'\nassert solution('4 4 2') == '0'\nassert solution('5 5 3') == '0'\nassert solution('5 2 3') == '0'\nassert solution('5 5 2') == '0'\n"
    },
    {
        "number": 3529,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 3 2''') == '1'\nassert solution('''2 4 1''') == '1'\nassert solution('''1 1 2''') == '1'\nassert solution('''1 2 3''') == '0'\nassert solution('''2 2 1''') == '0'\n"
    },
    {
        "number": 3529,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 3 2\") == \"1\"\nassert solution(\"3 3 3\") == \"0\"\nassert solution(\"2 2 2\") == \"1\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 1 2\") == \"0\"\n"
    },
    {
        "number": 3529,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input_s) == output_s\n'''\n\nn, m, k = [int(x) for x in stdin.split()]"
    },
    {
        "number": 3529,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''3 3 2'''\n) == '1'\n\nassert solution(\n'''5 2 2'''\n) == '0'\n\nassert solution(\n'''4 2 1'''\n) == '0'\n\nassert solution(\n'''6 4 3'''\n) == '0'\n\nassert solution(\n'''6 4 3'''\n) == '0'"
    },
    {
        "number": 3529,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\nassert solution(\"3 3 2\") == \"1\"\nassert solution(\"3 3 0\") == \"0\"\nassert solution(\"3 3 2\") == \"1\"\nassert solution(\"3 3 2\") == \"1\"\n"
    },
    {
        "number": 3530,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '3'\n"
    },
    {
        "number": 3530,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n0 0 5\n7 0 7\n4\n88\n5\n6\n7\n''') == '88\\n5\\n5\\n7\\n7'\nassert solution('''2\n5 0 5\n7 0 7\n4\n88\n5\n6\n7\n''') == '88\\n5\\n5\\n7\\n7'\nassert solution('''3\n1 0 5\n2 0 7\n3\n4\n5\n6\n7\n''') == '88\\n5\\n5\\n4\\n4'\n'''\nThere are three ways to reach the maximum fun. The first way is to spend only three minutes: let's call this way $T$; the second way is to spend four minutes, and the third is to spend five minutes.\n\nIn the first way, one roller coaster is at the top of the roller coaster queue. The fun value of that roller coaster is $f_1 = (1 - 3)^2$ and the next roller coaster at the top is at the back of the queue.\n\nIn the second way, one roller coaster is at the top of the roller coaster queue. The fun value of that roller coaster is $f_2 = (2 - 4)^2$ and the next roller coaster at the top is at the back of the queue.\n\nIn the third way, one roller coaster is at the top of the roller coaster queue. The fun value of that roller coaster is $f_3 = (3 - 5)^2$ and the next roller coaster at the top is at the back of the queue.\n\nThe maximum fun value of all roller coasters is $f_1 + f_2 + f_3 = (1 - 3)^2 + (2 - 4)^2 + (3 - 5)^2 = (1 - 3)^2 + (2 - 4)^2 = (4 - 6)^2 = 5$.\n\nYou can't choose more than one way to spend the time. Print the answer to each question on a new line.\n'''"
    },
    {
        "number": 3530,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 3530,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n2\n5 0 5\n7 0 7\n4\n88\n5\n6\n7\n''') == '88\\n5\\n5\\n7\\n'\nassert solution('''\n5\n10 0 5\n11 0 7\n3\n20\n4\n5\n6\n7\n''') == '70\\n4\\n5\\n7\\n'\nassert solution('''\n1\n0\n0\n0\n0\n0\n0\n0\n''') == '0\\n'\nassert solution('''\n2\n3 0 3\n2 1 4\n2 3 5\n3 0 3\n4 0 5\n''') == '10\\n11\\n'\nassert solution('''\n2\n4 0 3\n2 1 4\n2 3 5\n3 0 3\n4 0 5\n''') == '8\\n'\n"
    },
    {
        "number": 3530,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expect(stdin)\nprint(solution(stdin))\n\n\"\"\"\n"
    },
    {
        "number": 3530,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n5 0 5\n7 0 7\n4\n88\n5\n6\n7\n''') == '88\\n5\\n5\\n7\\n'\n'''\nn = int(stdin.readline())\na, b, t = [int(v) for v in stdin.readline().split()]\nq = int(stdin.readline())\n\nres = []\nfor i in range(q):\n    t = int(stdin.readline())\n    a += a*(t-1)**2\n    if a < 0:\n        a = 0\n    res.append(a)\n\nprint('\\n'.join(str(v) for v in res))\n'''\n"
    },
    {
        "number": 3530,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n0 0 5\n7 0 7\n4\n88\n5\n6\n7''') == '88\\n5\\n5\\n7\\n7'\nassert solution('''2\n5 0 5\n7 0 7\n4\n88\n5\n6\n7''') == '88\\n5\\n5\\n7\\n7'\nassert solution('''1\n0 0 0\n5 0 5\n7 0 7\n4\n88\n5\n6\n7''') == '88\\n5\\n5\\n7\\n7'\nassert solution('''2\n5 0 5\n7 0 7\n4\n88\n5\n6\n7''') == '88\\n5\\n5\\n7\\n7'\nassert solution('''2\n1 0 0\n1 0 1\n4\n0\n5\n6\n7''') == '1\\n5\\n5\\n7\\n7'\n"
    },
    {
        "number": 3530,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5\\n0 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7\") == \"88\\n5\\n5\\n7\"\nassert solution(\"2\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7\") == \"88\\n5\\n5\\n7\"\nassert solution(\"5\\n0 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7\") == \"88\\n5\\n5\\n7\"\nassert solution(\"2\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7\") == \"88\\n5\\n5\\n7\"\nassert solution(\"5\\n0 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7\") == \"88\\n5\\n5\\n7\"\n"
    },
    {
        "number": 3530,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n5 0 5\n7 0 7\n4\n88\n5\n6\n7\n''') == '''88\n5\n5\n7\n'''\nassert solution('''3\n9 0 9\n1 0 1\n4\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2"
    },
    {
        "number": 3530,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 3531,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(open(\"test_case_1.txt\").read()) == \"5\"\nassert solution(open(\"test_case_2.txt\").read()) == \"1\"\nassert solution(open(\"test_case_3.txt\").read()) == \"-1\"\nassert solution(open(\"test_case_4.txt\").read()) == \"7\"\nassert solution(open(\"test_case_5.txt\").read()) == \"6\"\n"
    },
    {
        "number": 3531,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 3 1 2\n2\n1 2 2\n1 3 1\n2 3 3''') == '5'\nassert solution('''3 3 1 2\n2\n1 2 2\n1 3 1\n2 3 3''') == '-1'\nassert solution('''3 3 1 2\n2\n1 2 2\n1 3 1\n2 3 3''') == '-1'\nassert solution('''3 3 1 2\n2\n1 2 2\n1 3 1\n2 3 3\n2 1 1\n1 3 3\n1 2 1\n1 3 3''') == '-1'\nassert solution('''3 3 1 2\n2\n1 2 2\n1 3 1\n2 3 3\n2 1 1\n1 3 3\n1 2 1\n1 3 3''') == '-1'\n"
    },
    {
        "number": 3531,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"a\"\nassert solution(\"a\\nb\") == \"a\"\nassert solution(\"a\\nb\\nc\") == \"a\"\nassert solution(\"a\\nb\\nc\\nd\") == \"a\"\n"
    },
    {
        "number": 3531,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n3 3 1 2\n2\n1 2 2\n1 3 1\n2 3 3\n''') == '5'\nassert solution(\n'''\n3 2 1 2\n2\n1 2 2\n1 3 1\n2 3 3\n''') == '-1'\nassert solution(\n'''\n1 1 1 1\n2\n2\n1 2 1\n1 3 1\n''') == '-1'\nassert solution(\n'''\n3 4 1 2\n1\n1 3 1\n1 2 1\n2 3 1\n3 4 1\n1 4 1\n3 4 1\n1 4 1\n''') == '6'\nassert solution(\n'''\n4 5 3 2\n1\n1 3 1\n1 2 1\n2 3 1\n3 4 1\n1 4 1\n4 5 3\n1 4 1\n4 5 3\n1 4 1\n''') == '16'\n"
    },
    {
        "number": 3531,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n3 3 1 2\n2\n1 2 2\n1 3 1\n2 3 3\n''') == '5'\n\nassert solution('''\n5 4 3 2\n4\n2 3 2 1\n3 2 2 1\n2 1 1 1\n3 3 3 3\n3 1 1 1\n1 2 1 1\n3 4 1 1\n''') == '-1'\n\nassert solution('''\n2 2 1 1\n1\n2 2 1\n2 1 1\n''') == '-1'\n'''\n"
    },
    {
        "number": 3531,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 4 1 2\n2\n1 2 2\n1 3 1\n2 3 3''') == '5'\nassert solution('''3 4 1 2\n2\n1 2 2\n1 3 1\n2 3 3''') == '-1'\nassert solution('''3 4 1 2\n2\n1 2 2\n1 3 1\n2 3 3\n1 1 2''') == '5'\nassert solution('''3 4 1 2\n2\n1 2 2\n1 3 1\n2 3 3\n1 1 1''') == '1'\nassert solution('''3 4 1 2\n2\n1 2 2\n1 3 1\n2 3 3\n1 1 1\n2 1 1''') == '-1'\n"
    },
    {
        "number": 3531,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 3 1 2''') == \"5\"\nassert solution('''6 3 1 2''') == \"-1\"\nassert solution('''3 3 1 2''') == \"5\"\nassert solution('''9 3 1 2''') == \"8\"\nassert solution('''6 3 1 2''') == \"-1\"\n"
    },
    {
        "number": 3531,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 3 1 2\n2\n1 2 2\n1 3 1\n2 3 3''') == '5'\nassert solution('''3 3 1 2\n2\n1 2 2\n1 3 1\n2 3 3\n1 4 1\n1 5 1\n1 6 1\n2 4 2\n2 5 2\n2 6 2\n3 4 3\n3 5 3\n3 6 3''') == '10'\nassert solution('''3 3 1 2\n2\n1 2 2\n1 3 1\n2 3 3\n1 4 1\n1 5 1\n1 6 1\n2 4 2\n2 5 2\n2 6 2\n3 4 3\n3 5 3\n3 6 3\n4 5 3\n4 6 3''') == '-1'\nassert solution('''3 3 1 2\n2\n1 2 2\n1 3 1\n2 3 3\n1 4 1\n1 5 1\n1 6 1\n2 4 2\n2 5 2\n2 6 2\n3 4 3\n3 5 3\n3 6 3\n4 5 3\n4 6 3\n5 6 3\n5 7 3\n5 8 3\n6 7 3\n6 8 3\n7 8 3\n7 9 3\n7 10 3\n8 9 3\n8 10 3''') == '20'\n'''\n'''"
    },
    {
        "number": 3531,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\n\n---\n\nTo see if your answer is correct, run the following:\n\n    python3 solution.py\n    python3 solution.py < solution_test_1.txt\n    python3 solution.py < solution_test_2.txt\n    python3 solution.py < solution_test_3.txt\n    python3 solution.py < solution_test_4.txt\n    python3 solution.py < solution_test_5.txt\n    python3 solution.py < solution_test_6.txt\n\nIf your answer is correct, you will get the following:\n\n   .\n   .\n   .\n   .\n   .\n\n---\n\nBibliography:\n- https://www.hackerrank.com/challenges/big-sorting/forum/comments/237781\n- https://en.wikipedia.org/wiki/Straight-line_spiral\n- https://en.wikipedia.org/wiki/Zigzag_spiral\n- https://www.hackerrank.com/challenges/big-sorting/forum/comments/252214\n- https://www.hackerrank.com/challenges/big-sorting/forum/comments/241470\n- https://en.wikipedia.org/wiki/Gutenberg%27s_pride_and_prejudice\n- https://en.wikipedia.org/wiki/Tetrahedral_number\n- https://en.wikipedia.org/wiki/Spherical_geometry\n- https://en.wikipedia.org/wiki/Ordered_points_on_a_sphere\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Zigzag_spiral\n- https://en.wikipedia.org/wiki/Zigzag_spiral\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Ordered_points_on_a_sphere\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en.wikipedia.org/wiki/Linear_combination\n- https://en"
    },
    {
        "number": 3531,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '''\n    3 3 1 2\n    2\n    1 2 2\n    1 3 1\n    2 3 3\n    '''\n) == '5'\nassert solution(\n    '''\n    3 3 1 2\n    1\n    1 2 2\n    1 3 1\n    2 3 3\n    '''\n) == '-1'\nassert solution(\n    '''\n    3 3 1 2\n    2\n    1 2 2\n    1 3 1\n    2 3 3\n    '''\n) == '-1'\nassert solution(\n    '''\n    3 3 1 2\n    2\n    1 2 2\n    1 3 1\n    2 3 3\n    '''\n) == '-1'\nassert solution(\n    '''\n    2 3 1 2\n    2\n    1 2 2\n    1 3 1\n    2 3 3\n    '''\n) == '-1'\n"
    },
    {
        "number": 3532,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\nassert solution(\"mirkovC4nizCC44\") == \"mirkovniz\"\nassert solution(\"C4\") == \"FRULA\"\nassert solution(\"mirkovC4nizCC44c\") == \"mirkovniz\"\nassert solution(\"C4c\") == \"FRULA\"\n"
    },
    {
        "number": 3532,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\nmirkovC4nizCC44\nC4\n\"\"\") == \"mirkovniz\"\n\nassert solution(\n\"\"\"\nHJasdfkljslkjaf\njJ\n\"\"\") == \"HJasdfkljslkjaf\"\n\nassert solution(\n\"\"\"\nBVzYqmWttjdfwLKGzwwp\nwW\n\"\"\") == \"BVzYqmWttjdfwLKGzwwp\"\n\nassert solution(\n\"\"\"\nPvvqipqeUoytgoJFPcK\ntJ\n\"\"\") == \"PvvqipqeUoytgoJFPcK\"\n\nassert solution(\n\"\"\"\nGjhgwbhivwvofyXZqxyf\nXF\n\"\"\") == \"GjhgwbhivwvofyXZqxyf\""
    },
    {
        "number": 3532,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('mirkovC4nizCC44') =='mirkovniz'\n\nassert solution('C4') == 'FRULA'\n\nassert solution('cc') == 'FRULA'\n\nassert solution('C2') == 'FRULA'\n\nassert solution('C2C') == 'FRULA'"
    },
    {
        "number": 3532,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\"\n\nassert solution(\"mirkovC4nizCC44\") == \"mirkovniz\"\n\nassert solution(\"MiRkoV4nizCC44\") == \"FRULA\"\n\nassert solution(\"MiRkoV4nizCC44\") == \"FRULA\"\n\nassert solution(\"mirkovC4nizCC44\") == \"FRULA\""
    },
    {
        "number": 3532,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''mirkovC4nizCC44\nC4''') =='mirkovniz'\nassert solution('''mirkovC4nizCC44\ncc4''') =='mirkovniz'\nassert solution('''mirkovC4nizCC44\ncc44''') == 'FRULA'\nassert solution('''mirkovC4nizCC44\nCC4''') == 'FRULA'\nassert solution('''mirkovC4nizCC44\ncc44''') =='mirkovniz'\n"
    },
    {
        "number": 3532,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\nmirkovC4nizCC44\nC4\n'''\n    ) =='mirkovniz'\n\nassert solution(\n'''\nGvXvfVkZobSrJYXqGHnYkIHZLzEHJ4u4rLQlLQN3YjRwy8wY9j9j9rG8o\nQRr9hkq2oKdYw5RJy0w9w1QQYtHG9jU4R9h8r9Q9YtXH9r8r9Q9Wt2HG9\njUw9w1QQZtXH9r9Q9YtXH9r8r9Q9Wt2HG9jUw9w1QQYtHG9jU4R9h8r9\nQ9YtXH9r8r9Q9Wt2HG9jUw9w1QQYtHG9jU4R9h8r9Q9YtXH9r8r9Q9Wt2H\nG9jUw9w1QQYtHG9jU4R9h8r9Q9YtXH9r8r9Q9Wt2HG9jUw9w1QQYtHG9\njU4R9h8r9Q9YtXH9r8r9Q9Wt2HG9jUw9w1QQYtHG9jU4R9h8r9Q9YtXH\n9r8r9Q9Wt2HG9jUw9w1QQYtHG9jU4R9h8r9Q9YtXH9r8r9Q9Wt2HG9jU\nw9w1QQYtHG9jU4R9h8r9Q9YtXH9r8r9Q9Wt2HG9jUw9w1QQYtHG9jU4R\n9h8r9Q9YtXH9r8r9Q9Wt2HG9jUw9w1QQYtHG9jU4R9h8r9Q9YtXH9r8r\n9Q9Wt2HG9jUw9w1QQYtHG9jU4R9h8r9Q9YtXH9r8r9Q9Wt2HG9jUw9w1Q\nQYtHG9jU4R9h8r9Q9YtXH9r8r9Q9Wt2HG9jUw9w1QQYtHG9jU4R9h8r9\nQ9YtXH9r8r9Q9Wt2HG9jUw9w1QQYtHG9jU4R9h8r9Q9YtXH9r8r9Q9Wt2H\nG9jUw9w1QQYtHG9jU4R9h8r9Q9YtXH9r8r9Q9Wt2HG9jUw9w1QQYtHG9jU\n4R9h8r9Q9YtXH9r8r9Q9Wt2HG9jUw9w1QQYtHG9jU4R9h8r9Q9YtXH9r8r9\nQ9Wt2HG9jUw9w1QQYtHG9jU4R9h8r9Q9YtXH9r8r9Q9Wt2HG9jUw9w1QQYt\nHG9jU4R9h8r9Q9YtXH9r8r9Q9Wt2HG9jUw9w1QQYtHG9jU4R9h8r9Q9YtXH\n9r8r9Q9Wt2HG9jUw9w1QQYtHG9jU4R9h8r9Q9YtXH9r8r9Q9Wt2HG9jUw9w1Q\nQYtHG9jU4R9h8r9Q9YtXH9r8r9Q9Wt2HG9jUw9w1QQYtHG9jU4R9h8r9Q9YtX\nH9r8r9Q9Wt2HG9jUw9w1QQYtHG9jU4R9h8r9Q9YtXH9r8r9Q9Wt2HG9jUw9w1Q\nQYtHG9jU4R9h8r9Q9YtXH9r8r9Q9Wt2HG9jUw9w1QQYtHG9jU4R9h8r9Q9YtX\nH9r8r9Q9Wt2HG9jUw9w1QQYtHG9jU4R9h8r9Q9YtXH9r8r9Q9Wt2HG9jUw9w1Q\nQYtHG9jU4R9h8r9Q9YtXH9r8r9Q9Wt2HG9jUw9w1QQYtHG9jU4R9h8r9Q9YtXH\n9r8r9Q9Wt2HG9jUw9w1QQYtHG9jU4R9h8r9Q9YtXH9r8r9Q9Wt2HG9jUw9w1QQYt\nHG9jU4R9h8r9Q9YtXH9r8r9Q9Wt2HG9jUw9w1QQYtHG9jU4R9h8r9Q9YtXH9r8r9\nQ9Wt2HG9jUw9w1QQYtHG9jU4R9h8r9Q9YtXH9r8r9Q9Wt2HG9jUw9w1QQYtHG9jU\n4R9h8r9"
    },
    {
        "number": 3532,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abcdefghijklmnopqrstuvwxyz') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('abcd') == 'abcd'\nassert solution('ab') == 'ab'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'abcd'\nassert solution('abcd') == 'ab'\n"
    },
    {
        "number": 3532,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\ncc\ncc\n\"\"\") == \"mirkovniz\"\n\nassert solution(\n\"\"\"\ncc\ncc\n\"\"\") == \"mirkovniz\"\n\nassert solution(\n\"\"\"\ncc\ncc\n\"\"\") == \"frula\"\n\nassert solution(\n\"\"\"\ncccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc"
    },
    {
        "number": 3532,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\nmirkovC4nizCC44\nC4\n\"\"\") == \"mirkovniz\"\n\nassert solution(\n\"\"\"\nmirkovC4nizCC44\nc4\n\"\"\") == \"c4\"\n\nassert solution(\n\"\"\"\nmirkovC4nizCC44\nc4\n\"\"\") == \"FRULA\"\n\nassert solution(\n\"\"\"\nmirkovC4nizCC44\ncc44\n\"\"\") == \"c4\"\n\nassert solution(\n\"\"\"\nmirkovC4nizCC44\ncc44cc44\n\"\"\") == \"FRULA\""
    },
    {
        "number": 3532,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"mirkovC4nizCC44\nC4\"\"\"\n) == \"mirkovniz\"\n\nassert solution(\n\"\"\"mirkovC4nizCC44\nyz4\nSample Output:\nFRULA\"\"\"\n) == \"FRULA\"\n\nassert solution(\n\"\"\"mirkovC4nizCC44\nyz4yz4\nSample Output:\nFRULA\"\"\"\n) == \"mirkovniz\"\n\nassert solution(\n\"\"\"mirkovC4nizCC44\nyz4\nyz4yz4\nSample Output:\nFRULA\"\"\"\n) == \"FRULA\"\n\nassert solution(\n\"\"\"mirkovC4nizCC44\nyz4yz4yz4\nSample Output:\nmirkovniz\"\"\"\n) == \"FRULA\""
    },
    {
        "number": 3533,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3 65\n45 10\n60 25''') == '32'\nassert solution('''5\n100 100\n10 30\n15 35\n45 90\n10 90\n10 50\n20 45\n10 30\n''') == '280'\nassert solution('''10\n10 10\n15 15\n45 45\n50 50\n60 60\n65 65\n70 70\n75 75\n80 80\n85 85\n90 90\n95 95\n''') == '220'\nassert solution('''5\n1 100\n10 30\n15 35\n45 90\n10 90\n10 50\n20 45\n10 30\n''') == '220'\nassert solution('''7\n1 100\n10 30\n15 35\n45 90\n10 90\n10 50\n20 45\n10 30\n''') == '130'\n"
    },
    {
        "number": 3533,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '32'\nassert solution(stdin) == '32'\nassert solution(stdin) == '18'\nassert solution(stdin) == '18'\nassert solution(stdin) == '18'\n"
    },
    {
        "number": 3533,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3533,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n3\n3 65\n45 10\n60 25\n''') == '32'\nassert solution('''\n2\n45 4\n60 1\n''') == '5'\nassert solution('''\n5\n1000000000 1000000000\n1000000000 1000000000\n1000000000 1000000000\n1000000000 1000000000\n1000000000 1000000000\n''') == '0'\nassert solution('''\n10\n1000000000 1\n1000000000 1\n1000000000 1\n1000000000 1\n1000000000 1\n1000000000 1\n1000000000 1\n1000000000 1\n1000000000 1\n1000000000 1\n''') == '48'\nassert solution('''\n10\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '0'\n"
    },
    {
        "number": 3533,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"3\\n\"\n\"3 65\\n\"\n\"45 10\\n\"\n\"60 25\\n\"\n) == \"32\"\nassert solution(\n\"3\\n\"\n\"3 65\\n\"\n\"45 10\\n\"\n\"60 25\\n\"\n\"0\\n\"\n) == \"0\"\nassert solution(\n\"3\\n\"\n\"3 65\\n\"\n\"45 10\\n\"\n\"60 25\\n\"\n\"89 100\\n\"\n) == \"48\"\nassert solution(\n\"3\\n\"\n\"3 65\\n\"\n\"45 10\\n\"\n\"60 25\\n\"\n\"89 100\\n\"\n\"87 110\\n\"\n\"45 44\\n\"\n\"34 77\\n\"\n\"56 26\\n\"\n\"44 22\\n\"\n\"43 7\\n\"\n\"45 23\\n\"\n\"49 22\\n\"\n\"46 10\\n\"\n\"2 40\\n\"\n\"3 37\\n\"\n\"0\\n\"\n) == \"97\"\nassert solution(\n\"3\\n\"\n\"3 65\\n\"\n\"45 10\\n\"\n\"60 25\\n\"\n\"89 100\\n\"\n\"87 110\\n\"\n\"45 44\\n\"\n\"34 77\\n\"\n\"56 26\\n\"\n\"44 22\\n\"\n\"43 7\\n\"\n\"45 23\\n\"\n\"49 22\\n\"\n\"46 10\\n\"\n\"2 40\\n\"\n\"3 37\\n\"\n\"0\\n\"\n\"1\\n\"\n\"0\\n\"\n\"1\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\n\"\n\"0\\"
    },
    {
        "number": 3533,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('1') == '0'\nassert solution('2 1') == '0'\nassert solution('2 3') == '1'\nassert solution('2 9') == '2'\n"
    },
    {
        "number": 3533,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"\\n\\n\") == \"\"\nassert solution(\"\\n\\n\\n\") == \"\"\nassert solution(\"\\n\\n\\n\\n\\n\") == \"\"\n"
    },
    {
        "number": 3533,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n3\n3 65\n45 10\n60 25\n''') == '32'\nassert solution('''\n1\n2\n2\n3\n3\n4\n''') == '1'\nassert solution('''\n5\n10\n15\n20\n25\n30\n''') == '12'\nassert solution('''\n5\n20\n30\n40\n50\n60\n''') == '18'\nassert solution('''\n9\n7\n10\n6\n4\n3\n2\n1\n1\n''') == '10'\n"
    },
    {
        "number": 3533,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n3 65\n45 10\n60 25''') == \"32\"\nassert solution('''3\n3 65\n45 10\n60 25''') == \"32\"\nassert solution('''3\n3 65\n45 10\n60 25''') == \"32\"\nassert solution('''3\n3 65\n45 10\n60 25''') == \"32\"\nassert solution('''3\n3 65\n45 10\n60 25''') == \"32\"\n"
    },
    {
        "number": 3533,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1\n    2\n    3''') == '6'\nassert solution('''2\n    3\n    4\n    5''') == '1'\nassert solution('''3\n    1\n    2\n    3\n    4''') == '5'\nassert solution('''4\n    1\n    2\n    3\n    4''') == '6'\nassert solution('''5\n    1\n    2\n    3\n    4\n    5''') == '0'\n"
    },
    {
        "number": 3534,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1\") == \"2\"\nassert solution(\"1\\n2\") == \"3\"\nassert solution(\"1\\n3\") == \"4\"\nassert solution(\"1\\n2 3\") == \"5\"\nassert solution(\"1\\n5\") == \"4\"\n"
    },
    {
        "number": 3534,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n5\n1 2 0 3 1\n''') == '3', '''\\\nThe second line of the input is:\n    \n    1 2 0 3 1\n'''\n\nassert solution('''\n5\n-10 -1 -1 -2 -2\n''') == '2', '''\\\nThe third line of the input is:\n    \n    -10 -1 -1 -2 -2\n'''\n\nassert solution('''\n3\n-10 -1 -1\n''') == '2', '''\\\nThe third line of the input is:\n    \n    -10 -1 -1\n'''\n\nassert solution('''\n4\n-10 -1 -1 -2\n''') == '3', '''\\\nThe third line of the input is:\n    \n    -10 -1 -1 -2\n'''\n\nassert solution('''\n3\n-10 -1 -1\n''') == '2', '''\\\nThe third line of the input is:\n    \n    -10 -1 -1\n'''"
    },
    {
        "number": 3534,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == [3,2]\nassert solution(\"\") == \"\"\nassert solution(\"1\\n\") == \"1\"\nassert solution(\"-1\\n\") == \"-1\"\nassert solution(\"-1\\n1\") == \"1\"\n"
    },
    {
        "number": 3534,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n1 2 0 3 1''') == '3'\nassert solution('''5\n1 2 0 3 1''') == '2'\nassert solution('''5\n4 6 2 1 4''') == '1'\nassert solution('''5\n-4 -6 2 -1 4''') == '4'\nassert solution('''5\n1 1 1 1 1''') == '4'\n"
    },
    {
        "number": 3534,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n1\\n2\\n3') == '2'\nassert solution('1\\n2\\n3') == '2'\nassert solution('2\\n2\\n2') == '2'\nassert solution('2\\n3\\n2') == '3'\n"
    },
    {
        "number": 3534,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"5\\n1 2 0 3 1\"\n) == \"3\\n2\"\nassert solution(\n    \"5\\n1 5 2 0 2\"\n) == \"1\\n2\"\nassert solution(\n    \"5\\n-1 -2 -3 -4 -5\"\n) == \"3\\n1\"\nassert solution(\n    \"5\\n-2 -3 -4 -5 -6\"\n) == \"3\\n0\"\nassert solution(\n    \"5\\n0 1 2 3 4 5\"\n) == \"3\\n0\"\n"
    },
    {
        "number": 3534,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n3\\n') == '2'\nassert solution('5\\n1 2 0 3 1\\n') == '3'\nassert solution('10\\n1 2 0 3 1 2 3 3 4 4\\n') == '4'\nassert solution('5\\n1 2 0 3 1\\n') == '2'\nassert solution('5\\n1 2 0 3 1\\n') == '2'\n"
    },
    {
        "number": 3534,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 3534,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0\\n') == '0'\nassert solution('1\\n') == '0'\nassert solution('2\\n') == '1'\nassert solution('3\\n') == '1'\nassert solution('4\\n') == '0'\n"
    },
    {
        "number": 3534,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"0\"\nassert solution(\"5\") == \"3\"\nassert solution(\"1 2 0 3 1\") == \"3\"\nassert solution(\"-1 2 0 3 1\") == \"2\"\n"
    },
    {
        "number": 3535,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(open(\"test_file.txt\", \"r\").read()) == \"2\"\nassert solution(open(\"test_file2.txt\", \"r\").read()) == \"4\"\nassert solution(open(\"test_file3.txt\", \"r\").read()) == \"4\"\nassert solution(open(\"test_file4.txt\", \"r\").read()) == \"0\"\n\nprint(solution(open(\"input.txt\", \"r\").read()))\n"
    },
    {
        "number": 3535,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 2 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\") == \"2\"\nassert solution(\"2 2 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\") == \"0\"\nassert solution(\"1 1 1\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\") == \"0\"\nassert solution(\"2 2 1\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\") == \"0\"\nassert solution(\"1 1 2\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\") == \"2\"\n"
    },
    {
        "number": 3535,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 4 4\n+ 1 1\n- 1 2\n+ 1 3\n- 1 4''') == \"2\"\nassert solution('''3 3 2\n+ 1 1\n- 1 2\n+ 1 3\n- 1 4\n+ 1 1\n- 1 2\n+ 1 3\n- 1 4''') == \"0\"\nassert solution('''5 5 5\n+ 1 1\n- 1 2\n+ 1 3\n- 1 4\n+ 1 1\n- 1 2\n+ 1 3\n- 1 4''') == \"4\"\nassert solution('''10 10 5\n+ 1 1\n- 1 2\n+ 1 3\n- 1 4\n+ 1 1\n- 1 2\n+ 1 3\n- 1 4\n+ 1 1\n- 1 2\n+ 1 3\n- 1 4\n+ 1 1\n- 1 2\n+ 1 3\n- 1 4''') == \"10\"''' )\n    pass\n"
    },
    {
        "number": 3535,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(open(\"test_solution.txt\").read()) == \"4\"\n\"\"\"\n"
    },
    {
        "number": 3535,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\"\nprint(solution(stdin))\n\n\"\"\""
    },
    {
        "number": 3535,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\" \"\"\""
    },
    {
        "number": 3535,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\"\n\"\"\""
    },
    {
        "number": 3535,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 4 4\n+ 1 1\n- 1 2\n+ 1 3\n- 1 4''') == '2'\nassert solution('''2 4 4\n+ 1 1\n- 1 2\n+ 1 3\n- 1 4''') == '2'\nassert solution('''1 4 4\n+ 1 1\n- 1 2\n+ 1 3\n- 1 4''') == '0'\nassert solution('''1 4 4\n+ 1 1\n- 1 2\n+ 1 3\n- 1 4''') == '2'\nassert solution('''2 2 4\n+ 1 1\n- 1 2\n+ 1 3\n- 1 4''') == '2'\n"
    },
    {
        "number": 3535,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 3535,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 2\n'''\n"
    },
    {
        "number": 3536,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1000000000 0\\n1000000000 1') == '500000004'\nassert solution('1000000000 0\\n1000000000 1') == '500000004'\nassert solution('2\\n1000000000 1\\n1000000000 0') == '400000002'\nassert solution('2\\n1000000000 1\\n1000000000 0') == '400000002'\nassert solution('2\\n1000000000 1\\n1000000000 0\\n1000000000 0') == '400000002'\n"
    },
    {
        "number": 3536,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\\\n1000000000 0\n1000000000 1\n''') == \"500000004\"\nassert solution('''\\\n1000000000 0\n1000000000 1\n''') == \"500000004\"\nassert solution('''\\\n3000000000 0\n3000000000 2\n1000000000 1\n''') == \"500000004\"\nassert solution('''\\\n2 1\n1 0\n3 1\n''') == \"4\"\nassert solution('''\\\n4 1\n1 0\n4 1\n1 0\n3 1\n''') == \"4\"\n"
    },
    {
        "number": 3536,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n3\n1000000000 0\n1000000000 1\n1000000000 1\n''') == '500000004'\nassert solution(\n'''\n10\n1000000000 0\n1000000000 0\n1000000000 1\n1000000000 0\n1000000000 0\n1000000000 1\n1000000000 0\n1000000000 0\n1000000000 0\n1000000000 0\n1000000000 0\n''') == '10383966466'\nassert solution(\n'''\n3\n1000000000 0\n1000000000 0\n1000000000 1\n''') == '500000004'\nassert solution(\n'''\n10\n1000000000 0\n1000000000 0\n1000000000 1\n1000000000 0\n1000000000 0\n1000000000 1\n1000000000 0\n1000000000 0\n1000000000 0\n1000000000 0\n1000000000 0\n''') == '10383966466'\nassert solution(\n'''\n3\n1000000000 0\n1000000000 0\n1000000000 1\n''') == '500000004'\n"
    },
    {
        "number": 3536,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 3536,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1000000000 0\n1000000000 1''') == '500000004'\n'''\nimport sys"
    },
    {
        "number": 3536,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"500000004\"\n\n---\n"
    },
    {
        "number": 3536,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 0\\n1 1\\n') == 500000004\nassert solution('2 0\\n1 1\\n') == 700000008\nassert solution('3 0\\n1 1\\n1 2\\n') == 500000011\nassert solution('4 0\\n1 1\\n1 2\\n1 3\\n') == 5000000000\nassert solution('5 0\\n1 1\\n1 2\\n1 3\\n1 4\\n') == 5000000000\n"
    },
    {
        "number": 3536,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"100000004\"\n\"\"\"\n"
    },
    {
        "number": 3536,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0 0\") == \"\"\nassert solution(\"1 0\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"0 1\") == \"5\"\n"
    },
    {
        "number": 3536,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n1000000000 0\n1000000000 1\n''') == '500000004'\n'''\nimport os\nimport sys"
    },
    {
        "number": 3537,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n1 2 1 10\") == \"12\"\nassert solution(\"4 3\\n1 2 1 10\\n2 4 11 16\") == \"15\"\nassert solution(\"2 3\\n1 2 1 10\\n2 4 11 16\") == \"15\"\nassert solution(\"4 3\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\") == \"14\"\nassert solution(\"5 2\\n1 2 1 10\\n3 4 11 16\") == \"9\"\n"
    },
    {
        "number": 3537,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5 8\") == \"12\"\nassert solution(\"6 5\") == \"32\"\nassert solution(\"10 5\") == \"35\"\nassert solution(\"10 5\") == \"35\"\nassert solution(\"20 7\") == \"103\"\n"
    },
    {
        "number": 3537,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 8') == '12'\nassert solution('3 2') == '3'\nassert solution('1 2 1 10') == '1'\nassert solution('2 4 11 16') == '3'\nassert solution('2 1 9 12') == '1'\n"
    },
    {
        "number": 3537,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 8\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24''') == '12'\nassert solution('''9 8\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24''') == '68'\n'''\n"
    },
    {
        "number": 3537,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 8\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24''') == '12'\nassert solution('''7 7\n1 1 1 1 1 1 1\n2 3 2 3 2 3 2\n3 4 4 4 4 4 4\n4 5 5 5 5 5 5\n5 6 6 6 6 6 6\n6 7 7 7 7 7 7\n7 8 8 8 8 8 8\n8 9 9 9 9 9 9\n9 10 10 10 10 10\n10 11 11 11 11 11\n11 12 12 12 12 12\n12 13 13 13 13 13\n13 14 14 14 14 14\n14 15 15 15 15 15\n15 16 16 16 16 16\n16 17 17 17 17 17\n17 18 18 18 18 18\n18 19 19 19 19 19\n19 20 20 20 20 20\n20 21 21 21 21 21\n21 22 22 22 22 22\n22 23 23 23 23 23\n23 24 24 24 24 24\n24 25 25 25 25 25\n25 26 26 26 26 26\n26 27 27 27 27 27\n27 28 28 28 28 28\n28 29 29 29 29 29\n29 30 30 30 30 30\n30 31 31 31 31 31\n31 32 32 32 32 32\n32 33 33 33 33 33\n33 34 34 34 34 34\n34 35 35 35 35 35\n35 36 36 36 36 36\n36 37 37 37 37 37\n37 38 38 38 38 38\n38 39 39 39 39 39\n39 40 40 40 40 40\n40 41 41 41 41 41\n41 42 42 42 42 42\n42 43 43 43 43 43\n43 44 44 44 44 44\n44 45 45 45 45 45\n45 46 46 46 46 46\n46 47 47 47 47 47\n47 48 48 48 48 48\n48 49 49 49 49 49\n49 50 50 50 50 50\n50 51 51 51 51 51\n51 52 52 52 52 52\n52 53 53 53 53 53\n53 54 54 54 54 54\n54 55 55 55 55 55\n55 56 56 56 56 56\n56 57 57 57 57 57\n57 58 58 58 58 58\n58 59 59 59 59 59\n59 60 60 60 60 60\n60 61 61 61 61 61\n61 62 62 62 62 62\n62 63 63 63 63 63\n63 64 64 64 64 64\n64 65 65 65 65 65\n65 66 66 66 66 66\n66 67 67 67 67 67\n67 68 68 68 68 68\n68 69 69 69 69 69\n69 70 70 70 70 70\n70 71 71 71 71 71\n71 72 72 72 72 72\n72 73 73 73 73 73\n73 74 74 74 74 74\n74 75 75 75 75 75\n75 76 76 76 76 76\n76 77 77 77 77 77\n77 78 78 78 78 78\n78 79 79 79 79 79\n79 80 80 80 80 80\n80 81 81 81 81 81\n81 82 82 82 82 82\n82 83 83 83 83 83\n83 84 84 84 84 84\n84 85 85 85 85 85\n85 86 86 86 86 86\n86 87 87 87 87 87\n87 88 88 88 88 88\n88 89 89 89 89 89\n89 90 90 90 90 90\n90 91 91 91 91 91\n91 92 92 92 92 92\n92 93 93 93 93 93\n93 94 94 94 94 94\n94 95 95 95 95 95\n95 96 96 96 96 96\n96 97 97 97 97 97\n97 98 98 98 98 98\n98 99 99 99 99 99\n99 100 100 100 100\n100 101 101 101 101\n101 102 102 102 102\n102 103 103 103 103\n103 104 104 104 104\n104 105 105 105 105\n105 106 106 106 106\n106 107 107 107 107\n107 108 108 108 108\n108 109 110 110 110\n110 111 111 111 111\n111 112 112 112 112\n112 113 113 113 113\n113 114 115 115 115\n115 116 117 117 117\n117 118 119 119 119\n119 120 121 122 121\n121 123 124 125 125\n125 126 127 128 128\n128 129 130 131 130\n130 132 133 134 133\n133 135 136 137 137\n137 138 139 140 139\n139 141 142 143 143\n143 144 145 146 146\n146 147 148 149 149\n149 150 151 152 152\n152 153 154 155 154\n154 156 157 158 159\n159 160 161 162 161\n161 163 164 165 166\n166 167 168 169 169\n169 170 171 172 173\n173 174 175 176 177 174\n175 178 179 180 181 178\n179 182 191 192 191\n191 193 194 195 194\n194 197 198 199 198\n199 200 201 202 203 201\n203 204 205 206 207 205\n205 208 209 210 211 208\n209 213 214 215 216 215\n215 217 218 219 220 217\n217 221 222 223 224 223\n223 225 226 227 228 225\n226 229 230 231 232 229\n229 232 233 234 235 234\n234 236 237 238 239 238\n238 241 242 243 244 241\n243 245 246 247 248 247\n247 249 251 252 253 250\n250 253 254 255 256 255\n255 257 258 259 260 257\n259 262 273 274 275 273\n273 276 277 278 279 280 279\n279 281 282 283 284 285 282\n283 286 287 288 289 290 289\n289 292 293 295 296 297 295\n295 297 298 299 300 300 297\n299 303 305 306 307 308 309 305\n303 306 307 308 309 305 305\n306 307 308 309 306 305 305\n307 308 309 307 305 306 305\n308 309 310 311 312 313 311\n311 312 313 314 315 316 315\n315 316 317 318 319 320 319\n319 320 321 322 323 326 327 327\n327 328 329 331 332 334 337 336\n337 338 340 340 341 341 338\n340 341 340 337 337 337 338\n341 340 341 338 337 337 338\n337 338 338 329 329 330 329\n329 330 329 327 328 329 329\n329 330 329 328 329 328 329\n329 330 329 328 328 328 329\n329 330 329 328 328 328 329\n329 330 329 328 328 328 329\n329 330 329 328 328 328 329\n329 330 329 328 328 328 329\n329 330 329 328 328 328 329\n329 330 329 328 328 328 329\n329 330 329 328 328 328 329\n329 330 329 328 328 328 329\n329 330 329 328 328 328 329\n329 330 329 328 328 328 329\n329 330 329 328 328 328 329\n329 330 329 328 328 328 329\n329 330 329 328 328 328 329\n329 330 329 328 328 328 329\n329 330 329 328 328 328 329\n329 330 329"
    },
    {
        "number": 3537,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 8\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24''') == '12'\n'''"
    },
    {
        "number": 3537,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 12\n'''\n"
    },
    {
        "number": 3537,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 8\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24''') == '12'\nassert solution('''3 5\n1 2 3 4\n2 1 3 4\n1 3 2 4''') == '12'\nassert solution('''4 5\n1 2 3 4\n2 1 3 4\n1 2 3 4\n1 2 3 4''') == '12'\nassert solution('''4 5\n1 2 3 4\n1 2 3 4\n1 2 3 4\n1 2 3 4''') == '12'\nassert solution('''3 3\n1 2 1\n2 1 2\n1 2 1''') == '2'\n"
    },
    {
        "number": 3537,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24') == '12'\nassert solution('2 4\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n5 6 7 8\\n6 7 8 9\\n7 8 9 10\\n8 9 10 11\\n9 10 11 12\\n10 11 12 13\\n11 12 13 14\\n12 13 14 15\\n13 14 15 16\\n14 15 16 17\\n15 16 17 18\\n16 17 18 19\\n17 18 19 20\\n18 19 20 21\\n19 20 21 22\\n20 21 22 23\\n21 22 23 24') == '8'\nassert solution('2 4\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n5 6 7 8\\n6 7 8 9\\n7 8 9 10\\n8 9 10 11\\n9 10 11 12\\n10 11 12 13\\n11 12 13 14\\n12 13 14 15\\n13 14 15 16\\n14 15 16 17\\n15 16 17 18\\n16 17 18 19\\n17 18 19 20\\n18 19 20 21\\n19 20 21 22\\n20 21 22 23\\n21 22 23 24') == '8'\nassert solution('3 3\\n1 2 2\\n2 3 1\\n3 1 1\\n2 1 1') == '1'\nassert solution('3 3\\n1 2 2\\n2 3 1\\n3 1 1') == '1'\n"
    },
    {
        "number": 3537,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"12\"\n"
    },
    {
        "number": 3538,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 19\n15 5 3\n12 4 4\n20 10 5''') == '3'\nassert solution('''6 10\n7 5 4\n15 4 4\n10 4 5\n3 5 2\n1 2 1\n8 3 6\n10 8 5\n''') == '3'\nassert solution('''8 8\n7 6 4\n15 4 4\n10 4 5\n3 5 2\n1 2 1\n8 3 6\n10 8 5\n''') == '4'\nassert solution('''8 8\n7 6 4\n15 4 4\n10 4 5\n3 5 2\n1 2 1\n8 3 6\n10 8 5\n''') == '3'\nassert solution('''8 8\n7 6 4\n15 4 4\n10 4 5\n3 5 2\n1 2 1\n8 3 6\n10 8 5\n''') == '3'\n"
    },
    {
        "number": 3538,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 19\n15 5 3\n12 4 4\n20 10 5''') == '3'\nassert solution('''3 1\n2 4 4\n10 5 5\n5 10 5\n5 10 10''') == '1'\nassert solution('''10 2\n40 4 4\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n30 3 3\n"
    },
    {
        "number": 3538,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 10\\n2 8 3\\n1 8 3') == '3'\nassert solution('2 10\\n2 8 3\\n1 8 3') == '3'\nassert solution('3 10\\n1 9 2\\n2 9 2\\n1 9 2') == '3'\nassert solution('3 10\\n1 9 2\\n2 9 2\\n1 9 2') == '3'\nassert solution('3 10\\n1 9 2\\n2 9 2\\n1 9 2') == '3'\n"
    },
    {
        "number": 3538,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 19\n15 5 3\n12 4 4\n20 10 5''') == '3'\nassert solution('''10 100000\n10 10000\n5 100\n5 1\n5 3\n10 9\n9 10\n5 10\n5 5\n5 10\n5 10\n5 1\n5 3\n10 9\n9 10\n5 10\n5 5\n5 10\n5 10\n5 1\n5 3''') == '0'\nassert solution('''10 100000\n10 10000\n5 100\n5 1\n5 3\n10 9\n9 10\n5 10\n5 5\n5 10\n5 10\n5 1\n5 3\n10 9\n9 10\n5 10\n5 5\n5 10\n5 10\n5 1\n5 3''') == '0'\nassert solution('''10 100000\n10 10000\n5 100\n5 1\n5 3\n10 9\n9 10\n5 10\n5 5\n5 10\n5 10\n5 1\n5 3\n10 9\n9 10\n5 10\n5 5\n5 10\n5 10\n5 1\n5 3\n10 9\n9 10\n5 10\n5 5\n5 10\n5 10\n5 1\n5 3\n10 9\n9 10\n5 10\n5 5\n5 10\n5 10\n5 1\n5 3\n10 9\n9 10\n5 10\n5 5\n5 10\n5 10\n5 1\n5 3''') == '2'\nassert solution('''10 100000\n10 10000\n5 100\n5 1\n5 3\n10 9\n9 10\n5 10\n5 5\n5 10\n5 10\n5 1\n5 3\n10 9\n9 10\n5 10\n5 5\n5 10\n5 10\n5 1\n5 3\n10 9\n9 10\n5 10\n5 5\n5 10\n5 10\n5 1\n5 3\n10 9\n9 10\n5 10\n5 5\n5 10\n5 10\n5 1\n5 3\n10 9\n9 10\n5 10\n5 5\n5 10\n5 10\n5 1\n5 3\n10 9\n9 10\n5 10\n5 5\n5 10\n5 10\n5 1\n5 3''') == '0'\n"
    },
    {
        "number": 3538,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 19') == '3'\nassert solution('3 19 15') == '3'\nassert solution('3 19 19 15') == '1'\nassert solution('3 19 19 19 15') == '3'\nassert solution('3 19 19 19 19 15') == '4'\n"
    },
    {
        "number": 3538,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 19\n15 5 3\n12 4 4\n20 10 5''') == '3'\nassert solution('''10 100000\n2 1 1\n2 2 2\n4 4 4\n5 5 5\n7 7 7\n9 9 9\n10 10 10\n11 11 11\n12 12 12\n13 13 13\n14 14 14\n15 15 15\n16 16 16\n17 17 17\n18 18 18\n19 19 19\n20 20 20\n21 21 21\n22 22 22\n23 23 23\n24 24 24\n25 25 25\n26 26 26\n27 27 27\n28 28 28\n29 29 29\n30 30 30\n31 31 31\n32 32 32\n33 33 33\n34 34 34\n35 35 35\n36 36 36\n37 37 37\n38 38 38\n39 39 39\n40 40 40\n41 41 41\n42 42 42\n43 43 43\n44 44 44\n45 45 45\n46 46 46\n47 47 47\n48 48 48\n49 49 49\n50 50 50\n51 51 51\n52 52 52\n53 53 53\n54 54 54\n55 55 55\n56 56 56\n57 57 57\n58 58 58\n59 59 59\n60 60 60\n61 61 61\n62 62 62\n63 63 63\n64 64 64\n65 65 65\n66 66 66\n67 67 67\n68 68 68\n69 69 69\n70 70 70\n71 71 71\n72 72 72\n73 73 73\n74 74 74\n75 75 75\n76 76 76\n77 77 77\n78 78 78\n79 79 79\n80 80 80\n81 81 81\n82 82 82\n83 83 83\n84 84 84\n85 85 85\n86 86 86\n87 87 87\n88 88 88\n89 89 89\n90 90 90\n91 91 91\n92 92 92\n93 93 93\n94 94 94\n95 95 95\n96 96 96\n97 97 97\n98 98 98\n99 99 99\n100 100 100\n101 101 101\n102 102 102\n103 103 103\n104 104 104\n105 105 105\n106 106 106\n107 107 107\n108 108 108\n109 109 109\n110 110 110\n111 111 111\n112 112 112\n113 113 113\n114 114 114\n115 115 115\n116 116 116\n117 117 117\n118 118 118\n119 119 119\n120 120 120\n121 121 121\n122 122 122\n123 123 123\n124 124 124\n125 125 125\n126 126 126\n127 127 127\n128 128 128\n129 129 129\n130 130 130\n131 131 131\n132 132 132\n133 133 133\n134 134 134\n135 135 135\n136 136 136\n137 137 137\n138 138 138\n139 139 139\n140 140 140\n141 141 141\n142 142 142\n143 143 143\n144 144 144\n145 145 145\n146 146 146\n147 147 147\n148 148 148\n149 149 149\n150 150 150\n151 151 151\n152 152 152\n153 153 153\n154 154 154\n155 155 155\n156 156 156\n157 157 157\n158 158 158\n159 159 159\n160 160 160\n161 161 161\n162 162 162\n163 163 163\n164 164 164\n165 165 165\n166 166 166\n167 167 167\n168 168 168\n169 169 169\n170 170 170\n171 171 171\n172 172 172\n173 173 173\n174 174 174\n175 175 175\n176 176 176\n177 177 177\n178 178 178\n179 179 179\n180 180 180\n181 181 181\n182 182 182\n183 183 183\n184 184 184\n185 185 185\n186 186 186\n187 187 187\n188 188 188\n189 189 189\n190 190 190\n191 191 191\n192 192 192\n193 193 193\n194 194 194\n195 195 195\n196 196 196\n197 197 197\n198 198 198\n199 199 199\n200 200 200\n201 201 201\n202 202 202\n203 203 203\n204 204 204\n205 205 205\n206 206 206\n207 207 207\n208 208 208\n209 209 209\n210 210 210\n211 211 211\n212 212 212\n213 213 213\n214 214 214\n215 215 215\n216 216 216\n217 217 217\n218 218 218\n219 219 219\n220 220 220\n221 221 221\n222 222 222\n223 223 223\n224 224 224\n225 225 225\n226 226 226\n227 227 227\n228 228 228\n229 229 229\n230 230 230\n231 231 231\n232 232 232\n233 233 233\n234 234 234\n235 235 235\n236 236 236\n237 237 237\n238 238 238\n239 239 239\n240 240 240\n241 241 241\n242 242 242\n243 243 243\n244 244 244\n245 245 245\n246 246 246\n247 247 247\n248 248 248\n249 249 249\n250 250 250\n251 251 251\n252 252 252\n253 253 253\n254 254 254\n255 255 255\n256 256 256\n257 257 257\n258 258 258\n259 259 259\n260 260 260\n261 261 261\n262 262 262\n263 263 263\n264 264 264\n265 265 265\n266 266 266\n267 267 267\n268 268 268\n269 269 269\n270 270 270\n271 271 271\n272 272 272\n273 273 273\n274 274 274\n275 275 275\n276 276 276\n277 277 277\n278 278 278\n279 279 279\n280 280 280\n281 281 281\n282 282 282\n283 283 283\n284 284 284\n285 285 285\n286 286 286\n287 287 287\n288 288 288\n289 289 289\n290 290 290\n291 291 291\n292 292 292\n293 293 293\n294 294 294\n295 295 295\n296 296 296\n297 297 297\n298 298 298\n299 299 299\n300 300 300\n301 301 301\n302 302 302\n303 303 303\n304 304 304\n305 305 305\n306 306 306\n307 307 307\n308 308 308\n309 309 309\n310 310 310\n311 311 311\n312 312 312\n313 313 313\n314 314 314\n315 315 315\n316 316 316\n317 317 317\n318 318 318\n319 319 319\n320 320 320\n321 321 321\n322 322 322\n323 323 323\n324 324 324\n325 325 325\n326 326 326\n327 327 327\n328 328 328\n329 329 329\n330 330 330\n331 331 331\n332 332 332\n333 333 333\n334 334 334\n335 335 335\n336 336 336\n337 337 337\n338 338 338\n339 339 339\n340 340 340\n341 341 341\n342 342 342\n343 343 343\n344 344 344\n345 345 345\n346 346 346\n347 347 347\n348 348 348\n349 349 349\n350 350 350\n351 351 351\n352 352 352\n353"
    },
    {
        "number": 3538,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4\"\nprint('Passed')\n"
    },
    {
        "number": 3538,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 19\\n15 5 3\\n12 4 4\\n20 10 5\\n') == '3'\nassert solution('2 19\\n15 5 3\\n12 4 4\\n20 10 5\\n') == '3'\nassert solution('3 19\\n15 5 3\\n12 4 4\\n20 10 5\\n') == '3'\nassert solution('4 19\\n15 5 3\\n12 4 4\\n20 10 5\\n') == '3'\nassert solution('5 19\\n15 5 3\\n12 4 4\\n20 10 5\\n') == '3'\n"
    },
    {
        "number": 3538,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '3'\n"
    },
    {
        "number": 3538,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '3'\nassert solution(stdin) == '3'\nassert solution(stdin) == '5'\nassert solution(stdin) == '0'\nassert solution(stdin) == '1'\n"
    },
    {
        "number": 3539,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1\n2 2''') == '1'\nassert solution('''1 1\n1 2\n2 1''') == '0'\nassert solution('''4 2\n1 2\n4 3\n1 3\n2 1\n3 4''') == '0'\nassert solution('''4 2\n1 3\n1 4\n3 4\n4 1\n2 1\n3 1\n2 2''') == '6'\nassert solution('''8 4\n1 4\n1 5\n2 6\n1 7\n1 8\n3 9\n2 6\n2 7\n4 9\n3 8\n3 9''') == '0'\n"
    },
    {
        "number": 3539,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n1\n1 1\n''') == '1'\n\nassert solution(\n'''\n2\n1 2\n2 2\n''') == '2'\n\nassert solution(\n'''\n4\n1 1\n2 2\n1 2\n1 2\n''') == '6'\n\nassert solution(\n'''\n3\n2 2\n2 2\n1 2\n''') == '0'\n\nassert solution(\n'''\n6\n2 2\n2 2\n1 2\n2 2\n1 2\n2 2\n''') == '0'"
    },
    {
        "number": 3539,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1 1') == '1'\nassert solution('1\\n1 2') == '1'\nassert solution('1\\n1 2\\n1 3') == '2'\nassert solution('1\\n1 2\\n1 3\\n2 1\\n2 3\\n3 1') == '4'\nassert solution('1\\n1 2\\n1 3\\n2 1\\n2 3\\n3 1\\n4 1\\n4 3\\n4 2\\n4 3') == '8'\n"
    },
    {
        "number": 3539,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1\n1 1''') == 1\nassert solution('''2\n1 1\n2 1''') == 3\n'''\n"
    },
    {
        "number": 3539,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1\n1 1''') == '1'\nassert solution('''2\n1 1\n2 1''') == '2'\nassert solution('''5\n1 1\n2 1\n5 1\n3 2\n4 4''') == '7'\nassert solution('''10\n1 1\n2 1\n5 1\n3 2\n4 4\n6 2\n9 2\n7 2\n8 2\n1 2\n3 3\n5 1\n3 2''') == '111'\nprint('Passed')\n"
    },
    {
        "number": 3539,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1 1') == '1'\n\"\"\"\n"
    },
    {
        "number": 3539,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1\n1 1\n''') == '1'\nassert solution('''2\n1 1\n2 1\n''') == '0'\nassert solution('''10\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '6'\n'''\n"
    },
    {
        "number": 3539,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == str(1)\n\n\"\"\""
    },
    {
        "number": 3539,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n1 1\\n1 2') == '1'\nassert solution('1\\n1 2') == '0'\nassert solution('2\\n2 1\\n1 2') == '0'\nassert solution('2\\n2 1\\n2 3') == '1'\nassert solution('2\\n2 3\\n1 2') == '1'\n"
    },
    {
        "number": 3539,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\") == \"1\"\nassert solution(\"4\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\") == \"2\"\nassert solution(\"4\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\") == \"4\"\nassert solution(\"4\\n2 2 2 2\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\") == \"1\"\nassert solution(\"4\\n2 2 2 2\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\") == \"2\"\n"
    },
    {
        "number": 3540,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input(\"\")) == input(\"\")\nassert solution(input(\"\")) == input(\"\")\nassert solution(input(\"\")) == input(\"\")\nassert solution(input(\"\")) == input(\"\")\nassert solution(input(\"\")) == input(\"\")\n"
    },
    {
        "number": 3540,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('RGGR') == '3'\nassert solution('GBGB') == '0'\nassert solution('BYBY') == '6'\nassert solution('YRYR') == '4'\nassert solution('RBYG') == '2'\n"
    },
    {
        "number": 3540,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('RGGR') == '3'\nassert solution('GBGB') == '0'\nassert solution('BYBY') == '0'\nassert solution('YRYR') == '0'\nassert solution('RRRRRRRGGGGR') == '0'\n"
    },
    {
        "number": 3540,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(sample_input) == '3'\n'''\n"
    },
    {
        "number": 3540,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"RGGR\") == \"3\"\nassert solution(\"GBGB\") == \"0\"\nassert solution(\"BYBY\") == \"2\"\nassert solution(\"YRYR\") == \"4\"\n\"\"\"\nfrom collections import Counter"
    },
    {
        "number": 3540,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '6'\n\"\"\"\n"
    },
    {
        "number": 3540,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"RGBY\") == \"RGRG\\nGBGB\\nBYBY\"\nassert solution(\"RGGB\") == \"RGRG\\nGGBG\"\nassert solution(\"BYYY\") == \"RGRG\\nGBGB\\nBYBY\"\nassert solution(\"YRYY\") == \"RGRG\\nGBGB\\nBYBY\"\nassert solution(\"RGGR\") == \"RGRG\\nGGBG\"\n"
    },
    {
        "number": 3540,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"RGGR\") == 3\nassert solution(\"GBGB\") == 0\nassert solution(\"BYBY\") == 0\nassert solution(\"YRYR\") == 0\nassert solution(\"GGGGG\") == 10\n"
    },
    {
        "number": 3540,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"RGGR\") == 3\nassert solution(\"GBGB\") == 3\nassert solution(\"BYBY\") == 3\nassert solution(\"YRYR\") == 3\nassert solution(\"RRRGY\") == 4\n"
    },
    {
        "number": 3540,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"RGGR\") == 3\nassert solution(\"GBGB\") == 2\nassert solution(\"BYBY\") == 1\nassert solution(\"RYYR\") == 0\n\nprint('solution({})'.format(solution.__name__))\nassert solution('RGGR') == 3\n"
    },
    {
        "number": 3541,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n-2 -1 0 1 2\n2 1 0 -1 -2''') == 'AAAAA'\nassert solution('''3\n-2 -1 0\n2 1 0''') == 'BB'\nassert solution('''4\n0\n-1 0 1\n1 0 1''') == 'BB'\nassert solution('''4\n0\n-1 0 1\n-1 0 -1''') == 'BB'\nassert solution('''4\n0\n1 0 1\n1 0 -1''') == 'BB'\n"
    },
    {
        "number": 3541,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"BBAAAA\""
    },
    {
        "number": 3541,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"2\\n-1\") == \"AB\"\nassert solution(\"2\\n2\\n-1\") == \"AB\"\nassert solution(\"2\\n-1\\n0\") == \"AB\"\n"
    },
    {
        "number": 3541,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"-2 -1 0 1 2\"\n) == \"AAAAA\"\nassert solution(\n    \"2 1 0 -1 -2\"\n) == \"ABBA\"\nassert solution(\n    \"-1 -2 -3 -4\"\n) == \"BBBB\"\nassert solution(\n    \"1 1 1 1 1\"\n) == \"ABCBA\"\nassert solution(\n    \"1 1 1 1 1\"\n) == \"ABCBA\"\n"
    },
    {
        "number": 3541,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n-2 -1 0 1 2\\n2 1 0 -1 -2') == 'AAAAA'\nassert solution('10\\n-2 -1 0 1 2 3 4 5 6 7 8 9 10\\n2 1 0 -1 -2 -3 -4 -5 -6 -7 -8 -9 -10') == 'BABABABABABABABA'\nassert solution('4\\n-1 1 0 -1\\n1 1 1 1') == 'AABB'\nassert solution('2\\n-1 1\\n1 1') == 'BB'\nassert solution('10\\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\\n1 1 1 1 1 1 1 1 1 1 1 1 1') == 'BBBBBBBBBBBBBBBB'\n"
    },
    {
        "number": 3541,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n-2 -1 0 1 2\n2 1 0 -1 -2''') == 'AAAAA'\nassert solution('''8\n-1 -1 -1 -1 -1 -1 -1 -1 -1\n1 1 1 1 1 1 1 1 1''') == 'BBBBB'\nassert solution('''14\n2 3 4 5 6 7 8 9 10 11 12 13 14\n1 1 1 1 1 1 1 1 1 1 1 1 1''') == 'BBBBBBBBBBBBBBBB'\nassert solution('''10\n5 -5 -5 -5 -5 -5 -5 -5 -5\n-5 -5 5 5 5 5 5 5 5 5''') == 'AAAAAAAAAAAA'\nassert solution('''20\n1 2 -1 3 -2 -2 -3 -4 -5 -6 -7 -8 -9 -10 -11 -12 -13 -14 -15 -16 -17 -18 -19 -20\n-5 -6 -7 -8 -9 -10 -11 -12 -13 -14 -15 -16 -17 -18 -19 -20''') == 'BBBBBBBBBBBBBBBBBBBBBBBBBBBBBB'\n"
    },
    {
        "number": 3541,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n-2 -1 0 1 2''') == 'AABB'\nassert solution('''1\n1\n-1''') == 'AB'\nassert solution('''2\n1\n-2''') == 'AA'\nassert solution('''3\n1\n1\n1''') == 'AA'\nassert solution('''4\n-1\n2\n1\n-3''') == 'BABA'\n"
    },
    {
        "number": 3541,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n-2 -1 0 1 2\n2 1 0 -1 -2''') == 'AAAAA'\nassert solution('''5\n-2 -1 0 1 2\n2 1 0 -1 -2''') == 'BBBBB'\nassert solution('''8\n-2 -1 0 1 2\n2 1 0 -1 -2''') == 'AAAAB'\nassert solution('''8\n-2 -1 0 1 2\n2 1 0 -1 -2''') == 'AABBB'\nassert solution('''8\n-2 -1 0 1 2\n2 1 0 -1 -2''') == 'BBBBB'\n"
    },
    {
        "number": 3541,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n-2 -1 0 1 2''') == 'ABAAB'\nassert solution('''4\n-3 -4 -5 -6''') == 'AABB'\nassert solution('''4\n0 1 0 -1''') == 'ABABABA'\nassert solution('''7\n-3 -1 -2 -4 -5 -6 -7''') == 'AABBAABB'\nassert solution('''10\n-1 1 2 -3 -5 -8 -10 -13 -17 -19 -21 -24''') == 'AABABABABABABA'\n"
    },
    {
        "number": 3541,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n-2 -1 0 1 2\n2 1 0 -1 -2''') == 'AABB'\nassert solution('''5\n2 1 0 -1 -2\n1 1 1 1 1''') == 'AABB'\nassert solution('''8\n10 -1 5 10 10 -2 10 -3 -5 -7\n-5 -2 2 3 -2 -5 -1 -3 -7''') == 'BBBBABAB'\nassert solution('''7\n5 -2 -1 0 1 2 3\n-2 1 0 -1 -2 1 -2''') == 'BBBBBA'\nassert solution('''1\n0''') == 'A'\n"
    },
    {
        "number": 3542,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '2'\nassert solution('2 2\\n0 0\\n1 1') == '2'\nassert solution('2 2\\n0 0\\n1 1\\n2 1') == 'IMPOSSIBLE'\nassert solution('2 2\\n0 0\\n1 1\\n3 0') == 'IMPOSSIBLE'\nassert solution('2 2\\n0 0\\n1 1\\n3 1') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3542,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''6 3\n2 3\n4 0\n0 2\n6 1''') == 'IMPOSSIBLE'\nassert solution(\n'''6 4\n0 0\n0 4\n6 4\n6 4\n6 4''') == '6'\nassert solution(\n'''10 10\n10 10\n1 1\n5 5\n0 0\n0 4\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5''') == '12'\nassert solution(\n'''10 10\n1 1\n0 0\n0 4\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5''') == '12'\nassert solution(\n'''15 15\n7 8\n0 0\n0 4\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3542,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3542,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\n\nimport sys"
    },
    {
        "number": 3542,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 3\\n2 3\\n4 0\\n0 2\\n6 1\\n') == 'IMPOSSIBLE'\nassert solution('3 3\\n1 1\\n0 0\\n2 2\\n0 2\\n2 2\\n') == '3'\nassert solution('3 3\\n1 1\\n0 0\\n2 2\\n0 2\\n2 2\\n') == '3'\nassert solution('4 4\\n0 0\\n0 1\\n0 2\\n1 2\\n2 2\\n3 3\\n') == '4'\nassert solution('4 4\\n0 0\\n0 1\\n0 2\\n1 2\\n2 2\\n3 3\\n4 4\\n') == '1'\n"
    },
    {
        "number": 3542,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''6 3\n2 3\n4 0\n0 2\n6 1\n''') == \"IMPOSSIBLE\"\nassert solution(\n'''10 10\n0 1\n7 8\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n''') == \"20\"\nassert solution(\n'''7 7\n0 1\n2 3\n4 5\n6 7\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n''') == \"21\"\nassert solution(\n'''9 9\n0 1\n2 3\n4 5\n6 7\n8 9\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n''') == \"19\"\nassert solution(\n'''10 10\n0 1\n7 8\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n''') == \"20\"\n"
    },
    {
        "number": 3542,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6 3\n2 3\n4 0\n0 2\n6 1''') == \"IMPOSSIBLE\"\nassert solution('''1 2\n1 2\n2 3\n1 2''') == \"2\"\nassert solution('''5 5\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1''') == \"2\"\nassert solution('''1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == \"3\"\nassert solution('''1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == \"6\"\n"
    },
    {
        "number": 3542,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 3\\n2 3\\n4 0\\n0 2\\n6 1') == 'IMPOSSIBLE'\nassert solution('4 3\\n1 0\\n3 0\\n0 2\\n0 2') == '3'\nassert solution('2 3\\n0 0\\n1 1\\n0 1\\n1 0') == '2'\nassert solution('3 4\\n1 0\\n2 1\\n0 2\\n2 0') == '3'\nassert solution('2 3\\n0 0\\n1 1\\n0 1\\n1 0') == '2'\n"
    },
    {
        "number": 3542,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\"\n\nassert solution(stdin=\"4 5\\n0 1 0 2\\n1 0 1 0\\n1 2 0 1\\n2 1 2 0\\n1 2 1 1\") == \"3\"\n"
    },
    {
        "number": 3542,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3543,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport unittest\nfrom edabit.Test import Test"
    },
    {
        "number": 3543,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx''') == '''12\n4\n11\n3\n2'''\nassert solution('''5 5\nautocorrect\naustria\nautocorrelation\nprogram\nprogramming\ncomputer\nautocorrection\ncompetition\nzyx''') == '''3\n2\n1\n0'''\nassert solution('''5 5\nautocorrect\naustria\nautocorrelation\nprogram\nprogramming\ncomputer\nautocorrection\ncompetition\nzyx''') == '''3\n2\n1\n0'''\nassert solution('''5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrection\ncompetition\nzyx''') == '''3\n2\n1\n0'''\nassert solution('''5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrection\ncompetition\nzyx''') == '''3\n2\n1\n0'''\n"
    },
    {
        "number": 3543,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('a') == '0'\nassert solution('austria') == '11'\nassert solution('autocorrect') == '3'\nassert solution('autocorrection') == '2'\n"
    },
    {
        "number": 3543,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == \\\n'''\n12\n4\n11\n3\n2\n'''\n\nassert solution('''5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == \\\n'''\n12\n4\n11\n3\n2\n'''\n"
    },
    {
        "number": 3543,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == '''12\n4\n11\n3\n2\n'''\n\nassert solution(\n'''5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == '''4\n3\n2\n1\n'''\n\nassert solution(\n'''10 10\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == '''9\n8\n7\n6\n5\n4\n3\n2\n'''\n"
    },
    {
        "number": 3543,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 5') == ''\nassert solution('1 2') == ''\nassert solution('austria') == ''\nassert solution('autocorrect') == ''\nassert solution('program') == ''\n"
    },
    {
        "number": 3543,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx''') == '''12\n4\n11\n3\n2\n'''\nassert solution('''5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == '''12\n4\n11\n3\n2\n'''\nassert solution('''1 1\nautocorrect\nautocorrect\nautocorrelation\nautocorrect\n''') == '''5\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n'''\nassert solution('''6 5\nautocorrect\nautocorrect\nautocorrelation\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\nautocorrect\n''') == '''16\n12\n12\n12\n12\n12\n12\n12\n12\n12\n'''\nassert solution('''5 5\nabroad\nautocorrect\nautocorrect\nautocorrelation\nautocorrect\n''') == '''3\n3\n3\n3\n3\n'''\n"
    },
    {
        "number": 3543,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria''') == \\\n'''\n12\n4\n11\n3\n2\n\n'''\n"
    },
    {
        "number": 3543,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(open(\"autocorrect.test.txt\", \"r\").read()) == open(\"autocorrect.out.txt\", \"r\").read()\n-----"
    },
    {
        "number": 3543,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 5\\naustria\\nautocorrect\\nprogram\\nprogramming\\ncomputer\\nautocorrelation\\nprogramming\\ncompetition\\nzyx\\naustria') == '12\\n4\\n11\\n3\\n2\\n'\n'''\n"
    },
    {
        "number": 3544,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 3\nassert solution('0 1 1') == 3\nassert solution('1 0 1') == 3\nassert solution('1 1 0') == 3\nassert solution('1 2 0') == 3\n"
    },
    {
        "number": 3544,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 1 1') == 3\nassert solution('3') == 1\nassert solution('1 1 1') == 3\nassert solution('3 1 1') == 4\nassert solution('1 1 1') == 3\n"
    },
    {
        "number": 3544,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 1 1\\n3') == '3'\nassert solution('0 1 1\\n1') == '1'\nassert solution('0 1 1\\n0') == 'impossible'\nassert solution('0 1 1\\n1 0') == 'impossible'\nassert solution('0 1 1\\n0 0') == 'impossible'\n"
    },
    {
        "number": 3544,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''0 1 1\n0 1 1\n0 1 1''') == '3'\nassert solution('''0 0 0\n0 0 0\n0 0 0''') == 'impossible'\nassert solution('''0\n0\n0\n0''') == '3'\nassert solution('''0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n"
    },
    {
        "number": 3544,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"impossible\"\nassert solution(\"1\\n1\\n3\\n1\\n2\\n0\\n3\\n1\\n3\\n1\\n2\\n0\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1"
    },
    {
        "number": 3544,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''0\n3\n0\n1\n1''') == '3'\nassert solution('''0\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1''') == '3'\nassert solution('''0\n4\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1''') == '3'\nassert solution('''3\n3\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1"
    },
    {
        "number": 3544,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0 1 1\n0 1 1''') == 3\nassert solution('''1\n0 1 1\n0 1 1\n1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0"
    },
    {
        "number": 3544,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 3\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3544,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0\n2\n3\n4\n1\n0''') == 3\nassert solution('''0\n1\n0\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n"
    },
    {
        "number": 3544,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n0 1 1\n''') == '3'\nassert solution('''3\n5 3 0\n''') == 'impossible'\nassert solution('''3\n5 3 0\n''') == '3'\nassert solution('''3\n0 3 0\n''') == '3'\nassert solution('''3\n0 3 0\n''') == '3'\n"
    },
    {
        "number": 3545,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n---\n\n\"\"\"\n\n\"\"\"\nTest case 1\n\nbacaba\nacbab\nbacaba\n\noutput\nPre Pre In In Pre\nbacaba\nacbab\nbacaba\n\nTest case 2\n\nab\nb\n\noutput\nPre In In Pre\nbab\nab\n\nTest case 3\n\nab\nab\n\noutput\nPre In In Pre\nabab\nabab\nabab\n\n\"\"\""
    },
    {
        "number": 3545,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"\\t\") == \"\"\nassert solution(\"\\r\") == \"\"\nassert solution(\"\\n\\n\") == \"\"\n"
    },
    {
        "number": 3545,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"BIGEDCJFAH\") == \"HFBJCDEGIA\"\nassert solution(\"HFBIGEDCJA\") == \"HFBJCDEGIA\"\n\"\"\""
    },
    {
        "number": 3545,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"HFBIGEDCJA\nBIGEDCJFAH\nBIGEDCJFAH\n\"\"\") == \"\"\"Pre Post In In Pre\nHFBJCDEGIA\nBIGEDCJFAH\nIGEDCJBAFH\"\"\"\n\nassert solution(\n\"\"\"HFBIGEDCJA\nBIGEDCJFAH\nBIGEDCJFAH\n\"\"\") == \"\"\"Pre Post In In Pre\nHFBJCDEGIA\nBIGEDCJFAH\nIGEDCJBAFH\"\"\"\n\nassert solution(\n\"\"\"HFBIGEDCJA\nBIGEDCJFAH\nBIGEDCJFAH\n\"\"\") == \"\"\"Pre Post In In Pre\nHFBJCDEGIA\nBIGEDCJFAH\nIGEDCJBAFH\"\"\"\n\nassert solution(\n\"\"\"HFBIGEDCJA\nBIGEDCJFAH\nBIGEDCJFAH\n\"\"\") == \"\"\"Pre Post In In Pre\nHFBJCDEGIA\nBIGEDCJFAH\nIGEDCJBAFH\"\"\"\n\nassert solution(\n\"\"\"HFBIGEDCJA\nBIGEDCJFAH\nBIGEDCJFAH\n\"\"\") == \"\"\"Pre Post In In Pre\nHFBJCDEGIA\nBIGEDCJFAH\nIGEDCJBAFH\"\"\""
    },
    {
        "number": 3545,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('HFBIGEDCJA') == 'HFBJCDEGIA'\nassert solution('BIGEDCJFAH') == 'BIGEDCJFAH'\nassert solution('BIGEDCJFAH') == 'IGEDCJBAFH'\nassert solution('HFBIGEDCJABIGEDCJFAHBIGEDCJFAH') == 'HFBJCDEGIAIGEDCJBAFH'\n\"\"\"\n"
    },
    {
        "number": 3545,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''HFBIGEDCJA\nBIGEDCJFAH\nBIGEDCJFAH\n''') == 'Pre Post In In Pre'\nassert solution('''\nBIGEDCJFAH\nHFBIGEDCJA\nBIGEDCJFAH\n''') == 'Pre Post In In Pre'\nassert solution('''\nHFBIGEDCJA\nBIGEDCJFAH\nBIGEDCJFAH\n''') == 'Pre Post In In Pre'\nassert solution('''\nDFGKHLSQSUQ\nKHLSQDSFKUQ\nKLHQDSFKUQ\n''') == 'Pre Post In In Pre'\nassert solution('''\nDGBVJYHMN\nVJHGBDNIM\nMNBDVJYHM\n''') == 'Pre Post In In Pre'\n"
    },
    {
        "number": 3545,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('HFBIGEDCJA') == 'Pre Post In Post In Pre'\nassert solution('BIGEDCJFAH') == 'HFBJCDEGIA'\nassert solution('BIGEDCJFAH') == 'IGEDCJBAFH'\n'''\n\n\nimport sys\n\nclass TNode:\n    def __init__(self, data: str) -> None:\n        self.value = data\n        self.left = None\n        self.right = None"
    },
    {
        "number": 3545,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"HFBIGEDCJA\"\n\"BIGEDCJFAH\"\n\"BIGEDCJFAH\"\n) == \"Pre Post In Post In Pre\"\nassert solution(\n\"HFBIGEDCJA\"\n\"BIGEDCJFAH\"\n\"BIGEDCJFAH\"\n) == \"HFBJCDEGIA\"\nassert solution(\n\"HFBIGEDCJA\"\n\"BIGEDCJFAH\"\n\"BIGEDCJFAH\"\n) == \"IGEDCJBAFH\"\n"
    },
    {
        "number": 3545,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('HFBIGEDCJA') == 'Pre Post In In Pre'\nassert solution('BIGEDCJFAH') == 'HFBJCDEGIA'\nassert solution('BIGEDCJFAH') == 'IGEDCJBAFH'\n'''\n"
    },
    {
        "number": 3545,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''HFBIGEDCJA\nBIGEDCJFAH\nBIGEDCJFAH''') == 'Pre Post In In Pre'\nassert solution('''DHBDNJCA\nCDHJBS\nBDHDBJCS\nDHBCDBC\nCBBDD\nCBDCE\nDBCBC\nBCBAC\nCDHBD\nCDHBC\nDHBCB\nBDHBC\nBDHEB\nBDHEB\nBDEBD\nBEBCD\nBCBBD\nBDEBD\nCBEBC\nBCBBD\nEDDBC\nBDBCB\nBDBCB\nEDDBC\nEDDBC\nDBCBC\nBCBBD\nBDBCB\nEDDBC\nEDBCD\nDBCBC\nBCBBD\nEDBCB\nBCBBD\nBCBBD\nEDBCB\nBCBBD\nEDBCB\nEDBCD\nBCBCD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\nEDBCD\nDBCBC\nBCBBD\nEDBCD\n"
    },
    {
        "number": 3546,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n2\n10 0\n3 1 1''') == '10'\nassert solution('''2\n2\n10 0\n3 1 1\n1\n4 1 0''') == '10'\nassert solution('''2\n3\n3 1 1\n1\n4 1 0''') == '8'\nassert solution('''3\n2\n10 0\n3 1 1\n1\n4 1 0''') == '8'\nassert solution('''2\n3\n3 1 1\n1\n4 1 0''') == '4'\n"
    },
    {
        "number": 3546,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0') == '10'\nassert solution('2\\n2\\n3 2\\n2 1 0\\n1\\n2 1 0\\n1\\n3 1 0\\n1\\n4 0') == '3'\nassert solution('2\\n2\\n3 2\\n2 2 0\\n2 1 0\\n1\\n3 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0"
    },
    {
        "number": 3546,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n2\n10 0\n3 1 1\n1\n4 1 0''') == '10'\n'''\n'''\n\nfrom sys import stdin"
    },
    {
        "number": 3546,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25') == '48'\nassert solution('2\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25') == '58'\nassert solution('3\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25') == '70'\nassert solution('4\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25') == '82'\nassert solution('5\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25') == '100'\n"
    },
    {
        "number": 3546,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0') == '10'\nassert solution('3\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0') == '16'\nassert solution('3\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n1\\n4 1 0') == '26'\nassert solution('2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n1\\n4 1 0') == '16'\nassert solution('2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n1\\n4 1 0\\n1\\n4 1 0') == '16'\n"
    },
    {
        "number": 3546,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0') == '10'\nassert solution('1\\n1\\n2 1 1\\n1\\n1 2 1\\n1') == '10'\nassert solution('1\\n1\\n2 1 1\\n1\\n1 2 1\\n1 2 1') == '10'\nassert solution('1\\n1\\n2 1 1\\n1\\n1 2 1\\n1 2 1 2\\n1') == '10'\nassert solution('1\\n1\\n2 1 1\\n1\\n1 2 1\\n1 2 1 2\\n1 2 1 2 3\\n1') == '10'\n"
    },
    {
        "number": 3546,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n2\\n10 0\\n3 1 1\\n1') == 10\nassert solution('3\\n3\\n10 0\\n3 1 1\\n1\\n4 1 0\\n') == 9\nassert solution('10\\n10\\n10 0\\n3 1 1\\n1\\n4 1 0\\n') == 9\nassert solution('10\\n10\\n10 0\\n3 1 1\\n1\\n4 1 0\\n') == 9\nassert solution('10\\n10\\n10 0\\n3 1 1\\n1\\n4 1 0\\n') == 9\n"
    },
    {
        "number": 3546,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n2\\n10 0\\n3 1 1') == '10'\nassert solution('2\\n2\\n10 0\\n3 1 1\\n1') == '11'\nassert solution('2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0') == '11'\nassert solution('2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n2\\n6 1 0') == '17'\nassert solution('2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n2\\n6 1 0\\n3 2 1 0') == '21'\n"
    },
    {
        "number": 3546,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n2\\n10 0\\n3 1 1\\n1') == '10'\nassert solution('2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0') == '10'\nassert solution('1\\n1\\n1\\n1\\n1\\n1') == '5'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1') == '5'\nassert solution('2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n1\\n1\\n1\\n1') == '5'\n"
    },
    {
        "number": 3546,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2\n2\n10 0\n3 1 1''') == '10'\nassert solution('''2\n2\n10 0\n3 1 1\n1\n4 1 0''') == '10'\nassert solution('''1\n1\n10 0\n3 1 1\n1\n4 1 0''') == '0'\nassert solution('''2\n2\n10 0\n3 1 1\n1\n4 1 0''') == '0'\nassert solution('''3\n3\n10 0\n3 1 1\n1\n4 1 0\n5 1 0\n1\n4 1 0''') == '0'\n"
    },
    {
        "number": 3547,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"0 0 100 100\\n30 30 60 60\\n\"\n) == \"10000.00\"\n\nprint(solution(\"0 0 100 100\\n30 30 60 60\\n\"))\n"
    },
    {
        "number": 3547,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0 0 100 100''') == '10000.00'\nassert solution('''-10 -20 0 20''') == '10000.00'\nassert solution('''0 -0 10 10''') == '10000.00'\nassert solution('''-10 -20 100 100''') == '10000.00'\nassert solution('''-10 -20 100 -10 100''') == '10000.00'\n"
    },
    {
        "number": 3547,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n0 0 100 100\n30 30 60 60\n\"\"\") == \"10000.00\"\nassert solution(\n\"\"\"\n0 0 100 100\n30 30 60 60\n30 30 60 60\n\"\"\") == \"30000.00\"\nassert solution(\n\"\"\"\n0 0 100 100\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30"
    },
    {
        "number": 3547,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''0 0 100 100\n30 30 60 60''') == '10000.00'\nassert solution('''0 0 100 100\n30 30 60 60''') == '10000.00'\nassert solution('''2\n0 0 100 100\n30 30 60 60''') == '10000.00'\nassert solution('''2\n0 0 100 100\n-30 30 60 60''') == '-10000.00'\nassert solution('''2\n0 0 100 100\n30 30 60 60''') == '10000.00'\n"
    },
    {
        "number": 3547,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n    1\n    0 0 100 100\n    30 30 60 60\n''') == '10000.00'\n\nassert solution('''\n    2\n    0 0 100 100\n    30 30 60 60\n    30 30 60 60\n''') == '20000.00'\n'''\n"
    },
    {
        "number": 3547,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''0 0 100 100\n30 30 60 60''') == '10000.00'\n'''\n"
    },
    {
        "number": 3547,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0 0 100 100''') == 10000.0\nassert solution('''30 30 60 60''') == 10000.0\nassert solution('''100 10 40 70''') == 7000.0\nassert solution('''100 200 300 400''') == 20000.0\nassert solution('''1000 2000 3000 4000''') == 2000000.0\n''') == 2000000.0\nprint('All tests passed!')\n"
    },
    {
        "number": 3547,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    '''\n0 0 100 100\n30 30 60 60\n'''\n) == '10000.00'\n"
    },
    {
        "number": 3547,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n2\n0 0 100 100\n30 30 60 60\n''') == '10000.00'\nassert solution('''\n1\n0 0 100 100\n30 30 60 60\n''') == '10000.00'\nassert solution('''\n3\n0 0 100 100\n30 30 60 60\n0 0 50 50\n''') == '1350.00'\nassert solution('''\n4\n0 0 100 100\n30 30 60 60\n0 0 50 50\n0 0 100 100\n30 30 60 60\n''') == '1205.00'\nassert solution('''\n5\n0 0 100 100\n30 30 60 60\n0 0 50 50\n0 0 100 100\n30 30 60 60\n0 0 100 100\n30 30 60 60\n''') == '1125.00'\n"
    },
    {
        "number": 3547,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == '10000.00'\n"
    },
    {
        "number": 3548,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"5 3\n1 3\n4 5\n2 4\"\"\"\n    ) == \"5\"\n"
    },
    {
        "number": 3548,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 3\\n4 5\\n2 4') == 5\nassert solution('1 3\\n4 5\\n2 4\\n1 2\\n1 4') == 4\nassert solution('2 3\\n1 3\\n2 3') == 4\nassert solution('2 3\\n2 2') == 2\nassert solution('1 2\\n1 1') == 0\n"
    },
    {
        "number": 3548,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '5'\n'''\n"
    },
    {
        "number": 3548,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"5 3\n1 3\n4 5\n2 4\"\"\") == \"5\"\nassert solution(\"\"\"5 3\n1 3\n4 5\n2 4\n3 3\n1 2\n3 3\n2 1\n4 3\n2 4\n\"\"\") == \"5\"\nassert solution(\"\"\"5 3\n1 3\n4 5\n2 4\n3 3\n1 2\n3 3\n2 1\n4 3\n2 4\n\"\"\") == \"5\"\nassert solution(\"\"\"4 0\n1 4\n1 3\n1 2\n3 2\n1 1\n\"\"\") == \"2\"\nassert solution(\"\"\"0 0\n3 3\n2 3\n2 2\n3 2\n1 1\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3548,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 3\n1 3\n4 5\n2 4\n''') == '5'\nassert solution('''4 5\n1 3\n2 4\n3 4\n4 5\n''') == '6'\nassert solution('''5 5\n1 3\n2 4\n3 4\n4 5\n1 4\n2 4\n1 3\n2 4\n''') == '7'\nassert solution('''0 0\n''') == '1'\nassert solution('''4 1\n1 3\n2 4\n3 4\n''') == '5'\n"
    },
    {
        "number": 3548,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"5\"\n\n---\n\n>>> solution(\"5 3\")\n5\n>>> solution(\"5 3\")\n5\n>>> solution(\"3 3\")\n2\n>>> solution(\"1 1\")\n3\n>>> solution(\"2 2\")\n2\n>>> solution(\"2 3\")\n3\n>>> solution(\"2 3\")\n3\n>>> solution(\"3 3\")\n2\n>>> solution(\"3 2\")\n2\n>>> solution(\"2 2\")\n2\n>>> solution(\"2 3\")\n3\n>>> solution(\"2 2\")\n2\n>>> solution(\"3 3\")\n2\n>>> solution(\"3 2\")\n2\n>>> solution(\"2 2\")\n2\n>>> solution(\"3 3\")\n2\n>>> solution(\"3 2\")\n2\n>>> solution(\"2 2\")\n2\n>>> solution(\"3 3\")\n2\n>>> solution(\"3 2\")\n2\n>>> solution(\"2 2\")\n2\n>>> solution(\"2 3\")\n3\n>>> solution(\"3 3\")\n2\n>>> solution(\"3 2\")\n2\n>>> solution(\"2 2\")\n2\n>>> solution(\"3 3\")\n2\n>>> solution(\"3 2\")\n2\n>>> solution(\"2 2\")\n2\n>>> solution(\"3 3\")\n2\n>>> solution(\"3 2\")\n2\n>>> solution(\"2 2\")\n2\n>>> solution(\"3 3\")\n2\n>>> solution(\"3 2\")\n2\n>>> solution(\"2 2\")\n2\n>>> solution(\"2 3\")\n3\n>>> solution(\"3 3\")\n2\n>>> solution(\"3 2\")\n2\n>>> solution(\"2 2\")\n2\n>>> solution(\"2 3\")\n3\n>>> solution(\"3 3\")\n2\n>>> solution(\"3 2\")\n2\n>>> solution(\"2 2\")\n2\n>>> solution(\"3 3\")\n2\n>>> solution(\"3 2\")\n2\n>>> solution(\"2 2\")\n2\n>>> solution(\"2 3\")\n3\n>>> solution(\"3 3\")\n2\n>>> solution(\"3 2\")\n2\n>>> solution(\"2 2\")\n2\n>>> solution(\"3 3\")\n2\n>>> solution(\"3 2\")\n2\n>>> solution(\"2 2\")\n2\n>>> solution(\"2 3\")\n3\n>>> solution(\"3 3\")\n2\n>>> solution(\"3 2\")\n2\n>>> solution(\"2 2\")\n2\n>>> solution(\"2 3\")\n3\n>>> solution(\"3 3\")\n2\n>>> solution(\"3 2\")\n2\n>>> solution(\"2 2\")\n2\n>>> solution(\"2 3\")\n3\n>>> solution(\"3 3\")\n2\n>>> solution(\"3 2\")\n2\n>>> solution(\"2 2\")\n2\n>>> solution(\"2 3\")\n3\n>>> solution(\"3 3\")\n2\n>>> solution(\"3 2\")\n2\n>>> solution(\"2 2\")\n2\n>>> solution(\"3 3\")\n2\n>>> solution(\"3 2\")\n2\n>>> solution(\"2 2\")\n2\n>>> solution(\"3 3\")\n2\n>>> solution(\"3 2\")\n2\n>>> solution(\"2 2\")\n2\n>>> solution(\"3 3\")\n2\n>>> solution(\"3 2\")\n2\n>>> solution(\"2 2\")\n2\n>>> solution(\"2 3\")\n3\n>>> solution(\"3 3\")\n2\n>>> solution(\"3 2\")\n2\n>>> solution(\"2 2\")\n2\n>>> solution(\"2 3\")\n3\n>>> solution(\"3 3\")\n2\n>>> solution(\"3 2\")\n2\n>>> solution(\"2 2\")\n2\n>>> solution(\"2 3\")\n3\n>>> solution(\"3 3\")\n2\n>>> solution(\"3 2\")\n2\n>>> solution(\"2 2\")\n2\n>>> solution(\"2 3\")\n3\n>>> solution(\"3 3\")\n2\n>>> solution(\"3 2\")\n2\n>>> solution(\"2 2\")\n2\n>>> solution(\"2 3\")\n3\n>>> solution(\"3 3\")\n2\n>>> solution(\"3 2\")\n2\n>>> solution(\"2 2\")\n2\n>>> solution(\"2 3\")\n3\n>>> solution(\"3 3\")\n2\n>>> solution(\"3 2\")\n2\n>>> solution(\"2 2\")\n2\n>>> solution(\"2 3\")\n3\n>>> solution(\"3 3\")\n2\n>>> solution(\"3 2\")\n2\n>>> solution(\"2 2\")\n2\n>>> solution(\"2 3\")\n3\n>>> solution(\"3 3\")\n2\n>>> solution(\"3 2\")\n2\n>>> solution(\"2 2\")\n2\n>>> solution(\"2 3\")\n3\n>>> solution(\"3 3\")\n2\n>>> solution(\"3 2\")\n2\n>>> solution(\"2 2\")\n2\n>>> solution(\"2 3\")\n3\n>>> solution(\"3 3\")\n2\n>>> solution(\"3 2\")\n2\n>>> solution(\"2 2\")\n2\n>>> solution(\"2 3\")\n3\n>>> solution(\"3 3\")\n2\n>>> solution(\"3 2\")\n2\n>>> solution(\"2 2\")\n2\n>>> solution(\"2 3\")\n3\n>>> solution(\"3 3\")\n2\n>>> solution(\"3 2\")\n2\n>>> solution(\"2 2\")\n2\n>>> solution(\"2 3\")\n3\n>>> solution(\"3 3\")\n2\n>>> solution(\"3 2\")\n2\n>>> solution(\"2 2\")\n2\n>>> solution(\"2 3\")\n3\n>>> solution(\"3 3\")\n2\n>>> solution(\"3 2\")\n2\n>>> solution(\"2 2\")\n2\n>>> solution(\"2 3\")\n3\n>>> solution(\"3 3\")\n2\n>>> solution(\"3 2\")\n2\n>>> solution(\"2 2\")\n2\n>>> solution(\"2 3\")\n3\n>>> solution(\"3 3\")\n2\n>>> solution(\"3 2\")\n2\n>>> solution(\"2 2\")\n2\n>>> solution(\"2 3\")\n3\n>>> solution(\"3 3\")\n2\n>>> solution(\"3 2\")\n2\n>>> solution(\"2 2\")\n2\n>>> solution(\"2 3\")\n3\n>>> solution(\"3 3\")\n2\n>>> solution(\"3 2\")\n2\n>>> solution(\"2 2\")\n2\n>>> solution(\"2 3\")\n3\n>>> solution(\"3 3\")\n2\n>>> solution(\"3 2\")\n2\n>>> solution(\"2 2\")\n2\n>>> solution(\"2 3\")\n3\n>>> solution(\"3 3\")\n2\n>>> solution(\"3 2\")\n2\n>>> solution(\"2 2\")\n2\n>>> solution(\"2 3\")\n3\n>>> solution(\"3 3\")\n2\n>>> solution(\"3 2\")\n2\n>>> solution(\"2 2\")\n2\n>>> solution(\"2 3\")\n3\n>>> solution(\"3 3\")\n2\n>>> solution(\"3 2\")\n2\n>>> solution(\"2 2\")\n2\n>>> solution(\"2 3\")\n3\n>>> solution(\"3 3\")\n2\n>>> solution(\"3 2\")\n2\n>>> solution(\"2 2\")\n2\n>>> solution(\"2 3\")\n3\n>>> solution(\"3"
    },
    {
        "number": 3548,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 3\\n4 5\\n2 4\") == \"5\"\nassert solution(\"5 3\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\") == \"5\"\nassert solution(\"5 3\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\") == \"5\"\nassert solution(\"5 3\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2"
    },
    {
        "number": 3548,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n0\\n1\\n1\\n1\\n0') == '5'\nassert solution('2\\n1\\n1\\n1\\n1\\n1\\n1') == '5'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1') == '5'\nassert solution('2\\n1\\n1\\n1\\n1\\n1\\n1') == '5'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1') == '5'\n"
    },
    {
        "number": 3548,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 3\\n4 5\\n2 4\") == 5\nassert solution(\"0 0\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\\n0 6\\n0 7\\n0 8\\n0 9\\n0 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n1 16\\n1 17\\n1 18\\n1 19\\n1 20\\n1 21\\n1 22\\n1 23\\n1 24\\n1 25\\n1 26\\n2 27\\n2 28\\n2 29\\n2 30\\n2 31\\n2 32\\n2 33\\n2 34\\n2 35\\n2 36\\n2 37\\n2 38\\n3 39\\n3 40\\n3 41\\n3 42\\n3 43\\n3 44\\n3 45\\n3 46\\n3 47\\n3 48\\n3 49\\n3 50\\n4 51\\n4 52\\n4 53\\n4 54\\n4 55\\n4 56\\n4 57\\n4 58\\n4 59\\n4 60\\n4 61\\n4 62\\n4 63\\n5 64\\n5 65\\n5 66\\n5 67\\n5 68\\n5 69\\n5 70\\n5 71\\n5 72\\n5 73\\n5 74\\n5 75\\n5 76\\n5 77\\n5 78\\n5 79\\n5 80\\n5 81\\n5 82\\n5 83\\n5 84\\n5 85\\n5 86\\n5 87\\n5 88\\n5 89\\n5 90\\n5 91\\n5 92\\n5 93\\n5 94\\n5 95\\n5 96\\n5 97\\n5 98\\n5 99\\n5 100\\n5 101\\n5 102\\n5 103\\n5 104\\n5 105\\n5 106\\n5 107\\n5 108\\n5 109\\n5 110\\n5 111\\n5 112\\n5 113\\n5 114\\n5 115\\n5 116\\n5 117\\n5 118\\n5 119\\n5 120\\n5 121\\n5 122\\n5 123\\n5 124\\n5 125\\n5 126\\n5 127\\n5 128\\n5 129\\n5 130\\n5 131\\n5 132\\n5 133\\n5 134\\n5 135\\n5 136\\n5 137\\n5 138\\n5 139\\n5 140\\n5 141\\n5 142\\n5 143\\n5 144\\n5 145\\n5 146\\n5 147\\n5 148\\n5 149\\n5 150\\n5 151\\n5 152\\n5 153\\n5 154\\n5 155\\n5 156\\n5 157\\n5 158\\n5 159\\n5 160\\n5 161\\n5 162\\n5 163\\n5 164\\n5 165\\n5 166\\n5 167\\n5 168\\n5 169\\n5 170\\n5 171\\n5 172\\n5 173\\n5 174\\n5 175\\n5 176\\n5 177\\n5 178\\n5 179\\n5 180\\n5 181\\n5 182\\n5 183\\n5 184\\n5 185\\n5 186\\n5 187\\n5 188\\n5 189\\n5 190\\n5 191\\n5 192\\n5 193\\n5 194\\n5 195\\n5 196\\n5 197\\n5 198\\n5 199\\n5 200\\n5 201\\n5 202\\n5 203\\n5 204\\n5 205\\n5 206\\n5 207\\n5 208\\n5 209\\n5 210\\n5 211\\n5 212\\n5 213\\n5 214\\n5 215\\n5 216\\n5 217\\n5 218\\n5 219\\n5 220\\n5 221\\n5 222\\n5 223\\n5 224\\n5 225\\n5 226\\n5 227\\n5 228\\n5 229\\n5 230\\n5 231\\n5 232\\n5 233\\n5 234\\n5 235\\n5 236\\n5 237\\n5 238\\n5 239\\n5 240\\n5 241\\n5 242\\n5 243\\n5 244\\n5 245\\n5 246\\n5 247\\n5 248\\n5 249\\n5 250\\n5 251\\n5 252\\n5 253\\n5 254\\n5 255\\n5 256\\n5 257\\n5 258\\n5 259\\n5 260\\n5 261\\n5 262\\n5 263\\n5 264\\n5 265\\n5 266\\n5 267\\n5 268\\n5 269\\n5 270\\n5 271\\n5 272\\n5 273\\n5 274\\n5 275\\n5 276\\n5 277\\n5 278\\n5 279\\n5 280\\n5 281\\n5 282\\n5 283\\n5 284\\n5 285\\n5 286\\n5 287\\n5 288\\n5 289\\n5 290\\n5 291\\n5 292\\n5 293\\n5 294\\n5 295\\n5 296\\n5 297\\n5 298\\n5 299\\n5 300\\n5 301\\n5 302\\n5 303\\n5 304\\n5 305\\n5 306\\n5 307\\n5 308\\n5 309\\n5 310\\n5 311\\n5 312\\n5 313\\n5 314\\n5 315\\n5 316\\n5 317\\n5 318\\n5 319\\n5 320\\n5 321\\n5 322\\n5 323\\n5 324\\n5 325\\n5 326\\n5 327\\n5 328\\n5 329\\n5 330\\n5 331\\n5 332\\n5 333\\n5 334\\n5 335\\n5 336\\n5 337\\n5 338\\n5 339\\n5 340\\n5 341\\n5 342\\n5 343\\n5 344\\n5 345\\n5 346\\n5 347\\n5 348\\n5 349\\n5 350\\n5 351\\n5 352\\n5 353\\n5 354\\n5 355\\n5 356\\n5 357\\n5 358\\n5 359\\n5 360\\n5 361\\n5 362\\n5 363\\n5 364\\n5 365\\n5 366\\n5 367\\n5 368\\n5 369\\n5 370\\n5 371\\n5 372\\n5 373\\n5 374\\n5 375\\n5 376\\n5 377\\n5 378\\n5 379\\n5 380\\n5 381\\"
    },
    {
        "number": 3548,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 2\\n4 5\\n2 4\\n') == '5'\nassert solution('5 3\\n1 3\\n4 5\\n2 4\\n') == '5'\nassert solution('10 10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n') == '5'\nassert solution('4 4\\n1 2\\n2 3\\n3 4\\n4 4\\n') == '5'\nassert solution('7 6\\n5 6\\n4 5\\n3 4\\n2 3\\n1 2\\n') == '5'\n"
    },
    {
        "number": 3549,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2095\"\n'''\n\nimport math"
    },
    {
        "number": 3549,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2095\"\n\nassert solution(\"11 13 17\") == \"2095\"\nassert solution(\"5 2 4\") == \"2095\"\nassert solution(\"5 2 0\") == \"0\"\nassert solution(\"5 5 1\") == \"0\"\n"
    },
    {
        "number": 3549,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2095\"\n"
    },
    {
        "number": 3549,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"11 13 17\n5 2 4\n0 0 0\"\"\") == '2095'\nassert solution(\n\"\"\"14 79 82\n5 2 4\n1 1 1\"\"\") == '9'\nassert solution(\n\"\"\"9 9 9\n5 2 4\n1 1 1\"\"\") == '0'\nassert solution(\n\"\"\"10 100 5\n5 2 4\n3 3 4\"\"\") == '0'\nassert solution(\n\"\"\"7 15 18\n3 4 5\n5 2 4\"\"\") == '0'\n"
    },
    {
        "number": 3549,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n11 13 17\n5 2 4\n0 0 0\n\"\"\") == '2095'\n\nassert solution(\n\"\"\"\n20 9 19\n5 2 3\n0 0 0\n\"\"\") == '4093'\n\nassert solution(\n\"\"\"\n15 10 17\n5 2 3\n0 0 0\n\"\"\") == '907'\n"
    },
    {
        "number": 3549,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2095\"\n\"\"\"\n"
    },
    {
        "number": 3549,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '2095'\n'''"
    },
    {
        "number": 3549,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''11 13 17\n5 2 4\n0 0 0''') == '2095'\nassert solution('''14 50 75\n3 4 6\n0 0 0''') == '3984'\nassert solution('''9 30 6\n3 4 6\n0 0 0''') == '9357'\nassert solution('''49 109 116\n10 8 15\n5 5 5\n0 0 0''') == '54345'\nassert solution('''12 19 22\n7 10 17\n1 1 1''') == '4999'\n"
    },
    {
        "number": 3549,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"11 13 17\n5 2 4\n0 0 0\n\"\"\") == \"2095\"\n"
    },
    {
        "number": 3549,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2095'\n\"\"\"\n\nfrom math import ceil\n\nm1, m2, m3 = map(int, stdin.split())\nx1, x2, x3 = map(int, stdin.split())\ny1, y2, y3 = map(int, stdin.split())\n\nprint(ceil(min(x1 * m1 + x2 * m2 + x3 * m3, m1 * y1 + m2 * y2 + m3 * y3, m1 * y2 + m2 * y3 + m3 * y1, m1 * y3 + m2 * y1 + m3 * y2)))\n"
    },
    {
        "number": 3550,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon\\nMy name is Gon'\n\nprint solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon\\nMy name is Gon'\n\nprint solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon\\nMy name is Gon'\n\nprint solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon\\nMy name is Gon'\n\nprint solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon\\nMy name is Gon'\n\nprint solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon\\nMy name is Gon'\n\nprint solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon\\nMy name is Gon'\n\nprint solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon\\nMy name is Gon'\n\nprint solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon\\nMy name is Gon'\n\nprint solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon\\nMy name is Gon'\n\nprint solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon\\nMy name is Gon'\n\nprint solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon\\nMy name is Gon'\n\nprint solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon\\nMy name is Gon'\n\nprint solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon\\nMy name is Gon'\n\nprint solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon\\nMy name is Gon'\n\nprint solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.') == 'My name"
    },
    {
        "number": 3550,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.') == \"My name is Gon\\nMy name is Gon\"\nassert solution('var a = \"Gon\";\\nvar b = `My name is ${a}`;\\nprint b;\\nprint `My name is ${b}`;\\nend.') == \"My name is Gon\\nMy name is Gon\"\nassert solution('var a = \"Gon\";\\nvar b = `My name is ${a}`;\\nvar c = `${a} is ${b}`;\\nprint c;\\nprint `${a} is ${b}`;\\nend.') == \"My name is Gon\\nMy name is Gon\"\nassert solution('var a = \"Gon\";\\nvar b = `My name is ${a}`;\\nvar c = `${a} is ${b}`;\\nprint c;\\nprint `${a} is ${b}`;\\nend.') == \"My name is Gon\\nMy name is Gon\"\nassert solution('var a = \"Gon\";\\nvar b = `My name is ${a}`;\\nvar c = `${a} is ${b}`;\\nprint c;\\nprint `${a} is ${b}`;\\nend.') == \"My name is Gon\\nMy name is Gon\"\n"
    },
    {
        "number": 3550,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.\n'''\n) == '''\nMy name is Gon\nMy name is Gon\n'''\nassert solution(\n'''\nvar a = \"Gon\";\nvar b = `My name is ${a}`;\nprint b;\nend.\n'''\n) == '''\nMy name is Gon\n'''\nassert solution(\n'''\nvar a = \"Gon\";\nvar b = `My name is ${a}`;\nprint b;\nend.\n'''\n) == '''\nMy name is Gon\n'''\nassert solution(\n'''\nvar a = \"Gon\";\nvar b = `My name ${a}`;\nprint b;\nend.\n'''\n) == '''\nMy name is Gon\n'''\nassert solution(\n'''\nvar a = \"Gon\";\nvar b = `My name ${a}`;\nprint b;\nend.\n'''\n) == '''\nMy name is Gon\n'''\n"
    },
    {
        "number": 3550,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.\n''') == \"My name is Gon\\nMy name is Gon\"\nassert solution('''\nvar a = \"Gon\";\nvar b = `My name is ${a}`;\nprint b;\nprint `My name is ${b}`;\nend.\n''') == \"My name is Gon\\nMy name is Gon\"\nassert solution('''\nvar a = \"Gon\";\nvar b = `My name is ${a}`;\nprint b;\nprint `My name is ${b}`;\nend.\n''') == \"My name is Gon\\nMy name is Gon\"\nassert solution('''\nvar a = \"Gon\";\nvar b = `My name is ${a}`;\nprint b;\nprint `My name is ${b}`;\nend.\n''') == \"My name is Gon\\nMy name is Gon\"\nassert solution('''\nvar a = \"Gon\";\nvar b = `My name is ${a}`;\nprint b;\nprint `My name is ${b}`;\nend.\n''') == \"My name is Gon\\nMy name is Gon\"\n"
    },
    {
        "number": 3550,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n    var a = \"Gon\";\n    var b = a;\n    var c = `My name is ${a}`;\n    print c;\n    print `My name is ${b}`;\n    end\n''') == \"My name is Gon\\nMy name is Gon\"\n\nassert solution('''\n    var a = \"Gon\";\n    var b = `Gon is a good character`;\n    var c = `My name is ${b}`;\n    print c;\n    print `My name is ${a}`;\n    end\n''') == \"My name is Gon\\nMy name is Gon\"\n\nassert solution('''\n    var a = \"Gon\";\n    var b = `My name is ${a}`;\n    print b;\n    print `My name is ${a}`;\n    end\n''') == \"My name is Gon\\nMy name is Gon\"\n\nassert solution('''\n    var a = \"Gon\";\n    var b = `My name is ${a}`;\n    print b;\n    print `My name is ${a}`;\n    end\n''') == \"My name is Gon\\nMy name is Gon\"\n\nassert solution('''\n    var a = \"Gon\";\n    var b = `My name is ${a}`;\n    print b;\n    print `My name is ${a}`;\n    end\n''') == \"My name is Gon\\nMy name is Gon\""
    },
    {
        "number": 3550,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''var a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.''') == \"My name is Gon\\nMy name is Gon\"\n\nassert solution('''var a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nprint `My name is ${b}`;\nend.\n''') == \"My name is Gon\\nMy name is Gon\\nMy name is Gon\"\n\nassert solution('''var a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nvar d = `My name is ${b}`;\nprint d;\nprint `My name is ${d}`;\nend.\n''') == \"My name is Gon\\nMy name is Gon\\nMy name is Gon\"\n\nassert solution('''var a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nvar d = `My name is ${b}`;\nprint d;\nprint `My name is ${d}`;\nprint `My name is ${d}`;\nend.\n''') == \"My name is Gon\\nMy name is Gon\\nMy name is Gon\"\n\nassert solution('''var a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nvar d = `My name is ${b}`;\nprint d;\nprint `My name is ${d}`;\nprint `My name is ${d}`;\nend.\n''') == \"My name is Gon\\nMy name is Gon\\nMy name is Gon\""
    },
    {
        "number": 3550,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('var a = \"Gon\";var b = a;var c = `My name is ${a}`;print c;print `My name is ${b}`;end.') == 'My name is Gon\\nMy name is Gon'\nassert solution('var a = \"Gon\";var b = a;var c = `My name is ${a}`;print c;print `My name is ${b}`;end.\\nprint a;end.') == 'My name is Gon\\nMy name is Gon\\nGon'\nassert solution('var a = \"Gon\";var b = a;var c = `My name is ${a}`;print c;print `My name is ${b}`;end.\\nprint a;end.\\nprint a;end.') == 'My name is Gon\\nMy name is Gon\\nGon\\nGon'\nassert solution('var a = \"Gon\";var b = a;var c = `My name is ${a}`;print c;print `My name is ${b}`;end.\\nprint a;end.\\nprint a;end.\\nend.') == 'My name is Gon\\nMy name is Gon\\nGon\\nGon'\nassert solution('var a = \"Gon\";var b = a;var c = `My name is ${a}`;print c;print `My name is ${b}`;end.\\nprint a;end.\\nprint a;end.\\nend.\\nprint a;end.\\nend.') == 'My name is Gon\\nMy name is Gon\\nGon\\nGon\\nGon\\nGon'\n"
    },
    {
        "number": 3550,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''var a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend''') == \"My name is Gon\\nMy name is Gon\"\n\nassert solution('''var a = \"Gon\";\nvar b = `My name is ${a}`;\nprint b;\nprint `My name is ${b}`;\nend''') == \"My name is Gon\\nMy name is Gon\"\n\nassert solution('''var a = \"Gon\";\nvar b = `My name is ${a}`;\nprint b;\nprint `My name is ${b}`;\nend''') == \"My name is Gon\\nMy name is Gon\"\n\nassert solution('''var a = \"Gon\";\nvar b = `My name is ${a}`;\nprint b;\nprint `My name is ${b}`;\nend''') == \"My name is Gon\\nMy name is Gon\"\n\nassert solution('''var a = \"Gon\";\nvar b = `My name is ${a}`;\nprint b;\nprint `My name is ${b}`;\nend''') == \"My name is Gon\\nMy name is Gon\""
    },
    {
        "number": 3550,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"var a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.\n\"\"\") == \"\"\"My name is Gon\nMy name is Gon\"\"\"\nassert solution(\"\"\"var a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.\n\"\"\") == \"\"\"My name is Gon\nMy name is Gon\"\"\"\nassert solution(\"\"\"var a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.\n\"\"\") == \"\"\"My name is Gon\nMy name is Gon\"\"\"\nassert solution(\"\"\"var a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.\n\"\"\") == \"\"\"My name is Gon\nMy name is Gon\"\"\"\nassert solution(\"\"\"var a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.\n\"\"\") == \"\"\"My name is Gon\nMy name is Gon\"\"\"\n"
    },
    {
        "number": 3550,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\n''') == \"My name is Gon\"\nassert solution('''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nvar d = c;\nend.\n''') == \"My name is Gon\"\nassert solution('''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nvar d = c;\n''') == \"My name is Gon\"\nassert solution('''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nvar d = c;\nend.\n''') == \"My name is Gon\"\nassert solution('''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nvar d = c;\nend.\n''') == \"My name is Gon\"\n"
    },
    {
        "number": 3551,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\\n7 8\\n10\\n\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\n\"\n\"\"\"\n"
    },
    {
        "number": 3551,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n"
    },
    {
        "number": 3551,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n7 8\\n10') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1'\nassert solution('2\\n7 8\\n100') == 'impossible'\nassert solution('2\\n4\\n1') == 'fill 2\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1'\nassert solution('4\\n8 6 4 3\\n4\\n1 2\\n0') == 'transfer 1 2\\ndiscard 1\\nfill 1\\ntransfer 0 1\\ntransfer 1 2\\ndiscard 0\\ntransfer 1 1'\nassert solution('4\\n8 6 4 3\\n4\\n1 2\\n0\\n1') == 'transfer 1 2\\ndiscard 1\\nfill 1\\ntransfer 0 1\\ntransfer 1 2\\ntransfer 0\\ndiscard 0'\n"
    },
    {
        "number": 3551,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"impossible\"\nassert solution(\"\") == \"impossible\"\nassert solution(\"7 8\") == \"impossible\"\nassert solution(\"10\") == \"fill 2\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\"\nassert solution(\"10\") == \"impossible\"\n"
    },
    {
        "number": 3551,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''2\n7 8\n10'''\n    ) == '''fill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1'''\n\nassert solution(\n'''2\n7 8\n10\n111'''\n    ) == '''impossible'''\n\nassert solution(\n'''1\n0'''\n    ) == '''fill 1\ndiscard 1'''\n\nassert solution(\n'''4\n6 7 8 9 10'''\n    ) == '''fill 1\ntransfer 1 0\ntransfer 0 1\ntransfer 1 2\ntransfer 1 3\ndiscard 1\ntransfer 1 0\ntransfer 0 1\ntransfer 1 2\ntransfer 1 3\ndiscard 1'''\n\nassert solution(\n'''7\n7 7 7 7 7 7'''\n    ) == '''impossible'''"
    },
    {
        "number": 3551,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n2\n7 8\n10\n\"\"\") == \"\"\"\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\n\"\"\".strip()\n\nassert solution(\n\"\"\"\n4\n7 8 9 10\n\"\"\") == \"\"\"\nfill 2\ntransfer 0 2\ntransfer 0 1\ndiscard 0\nfill 2\ntransfer 0 1\ntransfer 0 0\ndiscard 0\n\"\"\".strip()\n\nassert solution(\n\"\"\"\n1\n2\n\"\"\") == \"\"\"\nimpossible\n\"\"\".strip()\n"
    },
    {
        "number": 3551,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(open(\"test_input_1.txt\").read()) == \"fill 0\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ndiscard 0\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\ntransfer 0 1\\ntransfer 1 0\\"
    },
    {
        "number": 3551,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"7\\n8\\n10\\n100\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\"\nassert solution(\"8\\n7\\n10\\n100\") == \"impossible\"\nassert solution(\"8\\n7\\n10\\n100\\n1\") == \"fill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\"\nassert solution(\"8\\n7\\n10\\n100\\n100\") == \"impossible\"\nassert solution(\"8\\n7\\n10\\n100\\n100\\n10\") == \"impossible\"\n"
    },
    {
        "number": 3551,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n7 8\n10''') == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\n\"\nassert solution('''4\n7 8\n10\n6\n''') == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 3\\ntransfer 3 1\\ntransfer 3 0\\ndiscard 1\\n\"\nassert solution('''5\n7 8\n10\n9\n7\n''') == \"impossible\"\nassert solution('''5\n7 8\n10\n9\n7\n''') == \"impossible\"\nassert solution('''3\n10\n8\n9\n6\n''') == \"fill 3\\ndiscard 3\\ndiscard 3\\ndiscard 3\\n\"\n"
    },
    {
        "number": 3551,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2\n7 8\n10''') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1'\nassert solution('''2\n7 8\n10\n30\nSample Output:\nimpossible''') == 'impossible'\nassert solution('''2\n1 1\n1 1\n3''') == 'fill 0\\ndiscard 0\\nfill 0\\ntransfer 0 0'\nassert solution('''2\n1 1\n1 1\n3\n''') == 'fill 0\\ndiscard 0\\nfill 0\\ntransfer 0 0'\nassert solution('''2\n1 1\n1 1\n3\n''') == 'fill 0\\ndiscard 0\\nfill 0\\ntransfer 0 0'\n"
    },
    {
        "number": 3552,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 4 3''') == '27'\nassert solution('''10 9 0''') == '27'\nassert solution('''10 1 0''') == '27'\nassert solution('''1 1 0''') == '27'\nassert solution('''1 1 1''') == '27'\n"
    },
    {
        "number": 3552,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 27\n'''\n"
    },
    {
        "number": 3552,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''10 4 3''') == '27'\nassert solution('''10 10 10''') == '0'\nassert solution('''50 1 1''') == '50'\nassert solution('''10 4 5''') == '30'\n'''\nimport sys"
    },
    {
        "number": 3552,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10 4 3''') == '27'\nassert solution('''5 7 3''') == '21'\nassert solution('''2 2 5''') == '14'\nassert solution('''12 12 3''') == '18'\nassert solution('''12 12 4''') == '16'\n"
    },
    {
        "number": 3552,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 4 3') == '27'\nassert solution('100 10 10') == '4799'\nassert solution('100 10 10') == '4799'\nassert solution('1000 1000 1000') == '3333333333'\nassert solution('1000 1000 1000') == '3333333333'\n"
    },
    {
        "number": 3552,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 4 3\\n') == '27'\nassert solution('10 7 4\\n') == '23'\nassert solution('1000 10 2\\n') == '1012'\nassert solution('100000000000 1000000000 2\\n') == '9999999999999'\nassert solution('10 3 1\\n') == '10'\n"
    },
    {
        "number": 3552,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"10 4 3\") == \"27\"\nassert solution(\"10 3 2\") == \"10\"\nassert solution(\"10 3 2\") == \"10\"\nassert solution(\"10 4 4\") == \"20\"\nassert solution(\"10 3 4\") == \"10\"\n"
    },
    {
        "number": 3552,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == solution(stdin)\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 3552,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''10 4 3''') == '27'\nassert solution('''100 5 3''') == '47'\nassert solution('''10 5 10''') == '48'\nassert solution('''100 10 10''') == '47'\nassert solution('''10000000000 10000000000 1''') == '2000000000000'\n"
    },
    {
        "number": 3552,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"10 4 3\") == \"27\"\nassert solution(\"2 1 1\") == \"2\"\nassert solution(\"10 1 1\") == \"10\"\nassert solution(\"1 10 1\") == \"10\"\nassert solution(\"1 1 1\") == \"1\"\n"
    },
    {
        "number": 3553,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4 5 6\") == \"2 -1 3\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"2 3 3\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26\") == \"1 -1\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26\") == \"-1\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26\") == \"2 3 3\"\n"
    },
    {
        "number": 3553,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 3553,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 3 5') == '2 3 1 2'\nassert solution('2 3 1 2') == '2'\nassert solution('2') == '1 3 3'\nassert solution('1 3 1 2') == '1'\nassert solution('2') == '1 1 1'\n"
    },
    {
        "number": 3553,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n1 1 1') == '3\\n-1\\n4\\n-1'\nassert solution('1 2 3\\n2\\n1 2\\n2\\n1 2\\n2\\n1 2\\n2') == '1\\n-1\\n1\\n-1'\nassert solution('1 2 3\\n2\\n1 2\\n2\\n1 2\\n2\\n1 2\\n2') == '1\\n-1\\n1\\n1'\nassert solution('5 3 4\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n1 1 1\\n2') == '3\\n-1\\n4\\n-1'\nassert solution('1 1 1\\n2\\n1 1 1\\n2\\n1 1 1\\n2\\n1 1 1\\n2\\n1 1 1\\n2') == '3\\n2\\n1\\n2'\n"
    },
    {
        "number": 3553,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\") == \"3\\n-1\\n4\\n4\"\nassert solution(\"1 1 1\\n2\") == \"1\"\nassert solution(\"1 1 1\\n2\\n1 1 1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2"
    },
    {
        "number": 3553,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2''') == '3\\n-1\\n4\\n4'\nassert solution('''4 5 5\n1 3 2 2\n2\n1 3 2''') == '3\\n-1\\n5\\n0'\nassert solution('''4 4 4\n2 2 2 2\n2\n1 3 2\n2\n1 1 1\n2\n1 1 1\n2\n1 3 2\n2\n1 3 2''') == '3\\n2\\n1\\n1'\n'''"
    },
    {
        "number": 3553,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\n''') == '3\\n-1\\n4\\n4'\nassert solution('''7 2\n2 6 1 4 4 1 3\n2\n1 3 5 3\n1\n1 1 1\n1\n''') == '2\\n-1\\n5\\n5'\nassert solution('''2 3 3\n3 2 2\n2\n2 1 2\n1\n1 1 1\n1\n''') == '2\\n-1\\n0\\n0'\nassert solution('''3 3 3\n3 2 2\n2\n2 1 2\n1\n1 1 1\n1\n''') == '2\\n-1\\n0\\n0'\nassert solution('''3 3 2\n3 2 2\n2\n2 1 2\n1\n1 1 1\n1\n''') == '2\\n-1\\n0\\n0'\n"
    },
    {
        "number": 3553,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3553,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\n''') == '3\\n-1\\n4\\n-1'\n\nassert solution('''4 3 4\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\n''') == '3\\n-1\\n3\\n1'\n\nassert solution('''4 3 4\n2 3 1 2\n2\n1 3 3\n1\n1 1 1\n2\n''') == '-1\\n-1\\n3\\n1'\n\nassert solution('''4 3 4\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\n''') == '-1\\n-1\\n3\\n1'\n\nassert solution('''4 3 4\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n''') == '-1\\n-1\\n3\\n1'"
    },
    {
        "number": 3553,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1'\n) == '3\\n-1\\n4\\n'\n\nassert solution(\n    '3 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1'\n) == '3\\n-1\\n4\\n'\n'''\n"
    },
    {
        "number": 3554,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1000 3000 1000') == '533.3333333333'\nassert solution('10 50 100') == '0.0'\nassert solution('100 100 100') == '0.0'\nassert solution('100 100 50') == '0.5'\nassert solution('10000 1 100') == '0.5'\n"
    },
    {
        "number": 3554,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == \"533.3333333333\"\n\nsolution(\"\") # \"\"\nsolution(\"1000000000 1000000000 1000000000\") # \"0\"\nsolution(\"1000000000 1000000000 10000\") # \"533.3333333333\"\nsolution(\"1000000000 1000000000 1000\") # \"533.3333333333\"\nsolution(\"1000000000 1000000000 100\") # \"533.3333333333\"\nsolution(\"1000000000 1000000000 10\") # \"533.3333333333\"\nsolution(\"1000000000 1000000000 1\") # \"533.3333333333\"\nsolution(\"1000000000 1000000000 1\") # \"533.3333333333\"\nsolution(\"1000000000 1000000000 1\") # \"533.3333333333\"\n\"\"\"\n"
    },
    {
        "number": 3554,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1000 3000 1000''') == '533.3333333333'\n'''\nassert solution('''1000 3000 1000''') == '533.3333333333'\nassert solution('''100000 10 2''') == '5.000'\nassert solution('''100000 100 10''') == '50.0'\nassert solution('''1000 1 1000''') == '0.0'\n"
    },
    {
        "number": 3554,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1000 3000 1000''') == '533.3333333333'\n'''\n"
    },
    {
        "number": 3554,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1000 3000 1000''') == '533.3333333333'\nassert solution('''1000 2000 6000''') == '533.3333333333'\nassert solution('''1000 2000 6000''') == '533.3333333333'\nassert solution('''1000 2000 6000''') == '533.3333333333'\nassert solution('''1000 2000 6000''') == '533.3333333333'\n"
    },
    {
        "number": 3554,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1000 3000 1000\\n') == '533.3333333333'\n\"\"\"\n"
    },
    {
        "number": 3554,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '533.3333333333'\n\"\"\"\n"
    },
    {
        "number": 3554,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1000 3000 1000''') == '533.3333333333'\nassert solution('''5000 3000 1000''') == '533.3333333333'\nassert solution('''1000 10000 1000''') == '533.3333333333'\nassert solution('''2 5 3''') == '1.777777777778'\nassert solution('''1000000 100000000 100000000''') == '0'\n"
    },
    {
        "number": 3554,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == \"533.3333333333\"\n\"\"\"\n"
    },
    {
        "number": 3554,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1000 3000 1000''') == '533.3333333333'\n'''\n\nfrom math import sqrt\n\nD, W, C = map(int, stdin.split())\nprint(C*D*sqrt(2)/W)"
    },
    {
        "number": 3555,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 0\n10 0\n10 10''') == '14.14'\nassert solution('''1 1\n0 0\n1 0\n1 1''') == '0.00'\nassert solution('''2 3\n1 2\n2 0\n0 0\n-1 -1\n1 1\n1 1''') == '2.46'\nassert solution('''2 2\n0 0\n0 0\n1 1\n1 1''') == '0.00'\nassert solution('''1 2\n1 2\n1 2\n1 2''') == '0.00'\n"
    },
    {
        "number": 3555,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 0\n10 0\n10 10''') == '14.14'\nassert solution('''3 0\n10 0\n10 10\n10 10''') == '14.14'\nassert solution('''2 0\n10 0\n10 10\n10 10''') == '14.14'\nassert solution('''3 0\n10 0\n10 10\n10 10''') == '14.14'\nassert solution('''2 0\n10 0\n10 10\n10 10\n10 0''') == '14.14'\n"
    },
    {
        "number": 3555,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''0 0\n10 0\n10 10''') == '14.14'\nassert solution('''0 0\n5 0\n3 4\n8 1\n10 0\n10 10''') == '12.46'\nassert solution('''0 0\n1 0\n10 0\n10 10''') == '15.16'\nassert solution('''0 0\n0 0\n10 0\n10 10''') == '15.15'\nassert solution('''0 0\n100 0\n10 0\n10 10''') == '16.17'\n"
    },
    {
        "number": 3555,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 0\n10 0\n10 10''') == '14.14'\nassert solution('''1 0\n0 0\n10 10\n10 0\n''') == '14.14'\nassert solution('''1 0\n0 0\n1 1\n0 0\n1 1\n''') == '18.18'\nassert solution('''2 0\n1 1\n1 1\n''') == '2.00'\nassert solution('''2 0\n0 0\n0 0\n''') == '2.00'\n"
    },
    {
        "number": 3555,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 0\n10 0\n10 10''') == \"14.14\"\nassert solution('''2 0\n0 0\n10 10''') == \"14.14\"\nassert solution('''3 0\n10 0\n10 10\n0 10''') == \"18.92\"\nassert solution('''2 3\n1 1\n1 1\n1 0\n0 1''') == \"5.08\"\nassert solution('''2 1\n1 1\n1 0\n0 0\n0 1''') == \"6.40\"\n"
    },
    {
        "number": 3555,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == '2.14'\nassert solution(input2) == '2.85'\nassert solution(input3) == '10.14'\nassert solution(input4) == '10.85'\nassert solution(input5) == '14.14'\n"
    },
    {
        "number": 3555,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0 0\n1 2\n-2 -1''') == '14.14'\n'''\n\nimport sys\nsys.stdin = open('text/1.in')"
    },
    {
        "number": 3555,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 0\\n2 1\\n10 10\\n10 9') == '6.21'\nassert solution('1 0\\n0 1\\n1 1') == '2.01'\nassert solution('2 0\\n10 0\\n10 10') == '15.14'\nassert solution('2 1\\n5 1\\n10 10') == '3.81'\nassert solution('1 1\\n1 1\\n1 1') == '0.00'\n"
    },
    {
        "number": 3555,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n2 0\n10 0\n10 10\n''') == '14.14'\nassert solution('''\n5 3\n1 2\n1 4\n1 1\n2 3\n2 4\n3 4\n4 1\n3 4\n1 1\n2 3\n2 4\n3 1\n3 4\n''') == '2.64'\nassert solution('''\n3 3\n1 2\n1 2\n1 2\n2 3\n2 4\n2 3\n3 4\n1 2\n1 2\n3 4\n2 3\n1 2\n1 2\n''') == '2.64'\nassert solution('''\n3 3\n1 2\n1 2\n1 2\n2 3\n2 4\n2 3\n3 4\n1 2\n1 2\n3 4\n2 3\n1 2\n1 2\n''') == '2.64'\nassert solution('''\n3 3\n1 2\n1 2\n1 2\n1 2\n2 3\n2 4\n2 3\n3 4\n1 2\n1 2\n3 4\n2 3\n1 2\n1 2\n''') == '2.64'\n"
    },
    {
        "number": 3555,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\") == \"3.14\"\nassert solution(\"2\\n0\") == \"1.4142\"\nassert solution(\"2\\n1\") == \"2.8284\"\nassert solution(\"3\\n0\") == \"0.0\"\nassert solution(\"3\\n1\") == \"1.4142\"\n"
    },
    {
        "number": 3556,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == '''123457 0\n0 2\n123458 1\n'''\nassert solution('''10 10\n12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678\n12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678\n12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678\n12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678\n12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678\n12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678\n12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678\n12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678\n12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678\n12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678\n12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678\n12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678\n12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678\n12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678\n12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678\n12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678\n12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678\n12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678\n12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678\n12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678\n12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678\n12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678\n12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678\n12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678\n12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678\n12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678\n12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678\n12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678\n12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678\n12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678\n12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678\n12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678\n12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678\n12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678\n12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678\n12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678\n12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678\n12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678\n12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678\n12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678\n12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678 12345678\n12345678 12345678 12345678 12345678 123"
    },
    {
        "number": 3556,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n\"\"\"\n) == \"\"\"123457 0\n0 2\n123458 1\"\"\"\n\nassert solution(\n\"\"\"3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n\"\"\"\n) == \"\"\"123457 0\n0 2\n123458 1\"\"\"\n\nassert solution(\n\"\"\"5\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n\"\"\"\n) == \"\"\"123457 0\n0 2\n123458 1\"\"\"\n\nassert solution(\n\"\"\"5\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n\"\"\"\n) == \"\"\"123457 0\n0 2\n123458 1\"\"\"\n\nassert solution(\n\"\"\"3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n\"\"\"\n) == \"\"\"123457 0\n0 2\n123458 1\"\"\""
    },
    {
        "number": 3556,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"\"\nassert solution(\"0\\n1\\n2\\n3\\n4\\n5\") == \"\"\nassert solution(\"0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\") == \"\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 3556,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\\\n3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == '''\\\n123457 1\n0 2\n123458 1\n'''\n"
    },
    {
        "number": 3556,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457') == '123457 0\\n0 2\\n123458 1\\n'\nassert solution('10 6\\n1 12 111 11 101\\n3 13 23 12 112\\n5 14 14 12 113\\n6 15 16 11 114\\n7 17 17 12 115\\n8 18 19 18 12 116\\n9 19 19 19 12 117\\n10 19 19 19 12 118\\n') == '1 2\\n0 3\\n7 3\\n0 4\\n1 4\\n0 5\\n1 5\\n'\nassert solution('5 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457') == '123457 0\\n0 2\\n123458 1\\n'\nassert solution('3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457') == '123457 0\\n0 2\\n123458 1\\n'\nassert solution('2 2\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457') == '123457 0\\n0 2\\n123458 1\\n'\n"
    },
    {
        "number": 3556,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == '123457 0\\n0 2\\n123458 1\\n'\n\nprint(solution('''3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n'''))\n\nassert solution('''3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == '123457 0\\n0 2\\n123458 1\\n'\n\nassert solution('''3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == '123457 0\\n0 2\\n123458 1\\n'\n\nassert solution('''3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == '123457 0\\n0 2\\n123458 1\\n'\n\nassert solution('''3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == '123457 0\\n0 2\\n123458 1\\n'"
    },
    {
        "number": 3556,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n5 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == \"\"\"\n123457 0\n0 2\n123458 1\n\"\"\"\n\nprint(solution('''\n8 4\n108934 9763 9878  186648\n100897 88890 9879  186641\n90795 78895  9879  186641\n90796 88896 9879  186642\n90797 88897  9879  186642\n'''))\n\nassert solution(\n'''\n4 5\n11223 34455 67890\n11223 34455 67890\n11223 34455 67890\n11223 34455 67890\n''') == \"\"\"\n11223 0\n0 0\n11223 0\n11223 0\n\"\"\"\n"
    },
    {
        "number": 3556,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457''') == '123457 0\\n0 2\\n123458 1'\nassert solution('''3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457''') == '123457 0\\n0 2\\n123458 1'\nprint(solution('''10000000 1 1000000000 10000\n0 99999999 1000000000\n2 99999999 8\n9 99999999 8\n2 99999999 8\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 99999999 1000000000\n0 9"
    },
    {
        "number": 3556,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457''') == \\\n'''123457 0\n0 2\n123458 1'''\nassert solution('''123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457''') == \\\n'''123457 0\n0 2\n123458 1'''\nassert solution('''123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457''') == \\\n'''123457 0\n0 2\n123458 1'''\nassert solution('''123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457''') == \\\n'''123457 0\n0 2\n123458 1'''\nassert solution('''123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457''') == \\\n'''123457 0\n0 2\n123458 1'''\n"
    },
    {
        "number": 3556,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == \\\n'''123457 0\n0 2\n123458 1\n'''"
    },
    {
        "number": 3557,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n2\\n2\\n2') == '5'\nassert solution('5\\n2 1 4 3 8') == '4'\nassert solution('10\\n3 5 4 9 2 3 8 6 7 1') == '55'\nassert solution('10\\n3 5 4 9 2 3 8 6 7 1\\n2 4 5 1 3') == '55'\nprint(solution(stdin))\n'''\n\n\nimport sys\n"
    },
    {
        "number": 3557,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n3 5 10 2 5\n2 4 5 1 3\n2 4 5 1 3\n''') == \"90\"\nassert solution('''8\n3 8 6 6 5 4 6 4\n5 4 1 2 5 1 1\n4 4 2 5 1 2 5\n4 1 2 5 1 2 5\n4 1 2 5 1 2 5\n1 4 5 1 2 5 1\n1 4 5 1 2 5 1\n''') == \"110\"\nassert solution('''10\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 5\n''') == \"600\"\nassert solution('''15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15\n15 15 15 15 15 15 15 15 15"
    },
    {
        "number": 3557,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\\n2 4 5 1 3\") == \"90\"\nassert solution(\"6\\n3 5 10 2 5 6 6\\n2 4 5 1 3 4 5\\n1 5 3 2 4 6 5\") == \"222\"\n"
    },
    {
        "number": 3557,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '90'\n\nassert solution(stdin) == '40'\n\nassert solution(stdin) == '28'\n"
    },
    {
        "number": 3557,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n5\n3 5 10 2 5\n2 4 5 1 3\n''') == '90'\nassert solution('''\n2\n1 2\n''') == '1'\nassert solution('''\n4\n4 4 4 4\n1 2 3 4\n''') == '120'\nassert solution('''\n3\n10 10 10\n1 2 3\n''') == '60'\nassert solution('''\n3\n10 10 10\n1 2 3\n''') == '60'\n"
    },
    {
        "number": 3557,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(open('test_files/Y10R5P1/A.in').read()) == '90'\n\nprint(solution(open('test_files/Y10R5P1/A.in').read()))\nassert solution(open('test_files/Y10R5P1/B.in').read()) == '137'\n\nprint(solution(open('test_files/Y10R5P1/B.in').read()))\nassert solution(open('test_files/Y10R5P1/C.in').read()) == '83'\n\nprint(solution(open('test_files/Y10R5P1/C.in').read()))\nassert solution(open('test_files/Y10R5P1/D.in').read()) == '59'\n\nprint(solution(open('test_files/Y10R5P1/D.in').read()))\nassert solution(open('test_files/Y10R5P1/E.in').read()) == '35'\n\nprint(solution(open('test_files/Y10R5P1/E.in').read()))\n"
    },
    {
        "number": 3557,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2 3 4 5 6 7\\n3 4 2 5 6 7\") == \"90\""
    },
    {
        "number": 3557,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4\\n3 2 1\\n2 1 3\") == \"60\"\nassert solution(\"5\\n3 4 2 1 4\\n2 1 4 3\") == \"90\"\nassert solution(\"2\\n5 4\\n4 5\") == \"80\"\nassert solution(\"3\\n5 2 2\\n1 2\") == \"80\"\nassert solution(\"1\\n2\\n2\") == \"0\"\n"
    },
    {
        "number": 3557,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '180'\n\"\"\"\n"
    },
    {
        "number": 3557,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\n3 5 10 2 5\\n2 4 5 1 3') == '90'\n"
    },
    {
        "number": 3558,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 2 6\n0 4 3\n0 8 2''') == '6.000000'\nassert solution('''10 10\n1 2 6\n0 4 3\n0 8 2\n1 5 7\n2 9 5\n3 8 6\n4 7 4\n5 6 3\n6 7 2\n7 8 1\n8 9 1''') == '6.000000'\nassert solution('''3 10\n1 2 6\n0 4 3\n0 8 2''') == '6.000000'\nassert solution('''4 10\n1 2 6\n0 4 3\n0 8 2\n1 5 7\n2 9 5\n3 8 6\n4 7 4\n5 6 3\n6 7 2\n7 8 1\n8 9 1''') == '6.000000'\nassert solution('''100 10\n1 2 6\n0 4 3\n0 8 2\n1 5 7\n2 9 5\n3 8 6\n4 7 4\n5 6 3\n6 7 2\n7 8 1\n8 9 1''') == '6.000000'\n"
    },
    {
        "number": 3558,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 10\n1 2 6\n0 4 3\n0 8 2''') == '6.000000'\nassert solution('''2 10\n0 1 2\n0 1 1\n''') == '2.00000'\nassert solution('''1 10\n1\n''') == '0.00000'\nassert solution('''10 10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n''') == '10.00000'\nassert solution('''1 1\n1\n''') == '0.00000'\n"
    },
    {
        "number": 3558,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 10\n1 2 6\n0 4 3\n0 8 2''') == '6.000000'\n\nassert solution('''2 2\n1 2 3\n0 3 3''') == '2.000000'\n\nassert solution('''1 1\n1 1 1\n0 0 1''') == '1.000000'\n\nassert solution('''1 1\n1 1 1\n0 0 1''') == '2.000000'\n\nassert solution('''1 1\n0 0 1\n1 1 1''') == '3.000000'"
    },
    {
        "number": 3558,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 10\n1 2 6\n0 4 3\n0 8 2''') == '6.000000'\nassert solution('''3 10\n1 3 6\n0 4 3\n0 8 2''') == '3.000000'\nassert solution('''3 10\n0 1 3\n0 4 5\n0 8 3''') == '0.000000'\nassert solution('''3 10\n0 1 2\n0 4 1\n0 8 2''') == '2.000000'\nassert solution('''3 10\n0 1 2\n0 4 2\n0 8 2''') == '1.000000'\n"
    },
    {
        "number": 3558,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 10\\n0 4 3\\n0 8 2') == '6.000000'\nassert solution('1 10\\n1 1 1\\n0 1 2\\n0 5 3') == '5.000000'\nassert solution('1 100\\n1 1 1\\n0 1 2\\n0 5 3') == '49.000000'\nassert solution('1 100\\n1 1 1\\n0 1 2\\n0 5 3') == '49.000000'\nassert solution('1 100\\n1 1 1\\n0 1 2\\n0 5 3') == '49.000000'\n"
    },
    {
        "number": 3558,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 10\n1 2 6\n0 4 3\n0 8 2''') == '6.000000'\nassert solution('''3 10\n0 4 3\n0 8 2\n1 2 6''') == '6.000000'\nassert solution('''3 10\n0 4 3\n0 8 2\n1 2 7''') == '7.000000'\nassert solution('''3 10\n1 2 6\n0 4 3\n0 8 2\n1 3 5''') == '3.000000'\nassert solution('''3 10\n1 2 6\n0 4 3\n0 8 2\n1 1 1''') == '1.000000'\n"
    },
    {
        "number": 3558,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 10\\n1 2 6\\n0 4 3\\n0 8 2\") == \"6.000000\""
    },
    {
        "number": 3558,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 10\n1 2 6\n0 4 3\n0 8 2''') == '6.000000'\nassert solution('''3 10\n0 4 3\n0 8 2''') == '6.000000'\nassert solution('''3 10\n1 2 6\n0 4 3\n0 8 2''') == '6.000000'\nassert solution('''3 10\n1 2 6\n0 4 3\n2 8 2''') == '6.000000'\nassert solution('''3 10\n1 2 6\n2 8 2''') == '6.000000'\n"
    },
    {
        "number": 3558,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 10\n1 2 6\n0 4 3\n0 8 2''') == '6.000000'\nassert solution('''3 10\n1 2 6\n0 4 3\n0 8 2''') == '6.000000'\nassert solution('''5 10\n1 2 6\n0 4 3\n0 8 2\n2 5 7\n1 3 6\nSample Output:\n15.000000\nassert solution('''2 3\n2 1 3\n1 1 1\nSample Output:\n3.000000\nassert solution('''3 10\n1 2 6\n0 4 3\n0 8 2''') == '6.000000'\n"
    },
    {
        "number": 3558,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2'\nprint(solution(stdin))\n\"\"\""
    },
    {
        "number": 3559,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 0\\n0 0') == '2'\nassert solution('2\\n2\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2.\\n2."
    },
    {
        "number": 3559,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n1 2\\n0 0\\n2 1\\n0 1') == '1.\\n.\\n'\nassert solution('2\\n1 0\\n0 0\\n2 1\\n0 1') == '1.\\n.\\n'\nassert solution('2\\n1 0\\n0 0\\n2 1\\n0 1') == '1.\\n.\\n'\nassert solution('2\\n1 0\\n0 0\\n2 1\\n0 1') == '1.\\n.\\n'\nassert solution('2\\n1 0\\n0 0\\n2 1\\n0 1') == '1.\\n.\\n'\n"
    },
    {
        "number": 3559,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n0\") == \"1.\\n..\"\nassert solution(\"4\\n0 0\\n0 0\\n1.\\n..\\n0\\n0\\n2.\\n..\\n0\") == \"1.\\n..\\n2.\\n..\"\nassert solution(\"5\\n0 0\\n0 0\\n1.\\n..\\n0\\n0\\n2.\\n..\\n0\\n0\\n3.\\n..\\n0\\n0\\n4.\\n..\\n0\\n0\\n5.\\n..\\n0\\n0\\n6.\\n..\\n0\\n0\\n7.\\n..\\n0\\n0\\n8.\\n..\\n0\\n0\\n9.\\n..\\n0\\n0\\n10.\\n..\\n0\\n0\\n11.\\n..\\n0\\n0\\n12.\\n..\\n0\\n0\\n13.\\n..\\n0\\n0\\n14.\\n..\\n0\\n0\\n15.\\n..\\n0\\n0\\n16.\\n..\\n0\\n0\\n17.\\n..\\n0\\n0\\n18.\\n..\\n0\\n0\\n19.\\n..\\n0\\n0\\n20.\\n..\\n0\\n0\\n21.\\n..\\n0\\n0\\n22.\\n..\\n0\\n0\\n23.\\n..\\n0\\n0\\n24.\\n..\\n0\\n0\\n25.\\n..\\n0\\n0\\n26.\\n..\\n0\\n0\\n27.\\n..\\n0\\n0\\n28.\\n..\\n0\\n0\\n29.\\n..\\n0\\n0\\n30.\\n..\\n0\\n0\\n31.\\n..\\n0\\n0\\n32.\\n..\\n0\\n0\\n33.\\n..\\n0\\n0\\n34.\\n..\\n0\\n0\\n35.\\n..\\n0\\n0\\n36.\\n..\\n0\\n0\\n37.\\n..\\n0\\n0\\n38.\\n..\\n0\\n0\\n39.\\n..\\n0\\n0\\n40.\\n..\\n0\\n0\\n41.\\n..\\n0\\n0\\n42.\\n..\\n0\\n0\\n43.\\n..\\n0\\n0\\n44.\\n..\\n0\\n0\\n45.\\n..\\n0\\n0\\n46.\\n..\\n0\\n0\\n47.\\n..\\n0\\n0\\n48.\\n..\\n0\\n0\\n49.\\n..\\n0\\n0\\n50.\\n..\\n0\\n0\\n51.\\n..\\n0\\n0\\n52.\\n..\\n0\\n0\\n53.\\n..\\n0\\n0\\n54.\\n..\\n0\\n0\\n55.\\n..\\n0\\n0\\n56.\\n..\\n0\\n0\\n57.\\n..\\n0\\n0\\n58.\\n..\\n0\\n0\\n59.\\n..\\n0\\n0\\n60.\\n..\\n0\\n0\\n61.\\n..\\n0\\n0\\n62.\\n..\\n0\\n0\\n63.\\n..\\n0\\n0\\n64.\\n..\\n0\\n0\\n65.\\n..\\n0\\n0\\n66.\\n..\\n0\\n0\\n67.\\n..\\n0\\n0\\n68.\\n..\\n0\\n0\\n69.\\n..\\n0\\n0\\n70.\\n..\\n0\\n0\\n71.\\n..\\n0\\n0\\n72.\\n..\\n0\\n0\\n73.\\n..\\n0\\n0\\n74.\\n..\\n0\\n0\\n75.\\n..\\n"
    },
    {
        "number": 3559,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nexpected = \"\"\"2\n1 2\n0 0\n0 0\n0 0\n0 0\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n"
    },
    {
        "number": 3559,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\n>>> solution(\"2\")\n'2'\n>>> solution(\"5 2\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n2 0 2 0 0\\n0 2 0 2 0\\n0 0 0 0 2\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\"
    },
    {
        "number": 3559,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 3559,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''0 0\n0 0\n1.''') == '1.'\n\nassert solution(\n'''0 0\n0 0\n2.''') == '2.'\n\nassert solution(\n'''0 0\n1 1\n1 1\n''') == '2.\\n2.'\n\nassert solution(\n'''3 3\n3 2\n2 3\n1 2\n2 1\n1 3\n2 1\n2 3\n3 3\n''') == '2.\\n2.\\n2.\\n2.'\n\nassert solution(\n'''3 3\n2 2\n2 1\n1 1\n3 3\n''') == '2.\\n2.\\n2.\\n2.'"
    },
    {
        "number": 3559,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''0 0\n0 0\n1.\n..\n0\n''') == '1.\\n..\\n'\nassert solution('''0 0\n0 0\n1.\n..\n0\n''') == '1.\\n..\\n'\nassert solution('''0 0\n0 0\n1.\n1.\n1.\n1.\n0\n0\n1.\n1.\n1.\n1.\n0\n0\n0\n0\n1.\n1.\n1.\n1.\n0\n0\n0\n0\n0\n0\n1.\n1.\n1.\n1.\n0\n0\n0\n0\n0\n0\n0\n1.\n1.\n1.\n1.\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0"
    },
    {
        "number": 3559,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n0 0\n0 0\n1.\n..\n0\n\"\"\") == \"\"\"1.\n..\n\"\"\"\n"
    },
    {
        "number": 3559,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0 0\\n0 0\\n1.\\n..\\n0\") == \"1.\\n..\\n\"\nassert solution(\"0 0\\n0 0\\n1.\\n.\\n0\") == \"1.\\n.\\n\"\nassert solution(\"0 0\\n0 0\\n1.\\n.\\n2\") == \"2.\\n.\\n\"\nassert solution(\"0 0\\n0 0\\n1.\\n.\\n0\") == \"1.\\n.\\n\"\nassert solution(\"1 1\\n0 0\\n1.\\n.\\n2\") == \"2.\\n.\\n\"\n"
    },
    {
        "number": 3560,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3560,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nimport sys\nfrom collections import deque\n\nclass Solution:\n    def __init__(self) -> None:\n        self.stack = deque()\n\n    def read(self) -> str:\n        return sys.stdin.readline().strip()\n\n    def read_int(self) -> int:\n        return int(self.read())\n\n    def read_int_arr(self) -> list[int]:\n        return [self.read_int() for _ in range(self.read_int())]\n\n    def read_int_arr_2d(self) -> list[list[int]]:\n        return [self.read_int_arr() for _ in range(self.read_int())]\n\n    def read_int_arr_3d(self) -> list[list[list[int]]]:\n        return [self.read_int_arr_2d() for _ in range(self.read_int())]\n\n    def read_int_arr_4d(self) -> list[list[list[list[int]]]]:\n        return [self.read_int_arr_3d() for _ in range(self.read_int())]\n\n    def solve_helper(self, n: int, q: int) -> None:\n        nums = self.read_int_arr_2d()\n        nums.sort()\n        for _ in range(q):\n            nums, current_number = self.solve(nums, self.read_int())\n            print(current_number)\n\n    def solve(self, nums: list[list[int]], n: int) -> list[list[int]]:\n        current_number = -1\n        for row in nums:\n            if row[0] == n:\n                return [row], row[0]\n            if row[0] > n:\n                return [row], row[0]\n            if row[0] <= n:\n                if row[0] == current_number:\n                    return [row], row[0]\n                current_number = row[0]\n        return nums, current_number"
    },
    {
        "number": 3560,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"3\\na\") == \"\"\nassert solution(\"3\\na\\nb\") == \"\"\nassert solution(\"3\\na\\nb\\nabc\") == \"\"\n"
    },
    {
        "number": 3560,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"1\"\nassert solution(\"a\\nbc\\nabc\") == \"2\\n1\"\nassert solution(\"3\\na\\nb\\nc\\n4\\n1a\\n2b\\n3c\\n5\\n1a\\n2b\\n3c\\n6\\n1a\\n2b\\n3c\\n7\\n1a\\n2b\\n3c\\n8\\n1a\\n2b\\n3c\\n9\\n1a\\n2b\\n3c\\n10\\n1a\\n2b\\n3c\\n11\\n1a\\n2b\\n3c\\n12\\n1a\\n2b\\n3c\\n13\\n1a\\n2b\\n3c\\n14\\n1a\\n2b\\n3c\\n15\\n1a\\n2b\\n3c\\n16\\n1a\\n2b\\n3c\\n17\\n1a\\n2b\\n3c\\n18\\n1a\\n2b\\n3c\\n19\\n1a\\n2b\\n3c\\n20\\n1a\\n2b\\n3c\\n21\\n1a\\n2b\\n3c\\n22\\n1a\\n2b\\n3c\\n23\\n1a\\n2b\\n3c\\n24\\n1a\\n2b\\n3c\\n25\\n1a\\n2b\\n3c\\n26\\n1a\\n2b\\n3c\\n27\\n1a\\n2b\\n3c\\n28\\n1a\\n2b\\n3c\\n29\\n1a\\n2b\\n3c\\n30\\n1a\\n2b\\n3c\\n31\\n1a\\n2b\\n3c\\n32\\n1a\\n2b\\n3c\\n33\\n1a\\n2b\\n3c\\n34\\n1a\\n2b\\n3c\\n35\\n1a\\n2b\\n3c\\n36\\n1a\\n2b\\n3c\\n37\\n1a\\n2b\\n3c\\n38\\n1a\\n2b\\n3c\\n39\\n1a\\n2b\\n3c\\n40\\n1a\\n2b\\n3c\\n41\\n1a\\n2b\\n3c\\n42\\n1a\\n2b\\n3c\\n43\\n1a\\n2b\\n3c\\n44\\n1a\\n2b\\n3c\\n45\\n1a\\n2b\\n3c\\n46\\n1a\\n2b\\n3c\\n47\\n1a\\n2b\\n3c\\n48\\n1a\\n2b\\n3c\\n49\\n1a\\n2b\\n3c\\n50\\n1a\\n2b\\n3c\\n51\\n1a\\n2b\\n3c\\n52\\n1a\\n2b\\n3c\\n53\\n1a\\n2b\\n3c\\n54\\n1a\\n2b\\n3c\\n55\\n1a\\n2b\\n3c\\n56\\n1a\\n2b\\n3c\\n57\\n1a\\n2b\\n3c\\n58\\n1a\\n2b\\n3c\\n59\\n1a\\n2b\\n3c\\n60\\n1a\\n2b\\n3c\\n61\\n1a\\n2b\\n3c\\n62\\n1a\\n2b\\n3c\\n63\\n1a\\n2b\\n3c\\n64\\n1a\\n2b\\n3c\\n65\\n1a\\n2b\\n3c\\n66\\n1a\\n2b\\n3c\\n67\\n1a\\n2b\\n3c\\n68\\n1a\\n2b\\n3c\\n69\\n1a\\n2b\\n3c\\n70\\n1a\\n2b\\n3c\\n71\\n1a\\n2b\\n3c\\n72\\n1a\\n2b\\n3c\\n73\\n1a\\n2b\\n3c\\n74\\n1a\\n2b\\n3c\\n75\\n1a\\n2b\\n3c\\n76\\n1a\\n2b\\n3c\\n77\\n1a\\n2b\\n3c\\n78\\n1a\\n2b\\n3c\\n79\\n1a\\n2b\\n3c\\n80\\n1a\\n2b\\n3c\\n81\\n1a\\n2b\\n3c\\n82\\n1a\\n2b\\n3c\\n83\\n1a\\n2b\\n3c\\n84\\n1a\\n2b\\n3c\\n85\\n1a\\n2b\\n3c\\n86\\n1a\\n2b\\n3c\\n87\\n1a\\n2b\\n3c\\n88\\n1a\\n2b\\n3c"
    },
    {
        "number": 3560,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\nabc\na\nbc''') == '1'\nassert solution('''3\nabc\na\nbc\n1 abca\n2 1\n2 3''') == '1'\nassert solution('''2\nabc\na\nbc\n1 abca\n2 1\n2 3''') == '1'\nassert solution('''2\nabc\na\nbc\n1 abca\n2 1\n2 3''') == '1'\nassert solution('''4\nab\na\nbc\na\nb\n1 aba\n2 1\n2 3\n2 b\n1 abca\n2 1\n2 3\n2 b''') == '1'\n"
    },
    {
        "number": 3560,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3560,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\nabc\na\nbc\n''') == '''1\n1\n1\n'''\nassert solution('''5\nhaha\nhahah\nhahaha\nhahahaha\nhahaha\n''') == '''1\n1\n2\n'''\nassert solution('''2\na\nb\n''') == '''1\n1\n'''\nassert solution('''4\na\nba\nbab\nbabababab\n''') == '''1\n1\n2\n2\n2\n'''\nassert solution('''5\na\na\na\na\na\n''') == '''1\n1\n1\n1\n1\n1\n'''\n"
    },
    {
        "number": 3560,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\na\nbc\nabc''') == '1'\nassert solution('''3\na\nbc\nabc''') == '1'\nassert solution('''3\na\nbc\nabc''') == '1'\nassert solution('''3\na\nbc\nabc''') == '1'\nassert solution('''3\na\nbc\nabc''') == '1'\n"
    },
    {
        "number": 3560,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\nabc\\nab\\nab\\n4') == '1\\n1\\n0\\n0'\nassert solution('3\\nab\\nabc\\n2\\n1 ab') == '1\\n0\\n0\\n1'\nassert solution('4\\nabc\\nab\\nab\\n4') == '0\\n1\\n0\\n1'\nassert solution('4\\nabc\\nab\\nabc\\n4') == '0\\n0\\n0\\n1'\nassert solution('6\\nabab\\naab\\nab\\n4\\n1 abc') == '1\\n0\\n0\\n0\\n1\\n1'\n"
    },
    {
        "number": 3560,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\na\nbc\nabc\n3\n1 abca\n2 1\n2 3''') == '1'\nassert solution('''3\naa\nbc\nabc\n3\n1 abca\n2 1\n2 3''') == '0'\nassert solution('''3\naaaaa\nbc\nabc\n3\n1 abca\n2 1\n2 3''') == '3'\nassert solution('''10\na\nbb\nccc\nd\nf\ng\nh\ni\nj\nk\nl\nm\nn\no\np\nq\nr\ns\nt\nu\nv\nw\nx\ny\nz\n1 abc\n2 abba\n3 cba\n4 b\n5 bb\n6 bbb\n7 d\n8 e\n9 f\n10 g\n11 h\n12 i\n13 j\n14 k\n15 l\n16 m\n17 n\n18 o\n19 p\n20 q\n21 r\n22 s\n23 t\n24 u\n25 v\n26 w\n27 x\n28 y\n29 z\n30''') == '13'\n\nassert solution('''3\na\na\na\n3\n1 abca\n2 1\n2 3''') == '1'"
    },
    {
        "number": 3561,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"1 1 1 1\"\n) == \"YES\"\nassert solution(\n    \"1 1 1 4\"\n) == \"NO\"\nassert solution(\n    \"4 2 2 2\"\n) == \"NO\"\nassert solution(\n    \"4 1 1 1\"\n) == \"NO\"\nassert solution(\n    \"10 10 10 10\"\n) == \"YES\"\n"
    },
    {
        "number": 3561,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 1 1 1''') == 'YES'\nassert solution('''1 1 1 2''') == 'NO'\nassert solution('''1 1 1 2''') == 'YES'\nassert solution('''1 1 1 2''') == 'YES'\nassert solution('''1 1 1 1''') == 'YES'\n"
    },
    {
        "number": 3561,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 1 1 1''') == 'YES'\nassert solution('''2 4 3 4''') == 'NO'\nassert solution('''1 2 3 4''') == 'YES'\nassert solution('''10 10 10 10''') == 'YES'\nassert solution('''2 4 5 3''') == 'NO'\n"
    },
    {
        "number": 3561,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 1 1 1\") == \"YES\"\nassert solution(\"2 1 1 1\") == \"NO\"\nassert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"4 1 1 1\") == \"NO\"\nassert solution(\"5 1 1 1\") == \"YES\"\n"
    },
    {
        "number": 3561,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"1 1 1 5\") == \"NO\"\nassert solution(\"1 1 1 10\") == \"YES\"\nassert solution(\"2 1 1 1\") == \"NO\"\nassert solution(\"2 1 1 2\") == \"NO\"\n"
    },
    {
        "number": 3561,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\n\"\"\"\nimport sys\n"
    },
    {
        "number": 3561,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"1 0 1 1\") == \"NO\"\nassert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"2 2 2 2\") == \"YES\"\nassert solution(\"3 3 3 3\") == \"YES\"\n"
    },
    {
        "number": 3561,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1 1 1') == 'YES'\nassert solution('10 1 10 1') == 'YES'\nassert solution('5 5 4 4') == 'YES'\nassert solution('2 3 4 5') == 'YES'\nassert solution('3 4 4 5') == 'NO'\n"
    },
    {
        "number": 3561,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1 1 1') == \"YES\"\nassert solution('1 1 1 2') == \"NO\"\nassert solution('1 1 2 2') == \"YES\"\nassert solution('1 1 2 1') == \"NO\"\nassert solution('1 2 1 1') == \"NO\"\n"
    },
    {
        "number": 3561,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1 1 1') == 'YES'\nassert solution('1 1 2 2') == 'YES'\nassert solution('1 1 2 2') == 'NO'\nassert solution('1 1 1 1') == 'YES'\nassert solution('1 2 2 1') == 'YES'\n"
    },
    {
        "number": 3562,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n-----\n\"\"\""
    },
    {
        "number": 3562,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 96\n-0.0080 1.5417 25.0000\n-0.0080 1.5417 25.0000''') == '80.5696000000'\nassert solution('''1 96\n-0.0080 1.5417 25.0000\n-0.0080 1.5417 25.0000''') == '80.5696000000'\nassert solution('''2 10\n-0.0080 1.5417 25.0000\n-0.0080 1.5417 25.0000''') == '80.5696000000'\nassert solution('''2 5\n-0.0080 1.5417 25.0000\n-0.0080 1.5417 25.0000''') == '80.5696000000'\nassert solution('''3 1\n-0.0080 1.5417 25.0000\n-0.0080 1.5417 25.0000\n-0.0080 1.5417 25.0000''') == '100.00000'\n"
    },
    {
        "number": 3562,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nN, T = map(int, stdin.readline().split())\narr = [list(map(float, stdin.readline().split())) for _ in range(N)]"
    },
    {
        "number": 3562,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 3562,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4 5') == '13'\nassert solution('1 2 3 4 5 -1 -1 -1') == '11'\nassert solution('1 2 3 4 -1 -1 -1') == '11'\nassert solution('1 2 3 4 5 -1 -1 -1') == '13'\nassert solution('1 2 3 4 5 -1 -1 -100') == '89'\n"
    },
    {
        "number": 3562,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000') == '80.5696000000'\nassert solution('2 10\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000') == '80.5696000000'\nassert solution('1 100\\n2') == '100.0000'\nassert solution('1 100\\n0.5') == '50.0000'\nassert solution('1 100\\n0.5') == '50.0000'\n"
    },
    {
        "number": 3562,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000') == '80.5696000000'\nassert solution('2 96\\n1.0 2.0 2.0\\n1.0 2.0 2.0') == '30.0'\nassert solution('3 48\\n0.0475 1.0569 2.6200\\n0.0217 0.1169 1.6929\\n0.3800 0.3339 1.3829\\n0.9690 0.0802 1.4332') == '45.8656'\nassert solution('4 45\\n-0.0055 -0.0243 -0.0656 -0.1152\\n-0.0581 -0.0243 -0.1152 -0.0656\\n-0.0243 -0.0581 -0.1152 -0.0656\\n-0.0243 -0.1152 -0.0656 -0.1152\\n-0.0243 -0.1152 -0.0656 -0.1152') == '20.1493'\nprint(solution(input()))\n"
    },
    {
        "number": 3562,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input) == output\nassert solution(\"1 10\") == 10\nassert solution(\"2 5\") == 15\nassert solution(\"2 11\") == 17\nassert solution(\"3 0.5 0.5\") == 0\n"
    },
    {
        "number": 3562,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000') == '80.5696000000'\nassert solution('0 0\\n0 0\\n0 0') == '0.0000'\nassert solution('1 0\\n0 0\\n0 0') == '0.0000'\nassert solution('1 1\\n1 1\\n1 1') == '100.0000'\nassert solution('10 0\\n0 0\\n0 0') == '1.0000'\n"
    },
    {
        "number": 3562,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == output\n'''\n"
    },
    {
        "number": 3563,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n0 0 1 1 1 0 0 1\n''') == '2'\nassert solution('''5\n-0.5 -1.5 -1.5 -0.5 -0.5\n0.5 0.5 0.5 0.5 0.5\n1.5 1.5 1.5 1.5 1.5\n0.5 0.5 0.5 0.5 0.5\n0.5 1.5 0.5 1.5 0.5\n-0.5 -1.5 -1.5 -0.5 -0.5\n''') == '5'\nassert solution('''8\n-0.5 -1.5 -1.5 -0.5 -0.5 -0.5 -0.5 -0.5\n0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5\n1.5 1.5 1.5 1.5 1.5 1.5 1.5 1.5\n0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5\n0.5 1.5 0.5 1.5 0.5 1.5 0.5 1.5\n-0.5 -1.5 -1.5 -0.5 -0.5 -0.5 -0.5\n0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5\n1.5 1.5 1.5 1.5 1.5 1.5 1.5 1.5\n0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5\n0.5 1.5 0.5 1.5 0.5 1.5 0.5 1.5\n-0.5 -1.5 -1.5 -0.5 -0.5 -0.5 -0.5\n0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5\n1.5 1.5 1.5 1.5 1.5 1.5 1.5 1.5\n0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5\n0.5 1.5 0.5 1.5 0.5 1.5 0.5 1.5\n-0.5 -1.5 -1.5 -0.5 -0.5 -0.5 -0.5\n0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5\n1.5 1.5 1.5 1.5 1.5 1.5 1.5 1.5\n0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5\n0.5 1.5 0.5 1.5 0.5 1.5 0.5 1.5\n-0.5 -1.5 -1.5 -0.5 -0.5 -0.5 -0.5\n0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5\n1.5 1.5 1.5 1.5 1.5 1.5 1.5 1.5\n0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5\n0.5 1.5 0.5 1.5 0.5 1.5 0.5 1.5\n-0.5 -1.5 -1.5 -0.5 -0.5 -0.5 -0.5\n0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5\n1.5 1.5 1.5 1.5 1.5 1.5 1.5 1.5\n0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5\n0.5 1.5 0.5 1.5 0.5 1.5 0.5 1.5\n-0.5 -1.5 -1.5 -0.5 -0.5 -0.5 -0.5\n0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5\n1.5 1.5 1.5 1.5 1.5 1.5 1.5 1.5\n0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5\n0.5 1.5 0.5 1.5 0.5 1.5 0.5 1.5\n-0.5 -1.5 -1.5 -0.5 -0.5 -0.5 -0.5\n0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5\n1.5 1.5 1.5 1.5 1.5 1.5 1.5 1.5\n0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5\n0.5 1.5 0.5 1.5 0.5 1.5 0.5 1.5\n-0.5 -1.5 -1.5 -0.5 -0.5 -0.5 -0.5\n0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5\n1.5 1.5 1.5 1.5 1.5 1.5 1.5 1.5\n0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5\n0.5 1.5 0.5 1.5 0.5 1.5 0.5 1.5\n-0.5 -1.5 -1.5 -0.5 -0.5 -0.5 -0.5\n0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5\n1.5 1.5 1.5 1.5 1.5 1.5 1.5 1.5\n0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5\n0.5 1.5 0.5 1.5 0.5 1.5 0.5 1.5\n-0.5 -1.5 -1.5 -0.5 -0.5 -0.5 -0.5\n0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5\n1.5 1.5 1.5 1.5 1.5 1.5 1.5 1.5\n0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5\n0.5 1.5 0.5 1.5 0.5 1.5 0.5 1.5\n-0.5 -1.5 -1.5 -0.5 -0.5 -0.5 -0.5\n0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5\n1.5 1.5 1.5 1.5 1.5 1.5 1.5 1.5\n0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5\n0.5 1.5 0.5 1.5 0.5 1.5 0.5 1.5\n-0.5 -1.5 -1.5 -0.5 -0.5 -0.5 -0."
    },
    {
        "number": 3563,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 2\n\n-----Test-----\nTest.assertEquals(solution(\"4 0 0 1 1 1 0 0 1\"), 2)\nTest.assertEquals(solution(\"6 0 0 1 1 1 1 0 0 1 1 0 0 1\"), 3)\nTest.assertEquals(solution(\"11 0 0 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3563,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''4 0 0 1 1 1 0 0 1\n''') == '2'\n'''"
    },
    {
        "number": 3563,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''4\n0 0 1 1 1 0 0 1\n''') == '2'\n\nassert solution(\n'''5\n0 0 1 1 1 0 0\n''') == '3'\n\nassert solution(\n'''15\n
    },
    {
        "number": 3563,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 0 0 1 1 1 0 0 1') == '2'\nassert solution('3 3 3 3 3 3 3 3 3') == '3'\nassert solution('4 10 -3 1 10 -4 -3 -5 0 0 0 0 0 0 -1 -1') == '3'\nassert solution('1 1 2 2 3 3 4 4 4 3') == '2'\nassert solution('2 2 -3 -2 2 -4 2 2 1') == '2'\n"
    },
    {
        "number": 3563,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 0 0 1 1 1 0 0 1''') == '2'\nassert solution('''5 0 0 1 1 1 0 0 1''') == '1'\nassert solution('''5 4 -2 1 1 1 0 0 1''') == '4'\nassert solution('''4 2 -1 3 3 0 0 1''') == '2'\nassert solution('''7 -1 -1 0 1 1 1 0 0 1''') == '1'\n"
    },
    {
        "number": 3563,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3563,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\"\nassert solution
    },
    {
        "number": 3563,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 0 0 1 1 1 0 0 1') == '2'\nassert solution('5 0 0 1 1 1 0 0 1') == '1'\nassert solution('2 2 2 2 1 2 2 1 2 1 2 1') == '2'\nassert solution('2 3 2 1 2 2 2 1 1 2 2 2 1') == '3'\nassert solution('1 5 1 1 1 5 1 1 1 1 5 1 1 1 1 1') == '1'\n"
    },
    {
        "number": 3563,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 0 0 1 1 1 0 0 1') == '2'\n'''\nn = int(stdin.readline())\ncoords = [int(x) for x in stdin.readline().split()]"
    },
    {
        "number": 3564,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1400\"\n\"\"\"\n"
    },
    {
        "number": 3564,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3 2') == '1400'\nassert solution('2 3 3') == 'impossible'\nassert solution('2 3 2\\n0 0 400\\n1000 0 400\\n2000 0 400') == '1400'\nassert solution('2 3 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150') == 'impossible'\nassert solution('3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150') == 'impossible'\n"
    },
    {
        "number": 3564,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 2 3''') == '1400'\nassert solution('''0 0 400''') == 'impossible'\nassert solution('''1000 0 400''') == '1400'\nassert solution('''2000 0 400''') == '1400'\nassert solution('''300 0 150''') == 'impossible'\n"
    },
    {
        "number": 3564,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1400\"\n"
    },
    {
        "number": 3564,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 2 3\n0 0 400\n1000 0 400\n2000 0 400\n300 0 150\n1300 0 150''') == '1400'\n\nassert solution('''1 1 100\n0 0 0\n1000 0 0\n2000 0 0\n300 0 0\n1300 0 0''') == 'impossible'\n\nassert solution('''1 1 1\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000 0 0\n3000 0 0\n4 100 0\n1000 0 0\n2000"
    },
    {
        "number": 3564,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150') == '1400'\nassert solution('4 1 1\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150') == 'impossible'\nassert solution('7 4 4\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n300 0 500\\n2000 0 500\\n3000 0 500\\n1300 0 500') == 'impossible'\nassert solution('6 2 2\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n3000 0 500\\n1300 0 500') == 'impossible'\nassert solution('6 1 2\\n0 0 400\\n1000 0 400\\n2000 0 400\\n3000 0 500\\n1300 0 500') == 'impossible'\n"
    },
    {
        "number": 3564,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1400\"\n\"\"\""
    },
    {
        "number": 3564,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 2 3\n0 0 400\n1000 0 400\n2000 0 400\n300 0 150\n1300 0 150''') == '1400'\nassert solution('''3 2 3\n0 0 400\n1000 0 400\n2000 0 400\n300 0 150\n1300 0 150\n500 0 800''') == 'impossible'\n'''"
    },
    {
        "number": 3564,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 2 3') == '1400'\nassert solution('2 1 1') == '1000'\nassert solution('2 2 1') == 'impossible'\nassert solution('1000 0 400') == '1000'\nassert solution('1000 0 400\\n300 0 150') == '300'\n"
    },
    {
        "number": 3564,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(sys.stdin.read()))\n"
    },
    {
        "number": 3565,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('stockholm\\noslo\\nhelsinki\\nkopenhagen\\n') == '1549'\nassert solution('stockholm\\noslo\\nkopenhagen\\nkopenhagen\\n') == '1549'\nassert solution('stockholm\\nberlin\\noslo\\nberlin\\n') == '1675'\nassert solution('stockholm\\nberlin\\nhelsinki\\noslo\\n') == '1675'\nassert solution('stockholm\\nberlin\\nhelsinki\\nkopenhagen\\n') == '1675'\n"
    },
    {
        "number": 3565,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3907\"\n\"\"\",\n    'test.py': \"\"\"\nfrom typing import Callable, Set, Tuple, List\nfrom unittest import TestCase\n\nfrom solutions.kyu_7.ticket_to_ride1 import solution\nfrom solutions.kyu_7.ticket_to_ride1 import _find_routes\nfrom solutions.kyu_7.ticket_to_ride1 import _find_cost\n\nclass TestSolution(TestCase):\n    def test_find_routes(self) -> None:\n        self.assertEqual(\n            solution(\n                '10 15\\n'\n               'stockholm\\n'\n                'amsterdam\\n'\n                'london\\n'\n                'berlin\\n'\n                'copenhagen\\n'\n                'oslo\\n'\n                'helsinki\\n'\n                'dublin\\n'\n               'reykjavik\\n'\n                'brussels\\n'\n                'oslo stockholm 415\\n'\n               'stockholm helsinki 396\\n'\n                'oslo london 1153\\n'\n                'oslo copenhagen 485\\n'\n               'stockholm copenhagen 522\\n'\n                'copenhagen berlin 354\\n'\n                'copenhagen amsterdam 622\\n'\n                'helsinki berlin 1107\\n'\n                'london amsterdam 356\\n'\n                'berlin amsterdam 575\\n'\n                'london dublin 463\\n'\n               'reykjavik dublin 1498\\n'\n               'reykjavik oslo 1748\\n'\n                'london brussels 318\\n'\n                'brussels amsterdam 173\\n'\n               'stockholm amsterdam\\n'\n                'oslo london\\n'\n               'reykjavik dublin\\n'\n                'brussels helsinki\\n'\n                '',\n            ),\n            '3907',\n        )\n\n    def test_find_cost(self) -> None:\n        self.assertEqual(\n            solution(\n                '10 15\\n'\n               'stockholm\\n'\n                'amsterdam\\n'\n                'london\\n'\n                'berlin\\n'\n                'copenhagen\\n'\n                'oslo\\n'\n                'helsinki\\n'\n                'dublin\\n'\n               'reykjavik\\n'\n                'brussels\\n'\n                'oslo stockholm 415\\n'\n               'stockholm helsinki 396\\n'\n                'oslo london 1153\\n'\n                'oslo copenhagen 485\\n'\n               'stockholm copenhagen 522\\n'\n                'copenhagen berlin 354\\n'\n                'copenhagen amsterdam 622\\n'\n                'helsinki berlin 1107\\n'\n                'london amsterdam 356\\n'\n                'berlin amsterdam 575\\n'\n                'london dublin 463\\n'\n               'reykjavik dublin 1498\\n'\n               'reykjavik oslo 1748\\n'\n                'london brussels 318\\n'\n                'brussels amsterdam 173\\n'\n               'stockholm amsterdam\\n'\n                'oslo london\\n'\n               'reykjavik dublin\\n'\n                'brussels helsinki\\n'\n                '',\n            ),\n            '3907',\n        )\n\n    def test_find_routes_1(self) -> None:\n        self.assertEqual(\n            solution(\n                '10 15\\n'\n               'stockholm\\n'\n                'amsterdam\\n'\n                'london\\n'\n                'berlin\\n'\n                'copenhagen\\n'\n                'oslo\\n'\n                'helsinki\\n'\n                'dublin\\n'\n               'reykjavik\\n'\n                'brussels\\n'\n                'oslo stockholm 415\\n'\n               'stockholm helsinki 396\\n'\n                'oslo london 1153\\n'\n                'oslo copenhagen 485\\n'\n               'stockholm copenhagen 522\\n'\n                'copenhagen berlin 354\\n'\n                'copenhagen amsterdam 622\\n'\n                'helsinki berlin 1107\\n'\n                'london amsterdam 356\\n'\n                'berlin amsterdam 575\\n'\n                'london dublin 463\\n'\n               'reykjavik dublin 1498\\n'\n               'reykjavik oslo 1748\\n'\n                'london brussels 318\\n"
    },
    {
        "number": 3565,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london\nreykjavik dublin\nbrussels helsinki\n''') == '3907'\nassert solution(\n'''9 9\nab\nac\nad\nae\naf\nag\nai\nal\nam\nan\nao\nba\nbc\nbd\nbe\nbi\nbo\nca\ncc\ncd\nce\nch\nci\nco\ndo\nec\ned\nee\neg\neo\nfa\nfe\ngi\ngo\nha\nhe\nhi\nho\nia\nie\nig\nio\nla\nma\nme\nmo\nna\noa\noe\nof\noh\noi\nol\noo\npa\npe\npo\nra\nre\nro\nru\nsa\nse\nsh\nso\nsu\nti\nto\nua\nue\nug\nuj\nul\nun\nur\nwa\nye\nza\nzm\nzo\nba\nbb\nbc\nbd\nbe\nbf\nbg\nbh\nbi\nbo\nbu\nca\ncc\ncd\nce\ncf\ncg\nch\nci\nco\ncu\ncx\ncy\ncz\nde\ndi\ndj\ndk\ndo\ndv\nec\ned\nee\neg\neh\nei\nej\nel\nem\nen\neo\neu\nez\nfa\nfe\nfh\nfi\nfo\nfv\nfw\ngg\ngh\ngi\ngo\ngu\ngua\nguj\nha\nhe\nhe\nhi\nho\ni\nig\nin\nio\nip\niq\nir\nis\niu\niv\niw\nix\niz\nja\nje\njo\njr\nka\nke\nki\nko\nku\nky\nla\nle\nli\nlo\nlu\nlv\nma\nme\nmi\nmk\nmn\nmo\nmy\nna\noa\non\now\noy\npa\npe\npo\npr\nro\nru\nsa\nse\nsi\nsk\nsl\nso\nsu\nsu\nsy\nta\nte\ntj\nto\ntr\nts\ntt\nu\nua\nue\nuk\num\nus\nuz\nva\nve\nvi\nvo\nwa\nwe\nwf\nwj\nwk\nxa\nxl\nxm\nxo\nxr\nxu\nya\nye\nza\nzm\nzo\nba\nbb\nbc\nbd\nbe\nbf\nbg\nbh\nbi\nbo\nbu\nca\ncc\ncd\nce\ncf\ncg\nch\nci\nco\ncu\ncx\ncy\ncz\nde\ndi\ndj\ndk\ndo\ndv\nec\ned\nee\neg\neh\nei\nej\nel\nem\nen\neo\neu\nez\nfa\nfe\nfh\nfi\nfo\nfv\nfw\ngg\ngh\ngi\ngo\ngu\ngua\nguj\nha\nhe\nhe\nhi\nho\ni\nig\nin\nio\nip\niq\nir\nis\niu\niv\niw\nix\niz\nja\nje\njo\njr\nka\nke\nki\nko\nku\nky\nla\nle\nli\nlo\nlu\nlv\nma\nme\nmi\nmk\nmn\nmo\nmy\nna\noa\non\now\noy\npa\npe\npo\npr\nro\nru\nsa\nse\nsi\nsk\nsl\nso\nsu\nsu\nsy\nta\nte\ntj\nto\ntr\nts\ntt\nu\nua\nue\nuk\num\nus\nuz\nva\nve\nvi\nvo\nwa\nwe\nwf\nwj\nwk\nxa\nxl\nxm\nxo\nxr\nxu\nya\nye\nza\nzm\nzo\nba\nbb\nbc\nbd\nbe\nbf\nbg\nbh\nbi\nbo\nbu\nca\ncc\ncd\nce\ncf\ncg\nch\nci\nco\ncu\ncx\ncy\ncz\nde\ndi\ndj\ndk\ndo\ndv\nec\ned\nee\neg\neh\nei\nej\nel\nem\nen\neo\neu\nez\nfa\nfe\nfh\nfi\nfo\nfv\nfw\ngg\ngh\ngi\ngo\ngu\ngua\nguj\nha\nhe\nhe\nhi\nho\ni\nig\nin\nio\nip\niq\nir\nis\niu\n"
    },
    {
        "number": 3565,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london\nreykjavik dublin\nbrussels helsinki\n\"\"\") == \"3907\"\n\nassert solution(\n\"\"\"\n5 10\na\nb\nc\nd\ne\n\"\"\"\n) == \"1\"\n\nassert solution(\n\"\"\"\n5 10\na\nb\nc\nd\ne\n\"\"\"\n) == \"0\"\n\nassert solution(\n\"\"\"\n5 10\nc\nd\ne\nf\ng\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n5 10\na\nb\nc\nd\ne\nf\n\"\"\"\n) == \"3\""
    },
    {
        "number": 3565,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london\nreykjavik dublin\nbrussels helsinki\n''') == '3907'\nassert solution('''\n10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london\nreykjavik dublin\nbrussels helsinki\n''') == '1690'\nassert solution('''\n10 15\noslo\nstockholm\nlondon\nberlin\ncopenhagen\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london\nreykjavik dublin\nbrussels helsinki\n''') == '3612'\nassert solution('''\n5 5\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\n''') == '1820'\nassert solution('''\n3 10\ncopenhagen\nstockholm\noslo\n''') == '9382'\n"
    },
    {
        "number": 3565,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(sys.stdin.read()))\n"
    },
    {
        "number": 3565,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\\\n10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london\nreykjavik dublin\nbrussels helsinki\n''') == '3907'\n\nassert solution('''\\\n10 19\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london\nreykjavik dublin\nbrussels helsinki\n''') == '20232'\n\nassert solution('''\\\n10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london\nreykjavik dublin\nbrussels helsinki\n''') == '20232'\n\nassert solution('''\\\n10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london\nreykjavik dublin\nbrussels helsinki\n''') == '20232'\n\nassert solution('''\\\n10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london\nreykjavik dublin\nbrussels helsinki\n''') == '20232'"
    },
    {
        "number": 3565,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 15\\n'\n              'Stockholm\\n'\n              'Berlin\\n'\n              'Copenhagen\\n'\n              'Oslo\\n'\n              'Helsinki\\n'\n              'Dublin\\n'\n              'Reykjavik\\n'\n              'Brussels\\n'\n              'Amsterdam\\n'\n              'Oslo Stockholm 415\\n'\n              'Stockholm Helsinki 396\\n'\n              'Oslo London 1153\\n'\n              'Oslo Copenhagen 485\\n'\n              'Stockholm Copenhagen 522\\n'\n              'Copenhagen Berlin 354\\n'\n              'Copenhagen Amsterdam 622\\n'\n              'Helsinki Berlin 1107\\n'\n              'London Amsterdam 356\\n'\n              'Berlin Amsterdam 575\\n'\n              'London Dublin 463\\n'\n              'Reykjavik Dublin 1498\\n'\n              'Reykjavik Oslo 1748\\n'\n              'London Brussels 318\\n'\n              'Brussels Amsterdam 173') == '3907'\nassert solution('3 3\\n'\n                 'a\\n'\n                 'b\\n'\n                 'a\\n'\n                 'b\\n'\n                 'a\\n'\n                 'b') == '0'\nassert solution('15 5\\n'\n                 'a\\n'\n                 'b\\n'\n                 'c\\n'\n                 'a\\n'\n                 'b\\n'\n                 'c\\n'\n                 'd\\n'\n                 'a\\n'\n                 'b\\n'\n                 'c\\n'\n                 'd\\n'\n                 'e\\n'\n                 'a\\n'\n                 'b\\n'\n                 'c\\n'\n                 'd\\n'\n                 'e\\n'\n                 'f\\n'\n                 'a\\n'\n                 'b\\n'\n                 'c\\n'\n                 'd\\n'\n                 'e\\n'\n                 'f\\n'\n                 'g\\n'\n                 'a\\n'\n                 'b\\n'\n                 'c\\n'\n                 'd\\n'\n                 'e\\n'\n                 'f\\n'\n                 'g\\n'\n                 'h\\n'\n                 'a\\n'\n                 'b\\n'\n                 'c\\n'\n                 'd\\n'\n                 'e\\n'\n                 'f\\n'\n                 'g\\n'\n                 'h\\n'\n                 'i\\n'\n                 'a\\n'\n                 'b\\n'\n                 'c\\n'\n                 'd\\n'\n                 'e\\n'\n                 'f\\n'\n                 'g\\n'\n                 'h\\n'\n                 'i\\n'\n                 'j\\n'\n                 'a\\n'\n                 'b\\n'\n                 'c\\n'\n                 'd\\n'\n                 'e\\n'\n                 'f\\n'\n                 'g\\n'\n                 'h\\n'\n                 'i\\n'\n                 'j\\n'\n                 'k\\n'\n                 'a\\n'\n                 'b\\n'\n                 'c\\n'\n                 'd\\n'\n                 'e\\n'\n                 'f\\n'\n                 'g\\n'\n                 'h\\n'\n                 'i\\n'\n                 'j\\n'\n                 'k\\n'\n                 'l\\n'\n                 'a\\n'\n                 'b\\n'\n                 'c\\n'\n                 'd\\n'\n                 'e\\n'\n                 'f\\n'\n                 'g\\n'\n                 'h\\n'\n                 'i\\n'\n                 'j\\n'\n                 'k\\n'\n                 'l\\n'\n                'm\\n'\n                 'a\\n'\n                 'b\\n'\n                 'c\\n'\n                 'd\\n'\n                 'e\\n'\n                 'f\\n'\n                 'g\\n'\n                 'h\\n'\n                 'i\\n'\n                 'j\\n'\n                 'k\\n'\n                 'l\\n'\n                'm\\n'\n                 'n\\n'\n                 'a\\n'\n                 'b\\n'\n                 'c\\n'\n                 'd\\n'\n                 'e\\n'\n                 'f\\n'\n                 'g\\n'\n                 'h\\n'\n                 'i\\n'\n                 'j\\n'\n                 'k\\n'\n                 'l\\n'"
    },
    {
        "number": 3565,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london\nreykjavik dublin\nbrussels helsinki\n''') == '3907'\nassert solution('''2 10\na\nb\n1 1\na b\nb a\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n1 1\na b\nb a\n"
    },
    {
        "number": 3565,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == str(3907)\n\"\"\"\n"
    },
    {
        "number": 3566,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3566,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(open(\"test_one.txt\").read()) == open(\"test_one_gold.txt\").read()\nassert solution(open(\"test_two.txt\").read()) == open(\"test_two_gold.txt\").read()\nassert solution(open(\"test_three.txt\").read()) == open(\"test_three_gold.txt\").read()\nassert solution(open(\"test_four.txt\").read()) == open(\"test_four_gold.txt\").read()\n\n\"\"\"\n"
    },
    {
        "number": 3566,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3566,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n5 4\n3 1 3 4 2\n0 5\n0 9\n4 5\n2 1\n''') == '''\n2\n1\n2\n1\n'''\n"
    },
    {
        "number": 3566,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 4\n3 1 3 4 2\n0 5\n0 9\n4 5\n2 1''') == '''2\n1\n2\n1\n2\n1'''\nassert solution('''4 2\n3 1 3 4\n0 5\n0 9\n4 5\n2 1''') == '''1\n2\n2\n2\n1'''\nassert solution('''4 2\n3 1 3 4\n0 5\n0 9\n5 6\n3 4\n''') == '''2\n1\n1\n1\n1\n1'''\nassert solution('''6 3\n3 1 3 4 2 5\n1 9\n0 9\n2 3\n2 4\n2 5\n5 3\n''') == '''1\n1\n2\n1\n2\n1\n3\n'''\nassert solution('''6 3\n3 1 3 4 2 5\n1 9\n0 9\n2 3\n2 4\n2 5\n5 3\n''') == '''1\n2\n1\n2\n1\n2\n1\n3\n'''\n"
    },
    {
        "number": 3566,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n"
    },
    {
        "number": 3566,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output\n"
    },
    {
        "number": 3566,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 4\n3 1 3 4 2\n0 5\n0 9\n4 5\n2 1\n''') == '''2\n1\n2\n1\n'''\n\nassert solution('''2 4\n3 2 4 1\n1 2\n0 2\n1 4\n''') == '''2\n1\n2\n'''\n\nassert solution('''2 4\n3 2 4 1\n1 2\n0 2\n1 4\n''') == '''1\n1\n'''\n\nassert solution('''4 4\n3 2 4 1\n1 2\n0 2\n1 4\n''') == '''2\n1\n1\n1\n'''\n\nassert solution('''5 5\n3 2 5 4 1\n1 2\n1 1\n1 1\n1 1\n0 2\n0 3\n''') == '''1\n3\n1\n2\n2\n2\n2\n'''"
    },
    {
        "number": 3566,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output\nprint(solution(stdin))\n\"\"\""
    },
    {
        "number": 3566,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3567,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n01\\n11\\n11\\n101\\n01') == '00010'\nassert solution('2\\n11111\\n11111\\n11111\\n11111\\n11111') == '0101010101010101'\nassert solution('4\\n11111\\n11111\\n11111\\n11111\\n11111\\n11111\\n11111\\n11111\\n11111\\n11111\\n11111') == '11111111111111'\nassert solution('5\\n11111\\n11111\\n11111\\n11111\\n11111\\n11111\\n11111\\n11111\\n11111\\n11111\\n11111\\n11111') == '0101010101010101010101010101'\nassert solution('6\\n11111\\n11111\\n11111\\n11111\\n11111\\n11111\\n11111\\n11111\\n11111\\n11111\\n11111\\n11111\\n11111') == '0101010101010101010101010101010101010101'\n"
    },
    {
        "number": 3567,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 5\n01001\n11100\n10111''') == '00010'\n\nassert solution('''3 2\n10101\n10101\n''') == '11110'\n\nassert solution('''3 4\n1111\n0000\n1111\n''') == '11110'\n\nassert solution('''2 1\n1111\n0000\n''') == '1'\n\nassert solution('''1 2\n0\n''') == '1'"
    },
    {
        "number": 3567,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 5\n01001\n11100\n10111''') == '00010'\nassert solution('''2 3\n00100\n01010''') == '00010'\nassert solution('''3 4\n00110\n01100\n11110\n1111''') == '00001'\nassert solution('''3 4\n10010\n01010\n10010\n10010''') == '00011'\nassert solution('''4 6\n01001\n11100\n10111\n1111\n00001''') == '00010'\n"
    },
    {
        "number": 3567,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3567,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"0001\"\nassert solution(\"2 3\\n11111\\n01001\") == \"0001\"\n\nassert solution(\"5 3\\n00010\\n00001\\n11111\\n01010\\n01011\") == \"01010\"\nassert solution(\"5 3\\n01010\\n01011\\n11111\\n00010\\n00001\") == \"01010\"\n\nassert solution(\"7 5\\n00010\\n11100\\n10111\\n01010\\n01011\\n11110\\n00111\\n01100\") == \"01100\"\n"
    },
    {
        "number": 3567,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 0\\n1 0\\n0 1\\n0 0\\n') == '000'\nassert solution('0 0\\n0 0\\n1 0\\n0 1\\n') == '0000'\nassert solution('0 0\\n0 1\\n0 0\\n1 0\\n0 1\\n') == '0001'\nassert solution('0 0\\n0 1\\n1 0\\n0 0\\n') == '0011'\nassert solution('0 0\\n0 1\\n1 0\\n0 0\\n') == '0010'\n"
    },
    {
        "number": 3567,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n0''') == '101111'\nassert solution('''2\n1\n1\n1\n1\n1\n1\n0\n1\n1\n1\n0\n1\n0\n1\n1\n0\n1\n1\n0\n1\n0''') == '000101'\nassert solution('''3\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n1\n1\n0\n1\n1\n1\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n1\n0\n1\n1\n0\n1\n0\n1\n0\n1\n1\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n1\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n1\n1\n1\n1\n0\n1\n1\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 3567,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 5\\n01001\\n11100\\n10111') == '00010'\nassert solution('2 5\\n0111') == '0111'\nassert solution('2 3\\n11') == '11'\nassert solution('2 4\\n00011') == '00101'\nassert solution('3 4\\n00001') == '00101'\n"
    },
    {
        "number": 3567,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 5\n01001\n11100\n10111''') == '00010'\nassert solution('''3 5\n11111\n11111\n00000''') == '00001'\nassert solution('''4 4\n00001\n00001\n00001\n00001''') == '00100'\nassert solution('''4 4\n00000\n00000\n00000\n00000''') == '00101'\nassert solution('''4 4\n11111\n00000\n00000\n00000''') == '00100'\n"
    },
    {
        "number": 3567,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 3568,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n6 2\\n0 4\\n6 12') == 'possible'\nassert solution('2\\n6 1\\n0 2\\n6 10') == 'possible'\nassert solution('1\\n2 1\\n0 2\\n6 10') == 'impossible'\nassert solution('2\\n2 2\\n0 2\\n6 10') == 'impossible'\nassert solution('2\\n6 1\\n0 2\\n6 10') == 'possible'\n"
    },
    {
        "number": 3568,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == \"possible\"\nprint(solution(input))\n'''\n"
    },
    {
        "number": 3568,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"impossible\"\nassert solution(\"1\") == \"impossible\"\nassert solution(\"1 2\") == \"impossible\"\nassert solution(\"2 2\") == \"impossible\"\nassert solution(\"1 2 3\") == \"impossible\"\n"
    },
    {
        "number": 3568,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 'possible'\nassert solution('1') == 'possible'\nassert solution('2') == 'possible'\nassert solution('1 2') == 'possible'\nassert solution('1 2 3') == 'possible'\n"
    },
    {
        "number": 3568,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''0\n3 2\n4 6\n6 12\n''') == 'possible'\n\nassert solution('''0\n3 2\n4 6\n3 8\n''') == 'impossible'\n\nassert solution('''0\n3 2\n4 6\n5 8\n''') == 'possible'\n\nassert solution('''0\n3 2\n4 6\n5 8\n6 10\n''') == 'possible'\n\nassert solution('''0\n4 1\n6 2\n8 4\n10 3\n''') == 'possible'"
    },
    {
        "number": 3568,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'possible'\nassert stdin == '1\\n6 2\\n0 4\\n6 12\\n'\nassert solution(stdin) == 'impossible'\nassert stdin == '3\\n10 3\\n0 6\\n4 5\\n'\nassert solution(stdin) == 'impossible'\n"
    },
    {
        "number": 3568,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n0\\n1\\n1\\n1\\n1') == 'possible'\nassert solution('1\\n1\\n1\\n1\\n1\\n1') == 'impossible'\nassert solution('2\\n1\\n1\\n1\\n1\\n1') == 'impossible'\nassert solution('3\\n1\\n1\\n1\\n1\\n1') == 'impossible'\nassert solution('4\\n1\\n1\\n1\\n1\\n1') == 'impossible'\n"
    },
    {
        "number": 3568,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1\n6 2\n0 4\n6 12\n''') == 'possible'\nassert solution('''1\n6 2\n0 4\n6 12\n''') == 'impossible'\n'''\nassert solution('''5\n5 4\n0 2\n6 1\n0 2\n3 2\n''') == 'impossible'\n\nassert solution('''5\n5 4\n0 2\n6 1\n0 2\n3 2\n''') == 'possible'\nassert solution('''5\n5 4\n0 2\n6 1\n0 2\n3 2\n''') == 'possible'\n"
    },
    {
        "number": 3568,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'possible'\nassert solution(stdin) == 'impossible'\n\n-----Example-----\n1\n3 2\n0 4\n2 4\n1 2\n5 4\nSample Output:\npossible\n\"\"\"\n"
    },
    {
        "number": 3568,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0\\n6\\n2\\n0\\n4\\n6\\n12') == 'possible'\nassert solution('1\\n6\\n2\\n0\\n4\\n6\\n12') == 'impossible'\nassert solution('1\\n6\\n2\\n0\\n4\\n6\\n12') == 'possible'\nassert solution('2\\n6\\n2\\n0\\n4\\n6\\n12') == 'impossible'\nassert solution('2\\n6\\n2\\n0\\n4\\n6\\n12') == 'possible'\n"
    }
]